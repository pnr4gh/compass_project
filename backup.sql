/*M!999999\- enable the sandbox mode */ 
-- MariaDB dump 10.19  Distrib 10.6.22-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: 127.0.0.1    Database: compass
-- ------------------------------------------------------
-- Server version	10.6.22-MariaDB-0ubuntu0.22.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `accolades_accolade`
--

DROP TABLE IF EXISTS `accolades_accolade`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `accolades_accolade` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `content` longtext NOT NULL,
  `skills` varchar(255) NOT NULL,
  `date` date NOT NULL,
  `post_datetime` datetime(6) NOT NULL,
  `posted_by_id` int(11) NOT NULL,
  `organization_id` bigint(20) NOT NULL,
  `outcome_id` bigint(20) NOT NULL,
  `scope_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `accolades_accolade_posted_by_id_0c3e0f4e_fk_auth_user_id` (`posted_by_id`),
  KEY `accolades_accolade_organization_id_96fc9520_fk_accolades` (`organization_id`),
  KEY `accolades_accolade_outcome_id_e3133723_fk_accolades_outcome_id` (`outcome_id`),
  KEY `accolades_accolade_scope_id_03a7c053_fk_accolades_scope_id` (`scope_id`),
  CONSTRAINT `accolades_accolade_organization_id_96fc9520_fk_accolades` FOREIGN KEY (`organization_id`) REFERENCES `accolades_organization` (`id`),
  CONSTRAINT `accolades_accolade_outcome_id_e3133723_fk_accolades_outcome_id` FOREIGN KEY (`outcome_id`) REFERENCES `accolades_outcome` (`id`),
  CONSTRAINT `accolades_accolade_posted_by_id_0c3e0f4e_fk_auth_user_id` FOREIGN KEY (`posted_by_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `accolades_accolade_scope_id_03a7c053_fk_accolades_scope_id` FOREIGN KEY (`scope_id`) REFERENCES `accolades_scope` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accolades_accolade`
--

LOCK TABLES `accolades_accolade` WRITE;
/*!40000 ALTER TABLE `accolades_accolade` DISABLE KEYS */;
/*!40000 ALTER TABLE `accolades_accolade` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accolades_accoladelike`
--

DROP TABLE IF EXISTS `accolades_accoladelike`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `accolades_accoladelike` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `timestamp` datetime(6) NOT NULL,
  `accolade_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `accolades_accoladelike_user_id_accolade_id_2fc5a7b1_uniq` (`user_id`,`accolade_id`),
  KEY `accolades_accoladeli_accolade_id_2a49c3e1_fk_accolades` (`accolade_id`),
  CONSTRAINT `accolades_accoladeli_accolade_id_2a49c3e1_fk_accolades` FOREIGN KEY (`accolade_id`) REFERENCES `accolades_accolade` (`id`),
  CONSTRAINT `accolades_accoladelike_user_id_3bbb191a_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accolades_accoladelike`
--

LOCK TABLES `accolades_accoladelike` WRITE;
/*!40000 ALTER TABLE `accolades_accoladelike` DISABLE KEYS */;
/*!40000 ALTER TABLE `accolades_accoladelike` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accolades_organization`
--

DROP TABLE IF EXISTS `accolades_organization`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `accolades_organization` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(125) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accolades_organization`
--

LOCK TABLES `accolades_organization` WRITE;
/*!40000 ALTER TABLE `accolades_organization` DISABLE KEYS */;
INSERT INTO `accolades_organization` VALUES (1,'xvvzv');
/*!40000 ALTER TABLE `accolades_organization` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accolades_outcome`
--

DROP TABLE IF EXISTS `accolades_outcome`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `accolades_outcome` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(125) NOT NULL,
  `score` varchar(125) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accolades_outcome`
--

LOCK TABLES `accolades_outcome` WRITE;
/*!40000 ALTER TABLE `accolades_outcome` DISABLE KEYS */;
INSERT INTO `accolades_outcome` VALUES (1,'xvvx','xzvxzv');
/*!40000 ALTER TABLE `accolades_outcome` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `accolades_scope`
--

DROP TABLE IF EXISTS `accolades_scope`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `accolades_scope` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `scope` varchar(125) NOT NULL,
  `score` varchar(125) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accolades_scope`
--

LOCK TABLES `accolades_scope` WRITE;
/*!40000 ALTER TABLE `accolades_scope` DISABLE KEYS */;
INSERT INTO `accolades_scope` VALUES (1,'xvxcv','xzvzxv');
/*!40000 ALTER TABLE `accolades_scope` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_attempt`
--

DROP TABLE IF EXISTS `aura_attempt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_attempt` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `score` int(11) NOT NULL,
  `date` datetime(6) NOT NULL,
  `attemptNo` int(11) NOT NULL,
  `user_id` int(11) NOT NULL,
  `quiz_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_attempt_user_id_db4e3438_fk_auth_user_id` (`user_id`),
  KEY `aura_attempt_quiz_id_dac743c8_fk_aura_quiz_id` (`quiz_id`),
  CONSTRAINT `aura_attempt_quiz_id_dac743c8_fk_aura_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `aura_quiz` (`id`),
  CONSTRAINT `aura_attempt_user_id_db4e3438_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_attempt`
--

LOCK TABLES `aura_attempt` WRITE;
/*!40000 ALTER TABLE `aura_attempt` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_attempt` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_option`
--

DROP TABLE IF EXISTS `aura_option`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_option` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` longtext NOT NULL,
  `value` int(11) NOT NULL,
  `question_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_option_question_id_eacf0554_fk_aura_question_id` (`question_id`),
  CONSTRAINT `aura_option_question_id_eacf0554_fk_aura_question_id` FOREIGN KEY (`question_id`) REFERENCES `aura_question` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_option`
--

LOCK TABLES `aura_option` WRITE;
/*!40000 ALTER TABLE `aura_option` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_option` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_question`
--

DROP TABLE IF EXISTS `aura_question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_question` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(225) NOT NULL,
  `description` longtext NOT NULL,
  `answer_description` varchar(500) DEFAULT NULL,
  `camp_category` varchar(1) DEFAULT NULL,
  `is_practice` tinyint(1) NOT NULL,
  `skill_id` bigint(20) NOT NULL,
  `tags_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_question_skill_id_5ce9e675_fk_aura_skill_id` (`skill_id`),
  KEY `aura_question_tags_id_80007a18_fk_aura_tags_id` (`tags_id`),
  CONSTRAINT `aura_question_skill_id_5ce9e675_fk_aura_skill_id` FOREIGN KEY (`skill_id`) REFERENCES `aura_skill` (`id`),
  CONSTRAINT `aura_question_tags_id_80007a18_fk_aura_tags_id` FOREIGN KEY (`tags_id`) REFERENCES `aura_tags` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_question`
--

LOCK TABLES `aura_question` WRITE;
/*!40000 ALTER TABLE `aura_question` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_quiz`
--

DROP TABLE IF EXISTS `aura_quiz`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_quiz` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  `openDate` date NOT NULL,
  `closeDate` date DEFAULT NULL,
  `maxMarks` int(11) DEFAULT NULL,
  `isActive` tinyint(1) NOT NULL,
  `noOfAttempts` int(11) DEFAULT NULL,
  `noOfQuestions` int(11) DEFAULT NULL,
  `is_practice` tinyint(1) NOT NULL,
  `skill_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_quiz_skill_id_0f3ad560_fk_aura_skill_id` (`skill_id`),
  CONSTRAINT `aura_quiz_skill_id_0f3ad560_fk_aura_skill_id` FOREIGN KEY (`skill_id`) REFERENCES `aura_skill` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_quiz`
--

LOCK TABLES `aura_quiz` WRITE;
/*!40000 ALTER TABLE `aura_quiz` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_quiz` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_quiz_tags`
--

DROP TABLE IF EXISTS `aura_quiz_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_quiz_tags` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `quiz_id` bigint(20) NOT NULL,
  `tags_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `aura_quiz_tags_quiz_id_tags_id_57b08c77_uniq` (`quiz_id`,`tags_id`),
  KEY `aura_quiz_tags_tags_id_9c03b805_fk_aura_tags_id` (`tags_id`),
  CONSTRAINT `aura_quiz_tags_quiz_id_a0fcb857_fk_aura_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `aura_quiz` (`id`),
  CONSTRAINT `aura_quiz_tags_tags_id_9c03b805_fk_aura_tags_id` FOREIGN KEY (`tags_id`) REFERENCES `aura_tags` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_quiz_tags`
--

LOCK TABLES `aura_quiz_tags` WRITE;
/*!40000 ALTER TABLE `aura_quiz_tags` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_quiz_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_response`
--

DROP TABLE IF EXISTS `aura_response`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_response` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `Attempt_id` bigint(20) DEFAULT NULL,
  `Option_id` bigint(20) NOT NULL,
  `Question_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  `user_score_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_response_Attempt_id_79bd5f4a_fk_aura_attempt_id` (`Attempt_id`),
  KEY `aura_response_Option_id_0604fa1a_fk_aura_option_id` (`Option_id`),
  KEY `aura_response_Question_id_77802fba_fk_aura_question_id` (`Question_id`),
  KEY `aura_response_user_id_aec48545_fk_auth_user_id` (`user_id`),
  KEY `aura_response_user_score_id_7a301332_fk_aura_user_score_id` (`user_score_id`),
  CONSTRAINT `aura_response_Attempt_id_79bd5f4a_fk_aura_attempt_id` FOREIGN KEY (`Attempt_id`) REFERENCES `aura_attempt` (`id`),
  CONSTRAINT `aura_response_Option_id_0604fa1a_fk_aura_option_id` FOREIGN KEY (`Option_id`) REFERENCES `aura_option` (`id`),
  CONSTRAINT `aura_response_Question_id_77802fba_fk_aura_question_id` FOREIGN KEY (`Question_id`) REFERENCES `aura_question` (`id`),
  CONSTRAINT `aura_response_user_id_aec48545_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`),
  CONSTRAINT `aura_response_user_score_id_7a301332_fk_aura_user_score_id` FOREIGN KEY (`user_score_id`) REFERENCES `aura_user_score` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_response`
--

LOCK TABLES `aura_response` WRITE;
/*!40000 ALTER TABLE `aura_response` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_response` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_skill`
--

DROP TABLE IF EXISTS `aura_skill`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_skill` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `skill` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_skill`
--

LOCK TABLES `aura_skill` WRITE;
/*!40000 ALTER TABLE `aura_skill` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_skill` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_tags`
--

DROP TABLE IF EXISTS `aura_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_tags` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `tag` varchar(256) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_tags`
--

LOCK TABLES `aura_tags` WRITE;
/*!40000 ALTER TABLE `aura_tags` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `aura_user_score`
--

DROP TABLE IF EXISTS `aura_user_score`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `aura_user_score` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_score` varchar(4) NOT NULL,
  `date` datetime(6) DEFAULT NULL,
  `quiz_id` bigint(20) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `aura_user_score_quiz_id_899dc2ac_fk_aura_quiz_id` (`quiz_id`),
  KEY `aura_user_score_user_id_d4b88448_fk_auth_user_id` (`user_id`),
  CONSTRAINT `aura_user_score_quiz_id_899dc2ac_fk_aura_quiz_id` FOREIGN KEY (`quiz_id`) REFERENCES `aura_quiz` (`id`),
  CONSTRAINT `aura_user_score_user_id_d4b88448_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `aura_user_score`
--

LOCK TABLES `aura_user_score` WRITE;
/*!40000 ALTER TABLE `aura_user_score` DISABLE KEYS */;
/*!40000 ALTER TABLE `aura_user_score` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(150) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
INSERT INTO `auth_group` VALUES (1,'coordinator');
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=189 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can view log entry',1,'view_logentry'),(5,'Can add permission',2,'add_permission'),(6,'Can change permission',2,'change_permission'),(7,'Can delete permission',2,'delete_permission'),(8,'Can view permission',2,'view_permission'),(9,'Can add group',3,'add_group'),(10,'Can change group',3,'change_group'),(11,'Can delete group',3,'delete_group'),(12,'Can view group',3,'view_group'),(13,'Can add user',4,'add_user'),(14,'Can change user',4,'change_user'),(15,'Can delete user',4,'delete_user'),(16,'Can view user',4,'view_user'),(17,'Can add content type',5,'add_contenttype'),(18,'Can change content type',5,'change_contenttype'),(19,'Can delete content type',5,'delete_contenttype'),(20,'Can view content type',5,'view_contenttype'),(21,'Can add session',6,'add_session'),(22,'Can change session',6,'change_session'),(23,'Can delete session',6,'delete_session'),(24,'Can view session',6,'view_session'),(25,'Can add batch',7,'add_batch'),(26,'Can change batch',7,'change_batch'),(27,'Can delete batch',7,'delete_batch'),(28,'Can view batch',7,'view_batch'),(29,'Can add complexity',8,'add_complexity'),(30,'Can change complexity',8,'change_complexity'),(31,'Can delete complexity',8,'delete_complexity'),(32,'Can view complexity',8,'view_complexity'),(33,'Can add course',9,'add_course'),(34,'Can change course',9,'change_course'),(35,'Can delete course',9,'delete_course'),(36,'Can view course',9,'view_course'),(37,'Can add department',10,'add_department'),(38,'Can change department',10,'change_department'),(39,'Can delete department',10,'delete_department'),(40,'Can view department',10,'view_department'),(41,'Can add institution',11,'add_institution'),(42,'Can change institution',11,'change_institution'),(43,'Can delete institution',11,'delete_institution'),(44,'Can view institution',11,'view_institution'),(45,'Can add platform',12,'add_platform'),(46,'Can change platform',12,'change_platform'),(47,'Can delete platform',12,'delete_platform'),(48,'Can view platform',12,'view_platform'),(49,'Can add tags',13,'add_tags'),(50,'Can change tags',13,'change_tags'),(51,'Can delete tags',13,'delete_tags'),(52,'Can view tags',13,'view_tags'),(53,'Can add assignment',14,'add_assignment'),(54,'Can change assignment',14,'change_assignment'),(55,'Can delete assignment',14,'delete_assignment'),(56,'Can view assignment',14,'view_assignment'),(57,'Can add course_ coordinator',15,'add_course_coordinator'),(58,'Can change course_ coordinator',15,'change_course_coordinator'),(59,'Can delete course_ coordinator',15,'delete_course_coordinator'),(60,'Can view course_ coordinator',15,'view_course_coordinator'),(61,'Can add course_ enrollement',16,'add_course_enrollement'),(62,'Can change course_ enrollement',16,'change_course_enrollement'),(63,'Can delete course_ enrollement',16,'delete_course_enrollement'),(64,'Can view course_ enrollement',16,'view_course_enrollement'),(65,'Can add problem',17,'add_problem'),(66,'Can change problem',17,'change_problem'),(67,'Can delete problem',17,'delete_problem'),(68,'Can view problem',17,'view_problem'),(69,'Can add assignment_ problems',18,'add_assignment_problems'),(70,'Can change assignment_ problems',18,'change_assignment_problems'),(71,'Can delete assignment_ problems',18,'delete_assignment_problems'),(72,'Can view assignment_ problems',18,'view_assignment_problems'),(73,'Can add profile',19,'add_profile'),(74,'Can change profile',19,'change_profile'),(75,'Can delete profile',19,'delete_profile'),(76,'Can view profile',19,'view_profile'),(77,'Can add solved_ problem',20,'add_solved_problem'),(78,'Can change solved_ problem',20,'change_solved_problem'),(79,'Can delete solved_ problem',20,'delete_solved_problem'),(80,'Can view solved_ problem',20,'view_solved_problem'),(81,'Can add problem tags',21,'add_problemtags'),(82,'Can change problem tags',21,'change_problemtags'),(83,'Can delete problem tags',21,'delete_problemtags'),(84,'Can view problem tags',21,'view_problemtags'),(85,'Can add user_ handle',22,'add_user_handle'),(86,'Can change user_ handle',22,'change_user_handle'),(87,'Can delete user_ handle',22,'delete_user_handle'),(88,'Can view user_ handle',22,'view_user_handle'),(89,'Can add problem type',23,'add_problemtype'),(90,'Can change problem type',23,'change_problemtype'),(91,'Can delete problem type',23,'delete_problemtype'),(92,'Can view problem type',23,'view_problemtype'),(93,'Can add problem stats',24,'add_problemstats'),(94,'Can change problem stats',24,'change_problemstats'),(95,'Can delete problem stats',24,'delete_problemstats'),(96,'Can view problem stats',24,'view_problemstats'),(97,'Can add contest',25,'add_contest'),(98,'Can change contest',25,'change_contest'),(99,'Can delete contest',25,'delete_contest'),(100,'Can view contest',25,'view_contest'),(101,'Can add discussion',26,'add_discussion'),(102,'Can change discussion',26,'change_discussion'),(103,'Can delete discussion',26,'delete_discussion'),(104,'Can view discussion',26,'view_discussion'),(105,'Can add discussion_detail',27,'add_discussion_detail'),(106,'Can change discussion_detail',27,'change_discussion_detail'),(107,'Can delete discussion_detail',27,'delete_discussion_detail'),(108,'Can view discussion_detail',27,'view_discussion_detail'),(109,'Can add company',28,'add_company'),(110,'Can change company',28,'change_company'),(111,'Can delete company',28,'delete_company'),(112,'Can view company',28,'view_company'),(113,'Can add skill',29,'add_skill'),(114,'Can change skill',29,'change_skill'),(115,'Can delete skill',29,'delete_skill'),(116,'Can view skill',29,'view_skill'),(117,'Can add job role',30,'add_jobrole'),(118,'Can change job role',30,'change_jobrole'),(119,'Can delete job role',30,'delete_jobrole'),(120,'Can view job role',30,'view_jobrole'),(121,'Can add interview process',31,'add_interviewprocess'),(122,'Can change interview process',31,'change_interviewprocess'),(123,'Can delete interview process',31,'delete_interviewprocess'),(124,'Can view interview process',31,'view_interviewprocess'),(125,'Can add round_ skills',32,'add_round_skills'),(126,'Can change round_ skills',32,'change_round_skills'),(127,'Can delete round_ skills',32,'delete_round_skills'),(128,'Can view round_ skills',32,'view_round_skills'),(129,'Can add round_ skill_ detail',33,'add_round_skill_detail'),(130,'Can change round_ skill_ detail',33,'change_round_skill_detail'),(131,'Can delete round_ skill_ detail',33,'delete_round_skill_detail'),(132,'Can view round_ skill_ detail',33,'view_round_skill_detail'),(133,'Can add salary band',34,'add_salaryband'),(134,'Can change salary band',34,'change_salaryband'),(135,'Can delete salary band',34,'delete_salaryband'),(136,'Can view salary band',34,'view_salaryband'),(137,'Can add question',35,'add_question'),(138,'Can change question',35,'change_question'),(139,'Can delete question',35,'delete_question'),(140,'Can view question',35,'view_question'),(141,'Can add quiz',36,'add_quiz'),(142,'Can change quiz',36,'change_quiz'),(143,'Can delete quiz',36,'delete_quiz'),(144,'Can view quiz',36,'view_quiz'),(145,'Can add skill',37,'add_skill'),(146,'Can change skill',37,'change_skill'),(147,'Can delete skill',37,'delete_skill'),(148,'Can view skill',37,'view_skill'),(149,'Can add tags',38,'add_tags'),(150,'Can change tags',38,'change_tags'),(151,'Can delete tags',38,'delete_tags'),(152,'Can view tags',38,'view_tags'),(153,'Can add option',39,'add_option'),(154,'Can change option',39,'change_option'),(155,'Can delete option',39,'delete_option'),(156,'Can view option',39,'view_option'),(157,'Can add attempt',40,'add_attempt'),(158,'Can change attempt',40,'change_attempt'),(159,'Can delete attempt',40,'delete_attempt'),(160,'Can view attempt',40,'view_attempt'),(161,'Can add user_ score',41,'add_user_score'),(162,'Can change user_ score',41,'change_user_score'),(163,'Can delete user_ score',41,'delete_user_score'),(164,'Can view user_ score',41,'view_user_score'),(165,'Can add response',42,'add_response'),(166,'Can change response',42,'change_response'),(167,'Can delete response',42,'delete_response'),(168,'Can view response',42,'view_response'),(169,'Can add scope',43,'add_scope'),(170,'Can change scope',43,'change_scope'),(171,'Can delete scope',43,'delete_scope'),(172,'Can view scope',43,'view_scope'),(173,'Can add organization',44,'add_organization'),(174,'Can change organization',44,'change_organization'),(175,'Can delete organization',44,'delete_organization'),(176,'Can view organization',44,'view_organization'),(177,'Can add accolade like',45,'add_accoladelike'),(178,'Can change accolade like',45,'change_accoladelike'),(179,'Can delete accolade like',45,'delete_accoladelike'),(180,'Can view accolade like',45,'view_accoladelike'),(181,'Can add accolade',46,'add_accolade'),(182,'Can change accolade',46,'change_accolade'),(183,'Can delete accolade',46,'delete_accolade'),(184,'Can view accolade',46,'view_accolade'),(185,'Can add outcome',47,'add_outcome'),(186,'Can change outcome',47,'change_outcome'),(187,'Can delete outcome',47,'delete_outcome'),(188,'Can view outcome',47,'view_outcome');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(150) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=376 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$870000$8zdHpTBNJUla3OIjLQgBSy$FVKIR48b1Vy4l9kff37e4T0U5fvu6jYFy7E5XHD1D8g=','2025-01-08 09:42:26.000000',1,'admin','Ramesh','P N','pnr.cse@karpagamtech.ac.in',1,1,'2025-01-08 09:41:55.000000'),(5,'pbkdf2_sha256$870000$V5pFiQ5nBlZqqs81PiACIM$qsjKcrIcsstTa59PxyJqFwFK9DD9Qii98DQyACQFN7Y=','2025-04-02 04:10:25.216652',0,'21ecb28','','','',0,1,'2025-01-10 16:33:28.577193'),(6,'pbkdf2_sha256$870000$PhxokIZX3FsBA2x2R9jh5y$MW1OEnMYTtN7hw32CHWmY3QJCKGLfdXe0aFzVwefAqs=','2025-05-21 03:05:48.369689',1,'compass','Ramesh','P','pnr.cse@karpagamtech.ac.in',1,1,'2025-03-24 09:51:42.000000'),(8,'pbkdf2_sha256$870000$Z5X6H1FkAtjSQFW2y0LDLo$xFOgLcBR/bLjZmvr8QrLXAjJ4v0NySMky/xpds2AEvo=','2025-03-28 11:50:17.868399',0,'sumith','','','sumithp.2004@gmail.com',0,1,'2025-03-24 11:40:14.057278'),(9,'pbkdf2_sha256$870000$CMnmVwoN5eSJdbIXSKkvWc$nDB1dGdBVCqj6Tn+HHWJhhoX3ahzCLyLMaNIuo8MNWE=','2025-03-25 09:27:57.109667',0,'21ecb44','','','21ecb44@karpagamtech.ac.in',0,1,'2025-03-25 09:27:54.571975'),(10,'pbkdf2_sha256$870000$spyC34Vl0RKYSfpQKj8Fzj$b7IDrPEzBmHyHniZod7VJVFVwPT5XExBqRcU7U7fI6E=','2025-03-25 09:30:14.227962',0,'21ecb43','','','21ecb43@karpagamtech.ac.in',0,1,'2025-03-25 09:30:11.437469'),(11,'pbkdf2_sha256$870000$PK0c7ZuVI9RR4a8TnjDSbN$viq0LasPALCJMlM7h/OHkXZ7l4Q9d82EhcOYxJOg+eY=','2025-04-03 11:16:31.482810',0,'sam','','','artistsumith2004@gmail.com',0,1,'2025-04-03 11:16:28.927341'),(12,'pbkdf2_sha256$870000$qYlq3KbUpi5TMQHSIe2z2B$4j1IMluVcOE2CfgZYi6agjJlj9uVuDeK7nRXVAvtzAs=','2025-05-05 03:44:17.000000',0,'22eca41','Jeevanand','V','jeevanandv63@gmail.com',0,1,'2025-05-05 03:44:14.000000'),(13,'pbkdf2_sha256$870000$r65OsGJD7saaKZFVTojrAw$fdG5oe0R9CBuwheTBPPolisjOYj8ZaWNLhaGG/QFgFI=','2025-05-06 10:52:50.409324',0,'22ada57','Velliyangiri','P','giriperiyasamy07@gmail.com',0,1,'2025-05-05 03:47:46.000000'),(14,'pbkdf2_sha256$870000$8xlc5YdYGdykkuGWidzvFq$V+jVAosyj1SSctiYtT/B32d1JQ+fp2n+yfbV/hEYzLY=','2025-05-05 04:04:03.000000',0,'22ita40','Praveenkumar','S','kumarpraveen97917@gmail.com',0,1,'2025-05-05 03:53:16.000000'),(15,'pbkdf2_sha256$870000$9hYMcqbEmAZJ0GF3PObY11$foPoWjDZeE3Zp1C2NTlQ2VXG/pIfhTSc/y1Icrgsmic=','2025-05-05 15:52:21.097863',0,'22ita42','Raghav','E','raghavelumalai@gmail.com',0,1,'2025-05-05 03:55:42.000000'),(16,'pbkdf2_sha256$870000$NH6WSa07J5obEkGI1i4UpT$7exHhbM3LIH2/Wp6qNGXzIUbTE0XRpgp9LUL7DUNu1M=','2025-05-05 04:08:53.000000',0,'22ada34','Nandana','D','22ada34@karpagamtech.ac.in',0,1,'2025-05-05 03:59:39.000000'),(17,'pbkdf2_sha256$870000$N7B7ecrJcWJa0gKjHzomah$81j/e2Nd3fV0uzAPB6ru7/AqUCaPGSMRgNb8hcXEIlM=','2025-05-05 10:49:53.985008',0,'22ita36','Pandiyan','P','pandiyanpalani37@gmail.com',0,1,'2025-05-05 03:59:46.832238'),(18,'pbkdf2_sha256$870000$sZnbagyo2mOzJ66khZ23ZU$8TgWcvk75fQAMacHd4BSd1CsA3lvLKIxKL8aCqL81O8=','2025-05-05 04:02:56.000000',0,'22ita60','Vidhya Sri','S','vidhyask48@gmail.com',0,1,'2025-05-05 04:02:54.000000'),(19,'pbkdf2_sha256$870000$K7WggDjJmhsRahsDDydMbL$reJWsWzv1FLMZSM8YXR9ENPjZfWT/qCcwSIzQB1Ikrw=','2025-05-06 05:32:36.133014',0,'22eca53','Lakshya','S','22eca53@karpagamtech.ac.in',0,1,'2025-05-05 04:08:00.000000'),(20,'pbkdf2_sha256$870000$MkoaHXiSBQdli4Putxb8Ze$wGqDNr7vx5ifK+24PYiGXTS+clALm+njARi0EO21q+U=','2025-05-05 04:10:29.000000',0,'22ada42','','','srajeshrajesh607@gmail.com',0,1,'2025-05-05 04:10:26.000000'),(21,'pbkdf2_sha256$870000$PIjMv0GWXs5caY9SRbLNNN$VEnSXxd85DFKJUzchsIZkjHgm8HCFCelfVMgbr1IOnE=','2025-05-05 12:33:22.814895',0,'22ada32','Muralidharan','S','muralidharan1708@gmail.com',0,1,'2025-05-05 04:12:09.000000'),(22,'pbkdf2_sha256$870000$dlhC2QdAvJu70bsMjpaqfl$QfQsqo0hodqEhmpBaSNMaImpQCKwileQRFT38ONfv18=','2025-05-05 04:12:25.000000',0,'22ada43','','','ravipraveen126@gmail.com',0,1,'2025-05-05 04:12:23.000000'),(23,'pbkdf2_sha256$870000$pIGZ0mZOYkoF6RGWSnXd9q$Y1ql2zOxRt/Hn3U8P4m+lDoMZ5l7sjaLzqsbemYeqJA=','2025-05-05 04:15:28.000000',0,'22ada36','Naveen','Kumar R','naveenkumarraja45@gmail.com',0,1,'2025-05-05 04:15:25.000000'),(24,'pbkdf2_sha256$870000$XygPoLwKvYEUfDjWQyvCYk$fpTYt47MaDkrKMkad38T86SMvgciXOKP8YxgVR3mhs4=','2025-05-05 13:25:33.018374',0,'22eca43','Kanishkar','V','kanishvijay2005@gmail.com',0,1,'2025-05-05 04:16:33.000000'),(25,'pbkdf2_sha256$870000$MmCTuqyeRq58llnVJFqjr0$9fzZM2dagAjdVk6vTvEo39fmKuXzSPSixQLZDncZM4s=','2025-05-05 13:18:26.776214',0,'22eca56','Mahendran','K','mahimahendran930@gmail.com',0,1,'2025-05-05 04:28:14.000000'),(26,'pbkdf2_sha256$870000$S9wdhysi4Zf99saLihne3M$m7mcM6gUMsQIebx/UOuC3/ElB7Kw3AmRO7z7yruxYxc=','2025-05-05 04:42:21.662424',0,'Lokesh9677','','','loganadan9677@gmail.com',0,1,'2025-05-05 04:42:19.620766'),(27,'pbkdf2_sha256$870000$pxPoBP1jmq8Z6pnTlXY5BI$WCUzVe7OvUtGdKEMPh1NhTnoyS3JwRQ0SPNsrdJmJbk=','2025-05-08 04:28:44.420806',0,'22ecb08','Mugesh','A','anbazhaganmugesh@gmail.com',0,1,'2025-05-05 04:42:59.000000'),(28,'pbkdf2_sha256$870000$GED8trHGsePH0SexbEH4Bk$huFQnlWG7Hqtn856OQWpYlcGvhYqRGnq4cBOxitVf3s=','2025-05-09 16:56:37.438592',0,'22ecb10','Naseer Ahmed','S','ikbennaseer@gmail.com',0,1,'2025-05-05 04:43:48.000000'),(29,'pbkdf2_sha256$870000$5uRTKjiL4YLC7neVdVJuaY$n6qIwYi4yYTyx0tvlMXSVzixX6xESrUkjmkz9KAyLjk=','2025-05-05 04:52:49.000000',0,'22ita48','','','22ita48@karpagamtech.ac.in',0,1,'2025-05-05 04:52:47.000000'),(30,'pbkdf2_sha256$870000$fnKmNt8HpEGLwmJfqr2fKN$B8dRGnVAcrEBegbaiurpGpJlbEmJxHfIBWSXV6zCeK0=','2025-05-05 09:37:54.334596',0,'surya_v07','Surya','V','suryavishalanand@gmail.com',0,1,'2025-05-05 04:57:52.325757'),(31,'pbkdf2_sha256$870000$GJkrWZpD1wXPgGv3jdrLbb$+kfAojIBoijOP41+aG5o9gx9+yQPAzdWK8xOC9/Axis=','2025-05-05 05:13:26.485937',0,'Srivanth','','','22csa50@karpagamtech.ac.in',0,1,'2025-05-05 05:13:23.902297'),(32,'pbkdf2_sha256$870000$9woIfDv7QXAog2FkM6kv83$+oHJyFi2OWGQBJ/6te/RGAFF2Jne2j4YCBOn8kPTVc4=','2025-05-05 11:24:46.000000',0,'22csa38','Poojashree','T R','pooja.mithran2004@gmail.com',0,1,'2025-05-05 05:36:28.000000'),(33,'pbkdf2_sha256$870000$9c7hGkTESnaDOHgfxREyJz$PXi0F0EUAw3pUvdiFvpjM0XiV4Vl/wcEvu04T3KjRpo=','2025-05-19 03:41:48.416071',0,'22ita46','','','samuel9442720507@gmail.com',0,1,'2025-05-05 06:08:47.000000'),(34,'pbkdf2_sha256$870000$GnvmECpyd04o5CfIPIo0TX$7TcY9a/BHHH3jqi86CR3YlX2s6IDC2Ts59//r1hjB9M=','2025-05-05 15:31:19.000000',0,'23eca39','Gopinath','S','gopinathshanmugavel@gmail.com',0,1,'2025-05-05 06:27:07.000000'),(35,'pbkdf2_sha256$870000$Hh0lootGT7l1DeEPFeidSG$uKBi+fsBCDGfuAvDNB7wGTW0wYJMdd+moS9TCDv65MY=','2025-05-05 16:15:57.000000',0,'23eca48','Harinivas','S','harinivasharinivas54@gmail.com',0,1,'2025-05-05 06:33:43.000000'),(36,'pbkdf2_sha256$870000$JI5Mpr3r8F0EeXAtaOnk81$tPI4mu6eqJg+ujkUE4fwgNYvbrCVpw5CpRG/P8v+6MA=','2025-05-06 08:51:16.170208',0,'23ita24','KAMALAKANNAN','SENTHIL','kamalsenthil2006@gmail.com',0,1,'2025-05-05 06:48:05.000000'),(37,'pbkdf2_sha256$870000$SaFqwbzHkwXZQswxKCU2G7$qyyO0YZEjphBFEzielPs1BOImch5Ddn45tIerAFBeOw=','2025-05-08 02:53:29.873090',0,'22ada54','Surya Prabha','S','suryaprabha187@gmail.com',0,1,'2025-05-05 08:11:49.000000'),(38,'pbkdf2_sha256$870000$xENARJKJYtWWSuEAvYEQs1$1FWHgsCuK445qJyZ9NXgrUcOPlN9crQSYBnalJJlGbg=','2025-05-05 08:44:24.000000',0,'22csa51','SUHAINA','A','suhainaa574@gmail.com',0,1,'2025-05-05 08:44:22.000000'),(39,'pbkdf2_sha256$870000$B7FkfmQjHNaJx7nl23KPIB$9wQ9k7erwTU+0WbupjgMJ4QFdXtY0cCUwcJfGvO1XGw=','2025-05-05 09:34:07.374836',0,'22csa34','Mohanraj','N','mohanrajn004@gmail.com',0,1,'2025-05-05 08:47:18.000000'),(40,'pbkdf2_sha256$870000$cCQEy1aOsuZYG6ppaWLxfq$hBSoU+VcPgxyLjKyEcuQU2Eb7mcS8P4h3o4HuwsHEoM=','2025-05-05 08:56:20.000000',0,'22ada35','','','nareshkannashanmugam@gmail.com',0,1,'2025-05-05 08:54:01.000000'),(41,'pbkdf2_sha256$870000$c0fjy2HcP1RKkF4InTZC7i$UqOcZHZNv9Q/G5OadGrxSQDXELhinWsFu5vLGdBbtXE=','2025-05-06 10:20:44.584239',0,'22ita56','Thasneem','Sulthana','atsthasneem@gmail.com',0,1,'2025-05-05 09:14:24.000000'),(42,'pbkdf2_sha256$870000$GNdcXArBkPBC4Oz00GbiZq$KbhWh9UyvhTGclg3D2mIH/jE5+Nnk9UX8oWUoVME0Zw=','2025-05-06 03:09:23.450722',0,'Tharunikaa','Tharunikaa','Manokaran','tharunikaamanokaran@gmail.com',0,1,'2025-05-05 09:19:02.412858'),(43,'pbkdf2_sha256$870000$RYxikKi3iioPjejCYHW7B0$Bf+yOyXafMGacyinKGYrGvHCXi2w5+IdxbsfiAt4UwE=','2025-05-05 09:56:57.144679',0,'22ita29','Manikandan','S','manikandansundar18@gmail.com',0,1,'2025-05-05 09:23:15.000000'),(44,'pbkdf2_sha256$870000$qculs7x1IJ4iVRPanRxM8h$5noWpIG5Gsmiu+sXzZCtMKdvCH0VhUMF/9hmOzfONDU=','2025-05-05 15:00:17.807198',0,'22csa14','Harinie','Subramani','hariniesk2005@gmail.com',0,1,'2025-05-05 09:24:10.000000'),(45,'pbkdf2_sha256$870000$NXkYEFLs0LcyoZ6px1XxQj$0lX6Sx9rdjHc6hipRAj3r4RxixbqACSv/GisxtOzps0=','2025-05-05 09:26:50.000000',0,'22csa27','Madhushivani','T','madhushivani10@gmail.com',0,1,'2025-05-05 09:26:48.000000'),(46,'pbkdf2_sha256$870000$qiLWZ3pwbaDzSKLIRxhi35$O+KFcNnSZ5aou/DIMVVJBF1EFELkvBVyY6tKNPYPNMk=','2025-05-05 09:31:39.000000',0,'22ada27','','','miruthivenkatesh@gmail.com',0,1,'2025-05-05 09:28:27.000000'),(47,'pbkdf2_sha256$870000$js4TuzctHPIcVdtJi3GY2N$jRkDKnYzaXWyklNNYrx9UrJoQYHCBDlRdIMIgP+1kxg=','2025-05-06 04:48:06.977061',0,'23csa30','Dharshana','D','dharshanad28306@gmail.com',0,1,'2025-05-05 09:29:01.000000'),(48,'pbkdf2_sha256$870000$Zov6mRyGvEVrc1GbA1HIYG$g+VzPDJr8lVv6aB9JRCwuWPx9GN49iee5C7AUrqP/p4=','2025-05-05 09:29:03.000000',0,'22csa35','Monica','M','monicasumi174@gmail.com',0,1,'2025-05-05 09:29:01.000000'),(49,'pbkdf2_sha256$870000$lGa0UJKYgndah9i5ojAxUg$WzfOe09vxTiXQwLEKbl8U1DaexxOoVVRrHXB/HsGN1Y=','2025-05-05 10:52:04.524537',0,'22eca06','AJAY','S','ajaysuresh259@gmail.com',0,1,'2025-05-05 09:31:57.000000'),(50,'pbkdf2_sha256$870000$HX7oZidKQ8jugdBuAUb9ze$yb4jNVJR0YoSBYM8qhEm6ySbtKpKQLAw2TNMudMFtjE=','2025-05-06 05:46:58.220176',0,'22csa60','Vinoth','Raja','vinothofficial105@gmail.com',0,1,'2025-05-05 09:33:15.000000'),(51,'pbkdf2_sha256$870000$uUBAoqfAh8hHj2DV1s1afZ$mZILsptIVSzAzJiOM5jbaMcYjPUNngNAYTHmDo3lKHA=','2025-05-05 10:46:43.792077',0,'22eca12','Arikaran','R','arikaran258@gmail.com',0,1,'2025-05-05 09:38:10.777677'),(52,'pbkdf2_sha256$870000$5DU6wPaFF6xL6KG4cBCA1E$CEOSnpz4ABYyp0GrIzIW9vErsoS/KHrT/mC7SZYmhDM=','2025-05-06 15:36:39.311299',0,'22ada22','KAMALESH KUMAR','K','kamalesh302004@gmail.com',0,1,'2025-05-05 09:39:22.294493'),(53,'pbkdf2_sha256$870000$atbO1Riqrm6tUAvLv2YyJm$7vkgxwq9HVI3UKPFhKIYeX+/DlDkWsMPKh7pFGfYezI=','2025-05-16 08:32:43.226066',0,'22mea39','SACHIN','K S','sachinkanaga143@gmai.com',0,1,'2025-05-05 09:41:07.944874'),(54,'pbkdf2_sha256$870000$53jYdz1US1GENQ8JnQ5YwK$bvcD35XVy+CMsUcEPxHTtWvzwd64lcNlVd4oiRuWB+s=','2025-05-06 10:47:48.636571',0,'22ada46','Santhuru','V','santhurumuthu82@gmail.com',0,1,'2025-05-05 09:45:26.537181'),(55,'pbkdf2_sha256$870000$OCBuCY0vKFp7ZRUTxgneAF$ANlH7q0hRwFFeJ/QBH8QfYuszTodU27ZayfF+AlSXO8=','2025-05-06 10:59:52.349057',0,'22csa63','Vishnu','Priya','ervishnucs369@gmail.com',0,1,'2025-05-05 09:46:04.626083'),(56,'pbkdf2_sha256$870000$MyC2YOVSgMggw4J68UT9x8$MO9w7TcUQR+2W8EFJtQd5pZnjyuo/xy8aok/HXCbCro=','2025-05-06 04:42:49.757727',0,'22ada37','','','snishanth822@gmail.com',0,1,'2025-05-05 09:47:05.279560'),(57,'pbkdf2_sha256$870000$3d1x9J1GUF3Qr9SsYN0wEs$mY9n15I4BGct9aNouYFdfU7VpIJ2Mcfcvmc0W8ie/sw=','2025-05-05 10:37:33.296351',0,'22ita52','','','sowmiyat791@gmail.com',0,1,'2025-05-05 09:52:05.452724'),(58,'pbkdf2_sha256$870000$31UQj2DhTt2h195sL2kubQ$EdPVHqU7qxymMIZO9P1yGx0etuA/7jK+P4zd1oK2vO8=','2025-05-06 07:55:23.692983',0,'22csa26','Madhumitha R','','rmadhumitha2402@gmail.com',0,1,'2025-05-05 09:52:22.225891'),(59,'pbkdf2_sha256$870000$IdkOoNMnR16nAeP1y2ZyRy$NiVcKoSd6rpBheh5uagIYBhJ1mGt1TAlBBCIWQbERdY=','2025-05-05 09:56:32.001091',0,'22ita10','','','adharshinisaravanan@gmail.com',0,1,'2025-05-05 09:53:53.702564'),(60,'pbkdf2_sha256$870000$E2Qy5tLDVlxfEv5HezsxHW$uW1lUt0zufhb1X3OQYJ3wUIix+EhEr+Aodx5RPgD7iA=','2025-05-05 10:04:05.036463',0,'22csa04','ANISHA','S','anishaani1804@gmail.com',0,1,'2025-05-05 09:55:31.169723'),(61,'pbkdf2_sha256$870000$cYGwNKv8amjLW3OSuJAhyz$NdhPpG3Rn2N8or3qQ7ZqhNHjFyFxtow8vC9uNOIVGOY=','2025-05-05 14:26:14.043412',0,'22csa25','Lubitha','S','lubitha.s22@gmail.com',0,1,'2025-05-05 10:02:41.059809'),(62,'pbkdf2_sha256$870000$2XHwuBMjMUyJgQYivs8FE0$a18r3NaKyl4D6fwoILL+sdD/m5S9eVbaij8OIBlvOrM=','2025-05-06 13:58:24.343033',0,'22csa41','Roopa Sree','S','roopasree1607@gmail.com',0,1,'2025-05-05 10:08:16.504054'),(63,'pbkdf2_sha256$870000$Dqtoi7NpqCqYT6RShfdexB$8CXmPV+RtRWYKjPtLdpvgTWQFTxFpuv1HRMqEi6GWn8=','2025-05-05 13:23:25.140325',0,'22eca04','Adithya','K S M','adikm8833@gmail.com',0,1,'2025-05-05 10:17:10.777136'),(64,'pbkdf2_sha256$870000$MuXm95FOX1vllKHT4TbRL8$BOjur5tDf5vxU/gk+f5QMm+qlJpaplsvdikiqNIw60Q=','2025-05-08 04:30:23.396743',0,'22eca38','Hussain','Mohammed N','aadhilmd15@gmail.com',0,1,'2025-05-05 10:17:11.036278'),(65,'pbkdf2_sha256$870000$aalq43wiMYC2HCn27CQPzY$ncXlvpUD3csiBEs6I/nzT2G59q4EDDlXiG+Itd/R/jg=','2025-05-05 17:00:11.602604',0,'22csa53','Sushmitha','T','sushmithathangavel04@gmail.com',0,1,'2025-05-05 10:29:13.721669'),(66,'pbkdf2_sha256$870000$FiAlyq6Mojx3u5gTINqWVu$j3q1XJplFNxq1dwKxij9pXHEjIs5KIJ3kwnxa1dZc1I=','2025-05-06 04:00:57.479324',0,'vimalraj1411','','','vimalrajshiv1411@gmail.com',0,1,'2025-05-05 10:36:34.446342'),(67,'pbkdf2_sha256$870000$uNF8GizVkzLtV49DnLROEy$7P8/Z1NriReNLtFRb4JRdPtN4S8EbFGYA4GFItiYWOY=','2025-05-05 12:49:36.666857',0,'22ita58','VELMURUGAN','A','22ita58@karpagamtech.ac.in',0,1,'2025-05-05 10:48:17.080864'),(68,'pbkdf2_sha256$870000$a2n0coDm80BsxE854o2iya$HNyteaaXc6D6CnfdYebkoeRyle0uNXj6A0jcPq1Nu2o=','2025-05-05 11:04:36.771411',0,'23mea53','SUNDARA MAHALINGAM','M','23mea53@karpagamtech.ac.in',0,1,'2025-05-05 10:52:03.515588'),(69,'pbkdf2_sha256$870000$Eu5nzoDGERXNHBbUHPovoG$N26aQEg2fbq2GICjjjz/oTPANwQSezlRSS4LlDRD0/g=','2025-05-05 10:52:51.025446',0,'23ecb27','Niranjan','S','23ecb27@karpagamtech.ac.in',0,1,'2025-05-05 10:52:48.985333'),(70,'pbkdf2_sha256$870000$rLOhOLapgPkdRTa4Cl1Gt9$XKSsh5FClc7x/T8tUIGeFIrTT0gynO+2J7S3bQRgvWc=','2025-05-05 11:30:42.075022',0,'22eea38','','','22eea38@karpagamtech.ac.in',0,1,'2025-05-05 10:53:01.591530'),(71,'pbkdf2_sha256$870000$Y8r9o2THZh5P1sgoXooi9s$jf1k1TO1Vgb4J8dhxYo5eZmNMPR4s2KSagJ9T1cyzi0=','2025-05-05 10:53:26.938041',0,'22eea59','Varsha Karthika','P','22eea59@karpagamtech.ac.in',0,1,'2025-05-05 10:53:24.829724'),(72,'pbkdf2_sha256$870000$yyg7WHz8RHaTWyfi39hsqc$F5PzmwNuiZGMpuPJIN39pqMeEYqTvXz/x0MkY7O0nKk=','2025-05-06 04:48:21.818365',0,'23csa38','Gokularamanaa','T','23csa38@karpagamtech.ac.in',0,1,'2025-05-05 10:54:05.310076'),(73,'pbkdf2_sha256$870000$Fbhaj8sqCSJrm9iUcRRDPX$IvXGG/9fhf0pE2SyMhEnLHTvhZGY5puoU6CcLY3WRzY=','2025-05-06 13:02:06.634494',0,'23csa41','Guruprasad','M','23csa41@karpagamtech.ac.in',0,1,'2025-05-05 10:54:19.245143'),(74,'pbkdf2_sha256$870000$5iuFyALZeHoiOM2uOofN23$6DSxows5lYtVrYAV/LMCGZhXbEOPNQGK2jxYuN7PiGA=','2025-05-05 10:55:46.195777',0,'22csa18','Kalaiyarasan','B','reignskalai76@gmail.com',0,1,'2025-05-05 10:55:44.107021'),(75,'pbkdf2_sha256$870000$1y3UcSgtgObUSMVjV7d5yc$nx3uxvpcup89Bdru800sT8Q5MCS8D2YQiSCglwo8zAY=','2025-05-05 10:57:27.759323',0,'23mea05','Arunpandi','A','23mea05@karpagamtech.ac.in',0,1,'2025-05-05 10:57:25.467138'),(76,'pbkdf2_sha256$870000$dGAujl4IHcwPikmF4gqyK1$dvWGVhOt3kxesD4yAC9HNg7/SnKEXUVua8PMvHRXfHU=','2025-05-05 10:58:29.541262',0,'23eea08','Chaithanya Rao','R','raochaithanya7@gmail.com',0,1,'2025-05-05 10:58:27.424765'),(77,'pbkdf2_sha256$870000$if5BproXyukgPnRtpJ6ufH$kiXOV0iAlDEnR/6G+hSuiV3eH9ymGfuEzvRYVdO6fqg=','2025-05-05 10:59:41.924747',0,'23eea18','','','jakaseelectric@gmail.com',0,1,'2025-05-05 10:59:39.927269'),(78,'pbkdf2_sha256$870000$wRF1lpuUyeHZbYgtheVaVG$LbQPank+HROoinsVtO3LmYYNFScNvIxJBflrVJA0j9I=','2025-05-05 16:31:22.822566',0,'23ITA39','Praveen Kumar','K','praveenkolanji2005@gmail.com',0,1,'2025-05-05 11:00:17.789372'),(79,'pbkdf2_sha256$870000$N7SR4xRzSBt5SMT2uu0efz$VyeArGSEV3TypA14RanND5qHbE13bn26xvDCvuWjKyc=','2025-05-05 11:01:54.893056',0,'23ita58','Suni Akash','P','23ita58@karpagamtech.ac.in',0,1,'2025-05-05 11:01:52.727532'),(80,'pbkdf2_sha256$870000$YEU4hhOeWiJeCblfRxtWx1$Jas7Lj4eYwunib+UOMj/zp0Oy82QNNiJGgc0wr/Zbv4=','2025-05-05 14:15:27.183756',0,'22csa20','karthick','V','22csa20@karpagamtech.ac.in',0,1,'2025-05-05 11:05:22.578548'),(81,'pbkdf2_sha256$870000$lmNn5MDv93lXi4Sqm8oDRZ$1ANxJXPF4V/sVo2GGw8pBPZNl1tsFfhBxqGnhOSOMcg=','2025-05-05 12:51:17.706678',0,'22mea26','MEHESH','P','meheshperiyasamy07@gmail.com',0,1,'2025-05-05 11:06:05.375156'),(82,'pbkdf2_sha256$870000$vdTH7i4l545hrggxtYuwN0$o/FNiBJNAFu0K3NKFiVfZZEycEdwMOWvxb0hzyT1XxE=','2025-05-06 05:36:10.000000',0,'23ada05','barath waj','P','bharathwaj8282@gmail.com',0,1,'2025-05-05 11:12:36.000000'),(83,'pbkdf2_sha256$870000$RAdSEBEJMXTjKiOwzhceNt$2ZY2v2+8lFMPY1HQCq0N7geE9PvSgAwzw6EjMBnLtYA=','2025-05-05 11:13:58.498656',0,'22ita09','Dharani','S','sd5271733@gmail.com',0,1,'2025-05-05 11:13:56.426773'),(84,'pbkdf2_sha256$870000$ycc5maPCfRlZLtKEW1axmp$7sBnAxgFch2+qMAgJv8lzuakZ1rjo7PJlq54buJ0bgQ=','2025-05-05 11:24:35.932861',0,'22ita25','KISHORE','K','kishoreapr03@gmail.com',0,1,'2025-05-05 11:22:48.545489'),(85,'pbkdf2_sha256$870000$Ch8IRP1X23z5lnXOLGTJiH$VtwF8row3Junb9dx2sDZfGm/WlOCcUthIRgv+teB5xk=','2025-05-05 11:35:25.986534',0,'22ada38','','','nivethashankar162@gmail.com',0,1,'2025-05-05 11:35:23.936325'),(86,'pbkdf2_sha256$870000$kB8ZlmLiYKyOOr7X6SIReq$FSJ4zGIstX13TAkkIMlXfyZMIzeHXAXMPjdvDwnwzmU=','2025-05-05 11:40:30.478101',0,'22eea49','Sridharshini','K','22eea49@karpagamtech.ac.in',0,1,'2025-05-05 11:40:28.375429'),(87,'pbkdf2_sha256$870000$IWuBY6GffYhhjJGXbqCbWk$rzIja09SzTRCACnGptlJrqYkkuArFcWOaQNM4VjUH3M=','2025-05-05 11:42:08.720463',0,'Sabari','','','23csb36@karpagamtech.ac.in',0,1,'2025-05-05 11:42:06.223613'),(88,'pbkdf2_sha256$870000$mbkzxTC1VOFBhRM53wbHgU$lE5qZMgGLgtn9/jSmfKyMh0pW+fi3KJyUlT7ucMGJ6U=','2025-05-05 11:45:42.123128',0,'22ada09','bhaviya','M','bhaviyambahviyam@gmail.com',0,1,'2025-05-05 11:45:39.644949'),(89,'pbkdf2_sha256$870000$QRdKSi6L1sUiNnJFN4xpNC$9qsO/gD72ECEAkizXHSmjaiG9dRFyr8iK7xY/Yhm98A=','2025-05-05 11:48:51.301342',0,'22csa28','Magisha','G','magishagopi147@gmail.com',0,1,'2025-05-05 11:48:48.960754'),(90,'pbkdf2_sha256$870000$wxXev1zXGdQk7ErJzbSKH7$4I6Qgw+ICvMYCZKBFYRJUVv5mF00qX9gVK9bAJ1SivI=','2025-05-06 09:51:10.226085',0,'22csa47','','','shamshekhar0@gmail.com',0,1,'2025-05-05 11:49:07.039107'),(91,'pbkdf2_sha256$870000$Nrpz3qiVf1xj8QMoV1ptfM$L+WV8wlkPpHN5BNawYFZg+MmZZTHkqSZLHavjVzVUII=','2025-05-05 11:49:27.422294',0,'Suvetha','Suvetha','Periyasamy','suvetha309@gmail.com',0,1,'2025-05-05 11:49:25.327557'),(92,'pbkdf2_sha256$870000$1W9MB1rI9jF2veoKq3ktoP$y9USl62iNoCfnrcTXCIUlr8jeb/tpLsBnjHTroUN2mk=','2025-05-05 11:50:25.000000',0,'22ita23','kavin','T','22ita23@karpagamtech.ac.in',0,1,'2025-05-05 11:50:23.000000'),(93,'pbkdf2_sha256$870000$zKrg8e6pOCF2s61kCTFR8N$LurVbIvAB/APV4Q12CWPl41iJf9ljI3mCOWfL9dMxYQ=','2025-05-05 11:56:51.952759',0,'Kruthick','','','23csa58@karpagamtech.ac.in',0,1,'2025-05-05 11:56:49.880950'),(94,'pbkdf2_sha256$870000$K2dlenCKUZRICVbRR8U9D7$qsemIpsHz7HspNbuq9bUqgNazgdmV5KqseVkBE9Oo2I=','2025-05-05 12:05:13.633349',0,'22eca22','Devaannamalai','R','devaannamalai56@gmail.com',0,1,'2025-05-05 11:57:25.284528'),(95,'pbkdf2_sha256$870000$UqalqKjjjQIytrMLV35r1B$V4WmZwLAPBln+vE48RfFsslaT/k7Ze4MNiNJrJSNqEI=','2025-05-06 05:13:35.000000',0,'23csa01','','','23csa01@karpagamtech.ac.in',0,1,'2025-05-05 11:59:38.000000'),(96,'pbkdf2_sha256$870000$9xS4Fw475zyiLHWqCG4Tx3$216OZIBeADY50eFQ9CfMAosOvwnRR6w77tEPlyjC+5I=','2025-05-06 05:15:24.000000',0,'23csa45','23CSA45','','23csa45@karpagamtech.ac.in',0,1,'2025-05-05 12:07:04.000000'),(97,'pbkdf2_sha256$870000$TtJMFfi5uhyTa93xeYlzkY$TAZk3NE4g54sh83AJeITAAUR9/d38+LmmW5dXZGPTZ0=','2025-05-05 12:16:24.407013',0,'22csa46','SARAN','R','sarankanna2013@gmail.com',0,1,'2025-05-05 12:16:22.364795'),(98,'pbkdf2_sha256$870000$Q2cwaeziViCb2hR4T1Ykqz$LZJYtoDmYLCka0ML46jHQLU7fNryFP8BpUBLf2qEXQo=','2025-05-06 05:15:03.000000',0,'24lcsa02','','','24lcsa02@karpagamtech.ac.in',0,1,'2025-05-05 12:23:32.000000'),(99,'pbkdf2_sha256$870000$oKDMM84VyafZBvBpM5tzwL$br4ChcXK82Y/L5PBS5HHFtVVfxU7OnhfIHrIi5YFyOY=','2025-05-06 05:31:10.939409',0,'23csa08','Ajay','Chandrasekaran','ajay.chandrasekaran9@gmail.com',0,1,'2025-05-05 12:34:05.000000'),(100,'pbkdf2_sha256$870000$0vawlqPUUMDT6MkZQwbPqh$1Gs7hwPPlfNTVhnUvYF58jv2UwtNHSoJkua5kZDyjww=','2025-05-05 12:51:43.022803',0,'22eca62','Mathavan','C','rcmathavan0096@gmail.com',0,1,'2025-05-05 12:51:40.508244'),(101,'pbkdf2_sha256$870000$GCv8iMY6I5vkMBP16UcWnw$5Ll3ywrh7HfosiX/Ve7mK6DUyymEUdVQ2WmXXsZyXzA=','2025-05-05 12:55:43.162223',0,'22csa62','vishnu','prasath K.S','vichu098p@gmail.com',0,1,'2025-05-05 12:55:40.735913'),(102,'pbkdf2_sha256$870000$vleywTw8oHeByZOMOzcPKz$B40kjJ0asIq/hvenqkzUTrIRKDbr/KcxwM+7d6HQl+w=','2025-05-06 09:45:33.568962',0,'22ada41','','','ravipraveen126@gmail.com',0,1,'2025-05-05 12:56:35.752684'),(103,'pbkdf2_sha256$870000$wXP5OeCblqlIqBFND0ShJk$tP6IgJtjP5PrLnJ85/bP5EOCuQmPeSD+z2ulmaOxrr8=','2025-05-06 05:43:19.597867',0,'22ada28','','','22ada28@karpagamtech.ac.in',0,1,'2025-05-05 13:03:44.942976'),(104,'pbkdf2_sha256$870000$B0IZZcJV4z6gTzeFvrvEcE$mvV0lwnifQUNHkT3ByUuRP/wqEyeg81CCYfnQgJLd7I=','2025-05-05 13:06:08.000000',0,'23csa58','Kruthick','M','23csa58@karpagamtech.ac.in',0,1,'2025-05-05 13:05:48.000000'),(105,'pbkdf2_sha256$870000$0NoUHRwosI8jXeN2Y5EBgr$hg7WpB2fqpPKWtdgnzN5DWc8L5OdpZont8eFXl1ArzM=','2025-05-05 13:07:46.101045',0,'22csa37','Parthasarathi','B','22csa37@karpagamtech.ac.in',0,1,'2025-05-05 13:07:43.636989'),(106,'pbkdf2_sha256$870000$Eqmwk80nVwax0EDyGbCIJO$pYib4Ttfr7ycHL3P3Op2kYlNUQMjP1OT/zTT8GFWwTU=','2025-05-05 13:14:00.485996',0,'22ada14','A P','Dharanya','dharanyaap.ai@gmail.com',0,1,'2025-05-05 13:13:58.537688'),(107,'pbkdf2_sha256$870000$yBf7uWV9gMpTuqpgon9ggJ$dL36o8xMOA+5S63qrJNL9ipm2Y7m4+xb+56p0FFlaSg=','2025-05-05 13:15:42.716370',0,'Nivetha@07','','','nishanivetha07@gmail.com',0,1,'2025-05-05 13:15:40.661530'),(108,'pbkdf2_sha256$870000$NLU26NqBFvg1yzrLKfZHXL$jAkN2wxDVQ/HckXgkTus8rbTS+LKUTOWKCVrU652P7c=','2025-05-06 13:29:45.472808',0,'23csb05','Mano','M','manomarutharasu@gmail.com',0,1,'2025-05-05 13:19:11.000000'),(109,'pbkdf2_sha256$870000$QREJZPkIsSfisxsq9siiqQ$I5mnrSjfyOECvXPP+sWNrYcDk2LPukr0TLUkZt6e8t8=','2025-05-05 13:19:14.197714',0,'22csa15','Hemanth','Kumar V','hitohemanth94437@gmail.com',0,1,'2025-05-05 13:19:12.197128'),(110,'pbkdf2_sha256$870000$3rIOEPUz0NH7Xmacs0il0o$PKekE3rWsPSF4hzusZ0+vrjXyXmHZulKingo0pPAqQg=','2025-05-05 13:20:23.036488',0,'22csa59','','','22csa59@karpagamtech.ac.in',0,1,'2025-05-05 13:20:20.923162'),(111,'pbkdf2_sha256$870000$XcKtitK5J27IghNqMtonwm$OxsGX4eJTuhS9t32obSouTZu+uctsiVnrm4AwNTCX/w=','2025-05-05 13:20:34.929293',0,'23csa15','','','23csa15@karpagamtech.ac.in',0,1,'2025-05-05 13:20:32.856507'),(112,'pbkdf2_sha256$870000$MmJTCAKubm91xa7xIEEAZ1$FGQDFploJgaZBWDVmX+cMu6D8a0/ha89B5mjAUUnzfk=','2025-05-05 13:30:22.766018',0,'22csa03','ALEN','REGINALD R','alenreginaldr@gmail.com',0,1,'2025-05-05 13:30:20.343127'),(113,'pbkdf2_sha256$870000$iMsjJYIVVkoxPVkmpPnQD5$8N5MW3+EuaaGufxbBZtVhDQZcbZWiVGILo2Px++DFHo=','2025-05-05 14:22:11.024314',0,'Vaishnavi','Vaishnavi','K','22csa57@karpagamtech.ac.in',0,1,'2025-05-05 13:30:42.697218'),(114,'pbkdf2_sha256$870000$kCorcGtSJilRo1cpkuokxw$lcy2T49o+gAM0yQUvsi9ticUeEake3IZ8JCDlPUaLns=','2025-05-05 13:37:00.223749',0,'22csa43','Sakthi','S','sakthisabarinathan12@gmail.com',0,1,'2025-05-05 13:36:58.120134'),(115,'pbkdf2_sha256$870000$c9iGK7hvqPiAfKQp4NLbv7$V4DHkqzwMdcZ3JQSW+KrLgf0tScn2Qty5JhmD9dXd7M=','2025-05-05 13:55:41.355496',0,'22csa21','Kavin','Sankar A','kavinsankar802@gmail.com',0,1,'2025-05-05 13:55:39.294864'),(116,'pbkdf2_sha256$870000$T6RLLnvWEyigNVEI45p62b$XJSeN8lGGER7hhEKJ5Vp/fniq0C0VzJaRTvUAPkKvbI=','2025-05-05 13:55:55.252770',0,'22ECA28','','','dgsktm@gmail.com',0,1,'2025-05-05 13:55:53.202335'),(117,'pbkdf2_sha256$870000$PGuZajb2pEqfg8BGokyueS$mOg5gZGWkzbzGo/iB+2ZD7BS9OwdqxAf6BX7Uszl0sA=','2025-05-15 17:51:15.830680',0,'22eca16','Atchaya','PM','atchayapm688@gmail.com',0,1,'2025-05-05 13:57:47.316716'),(118,'pbkdf2_sha256$870000$5ioDiZtGl7fcg1r5tXK8zZ$LILR4yeb1TzUjK15RhyFttZNi0ZEWl1j4J5f6XWrdDA=','2025-05-05 14:10:19.371816',0,'Keerthish','','','Kerthish181.s@gmail.com',0,1,'2025-05-05 14:06:40.756346'),(119,'pbkdf2_sha256$870000$bZranSiXX9W4frUhlJUPHt$z/o8r8uqHA6cJhpxZL1eVJ+oRc4jQ7J6CiljFnrs0XY=','2025-05-05 14:10:47.553487',0,'22csa05','Anusha Smilee','B','anushasmilee2486@gmail.com',0,1,'2025-05-05 14:10:45.459520'),(120,'pbkdf2_sha256$870000$Cxbb3FrQbOVtWWXWGvEZss$AzZIWXbyu0pG0dZvJgHeb2VhghdSRiImgtS7wNUpPV8=','2025-05-05 14:22:57.100597',0,'23csb23','','','23csb23@karpagamtech.ac.in',0,1,'2025-05-05 14:11:13.397713'),(121,'pbkdf2_sha256$870000$SEQByC1crqLMcIsrZvLtz2$xK5tdd9Ic4BWCx7TDFDVcAIhnPO0JQNycL8yCNLlAbw=','2025-05-05 14:16:53.665943',0,'22csa52','SUSEENDRAN','M','suseekannan1234@gmail.com',0,1,'2025-05-05 14:16:51.628671'),(122,'pbkdf2_sha256$870000$VstXYC28R6FcNkEC4Da5Qu$sGdV97b5Q2UCeyZOgLeG5/Qc70r/CMEETLLFf1s2kk8=','2025-05-07 02:07:32.168217',0,'23csb53','Thirugnanam','N','23csb53@karpagamtech.ac.in',0,1,'2025-05-05 14:30:21.000000'),(123,'pbkdf2_sha256$870000$t4jWZL6FiH7cJasfsAapnF$EfEHCcdZoTW292rbxJNEU3pD49FPDdB9SKWXRWSUOio=','2025-05-05 14:35:55.779904',0,'22csa49','Siva','K','sivaprema0123@gmail.com',0,1,'2025-05-05 14:32:22.361706'),(124,'pbkdf2_sha256$870000$J41cVH378htUg04sVTluZl$rYNA4KDD9dLX69qBr6OkS8WS5J3YfGE3qU4fx26kifA=','2025-05-06 05:12:08.000000',0,'23ada20','Karthikeyan','S','karthisankar2005@gmail.com',0,1,'2025-05-05 14:52:22.000000'),(125,'pbkdf2_sha256$870000$yWrNdyyGFQ2tl1O4s3pCwT$mdnSJzaHrXwvTbTE8inX8/lwSjxldexJ1JPRKpogheA=','2025-05-06 03:43:24.000000',0,'23ada49','SOUNDAR','D','soundar422006@gmail.com',0,1,'2025-05-05 14:52:32.000000'),(126,'pbkdf2_sha256$870000$aLZg0uH5SOT9t9HGbrStX1$vcuBow+EEJrlSvQM+F11ZpShdQHMrsJspdtvCW5Eu4I=','2025-05-06 05:34:26.000000',0,'23ada38','','','apsaikrishna4@gmail.com',0,1,'2025-05-05 14:55:07.000000'),(127,'pbkdf2_sha256$870000$Rjrpo9EXvmRYN3UJq3TcNS$xdCeDuHXWIHWR/1rMjL0tIoLro8ILvpch1bBUFJTacE=','2025-05-06 07:36:07.464574',0,'22csa30','Mahalakshmi','kalaiyarasan','mahalakshmikalaiyarasan19@gmail.com',0,1,'2025-05-05 14:55:46.161487'),(128,'pbkdf2_sha256$870000$4MyR1ySTMMyYBRrRpP5SIy$EelGvHbOibP4EMCPvyhDS1USBzJ5M/wJN633rGazb4Y=','2025-05-05 14:56:53.347525',0,'arunkumar','Arunkumar','N','arunkumarkdnl483@gmail.com',0,1,'2025-05-05 14:56:50.719931'),(129,'pbkdf2_sha256$870000$KEhxu6BoZGOhvRxTysI944$MNkUYtHBFmP+XlHeicbidOPhEWHn/ZzR6E0cokcUwQA=','2025-05-05 15:49:56.957028',0,'Nandanaraj@511','NANDANARAJ','R S','nandanaraj511@gmail.com',0,1,'2025-05-05 14:58:51.264772'),(130,'pbkdf2_sha256$870000$7Mfxgk5dXfGA1D1wwnU45o$XDYZ6x08vTdG5tCVYNDz7vn+MgRmvK3gyT60BDqrc04=','2025-05-05 15:12:28.427565',0,'22eca13','Aswin','pranesh R','padmavathypadmavathy70@gmail.com',0,1,'2025-05-05 14:59:24.293603'),(131,'pbkdf2_sha256$870000$whKwW2tVOppX1NOOI9wsVf$wPelmObHRtprjfUyxNmJnORdrL4UD6Dk1rNynvj7kgg=','2025-05-05 15:48:58.585690',0,'22csa29','MAGUDEESHWARAN','B','magudeeshwaran07@gmail.com',0,1,'2025-05-05 15:05:04.382114'),(132,'pbkdf2_sha256$870000$c3FdFQqULDmO2htZgsmNAI$lh36OJjcPTvWMHsyc3zfe4jk5uFRga89zbH5C5tpYxY=','2025-05-05 15:05:49.178276',0,'22csa58','Venishaa','N','22csa58@karpagamtech.ac.in',0,1,'2025-05-05 15:05:47.235277'),(133,'pbkdf2_sha256$870000$24qll2DIk254K8N06Tsqma$j8cYc8A2oeKsyX/QZ1WBkNfsH8TqJIcIyB/nvpJSisQ=','2025-05-05 15:10:59.463735',0,'22csa09','BIRUNDHA','K','birundhakausalya475@gmail.com',0,1,'2025-05-05 15:10:57.397370'),(134,'pbkdf2_sha256$870000$fAm6WhEWwDCd5rt5dRqR67$ivc+FzR+zOHCEmPtdx7tyC6nOgaRZfxC5fZm7wd0i5o=','2025-05-06 12:23:58.365907',0,'23ada02','Agilan','S','agilanagilan444@gmail.com',0,1,'2025-05-05 15:12:48.000000'),(135,'pbkdf2_sha256$870000$8ghNjahkVUEBp7YWWA2DZK$l5CGhTa+c35CMrhvXZZ3wCOw4AGjLgSNfzeMQAbqd6g=','2025-05-06 05:32:45.108436',0,'sashanth17','','','sashan1707@gmail.com',0,1,'2025-05-05 15:13:00.003155'),(136,'pbkdf2_sha256$870000$8rgu9Pvo23s7ANaN7Ig6JO$jXtq+dziiuJsLtuYY8TATwiY6IiZdhznj8ijtyFPKjU=','2025-05-06 05:02:30.911306',0,'Shreesha.R','Shreesha','','shreesharadhakrishnan@gmail.com',0,1,'2025-05-05 15:14:04.396951'),(137,'pbkdf2_sha256$870000$vOH2A9Ih7cSCOoAXYmgnMb$eJAeQJtLYxc6hriMA0k7+nY04AmT2Y76HyN3DSPQteo=','2025-05-05 16:57:24.000000',0,'23csb36','Sabari','D','23csb36@karpagamtech.ac.in',0,1,'2025-05-05 15:17:15.000000'),(138,'pbkdf2_sha256$870000$OKDThOBgOjjAXfgvgjmBIK$vIfRUB2MlAcWrXJuz5g9curpA73GG6acNw7lTjZ8NB0=','2025-05-05 15:22:36.510119',0,'Rubinraj','Rubinraj','M','rubinrajrubinraj7@gmail.com',0,1,'2025-05-05 15:22:34.478360'),(139,'pbkdf2_sha256$870000$kPibv912aqwhPXLct41t8K$9NU8XLgyzU+yaXPdr/460MYIl4pg0tQe8ckmp6GKX4w=','2025-05-05 16:07:50.966105',0,'22csa39','Poorvick','Y','poorvickpoorvi@gmail.com',0,1,'2025-05-05 15:23:05.076406'),(140,'pbkdf2_sha256$870000$BQp8c5NcrTKlfmsigWFO1N$vVVhgYO9B7sG97+b6Cpj+r+WSY30zD3ed02BZTmIs3g=','2025-05-18 06:31:14.092500',0,'23eca31','Dinesh','Surrya','dineshsurrya66@gmail.com',0,1,'2025-05-05 15:24:07.000000'),(141,'pbkdf2_sha256$870000$sPtqlVYdGaony862Tfzi28$lgRTdenYsSjKxh3WdvYkAD3vjzeLFPURNHzpYb4aeak=','2025-05-05 15:25:45.976816',0,'22csa01','Abishek','M','abishekm081@gmail.com',0,1,'2025-05-05 15:25:43.547801'),(142,'pbkdf2_sha256$870000$1sEIGLTfhUfVtHrQSkh0fY$b7g51h00xyWgtBt/cjFBojYVOSBWHdjD8HKEY0NU5bI=','2025-05-05 15:28:59.786374',0,'22csa10','CHANDRU','D','22csa10@karpagamtech.ac.in',0,1,'2025-05-05 15:28:56.972663'),(143,'pbkdf2_sha256$870000$i5coS5M8iRyNaDHwY9wXwB$H23GCnl3ZksCFU8f0NXir7G3b/sQaOFiDkwpmqvcw8g=','2025-05-05 15:29:03.000000',0,'22csa33','MOHANA','MAHALINGAM','mohanamahalingam07@gmail.com',0,1,'2025-05-05 15:29:01.000000'),(144,'pbkdf2_sha256$870000$dbJyWn95TnEg26reaV33yH$eFoEzZPUbnwATFKqaiQkGb+hOwSSkyxOrinlniH1OP4=','2025-05-05 18:28:49.285791',0,'kengathar','kengathar','G','22csa24@karpagamtech.ac.in',0,1,'2025-05-05 15:32:18.119026'),(145,'pbkdf2_sha256$870000$ulEA0PMxStk0K8OPNsYhfU$3tU25VTaxS3IX2OUJDHATW+SxPl3xa3m8FYJ8QndHH4=','2025-05-05 15:43:51.618012',0,'22csa22','','','22csa22@karpagamtech.ac.in',0,1,'2025-05-05 15:41:53.902979'),(146,'pbkdf2_sha256$870000$UXkjVPICoPoRBfSReMuAgc$uq+GCQ6FF+3UhOckt6lJf6qtaDI26LGYyrM4DT48aso=','2025-05-05 15:42:08.677771',0,'22ita45','','','ramesh12355788@gmail.com',0,1,'2025-05-05 15:42:06.433174'),(147,'pbkdf2_sha256$870000$8fX4UYQ4KL8R7iiK3bssjO$CKgyMT0iHK0BONk9f+9DeqqDU4BYye7NXTzDx+5nbEo=','2025-05-05 15:43:16.194040',0,'22ada52','Sobika','M','sobikamohan@gmail.com',0,1,'2025-05-05 15:43:14.176284'),(148,'pbkdf2_sha256$870000$8Lxx3DGiqXUKBep7P8azYe$YFHhtM9tvDu70ymbTyhe3zeqA6BLp+R7+RBO0Rs/Or4=','2025-05-06 16:55:28.380583',0,'Ramya@123','RAMYA','M','23ita45@karpagamtech.ac.in',0,1,'2025-05-05 15:44:53.130414'),(149,'pbkdf2_sha256$870000$icfRCwMzUPLdfvTiIECbqP$PPaJE6Y9JBtyO0QUO7W/ZqPnaeKtBYmuoL4RgBmNvu4=','2025-05-06 11:28:58.750471',0,'22csa07','Aswin','S.K','aswinkishore377@gmail.com',0,1,'2025-05-05 15:49:46.177981'),(150,'pbkdf2_sha256$870000$jH4NJjuQnKLXvVaaxaohn7$Z1YKgx2HbKppXxAwm0S2S4vCWa30SPREHq4vtStyKJo=','2025-05-06 10:41:29.458202',0,'23ada63','YUVAPRASATH','K','kyuvaprasath2006@gmail.com',0,1,'2025-05-05 16:15:30.000000'),(151,'pbkdf2_sha256$870000$CgDpBJjL9a42zJjpUMcAdA$ip/n+51k/kkSWEhVE0a7Cud7mFxVZ5ojP4YD3+mK+Bk=','2025-05-07 15:40:06.520095',0,'23csa63','Madhan','M','madhanmadhan89743@gmail.com',0,1,'2025-05-05 16:18:29.000000'),(152,'pbkdf2_sha256$870000$opzML4hbiefVTj3VLijoZg$wG401eBmo9kXbFNvwPQXGn+KgTE1qdyoqvmUdzf2n+g=','2025-05-05 16:20:42.000000',0,'23ita26','Karthikeyan','N','23ita26@karpagamtech.ac.in',0,1,'2025-05-05 16:20:39.000000'),(153,'pbkdf2_sha256$870000$hnYaMKwbRjx0dSKm5btAcS$n8P5/jVbkwGvUZN09jgP9makg5R14P5fmbAdHUr1gaA=','2025-05-05 16:29:02.435871',0,'23ita15','Dinesh babu','v','23ita15@karpagamtech.ac.in',0,1,'2025-05-05 16:29:00.387425'),(154,'pbkdf2_sha256$870000$CNOYrftePfIR4JEtP13meM$izwt3TbgvcRtmJvEXGarMCjIiF80gblVQM6jn2+gCwY=','2025-05-06 08:42:27.959148',0,'abinaya_229005','ABINAYA','S','jothiabi00@gmail.com',0,1,'2025-05-05 16:30:00.498383'),(155,'pbkdf2_sha256$870000$SabXx0zfz4NXnVUgqq75tU$AIHIyB9vI+cXy0psR1iT1b/gO4GHr42wn5vW6aZBGO4=','2025-05-05 16:39:47.916589',0,'22csa56','Thirunavukarasu','k','22csa56@karpagamtech.ac.in',0,1,'2025-05-05 16:37:15.648845'),(156,'pbkdf2_sha256$870000$SSs3IeyxzDiOU0wWTR1jHV$WhgUrt9uSlrt5omaFUrGrl+fDj8sOw4BEs86QL4kWHA=','2025-05-05 16:44:12.734088',0,'22eca25','Dhanusri','K','dhanusridk2005@gmail.com',0,1,'2025-05-05 16:44:10.644432'),(157,'pbkdf2_sha256$870000$NL2GhRYFrhcAMU0nLdQVJ7$a4MyRX5ilU44d6H2wRK+gkIcH8Tl3/nxa1XarmwppDo=','2025-05-05 16:58:08.695060',0,'22ada40','','','prasathraja2004@gmail.com',0,1,'2025-05-05 16:46:15.526746'),(158,'pbkdf2_sha256$870000$lfjybREBIhQULKMzmXK5uB$bA9uwJZwqFXCtlXhY/KVpSPpJGShTGc3I0VhjRfaC94=','2025-05-06 20:30:36.412456',0,'22eca03','Adham Safir','J','adhamsafir1@gmail.com',0,1,'2025-05-05 16:50:46.958119'),(159,'pbkdf2_sha256$870000$BytFLMFHO0fMiOvQiuHuZG$6wmMLltmWbvttvvc9JXUUI+7Axgdp2pEIS8YXzmOpBI=','2025-05-05 16:53:59.604152',0,'Dharunkumar','Dharunkumar','M','23ita13@karpagamtech.ac.in',0,1,'2025-05-05 16:53:57.018805'),(160,'pbkdf2_sha256$870000$av79uYu7Xq5qUTMiPY2b5J$YfrHwHwOZ6szTUUsmRNOYKrPzrw3qOMkT4K5RmOE00c=','2025-05-10 16:06:45.621718',0,'23ita56','Sudharsan','A','23ita56@karpagamtech.ac.in',0,1,'2025-05-05 17:15:34.143139'),(161,'pbkdf2_sha256$870000$6TbmsAeN6TAHY2WZ0L2A5c$q6Mbl+9cRJiRyU4sYRzTR1jkqoNps4h8L/i15NYSq3I=','2025-05-06 06:39:49.133870',0,'23ita19','','','23ita19@karpagamtech.ac.in',0,1,'2025-05-05 17:24:44.251117'),(162,'pbkdf2_sha256$870000$PQfjcpPWEr9YBzc17yZX9S$fp/db5F6l7JLMAx12e2v7mt/tPtdjZz4kT8efXDUqkA=','2025-05-06 03:41:26.135013',0,'_shanmu26','Shanmugapriya','S','shaunmugapriya@gmail.com',0,1,'2025-05-05 17:30:11.390031'),(163,'pbkdf2_sha256$870000$Laq2BkEm0QYJw4PbUvF8Bz$Ix3taWzCnMoH1TiTwQF/38XbRFgy0l0akKDHSSrLV10=','2025-05-05 18:14:06.084555',0,'kalai','kalaiarasu','PR','22csa17@karpagamtech.ac.in',0,1,'2025-05-05 18:14:04.050760'),(164,'pbkdf2_sha256$870000$EP6OmgQKsEvpkjVzmQqexC$Ql63sHlkaTTuYzlWL7cmZi81rMC2SSuTWkI7fHUsVdI=','2025-05-05 19:41:49.003324',0,'23ita51','','','23ita51@karpagamtech.ac.in',0,1,'2025-05-05 19:38:53.046394'),(165,'pbkdf2_sha256$870000$seWAgEoTwF9vQtpImuJ3IM$d8J3WhwzcKPuFG9FsMQmrGpDbFKvUGYWK34sSfoE6iA=','2025-05-08 11:37:01.083596',0,'23csb06@karpagamtech.ac.in','','','23csb06@karpagamtech.ac.in',0,1,'2025-05-06 01:30:07.975963'),(166,'pbkdf2_sha256$870000$OE50Sng0VPXdW1XSwfh99a$QtzUpVj79366XXo+H1+ojdhQkMI8e/h1inp4X/xSPcU=','2025-05-07 04:42:43.181785',0,'23eca24','DHARSAN SIBI','V','23eca24@karpagamtech.ac.in',0,1,'2025-05-06 03:21:23.883254'),(167,'pbkdf2_sha256$870000$3hJGnskcWLBuVYQLu93hKz$homjnUV+cjgJCphSyxAMwk7N1oj+UeTez5dbz2imGAg=','2025-05-06 03:24:47.857233',0,'Aniruthra','','','23csa14@karpagamtech.ac.in',0,1,'2025-05-06 03:24:45.736162'),(168,'pbkdf2_sha256$870000$JPrW2E22ijU2AG6ozS46Zj$pHhFzOVcxcCX5B4UuBLm1IYgaixqUVh/uzUR/ucy+jw=','2025-05-06 05:09:40.000000',0,'23csa39','','','23csa39@karpagamtech.ac.in',0,1,'2025-05-06 03:27:07.000000'),(169,'pbkdf2_sha256$870000$SmJb4cd828J2f4OTHwe9ob$f+yI6vHIH5pijmOTaMjFC3KtLkC5L/QLmJmU/7BSZwA=','2025-05-06 03:28:55.065047',0,'Kanyaka05','','','23csa54@karpagamtech.ac.in',0,1,'2025-05-06 03:28:52.622489'),(170,'pbkdf2_sha256$870000$js0EOntjorFun1rgEU7K0k$XdBVBPHHG1EywRN5ilEqJNvSHTguunmCmFnMGjPCkqk=','2025-05-06 03:59:30.735661',0,'22ecb58','Vimalraj','S','22ecb58@karpagamtech.ac.in',0,1,'2025-05-06 03:36:51.813972'),(171,'pbkdf2_sha256$870000$rKHLhKk6H6f3UW561VPYf7$S3nVXSe5ZrYjA5EQ+wlQSjd3uSWI60zbrneqGKPwZ1g=','2025-05-06 05:54:52.005504',0,'23csa06','ABISHEK U K','U K','23csa06@karpagamtech.ac.in',0,1,'2025-05-06 03:36:52.641644'),(172,'pbkdf2_sha256$870000$tYl4mYFMGXQzjhV7PAboaO$O+oNplqo6HxU50xs2VWNxe4xmGFkVdLjYmYHVwtBliE=','2025-05-06 04:06:09.940594',0,'22ecb61','Vissnuvardhan','Kumaresan','22ecb61@karpagamtech.ac.in',0,1,'2025-05-06 03:38:13.930773'),(173,'pbkdf2_sha256$870000$uaXPucZnCujuoiOgwjm1lt$78udZ6bJRrKcPds3cESNwPDSgRhFS/srut+wQki7g4Q=','2025-05-06 05:10:31.112927',0,'23csa31','','','23csa31@karpagamtech.ac.in',0,1,'2025-05-06 03:38:26.759472'),(174,'pbkdf2_sha256$870000$xjpR8piwJqvp1Nlxi42l3U$igIkmvrwU65n8nkCyYRvTBh8hm3g8CneV5GqjBXfgqE=','2025-05-06 05:19:31.167654',0,'23CSA51','','','Mjeevithan12@gmail.com',0,1,'2025-05-06 03:39:05.913859'),(175,'pbkdf2_sha256$870000$XTDDnWRi8QDq7gNtvizZ8O$iCjRukSPJ3I4i/v10sDx/xj5CZ6V17xc+kPKSonlmdg=','2025-05-11 11:37:24.648012',0,'23ecb38','Piruthvin','M','23ecb38@karpagamtech.ac.in',0,1,'2025-05-06 03:40:16.835727'),(176,'pbkdf2_sha256$870000$E8fopbPLOF8Bm0C2RpBcOS$AWGmFn0SXCi8qyxl7vp5x34FBVrMjxao9Z2OAnDsVRY=','2025-05-06 05:41:32.356695',0,'23csa54','','','23csa54@karpagamtech.ac.in',0,1,'2025-05-06 03:40:27.276949'),(177,'pbkdf2_sha256$870000$eMumjp2JnMu944dpR5tAIF$ZbEyAYjKpVGFhg+eZmlUrON051of6PebGCGMYflUJZ4=','2025-05-06 03:40:51.922437',0,'23ada45','','','shaunmugapriya@gmail.com',0,1,'2025-05-06 03:40:49.089607'),(178,'pbkdf2_sha256$870000$GtsCpgTmAuJ2chl0YdvOno$BjseM6I3Pd0ncvB+LYDHpY7U6mVreaGB4/BVXeLk9ZQ=','2025-05-07 11:39:03.420880',0,'23ita31','Mariya Ishwarya','R','23ita31@karpagamtech.ac.in',0,1,'2025-05-06 03:41:43.837262'),(179,'pbkdf2_sha256$870000$b9W7ygaN6aD99E1RUZokH5$Ju7OlYj/L1duujlZx6CbkwB3ieKJCQ7QS3LY5QFfXt4=','2025-05-06 03:43:36.145921',0,'Yeswanth366@','','','yeswanths366@gmail.com',0,1,'2025-05-06 03:43:33.289846'),(180,'pbkdf2_sha256$870000$hoUygVBxu8HS2961nZei7n$xTOtpfrViGyMQKMp3KsNP8dHPzzO1Q9Ak2aWkPF89jQ=','2025-05-06 05:26:40.708232',0,'23csb62','yeswanth','s','yeswanths366@gmail.com',0,1,'2025-05-06 03:47:48.493546'),(181,'pbkdf2_sha256$870000$ZauCeORAyNCA8jUVX0gmwT$dO0iMkuzY0HIsSY2wVYmo9nhcnnfXdJQk78O9fwUpvU=','2025-05-12 09:01:46.140468',0,'23csb18','Nivas','S','nnivas495@gmail.com',0,1,'2025-05-06 03:48:22.803124'),(182,'pbkdf2_sha256$870000$wYmjXN3ahnW6KjEhtc9cuJ$e70VDIjTQHJlyYJDvf6H5U9rT02P/NZWIyMWorDuUkc=','2025-05-06 03:49:22.685386',0,'23ita60','Varshini','Sri.M','23ita60@karpagamtech.ac.in',0,1,'2025-05-06 03:49:18.895726'),(183,'pbkdf2_sha256$870000$5jOqLWHr6fjDmzqG2Kjrtc$yVePsgSfBpvLssuDI57seMJIGhLCj2L2ykQh+naseFs=','2025-05-06 05:07:10.330957',0,'23csb10','MUNISHANKAR','M','23csb10@karpagamtech.ac.in',0,1,'2025-05-06 03:49:19.684947'),(184,'pbkdf2_sha256$870000$ZlIRDdKBgBsAQtTBFtFKup$Z2tgKF0p4jMB0qqKRFj5kGqIK6bjLRponYNcKwzJPX8=','2025-05-06 05:53:35.487924',0,'23csa33','Dinesh Karthik','K','kgdineshkarthik2006@gmail.com',0,1,'2025-05-06 03:49:34.511276'),(185,'pbkdf2_sha256$870000$ASCZjd0FdKu2VSwrTKWB2I$cOlciLwK1xqQJNE7Z9KTw2+EuDSYiT715gQmKPaW9VU=','2025-05-06 03:50:59.663585',0,'23csb37','','','23csb37@karpagamtech.ac.in',0,1,'2025-05-06 03:50:56.755877'),(186,'pbkdf2_sha256$870000$zyl5y463XMun9yjW3tz1o9$4aCZcyIYN/GVWXEZwFW1qRgz0ORnrhIu4fbImGQk/zs=','2025-05-06 05:20:38.555189',0,'24lcsb03','yogesh','waran','24lcsb03@karpagamtech.ac.in',0,1,'2025-05-06 03:51:02.394111'),(187,'pbkdf2_sha256$870000$QuXvnCRsWdb4poHwUsmWhV$fOlsPjUqt9tfjAo9tsvHlxLmYMK5neLirodpDKC6NSE=','2025-05-06 05:19:40.562263',0,'23csb24','raja','','rajamuthukumaranr2006@gmail.com',0,1,'2025-05-06 03:51:21.191755'),(188,'pbkdf2_sha256$870000$3SfEtG4XF0j2A8eCWAFl4v$Qg+SrBdNRJVuLlJ8BxbhX2Kd282mJKYLi40InBfMV7M=','2025-05-06 05:15:54.115857',0,'23csb45','Sri','Dharsan','sridharsan332@gmail.com',0,1,'2025-05-06 03:51:57.516073'),(189,'pbkdf2_sha256$870000$HlM5FPSO4bLEOtTcLLMMSa$DxRU6pB3Jh9UlcvKFQ7U2XyRGRBHJ1OZJwvLhNbMs/Y=','2025-05-06 03:58:39.575482',0,'23ada07','Dharshana','R','23ada07@karpagamtech.ac.in',0,1,'2025-05-06 03:52:00.450585'),(190,'pbkdf2_sha256$870000$bvguMduaV7wlen65f4sD1b$sg23gosVIiMhdJYQT6inC4Opp5ly7YQ6hoJtF9e1oZE=','2025-05-06 05:12:32.000000',0,'23csb57','Vimal','N S','23csb57@karpagamtech.ac.in',0,1,'2025-05-06 03:52:15.000000'),(191,'pbkdf2_sha256$870000$piqFhqLYcMpd3tacNfXPfb$i1GLeaBcchxMFcSaoTTuXJzIQRp9lPO4dgYgqU71gZk=','2025-05-06 05:21:12.975385',0,'23csb25','','','ramachandiran2231@gmail.com',0,1,'2025-05-06 03:53:55.199138'),(192,'pbkdf2_sha256$870000$2cpKhv2OW7UbT5oQVzpUYw$wH7unIeA7qyTHJ/cSI6d7wK5kUTxSyMOqOqgSeFuaFs=','2025-05-06 03:54:32.089909',0,'23csa28','','','23csa28@karpagamtech.ac.in',0,1,'2025-05-06 03:54:29.228703'),(193,'pbkdf2_sha256$870000$ItJDV4rIljODTIXNkj1uLb$FVgTSkaorh3rA1zLXfrppFWDS7CYvxh4gSDvrBRYXsg=','2025-05-06 05:10:46.340965',0,'23csa02','ABDUL','RAHMAN A','23csa02@karpagamtech.ac.in',0,1,'2025-05-06 03:55:05.778387'),(194,'pbkdf2_sha256$870000$oQm5O8AIz8Z6zMSh3cGKXx$3zZlTfIgzh4bzV22TzZTUdD4nXgt9lE0+cgrsNeAW7I=','2025-05-06 05:11:52.945374',0,'23csb15','NIGESH','S','nigeshniky@gmail.com',0,1,'2025-05-06 03:55:24.830810'),(195,'pbkdf2_sha256$870000$NhGvjNa5DhGScqGTNZd1dH$vhT361+zeq5PAkx4ZigZyx4ScVblddX3Xt8UXjucnhI=','2025-05-06 05:55:15.703608',0,'23csb46','SRI MONAN','PRABHU','23csb46@karpagamtech.ac.in',0,1,'2025-05-06 03:55:31.669608'),(196,'pbkdf2_sha256$870000$YbTldVLCiCMPDbG6Fx4cKv$ew+KDy87ma6x9kikU9EwZs8mKzMZOCarN7G2o1fJlgQ=','2025-05-06 05:33:19.000000',0,'23csb30','','','rithickpadmanaban2006@gmail.com',0,1,'2025-05-06 03:55:32.000000'),(197,'pbkdf2_sha256$870000$aL44EHPfeCbDqW4XRSsPSG$EQ+BjFZOg37gPwfszimxaNfQSxI8pD3tBOjZaw8Xngk=','2025-05-06 03:56:22.530990',0,'Suganesh_07-04','','','23csb51@karpagamtech.ac.in',0,1,'2025-05-06 03:56:19.571574'),(198,'pbkdf2_sha256$870000$nbFvjJ7YfJ1AZTvgYKukDo$zFYLsvqyPsXucQ/BgFPKFcf64998MH2Rb3ZN0/Vxn6M=','2025-05-08 14:40:14.030884',0,'23csb06','MOHANABHARATHI','A','23csb06@karpagamtech.ac.in',0,1,'2025-05-06 03:56:36.965816'),(199,'pbkdf2_sha256$870000$rihhU3o83FuIZv3AVEWbBK$jjqrZDm7n6JU34FPJRqWsorG6uija6EiZY89Nkd0EJ0=','2025-05-06 05:45:05.692063',0,'23csb44','Sibichandar','S','23csb44@karpagamtech.ac.in',0,1,'2025-05-06 03:56:49.111557'),(200,'pbkdf2_sha256$870000$ofj1GMyUmqxqffiW42a1SG$55Bia62AYKC0hFNJi5oOJUJZlhW1P9gwlDxNElR9L3Q=','2025-05-06 05:32:02.730852',0,'23csb17','Nithish','A','nithish171819@gmail.com',0,1,'2025-05-06 03:57:01.828055'),(201,'pbkdf2_sha256$870000$eOkr6W7ht0QabQZwYvxqIn$v1pd6i55xNqKsfQ7URh2Xewo0Yj5e5w3iXv0P9ltCMY=','2025-05-06 03:57:18.341991',0,'Poopash_prasath','','','poopashprasath02@gmail.com',0,1,'2025-05-06 03:57:15.511907'),(202,'pbkdf2_sha256$870000$DhLlflgiDjsdUVy0L2Yod7$rDvDA+mNtvYlfw9fRNG3e/WuOWH0KzuCqliTdje5/bQ=','2025-05-06 05:09:52.341273',0,'23csa50','','','23csa50@karpagamtech.ac.in',0,1,'2025-05-06 03:57:22.901311'),(203,'pbkdf2_sha256$870000$Wxs9sqjjc0CIejOYa0B6vf$jzHLqvHgFHxr9kg0TV96eziH5Y5WKuwzIr4KhAJ1MgA=','2025-05-06 04:26:19.889501',0,'Dharani','','','23csa28@karpagamtech.ac.in',0,1,'2025-05-06 03:57:52.635098'),(204,'pbkdf2_sha256$870000$pBTSlZvw08zQf0KfxCDwPd$9v877XLnVH9uJ6wL56X/DSP0h0vNQEhhx3rGVVCVX7o=','2025-05-06 13:29:21.714036',0,'23csa20','Bharani','R','23csa20@karpagamtech.ac.in',0,1,'2025-05-06 03:58:03.659240'),(205,'pbkdf2_sha256$870000$x5Xb6qpqPLX1OyxhE9KrWX$TA+ejntvDZCSODNQZLLgFghDlDp53tzp9QSE6U3KFhQ=','2025-05-06 03:58:25.962035',0,'23ita55','Sri Harini','P','23ita55@karpagamtech.ac.in',0,1,'2025-05-06 03:58:23.159468'),(206,'pbkdf2_sha256$870000$EHEJV7cGLwNvtckIOeDlv9$rZcGpJCVvgaegk09xD8hVp2lj102saidWncnQJyqd6s=','2025-05-06 04:09:08.385135',0,'23csb29','','','23csb29@karpagamtech.ac.in',0,1,'2025-05-06 03:58:39.973165'),(207,'pbkdf2_sha256$870000$wbIWMtpjbGRSwEgY015iRa$PLtndJmSrU1/DJ4vs7SVigQBkdt+nQCn+p8pUA9tHH0=','2025-05-06 05:59:09.380692',0,'23csb40','','','23csb40@karpagamtech.ac.in',0,1,'2025-05-06 03:59:35.017122'),(208,'pbkdf2_sha256$870000$kzYgYUWgVSPC0EZz8JDQRS$vQmDvtWwZPaLu2Q2Jk0oyC+GIJBb+YWq1vi7KKdo3oM=','2025-05-06 03:59:54.545764',0,'ARUNACHALAM','','','23csa16@karpagamtech.ac.in',0,1,'2025-05-06 03:59:51.658864'),(209,'pbkdf2_sha256$870000$v4qv63UFPXl7buiVcj074q$dyDhh3PgDaM+k6VOxGivWOniZJq14OX+dhsFFWM37Z0=','2025-05-06 05:37:46.679925',0,'23csa43','Harini','meena','23csa43@gmail.com',0,1,'2025-05-06 04:00:22.719562'),(210,'pbkdf2_sha256$870000$3czlNMJj1A6LqiPht4r8K5$WqBdn+VkS7ztk4HO8HR4e8L4Ca9Yb0FP1hwA/nS4onw=','2025-05-06 05:56:17.729196',0,'23csb51','Suganeshwaran','V','23csb51@karpagamtech.ac.in',0,1,'2025-05-06 04:00:29.931347'),(211,'pbkdf2_sha256$870000$Kv7ZwEQLTKcFtSZLxtupJD$6zQXo2z9uZuRhPEOdtZ8alKiBHk/Gmkafys5yIk6uBg=','2025-05-06 04:00:58.160283',0,'YOGENDTHIRA','Yogendthira','VK','yogendthira.official@gmail.com',0,1,'2025-05-06 04:00:55.130949'),(212,'pbkdf2_sha256$870000$6dbngdqNNpLBGnxh9ERvIB$b82ktNKJTZ8Jerb8dDJQKEu2gYqRNiCC6CfQN9hXPrY=','2025-05-18 14:44:18.377213',0,'23csb07','A','Mokeshwar','05mokeshcse@gmail.com',0,1,'2025-05-06 04:01:05.982941'),(213,'pbkdf2_sha256$870000$Vkn52bGfl6lBKlAzfcTwne$N+WfDLHK8hKa4FdXZcGq5/ZRasaQlqE8zAmFTCWu9kg=','2025-05-06 05:53:10.178491',0,'23CSB21','','','poopashprasath02@gmail.com',0,1,'2025-05-06 04:01:26.155324'),(214,'pbkdf2_sha256$870000$banGZbFK9nfUgVLPZeNjmv$fEjQSVl1CGGDMRgTNYliiMei01nMb2FdN7i0OmmHoI0=','2025-05-06 05:55:47.356590',0,'23csb01','MadhuHariHaran','M','23csb01@karpagamtech.ac.in',0,1,'2025-05-06 04:04:46.946462'),(215,'pbkdf2_sha256$870000$A7ey5BfxHoKT4ZY2EPC0iR$LmBKU+FAja0yY//eV4Fn3gnd3qGDyFK55XVXcJ5Pc6I=','2025-05-06 05:12:46.097005',0,'23csa36','Faisal','Rafi M','23csa36@karpagamtech.ac.in',0,1,'2025-05-06 04:04:55.570872'),(216,'pbkdf2_sha256$870000$r623YlrftSsLkvsmGLVak5$Wn7PQ0c+qtmpB4eLU72sgulwiy2lUXSbv6xy27MGtwM=','2025-05-06 08:52:24.043889',0,'23csa22','DEVADHARSHINI','S','iamdharshini28@gmail.com',0,1,'2025-05-06 04:07:44.134792'),(217,'pbkdf2_sha256$870000$dIp6D9gcG3Ring48HA3LDJ$aJOby8pDw/sV8hQHh/er/MmhWRVQ65NKnQxFWReX5L0=','2025-05-06 04:58:44.261645',0,'23eca38','GOPI','M','23eca38@karpagamtech.ac.in',0,1,'2025-05-06 04:08:33.760784'),(218,'pbkdf2_sha256$870000$V5G6y8yYBzXypJLhxmVFG0$YbpO05bGu/0ItFQKRTPO9hnfa2NaNYkQsQ/0lsJSH/g=','2025-05-06 05:12:30.588699',0,'23csa16','Arunachalam','R','23csa16@karpagamtech.ac.in',0,1,'2025-05-06 04:08:43.490108'),(219,'pbkdf2_sha256$870000$YGmMVe0HzbeN3mrbrFjZPQ$K36yzVBqHI/ZfGKEzvf2Y4M8hh8VozUjutqOnaICU2Y=','2025-05-06 04:19:46.878295',0,'s8n0gre','Deborshi','Kashyap','24lita01@karpagamtech.ac.in',0,1,'2025-05-06 04:10:52.565534'),(220,'pbkdf2_sha256$870000$UCFgzp5iBIn5PHkVjgrPoU$3kKnkgr80NZ03YSXkMYfJfJRW+Gv+i+3aUucs+E8CdA=','2025-05-06 05:37:54.000000',0,'23csa32','','','dineshkaruppannan09@gmail.com',0,1,'2025-05-06 04:12:27.000000'),(221,'pbkdf2_sha256$870000$JFfdYZDYpLNj3DL7TEWxvL$bmIy994Y1bGhWvFsYej5qDVDxT54RcnyCU80lKnpqWA=','2025-05-06 05:15:52.086737',0,'23csa19','','','23csa19@karpagamtech.ac.in',0,1,'2025-05-06 04:14:03.894384'),(222,'pbkdf2_sha256$870000$CpKB5l4mh397KBeBUG8Ttu$X+ipewMl7RadbPPww5BhnGigPpgAtC45gAZHTejyS2Q=','2025-05-10 15:21:19.914347',0,'23csb04','Manikandan','S','23csb04@karpagamtech.ac.in',0,1,'2025-05-06 04:14:22.353232'),(223,'pbkdf2_sha256$870000$WOeSoI30OipRH2j5Zq3DDV$snj2J2L/RYsHcRfsW4WWjMHH8FayL+WW2D9FZyh/McI=','2025-05-06 05:56:45.951272',0,'23csb50','','','23csb50@karpagamtech.ac.in',0,1,'2025-05-06 04:15:05.207475'),(224,'pbkdf2_sha256$870000$Yv9ZO74YmMVae0WjsuG4E0$RkpD6gF/c4yWZ4DnAfDWThrjpKdO596co7fvLI4bz4k=','2025-05-06 05:36:24.775481',0,'23csb55','vetrivelan','k','23csb55@karpagamtech.ac.in',0,1,'2025-05-06 04:15:16.757069'),(225,'pbkdf2_sha256$870000$SYD8t5byRd2aubctQsdpID$E3ZdxHr4ci0qwIov/5fr/4m5pC8VHkb8mNOO1NhPrpA=','2025-05-06 09:14:05.548427',0,'23csa48','ISWARYA','R','23csa48@karpagamtech.ac.in',0,1,'2025-05-06 04:16:53.057687'),(226,'pbkdf2_sha256$870000$mrOA92ClmK6YR7qYVCxz38$fcuQdkv4LEi31BafWwdRnKa9YWL6+LqiqqUNU4xEpbk=','2025-05-06 04:31:54.428202',0,'23csa34','','','23csa34@karpagamtech.ac.in',0,1,'2025-05-06 04:18:54.778078'),(227,'pbkdf2_sha256$870000$x9CSbfNJTB492ymXXbqRYN$d4TVdE066fXQ0AKO1jItTgAvYEv6hizRYi/WgEhHHwA=','2025-05-06 05:59:40.766587',0,'23csa37','','','23csa37@karpagamtech.ac.in',0,1,'2025-05-06 04:19:06.944198'),(228,'pbkdf2_sha256$870000$dH11xQZEF7kaJKZO8ky60C$3oAdsAi5OQklnBj8DOVV5gUOZ+EUro6rvXRsp830BgU=','2025-05-06 05:23:01.250662',0,'23csa44','','','23csa44@karpagamtech.ac.in',0,1,'2025-05-06 04:19:20.224425'),(229,'pbkdf2_sha256$870000$3DCiwbhgnCCI5OqZqgSLto$suy5f64kw0Ue9cBv/M6dOJ5tj1mjtt30Taa8YsGHWbQ=','2025-05-06 04:19:38.677503',0,'23ada61','VISITHRA','R','visithraramasamy@gmail.com',0,1,'2025-05-06 04:19:35.901525'),(230,'pbkdf2_sha256$870000$4PFqg9IRDysiFPO6X3q9wM$W7wxRLhB+p1ILoIAqMfv0TgtFUoWcHBnhEt2t8wHevg=','2025-05-06 12:58:36.192337',0,'23CSB47','SRI','PRIYA','csripriya226@gmail.com',0,1,'2025-05-06 04:20:21.753044'),(231,'pbkdf2_sha256$870000$DQqaVADe6tlylfAgt8AKJx$fHy5B28+Bl7/cLo27lDP+OOTxCn7z4weUM+06x5DBhs=','2025-05-06 04:21:25.550718',0,'23ecc21','SHANJITH','S S','23ecc21@karpagamtech.ac.in',0,1,'2025-05-06 04:20:54.444897'),(232,'pbkdf2_sha256$870000$OCzFIIB5LZqjtQkkzzFuPK$poDOQNvEGipVwYKe4C3eqdX0kcrIQl1LlkF3oDfQ7LU=','2025-05-06 06:56:11.569357',0,'23csb63','Yogesh','','yogeshperumal637@gmail.com',0,1,'2025-05-06 04:21:10.002097'),(233,'pbkdf2_sha256$870000$xtSValeIL0z7oNtcHbPdbK$lGMHbtfgCNJ9fjEoI+Ns6GzVXD2peb3/sSrftbPwlRI=','2025-05-06 04:24:19.418582',0,'23ada23','Krishnakanth','J','23ada23@karpagamtech.ac.in',0,1,'2025-05-06 04:24:16.573290'),(234,'pbkdf2_sha256$870000$i3Fk3DdC6MqaFd5nBLSrHD$s+gdEHubcMx8rjjZ+oDRELaebeWjS+TjDztNwy95EFU=','2025-05-06 05:05:48.504010',0,'23ada14','Hemapriya','M','hemapriya272006@gmail.com',0,1,'2025-05-06 04:25:01.041888'),(235,'pbkdf2_sha256$870000$OM9ElrnIqXCYEirtq9es4E$7xVSDfxAV9mj3Z0CCQqDYtvfACvIMxKMbjGIGCWWaac=','2025-05-06 17:50:26.253096',0,'23csb03','','','23csb03@karpagamtech.ac.in',0,1,'2025-05-06 04:25:09.608553'),(236,'pbkdf2_sha256$870000$lpw8bJr4xknLWNEcF7Y3oB$KEr9be26C15VAP4Y4czaK+kpMNtk1Y0YSDP6dxhJoos=','2025-05-06 05:06:21.250472',0,'23csa07','Agestin Yosuva Daniel','A','23csa07@karpagamtech.ac.in',0,1,'2025-05-06 04:25:37.955339'),(237,'pbkdf2_sha256$870000$iLopWHX0HHIE3bRS5LGSHt$nzGdjpj1BQMxiMzPFqfHvpQ9AxRUvuyLTfd6rUnjIxM=','2025-05-06 05:53:38.675338',0,'23csb42','Shriram','S','23csb42@karpagamtech.ac.in',0,1,'2025-05-06 04:26:05.697739'),(238,'pbkdf2_sha256$870000$ssL5wAarhhU8ioaU2IENwo$CGa86dyL55E77eHpGwYqC3nI/Z393dghGN0GTe+IxdU=','2025-05-06 04:26:57.269109',0,'23CSB33','','','rohithram684@gmail.com',0,1,'2025-05-06 04:26:54.632286'),(239,'pbkdf2_sha256$870000$bVPLVnVUXLJDjgMb1yR3VY$Vde3A0mAdh8z0visTAt3zfDiTghLP5QUblOfN8iQmrk=','2025-05-06 04:27:10.467443',0,'23csa18','','','23csa18@karpagamtech.ac.in',0,1,'2025-05-06 04:27:07.854769'),(240,'pbkdf2_sha256$870000$ShbZLIWmmRRx7woIAWOYdv$0oY93mxDPAeXnMGOdv8hLD4mAiO4NOrd7uriX1EaG9c=','2025-05-06 07:44:33.195146',0,'23csb35','','','23csb35@karpagamtech.ac.in',0,1,'2025-05-06 04:28:19.631906'),(241,'pbkdf2_sha256$870000$6pheNQNdY1RjekfrvjZCBU$b2R44onQvFM+cWjA8vWdkFZ30riANGU/hJ7EYMph9NM=','2025-05-06 06:02:48.385480',0,'23csb08','','','23csb08@karpagamtech.ac.in',0,1,'2025-05-06 04:29:33.566309'),(242,'pbkdf2_sha256$870000$IASn0a7Z7IOobGwntJ9z9m$ryx+X2KEi70/iJJ+w1H4qPHR+4ba5dKN4vimDm0KQH0=','2025-05-06 04:52:20.236537',0,'23ada39','Saleemullah','M','saleemullah192005@gmail.com',0,1,'2025-05-06 04:29:38.969316'),(243,'pbkdf2_sha256$870000$aWUgG7I8zo3So4W1MSBL9q$JvD0cRV2R6n05LBJSek5/Q+YDoPWOE4mNt1AFvsU8kA=','2025-05-06 04:30:26.615409',0,'23CSB41','','','23csb41@karpagamtech.ac.in',0,1,'2025-05-06 04:30:24.121275'),(244,'pbkdf2_sha256$870000$rmDiGISJrC18ntgs0qWsil$waFlJt+HurOMgbtNpQF5AdpC6aW14I8VmoXBN5xqqYw=','2025-05-06 05:30:36.919174',0,'23csb38','Samuel','J','23csb38@karpagamtech.ac.in',0,1,'2025-05-06 04:30:25.592301'),(245,'pbkdf2_sha256$870000$Ety00Io5Qj4I1Ebrl6QgHR$Wo/izewooHy2wyO6MQoUBYRTzt4eyzN0kmL8MXtqYXE=','2025-05-06 04:43:30.294287',0,'23csb22','','','prathaban009@gmail.com',0,1,'2025-05-06 04:30:40.818006'),(246,'pbkdf2_sha256$870000$0EU7SrRxoEpYIgPFG8zVTt$gS2NUQEa9eNbWYCN/JLhP9XUHjnVbOa44lrKJLt8m40=','2025-05-06 05:21:30.544459',0,'24lcsa03','Santhosh','R','24lcsa03@karpagamtech.ac.in',0,1,'2025-05-06 04:30:51.829162'),(247,'pbkdf2_sha256$870000$rGCIUIcCqYvTTvXLFQiQrV$ROzDO8ZHwBc53tHJLel0MoRSIh9EiqQ7N5BnCxVBeVs=','2025-05-06 04:48:05.134946',0,'23csb39','','','23csb39@karpagamtech.ac.in',0,1,'2025-05-06 04:31:05.433828'),(248,'pbkdf2_sha256$870000$uVRDZDwdjNu8QaXInSB244$7Zmn/hngW9U5mCDrWVZZjkxQLNmUx/UPRcDc3EZOO6U=','2025-05-06 05:11:32.958542',0,'23csa35','','','23csa35@karpagamtech.ac.in',0,1,'2025-05-06 04:31:39.232684'),(249,'pbkdf2_sha256$870000$H80pktk09gC47etwcDdZG5$RtM3J3YetjGzh5CHqk+QCrtNtPwut2o54CoJatUz81g=','2025-05-06 05:34:55.851784',0,'23CSB11','','','23csb11@karpagamtech.ac.in',0,1,'2025-05-06 04:34:20.978433'),(250,'pbkdf2_sha256$870000$FQEoZMitNGySS1yfhRVSpo$yd1NQD/80kPG2LS8X1mb9YI2ykY88UUmKWixLaXMSZA=','2025-05-06 04:40:46.899916',0,'23csa04','','','23csa04@karpagamtech.ac.in',0,1,'2025-05-06 04:40:44.714580'),(251,'pbkdf2_sha256$870000$228yjDyyVAiknS6adCyd5E$TfeJOk/FZypF+JzdVlo2zLFChlyoQhZTNLeWiexMSYc=','2025-05-06 04:43:00.088414',0,'22ada24','','','22ada24@karpagamtech.ac.in',0,1,'2025-05-06 04:42:57.626439'),(252,'pbkdf2_sha256$870000$plheY4ZCq7ZlS5kwQ5foxh$DeB6mAdB8PbX7LlKmIKX95AkcaI9YY7Z4wNrT5IebzA=','2025-05-06 04:43:58.570591',0,'23ada18','Kanishka','K V','23ada18@karpagamtech.ac.in',0,1,'2025-05-06 04:43:56.137744'),(253,'pbkdf2_sha256$870000$Qs8dqL1QnfY3qF2SGc5cgy$4JBqgy6Oz1XozajxTJaX/ytco3/HbR6aHfvtf6RoTAE=','2025-05-06 05:32:52.184156',0,'23csa62','Lokeshkumar','S','23csa62@karpagamtech.ac.in',0,1,'2025-05-06 04:44:49.475744'),(254,'pbkdf2_sha256$870000$PmrsF4ZYhGLzvfWcN7lpSy$nayzdG9AAAzH5wnNHih+NhbQ4bfJosCEvaZCQcK/K/8=','2025-05-06 05:20:24.524198',0,'23csa03','ABI','P','23csa03@karpagamtech.ac.in',0,1,'2025-05-06 04:45:46.561695'),(255,'pbkdf2_sha256$870000$UX1Ltp6oeA6QCjXX6aqFW9$/18Sx17j8EjPhjD1Kt2vAsSF7nI9vn9mYWseG9HXWlY=','2025-05-06 04:47:26.764576',0,'23ita35','','','23ita35@karpagamtech.ac.in',0,1,'2025-05-06 04:47:24.695116'),(256,'pbkdf2_sha256$870000$jEKf1JGnrKrrQ0YFXDO3HK$g+52wxFsIGSKbMOm4LyEQO7cJXxnUZnOb3RspWM61fc=','2025-05-06 04:53:15.328935',0,'22ada17','Gopika','T','22ada17@karpagamtech.ac.in',0,1,'2025-05-06 04:47:47.722823'),(257,'pbkdf2_sha256$870000$20RtIAIstO7SCbRY00l3iW$wlhmyxOMJHDQeRcGS2QldTd56/RZLPXURlt+5/Yo2lw=','2025-05-06 04:50:41.036112',0,'23ada34','Preetha','Murugesan','23ada34@karpagamtech.ac.in',0,1,'2025-05-06 04:50:38.822766'),(258,'pbkdf2_sha256$870000$kYQCKucy5ILvLz1mQm8opd$xiZfr3j9xeEx9SZqeW3p9yGN90AHKXZhYq0ltV5BRck=','2025-05-06 05:07:08.068115',0,'23ada51','Srija','M','srija02032006@gmail.com',0,1,'2025-05-06 04:51:10.684289'),(259,'pbkdf2_sha256$870000$4wg07Z2AFTiuIifvNb07cG$N7wQH2FUtfye03cXOz+gsi1S4GfFRoyMXEs/tSLppMg=','2025-05-06 05:23:40.606695',0,'23csa29','','','23csa29@karpagamtech.ac.in',0,1,'2025-05-06 04:51:50.893697'),(260,'pbkdf2_sha256$870000$Xqez5rfl8pi1GOqFjLbRrO$HeDiU3C0p+Z/ZxTZKI/1neidILe2ruXivDUwEEWcUEk=','2025-05-06 05:11:45.138138',0,'23CSA17','','','23csa17@karpagamtech.ac.in',0,1,'2025-05-06 04:52:05.113749'),(261,'pbkdf2_sha256$870000$Gnj8dkGfXj8KWA7LKq5CtE$EWL4Tpzo+8CDRTSprps7CpUmKQExwwmYen4IdXNPZtQ=','2025-05-06 06:02:57.425264',0,'23csb02','','','23csb02@karpagamtech.ac.in',0,1,'2025-05-06 04:52:18.000363'),(262,'pbkdf2_sha256$870000$F0CZ2KKasurdL6FIFbogjt$30ibTHRNKdgPedPLcge8kqaEieUBBYgezZGJbhhSfLs=','2025-05-06 04:52:38.326260',0,'Bharathidhasan_P','','','bharathidhasan2406@gmail.com',0,1,'2025-05-06 04:52:36.189424'),(263,'pbkdf2_sha256$870000$icB4JRRhob7rGMVnyB1bea$8xG3X1HJjd8qHdJ8mYlm5FNjwPg3DNsaSglmRKQNS4A=','2025-05-06 04:53:37.188601',0,'Sakthi@123','','','22ada44@karpagamtech.ac.in',0,1,'2025-05-06 04:53:35.136406'),(264,'pbkdf2_sha256$870000$8mr5E0PJbZo53FpAjGnPve$JLY3RO8gvFv6/aZ9AdeBf6MBHsKcG2qDooO6wTB0Hxw=','2025-05-06 04:55:13.980308',0,'23ita12','Balasundari','S','23ita12@karpagamtech.ac.in',0,1,'2025-05-06 04:55:11.758503'),(265,'pbkdf2_sha256$870000$VyqFJMEXdvJY6Fa42BjBrv$XTAqBxWADHpygTFJAXn1sM9CR9mjEqptboeTIVKHgNw=','2025-05-06 04:55:48.612550',0,'22ada44','','','22ada44@karpagamtech.ac.in',0,1,'2025-05-06 04:55:46.177750'),(266,'pbkdf2_sha256$870000$RMeS8sBYlrrCQ6DQDvmLvc$FhEsR1143xlMJs4sE1qo+aQoNtnPuq3bHl+1TQGsFk8=','2025-05-06 06:21:14.047182',0,'23csa24','','','23csa24@karpagamtech.ac.in',0,1,'2025-05-06 04:56:22.654409'),(267,'pbkdf2_sha256$870000$UNCheeQVAUiGqG7skVcZmx$alAxYyvnNeIO600BQEKLL/S7cVjG1Ie3H060h3kD/oY=','2025-05-06 05:35:44.473660',0,'23csb49','','','23csb49@karpagamtech.ac.in',0,1,'2025-05-06 04:59:53.256639'),(268,'pbkdf2_sha256$870000$Nzxy112BSYh85Cn7plWRUv$0KfJNjGFrspMsBpoQuhGNxzDyUscumWxFx5cEpWgWGE=','2025-05-06 05:01:11.522217',0,'Premnath_M_D','Premnath','','premnath262005@gmail.com',0,1,'2025-05-06 05:01:09.257885'),(269,'pbkdf2_sha256$870000$s5muICovJRXXWnHqOhiZ2t$LT64rPVhqcTikx8UBuw4/SE2QJJFmGCtjuau1DO+Ris=',NULL,0,'23ada43@karpagamtech.ac.in','','','23ada43@karpagamtech.ac.in',0,1,'2025-05-06 05:01:41.080745'),(270,'pbkdf2_sha256$870000$Hg4rAvRbxMDD6uzMBjwuSq$lD2Uuer1B0cyx2kf0VnG3/x00Pv6llWjveFgC515LDI=','2025-05-06 05:04:35.362366',0,'22ada63','','','zsherzeen@gmail.com',0,1,'2025-05-06 05:02:38.814857'),(271,'pbkdf2_sha256$870000$nHgMj8JiEQY2u8aqsxeFbk$xkfdnFHhlVm1k47WnZusJvBMiEunf7sI9G55xOWCJMs=','2025-05-06 05:09:04.265997',0,'Santhiya_s-47','','','23ita47@karpagamtech.ac.in',0,1,'2025-05-06 05:03:58.630421'),(272,'pbkdf2_sha256$870000$LEIpvALx2gf6eylWxkiwzM$EpN5gYdm+NuanB3nwl/4UK0nZQPmeEMn3ToybjIZt0M=','2025-05-06 05:07:25.837941',0,'23csb13','','','23csb13@karpagamtech.ac.in',0,1,'2025-05-06 05:04:19.730280'),(273,'pbkdf2_sha256$870000$ylFTf2UcTlXB5RvIyge2mN$7YRfAeryvHJy8X36JyIY27KLK5IFhPIurNbFzDHP3xw=','2025-05-06 05:14:02.560267',0,'23ada47','','','shreesharadhakrishnan@gmail.com',0,1,'2025-05-06 05:05:01.945127'),(274,'pbkdf2_sha256$870000$4FVQjboABYa3AgD0nnpRfS$z7pnLQvrYeEytLoTqeS41hz63KIJapG1qp32cZGM60c=','2025-05-06 05:08:13.888160',0,'22ada53','','','soundaryaindusivakumar@gmail.com',0,1,'2025-05-06 05:08:11.890723'),(275,'pbkdf2_sha256$870000$JRVIwIl7rYkgiqk5OanV3z$slV+iX1BxpFx3tDYmf9IArkF6iMihpOCM6Eg5rFnP5s=','2025-05-06 05:09:21.486867',0,'23ada47.','','','23ada47@gmail.com',0,1,'2025-05-06 05:09:19.232997'),(276,'pbkdf2_sha256$870000$R3iKWc8TewJDAU1RiIfsJ8$ZVLAuplrrmB18SM+NvlmBC2ZaQRNy9456aLyF53H5FE=','2025-05-06 05:13:27.029544',0,'721223104104','','','sdshreya86@gmail.com',0,1,'2025-05-06 05:09:23.895042'),(277,'pbkdf2_sha256$870000$B99mud0lskgUoBO13y4DBz$Da6voFPn+4/AAUkBFv68VsvnotZnG00dvWswvsy4KCg=','2025-05-06 05:09:39.653811',0,'23ada26','','','23ada26@karpagamtech.ac.in',0,1,'2025-05-06 05:09:37.428966'),(278,'pbkdf2_sha256$870000$ZDDajR2DWKQEPF7Bwh9iOq$wKxm+7pnSPjqUCTg1nn+13sdaXuv+h6TUksLPQXJT+s=','2025-05-06 05:23:08.789124',0,'23ada15','Hemavarsha','R','hemavarsharaja@gmail.com',0,1,'2025-05-06 05:10:08.493706'),(279,'pbkdf2_sha256$870000$IqCnzjJ5SKK2Hp881SJQJY$4wZJRhY3N3l7GNPZWH1YmBp1IZ87NRBAZ/G22HGwLx0=','2025-05-06 05:10:51.060201',0,'Santhiya_s-47-','Santhiya','S','23ita47@karpagamtech.ac.in',0,1,'2025-05-06 05:10:48.462520'),(280,'pbkdf2_sha256$870000$PDFLKkSmzb9gJ8NZNah4zu$x9dgv1p7xiORB9LvIV6wCBVo/hiDr4zhHfh7hPTQ47k=','2025-05-06 05:38:03.000000',0,'23csb48','SRUTHIPRIYA','V T','23csb48@karpagamtech.ac.in',0,1,'2025-05-06 05:12:44.000000'),(281,'pbkdf2_sha256$870000$PbqYXc4WSxQm0MADfKrk2h$y88LszX5GbcSE3Km0AIG6kRmOzF6muyhqwvshQJdupM=','2025-05-06 05:13:02.460484',0,'23csb31','','','23csb31@karpagamtech.ac.in',0,1,'2025-05-06 05:13:00.016065'),(282,'pbkdf2_sha256$870000$lFgbFqxXGdA7bKH6Dd2qk4$VDmZ3OqDQFIgGw2YjxxdGBwbknv5/5Teq0nwewxwdAI=','2025-05-06 05:13:29.769432',0,'23eca12.','ASWIN RAJ','PK','23eca12@karpagamtech.ac.in',0,1,'2025-05-06 05:13:27.289768'),(283,'pbkdf2_sha256$870000$xu9qbp5KpJ8xSvuOHc3pMh$iosR3ABfoXEUV08LOqHLEoreV8bXtaOpSv8gCsYGa3Q=','2025-05-06 05:39:04.350913',0,'23csb52','','','23csb52@karpagamtech.ac.in',0,1,'2025-05-06 05:16:51.128954'),(284,'pbkdf2_sha256$870000$nCh9FtZfkL1MAPK80vdshu$jCdsPdV2lcsVPWj5ioy6POiVzZ8GwzpV4GMgY8hDyl8=','2025-05-06 05:16:56.094653',0,'23csb06karpagamtech.ac.in','MOHANABHARATHI','A','mohanabharathia2@gmail.com',0,1,'2025-05-06 05:16:54.119270'),(285,'pbkdf2_sha256$870000$oQHUWks9EdNwoZ4wRsBmIs$1tPrBLPfd4Buj1cRjf8ZDL7DDi4CcOS7J2KA+uEAx30=','2025-05-06 05:35:20.862080',0,'23csb20','Periya Maruthu','S','23csb20@karpagamtech.ac.in',0,1,'2025-05-06 05:17:02.408429'),(286,'pbkdf2_sha256$870000$hm7UoYssfKfvT7AtKAP808$1cRPtkDJ8sY/buoGxUdxJkvJPCFLmwMRH607pqUvH+4=','2025-05-06 05:19:36.828021',0,'22ada61','','','vignesh116600@gmail.com',0,1,'2025-05-06 05:19:34.790020'),(287,'pbkdf2_sha256$870000$dioGPtqhkHICuWr9p1M9rh$ullA+6lfeNYwEnW4h2Unozc01gKAUl7kQD20JLtLiOA=','2025-05-06 05:19:47.580321',0,'23csa27','','','23csa27@karpagamtech.ac.in',0,1,'2025-05-06 05:19:45.435128'),(288,'pbkdf2_sha256$870000$wESVk1SZq6ycLAU7tz8qLz$6LwPzIUH0IOLmDtSnE2rxUSYteyfII7ruOYl13/i5iA=','2025-05-06 05:20:56.588391',0,'23csb54','','','23csb54@karpagamtech.ac.in',0,1,'2025-05-06 05:20:06.957659'),(289,'pbkdf2_sha256$870000$8SBQk4y7IFX8bcwyDnc0oh$ewjvUoQ6M7mtWhPEf14EsSZ6Et3mT61npKAiEHuYbyo=','2025-05-06 05:27:10.850899',0,'23csa57','krithick','A','23csa57@karpagamtech.ac.in',0,1,'2025-05-06 05:22:57.561332'),(290,'pbkdf2_sha256$870000$Us6amlbVQQ42Cz4MppezfD$iIgyQDl2LiYJULPbj8daXBJgzabTBIuESgFMO+v11iM=','2025-05-06 05:30:56.692133',0,'23csb61','','','23csb61@karpagamtech.ac.in',0,1,'2025-05-06 05:23:41.685837'),(291,'pbkdf2_sha256$870000$GS5J1nuDqBlzMv5Aow1IrD$HQ6CPAZFn9cDFXHCGVCZGSn34Bcu0g8gsRilKQmqBV0=','2025-05-06 05:25:21.496718',0,'VMonika@08','','','monikamonika25327@gmail.com',0,1,'2025-05-06 05:25:19.057860'),(292,'pbkdf2_sha256$870000$Z2GSm0JET8pPigaCwNXb2B$DD8AQnZoBwVapSI3oMd2drcUWGFlPAHyZ4j577iPb+w=','2025-05-06 05:40:17.519400',0,'23csa13','','','andrewsdavidnov@gmail.com',0,1,'2025-05-06 05:25:38.878760'),(293,'pbkdf2_sha256$870000$jgoC6VHJmc4jPHvM4Yzkjo$z7rp0yyvwsFhYEfRtyYbSssA2SEHCWw4HdvbXXzC/X0=','2025-05-06 05:30:52.387968',0,'23ada21','Kavin Kumar','A R','kavinkumar777ar@gmail.com',0,1,'2025-05-06 05:30:49.888825'),(294,'pbkdf2_sha256$870000$eGt33P9IFX8NAgzWcSiMrQ$YnZy+bzr+78BxtGnlolNy8YmucLS5BGGXKXdQzL1KY8=','2025-05-06 05:32:11.140475',0,'23CSB58','','','23csb58@karpagamtech.ac.in',0,1,'2025-05-06 05:32:08.653237'),(295,'pbkdf2_sha256$870000$OuMztMjFIh1GKszMG2gNXP$NQOm5KslkdfxLuXMxOJ97Kgtvpa2Nkx0Vxne7zYcCI0=','2025-05-06 05:37:34.063797',0,'Muralidharan2712','','','23ada31@karpagamtech.ac.in',0,1,'2025-05-06 05:32:39.222058'),(296,'pbkdf2_sha256$870000$DHhR1ST8UpOw9xfhYe9beC$cgz9EK8DgABJQ9nJl9Cyb2LcaL3acyWYcU2VFaPpcFQ=','2025-05-06 05:35:38.004115',0,'23csa26','','','23csa26@karpagamtech.ac.in',0,1,'2025-05-06 05:35:35.572261'),(297,'pbkdf2_sha256$870000$pGEBWkV9LiuYwfYfP4xNul$q7KekDaHR3fcoQjBqlshRR0YfFunoWl50Aj8TLwyi4w=','2025-05-06 05:36:26.869584',0,'23csa46','','','23csa46@karpagamtech.ac.in',0,1,'2025-05-06 05:36:24.450401'),(298,'pbkdf2_sha256$870000$TKXNz5J8HHguDfT6Ns4jBy$h0FReE08HSL6yf1qixu3EkkpXxYWjpILjUYhXQDFKM8=','2025-05-06 12:58:18.973762',0,'23CSB19','NIVETHA','V','nishanivetha07@gmail.com',0,1,'2025-05-06 05:37:00.386015'),(299,'pbkdf2_sha256$870000$VoybLPLnIy9qzCDoHclPBo$FMH8kCQcGvm4ru0Tqw7feAPeXBNQyWexd00QWZ1TwS0=','2025-05-06 05:37:56.388483',0,'22eca35','Hari Babu','M','haribabu2004.m@gmail.com',0,1,'2025-05-06 05:37:54.262666'),(300,'pbkdf2_sha256$870000$4noQK1zAnEn9RtLgZprQxL$q7Iigiac5sBHgiAMzKTUwO/wrc/78hyA+O43wtysrn8=','2025-05-06 05:41:37.417168',0,'23ada57','','','23ada57@karpagamtech.ac.in',0,1,'2025-05-06 05:38:11.585314'),(301,'pbkdf2_sha256$870000$5lkOiiWpxrDkZfQToYyOWL$MfWNyD47qhwleomtTAnv/EpdqV/7uoEmZN28k3s90Cw=','2025-05-06 05:40:04.430931',0,'23csa52','KABILKUMAR','','23csa52@karpagamtech.ac.in',0,1,'2025-05-06 05:40:01.977828'),(302,'pbkdf2_sha256$870000$ZCKlsbsZdeMNpG1ytkt3IN$3jFApfiNgipz1EF92L7bYV7Kz0d5bltB6nhpbTcc324=','2025-05-06 05:42:09.900707',0,'Monija_V','Monija','V','monishavel2006@gmail.com',0,1,'2025-05-06 05:42:07.372390'),(303,'pbkdf2_sha256$870000$3aszuRPHA1VRqD6YwwJSul$g5+geO5rT0Y5ljSoKU1G169eLk9Lq7XNuX4E2YCrmLo=','2025-05-06 05:43:54.776109',0,'23lcsa03','','','shandeepshris@gmail.com',0,1,'2025-05-06 05:43:52.745091'),(304,'pbkdf2_sha256$870000$StNsqav2E5lHuGMW65eFhC$3np+9lvUEMQyTuFAzJT3zs7H4XfP/ipjOWLDgFBMdvY=','2025-05-06 05:44:00.242746',0,'23csb09','','','23csb09@karpagamtech.ac.in',0,1,'2025-05-06 05:43:58.151162'),(305,'pbkdf2_sha256$870000$fUdgomYwIMuaoQvRW9pQNu$UImoQYUNx10TJPKyNDJhPDDnSPHkyq+a95rTbPb1aTw=','2025-05-06 05:47:41.630389',0,'22csa48','shriram','N','22csa48@karpagamtech.ac.in',0,1,'2025-05-06 05:47:39.540747'),(306,'pbkdf2_sha256$870000$XPVdWFXUBwG8VbyedNfsl7$GZCGOPeEdZiblc/d3gaVw/4z68mWpJu54T9WPlejWXw=','2025-05-06 05:52:59.706404',0,'22csa45','SANJAY','KING','kingsanjay2004@gmail.com',0,1,'2025-05-06 05:52:57.625071'),(307,'pbkdf2_sha256$870000$SFFmTBiXILIYDpG9O2XXFk$XhT7EHasGHiyBUu/Nsqx7ucrlHF04Ig7VOC+33zHSJw=','2025-05-06 05:54:59.203824',0,'22csa55','THAVASI','P','iamthavasi0652@gmail.com',0,1,'2025-05-06 05:54:57.129542'),(308,'pbkdf2_sha256$870000$NAtmNMhwgjaeCD7g2xRcRe$K7q8xmE75CEz+2L/8jSUIa4zHq5Y/HYbLNZ2t5DPEDA=','2025-05-06 05:56:03.206214',0,'24lcsb02','','','umakarthikaeni2003@gmail.com',0,1,'2025-05-06 05:56:01.087080'),(309,'pbkdf2_sha256$870000$vwa6A5tPtIXfi503D8NLNW$E3t2mZ1XJD69W9dMWiQTxNB/MeDl+wEqsBqqoa3uNU0=','2025-05-06 05:57:56.281714',0,'22csa61','','','vishalramachandran@10gmail.com',0,1,'2025-05-06 05:57:53.973528'),(310,'pbkdf2_sha256$870000$BoB4449T9dE3GKbC8Q5GCp$8wzMgUacDu2q+6OqPyE13Y627CLOnLBZlgnV9Mmg/4Y=','2025-05-06 08:07:43.498072',0,'23csa55','keerthana','G','23csa55@karpagamtech.ac.in',0,1,'2025-05-06 06:00:33.266496'),(311,'pbkdf2_sha256$870000$UQ3YWxtLq5Y337R6kIoAIY$4k2WDariAr3QUxdHe1LNp40gP3v3co57hYictFKgYVU=','2025-05-06 06:01:28.230755',0,'23ada59','Vignesh','P','vignesh24905@gmail.com',0,1,'2025-05-06 06:01:25.157254'),(312,'pbkdf2_sha256$870000$TA0vUU0CNfRM01a0qskkR8$RpO08ueoAHBg9bFTI20YJViNQV25wecJZ13LBFO1Stw=','2025-05-06 06:03:13.921974',0,'23ada19','','','23ada19@karpagamtech.ac.in',0,1,'2025-05-06 06:03:11.241559'),(313,'pbkdf2_sha256$870000$VFUB4kic8ZkKouPVW1yCPV$AgILpyqUO2hJVdsS8RTOJ7tiF5eKkBkQ8RzbcPrelfA=','2025-05-06 06:21:03.039599',0,'AVINASKUMAR_S','Avinas kumar','S','23ita11@karpagamtech.ac.in',0,1,'2025-05-06 06:04:14.810757'),(314,'pbkdf2_sha256$870000$Ti2XoTrPiZz9GEqn9vfsCj$XyBwkc2nzfvFljxoz0qa76DJuKMhvNtn36Fx6hlKOCM=','2025-05-06 06:10:44.342220',0,'23csa47','','','23csa47@karpagamtech.ac.in',0,1,'2025-05-06 06:10:41.407188'),(315,'pbkdf2_sha256$870000$eHVd590jVphPzinb3w6DXY$dgVZlfgvxFZmVB3Hb4fWk5Herk9wcS9s8VmgSe96O5s=','2025-05-08 15:15:30.827021',0,'22mea37','Ruthramoorthi','G','ruthramoorthi1622@gmail.com',0,1,'2025-05-06 06:10:45.298677'),(316,'pbkdf2_sha256$870000$kndqkTXD9k0r4Ur6NQpnHu$hELYl6DeJwe+vxwO+8bdGm1bf4IaoBr2M+QbRDQO+10=','2025-05-06 06:12:08.118470',0,'22csa36','muthu','tamilselvan','muthucrk004@gmail.com',0,1,'2025-05-06 06:12:04.963094'),(317,'pbkdf2_sha256$870000$ScMUQveQyUJCmZrPhi11x1$A5EZ6FvjPg4GPkLJZhtfG+AQEso1WCQTs7uw6PXA7rQ=','2025-05-06 06:54:10.095421',0,'Sudharsing','SUDHARSING','M','sudharsing390@gmail.com',0,1,'2025-05-06 06:31:38.419725'),(318,'pbkdf2_sha256$870000$7Y6grWxIVbdP4LrrpVnVh3$4nVNapNqal3PYdwGCNpBCQPZCU10IgW58IoDL+EGdeU=','2025-05-06 07:21:43.342739',0,'23ITA20','HARINI','G','gryffindorharini@gmail.com',0,1,'2025-05-06 06:35:42.107273'),(319,'pbkdf2_sha256$870000$F8dGKBotqF8ydMjldSytv1$s8HJpKH9Vvqxn+ZyQG9EhRsIiyzUoJ+e9l0jGtSgMTo=','2025-05-06 06:38:20.001228',0,'22ecb43','Sowmiya','Selvakumar','22ecb43@karpagamtech.ac.in',0,1,'2025-05-06 06:38:17.725545'),(320,'pbkdf2_sha256$870000$aDLcZKyugOMYzVOo8U44jA$Q3XHUT5S7oZrpQXqLDRhwHivzdtXjuej2TEvc0wJ4RQ=','2025-05-06 06:55:04.240014',0,'23ada50','','','prakashamsrichandrakirti@gmail.com',0,1,'2025-05-06 06:55:02.146126'),(321,'pbkdf2_sha256$870000$4RnhSKyuNWa4nIo0UahviJ$wRR8vnz/PT/texk7E1zyHxP0kG8Cyeu48zBWOprxv5Y=','2025-05-06 06:57:40.036740',0,'bhavani_b08','','','22csa08@karpagamtech.ac.in',0,1,'2025-05-06 06:57:37.845857'),(322,'pbkdf2_sha256$870000$KnkuxMPB1R0hiuinJvKB4Z$23V7OkvbZ50JHI7t3+P1SO+aDvxdwYWpI2W7AHU8cWM=','2025-05-06 07:18:35.283552',0,'22csa08','Bhavani','B','22csa08@karpagamtech.ac.in',0,1,'2025-05-06 06:59:06.864436'),(323,'pbkdf2_sha256$870000$sT3MWol2L4sKNrVAlRuwuk$j3aScAnrfR1hbAbUaCSfjy8eGIKevYyQaL9ThIYS948=','2025-05-06 07:11:52.038847',0,'22csa11','Chandru','M','22csa11@karpagamtech.ac.in',0,1,'2025-05-06 07:11:49.932282'),(324,'pbkdf2_sha256$870000$tIjnMo8L8I2iMbxwQnGXfr$Sx5/9OII70ImTg2r+dHlfOt0w7ayhBOIpwAy8ANyECA=','2025-05-06 07:51:44.631522',0,'23csb59','','','23csb59@karpagamtech.ac.in',0,1,'2025-05-06 07:16:44.248931'),(325,'pbkdf2_sha256$870000$OgkRGxqsqowVEoTDCG9lZl$3jeymUY9VNUTtKRTCbVcKxKosFM1wCeF6X97vzXnsfA=','2025-05-06 07:43:18.145121',0,'23csb60','','','23csb60@karpagamtech.ac.in',0,1,'2025-05-06 07:28:21.574757'),(326,'pbkdf2_sha256$870000$zy2BWkDviHbAC3bijjr6lY$SIY4M6yfSL+jDuNJBak5s0y0Nuqar/NW9bC7JLuPv6g=','2025-05-06 07:38:03.546474',0,'23ada17','Kanika.','S','kanikasuresh62@gmail.com',0,1,'2025-05-06 07:38:01.537458'),(327,'pbkdf2_sha256$870000$4uWAn0qBT7u2V4vWn8qqaY$xX2ZZsUtBzlul1ee5kW9bNJ0jwmJp6Kr5IuvBO4NlJc=','2025-05-06 07:42:57.321523',0,'22csa16','Joyal','Blessing','22csa16@karpagamtech.ac.in',0,1,'2025-05-06 07:42:55.187891'),(328,'pbkdf2_sha256$870000$cIYzkyrkTZzxZnW6WbrDhC$G1vNLe8RY8YaGLXC/FFW/hwhBl7LkIi8tr7aD3iHCnc=','2025-05-06 08:43:03.140246',0,'23eca02','ABINAYA','S','23eca02@gmail.com',0,1,'2025-05-06 07:47:00.555098'),(329,'pbkdf2_sha256$870000$5oPoisEqwP8uQrxQKzQ5ur$EJUfVbiBd2bfvMo5mfv+yGaLjwvuE3oGZ6f5ElMIcNQ=','2025-05-06 12:55:22.861098',0,'23csa14','','','23csa14@karpagamtech.ac.in',0,1,'2025-05-06 07:58:05.431278'),(330,'pbkdf2_sha256$870000$NX3uhO3U150f2AvHOnKIB6$73vSRbJWCjw8NcxZVzIzG2YKysLEt1TKj+t9TcDh1f0=','2025-05-06 08:02:29.340461',0,'Dinesh4323','Dinesh','E S','dinesh43233333@gmail.com',0,1,'2025-05-06 08:00:08.201324'),(331,'pbkdf2_sha256$870000$spNFWP5aYOhsRj1y22Jtlv$PSCqq98ysIYo80oqJKP2iVxKaOFFwZIo6JqDV7AG4bw=','2025-05-06 08:40:27.750584',0,'22eca23','Deva Sri','C','cdevasridev@gmail.com',0,1,'2025-05-06 08:20:07.928834'),(332,'pbkdf2_sha256$870000$8ge6mIl2CdceaBNxkqAjib$ttl+ayoilxDUm8w5dzwNtpmCpJ8u+b9oa4Y33Z9ilYs=','2025-05-06 08:38:07.029277',0,'23eca63','','','skeerthana0123@gmail.com',0,1,'2025-05-06 08:21:33.819242'),(333,'pbkdf2_sha256$870000$14DMn7mDLId90Z2QytCvIe$dqQVR/PvGnSJZnZAoqJUmDGOy2QOquoj1uXmNlktJXY=','2025-05-06 08:32:30.904510',0,'23ecc26','Shobiya','A M','23ecc26@karpagamtech.ac.in',0,1,'2025-05-06 08:32:28.877583'),(334,'pbkdf2_sha256$870000$BPxFug2wqwOj7zcVBUGlwV$vHs0E4gJ/LmACevn0NlZBrKtNYlqF7KwVG2+GFNAmyY=','2025-05-13 16:58:10.378450',0,'23ita46','Sanjay','K','23ita46@karpagamtech.ac.in',0,1,'2025-05-06 09:13:24.090487'),(336,'pbkdf2_sha256$870000$00rSAMndqWhpwtqviZT3Aw$raJva9JFY4i7mYcqjreTI8++FOjZBP79O6zsFIyV8Gk=','2025-05-21 06:00:44.921771',0,'i0941','Dharani Priya','T','dharanipriya.pla@karpagamtech.ac.in',0,1,'2025-05-06 09:31:10.000000'),(337,'pbkdf2_sha256$870000$MVrp3CJICumxoTrcQiQwtP$Z1OweYgkxpPaw6C7gJgl5QIVOsD9oysIOe7RlYFDfOc=','2025-05-06 10:23:58.805781',0,'Nivetha','','','23ita38@karpagamtech.ac.in',0,1,'2025-05-06 10:23:56.748237'),(338,'pbkdf2_sha256$870000$Upns3z6gu1rWvelju9V0VM$ZK8qvlyDBGZqKfhNFRMJtQzsww0jrl8pTsL4zist3Zc=','2025-05-06 10:29:22.703683',0,'sarubala329@gmail.com','','','23ada43@karpagamtech.ac.in',0,1,'2025-05-06 10:29:20.665846'),(339,'pbkdf2_sha256$870000$6fuOVvaiKpvoZNRJjfHB32$Hoy1g0Oh6HmoNZ0ESJzF5jj6G+e/42+nCILU+Enqaio=','2025-05-06 10:31:04.884949',0,'23ada43','Sarubala','M','23ada43@karpagamtech.ac.in',0,1,'2025-05-06 10:31:02.810482'),(340,'pbkdf2_sha256$870000$vScI1uvPmwdBUbCyvLWWDo$meAG2GbqM4YNdEB5r6dgZs8hfjJBTCMDt7m++C62w5c=','2025-05-06 10:41:34.076176',0,'LavanyaRamachandran','','','23ita30@karpagamtech.ac.in',0,1,'2025-05-06 10:41:31.922761'),(341,'pbkdf2_sha256$870000$jjspm0fxzrUmM0bZMRIigS$KTgAVPnNXHC88O3gaRdCt1qrnICShywnuPQqnNr147w=','2025-05-06 10:43:33.200099',0,'LavanyaR','','','23ita30@karpagamtech.ac.in',0,1,'2025-05-06 10:43:31.048725'),(342,'pbkdf2_sha256$870000$CqU5iH7ZrUD4WVlgDeqWv5$KI3Spu9sA/VtyvzBYpo4ts21EtszEHmKbzB3PvTUMYQ=','2025-05-06 10:46:51.054406',0,'23csa23','','','23csa23@karpagamtech.ac.in',0,1,'2025-05-06 10:46:48.659056'),(343,'pbkdf2_sha256$870000$lZv9yUgm37qxn80vaAx6iJ$4REe4ixQbVDduS+IdnBkQmoLnXL306jK+YuS9CDlD7g=','2025-05-06 11:33:20.499395',0,'23ECC62','','','23ecc62@karpagamtech.ac.in',0,1,'2025-05-06 11:33:18.264880'),(344,'pbkdf2_sha256$870000$OCVPxadWwUge0gpcyMqVNs$kvbSatIOHmMjPGBdV/9BJonjcp792KlYy2casVwK3LE=','2025-05-06 11:36:48.711003',0,'23ecb04','','','23ecb04@karpagamtech.ac.in',0,1,'2025-05-06 11:36:46.300510'),(345,'pbkdf2_sha256$870000$ZT70Epu0osjxvcTKo2qX94$Y4rh8iqI1zDk+nBEx0RBwgqbt97gPUDgWkrjfa+OkYQ=','2025-05-06 11:56:51.816034',0,'23ecc22','Sharofiya','P','23ecc22@karpagamtech.ac.in',0,1,'2025-05-06 11:56:49.614275'),(346,'pbkdf2_sha256$870000$jc6f4OqkGymFHmZdmc3jZ4$KXH0gDOUdG7iW7d/SZ9IOKspE0JazqC2PpLY8emsUxs=','2025-05-06 12:10:06.738933',0,'23ada36','Rajesh','S','rajeshselvarj2312@gmail.com',0,1,'2025-05-06 12:10:04.270096'),(347,'pbkdf2_sha256$870000$xGdqe1VTSddvZL9EPu0OdT$6xQAfO4w0wOXkpKkrfz0/x1IaTvIUyj6UtZl4zd5svQ=','2025-05-06 12:21:53.338185',0,'23csa12','','','23csa12@karpagamtech.ac.in',0,1,'2025-05-06 12:21:51.246804'),(348,'pbkdf2_sha256$870000$QCoaDxoMQTBGilbB5zMppy$6TbycX2hns0AhfwJqFRFxnilOmll56oZEg6BWo6yVto=','2025-05-06 12:51:20.072901',0,'Mithunkumar','','','22csa32@karpagamtech.ac.in',0,1,'2025-05-06 12:51:17.967612'),(349,'pbkdf2_sha256$870000$3uTHO8iezH2eWl8rATAQpb$2urj0jatgtsc3gHQ2HQ7eIiLTnO0+c0wVlD2NZIVaOY=','2025-05-06 13:35:01.822833',0,'23ita63','','','23ita63@karpagamtech.ac.in',0,1,'2025-05-06 13:34:14.360891'),(350,'pbkdf2_sha256$870000$XjGeGmj7kUV0JcDSSEPLNL$cpO45J4+UCuqCsLWhXWd82z9+fSYWcgD7jj66/vEHW0=','2025-05-06 13:37:05.054237',0,'23ada53','Sriram','N','23ada53@karpagamtech.ac.in',0,1,'2025-05-06 13:37:02.613507'),(351,'pbkdf2_sha256$870000$NUB07FVbhYi6xdlVPMIzhB$mmpd98jvzTy11aBhbl/BaAdtfEax2YcO/UFVVw8Mf0E=','2025-05-06 14:53:03.389903',0,'MonikaVenkatesan@08','','','22ada29@karpagamtech.ac.in',0,1,'2025-05-06 14:53:01.347373'),(352,'pbkdf2_sha256$870000$CONxDlDERqSK7odE03FRgU$E9kYpYaK58jq3hKw6TEwRwFdjPedJKrK5QefbSivtfc=','2025-05-06 14:53:37.696822',0,'23ecb58','Rithikashree','S','23ecb58@karpagamtech.ac.in',0,1,'2025-05-06 14:53:35.619974'),(353,'pbkdf2_sha256$870000$lddrMbs9QY0OABVsVAnZjt$1pbczJGEuamEq0srzntda7sk43KJJTsEbVrM6I/TJKI=','2025-05-06 15:02:35.235074',0,'23ecc13','SAVITHA','G','23ecc13@karpagamtech.ac.in',0,1,'2025-05-06 15:02:33.204932'),(354,'pbkdf2_sha256$870000$wwcdtTseq9cPNRTNoLdjnz$rzB6CBW9aygF8i2PnfFCar4IaP7jQwfOBeW4E9TqiqA=','2025-05-06 15:03:40.348007',0,'22csa13','Hariharan','Eswaran','harikamalesh32@gmail.com',0,1,'2025-05-06 15:03:38.018370'),(355,'pbkdf2_sha256$870000$wYbsdqO5fArGK4va1d1gCx$fog1Z/yn5z0vBHv7iaVdkCebx2lS6CnzcpHVj/FqdT8=','2025-05-06 15:14:43.009059',0,'23ecc43','SURUTHIKA','N','23ecc43@karpagamtech.ac.in',0,1,'2025-05-06 15:14:40.990684'),(356,'pbkdf2_sha256$870000$qEHAhL6eKK2tYJlfGx3hbm$p7JyezqELImUFS4we0ZcdXst+tDsFvOPi0iA10zKT7k=','2025-05-06 15:22:38.922944',0,'Saravanan_18','','','23ita49@karpagamtech.ac.in',0,1,'2025-05-06 15:22:36.791571'),(357,'pbkdf2_sha256$870000$7mZxyvRFBIsV3OKOXmri83$f4Mt1zZjtFH/qdX85brU/2vwEH1NyQuh2+pYaSEmIJE=','2025-05-06 17:05:30.516039',0,'23ita22','','','23ita22@karpagamtech.ac.in',0,1,'2025-05-06 15:22:37.526866'),(358,'pbkdf2_sha256$870000$4uHr05ZY3M5n3AowBWhLME$az6usVFJBV+z/gOvcrpgr9q6lCee9w3LFtpWIvsWkw8=','2025-05-06 15:31:57.824081',0,'23csa21','Cowsican','M','23csa21@karpagamtech.ac.in',0,1,'2025-05-06 15:31:55.706707'),(359,'pbkdf2_sha256$870000$Cp9v3EBXc2efXEs2xhUmjD$euEgrBl/EDZsU8ru7Rtw+KcEBpIwlt3NN9Sid/Hi8Ek=','2025-05-06 15:36:22.890907',0,'23ita49','Saravanan','S','23ita49@karpagamtech.ac.in',0,1,'2025-05-06 15:36:20.561697'),(360,'pbkdf2_sha256$870000$W5JsdndBRQejk2zmjd7CtU$FjJuC868q2ubW7MffOCHDRqnFD3WC0lOkHAYagJj3Vo=','2025-05-06 15:59:22.082985',0,'23ita06','Anuja','K','anujakumaresan4@gmail.com',0,1,'2025-05-06 15:59:19.912433'),(361,'pbkdf2_sha256$870000$KnWLbviZdewMITyMxvgfWZ$d8p4SaG3jfT3jP0Jh45QpBSUa0q4opRj1P1Dl3jql7w=','2025-05-06 16:05:53.652408',0,'sugunath_T','','','tsugunathtsugunath@gmail.com',0,1,'2025-05-06 16:04:42.688774'),(362,'pbkdf2_sha256$870000$DWl3jWLttHVhJgBGQQTwtL$GWpFFPnBZh35a2o+W6jxubDTUWHKglBkFYWyxjJwIv0=','2025-05-07 05:05:12.867018',0,'23ita03','Abishek','K S','23ita03@karpagamtech.ac.in',0,1,'2025-05-06 16:43:32.977566'),(363,'pbkdf2_sha256$870000$NDh8RtI8kfzKl6dmyb1fWf$ZYIXa+cvfaySEhh3GPTIHSW1BB3ZxT/+Rr6nTnfEDPA=','2025-05-07 01:53:54.703419',0,'23eca23','','','23eca23@karpagamtech.ac.in',0,1,'2025-05-07 01:53:52.652976'),(364,'pbkdf2_sha256$870000$RW82MgSPBt7xiV1X2puPmA$CveRGPIlSXsRD1+uVwECV311Vf2glFmMCz/tTffqSaY=','2025-05-07 05:02:21.406365',0,'23ita08','Arun','A','23ita08@karpagamtech.ac.in',0,1,'2025-05-07 05:02:19.284552'),(365,'pbkdf2_sha256$870000$HqZo4QJ71n25ltQQ9WsV8S$p1Z0nphBP51RoAYceN5cMDjV/gUMUw18D5Xq7zIJmRE=','2025-05-08 08:37:47.459538',0,'23ecc60','Vivin Arul','I A','23ecc60@karpagamtech.ac.in',0,1,'2025-05-08 08:37:45.036587'),(366,'pbkdf2_sha256$870000$ZpVHB0qOGG22NxGf0GHdEF$tJwYswklhsrr8ywA4jZvn8ACwE1YtVYY8VcyiSso6Z4=','2025-05-08 09:02:51.840596',0,'23eca56','','','23eca56@karpagamtech.ac.in',0,1,'2025-05-08 09:02:49.560839'),(367,'pbkdf2_sha256$870000$EehvDCmoMoRK7YOsiRb4vk$Fi3niO+X2EPyTyP0tsV9QY//h8TPbtdqAqBaZi9EG8M=','2025-05-08 15:13:38.187063',0,'23ecb32','Nivitha shree','K','23ecb32@karpagamtech.ac.in',0,1,'2025-05-08 14:36:45.158461'),(368,'pbkdf2_sha256$870000$bnD4tJ5hRlzxtp5EwKHo87$6K485/1X/eR6VYMnuuAYY4BEshSmCKUipmBwsvmz56E=','2025-05-09 08:33:35.400262',0,'23ecc16','Selvasri','P','23ecc16@karpagamtech.ac.in',0,1,'2025-05-09 08:15:46.588146'),(369,'pbkdf2_sha256$870000$AWmcUpmMHJ1TvwaDJAyTjI$dlgZO+KP6YwEgTDgBfdfMyzLUlQsKFpXl2heX38fPOA=','2025-05-10 03:56:14.787553',0,'KASINATHAN@061','KASINATHAN','S','23eca61@karpagamtech.ac.in',0,1,'2025-05-10 03:55:48.223442'),(370,'pbkdf2_sha256$870000$oloWubafdArJPPumi32pDA$fPlEMBLS3GU61RCeln1cYCRwOhWFgjGHi1/3Zcc+heI=','2025-05-10 04:34:16.033807',0,'23eca41','GOWRI','M','23eca41@karpagamtech.ac.in',0,1,'2025-05-10 04:34:13.628352'),(371,'pbkdf2_sha256$870000$e5cgvJX78ZGkoeTLdlSt0O$aByLiS9uPPrCPPS7c5TD6L/f9vFlNR5gGbJizzNdXh8=','2025-05-10 14:50:26.887290',0,'SAkshaya-08','Akshaya','Sathianarayanan','23eca06@karpagamtech.ac.in',0,1,'2025-05-10 13:26:02.153550'),(372,'pbkdf2_sha256$870000$FdwWQmrZIVCkq1mm1yX03F$rORbx8+IWQ8wRuQhIV60mnKZO37I6TliSTLuWaD6DEo=','2025-05-11 15:58:25.282458',0,'23eca35','Ezhilarasan','P','23eca35@karpagamtech.ac.in',0,1,'2025-05-10 15:18:19.705918'),(373,'pbkdf2_sha256$870000$lN9UjcFeltsNhhFmJJWOCh$iMYuM7cgLPK9IuehgImAljh8zmfcWgMBK0u0/vI7r2k=','2025-05-10 15:40:13.150406',0,'Dharshini_2_5','DHARSHINI','A','dharshinisanthi17@gmail.com',0,1,'2025-05-10 15:40:10.748127'),(374,'pbkdf2_sha256$870000$Nym1bZk4GQ7cM29KzJSm2z$BmWeWXoWFjGP96eZOqBBO5uTRS/8NS8ur+JzfPxpeHM=',NULL,0,'c2172','Subhashri','S','subhashri.pla@karpagamtech.ac.in',0,1,'2025-05-21 05:54:22.978901'),(375,'pbkdf2_sha256$870000$ygnKzlhq9ylHTv4ik3bhh2$eo6x+9C7fsoJSX4GumXVdpUEB8fDA1Xd/9RjLjUJqgs=',NULL,0,'i0947','Rithika ','P','rithika.pla@karpagamtech.ac.in',0,1,'2025-05-21 05:56:45.841794');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
INSERT INTO `auth_user_groups` VALUES (2,336,1),(4,374,1),(5,375,1);
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_company`
--

DROP TABLE IF EXISTS `company_company`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_company` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `company_type` varchar(50) NOT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_company`
--

LOCK TABLES `company_company` WRITE;
/*!40000 ALTER TABLE `company_company` DISABLE KEYS */;
INSERT INTO `company_company` VALUES (3,'Zoho Corporation','PRODUCT','2025-05-07 05:16:46.383589','2025-05-16 03:44:12.352200');
/*!40000 ALTER TABLE `company_company` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_interviewprocess`
--

DROP TABLE IF EXISTS `company_interviewprocess`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_interviewprocess` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `round_name` varchar(100) NOT NULL,
  `round_number` int(10) unsigned NOT NULL CHECK (`round_number` >= 0),
  `round_type` varchar(50) NOT NULL,
  `description` longtext NOT NULL,
  `job_role_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `company_interviewpro_job_role_id_f433ca5d_fk_company_j` (`job_role_id`),
  CONSTRAINT `company_interviewpro_job_role_id_f433ca5d_fk_company_j` FOREIGN KEY (`job_role_id`) REFERENCES `company_jobrole` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_interviewprocess`
--

LOCK TABLES `company_interviewprocess` WRITE;
/*!40000 ALTER TABLE `company_interviewprocess` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_interviewprocess` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_jobrole`
--

DROP TABLE IF EXISTS `company_jobrole`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_jobrole` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `title` varchar(100) NOT NULL,
  `package_in_LPA` decimal(12,2) NOT NULL,
  `job_description` longtext NOT NULL,
  `hiring_process` varchar(50) NOT NULL,
  `year` int(11) NOT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  `company_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `company_jobrole_company_id_7cd9549f_fk_company_company_id` (`company_id`),
  CONSTRAINT `company_jobrole_company_id_7cd9549f_fk_company_company_id` FOREIGN KEY (`company_id`) REFERENCES `company_company` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_jobrole`
--

LOCK TABLES `company_jobrole` WRITE;
/*!40000 ALTER TABLE `company_jobrole` DISABLE KEYS */;
INSERT INTO `company_jobrole` VALUES (2,'SDE',8.00,'nskfnlsdfs','CAMPUS',2025,'2025-05-16 03:44:37.679333','2025-05-16 03:44:37.679381',3);
/*!40000 ALTER TABLE `company_jobrole` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_round_skill_detail`
--

DROP TABLE IF EXISTS `company_round_skill_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_round_skill_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `weight` int(11) NOT NULL,
  `tags_id` bigint(20) NOT NULL,
  `round_skill_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `company_round_skill_detail_tags_id_8a95c76e_fk_track_tags_id` (`tags_id`),
  KEY `company_round_skill__round_skill_id_a8924ba8_fk_company_r` (`round_skill_id`),
  CONSTRAINT `company_round_skill__round_skill_id_a8924ba8_fk_company_r` FOREIGN KEY (`round_skill_id`) REFERENCES `company_round_skills` (`id`),
  CONSTRAINT `company_round_skill_detail_tags_id_8a95c76e_fk_track_tags_id` FOREIGN KEY (`tags_id`) REFERENCES `track_tags` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_round_skill_detail`
--

LOCK TABLES `company_round_skill_detail` WRITE;
/*!40000 ALTER TABLE `company_round_skill_detail` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_round_skill_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_round_skills`
--

DROP TABLE IF EXISTS `company_round_skills`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_round_skills` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `interview_round_id` bigint(20) NOT NULL,
  `skill_name_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `company_round_skills_interview_round_id_de14d167_fk_company_i` (`interview_round_id`),
  KEY `company_round_skills_skill_name_id_b91b672a_fk_company_skill_id` (`skill_name_id`),
  CONSTRAINT `company_round_skills_interview_round_id_de14d167_fk_company_i` FOREIGN KEY (`interview_round_id`) REFERENCES `company_interviewprocess` (`id`),
  CONSTRAINT `company_round_skills_skill_name_id_b91b672a_fk_company_skill_id` FOREIGN KEY (`skill_name_id`) REFERENCES `company_skill` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_round_skills`
--

LOCK TABLES `company_round_skills` WRITE;
/*!40000 ALTER TABLE `company_round_skills` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_round_skills` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_salaryband`
--

DROP TABLE IF EXISTS `company_salaryband`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_salaryband` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `salary_range` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `salary_range` (`salary_range`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_salaryband`
--

LOCK TABLES `company_salaryband` WRITE;
/*!40000 ALTER TABLE `company_salaryband` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_salaryband` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_salaryband_companies`
--

DROP TABLE IF EXISTS `company_salaryband_companies`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_salaryband_companies` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `salaryband_id` bigint(20) NOT NULL,
  `company_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `company_salaryband_compa_salaryband_id_company_id_8fea6815_uniq` (`salaryband_id`,`company_id`),
  KEY `company_salaryband_c_company_id_ad11901c_fk_company_c` (`company_id`),
  CONSTRAINT `company_salaryband_c_company_id_ad11901c_fk_company_c` FOREIGN KEY (`company_id`) REFERENCES `company_company` (`id`),
  CONSTRAINT `company_salaryband_c_salaryband_id_d3e37d29_fk_company_s` FOREIGN KEY (`salaryband_id`) REFERENCES `company_salaryband` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_salaryband_companies`
--

LOCK TABLES `company_salaryband_companies` WRITE;
/*!40000 ALTER TABLE `company_salaryband_companies` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_salaryband_companies` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `company_skill`
--

DROP TABLE IF EXISTS `company_skill`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `company_skill` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `skill` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `company_skill`
--

LOCK TABLES `company_skill` WRITE;
/*!40000 ALTER TABLE `company_skill` DISABLE KEYS */;
/*!40000 ALTER TABLE `company_skill` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext DEFAULT NULL,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL CHECK (`action_flag` >= 0),
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1177 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2025-01-08 09:42:41.736159','1','coordinator',1,'[{\"added\": {}}]',3,1),(2,'2025-01-08 09:43:03.993395','1','2026',1,'[{\"added\": {}}]',7,1),(3,'2025-01-08 09:43:14.006250','2','2027',1,'[{\"added\": {}}]',7,1),(4,'2025-01-08 09:43:19.745214','3','2028',1,'[{\"added\": {}}]',7,1),(5,'2025-01-08 09:43:32.564945','1','CSE',1,'[{\"added\": {}}]',10,1),(6,'2025-01-08 09:43:44.497635','2','IT',1,'[{\"added\": {}}]',10,1),(7,'2025-01-08 09:43:51.396325','3','ECE',1,'[{\"added\": {}}]',10,1),(8,'2025-01-08 09:43:59.828460','4','EEE',1,'[{\"added\": {}}]',10,1),(9,'2025-01-08 09:44:05.242623','5','AD',1,'[{\"added\": {}}]',10,1),(10,'2025-01-08 09:44:15.242113','1','Karpagam Institute of Technology',1,'[{\"added\": {}}]',11,1),(11,'2025-01-08 09:44:18.356495','2','Karpagam College of Engineering',1,'[{\"added\": {}}]',11,1),(12,'2025-01-08 09:44:30.868841','3','Karpagam Academy of Higher Education',1,'[{\"added\": {}}]',11,1),(13,'2025-01-08 09:45:15.027554','1','Leet Code',1,'[{\"added\": {}}]',12,1),(14,'2025-01-08 09:45:58.209045','2','Geeks for Geeks',1,'[{\"added\": {}}]',12,1),(15,'2025-01-08 09:46:33.607304','3','Code Forces',1,'[{\"added\": {}}]',12,1),(16,'2025-01-08 09:46:54.137419','1','Easy',1,'[{\"added\": {}}]',8,1),(17,'2025-01-08 09:47:04.427005','2','Medium',1,'[{\"added\": {}}]',8,1),(18,'2025-01-08 09:47:07.961379','3','Hard',1,'[{\"added\": {}}]',8,1),(19,'2025-01-08 09:49:40.551745','1','Array',1,'[{\"added\": {}}]',13,1),(20,'2025-01-08 09:49:47.847440','2','String',1,'[{\"added\": {}}]',13,1),(21,'2025-01-08 09:49:54.570696','3','Hash Table',1,'[{\"added\": {}}]',13,1),(22,'2025-01-08 09:50:00.274923','4','Dynamic Programming',1,'[{\"added\": {}}]',13,1),(23,'2025-01-08 09:50:05.312778','5','Math',1,'[{\"added\": {}}]',13,1),(24,'2025-01-08 09:50:10.258198','6','Sorting',1,'[{\"added\": {}}]',13,1),(25,'2025-01-08 09:50:16.144965','7','Greedy',1,'[{\"added\": {}}]',13,1),(26,'2025-01-08 09:50:22.033040','8','Depth-First Search',1,'[{\"added\": {}}]',13,1),(27,'2025-01-08 09:50:27.548004','9','Database',1,'[{\"added\": {}}]',13,1),(28,'2025-01-08 09:50:32.918583','10','Binary Search',1,'[{\"added\": {}}]',13,1),(29,'2025-01-08 09:50:38.981846','11','Matrix',1,'[{\"added\": {}}]',13,1),(30,'2025-01-08 09:50:44.353082','12','Tree',1,'[{\"added\": {}}]',13,1),(31,'2025-01-08 09:50:49.606968','13','Breadth-First Search',1,'[{\"added\": {}}]',13,1),(32,'2025-01-08 09:50:54.581821','14','Bit Manipulation',1,'[{\"added\": {}}]',13,1),(33,'2025-01-08 09:51:01.530986','15','Two Pointers',1,'[{\"added\": {}}]',13,1),(34,'2025-01-08 09:51:14.956257','16','Prefix Sum',1,'[{\"added\": {}}]',13,1),(35,'2025-01-08 09:51:21.132804','17','Heap (Priority Queue)',1,'[{\"added\": {}}]',13,1),(36,'2025-01-08 09:51:26.110046','18','Binary Tree',1,'[{\"added\": {}}]',13,1),(37,'2025-01-08 09:51:31.859184','19','Simulation',1,'[{\"added\": {}}]',13,1),(38,'2025-01-08 09:51:37.699892','20','Stack',1,'[{\"added\": {}}]',13,1),(39,'2025-01-08 09:51:48.743025','21','Graph',1,'[{\"added\": {}}]',13,1),(40,'2025-01-08 09:51:54.372252','22','Counting',1,'[{\"added\": {}}]',13,1),(41,'2025-01-08 09:51:59.622588','23','Sliding Window',1,'[{\"added\": {}}]',13,1),(42,'2025-01-08 09:52:04.415056','24','Design',1,'[{\"added\": {}}]',13,1),(43,'2025-01-08 09:52:10.435867','25','Backtracking',1,'[{\"added\": {}}]',13,1),(44,'2025-01-08 09:52:15.622866','26','Enumeration',1,'[{\"added\": {}}]',13,1),(45,'2025-01-08 09:52:21.116083','27','Union Find',1,'[{\"added\": {}}]',13,1),(46,'2025-01-08 09:52:26.336539','28','Linked List',1,'[{\"added\": {}}]',13,1),(47,'2025-01-08 09:52:31.535443','29','Ordered Set',1,'[{\"added\": {}}]',13,1),(48,'2025-01-08 09:52:42.779924','30','Number Theory',1,'[{\"added\": {}}]',13,1),(49,'2025-01-08 09:52:48.859524','31','Monotonic Stack',1,'[{\"added\": {}}]',13,1),(50,'2025-01-08 09:52:53.799982','32','Segment Tree',1,'[{\"added\": {}}]',13,1),(51,'2025-01-08 09:52:58.996792','33','Trie',1,'[{\"added\": {}}]',13,1),(52,'2025-01-08 09:53:04.057357','34','Bitmask',1,'[{\"added\": {}}]',13,1),(53,'2025-01-08 09:53:08.551040','35','Divide and Conquer',1,'[{\"added\": {}}]',13,1),(54,'2025-01-08 09:53:14.115666','36','Combinatorics',1,'[{\"added\": {}}]',13,1),(55,'2025-01-08 09:53:18.782563','37','Queue',1,'[{\"added\": {}}]',13,1),(56,'2025-01-08 09:53:24.195241','38','Recursion',1,'[{\"added\": {}}]',13,1),(57,'2025-01-08 09:53:29.282937','39','Binary Indexed Tree',1,'[{\"added\": {}}]',13,1),(58,'2025-01-08 09:53:34.527530','40','Geometry',1,'[{\"added\": {}}]',13,1),(59,'2025-01-08 09:53:39.762225','41','Binary Search Tree',1,'[{\"added\": {}}]',13,1),(60,'2025-01-08 09:53:45.700969','42','Hash Function',1,'[{\"added\": {}}]',13,1),(61,'2025-01-08 09:54:10.491035','43','Hash Function',1,'[{\"added\": {}}]',13,1),(62,'2025-01-08 09:54:16.182956','44','Memoization',1,'[{\"added\": {}}]',13,1),(63,'2025-01-08 09:54:22.004106','45','String Matching',1,'[{\"added\": {}}]',13,1),(64,'2025-01-08 09:54:27.176647','46','Topological Sort',1,'[{\"added\": {}}]',13,1),(65,'2025-01-08 09:54:32.449212','47','Shortest Path',1,'[{\"added\": {}}]',13,1),(66,'2025-01-08 09:54:37.459670','48','Rolling Hash',1,'[{\"added\": {}}]',13,1),(67,'2025-01-08 09:54:42.606175','49','Game Theory',1,'[{\"added\": {}}]',13,1),(68,'2025-01-08 09:54:47.503319','50','Interactive',1,'[{\"added\": {}}]',13,1),(69,'2025-01-08 09:54:52.768162','51','Data Stream',1,'[{\"added\": {}}]',13,1),(70,'2025-01-08 09:54:57.845001','52','Monotonic Queue',1,'[{\"added\": {}}]',13,1),(71,'2025-01-08 09:55:02.707367','53','Brainteaser',1,'[{\"added\": {}}]',13,1),(72,'2025-01-08 09:55:08.041966','54','Randomized',1,'[{\"added\": {}}]',13,1),(73,'2025-01-08 09:55:12.874026','55','Merge Sort',1,'[{\"added\": {}}]',13,1),(74,'2025-01-08 09:55:17.815477','56','Doubly-Linked List',1,'[{\"added\": {}}]',13,1),(75,'2025-01-08 09:55:23.183073','57','Counting Sort',1,'[{\"added\": {}}]',13,1),(76,'2025-01-08 09:55:34.715744','58','Iterator',1,'[{\"added\": {}}]',13,1),(77,'2025-01-08 09:55:40.014177','59','Concurrency',1,'[{\"added\": {}}]',13,1),(78,'2025-01-08 09:55:46.254446','60','Probability and Statistics',1,'[{\"added\": {}}]',13,1),(79,'2025-01-08 09:55:52.094763','61','Quickselect',1,'[{\"added\": {}}]',13,1),(80,'2025-01-08 09:56:02.722206','62','Suffix Array',1,'[{\"added\": {}}]',13,1),(81,'2025-01-08 09:56:08.624404','63','Bucket Sort',1,'[{\"added\": {}}]',13,1),(82,'2025-01-08 09:56:14.547060','64','Minimum Spanning Tree',1,'[{\"added\": {}}]',13,1),(83,'2025-01-08 09:56:19.747265','65','Line Sweep',1,'[{\"added\": {}}]',13,1),(84,'2025-01-08 09:56:24.551036','66','Shell',1,'[{\"added\": {}}]',13,1),(85,'2025-01-08 09:56:30.351838','67','Reservoir Sampling',1,'[{\"added\": {}}]',13,1),(86,'2025-01-08 09:56:35.533544','68','Strongly Connected Component',1,'[{\"added\": {}}]',13,1),(87,'2025-01-08 09:56:40.841341','69','Eulerian Circuit',1,'[{\"added\": {}}]',13,1),(88,'2025-01-08 09:56:49.745435','70','Radix Sort',1,'[{\"added\": {}}]',13,1),(89,'2025-01-08 09:56:55.267250','71','\"Rejection Sampling \"',1,'[{\"added\": {}}]',13,1),(90,'2025-01-08 09:57:02.724679','72','\"Biconnected Component \"',1,'[{\"added\": {}}]',13,1),(91,'2025-01-08 09:57:32.358039','42','Hash Function',3,'',13,1),(92,'2025-01-08 10:01:45.491256','71','Rejection Sampling',2,'[{\"changed\": {\"fields\": [\"Tag\"]}}]',13,1),(93,'2025-01-08 10:02:03.570660','72','Biconnected Component',2,'[{\"changed\": {\"fields\": [\"Tag\"]}}]',13,1),(94,'2025-01-08 11:42:09.470009','73','Advanced Data Structure',1,'[{\"added\": {}}]',13,1),(95,'2025-01-08 11:42:14.418497','74','Algorithms',1,'[{\"added\": {}}]',13,1),(96,'2025-01-08 11:42:20.895505','75','alphabets',1,'[{\"added\": {}}]',13,1),(97,'2025-01-08 11:42:25.487073','76','anagram',1,'[{\"added\": {}}]',13,1),(98,'2025-01-08 11:42:31.349630','77','AVL-Tree',1,'[{\"added\": {}}]',13,1),(99,'2025-01-08 11:42:36.649508','78','Binary Representation',1,'[{\"added\": {}}]',13,1),(100,'2025-01-08 11:42:46.612155','79','Bit Magic',1,'[{\"added\": {}}]',13,1),(101,'2025-01-08 11:42:52.886953','80','circular linked list',1,'[{\"added\": {}}]',13,1),(102,'2025-01-08 11:42:59.914771','81','Class',1,'[{\"added\": {}}]',13,1),(103,'2025-01-08 11:43:05.056338','82','circular-linked-list',1,'[{\"added\": {}}]',13,1),(104,'2025-01-08 11:43:10.898408','83','Class',1,'[{\"added\": {}}]',13,1),(105,'2025-01-08 11:43:15.475326','84','Combinatorial',1,'[{\"added\": {}}]',13,1),(106,'2025-01-08 11:43:20.762340','85','constructive algo',1,'[{\"added\": {}}]',13,1),(107,'2025-01-08 11:43:27.025326','86','CPP',1,'[{\"added\": {}}]',13,1),(108,'2025-01-08 11:43:39.506762','87','CPP-Control-Flow',1,'[{\"added\": {}}]',13,1),(109,'2025-01-08 11:44:42.939313','88','cpp-operator',1,'[{\"added\": {}}]',13,1),(110,'2025-01-08 11:44:47.607513','89','cpp-pointers',1,'[{\"added\": {}}]',13,1),(111,'2025-01-08 11:44:52.454207','90','cpp-strings',1,'[{\"added\": {}}]',13,1),(112,'2025-01-08 11:44:57.959959','91','Data Structures',1,'[{\"added\": {}}]',13,1),(113,'2025-01-08 11:45:03.343054','92','Data Type',1,'[{\"added\": {}}]',13,1),(114,'2025-01-08 11:45:09.465355','93','Date-Time',1,'[{\"added\": {}}]',13,1),(115,'2025-01-08 11:45:14.680460','94','Design-Pattern',1,'[{\"added\": {}}]',13,1),(116,'2025-01-08 11:46:37.092144','95','Disjoint Set',1,'[{\"added\": {}}]',13,1),(117,'2025-01-08 11:46:41.395897','96','Division',1,'[{\"added\": {}}]',13,1),(118,'2025-01-08 11:46:46.300872','97','factorial',1,'[{\"added\": {}}]',13,1),(119,'2025-01-08 11:46:51.100396','98','Factorization',1,'[{\"added\": {}}]',13,1),(120,'2025-01-08 11:46:55.520658','99','Fibonacci',1,'[{\"added\": {}}]',13,1),(121,'2025-01-08 11:47:00.145992','100','Functions',1,'[{\"added\": {}}]',13,1),(122,'2025-01-08 11:47:10.825944','101','implementation',1,'[{\"added\": {}}]',13,1),(123,'2025-01-08 11:47:15.638673','102','Java',1,'[{\"added\": {}}]',13,1),(124,'2025-01-08 11:47:20.425044','103','Java-BigInteger',1,'[{\"added\": {}}]',13,1),(125,'2025-01-08 11:47:25.080528','104','Java-Class and Object',1,'[{\"added\": {}}]',13,1),(126,'2025-01-08 11:47:32.138927','105','Java-Collections',1,'[{\"added\": {}}]',13,1),(127,'2025-01-08 11:47:36.761342','106','Java-Control-Flow',1,'[{\"added\": {}}]',13,1),(128,'2025-01-08 11:47:40.927571','107','Java-Operators',1,'[{\"added\": {}}]',13,1),(129,'2025-01-08 11:47:59.410197','108','Java-Strings',1,'[{\"added\": {}}]',13,1),(130,'2025-01-08 11:48:05.345514','109','Kadane',1,'[{\"added\": {}}]',13,1),(131,'2025-01-08 11:48:10.784908','110','LCS',1,'[{\"added\": {}}]',13,1),(132,'2025-01-08 11:48:16.541616','111','logical-thinking',1,'[{\"added\": {}}]',13,1),(133,'2025-01-08 11:48:21.945872','112','Machine Learning',1,'[{\"added\": {}}]',13,1),(134,'2025-01-08 11:48:31.625224','113','Map',1,'[{\"added\": {}}]',13,1),(135,'2025-01-08 11:48:37.467663','114','Misc',1,'[{\"added\": {}}]',13,1),(136,'2025-01-08 11:48:42.905189','115','Modular Arithmetic',1,'[{\"added\": {}}]',13,1),(137,'2025-01-08 11:48:48.188986','116','Numbers',1,'[{\"added\": {}}]',13,1),(138,'2025-01-08 11:48:52.446983','117','OOP',1,'[{\"added\": {}}]',13,1),(139,'2025-01-08 11:48:57.456729','118','Operators',1,'[{\"added\": {}}]',13,1),(140,'2025-01-08 11:49:01.658967','119','palindrome',1,'[{\"added\": {}}]',13,1),(141,'2025-01-08 11:49:08.360259','120','Pattern Searching',1,'[{\"added\": {}}]',13,1),(142,'2025-01-08 11:49:15.751886','121','pattern-printing',1,'[{\"added\": {}}]',13,1),(143,'2025-01-08 11:49:20.007924','122','permutation',1,'[{\"added\": {}}]',13,1),(144,'2025-01-08 11:49:23.915108','123','Pointers',1,'[{\"added\": {}}]',13,1),(145,'2025-01-08 11:49:28.569656','124','Practice-Problems',1,'[{\"added\": {}}]',13,1),(146,'2025-01-08 11:49:32.780743','125','Prime Number',1,'[{\"added\": {}}]',13,1),(147,'2025-01-08 11:49:37.654594','126','priority-queue',1,'[{\"added\": {}}]',13,1),(148,'2025-01-08 11:49:42.235202','127','Puzzles',1,'[{\"added\": {}}]',13,1),(149,'2025-01-08 11:49:46.054571','128','python',1,'[{\"added\": {}}]',13,1),(150,'2025-01-08 11:49:50.263582','129','python-conditionals',1,'[{\"added\": {}}]',13,1),(151,'2025-01-08 11:49:55.316733','130','python-dict',1,'[{\"added\": {}}]',13,1),(152,'2025-01-08 11:50:04.154272','131','python-loops',1,'[{\"added\": {}}]',13,1),(153,'2025-01-08 11:50:09.355638','132','python-set',1,'[{\"added\": {}}]',13,1),(154,'2025-01-08 11:50:13.821911','133','python-strings',1,'[{\"added\": {}}]',13,1),(155,'2025-01-08 11:50:18.195114','134','Quantifiers',1,'[{\"added\": {}}]',13,1),(156,'2025-01-08 11:50:22.831599','135','Regular Expression',1,'[{\"added\": {}}]',13,1),(157,'2025-01-08 11:50:27.634705','136','Reverse',1,'[{\"added\": {}}]',13,1),(158,'2025-01-08 11:50:34.268677','137','Searching',1,'[{\"added\": {}}]',13,1),(159,'2025-01-08 11:50:42.578738','138','series',1,'[{\"added\": {}}]',13,1),(160,'2025-01-08 11:50:47.117274','139','set',1,'[{\"added\": {}}]',13,1),(161,'2025-01-08 11:51:05.334314','140','sieve',1,'[{\"added\": {}}]',13,1),(162,'2025-01-08 11:51:09.924917','141','Sqrt Decomposition',1,'[{\"added\": {}}]',13,1),(163,'2025-01-08 11:51:14.379139','142','STL',1,'[{\"added\": {}}]',13,1),(164,'2025-01-08 11:51:20.132721','143','subset',1,'[{\"added\": {}}]',13,1),(165,'2025-01-08 11:51:24.582435','144','Traversal',1,'[{\"added\": {}}]',13,1),(166,'2025-01-08 11:52:19.679945','145','*special',1,'[{\"added\": {}}]',13,1),(167,'2025-01-08 11:52:25.429997','146','2-sat',1,'[{\"added\": {}}]',13,1),(168,'2025-01-08 11:52:31.399888','147','brute force',1,'[{\"added\": {}}]',13,1),(169,'2025-01-08 11:52:36.493101','148','chinese remainder theorem',1,'[{\"added\": {}}]',13,1),(170,'2025-01-08 11:52:42.192458','149','constructive algorithms',1,'[{\"added\": {}}]',13,1),(171,'2025-01-08 11:52:47.267880','150','data structures',1,'[{\"added\": {}}]',13,1),(172,'2025-01-08 11:52:52.530848','151','expression parsing',1,'[{\"added\": {}}]',13,1),(173,'2025-01-08 11:52:58.342146','152','fft',1,'[{\"added\": {}}]',13,1),(174,'2025-01-08 11:53:02.961578','153','flows',1,'[{\"added\": {}}]',13,1),(175,'2025-01-08 11:53:07.518631','154','games',1,'[{\"added\": {}}]',13,1),(176,'2025-01-08 11:53:33.843621','155','graph matchings',1,'[{\"added\": {}}]',13,1),(177,'2025-01-08 11:53:43.039872','156','implementation',1,'[{\"added\": {}}]',13,1),(178,'2025-01-08 11:53:50.831692','157','meet-in-the-middle',1,'[{\"added\": {}}]',13,1),(179,'2025-01-08 11:53:59.663496','158','schedules',1,'[{\"added\": {}}]',13,1),(180,'2025-01-08 11:54:04.590682','159','string suffix structures',1,'[{\"added\": {}}]',13,1),(181,'2025-01-08 11:54:16.015958','160','ternary search',1,'[{\"added\": {}}]',13,1),(182,'2025-01-08 13:46:17.057029','91','Data Structures',3,'',13,1),(183,'2025-01-08 13:49:16.380683','4','Basic',1,'[{\"added\": {}}]',8,1),(184,'2025-01-08 13:49:24.803049','5','School',1,'[{\"added\": {}}]',8,1),(185,'2025-01-08 13:50:10.814211','156','implementation',3,'',13,1),(186,'2025-01-08 13:53:00.456252','81','Class',3,'',13,1),(187,'2025-01-08 16:34:21.839186','6','Undefined',1,'[{\"added\": {}}]',8,1),(188,'2025-01-08 17:24:48.014524','1','23ada44',1,'[{\"added\": {}}]',19,1),(189,'2025-01-08 17:25:13.780097','1','sashanth',1,'[{\"added\": {}}]',22,1),(190,'2025-01-08 17:26:07.409007','2','sashan6mj1',1,'[{\"added\": {}}]',22,1),(191,'2025-01-08 17:28:16.196541','3','sashanth',1,'[{\"added\": {}}]',22,1),(192,'2025-01-10 09:31:21.320628','1','Letscode_sundar',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',22,1),(193,'2025-01-10 09:32:57.546839','1','sashanth',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',22,1),(194,'2025-01-10 09:33:21.134141','3','Letscode_sundar',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',22,1),(195,'2025-01-10 12:13:22.355133','858','Solved_Problem object (858)',3,'',20,1),(196,'2025-01-10 12:13:22.355133','857','Solved_Problem object (857)',3,'',20,1),(197,'2025-01-10 12:13:22.355133','856','Solved_Problem object (856)',3,'',20,1),(198,'2025-01-10 12:13:22.355133','855','Solved_Problem object (855)',3,'',20,1),(199,'2025-01-10 12:13:22.355133','854','Solved_Problem object (854)',3,'',20,1),(200,'2025-01-10 12:13:22.355133','853','Solved_Problem object (853)',3,'',20,1),(201,'2025-01-10 12:13:22.355133','852','Solved_Problem object (852)',3,'',20,1),(202,'2025-01-10 12:13:22.355133','851','Solved_Problem object (851)',3,'',20,1),(203,'2025-01-10 12:13:22.355133','850','Solved_Problem object (850)',3,'',20,1),(204,'2025-01-10 12:13:22.355133','849','Solved_Problem object (849)',3,'',20,1),(205,'2025-01-10 12:13:22.355133','848','Solved_Problem object (848)',3,'',20,1),(206,'2025-01-10 12:13:22.355133','847','Solved_Problem object (847)',3,'',20,1),(207,'2025-01-10 12:13:22.355133','846','Solved_Problem object (846)',3,'',20,1),(208,'2025-01-10 12:13:22.355133','845','Solved_Problem object (845)',3,'',20,1),(209,'2025-01-10 12:13:22.355133','844','Solved_Problem object (844)',3,'',20,1),(210,'2025-01-10 12:13:22.355133','843','Solved_Problem object (843)',3,'',20,1),(211,'2025-01-10 12:13:22.355133','842','Solved_Problem object (842)',3,'',20,1),(212,'2025-01-10 12:13:22.355133','841','Solved_Problem object (841)',3,'',20,1),(213,'2025-01-10 12:13:22.355133','840','Solved_Problem object (840)',3,'',20,1),(214,'2025-01-10 12:13:22.370765','839','Solved_Problem object (839)',3,'',20,1),(215,'2025-01-10 12:13:22.370765','838','Solved_Problem object (838)',3,'',20,1),(216,'2025-01-10 12:13:22.370765','837','Solved_Problem object (837)',3,'',20,1),(217,'2025-01-10 12:13:22.370980','836','Solved_Problem object (836)',3,'',20,1),(218,'2025-01-10 12:13:22.370980','835','Solved_Problem object (835)',3,'',20,1),(219,'2025-01-10 12:13:22.370980','834','Solved_Problem object (834)',3,'',20,1),(220,'2025-01-10 12:13:22.370980','833','Solved_Problem object (833)',3,'',20,1),(221,'2025-01-10 12:13:22.370980','832','Solved_Problem object (832)',3,'',20,1),(222,'2025-01-10 12:13:22.370980','831','Solved_Problem object (831)',3,'',20,1),(223,'2025-01-10 12:13:22.370980','830','Solved_Problem object (830)',3,'',20,1),(224,'2025-01-10 12:13:22.370980','829','Solved_Problem object (829)',3,'',20,1),(225,'2025-01-10 12:13:22.370980','828','Solved_Problem object (828)',3,'',20,1),(226,'2025-01-10 12:13:22.370980','827','Solved_Problem object (827)',3,'',20,1),(227,'2025-01-10 12:13:22.370980','826','Solved_Problem object (826)',3,'',20,1),(228,'2025-01-10 12:13:22.370980','825','Solved_Problem object (825)',3,'',20,1),(229,'2025-01-10 12:13:22.370980','824','Solved_Problem object (824)',3,'',20,1),(230,'2025-01-10 12:13:22.370980','823','Solved_Problem object (823)',3,'',20,1),(231,'2025-01-10 12:13:22.370980','822','Solved_Problem object (822)',3,'',20,1),(232,'2025-01-10 12:13:22.370980','821','Solved_Problem object (821)',3,'',20,1),(233,'2025-01-10 12:13:22.370980','820','Solved_Problem object (820)',3,'',20,1),(234,'2025-01-10 12:13:22.370980','819','Solved_Problem object (819)',3,'',20,1),(235,'2025-01-10 12:13:22.370980','818','Solved_Problem object (818)',3,'',20,1),(236,'2025-01-10 12:13:22.370980','817','Solved_Problem object (817)',3,'',20,1),(237,'2025-01-10 12:13:22.371980','816','Solved_Problem object (816)',3,'',20,1),(238,'2025-01-10 12:13:22.371980','815','Solved_Problem object (815)',3,'',20,1),(239,'2025-01-10 12:13:22.371980','814','Solved_Problem object (814)',3,'',20,1),(240,'2025-01-10 12:13:22.371980','813','Solved_Problem object (813)',3,'',20,1),(241,'2025-01-10 12:13:22.371980','812','Solved_Problem object (812)',3,'',20,1),(242,'2025-01-10 12:13:22.371980','811','Solved_Problem object (811)',3,'',20,1),(243,'2025-01-10 12:13:22.371980','810','Solved_Problem object (810)',3,'',20,1),(244,'2025-01-10 12:13:22.371980','809','Solved_Problem object (809)',3,'',20,1),(245,'2025-01-10 12:13:22.371980','808','Solved_Problem object (808)',3,'',20,1),(246,'2025-01-10 12:13:22.371980','807','Solved_Problem object (807)',3,'',20,1),(247,'2025-01-10 12:13:22.371980','806','Solved_Problem object (806)',3,'',20,1),(248,'2025-01-10 12:13:22.372477','805','Solved_Problem object (805)',3,'',20,1),(249,'2025-01-10 12:13:22.372477','804','Solved_Problem object (804)',3,'',20,1),(250,'2025-01-10 12:13:22.372477','803','Solved_Problem object (803)',3,'',20,1),(251,'2025-01-10 12:13:22.372477','802','Solved_Problem object (802)',3,'',20,1),(252,'2025-01-10 12:13:22.372477','801','Solved_Problem object (801)',3,'',20,1),(253,'2025-01-10 12:13:22.372477','800','Solved_Problem object (800)',3,'',20,1),(254,'2025-01-10 12:13:22.372477','799','Solved_Problem object (799)',3,'',20,1),(255,'2025-01-10 12:13:22.372477','798','Solved_Problem object (798)',3,'',20,1),(256,'2025-01-10 12:13:22.372477','797','Solved_Problem object (797)',3,'',20,1),(257,'2025-01-10 12:13:22.372477','796','Solved_Problem object (796)',3,'',20,1),(258,'2025-01-10 12:13:22.372477','795','Solved_Problem object (795)',3,'',20,1),(259,'2025-01-10 12:13:22.372477','794','Solved_Problem object (794)',3,'',20,1),(260,'2025-01-10 12:13:22.372477','793','Solved_Problem object (793)',3,'',20,1),(261,'2025-01-10 12:13:22.372477','792','Solved_Problem object (792)',3,'',20,1),(262,'2025-01-10 12:13:22.372477','791','Solved_Problem object (791)',3,'',20,1),(263,'2025-01-10 12:13:22.372477','790','Solved_Problem object (790)',3,'',20,1),(264,'2025-01-10 12:13:22.372477','789','Solved_Problem object (789)',3,'',20,1),(265,'2025-01-10 12:13:22.372477','788','Solved_Problem object (788)',3,'',20,1),(266,'2025-01-10 12:13:22.372477','787','Solved_Problem object (787)',3,'',20,1),(267,'2025-01-10 12:13:22.372477','786','Solved_Problem object (786)',3,'',20,1),(268,'2025-01-10 12:13:22.372477','785','Solved_Problem object (785)',3,'',20,1),(269,'2025-01-10 12:13:22.372477','784','Solved_Problem object (784)',3,'',20,1),(270,'2025-01-10 12:13:22.372477','783','Solved_Problem object (783)',3,'',20,1),(271,'2025-01-10 12:13:22.372477','782','Solved_Problem object (782)',3,'',20,1),(272,'2025-01-10 12:13:22.372477','781','Solved_Problem object (781)',3,'',20,1),(273,'2025-01-10 12:13:22.372477','780','Solved_Problem object (780)',3,'',20,1),(274,'2025-01-10 12:13:22.372477','779','Solved_Problem object (779)',3,'',20,1),(275,'2025-01-10 12:13:22.372477','778','Solved_Problem object (778)',3,'',20,1),(276,'2025-01-10 12:13:22.372477','777','Solved_Problem object (777)',3,'',20,1),(277,'2025-01-10 12:13:22.372477','776','Solved_Problem object (776)',3,'',20,1),(278,'2025-01-10 12:13:22.372477','775','Solved_Problem object (775)',3,'',20,1),(279,'2025-01-10 12:13:22.372477','774','Solved_Problem object (774)',3,'',20,1),(280,'2025-01-10 12:13:22.372477','773','Solved_Problem object (773)',3,'',20,1),(281,'2025-01-10 12:13:22.372477','772','Solved_Problem object (772)',3,'',20,1),(282,'2025-01-10 12:13:22.372477','771','Solved_Problem object (771)',3,'',20,1),(283,'2025-01-10 12:13:22.372477','770','Solved_Problem object (770)',3,'',20,1),(284,'2025-01-10 12:13:22.372477','769','Solved_Problem object (769)',3,'',20,1),(285,'2025-01-10 12:13:22.372477','768','Solved_Problem object (768)',3,'',20,1),(286,'2025-01-10 12:13:22.372477','767','Solved_Problem object (767)',3,'',20,1),(287,'2025-01-10 12:13:22.372477','766','Solved_Problem object (766)',3,'',20,1),(288,'2025-01-10 12:13:22.372477','765','Solved_Problem object (765)',3,'',20,1),(289,'2025-01-10 12:13:22.372477','764','Solved_Problem object (764)',3,'',20,1),(290,'2025-01-10 12:13:22.372477','763','Solved_Problem object (763)',3,'',20,1),(291,'2025-01-10 12:13:22.372477','762','Solved_Problem object (762)',3,'',20,1),(292,'2025-01-10 12:13:22.372477','761','Solved_Problem object (761)',3,'',20,1),(293,'2025-01-10 12:13:22.372477','760','Solved_Problem object (760)',3,'',20,1),(294,'2025-01-10 12:13:22.372477','759','Solved_Problem object (759)',3,'',20,1),(295,'2025-01-10 12:13:31.547571','758','Solved_Problem object (758)',3,'',20,1),(296,'2025-01-10 12:13:31.547571','757','Solved_Problem object (757)',3,'',20,1),(297,'2025-01-10 12:13:31.547571','756','Solved_Problem object (756)',3,'',20,1),(298,'2025-01-10 12:13:31.547571','755','Solved_Problem object (755)',3,'',20,1),(299,'2025-01-10 12:13:31.547571','754','Solved_Problem object (754)',3,'',20,1),(300,'2025-01-10 12:13:31.547571','753','Solved_Problem object (753)',3,'',20,1),(301,'2025-01-10 12:13:31.547571','752','Solved_Problem object (752)',3,'',20,1),(302,'2025-01-10 12:13:31.547571','751','Solved_Problem object (751)',3,'',20,1),(303,'2025-01-10 12:13:31.547571','750','Solved_Problem object (750)',3,'',20,1),(304,'2025-01-10 12:13:31.547571','749','Solved_Problem object (749)',3,'',20,1),(305,'2025-01-10 12:13:31.547571','748','Solved_Problem object (748)',3,'',20,1),(306,'2025-01-10 12:13:31.547571','747','Solved_Problem object (747)',3,'',20,1),(307,'2025-01-10 12:13:31.547571','746','Solved_Problem object (746)',3,'',20,1),(308,'2025-01-10 12:13:31.547571','745','Solved_Problem object (745)',3,'',20,1),(309,'2025-01-10 12:13:31.547571','744','Solved_Problem object (744)',3,'',20,1),(310,'2025-01-10 12:13:31.547571','743','Solved_Problem object (743)',3,'',20,1),(311,'2025-01-10 12:13:31.547571','742','Solved_Problem object (742)',3,'',20,1),(312,'2025-01-10 12:13:31.547571','741','Solved_Problem object (741)',3,'',20,1),(313,'2025-01-10 12:13:31.547571','740','Solved_Problem object (740)',3,'',20,1),(314,'2025-01-10 12:13:31.547571','739','Solved_Problem object (739)',3,'',20,1),(315,'2025-01-10 12:13:31.547571','738','Solved_Problem object (738)',3,'',20,1),(316,'2025-01-10 12:13:31.547571','737','Solved_Problem object (737)',3,'',20,1),(317,'2025-01-10 12:13:31.547571','736','Solved_Problem object (736)',3,'',20,1),(318,'2025-01-10 12:13:31.547571','735','Solved_Problem object (735)',3,'',20,1),(319,'2025-01-10 12:13:31.547571','734','Solved_Problem object (734)',3,'',20,1),(320,'2025-01-10 12:13:31.547571','733','Solved_Problem object (733)',3,'',20,1),(321,'2025-01-10 12:13:31.547571','732','Solved_Problem object (732)',3,'',20,1),(322,'2025-01-10 12:13:31.547571','731','Solved_Problem object (731)',3,'',20,1),(323,'2025-01-10 12:13:31.547571','730','Solved_Problem object (730)',3,'',20,1),(324,'2025-01-10 12:13:31.547571','729','Solved_Problem object (729)',3,'',20,1),(325,'2025-01-10 12:13:31.547571','728','Solved_Problem object (728)',3,'',20,1),(326,'2025-01-10 12:13:31.547571','727','Solved_Problem object (727)',3,'',20,1),(327,'2025-01-10 12:13:31.547571','726','Solved_Problem object (726)',3,'',20,1),(328,'2025-01-10 12:13:31.547571','725','Solved_Problem object (725)',3,'',20,1),(329,'2025-01-10 12:13:31.547571','724','Solved_Problem object (724)',3,'',20,1),(330,'2025-01-10 12:13:31.547571','723','Solved_Problem object (723)',3,'',20,1),(331,'2025-01-10 12:13:31.547571','722','Solved_Problem object (722)',3,'',20,1),(332,'2025-01-10 12:13:31.547571','721','Solved_Problem object (721)',3,'',20,1),(333,'2025-01-10 12:13:31.547571','720','Solved_Problem object (720)',3,'',20,1),(334,'2025-01-10 12:13:31.547571','719','Solved_Problem object (719)',3,'',20,1),(335,'2025-01-10 12:13:31.547571','718','Solved_Problem object (718)',3,'',20,1),(336,'2025-01-10 12:13:31.547571','717','Solved_Problem object (717)',3,'',20,1),(337,'2025-01-10 12:13:31.547571','716','Solved_Problem object (716)',3,'',20,1),(338,'2025-01-10 12:13:31.547571','715','Solved_Problem object (715)',3,'',20,1),(339,'2025-01-10 12:13:31.547571','714','Solved_Problem object (714)',3,'',20,1),(340,'2025-01-10 12:13:31.547571','713','Solved_Problem object (713)',3,'',20,1),(341,'2025-01-10 12:13:31.547571','712','Solved_Problem object (712)',3,'',20,1),(342,'2025-01-10 12:13:31.547571','711','Solved_Problem object (711)',3,'',20,1),(343,'2025-01-10 12:13:31.547571','710','Solved_Problem object (710)',3,'',20,1),(344,'2025-01-10 12:13:31.547571','709','Solved_Problem object (709)',3,'',20,1),(345,'2025-01-10 12:13:31.547571','708','Solved_Problem object (708)',3,'',20,1),(346,'2025-01-10 12:13:31.547571','707','Solved_Problem object (707)',3,'',20,1),(347,'2025-01-10 12:13:31.547571','706','Solved_Problem object (706)',3,'',20,1),(348,'2025-01-10 12:13:31.547571','705','Solved_Problem object (705)',3,'',20,1),(349,'2025-01-10 12:13:31.547571','704','Solved_Problem object (704)',3,'',20,1),(350,'2025-01-10 12:13:31.547571','703','Solved_Problem object (703)',3,'',20,1),(351,'2025-01-10 12:13:31.547571','702','Solved_Problem object (702)',3,'',20,1),(352,'2025-01-10 12:13:31.547571','701','Solved_Problem object (701)',3,'',20,1),(353,'2025-01-10 12:13:31.547571','700','Solved_Problem object (700)',3,'',20,1),(354,'2025-01-10 12:13:31.547571','699','Solved_Problem object (699)',3,'',20,1),(355,'2025-01-10 12:13:31.547571','698','Solved_Problem object (698)',3,'',20,1),(356,'2025-01-10 12:13:31.547571','697','Solved_Problem object (697)',3,'',20,1),(357,'2025-01-10 12:13:31.547571','696','Solved_Problem object (696)',3,'',20,1),(358,'2025-01-10 12:13:31.547571','695','Solved_Problem object (695)',3,'',20,1),(359,'2025-01-10 12:13:31.547571','694','Solved_Problem object (694)',3,'',20,1),(360,'2025-01-10 12:13:31.547571','693','Solved_Problem object (693)',3,'',20,1),(361,'2025-01-10 12:13:31.547571','692','Solved_Problem object (692)',3,'',20,1),(362,'2025-01-10 12:13:31.547571','691','Solved_Problem object (691)',3,'',20,1),(363,'2025-01-10 12:13:31.547571','690','Solved_Problem object (690)',3,'',20,1),(364,'2025-01-10 12:13:31.547571','689','Solved_Problem object (689)',3,'',20,1),(365,'2025-01-10 12:13:31.547571','688','Solved_Problem object (688)',3,'',20,1),(366,'2025-01-10 12:13:31.547571','687','Solved_Problem object (687)',3,'',20,1),(367,'2025-01-10 12:13:31.547571','686','Solved_Problem object (686)',3,'',20,1),(368,'2025-01-10 12:13:31.547571','685','Solved_Problem object (685)',3,'',20,1),(369,'2025-01-10 12:13:31.547571','684','Solved_Problem object (684)',3,'',20,1),(370,'2025-01-10 12:13:31.547571','683','Solved_Problem object (683)',3,'',20,1),(371,'2025-01-10 12:13:31.547571','682','Solved_Problem object (682)',3,'',20,1),(372,'2025-01-10 12:13:31.547571','681','Solved_Problem object (681)',3,'',20,1),(373,'2025-01-10 12:13:31.547571','680','Solved_Problem object (680)',3,'',20,1),(374,'2025-01-10 12:13:31.547571','679','Solved_Problem object (679)',3,'',20,1),(375,'2025-01-10 12:13:31.547571','678','Solved_Problem object (678)',3,'',20,1),(376,'2025-01-10 12:13:31.547571','677','Solved_Problem object (677)',3,'',20,1),(377,'2025-01-10 12:13:31.547571','676','Solved_Problem object (676)',3,'',20,1),(378,'2025-01-10 12:13:31.547571','675','Solved_Problem object (675)',3,'',20,1),(379,'2025-01-10 12:13:31.547571','674','Solved_Problem object (674)',3,'',20,1),(380,'2025-01-10 12:13:31.547571','673','Solved_Problem object (673)',3,'',20,1),(381,'2025-01-10 12:13:31.547571','672','Solved_Problem object (672)',3,'',20,1),(382,'2025-01-10 12:13:31.547571','671','Solved_Problem object (671)',3,'',20,1),(383,'2025-01-10 12:13:31.547571','670','Solved_Problem object (670)',3,'',20,1),(384,'2025-01-10 12:13:31.547571','669','Solved_Problem object (669)',3,'',20,1),(385,'2025-01-10 12:13:31.547571','668','Solved_Problem object (668)',3,'',20,1),(386,'2025-01-10 12:13:31.547571','667','Solved_Problem object (667)',3,'',20,1),(387,'2025-01-10 12:13:31.547571','666','Solved_Problem object (666)',3,'',20,1),(388,'2025-01-10 12:13:31.547571','665','Solved_Problem object (665)',3,'',20,1),(389,'2025-01-10 12:13:31.547571','664','Solved_Problem object (664)',3,'',20,1),(390,'2025-01-10 12:13:31.547571','663','Solved_Problem object (663)',3,'',20,1),(391,'2025-01-10 12:13:31.547571','662','Solved_Problem object (662)',3,'',20,1),(392,'2025-01-10 12:13:31.547571','661','Solved_Problem object (661)',3,'',20,1),(393,'2025-01-10 12:13:31.547571','660','Solved_Problem object (660)',3,'',20,1),(394,'2025-01-10 12:13:31.547571','659','Solved_Problem object (659)',3,'',20,1),(395,'2025-01-10 12:13:38.309739','658','Solved_Problem object (658)',3,'',20,1),(396,'2025-01-10 12:13:38.309739','657','Solved_Problem object (657)',3,'',20,1),(397,'2025-01-10 12:13:38.309739','656','Solved_Problem object (656)',3,'',20,1),(398,'2025-01-10 12:13:38.309739','655','Solved_Problem object (655)',3,'',20,1),(399,'2025-01-10 12:13:38.309739','654','Solved_Problem object (654)',3,'',20,1),(400,'2025-01-10 12:13:38.309739','653','Solved_Problem object (653)',3,'',20,1),(401,'2025-01-10 12:13:38.309739','652','Solved_Problem object (652)',3,'',20,1),(402,'2025-01-10 12:13:38.309739','651','Solved_Problem object (651)',3,'',20,1),(403,'2025-01-10 12:13:38.309739','650','Solved_Problem object (650)',3,'',20,1),(404,'2025-01-10 12:13:38.309739','649','Solved_Problem object (649)',3,'',20,1),(405,'2025-01-10 12:13:38.309739','648','Solved_Problem object (648)',3,'',20,1),(406,'2025-01-10 12:13:38.310740','647','Solved_Problem object (647)',3,'',20,1),(407,'2025-01-10 12:13:38.310740','646','Solved_Problem object (646)',3,'',20,1),(408,'2025-01-10 12:13:38.310740','645','Solved_Problem object (645)',3,'',20,1),(409,'2025-01-10 12:13:38.310740','644','Solved_Problem object (644)',3,'',20,1),(410,'2025-01-10 12:13:38.310740','643','Solved_Problem object (643)',3,'',20,1),(411,'2025-01-10 12:13:38.310740','642','Solved_Problem object (642)',3,'',20,1),(412,'2025-01-10 12:13:38.310740','641','Solved_Problem object (641)',3,'',20,1),(413,'2025-01-10 12:13:38.310740','640','Solved_Problem object (640)',3,'',20,1),(414,'2025-01-10 12:13:38.310740','639','Solved_Problem object (639)',3,'',20,1),(415,'2025-01-10 12:13:38.310740','638','Solved_Problem object (638)',3,'',20,1),(416,'2025-01-10 12:13:38.310740','637','Solved_Problem object (637)',3,'',20,1),(417,'2025-01-10 12:13:38.310740','636','Solved_Problem object (636)',3,'',20,1),(418,'2025-01-10 12:13:38.310740','635','Solved_Problem object (635)',3,'',20,1),(419,'2025-01-10 12:13:38.310740','634','Solved_Problem object (634)',3,'',20,1),(420,'2025-01-10 12:13:38.310740','633','Solved_Problem object (633)',3,'',20,1),(421,'2025-01-10 12:13:38.310740','632','Solved_Problem object (632)',3,'',20,1),(422,'2025-01-10 12:13:38.310740','631','Solved_Problem object (631)',3,'',20,1),(423,'2025-01-10 12:13:38.310740','630','Solved_Problem object (630)',3,'',20,1),(424,'2025-01-10 12:13:38.310740','629','Solved_Problem object (629)',3,'',20,1),(425,'2025-01-10 12:13:38.310740','628','Solved_Problem object (628)',3,'',20,1),(426,'2025-01-10 12:13:38.310740','627','Solved_Problem object (627)',3,'',20,1),(427,'2025-01-10 12:13:38.310740','626','Solved_Problem object (626)',3,'',20,1),(428,'2025-01-10 12:13:38.310740','625','Solved_Problem object (625)',3,'',20,1),(429,'2025-01-10 12:13:38.310740','624','Solved_Problem object (624)',3,'',20,1),(430,'2025-01-10 12:13:38.310740','623','Solved_Problem object (623)',3,'',20,1),(431,'2025-01-10 12:13:38.310740','622','Solved_Problem object (622)',3,'',20,1),(432,'2025-01-10 12:13:38.311739','621','Solved_Problem object (621)',3,'',20,1),(433,'2025-01-10 12:13:38.311739','620','Solved_Problem object (620)',3,'',20,1),(434,'2025-01-10 12:13:38.311739','619','Solved_Problem object (619)',3,'',20,1),(435,'2025-01-10 12:13:38.311739','618','Solved_Problem object (618)',3,'',20,1),(436,'2025-01-10 12:13:38.311739','617','Solved_Problem object (617)',3,'',20,1),(437,'2025-01-10 12:13:38.311739','616','Solved_Problem object (616)',3,'',20,1),(438,'2025-01-10 12:13:38.311739','615','Solved_Problem object (615)',3,'',20,1),(439,'2025-01-10 12:13:38.311739','614','Solved_Problem object (614)',3,'',20,1),(440,'2025-01-10 12:13:38.311739','613','Solved_Problem object (613)',3,'',20,1),(441,'2025-01-10 12:13:38.311739','612','Solved_Problem object (612)',3,'',20,1),(442,'2025-01-10 12:13:38.311739','611','Solved_Problem object (611)',3,'',20,1),(443,'2025-01-10 12:13:38.311739','610','Solved_Problem object (610)',3,'',20,1),(444,'2025-01-10 12:13:38.311739','609','Solved_Problem object (609)',3,'',20,1),(445,'2025-01-10 12:13:38.311739','608','Solved_Problem object (608)',3,'',20,1),(446,'2025-01-10 12:13:38.311739','607','Solved_Problem object (607)',3,'',20,1),(447,'2025-01-10 12:13:38.311739','606','Solved_Problem object (606)',3,'',20,1),(448,'2025-01-10 12:13:38.311739','605','Solved_Problem object (605)',3,'',20,1),(449,'2025-01-10 12:13:38.311739','604','Solved_Problem object (604)',3,'',20,1),(450,'2025-01-10 12:13:38.311739','603','Solved_Problem object (603)',3,'',20,1),(451,'2025-01-10 12:13:38.311739','602','Solved_Problem object (602)',3,'',20,1),(452,'2025-01-10 12:13:38.311739','601','Solved_Problem object (601)',3,'',20,1),(453,'2025-01-10 12:13:38.311739','600','Solved_Problem object (600)',3,'',20,1),(454,'2025-01-10 12:13:38.311739','599','Solved_Problem object (599)',3,'',20,1),(455,'2025-01-10 12:13:38.311739','598','Solved_Problem object (598)',3,'',20,1),(456,'2025-01-10 12:13:38.311739','597','Solved_Problem object (597)',3,'',20,1),(457,'2025-01-10 12:13:38.311739','596','Solved_Problem object (596)',3,'',20,1),(458,'2025-01-10 12:13:38.312740','595','Solved_Problem object (595)',3,'',20,1),(459,'2025-01-10 12:13:38.312740','594','Solved_Problem object (594)',3,'',20,1),(460,'2025-01-10 12:13:38.312740','593','Solved_Problem object (593)',3,'',20,1),(461,'2025-01-10 12:13:38.312740','592','Solved_Problem object (592)',3,'',20,1),(462,'2025-01-10 12:13:38.312740','591','Solved_Problem object (591)',3,'',20,1),(463,'2025-01-10 12:13:38.312740','590','Solved_Problem object (590)',3,'',20,1),(464,'2025-01-10 12:13:38.312740','589','Solved_Problem object (589)',3,'',20,1),(465,'2025-01-10 12:13:38.312740','588','Solved_Problem object (588)',3,'',20,1),(466,'2025-01-10 12:13:38.312740','587','Solved_Problem object (587)',3,'',20,1),(467,'2025-01-10 12:13:38.312740','586','Solved_Problem object (586)',3,'',20,1),(468,'2025-01-10 12:13:38.312740','585','Solved_Problem object (585)',3,'',20,1),(469,'2025-01-10 12:13:38.312740','584','Solved_Problem object (584)',3,'',20,1),(470,'2025-01-10 12:13:38.312740','583','Solved_Problem object (583)',3,'',20,1),(471,'2025-01-10 12:13:38.312740','582','Solved_Problem object (582)',3,'',20,1),(472,'2025-01-10 12:13:38.312740','581','Solved_Problem object (581)',3,'',20,1),(473,'2025-01-10 12:13:38.312740','580','Solved_Problem object (580)',3,'',20,1),(474,'2025-01-10 12:13:38.312740','579','Solved_Problem object (579)',3,'',20,1),(475,'2025-01-10 12:13:38.312740','578','Solved_Problem object (578)',3,'',20,1),(476,'2025-01-10 12:13:38.312740','577','Solved_Problem object (577)',3,'',20,1),(477,'2025-01-10 12:13:38.313742','576','Solved_Problem object (576)',3,'',20,1),(478,'2025-01-10 12:13:38.313742','575','Solved_Problem object (575)',3,'',20,1),(479,'2025-01-10 12:13:38.313742','574','Solved_Problem object (574)',3,'',20,1),(480,'2025-01-10 12:13:38.313742','573','Solved_Problem object (573)',3,'',20,1),(481,'2025-01-10 12:13:38.313742','572','Solved_Problem object (572)',3,'',20,1),(482,'2025-01-10 12:13:38.313742','571','Solved_Problem object (571)',3,'',20,1),(483,'2025-01-10 12:13:38.313742','570','Solved_Problem object (570)',3,'',20,1),(484,'2025-01-10 12:13:38.313742','569','Solved_Problem object (569)',3,'',20,1),(485,'2025-01-10 12:13:38.313742','568','Solved_Problem object (568)',3,'',20,1),(486,'2025-01-10 12:13:38.313742','567','Solved_Problem object (567)',3,'',20,1),(487,'2025-01-10 12:13:38.313742','566','Solved_Problem object (566)',3,'',20,1),(488,'2025-01-10 12:13:38.313742','565','Solved_Problem object (565)',3,'',20,1),(489,'2025-01-10 12:13:38.313742','564','Solved_Problem object (564)',3,'',20,1),(490,'2025-01-10 12:13:38.313742','563','Solved_Problem object (563)',3,'',20,1),(491,'2025-01-10 12:13:38.313742','562','Solved_Problem object (562)',3,'',20,1),(492,'2025-01-10 12:13:38.313742','561','Solved_Problem object (561)',3,'',20,1),(493,'2025-01-10 12:13:38.314741','560','Solved_Problem object (560)',3,'',20,1),(494,'2025-01-10 12:13:38.314741','559','Solved_Problem object (559)',3,'',20,1),(495,'2025-01-10 12:13:45.350453','558','Solved_Problem object (558)',3,'',20,1),(496,'2025-01-10 12:13:45.350453','557','Solved_Problem object (557)',3,'',20,1),(497,'2025-01-10 12:13:45.350453','556','Solved_Problem object (556)',3,'',20,1),(498,'2025-01-10 12:13:45.350453','555','Solved_Problem object (555)',3,'',20,1),(499,'2025-01-10 12:13:45.350453','554','Solved_Problem object (554)',3,'',20,1),(500,'2025-01-10 12:13:45.350453','553','Solved_Problem object (553)',3,'',20,1),(501,'2025-01-10 12:13:45.350453','552','Solved_Problem object (552)',3,'',20,1),(502,'2025-01-10 12:13:45.350453','551','Solved_Problem object (551)',3,'',20,1),(503,'2025-01-10 12:13:45.350453','550','Solved_Problem object (550)',3,'',20,1),(504,'2025-01-10 12:13:45.350453','549','Solved_Problem object (549)',3,'',20,1),(505,'2025-01-10 12:13:45.350453','548','Solved_Problem object (548)',3,'',20,1),(506,'2025-01-10 12:13:45.350453','547','Solved_Problem object (547)',3,'',20,1),(507,'2025-01-10 12:13:45.350453','546','Solved_Problem object (546)',3,'',20,1),(508,'2025-01-10 12:13:45.350453','545','Solved_Problem object (545)',3,'',20,1),(509,'2025-01-10 12:13:45.351455','544','Solved_Problem object (544)',3,'',20,1),(510,'2025-01-10 12:13:45.351455','543','Solved_Problem object (543)',3,'',20,1),(511,'2025-01-10 12:13:45.351455','542','Solved_Problem object (542)',3,'',20,1),(512,'2025-01-10 12:13:45.351455','541','Solved_Problem object (541)',3,'',20,1),(513,'2025-01-10 12:13:45.351455','540','Solved_Problem object (540)',3,'',20,1),(514,'2025-01-10 12:13:45.351455','539','Solved_Problem object (539)',3,'',20,1),(515,'2025-01-10 12:13:45.351455','538','Solved_Problem object (538)',3,'',20,1),(516,'2025-01-10 12:13:45.351455','537','Solved_Problem object (537)',3,'',20,1),(517,'2025-01-10 12:13:45.351455','536','Solved_Problem object (536)',3,'',20,1),(518,'2025-01-10 12:13:45.351455','535','Solved_Problem object (535)',3,'',20,1),(519,'2025-01-10 12:13:45.351455','534','Solved_Problem object (534)',3,'',20,1),(520,'2025-01-10 12:13:45.351455','533','Solved_Problem object (533)',3,'',20,1),(521,'2025-01-10 12:13:45.351455','532','Solved_Problem object (532)',3,'',20,1),(522,'2025-01-10 12:13:45.351455','531','Solved_Problem object (531)',3,'',20,1),(523,'2025-01-10 12:13:45.351455','530','Solved_Problem object (530)',3,'',20,1),(524,'2025-01-10 12:13:45.351455','529','Solved_Problem object (529)',3,'',20,1),(525,'2025-01-10 12:13:45.351455','528','Solved_Problem object (528)',3,'',20,1),(526,'2025-01-10 12:13:45.351455','527','Solved_Problem object (527)',3,'',20,1),(527,'2025-01-10 12:13:45.351455','526','Solved_Problem object (526)',3,'',20,1),(528,'2025-01-10 12:13:45.351455','525','Solved_Problem object (525)',3,'',20,1),(529,'2025-01-10 12:13:45.351455','524','Solved_Problem object (524)',3,'',20,1),(530,'2025-01-10 12:13:45.351455','523','Solved_Problem object (523)',3,'',20,1),(531,'2025-01-10 12:13:45.351455','522','Solved_Problem object (522)',3,'',20,1),(532,'2025-01-10 12:13:45.351455','521','Solved_Problem object (521)',3,'',20,1),(533,'2025-01-10 12:13:45.351455','520','Solved_Problem object (520)',3,'',20,1),(534,'2025-01-10 12:13:45.351455','519','Solved_Problem object (519)',3,'',20,1),(535,'2025-01-10 12:13:45.352455','518','Solved_Problem object (518)',3,'',20,1),(536,'2025-01-10 12:13:45.352455','517','Solved_Problem object (517)',3,'',20,1),(537,'2025-01-10 12:13:45.352455','516','Solved_Problem object (516)',3,'',20,1),(538,'2025-01-10 12:13:45.352455','515','Solved_Problem object (515)',3,'',20,1),(539,'2025-01-10 12:13:45.352455','514','Solved_Problem object (514)',3,'',20,1),(540,'2025-01-10 12:13:45.352455','513','Solved_Problem object (513)',3,'',20,1),(541,'2025-01-10 12:13:45.352455','512','Solved_Problem object (512)',3,'',20,1),(542,'2025-01-10 12:13:45.352455','511','Solved_Problem object (511)',3,'',20,1),(543,'2025-01-10 12:13:45.352455','510','Solved_Problem object (510)',3,'',20,1),(544,'2025-01-10 12:13:45.352455','509','Solved_Problem object (509)',3,'',20,1),(545,'2025-01-10 12:13:45.352455','508','Solved_Problem object (508)',3,'',20,1),(546,'2025-01-10 12:13:45.352455','507','Solved_Problem object (507)',3,'',20,1),(547,'2025-01-10 12:13:45.352455','506','Solved_Problem object (506)',3,'',20,1),(548,'2025-01-10 12:13:45.352455','505','Solved_Problem object (505)',3,'',20,1),(549,'2025-01-10 12:13:45.352455','504','Solved_Problem object (504)',3,'',20,1),(550,'2025-01-10 12:13:45.352455','503','Solved_Problem object (503)',3,'',20,1),(551,'2025-01-10 12:13:45.352455','502','Solved_Problem object (502)',3,'',20,1),(552,'2025-01-10 12:13:45.352455','501','Solved_Problem object (501)',3,'',20,1),(553,'2025-01-10 12:13:45.352455','500','Solved_Problem object (500)',3,'',20,1),(554,'2025-01-10 12:13:45.352455','499','Solved_Problem object (499)',3,'',20,1),(555,'2025-01-10 12:13:45.352455','498','Solved_Problem object (498)',3,'',20,1),(556,'2025-01-10 12:13:45.352455','497','Solved_Problem object (497)',3,'',20,1),(557,'2025-01-10 12:13:45.352455','496','Solved_Problem object (496)',3,'',20,1),(558,'2025-01-10 12:13:45.352455','495','Solved_Problem object (495)',3,'',20,1),(559,'2025-01-10 12:13:45.352455','494','Solved_Problem object (494)',3,'',20,1),(560,'2025-01-10 12:13:45.353457','493','Solved_Problem object (493)',3,'',20,1),(561,'2025-01-10 12:13:45.353457','492','Solved_Problem object (492)',3,'',20,1),(562,'2025-01-10 12:13:45.353457','491','Solved_Problem object (491)',3,'',20,1),(563,'2025-01-10 12:13:45.353457','490','Solved_Problem object (490)',3,'',20,1),(564,'2025-01-10 12:13:45.353457','489','Solved_Problem object (489)',3,'',20,1),(565,'2025-01-10 12:13:45.353457','488','Solved_Problem object (488)',3,'',20,1),(566,'2025-01-10 12:13:45.353457','487','Solved_Problem object (487)',3,'',20,1),(567,'2025-01-10 12:13:45.353457','486','Solved_Problem object (486)',3,'',20,1),(568,'2025-01-10 12:13:45.353457','485','Solved_Problem object (485)',3,'',20,1),(569,'2025-01-10 12:13:45.353457','484','Solved_Problem object (484)',3,'',20,1),(570,'2025-01-10 12:13:45.353457','483','Solved_Problem object (483)',3,'',20,1),(571,'2025-01-10 12:13:45.353457','482','Solved_Problem object (482)',3,'',20,1),(572,'2025-01-10 12:13:45.353457','481','Solved_Problem object (481)',3,'',20,1),(573,'2025-01-10 12:13:45.353457','480','Solved_Problem object (480)',3,'',20,1),(574,'2025-01-10 12:13:45.353457','479','Solved_Problem object (479)',3,'',20,1),(575,'2025-01-10 12:13:45.353457','478','Solved_Problem object (478)',3,'',20,1),(576,'2025-01-10 12:13:45.353457','477','Solved_Problem object (477)',3,'',20,1),(577,'2025-01-10 12:13:45.353457','476','Solved_Problem object (476)',3,'',20,1),(578,'2025-01-10 12:13:45.353457','475','Solved_Problem object (475)',3,'',20,1),(579,'2025-01-10 12:13:45.353457','474','Solved_Problem object (474)',3,'',20,1),(580,'2025-01-10 12:13:45.353457','473','Solved_Problem object (473)',3,'',20,1),(581,'2025-01-10 12:13:45.353457','472','Solved_Problem object (472)',3,'',20,1),(582,'2025-01-10 12:13:45.353457','471','Solved_Problem object (471)',3,'',20,1),(583,'2025-01-10 12:13:45.353457','470','Solved_Problem object (470)',3,'',20,1),(584,'2025-01-10 12:13:45.353457','469','Solved_Problem object (469)',3,'',20,1),(585,'2025-01-10 12:13:45.353457','468','Solved_Problem object (468)',3,'',20,1),(586,'2025-01-10 12:13:45.354456','467','Solved_Problem object (467)',3,'',20,1),(587,'2025-01-10 12:13:45.354456','466','Solved_Problem object (466)',3,'',20,1),(588,'2025-01-10 12:13:45.354456','465','Solved_Problem object (465)',3,'',20,1),(589,'2025-01-10 12:13:45.354456','464','Solved_Problem object (464)',3,'',20,1),(590,'2025-01-10 12:13:45.354456','463','Solved_Problem object (463)',3,'',20,1),(591,'2025-01-10 12:13:45.354456','462','Solved_Problem object (462)',3,'',20,1),(592,'2025-01-10 12:13:45.354456','461','Solved_Problem object (461)',3,'',20,1),(593,'2025-01-10 12:13:45.354456','460','Solved_Problem object (460)',3,'',20,1),(594,'2025-01-10 12:13:45.354456','459','Solved_Problem object (459)',3,'',20,1),(595,'2025-01-10 12:13:53.854467','458','Solved_Problem object (458)',3,'',20,1),(596,'2025-01-10 12:13:53.855472','457','Solved_Problem object (457)',3,'',20,1),(597,'2025-01-10 12:13:53.855472','456','Solved_Problem object (456)',3,'',20,1),(598,'2025-01-10 12:13:53.855472','455','Solved_Problem object (455)',3,'',20,1),(599,'2025-01-10 12:13:53.855472','454','Solved_Problem object (454)',3,'',20,1),(600,'2025-01-10 12:13:53.855472','453','Solved_Problem object (453)',3,'',20,1),(601,'2025-01-10 12:13:53.855472','452','Solved_Problem object (452)',3,'',20,1),(602,'2025-01-10 12:13:53.855472','451','Solved_Problem object (451)',3,'',20,1),(603,'2025-01-10 12:13:53.855472','450','Solved_Problem object (450)',3,'',20,1),(604,'2025-01-10 12:13:53.855472','449','Solved_Problem object (449)',3,'',20,1),(605,'2025-01-10 12:13:53.855472','448','Solved_Problem object (448)',3,'',20,1),(606,'2025-01-10 12:13:53.855472','447','Solved_Problem object (447)',3,'',20,1),(607,'2025-01-10 12:13:53.855472','446','Solved_Problem object (446)',3,'',20,1),(608,'2025-01-10 12:13:53.855472','445','Solved_Problem object (445)',3,'',20,1),(609,'2025-01-10 12:13:53.855472','444','Solved_Problem object (444)',3,'',20,1),(610,'2025-01-10 12:13:53.855472','443','Solved_Problem object (443)',3,'',20,1),(611,'2025-01-10 12:13:53.855472','442','Solved_Problem object (442)',3,'',20,1),(612,'2025-01-10 12:13:53.855472','441','Solved_Problem object (441)',3,'',20,1),(613,'2025-01-10 12:13:53.855472','440','Solved_Problem object (440)',3,'',20,1),(614,'2025-01-10 12:13:53.855472','439','Solved_Problem object (439)',3,'',20,1),(615,'2025-01-10 12:13:53.855472','438','Solved_Problem object (438)',3,'',20,1),(616,'2025-01-10 12:13:53.856472','437','Solved_Problem object (437)',3,'',20,1),(617,'2025-01-10 12:13:53.856472','436','Solved_Problem object (436)',3,'',20,1),(618,'2025-01-10 12:13:53.856472','435','Solved_Problem object (435)',3,'',20,1),(619,'2025-01-10 12:13:53.856472','434','Solved_Problem object (434)',3,'',20,1),(620,'2025-01-10 12:13:53.856472','433','Solved_Problem object (433)',3,'',20,1),(621,'2025-01-10 12:13:53.856472','432','Solved_Problem object (432)',3,'',20,1),(622,'2025-01-10 12:13:53.856472','431','Solved_Problem object (431)',3,'',20,1),(623,'2025-01-10 12:13:53.856472','430','Solved_Problem object (430)',3,'',20,1),(624,'2025-01-10 12:13:53.856472','429','Solved_Problem object (429)',3,'',20,1),(625,'2025-01-10 12:13:53.856472','428','Solved_Problem object (428)',3,'',20,1),(626,'2025-01-10 12:13:53.856472','427','Solved_Problem object (427)',3,'',20,1),(627,'2025-01-10 12:13:53.856472','426','Solved_Problem object (426)',3,'',20,1),(628,'2025-01-10 12:13:53.856472','425','Solved_Problem object (425)',3,'',20,1),(629,'2025-01-10 12:13:53.856472','424','Solved_Problem object (424)',3,'',20,1),(630,'2025-01-10 12:13:53.856472','423','Solved_Problem object (423)',3,'',20,1),(631,'2025-01-10 12:13:53.856472','422','Solved_Problem object (422)',3,'',20,1),(632,'2025-01-10 12:13:53.856472','421','Solved_Problem object (421)',3,'',20,1),(633,'2025-01-10 12:13:53.856472','420','Solved_Problem object (420)',3,'',20,1),(634,'2025-01-10 12:13:53.856472','419','Solved_Problem object (419)',3,'',20,1),(635,'2025-01-10 12:13:53.856472','418','Solved_Problem object (418)',3,'',20,1),(636,'2025-01-10 12:13:53.856472','417','Solved_Problem object (417)',3,'',20,1),(637,'2025-01-10 12:13:53.856472','416','Solved_Problem object (416)',3,'',20,1),(638,'2025-01-10 12:13:53.856472','415','Solved_Problem object (415)',3,'',20,1),(639,'2025-01-10 12:13:53.857471','414','Solved_Problem object (414)',3,'',20,1),(640,'2025-01-10 12:13:53.857471','413','Solved_Problem object (413)',3,'',20,1),(641,'2025-01-10 12:13:53.857471','412','Solved_Problem object (412)',3,'',20,1),(642,'2025-01-10 12:13:53.857471','411','Solved_Problem object (411)',3,'',20,1),(643,'2025-01-10 12:13:53.857471','410','Solved_Problem object (410)',3,'',20,1),(644,'2025-01-10 12:13:53.857471','409','Solved_Problem object (409)',3,'',20,1),(645,'2025-01-10 12:13:53.857471','408','Solved_Problem object (408)',3,'',20,1),(646,'2025-01-10 12:13:53.857471','407','Solved_Problem object (407)',3,'',20,1),(647,'2025-01-10 12:13:53.857471','406','Solved_Problem object (406)',3,'',20,1),(648,'2025-01-10 12:13:53.857471','405','Solved_Problem object (405)',3,'',20,1),(649,'2025-01-10 12:13:53.857471','404','Solved_Problem object (404)',3,'',20,1),(650,'2025-01-10 12:13:53.857471','403','Solved_Problem object (403)',3,'',20,1),(651,'2025-01-10 12:13:53.857471','402','Solved_Problem object (402)',3,'',20,1),(652,'2025-01-10 12:13:53.857471','401','Solved_Problem object (401)',3,'',20,1),(653,'2025-01-10 12:13:53.857471','400','Solved_Problem object (400)',3,'',20,1),(654,'2025-01-10 12:13:53.857471','399','Solved_Problem object (399)',3,'',20,1),(655,'2025-01-10 12:13:53.857471','398','Solved_Problem object (398)',3,'',20,1),(656,'2025-01-10 12:13:53.857471','397','Solved_Problem object (397)',3,'',20,1),(657,'2025-01-10 12:13:53.857471','396','Solved_Problem object (396)',3,'',20,1),(658,'2025-01-10 12:13:53.857471','395','Solved_Problem object (395)',3,'',20,1),(659,'2025-01-10 12:13:53.857471','394','Solved_Problem object (394)',3,'',20,1),(660,'2025-01-10 12:13:53.858470','393','Solved_Problem object (393)',3,'',20,1),(661,'2025-01-10 12:13:53.858470','392','Solved_Problem object (392)',3,'',20,1),(662,'2025-01-10 12:13:53.858470','391','Solved_Problem object (391)',3,'',20,1),(663,'2025-01-10 12:13:53.858624','390','Solved_Problem object (390)',3,'',20,1),(664,'2025-01-10 12:13:53.858624','389','Solved_Problem object (389)',3,'',20,1),(665,'2025-01-10 12:13:53.858624','388','Solved_Problem object (388)',3,'',20,1),(666,'2025-01-10 12:13:53.858624','387','Solved_Problem object (387)',3,'',20,1),(667,'2025-01-10 12:13:53.858624','386','Solved_Problem object (386)',3,'',20,1),(668,'2025-01-10 12:13:53.858624','385','Solved_Problem object (385)',3,'',20,1),(669,'2025-01-10 12:13:53.858624','384','Solved_Problem object (384)',3,'',20,1),(670,'2025-01-10 12:13:53.858624','383','Solved_Problem object (383)',3,'',20,1),(671,'2025-01-10 12:13:53.858624','382','Solved_Problem object (382)',3,'',20,1),(672,'2025-01-10 12:13:53.858624','381','Solved_Problem object (381)',3,'',20,1),(673,'2025-01-10 12:13:53.858624','380','Solved_Problem object (380)',3,'',20,1),(674,'2025-01-10 12:13:53.858624','379','Solved_Problem object (379)',3,'',20,1),(675,'2025-01-10 12:13:53.858624','378','Solved_Problem object (378)',3,'',20,1),(676,'2025-01-10 12:13:53.858624','377','Solved_Problem object (377)',3,'',20,1),(677,'2025-01-10 12:13:53.858624','376','Solved_Problem object (376)',3,'',20,1),(678,'2025-01-10 12:13:53.858624','375','Solved_Problem object (375)',3,'',20,1),(679,'2025-01-10 12:13:53.858624','374','Solved_Problem object (374)',3,'',20,1),(680,'2025-01-10 12:13:53.858624','373','Solved_Problem object (373)',3,'',20,1),(681,'2025-01-10 12:13:53.858624','372','Solved_Problem object (372)',3,'',20,1),(682,'2025-01-10 12:13:53.858624','371','Solved_Problem object (371)',3,'',20,1),(683,'2025-01-10 12:13:53.858624','370','Solved_Problem object (370)',3,'',20,1),(684,'2025-01-10 12:13:53.858624','369','Solved_Problem object (369)',3,'',20,1),(685,'2025-01-10 12:13:53.858624','368','Solved_Problem object (368)',3,'',20,1),(686,'2025-01-10 12:13:53.858624','367','Solved_Problem object (367)',3,'',20,1),(687,'2025-01-10 12:13:53.858624','366','Solved_Problem object (366)',3,'',20,1),(688,'2025-01-10 12:13:53.858624','365','Solved_Problem object (365)',3,'',20,1),(689,'2025-01-10 12:13:53.858624','364','Solved_Problem object (364)',3,'',20,1),(690,'2025-01-10 12:13:53.858624','363','Solved_Problem object (363)',3,'',20,1),(691,'2025-01-10 12:13:53.858624','362','Solved_Problem object (362)',3,'',20,1),(692,'2025-01-10 12:13:53.858624','361','Solved_Problem object (361)',3,'',20,1),(693,'2025-01-10 12:13:53.858624','360','Solved_Problem object (360)',3,'',20,1),(694,'2025-01-10 12:13:53.858624','359','Solved_Problem object (359)',3,'',20,1),(695,'2025-01-10 12:14:01.300625','358','Solved_Problem object (358)',3,'',20,1),(696,'2025-01-10 12:14:01.300625','357','Solved_Problem object (357)',3,'',20,1),(697,'2025-01-10 12:14:01.300625','356','Solved_Problem object (356)',3,'',20,1),(698,'2025-01-10 12:14:01.300625','355','Solved_Problem object (355)',3,'',20,1),(699,'2025-01-10 12:14:01.300625','354','Solved_Problem object (354)',3,'',20,1),(700,'2025-01-10 12:14:01.300625','353','Solved_Problem object (353)',3,'',20,1),(701,'2025-01-10 12:14:01.300625','352','Solved_Problem object (352)',3,'',20,1),(702,'2025-01-10 12:14:01.300625','351','Solved_Problem object (351)',3,'',20,1),(703,'2025-01-10 12:14:01.300625','350','Solved_Problem object (350)',3,'',20,1),(704,'2025-01-10 12:14:01.300625','349','Solved_Problem object (349)',3,'',20,1),(705,'2025-01-10 12:14:01.300625','348','Solved_Problem object (348)',3,'',20,1),(706,'2025-01-10 12:14:01.300625','347','Solved_Problem object (347)',3,'',20,1),(707,'2025-01-10 12:14:01.300625','346','Solved_Problem object (346)',3,'',20,1),(708,'2025-01-10 12:14:01.300625','345','Solved_Problem object (345)',3,'',20,1),(709,'2025-01-10 12:14:01.300625','344','Solved_Problem object (344)',3,'',20,1),(710,'2025-01-10 12:14:01.300625','343','Solved_Problem object (343)',3,'',20,1),(711,'2025-01-10 12:14:01.300625','342','Solved_Problem object (342)',3,'',20,1),(712,'2025-01-10 12:14:01.300625','341','Solved_Problem object (341)',3,'',20,1),(713,'2025-01-10 12:14:01.300625','340','Solved_Problem object (340)',3,'',20,1),(714,'2025-01-10 12:14:01.300625','339','Solved_Problem object (339)',3,'',20,1),(715,'2025-01-10 12:14:01.300625','338','Solved_Problem object (338)',3,'',20,1),(716,'2025-01-10 12:14:01.300625','337','Solved_Problem object (337)',3,'',20,1),(717,'2025-01-10 12:14:01.300625','336','Solved_Problem object (336)',3,'',20,1),(718,'2025-01-10 12:14:01.300625','335','Solved_Problem object (335)',3,'',20,1),(719,'2025-01-10 12:14:01.300625','334','Solved_Problem object (334)',3,'',20,1),(720,'2025-01-10 12:14:01.300625','333','Solved_Problem object (333)',3,'',20,1),(721,'2025-01-10 12:14:01.300625','332','Solved_Problem object (332)',3,'',20,1),(722,'2025-01-10 12:14:01.300625','331','Solved_Problem object (331)',3,'',20,1),(723,'2025-01-10 12:14:01.300625','330','Solved_Problem object (330)',3,'',20,1),(724,'2025-01-10 12:14:01.300625','329','Solved_Problem object (329)',3,'',20,1),(725,'2025-01-10 12:14:01.300625','328','Solved_Problem object (328)',3,'',20,1),(726,'2025-01-10 12:14:01.300625','327','Solved_Problem object (327)',3,'',20,1),(727,'2025-01-10 12:14:01.300625','326','Solved_Problem object (326)',3,'',20,1),(728,'2025-01-10 12:14:01.300625','325','Solved_Problem object (325)',3,'',20,1),(729,'2025-01-10 12:14:01.300625','324','Solved_Problem object (324)',3,'',20,1),(730,'2025-01-10 12:14:01.300625','323','Solved_Problem object (323)',3,'',20,1),(731,'2025-01-10 12:14:01.300625','322','Solved_Problem object (322)',3,'',20,1),(732,'2025-01-10 12:14:01.300625','321','Solved_Problem object (321)',3,'',20,1),(733,'2025-01-10 12:14:01.300625','320','Solved_Problem object (320)',3,'',20,1),(734,'2025-01-10 12:14:01.300625','319','Solved_Problem object (319)',3,'',20,1),(735,'2025-01-10 12:14:01.300625','318','Solved_Problem object (318)',3,'',20,1),(736,'2025-01-10 12:14:01.300625','317','Solved_Problem object (317)',3,'',20,1),(737,'2025-01-10 12:14:01.300625','316','Solved_Problem object (316)',3,'',20,1),(738,'2025-01-10 12:14:01.300625','315','Solved_Problem object (315)',3,'',20,1),(739,'2025-01-10 12:14:01.300625','314','Solved_Problem object (314)',3,'',20,1),(740,'2025-01-10 12:14:01.300625','313','Solved_Problem object (313)',3,'',20,1),(741,'2025-01-10 12:14:01.300625','312','Solved_Problem object (312)',3,'',20,1),(742,'2025-01-10 12:14:01.300625','311','Solved_Problem object (311)',3,'',20,1),(743,'2025-01-10 12:14:01.300625','310','Solved_Problem object (310)',3,'',20,1),(744,'2025-01-10 12:14:01.300625','309','Solved_Problem object (309)',3,'',20,1),(745,'2025-01-10 12:14:01.300625','308','Solved_Problem object (308)',3,'',20,1),(746,'2025-01-10 12:14:01.300625','307','Solved_Problem object (307)',3,'',20,1),(747,'2025-01-10 12:14:01.300625','306','Solved_Problem object (306)',3,'',20,1),(748,'2025-01-10 12:14:01.300625','305','Solved_Problem object (305)',3,'',20,1),(749,'2025-01-10 12:14:01.300625','304','Solved_Problem object (304)',3,'',20,1),(750,'2025-01-10 12:14:01.300625','303','Solved_Problem object (303)',3,'',20,1),(751,'2025-01-10 12:14:01.300625','302','Solved_Problem object (302)',3,'',20,1),(752,'2025-01-10 12:14:01.300625','301','Solved_Problem object (301)',3,'',20,1),(753,'2025-01-10 12:14:01.300625','300','Solved_Problem object (300)',3,'',20,1),(754,'2025-01-10 12:14:01.300625','299','Solved_Problem object (299)',3,'',20,1),(755,'2025-01-10 12:14:01.300625','298','Solved_Problem object (298)',3,'',20,1),(756,'2025-01-10 12:14:01.300625','297','Solved_Problem object (297)',3,'',20,1),(757,'2025-01-10 12:14:01.300625','296','Solved_Problem object (296)',3,'',20,1),(758,'2025-01-10 12:14:01.300625','295','Solved_Problem object (295)',3,'',20,1),(759,'2025-01-10 12:14:01.300625','294','Solved_Problem object (294)',3,'',20,1),(760,'2025-01-10 12:14:01.300625','293','Solved_Problem object (293)',3,'',20,1),(761,'2025-01-10 12:14:01.300625','292','Solved_Problem object (292)',3,'',20,1),(762,'2025-01-10 12:14:01.300625','291','Solved_Problem object (291)',3,'',20,1),(763,'2025-01-10 12:14:01.300625','290','Solved_Problem object (290)',3,'',20,1),(764,'2025-01-10 12:14:01.300625','289','Solved_Problem object (289)',3,'',20,1),(765,'2025-01-10 12:14:01.300625','288','Solved_Problem object (288)',3,'',20,1),(766,'2025-01-10 12:14:01.300625','287','Solved_Problem object (287)',3,'',20,1),(767,'2025-01-10 12:14:01.300625','286','Solved_Problem object (286)',3,'',20,1),(768,'2025-01-10 12:14:01.300625','285','Solved_Problem object (285)',3,'',20,1),(769,'2025-01-10 12:14:01.300625','284','Solved_Problem object (284)',3,'',20,1),(770,'2025-01-10 12:14:01.300625','283','Solved_Problem object (283)',3,'',20,1),(771,'2025-01-10 12:14:01.300625','282','Solved_Problem object (282)',3,'',20,1),(772,'2025-01-10 12:14:01.300625','281','Solved_Problem object (281)',3,'',20,1),(773,'2025-01-10 12:14:01.300625','280','Solved_Problem object (280)',3,'',20,1),(774,'2025-01-10 12:14:01.300625','279','Solved_Problem object (279)',3,'',20,1),(775,'2025-01-10 12:14:01.300625','278','Solved_Problem object (278)',3,'',20,1),(776,'2025-01-10 12:14:01.300625','277','Solved_Problem object (277)',3,'',20,1),(777,'2025-01-10 12:14:01.300625','276','Solved_Problem object (276)',3,'',20,1),(778,'2025-01-10 12:14:01.300625','275','Solved_Problem object (275)',3,'',20,1),(779,'2025-01-10 12:14:01.300625','274','Solved_Problem object (274)',3,'',20,1),(780,'2025-01-10 12:14:01.300625','273','Solved_Problem object (273)',3,'',20,1),(781,'2025-01-10 12:14:01.300625','272','Solved_Problem object (272)',3,'',20,1),(782,'2025-01-10 12:14:01.300625','271','Solved_Problem object (271)',3,'',20,1),(783,'2025-01-10 12:14:01.300625','270','Solved_Problem object (270)',3,'',20,1),(784,'2025-01-10 12:14:01.300625','269','Solved_Problem object (269)',3,'',20,1),(785,'2025-01-10 12:14:01.300625','268','Solved_Problem object (268)',3,'',20,1),(786,'2025-01-10 12:14:01.300625','267','Solved_Problem object (267)',3,'',20,1),(787,'2025-01-10 12:14:01.300625','266','Solved_Problem object (266)',3,'',20,1),(788,'2025-01-10 12:14:01.300625','265','Solved_Problem object (265)',3,'',20,1),(789,'2025-01-10 12:14:01.300625','264','Solved_Problem object (264)',3,'',20,1),(790,'2025-01-10 12:14:01.300625','263','Solved_Problem object (263)',3,'',20,1),(791,'2025-01-10 12:14:01.300625','262','Solved_Problem object (262)',3,'',20,1),(792,'2025-01-10 12:14:01.300625','261','Solved_Problem object (261)',3,'',20,1),(793,'2025-01-10 12:14:01.300625','260','Solved_Problem object (260)',3,'',20,1),(794,'2025-01-10 12:14:01.300625','259','Solved_Problem object (259)',3,'',20,1),(795,'2025-01-10 12:14:07.848620','258','Solved_Problem object (258)',3,'',20,1),(796,'2025-01-10 12:14:07.848620','257','Solved_Problem object (257)',3,'',20,1),(797,'2025-01-10 12:14:07.848620','256','Solved_Problem object (256)',3,'',20,1),(798,'2025-01-10 12:14:07.848620','255','Solved_Problem object (255)',3,'',20,1),(799,'2025-01-10 12:14:07.848620','254','Solved_Problem object (254)',3,'',20,1),(800,'2025-01-10 12:14:07.848620','253','Solved_Problem object (253)',3,'',20,1),(801,'2025-01-10 12:14:07.848620','252','Solved_Problem object (252)',3,'',20,1),(802,'2025-01-10 12:14:07.848620','251','Solved_Problem object (251)',3,'',20,1),(803,'2025-01-10 12:14:07.848620','250','Solved_Problem object (250)',3,'',20,1),(804,'2025-01-10 12:14:07.848620','249','Solved_Problem object (249)',3,'',20,1),(805,'2025-01-10 12:14:07.848620','248','Solved_Problem object (248)',3,'',20,1),(806,'2025-01-10 12:14:07.848620','247','Solved_Problem object (247)',3,'',20,1),(807,'2025-01-10 12:14:07.848620','246','Solved_Problem object (246)',3,'',20,1),(808,'2025-01-10 12:14:07.848620','245','Solved_Problem object (245)',3,'',20,1),(809,'2025-01-10 12:14:07.848620','244','Solved_Problem object (244)',3,'',20,1),(810,'2025-01-10 12:14:07.848620','243','Solved_Problem object (243)',3,'',20,1),(811,'2025-01-10 12:14:07.848620','242','Solved_Problem object (242)',3,'',20,1),(812,'2025-01-10 12:14:07.848620','241','Solved_Problem object (241)',3,'',20,1),(813,'2025-01-10 12:14:07.848620','240','Solved_Problem object (240)',3,'',20,1),(814,'2025-01-10 12:14:07.848620','239','Solved_Problem object (239)',3,'',20,1),(815,'2025-01-10 12:14:07.848620','238','Solved_Problem object (238)',3,'',20,1),(816,'2025-01-10 12:14:07.848620','237','Solved_Problem object (237)',3,'',20,1),(817,'2025-01-10 12:14:07.848620','236','Solved_Problem object (236)',3,'',20,1),(818,'2025-01-10 12:14:07.848620','235','Solved_Problem object (235)',3,'',20,1),(819,'2025-01-10 12:14:07.848620','234','Solved_Problem object (234)',3,'',20,1),(820,'2025-01-10 12:14:07.848620','233','Solved_Problem object (233)',3,'',20,1),(821,'2025-01-10 12:14:07.848620','232','Solved_Problem object (232)',3,'',20,1),(822,'2025-01-10 12:14:07.848620','231','Solved_Problem object (231)',3,'',20,1),(823,'2025-01-10 12:14:07.848620','230','Solved_Problem object (230)',3,'',20,1),(824,'2025-01-10 12:14:07.848620','229','Solved_Problem object (229)',3,'',20,1),(825,'2025-01-10 12:14:07.848620','228','Solved_Problem object (228)',3,'',20,1),(826,'2025-01-10 12:14:07.848620','227','Solved_Problem object (227)',3,'',20,1),(827,'2025-01-10 12:14:07.848620','226','Solved_Problem object (226)',3,'',20,1),(828,'2025-01-10 12:14:07.848620','225','Solved_Problem object (225)',3,'',20,1),(829,'2025-01-10 12:14:07.848620','224','Solved_Problem object (224)',3,'',20,1),(830,'2025-01-10 12:14:07.848620','223','Solved_Problem object (223)',3,'',20,1),(831,'2025-01-10 12:14:07.848620','222','Solved_Problem object (222)',3,'',20,1),(832,'2025-01-10 12:14:07.848620','221','Solved_Problem object (221)',3,'',20,1),(833,'2025-01-10 12:14:07.848620','220','Solved_Problem object (220)',3,'',20,1),(834,'2025-01-10 12:14:07.848620','219','Solved_Problem object (219)',3,'',20,1),(835,'2025-01-10 12:14:07.848620','218','Solved_Problem object (218)',3,'',20,1),(836,'2025-01-10 12:14:07.848620','217','Solved_Problem object (217)',3,'',20,1),(837,'2025-01-10 12:14:07.848620','216','Solved_Problem object (216)',3,'',20,1),(838,'2025-01-10 12:14:07.848620','215','Solved_Problem object (215)',3,'',20,1),(839,'2025-01-10 12:14:07.848620','214','Solved_Problem object (214)',3,'',20,1),(840,'2025-01-10 12:14:07.848620','213','Solved_Problem object (213)',3,'',20,1),(841,'2025-01-10 12:14:07.848620','212','Solved_Problem object (212)',3,'',20,1),(842,'2025-01-10 12:14:07.848620','211','Solved_Problem object (211)',3,'',20,1),(843,'2025-01-10 12:14:07.848620','210','Solved_Problem object (210)',3,'',20,1),(844,'2025-01-10 12:14:07.848620','209','Solved_Problem object (209)',3,'',20,1),(845,'2025-01-10 12:14:07.848620','208','Solved_Problem object (208)',3,'',20,1),(846,'2025-01-10 12:14:07.848620','207','Solved_Problem object (207)',3,'',20,1),(847,'2025-01-10 12:14:07.848620','206','Solved_Problem object (206)',3,'',20,1),(848,'2025-01-10 12:14:07.848620','205','Solved_Problem object (205)',3,'',20,1),(849,'2025-01-10 12:14:07.848620','204','Solved_Problem object (204)',3,'',20,1),(850,'2025-01-10 12:14:07.848620','203','Solved_Problem object (203)',3,'',20,1),(851,'2025-01-10 12:14:07.848620','202','Solved_Problem object (202)',3,'',20,1),(852,'2025-01-10 12:14:07.848620','201','Solved_Problem object (201)',3,'',20,1),(853,'2025-01-10 12:14:07.848620','200','Solved_Problem object (200)',3,'',20,1),(854,'2025-01-10 12:14:07.848620','199','Solved_Problem object (199)',3,'',20,1),(855,'2025-01-10 12:14:07.848620','198','Solved_Problem object (198)',3,'',20,1),(856,'2025-01-10 12:14:07.848620','197','Solved_Problem object (197)',3,'',20,1),(857,'2025-01-10 12:14:07.848620','196','Solved_Problem object (196)',3,'',20,1),(858,'2025-01-10 12:14:07.848620','195','Solved_Problem object (195)',3,'',20,1),(859,'2025-01-10 12:14:07.848620','194','Solved_Problem object (194)',3,'',20,1),(860,'2025-01-10 12:14:07.848620','193','Solved_Problem object (193)',3,'',20,1),(861,'2025-01-10 12:14:07.848620','192','Solved_Problem object (192)',3,'',20,1),(862,'2025-01-10 12:14:07.848620','191','Solved_Problem object (191)',3,'',20,1),(863,'2025-01-10 12:14:07.848620','190','Solved_Problem object (190)',3,'',20,1),(864,'2025-01-10 12:14:07.848620','189','Solved_Problem object (189)',3,'',20,1),(865,'2025-01-10 12:14:07.848620','188','Solved_Problem object (188)',3,'',20,1),(866,'2025-01-10 12:14:07.848620','187','Solved_Problem object (187)',3,'',20,1),(867,'2025-01-10 12:14:07.848620','186','Solved_Problem object (186)',3,'',20,1),(868,'2025-01-10 12:14:07.848620','185','Solved_Problem object (185)',3,'',20,1),(869,'2025-01-10 12:14:07.848620','184','Solved_Problem object (184)',3,'',20,1),(870,'2025-01-10 12:14:07.848620','183','Solved_Problem object (183)',3,'',20,1),(871,'2025-01-10 12:14:07.848620','182','Solved_Problem object (182)',3,'',20,1),(872,'2025-01-10 12:14:07.848620','181','Solved_Problem object (181)',3,'',20,1),(873,'2025-01-10 12:14:07.848620','180','Solved_Problem object (180)',3,'',20,1),(874,'2025-01-10 12:14:07.848620','179','Solved_Problem object (179)',3,'',20,1),(875,'2025-01-10 12:14:07.848620','178','Solved_Problem object (178)',3,'',20,1),(876,'2025-01-10 12:14:07.848620','177','Solved_Problem object (177)',3,'',20,1),(877,'2025-01-10 12:14:07.848620','176','Solved_Problem object (176)',3,'',20,1),(878,'2025-01-10 12:14:07.848620','175','Solved_Problem object (175)',3,'',20,1),(879,'2025-01-10 12:14:07.848620','174','Solved_Problem object (174)',3,'',20,1),(880,'2025-01-10 12:14:07.848620','173','Solved_Problem object (173)',3,'',20,1),(881,'2025-01-10 12:14:07.848620','172','Solved_Problem object (172)',3,'',20,1),(882,'2025-01-10 12:14:07.848620','171','Solved_Problem object (171)',3,'',20,1),(883,'2025-01-10 12:14:07.848620','170','Solved_Problem object (170)',3,'',20,1),(884,'2025-01-10 12:14:07.848620','169','Solved_Problem object (169)',3,'',20,1),(885,'2025-01-10 12:14:07.848620','168','Solved_Problem object (168)',3,'',20,1),(886,'2025-01-10 12:14:07.848620','167','Solved_Problem object (167)',3,'',20,1),(887,'2025-01-10 12:14:07.848620','166','Solved_Problem object (166)',3,'',20,1),(888,'2025-01-10 12:14:07.848620','165','Solved_Problem object (165)',3,'',20,1),(889,'2025-01-10 12:14:07.848620','164','Solved_Problem object (164)',3,'',20,1),(890,'2025-01-10 12:14:07.848620','163','Solved_Problem object (163)',3,'',20,1),(891,'2025-01-10 12:14:07.848620','162','Solved_Problem object (162)',3,'',20,1),(892,'2025-01-10 12:14:07.848620','161','Solved_Problem object (161)',3,'',20,1),(893,'2025-01-10 12:14:07.848620','160','Solved_Problem object (160)',3,'',20,1),(894,'2025-01-10 12:14:07.848620','159','Solved_Problem object (159)',3,'',20,1),(895,'2025-01-10 12:14:14.527537','158','Solved_Problem object (158)',3,'',20,1),(896,'2025-01-10 12:14:14.528539','157','Solved_Problem object (157)',3,'',20,1),(897,'2025-01-10 12:14:14.528539','156','Solved_Problem object (156)',3,'',20,1),(898,'2025-01-10 12:14:14.528539','155','Solved_Problem object (155)',3,'',20,1),(899,'2025-01-10 12:14:14.528539','154','Solved_Problem object (154)',3,'',20,1),(900,'2025-01-10 12:14:14.528539','153','Solved_Problem object (153)',3,'',20,1),(901,'2025-01-10 12:14:14.528539','152','Solved_Problem object (152)',3,'',20,1),(902,'2025-01-10 12:14:14.528539','151','Solved_Problem object (151)',3,'',20,1),(903,'2025-01-10 12:14:14.528539','150','Solved_Problem object (150)',3,'',20,1),(904,'2025-01-10 12:14:14.528539','149','Solved_Problem object (149)',3,'',20,1),(905,'2025-01-10 12:14:14.528539','148','Solved_Problem object (148)',3,'',20,1),(906,'2025-01-10 12:14:14.528539','147','Solved_Problem object (147)',3,'',20,1),(907,'2025-01-10 12:14:14.528539','146','Solved_Problem object (146)',3,'',20,1),(908,'2025-01-10 12:14:14.528539','145','Solved_Problem object (145)',3,'',20,1),(909,'2025-01-10 12:14:14.528539','144','Solved_Problem object (144)',3,'',20,1),(910,'2025-01-10 12:14:14.528539','143','Solved_Problem object (143)',3,'',20,1),(911,'2025-01-10 12:14:14.528539','142','Solved_Problem object (142)',3,'',20,1),(912,'2025-01-10 12:14:14.528539','141','Solved_Problem object (141)',3,'',20,1),(913,'2025-01-10 12:14:14.528539','140','Solved_Problem object (140)',3,'',20,1),(914,'2025-01-10 12:14:14.528539','139','Solved_Problem object (139)',3,'',20,1),(915,'2025-01-10 12:14:14.529540','138','Solved_Problem object (138)',3,'',20,1),(916,'2025-01-10 12:14:14.529540','137','Solved_Problem object (137)',3,'',20,1),(917,'2025-01-10 12:14:14.529540','136','Solved_Problem object (136)',3,'',20,1),(918,'2025-01-10 12:14:14.529540','135','Solved_Problem object (135)',3,'',20,1),(919,'2025-01-10 12:14:14.529540','134','Solved_Problem object (134)',3,'',20,1),(920,'2025-01-10 12:14:14.529540','133','Solved_Problem object (133)',3,'',20,1),(921,'2025-01-10 12:14:14.529540','132','Solved_Problem object (132)',3,'',20,1),(922,'2025-01-10 12:14:14.529540','131','Solved_Problem object (131)',3,'',20,1),(923,'2025-01-10 12:14:14.529540','130','Solved_Problem object (130)',3,'',20,1),(924,'2025-01-10 12:14:14.529540','129','Solved_Problem object (129)',3,'',20,1),(925,'2025-01-10 12:14:14.529540','128','Solved_Problem object (128)',3,'',20,1),(926,'2025-01-10 12:14:14.529540','127','Solved_Problem object (127)',3,'',20,1),(927,'2025-01-10 12:14:14.529540','126','Solved_Problem object (126)',3,'',20,1),(928,'2025-01-10 12:14:14.529540','125','Solved_Problem object (125)',3,'',20,1),(929,'2025-01-10 12:14:14.529540','124','Solved_Problem object (124)',3,'',20,1),(930,'2025-01-10 12:14:14.529540','123','Solved_Problem object (123)',3,'',20,1),(931,'2025-01-10 12:14:14.529540','122','Solved_Problem object (122)',3,'',20,1),(932,'2025-01-10 12:14:14.529540','121','Solved_Problem object (121)',3,'',20,1),(933,'2025-01-10 12:14:14.529540','120','Solved_Problem object (120)',3,'',20,1),(934,'2025-01-10 12:14:14.529540','119','Solved_Problem object (119)',3,'',20,1),(935,'2025-01-10 12:14:14.530538','118','Solved_Problem object (118)',3,'',20,1),(936,'2025-01-10 12:14:14.530538','117','Solved_Problem object (117)',3,'',20,1),(937,'2025-01-10 12:14:14.530538','116','Solved_Problem object (116)',3,'',20,1),(938,'2025-01-10 12:14:14.530538','115','Solved_Problem object (115)',3,'',20,1),(939,'2025-01-10 12:14:14.530538','114','Solved_Problem object (114)',3,'',20,1),(940,'2025-01-10 12:14:14.530538','113','Solved_Problem object (113)',3,'',20,1),(941,'2025-01-10 12:14:14.530538','112','Solved_Problem object (112)',3,'',20,1),(942,'2025-01-10 12:14:14.530538','111','Solved_Problem object (111)',3,'',20,1),(943,'2025-01-10 12:14:14.530538','110','Solved_Problem object (110)',3,'',20,1),(944,'2025-01-10 12:14:14.530538','109','Solved_Problem object (109)',3,'',20,1),(945,'2025-01-10 12:14:14.530538','108','Solved_Problem object (108)',3,'',20,1),(946,'2025-01-10 12:14:14.530538','107','Solved_Problem object (107)',3,'',20,1),(947,'2025-01-10 12:14:14.530538','106','Solved_Problem object (106)',3,'',20,1),(948,'2025-01-10 12:14:14.530538','105','Solved_Problem object (105)',3,'',20,1),(949,'2025-01-10 12:14:14.530538','104','Solved_Problem object (104)',3,'',20,1),(950,'2025-01-10 12:14:14.530538','103','Solved_Problem object (103)',3,'',20,1),(951,'2025-01-10 12:14:14.530538','102','Solved_Problem object (102)',3,'',20,1),(952,'2025-01-10 12:14:14.530538','101','Solved_Problem object (101)',3,'',20,1),(953,'2025-01-10 12:14:14.530538','100','Solved_Problem object (100)',3,'',20,1),(954,'2025-01-10 12:14:14.530538','99','Solved_Problem object (99)',3,'',20,1),(955,'2025-01-10 12:14:14.530538','98','Solved_Problem object (98)',3,'',20,1),(956,'2025-01-10 12:14:14.531537','97','Solved_Problem object (97)',3,'',20,1),(957,'2025-01-10 12:14:14.531537','96','Solved_Problem object (96)',3,'',20,1),(958,'2025-01-10 12:14:14.531537','95','Solved_Problem object (95)',3,'',20,1),(959,'2025-01-10 12:14:14.531537','94','Solved_Problem object (94)',3,'',20,1),(960,'2025-01-10 12:14:14.531537','93','Solved_Problem object (93)',3,'',20,1),(961,'2025-01-10 12:14:14.531537','92','Solved_Problem object (92)',3,'',20,1),(962,'2025-01-10 12:14:14.531537','91','Solved_Problem object (91)',3,'',20,1),(963,'2025-01-10 12:14:14.531537','90','Solved_Problem object (90)',3,'',20,1),(964,'2025-01-10 12:14:14.531537','89','Solved_Problem object (89)',3,'',20,1),(965,'2025-01-10 12:14:14.531537','88','Solved_Problem object (88)',3,'',20,1),(966,'2025-01-10 12:14:14.531537','87','Solved_Problem object (87)',3,'',20,1),(967,'2025-01-10 12:14:14.531537','86','Solved_Problem object (86)',3,'',20,1),(968,'2025-01-10 12:14:14.531537','85','Solved_Problem object (85)',3,'',20,1),(969,'2025-01-10 12:14:14.531537','84','Solved_Problem object (84)',3,'',20,1),(970,'2025-01-10 12:14:14.531537','83','Solved_Problem object (83)',3,'',20,1),(971,'2025-01-10 12:14:14.531537','82','Solved_Problem object (82)',3,'',20,1),(972,'2025-01-10 12:14:14.531537','81','Solved_Problem object (81)',3,'',20,1),(973,'2025-01-10 12:14:14.531537','80','Solved_Problem object (80)',3,'',20,1),(974,'2025-01-10 12:14:14.531537','79','Solved_Problem object (79)',3,'',20,1),(975,'2025-01-10 12:14:14.531537','78','Solved_Problem object (78)',3,'',20,1),(976,'2025-01-10 12:14:14.531537','77','Solved_Problem object (77)',3,'',20,1),(977,'2025-01-10 12:14:14.531537','76','Solved_Problem object (76)',3,'',20,1),(978,'2025-01-10 12:14:14.531537','75','Solved_Problem object (75)',3,'',20,1),(979,'2025-01-10 12:14:14.531537','74','Solved_Problem object (74)',3,'',20,1),(980,'2025-01-10 12:14:14.531537','73','Solved_Problem object (73)',3,'',20,1),(981,'2025-01-10 12:14:14.531537','72','Solved_Problem object (72)',3,'',20,1),(982,'2025-01-10 12:14:14.532536','71','Solved_Problem object (71)',3,'',20,1),(983,'2025-01-10 12:14:14.532536','70','Solved_Problem object (70)',3,'',20,1),(984,'2025-01-10 12:14:14.532536','69','Solved_Problem object (69)',3,'',20,1),(985,'2025-01-10 12:14:14.532536','68','Solved_Problem object (68)',3,'',20,1),(986,'2025-01-10 12:14:14.532536','67','Solved_Problem object (67)',3,'',20,1),(987,'2025-01-10 12:14:14.532536','66','Solved_Problem object (66)',3,'',20,1),(988,'2025-01-10 12:14:14.532536','65','Solved_Problem object (65)',3,'',20,1),(989,'2025-01-10 12:14:14.532536','64','Solved_Problem object (64)',3,'',20,1),(990,'2025-01-10 12:14:14.532536','63','Solved_Problem object (63)',3,'',20,1),(991,'2025-01-10 12:14:14.532536','62','Solved_Problem object (62)',3,'',20,1),(992,'2025-01-10 12:14:14.532536','61','Solved_Problem object (61)',3,'',20,1),(993,'2025-01-10 12:14:14.532536','60','Solved_Problem object (60)',3,'',20,1),(994,'2025-01-10 12:14:14.532536','59','Solved_Problem object (59)',3,'',20,1),(995,'2025-01-10 12:14:29.662276','58','Solved_Problem object (58)',3,'',20,1),(996,'2025-01-10 12:14:29.662276','57','Solved_Problem object (57)',3,'',20,1),(997,'2025-01-10 12:14:29.662276','56','Solved_Problem object (56)',3,'',20,1),(998,'2025-01-10 12:14:29.662276','55','Solved_Problem object (55)',3,'',20,1),(999,'2025-01-10 12:14:29.662276','54','Solved_Problem object (54)',3,'',20,1),(1000,'2025-01-10 12:14:29.662276','53','Solved_Problem object (53)',3,'',20,1),(1001,'2025-01-10 12:14:29.662276','52','Solved_Problem object (52)',3,'',20,1),(1002,'2025-01-10 12:14:29.662276','51','Solved_Problem object (51)',3,'',20,1),(1003,'2025-01-10 12:14:29.662276','50','Solved_Problem object (50)',3,'',20,1),(1004,'2025-01-10 12:14:29.662276','49','Solved_Problem object (49)',3,'',20,1),(1005,'2025-01-10 12:14:29.662276','48','Solved_Problem object (48)',3,'',20,1),(1006,'2025-01-10 12:14:29.663275','47','Solved_Problem object (47)',3,'',20,1),(1007,'2025-01-10 12:14:29.663275','46','Solved_Problem object (46)',3,'',20,1),(1008,'2025-01-10 12:14:29.663275','45','Solved_Problem object (45)',3,'',20,1),(1009,'2025-01-10 12:14:29.663275','44','Solved_Problem object (44)',3,'',20,1),(1010,'2025-01-10 12:14:29.663275','43','Solved_Problem object (43)',3,'',20,1),(1011,'2025-01-10 12:14:29.663275','42','Solved_Problem object (42)',3,'',20,1),(1012,'2025-01-10 12:14:29.663275','41','Solved_Problem object (41)',3,'',20,1),(1013,'2025-01-10 12:14:29.663275','40','Solved_Problem object (40)',3,'',20,1),(1014,'2025-01-10 12:14:29.663275','39','Solved_Problem object (39)',3,'',20,1),(1015,'2025-01-10 12:14:29.663275','38','Solved_Problem object (38)',3,'',20,1),(1016,'2025-01-10 12:14:29.663275','37','Solved_Problem object (37)',3,'',20,1),(1017,'2025-01-10 12:14:29.663275','36','Solved_Problem object (36)',3,'',20,1),(1018,'2025-01-10 12:14:29.663275','35','Solved_Problem object (35)',3,'',20,1),(1019,'2025-01-10 12:14:29.663275','34','Solved_Problem object (34)',3,'',20,1),(1020,'2025-01-10 12:14:29.663275','33','Solved_Problem object (33)',3,'',20,1),(1021,'2025-01-10 12:14:29.663275','32','Solved_Problem object (32)',3,'',20,1),(1022,'2025-01-10 12:14:29.663275','31','Solved_Problem object (31)',3,'',20,1),(1023,'2025-01-10 12:14:29.663275','30','Solved_Problem object (30)',3,'',20,1),(1024,'2025-01-10 12:14:29.663275','29','Solved_Problem object (29)',3,'',20,1),(1025,'2025-01-10 12:14:29.663275','28','Solved_Problem object (28)',3,'',20,1),(1026,'2025-01-10 12:14:29.663275','27','Solved_Problem object (27)',3,'',20,1),(1027,'2025-01-10 12:14:29.664275','26','Solved_Problem object (26)',3,'',20,1),(1028,'2025-01-10 12:14:29.664275','25','Solved_Problem object (25)',3,'',20,1),(1029,'2025-01-10 12:14:29.664275','24','Solved_Problem object (24)',3,'',20,1),(1030,'2025-01-10 12:14:29.664275','23','Solved_Problem object (23)',3,'',20,1),(1031,'2025-01-10 12:14:29.664275','22','Solved_Problem object (22)',3,'',20,1),(1032,'2025-01-10 12:14:29.664275','21','Solved_Problem object (21)',3,'',20,1),(1033,'2025-01-10 12:14:29.664275','20','Solved_Problem object (20)',3,'',20,1),(1034,'2025-01-10 12:14:29.664275','19','Solved_Problem object (19)',3,'',20,1),(1035,'2025-01-10 12:14:29.664275','18','Solved_Problem object (18)',3,'',20,1),(1036,'2025-01-10 12:14:29.664275','17','Solved_Problem object (17)',3,'',20,1),(1037,'2025-01-10 12:14:29.664275','16','Solved_Problem object (16)',3,'',20,1),(1038,'2025-01-10 12:14:29.664275','15','Solved_Problem object (15)',3,'',20,1),(1039,'2025-01-10 12:14:29.664275','14','Solved_Problem object (14)',3,'',20,1),(1040,'2025-01-10 12:14:29.664275','13','Solved_Problem object (13)',3,'',20,1),(1041,'2025-01-10 12:14:29.664275','12','Solved_Problem object (12)',3,'',20,1),(1042,'2025-01-10 12:14:29.664275','11','Solved_Problem object (11)',3,'',20,1),(1043,'2025-01-10 12:14:29.664275','10','Solved_Problem object (10)',3,'',20,1),(1044,'2025-01-10 12:14:29.664275','9','Solved_Problem object (9)',3,'',20,1),(1045,'2025-01-10 12:14:29.664275','8','Solved_Problem object (8)',3,'',20,1),(1046,'2025-01-10 12:14:29.664275','7','Solved_Problem object (7)',3,'',20,1),(1047,'2025-01-10 12:14:29.664275','6','Solved_Problem object (6)',3,'',20,1),(1048,'2025-01-10 12:14:29.665274','5','Solved_Problem object (5)',3,'',20,1),(1049,'2025-01-10 12:14:29.665274','4','Solved_Problem object (4)',3,'',20,1),(1050,'2025-01-10 12:14:29.665274','3','Solved_Problem object (3)',3,'',20,1),(1051,'2025-01-10 12:14:29.665274','2','Solved_Problem object (2)',3,'',20,1),(1052,'2025-01-10 12:14:29.665274','1','Solved_Problem object (1)',3,'',20,1),(1053,'2025-01-10 12:17:11.696869','3','sashanth',2,'[{\"changed\": {\"fields\": [\"User handle\"]}}]',22,1),(1054,'2025-01-10 15:58:38.848383','4','21ecb28',3,'',4,1),(1055,'2025-01-10 15:58:38.848383','3','23ada05',3,'',4,1),(1056,'2025-01-10 18:05:38.212775','4','sanjesh',1,'[{\"added\": {}}]',22,1),(1057,'2025-03-24 11:39:07.684402','7','sumith',3,'',4,6),(1058,'2025-03-28 12:26:11.168803','5','21ecb28',2,'[{\"changed\": {\"fields\": [\"password\"]}}]',4,6),(1059,'2025-04-01 05:54:10.768188','7','sumith | Array: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1060,'2025-04-01 06:27:03.565152','2','21ecb44 | Array: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',2,'[]',24,6),(1061,'2025-04-01 06:28:41.987305','8','23ada44 | Array: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1062,'2025-04-01 06:57:53.682651','9','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1063,'2025-04-01 07:23:52.078014','9','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',3,'',24,6),(1064,'2025-04-01 07:35:34.829161','10','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1065,'2025-04-01 07:35:49.579416','7','sumith | Array: Solved 1, Attempted 0, Integrity Index: 0.0 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Attempted\"]}}]',24,6),(1066,'2025-04-01 07:36:06.182881','7','sumith | Array: Solved 1, Attempted 2, Integrity Index: 0.5 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Attempted\"]}}]',24,6),(1067,'2025-04-01 07:36:51.070302','7','sumith | Array: Solved 2, Attempted 3, Integrity Index: 0.67 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1068,'2025-04-01 07:37:11.678767','7','sumith | Array: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1069,'2025-04-01 10:39:50.317025','10','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',3,'',24,6),(1070,'2025-04-01 10:40:36.920559','11','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1071,'2025-04-01 11:20:36.220650','11','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',3,'',24,6),(1072,'2025-04-01 11:21:02.237660','12','23ada44 | Fibonacci: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1073,'2025-04-01 11:52:39.301273','7','sumith | Array: Solved 2, Attempted 3, Integrity Index: 0.67 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1074,'2025-04-01 11:54:48.347787','7','sumith | Array: Solved 1, Attempted 2, Integrity Index: 0.5 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1075,'2025-04-01 11:55:39.993537','7','sumith | Array: Solved 0, Attempted 2, Integrity Index: 0.0 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\"]}}]',24,6),(1076,'2025-04-01 11:57:12.428577','7','sumith | Array: Solved 1, Attempted 2, Integrity Index: 0.5 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\"]}}]',24,6),(1077,'2025-04-01 11:57:36.412832','7','sumith | Array: Solved 2, Attempted 3, Integrity Index: 0.67 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1078,'2025-04-01 11:58:37.481250','7','sumith | Array: Solved 1, Attempted 2, Integrity Index: 0.5 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1079,'2025-04-01 12:02:41.368372','8','23ada44 | Array: Solved 2, Attempted 3, Integrity Index: 0.67 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1080,'2025-04-01 12:03:34.185857','8','23ada44 | Array: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',2,'[{\"changed\": {\"fields\": [\"Problems Solved\", \"Problems Attempted\"]}}]',24,6),(1081,'2025-04-02 04:07:44.420960','13','sumith | Simple Math: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',1,'[{\"added\": {}}]',24,6),(1082,'2025-04-02 04:08:13.903384','13','sumith | Simple Math: Solved 1, Attempted 1, Integrity Index: 1.0 | Contest: Code War',3,'',24,6),(1083,'2025-05-03 04:27:06.050435','1','xvvzv - xvvx',3,'',46,6),(1084,'2025-05-05 06:36:13.499780','2','2026_SDE_SC',3,'',9,6),(1085,'2025-05-05 06:36:13.499863','1','2026_SDE_0',3,'',9,6),(1086,'2025-05-05 09:31:48.259171','6','MECH',1,'[{\"added\": {}}]',10,6),(1087,'2025-05-05 09:33:35.646052','39','22csa34',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1088,'2025-05-05 09:35:24.925262','38','22csa51',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1089,'2025-05-05 09:37:29.627832','45','22csa27',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1090,'2025-05-05 09:40:32.626408','41','22ita56',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1091,'2025-05-05 09:42:04.043004','50','22csa60',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1092,'2025-05-05 09:44:44.669864','48','22csa35',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1093,'2025-05-05 09:45:48.309000','44','22csa14',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1094,'2025-05-05 09:47:42.856987','28','22ecb10',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1095,'2025-05-05 09:49:01.801428','16','22ada34',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1096,'2025-05-05 09:49:30.852336','46','22ada27',2,'[{\"changed\": {\"fields\": [\"Username\", \"Last login\"]}}]',4,6),(1097,'2025-05-05 09:49:48.215477','21','22ada32',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1098,'2025-05-05 09:50:02.170419','40','22ada35',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1099,'2025-05-05 09:50:29.881338','23','22ada36',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1100,'2025-05-05 09:50:54.229447','20','22ada42',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1101,'2025-05-05 09:51:30.016662','22','22ada43',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1102,'2025-05-05 09:51:44.415699','37','22ada56',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1103,'2025-05-05 09:53:00.927442','43','22ita29',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1104,'2025-05-05 09:53:20.550067','24','22eca43',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1105,'2025-05-05 09:53:37.686847','12','22eca41',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1106,'2025-05-05 09:54:04.215192','19','22eca53',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1107,'2025-05-05 09:54:29.149317','25','22eca56',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1108,'2025-05-05 09:54:49.774811','13','22ada57',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1109,'2025-05-05 09:55:25.560194','49','22eca06',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1110,'2025-05-05 09:55:51.390371','14','22ita40',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1111,'2025-05-05 09:56:02.006541','15','22ita42',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1112,'2025-05-05 09:56:11.310602','18','22ita60',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1113,'2025-05-05 09:56:47.268184','33','22ita46',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1114,'2025-05-05 09:57:10.013023','29','22ita48',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1115,'2025-05-05 10:10:58.080582','37','22ada54',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1116,'2025-05-05 10:12:20.552896','27','22ecb08',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1117,'2025-05-05 13:04:16.122391','1','22ada34 2026_SDE_1',3,'',16,6),(1118,'2025-05-05 13:04:58.176566','2','22ada34 2026_SDE_1',3,'',16,6),(1119,'2025-05-05 13:09:37.103246','3','22ada34 2026_SDE_1',3,'',16,6),(1120,'2025-05-05 13:11:21.943667','4','22ada34 2026_SDE_1',3,'',16,6),(1121,'2025-05-06 03:52:27.974866','152','23ita26',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1122,'2025-05-06 03:52:44.846050','140','23eca31',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1123,'2025-05-06 04:19:59.652797','137','23csb36',2,'[{\"changed\": {\"fields\": [\"Username\", \"Email address\"]}}]',4,6),(1124,'2025-05-06 04:41:17.453886','150','23ada63',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1125,'2025-05-06 04:41:38.657167','134','23ada02',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1126,'2025-05-06 04:41:53.348648','34','23eca39',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1127,'2025-05-06 04:42:03.063585','35','23eca48',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1128,'2025-05-06 04:45:32.401557','47','23csa30',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1129,'2025-05-06 05:14:15.768728','99','23csa08',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1130,'2025-05-06 05:14:42.331923','124','23ada20',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1131,'2025-05-06 05:20:20.068342','36','23ita24',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1132,'2025-05-06 05:37:03.403750','4','Discussion 1 22ada34',3,'',27,6),(1133,'2025-05-06 05:38:12.092918','14','22ada34',2,'[{\"changed\": {\"fields\": [\"Integrity index\"]}}]',19,6),(1134,'2025-05-06 06:40:28.657706','4','EEE',2,'[{\"changed\": {\"fields\": [\"Name\"]}}]',10,6),(1135,'2025-05-06 06:45:10.274562','2','23ada44',3,'',4,6),(1136,'2025-05-06 09:39:32.459930','5','Test',3,'',9,6),(1137,'2025-05-06 10:04:33.245981','95','23csa01',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1138,'2025-05-06 10:04:57.254603','96','23csa45',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1139,'2025-05-06 10:05:25.663127','108','23csb05',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1140,'2025-05-06 10:05:53.208013','98','24lcsa02',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1141,'2025-05-06 10:06:18.096803','151','23csa63',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1142,'2025-05-06 10:06:39.574914','104','23csa58',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1143,'2025-05-06 10:06:59.622690','168','23csa39',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1144,'2025-05-06 10:07:22.327548','190','23csb57',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1145,'2025-05-06 10:07:42.287907','122','23csb53',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1146,'2025-05-06 10:08:11.101191','220','23csa32',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1147,'2025-05-06 10:08:32.190045','196','23csb30',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1148,'2025-05-06 10:08:53.080098','280','23csb48',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1149,'2025-05-06 10:09:15.325314','143','22csa33',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1150,'2025-05-06 10:09:37.448334','125','23ada49',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1151,'2025-05-06 10:09:55.125935','126','23ada38',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1152,'2025-05-06 10:10:08.894383','82','23ada05',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1153,'2025-05-06 10:31:59.037602','5','22ada34 2026_SDE_1',3,'',16,6),(1154,'2025-05-06 10:32:21.073226','1','Assignment_0',3,'',14,6),(1155,'2025-05-06 10:40:42.458902','6','compass',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\", \"Email address\"]}}]',4,6),(1156,'2025-05-06 10:40:52.930084','1','admin',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\"]}}]',4,6),(1157,'2025-05-06 11:08:02.773112','6','22ada34 2026_SDE_1',1,'[{\"added\": {}}]',16,6),(1158,'2025-05-06 11:11:55.114188','14','22ada34',2,'[{\"changed\": {\"fields\": [\"Discussion score\", \"No of discussion\", \"Discussion index\", \"Integrity index\"]}}]',19,6),(1159,'2025-05-06 11:12:06.820243','5','Discussion 1 22ada34',3,'',27,6),(1160,'2025-05-06 11:39:42.588341','16','22ada34',2,'[{\"changed\": {\"fields\": [\"First name\", \"Last name\"]}}]',4,6),(1161,'2025-05-06 11:40:47.587979','14','22ada34',2,'[{\"changed\": {\"fields\": [\"Discussion score\", \"No of discussion\", \"Discussion index\", \"Integrity index\"]}}]',19,6),(1162,'2025-05-06 11:40:56.919964','6','Discussion 1 22ada34',3,'',27,6),(1163,'2025-05-06 11:46:01.503988','6','22ada34 2026_SDE_1',3,'',16,6),(1164,'2025-05-07 03:31:58.954905','14','22ada34',2,'[{\"changed\": {\"fields\": [\"Discussion score\", \"No of discussion\", \"Discussion index\", \"Integrity index\"]}}]',19,6),(1165,'2025-05-07 03:32:09.865187','7','Discussion 1 22ada34',3,'',27,6),(1166,'2025-05-07 03:32:20.441541','7','22ada34 2026_SDE_1',3,'',16,6),(1167,'2025-05-07 04:52:39.016822','1','san',3,'',37,6),(1168,'2025-05-07 04:52:48.466351','1','san',3,'',38,6),(1169,'2025-05-07 05:17:05.353031','2','rgvregvhgng',3,'',28,6),(1170,'2025-05-07 05:17:05.353092','1','yhjtr',3,'',28,6),(1171,'2025-05-07 05:17:28.635180','1','python',3,'',29,6),(1172,'2025-05-16 04:01:42.032429','3','Test',3,'',14,6),(1173,'2025-05-19 03:40:00.830030','92','22ita23',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1174,'2025-05-19 03:40:31.808164','32','22csa38',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1175,'2025-05-21 05:57:26.990183','336','i0941',2,'[{\"changed\": {\"fields\": [\"Username\"]}}]',4,6),(1176,'2025-05-21 06:02:53.773720','368','i0941',1,'[{\"added\": {}}]',19,6);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=48 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (46,'accolades','accolade'),(45,'accolades','accoladelike'),(44,'accolades','organization'),(47,'accolades','outcome'),(43,'accolades','scope'),(1,'admin','logentry'),(40,'aura','attempt'),(39,'aura','option'),(35,'aura','question'),(36,'aura','quiz'),(42,'aura','response'),(37,'aura','skill'),(38,'aura','tags'),(41,'aura','user_score'),(3,'auth','group'),(2,'auth','permission'),(4,'auth','user'),(28,'company','company'),(31,'company','interviewprocess'),(30,'company','jobrole'),(33,'company','round_skill_detail'),(32,'company','round_skills'),(34,'company','salaryband'),(29,'company','skill'),(5,'contenttypes','contenttype'),(6,'sessions','session'),(14,'track','assignment'),(18,'track','assignment_problems'),(7,'track','batch'),(8,'track','complexity'),(25,'track','contest'),(9,'track','course'),(15,'track','course_coordinator'),(16,'track','course_enrollement'),(10,'track','department'),(26,'track','discussion'),(27,'track','discussion_detail'),(11,'track','institution'),(12,'track','platform'),(17,'track','problem'),(24,'track','problemstats'),(21,'track','problemtags'),(23,'track','problemtype'),(19,'track','profile'),(20,'track','solved_problem'),(13,'track','tags'),(22,'track','user_handle');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2025-01-08 09:29:46.722341'),(2,'auth','0001_initial','2025-01-08 09:29:47.309032'),(3,'admin','0001_initial','2025-01-08 09:29:47.442068'),(4,'admin','0002_logentry_remove_auto_add','2025-01-08 09:29:47.451113'),(5,'admin','0003_logentry_add_action_flag_choices','2025-01-08 09:29:47.466737'),(6,'contenttypes','0002_remove_content_type_name','2025-01-08 09:29:47.564645'),(7,'auth','0002_alter_permission_name_max_length','2025-01-08 09:29:47.614272'),(8,'auth','0003_alter_user_email_max_length','2025-01-08 09:29:47.662310'),(9,'auth','0004_alter_user_username_opts','2025-01-08 09:29:47.677942'),(10,'auth','0005_alter_user_last_login_null','2025-01-08 09:29:47.756380'),(11,'auth','0006_require_contenttypes_0002','2025-01-08 09:29:47.756380'),(12,'auth','0007_alter_validators_add_error_messages','2025-01-08 09:29:47.773231'),(13,'auth','0008_alter_user_username_max_length','2025-01-08 09:29:47.797835'),(14,'auth','0009_alter_user_last_name_max_length','2025-01-08 09:29:47.827376'),(15,'auth','0010_alter_group_name_max_length','2025-01-08 09:29:47.884336'),(16,'auth','0011_update_proxy_permissions','2025-01-08 09:29:47.900945'),(17,'auth','0012_alter_user_first_name_max_length','2025-01-08 09:29:47.938531'),(18,'sessions','0001_initial','2025-01-08 09:29:47.985118'),(19,'track','0001_initial','2025-01-08 09:29:49.368935'),(20,'track','0002_solved_problem_date','2025-01-09 09:07:28.860315'),(21,'track','0003_remove_profile_email_profile_github_link_and_more','2025-01-10 14:36:12.187682'),(22,'aura','0001_initial','2025-03-24 09:34:06.250484'),(23,'track','0004_course_created_by','2025-03-24 09:34:06.364715'),(24,'track','0005_problemtype_userproblemstats','2025-03-24 09:34:06.586673'),(25,'track','0006_rename_userproblemstats_problemstats','2025-03-24 09:34:06.701890'),(26,'track','0007_contest_alter_problemstats_unique_together_and_more','2025-03-24 09:34:07.131107'),(27,'track','0008_discussion_discussion_detail','2025-03-24 09:34:07.473846'),(28,'company','0001_initial','2025-03-24 09:34:08.161166'),(29,'track','0009_contest_dmoj_key','2025-04-02 11:05:50.197649'),(30,'accolades','0001_initial','2025-05-03 03:53:32.058676'),(31,'track','0010_profile_discussion_score_profile_integrity_index_and_more','2025-05-06 04:39:57.521462'),(32,'track','0011_profile_discussion_index_and_more','2025-05-06 05:05:24.458641');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('02355afkx2ezm0gh2qne87w5cci1b5on','.eJxVjMsOwiAQRf-FtSEMz8Gle7-BwABSNTQp7cr479qkC93ec859sRC3tYVtlCVMmZ0ZSMtOv2uK9Ch9R_ke-23mNPd1mRLfFX7Qwa9zLs_L4f4dtDjatyYHCaPyImlQyRCCqB6hlEyuWnLCVxMREqHVKL1UzhooVQIaJay27P0BJGw3WA:1uCAwk:lSLjQLiJPSXc0We9aLUPHa3PaH9I2x5Sf_3PVtFYBjE','2025-05-20 05:34:26.250697'),('05u0fm1sfusev5q2sue3bgzn6dyoajjt','.eJxVjMsOwiAQRf-FtSHIYygu3fcbyHQYpGogKe3K-O_apAvd3nPOfYmI21ri1nmJcxIXYawTp991Qnpw3VG6Y701Sa2uyzzJXZEH7XJsiZ_Xw_07KNjLt0ajlWVkUJ7sGcFDMCp7TRAQXfIcNCuVAHggcmFAb7LJDgGsopyzeH8AJzA4eA:1uCGuq:ltKDcqssRjBMytXqFxjbriJp5Z8WuBJ4EF1FSYguiWM','2025-05-20 11:56:52.521945'),('05yljwqukguvub458dqotd2o8htyrhv8','.eJxVjEEOwiAQRe_C2hAGhKJL9z0DmYFBqgaS0q6Md7dNutDtf-_9twi4LiWsnecwJXEVYKw4_a6E8cl1R-mB9d5kbHWZJ5K7Ig_a5dgSv26H-3dQsJetjj4D6jNZUJCcTkY5GsCABmeZNEPeBA-Z7BCzTh6J2atLjsBWRwDx-QIhwzhN:1uCAv7:4nLr7eS01KOyfQB_ptpmfTWs0bwJz-epACFvNJI_ZfM','2025-05-20 05:32:45.113727'),('07dt0t9b6ntqu77gz6ubtve34vz6j1a8','.eJxVjDsOwyAQRO9CHSHM8k2Z3mdAywLBSYQlY1dR7h5bcpE0U8x7M28WcFtr2HpewpTYlQ1asMtvG5GeuR0oPbDdZ05zW5cp8kPhJ-18nFN-3U7376Bir_vaeqKiBpQOo1JKONBFORlBkMleYN7TJ6UJQFvtLYATyZCXYKUuJrPPFxgvN18:1uCFjt:VC9McJ29l7bUT1ClT_FrJkyqmdtk16sF_-ND4aJSuHs','2025-05-20 10:41:29.464885'),('093xbzyce8iq9pxv3jqqewkp8z0m604w','.eJxVjDsOwjAQBe_iGlnrb2JK-pwh2o3XOIBsKU4qxN2RpRTQvpl5bzHjsef5aLzNaxRX4Yy4_I6Ey5NLJ_GB5V7lUsu-rSS7Ik_a5FQjv26n-3eQseVeawppIAATaLQpJsUIJgWPaKwnVqMLoJxmpyhFNwQiz0oHgIjKkhefLxdbOCs:1uFqUl:bFElxv9zICrRV1ao2UUAvIYC1stjRFL5vukphy16RM8','2025-05-30 08:32:43.232697'),('0adwq7at518k2hmqyk4wha9canpkeyuz','.eJxVjEEOwiAQRe_C2pCBhpni0r1nIMAMUjU0Ke3KeHdt0oVu_3vvv1SI21rD1mUJE6uzQlSn3zHF_JC2E77Hdpt1ntu6TEnvij5o19eZ5Xk53L-DGnv91pkG8AMlodFgYRIiKUAZCNkDZuACpjDaaHKxFjw4TA4SOz8iiqj3BwVyN-o:1uBtBd:XlDMNSuQNn6B1nhkFPscfQdw4EKFz2JZw5tKofRdtQE','2025-05-19 10:36:37.267463'),('0b54hizkk7i4lyeurgzo2bvez6oikxw3','.eJxVjMsOwiAQRf-FtSEgj4JL934DmWGmUjWQlHZl_HdD0oVu7znnvkWCfStp77ymhcRFaB3F6XdFyE-uA9ED6r3J3Oq2LiiHIg_a5a0Rv66H-3dQoJdRz9kAWbI6kgtonJoYlXI0UWCKZ2OZMhOy15h1nLWxKoK32RjvA7P4fAFTuDj9:1uBwWu:0pA3uM4sWi7ewtjL03KGTyxeTyW_93RHzRKiVO3EBL8','2025-05-19 14:10:48.248587'),('0bpx5netwrhd5zsgsf3i8vn6o7fqqcks','.eJxVjEsOAiEQBe_C2hBp5OfSvWcg3dDIqIFkmFkZ766TzEK3r6reS0RclxrXwXOcsjgLCFocflfC9OC2oXzHdusy9bbME8lNkTsd8tozPy-7-3dQcdRvbcFanbRxio1XpLUHMNZbS4WxJFKclaGEBo5BIxDmVE4qZC7ggzNOvD8bjjhC:1uCAtJ:xfCmfuzuo2UJHMHU9pmltJgbhAIi8qLpF3cUiaif2dI','2025-05-20 05:30:53.276605'),('0e479okqbxl6ko8md82anw3ufw43q62p','.eJxVjEEOwiAQRe_C2hAGhKJL9z0DmYFBqgaS0q6Md7dNutDtf-_9twi4LiWsnecwJXEVYKw4_a6E8cl1R-mB9d5kbHWZJ5K7Ig_a5dgSv26H-3dQsJetjj4D6jNZUJCcTkY5GsCABmeZNEPeBA-Z7BCzTh6J2atLjsBWRwDx-QIhwzhN:1uBxWh:dgfn49wKnL5WrVmZJpTFLA5v_hgpogbCJfOFGq-kCgc','2025-05-19 15:14:39.618432'),('0f88c6wznn3bwbyplt5knef4s2teq2si','.eJxVjEsOAiEQBe_C2hBgaD4u3XuGSTc0Mmogmc_KeHedZBa6fVX1XmLEba3jtvA8TlmcxaCVOP2uhOnBbUf5ju3WZeptnSeSuyIPushrz_y8HO7fQcWlfmtWymcTjbbeFSBdXPFgmKMLgQiJhoIBLNkCg4-RFIJm8BAwGaTkxPsDJjI4cA:1uCBM4:wy-s-Y-kx2nK1qcuRjo3xNpQ3RSyw4wX7ABiDH5AQho','2025-05-20 06:00:36.121725'),('0gubqn4hqyl215y3pttg4fjlb2ld3geu','.eJxVjMsOwiAUBf-FtSG8Hy7d9xvI5QJSNZCUdmX8d9ukC92emTlvEmBba9hGXsKcyJVIacjld42Az9wOlB7Q7p1ib-syR3oo9KSDTj3l1-10_w4qjLrXxsZimfYuquJEcaC51Cyrgsi5cJCUsJ6DR-55ksYXmQVYhx7Fzlkkny8d9jev:1uHcVQ:m_J-lgcujE1XJnHKd7QwWpx6fbMJE3v4ld8mTqZvlGo','2025-06-04 06:00:44.926074'),('0mm7a02nniboiweo1cux7usj99ie4xvw','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzw3B:izGdLMOSbaXqfMLV7dcHqf6GpXovojmVGEwv3iokBO0','2025-04-16 11:14:29.742078'),('0nogv4j3nn34wguhgcy78fhjume2ttr6','.eJxVjEEOwiAQRe_C2pAZSoFx6b5nIAOMUjVtUtqV8e7apAvd_vfef6nI21rj1mSJY1Fn1WFQp981cX7ItKNy5-k26zxP6zImvSv6oE0Pc5Hn5XD_Diq3-q1ZespExQM5JxbBJHa9ZZts8phdcAZECoDpBImQfTABfQdX8YkA1fsDGdg3TA:1uCCcZ:y8l8Pig7OuXv0FhlzJx-z79Ze77VMQDkW7R8ElktXxs','2025-05-20 07:21:43.350231'),('0oh5d12ptb1zh2nepwc4fsrjagaq5r9x','.eJxVjEEOgjAQRe_StWlogaG4dM8Zmplpx6KmTSisjHcXEha6_e-9_1YetzX5rcbFz0FdlYFOXX5XQn7GfKDwwHwvmktel5n0oeiTVj2VEF-30_07SFjTXjMBMKMMTAOha_vOjiRoRnFADVq7syYYIdOKAPWBGWILHKJEg-LU5wtzITpx:1uC1hF:xQqMC2x0dAaH8h8XHKcF10RIsTPIlBmiE81Znq7KL5I','2025-05-19 19:41:49.010857'),('0vi6g16g2nl288ns0s803apveozdqprj','.eJxVjDsOwjAQBe_iGln-m6Wk5wzRrtfGAWRL-VSIu5NIKaB9M_PeYsB1qcM652kYWVyE0V6cflfC9MxtR_zAdu8y9bZMI8ldkQed5a1zfl0P9--g4ly3Gl02OvmowDgmS8GlbAL4QqwspGIDBmM3C6MGTYqdJ4jFMYPWZ0ji8wUsCDg3:1uCAbm:lYhLTj3ulPfFibgrlAhCASQg7TfmAimJTkf2X7v9MOg','2025-05-20 05:12:46.102744'),('0z9qffqsjnbb3rv6z491yjxo74n83zy4','.eJxVjDsOwjAUBO_iGlmOTfyhpOcM1j77BQeQLeVTIe5OIqWAdmZ23yJiXUpcZ57imMVFdH0Qp19KSE-uu8oP1HuTqdVlGknuiTzsLG8t8-t6tH8HBXPZ1gmsLdgMRmloD7-B3sA7axIrgqXkYQ070wd0RE6TU2cV_BB8hg3i8wVTqDjL:1uBz4q:uyOzxm3wo57SlTKgiRKz_3b6Wi1ZsECwy8Bc_nyNxHk','2025-05-19 16:54:00.489124'),('0zzt2orjwe7py3pmia8wnn4mvpco68j6','.eJxVjMsOgjAQRf-la9O0Dp0OLt3zDaTziKAGEgor478rCQvd3nPOfbm-bOvQb9WWflR3cRDAnX5XLvKwaUd6L9Nt9jJP6zKy3xV_0Oq7We15Pdy_g6HU4VtzoRxbkwSJRPmsilEtZ2wBm9aYIhgCBwIhTaGRYhiQUsAoORO79wcv-zfr:1uCB5v:V4JwiOqHYsI0ojWAFD3s66wHh5FeTRXPrfZP7WZSWE0','2025-05-20 05:43:55.512847'),('100vao2iyq8blwotnwx00cu4by5u2spc','.eJxVjEEOwiAQRe_C2pDpBAbq0r1nIAwdpGogKe3KeHdt0oVu_3vvv1SI21rC1mUJ86TOCsGp0-_KMT2k7mi6x3prOrW6LjPrXdEH7fraJnleDvfvoMRevrXJRJQsj5YNeo5ejBjLHkZBwxJhyIhZyBNBGkk8Wwc4EAI4yNar9wcnRDeD:1uCBKf:9bOGQEzVV1palG2zEWjtzISY06ic2rjlktQEfqr-ROE','2025-05-20 05:59:09.384640'),('120vf8p9mnyft7x7im4d9p5a4mmlw5zg','.eJxVjEsOwjAMBe-SNYrckMYxS_Y9Q-XYCS2gVOpnhbg7VOoCtm9m3sv0vK1Dvy157kc1F-MIzel3TSyPXHekd663ycpU13lMdlfsQRfbTZqf18P9Oxh4Gb51aos6YiYBj41QRIbiuURsMSRVB7Gg906jADVnHwjQgeaSQ2pFwLw_OII4TA:1uCAyh:wu_ZO1gU76N87eTsbhfR4XVdoFdE6pnHjNJ6BF1iunA','2025-05-20 05:36:27.586374'),('14njgeqxzlxgfp2mimxqjm71cqz18zwu','.eJxVjMsOwiAQRf-FtSE8C7h07zeQYQakaiAp7cr479qkC93ec859sQjbWuM28hJnYmemlGSn3zUBPnLbEd2h3TrH3tZlTnxX-EEHv3bKz8vh_h1UGPVbT65AMNJYT8qRBq1lsJRQeI86JOFA-CCtMpSLs0jSkywoCDOUSZFi7w8Z8zhn:1uCAem:3ODJ3twmovTZkk5yiN4h826-KmxEduw2pue8Q8nmAFw','2025-05-20 05:15:52.090125'),('16mpaoc7ybyr0y5mrlh4e2wjywiqaaqv','.eJxVjMsOwiAQRf-FtSENjwFcuvcbyMAMUjWQlHZl_Hdt0oVu7znnvkTEba1xG7zEmcRZKBPE6XdNmB_cdkR3bLcuc2_rMie5K_KgQ1478fNyuH8HFUf91sYBKc5KBSrKeYBiyE_sfQLiwIzaaERvE5PWDGiDBadNsVNiB8mK9wc8VTiR:1uCA0e:cqrlJVuzPWewz0ykXmi4i6geDdxDBooW0kf2Q05S4GU','2025-05-20 04:34:24.150209'),('18vko9u4n9mwxjchxiei34ve58f9xv7g','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tx0dk:9uPcgMmfuo0zr2_U5AnMkOfas1mH1XjPK-Jty1RMMdY','2025-04-08 09:32:08.999618'),('1a07oj8yl7ip9ipr1phuqh7pi8a3sevh','.eJxVjDsOwjAQBe_iGln-sP5Q0ucM1sa7xgHkSHFSIe4OkVJA-2bmvUTCba1p67ykicRFGB_E6XcdMT-47Yju2G6zzHNbl2mUuyIP2uUwEz-vh_t3ULHXb50BIpmglbaosvbggYoCraK1wI6NJc0uFGKLIYAmMNlELKSMK2cfxfsDDEo3gw:1uCAlo:9HpsW_5qhb0lURp2tlS7gDeNxXchKDFvXY11aKGL35o','2025-05-20 05:23:08.793373'),('1bwx50kja4g2h7vi52pfxlakyk7am0nr','.eJxVjMEOwiAQRP-FsyFAsxQ8evcbCLssUjWQlPZk_Hcl6UFvk3lv5iVC3LcS9s5rWJI4Cz2J02-JkR5cB0n3WG9NUqvbuqAcijxol9eW-Hk53L-DEnv5rjPPk8FsyGGMQHO2lK0CizAxodNgWHtMOXmblUH0hhSODBq88068PzUBOKU:1uCFus:cZ6J6yd_6SPsgOSFJTE3lSCRH3zDBYfys6ShQlodD3E','2025-05-20 10:52:50.413350'),('1fuizi5ur47pkktg6mh86md7hgetmpxf','.eJxVjMEOwiAQRP-FsyHYBVY8eu83kF0WpGrapLQn47_bJj3oaZJ5b-atIq1LjWvLcxxEXRV0Vp1-W6b0zOOO5EHjfdJpGpd5YL0r-qBN95Pk1-1w_w4qtbqtLwyEBov1xkkiFsLE7pww-xDAYMfAwVLJzhBsEbwHC2hELAaioj5fP7g4yQ:1uCD5c:sxJVWv5kzE3TPkzEanT4mC8jpRToyafdfcokE7lH_lA','2025-05-20 07:51:44.636098'),('1qjnr4ur25wflcaaa1yljyg5znelv96b','.eJxVjDsOwyAQBe9CHaEFzC9lep8BAbsOTiIsGbuKcvdgyUXSzsx7bxbivpWwN1rDjOzKlAV2-aUp5ifVQ-Ej1vvC81K3dU78SPhpGx8XpNftbP8OSmylr4EEJC8kGaedz8LYmBAQOpWgJGQQ0koHZpiSU5MftDMRbC81KcLMPl_-yzcx:1uDbui:an20XUCUjEwP4-ct1xV_r97I5hHIpo8ihbqCttm8RqU','2025-05-24 04:34:16.923302'),('1tgmmuywuh6lyg89lgr68xdonaxr001u','.eJxVjEEOwiAQRe_C2hCgQwGX7j0DGYZBqoYmpV0Z765NutDtf-_9l4i4rTVunZc4ZXEWA4jT75iQHtx2ku_YbrOkua3LlOSuyIN2eZ0zPy-H-3dQsddvDUp7FRKRNkmFrK1DCBnZB1O8LuxHPZiRAMihBQ6EBZEM5MQIzirx_gABKDhd:1uBxmp:lddchXKbzeLHiCN-C1mq4vrBzb7aCU6ZHCfLt4BFn2s','2025-05-19 15:31:19.338462'),('1z6jlaw727setxxx1hsjkzgzxbf50dkn','.eJxVjMsOwiAQRf-FtSF0Bgrj0r3f0AwwlaqBpI-V8d-1SRe6veec-1IDb2sZtkXmYcrqrJxVp98xcnpI3Um-c701nVpd5ynqXdEHXfS1ZXleDvfvoPBSvjU5MsYCJBQ_WsgBnQcvANkBWEse49gbFwkxJBKM3HEgk5ipw96Ken8A0Nw27g:1uBsPC:M0N8tZCvwbbK9cJAl4qSGElgMx3NJYRwqgYt7BD-gow','2025-05-19 09:46:34.775487'),('21gxcc8pyi7dtdmt9xk026ltf4v2he67','.eJxVjMsOwiAURP-FtSEIlIdL934D4XK5UjWQlHZl_Hdp0oUuZ86ZebMQt7WEreclzMguTErJTr8txPTMdUf4iPXeeGp1XWbgu8IP2vmtYX5dD_fvoMRexlqDJyQPxqOyQMk4IoxREYER5LM1aSKnJj3C2VFSNqPJwmgclrDAPl9urTna:1uCBCB:UxtkqVfPsTppXf2fx_OAc6W2cupUOs7It_-OkTKq7eU','2025-05-20 05:50:23.820497'),('2351aamtto6nwflnfh7vk1qkczc1n7ps','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmWnl2-l0jpkduO6I7tlvnqbd1mSPfFX7Qwa-d8vNyuH8HFUf91qCjIZnAl0misE7qAlmCBwIjTXZWJSuMmLImgeB80cm65K2KwlH0yN4fEMI3lw:1uCDBn:tjfkWVCSehOsnYpdEy5vs-TRS_1AqMLgt3QizApWnh8','2025-05-20 07:58:07.485033'),('26csofosqwyttmlf4fw15nxbq12yjril','.eJxVjLsOAiEUBf-F2pDLGyzt9xvI5SWrBpJltzL-uyHZQtszM-dNPB579cfIm18TuRIBQC6_a8D4zG2i9MB27zT2tm9roFOhJx106Sm_bqf7d1Bx1FnLDIZZLlQBJQsWyLowzaXk0cQEyLBoJpwzQVoE47RVjIVURNLWYCSfLxaqN9M:1uCB3h:bLCci9kZIMK1mxxZwTQqkY8u8mGKpHMbFTMCh3l0DGQ','2025-05-20 05:41:37.424023'),('26xf9wkbp1qvrpvvhjyevmyv51rz4obg','.eJxVjDkOwjAUBe_iGln-eElESc8ZLP8NB1AixUkVcXeIlALaNzNvM7msS81rkzkPbC4Gkjn9jljoKeNO-FHG-2RpGpd5QLsr9qDN3iaW1_Vw_w5qafVba-iJncSoXvpYQgrKhEiY1KNKIFDuknNRFUg8nwEKQufBi9Mgwbw_QeU5RQ:1uBmzW:JfDp9jhUFqCs52DcgjojKPrCFjRjCTxL2E7TCIA8uoM','2025-05-19 03:59:42.100587'),('2ayodqpyi8plmbvsq3ldb7891q2mkood','.eJxVjEEOwiAQRe_C2pAOBaa4dN8zEDoMUjWQlHZlvLtt0oVu33v_v4UP25r91njxcxRXAT2Kyy-dAj25HCo-QrlXSbWsyzzJI5GnbXKskV-3s_07yKHlfW16F5UjRdoCxsTg2AIoYyAmUhoHVJqtDoH0sEMCBkwdWoWoTcdOfL4ROjcp:1uBz88:epgfHMFWArkDyEAcEY0Un1QuGzIUHOHtWwWs9r_cLrA','2025-05-19 16:57:24.956922'),('2d9lk08v00v4yngumv2evxu6b2cw8pxd','.eJxVjMsOwiAURP-FtSE85AIu3fsN5F4eUjU0Ke3K-O-WpAtNJrOYMzNvFnBba9h6XsKU2IUpyU6_IWF85jZIemC7zzzObV0m4qPCD9r5bU75dT26fwcVe93XBMbt0hDRCzBKFyMLWMpaJQTvrBbirF1RjgpIo601RSjKFv1wwz5f2Po2_A:1uBnBc:-TI7lZHIM90JhP1CS56HQlSXdXpFAELfLabBOkG2Lvk','2025-05-19 04:12:12.265998'),('2ddvlis78eib993kjh1myp1zjkgpu8ow','.eJxVjDsOwjAQBe_iGln4s_5Q0nMGa3ft4ABypDipEHcnkVJA-2bmvUXCdalp7WVOYxYXAVGcfkdCfpa2k_zAdp8kT22ZR5K7Ig_a5W3K5XU93L-Dir1uNbFHZ42ywJCdC6FwJEBTCmoIHJVxfAarNW8GI-EACBbRKe_JxEF8vhQeOGg:1uBsYq:0xe9D-lB3cuIqW9U5E11HCsFcrRoP4Ua7vGh4f4B9ZA','2025-05-19 09:56:32.004534'),('2gn7kfzjz6kjesf1duzu4quon55zsmns','.eJxVjMsOwiAQRf-FtSEMz8Gle7-BwABSNTQp7cr479qkC93ec859sRC3tYVtlCVMmZ0ZSMtOv2uK9Ch9R_ke-23mNPd1mRLfFX7Qwa9zLs_L4f4dtDjatyYHCaPyImlQyRCCqB6hlEyuWnLCVxMREqHVKL1UzhooVQIaJay27P0BJGw3WA:1uBxDr:g8IG1t1KAw9obDHJ53mgAXjLVWGnfQxLYoOPzyDij9M','2025-05-19 14:55:11.051854'),('2mvu0j4t5qd8ss7onnq8ln4xbd0t8p22','.eJxVjEEOwiAQAP_C2ZAWlhY8eu8bml12kaqBpLQn499Nkx70OjOZt5px3_K8N1nnhdVVGQB1-aWE8SnlUPzAcq861rKtC-kj0adteqosr9vZ_g0ytnyMxZC1aBMzJ-CYAlKi0WHnALALBMgk3A8sJrKnbqAUrB_Eejc66tXnC3UjObE:1uC9wr:povtfc19ZSuWFNViQq-WPbDz_7lwv_EzmtOEdYTXF7k','2025-05-20 04:30:29.064497'),('2nucd82x1tfm7jsdz9ixvtrj82u6hrm5','.eJxVjDsOwjAQBe_iGlnx7voDJT1nsNY_HECOFCcV4u4kUgpo38y8t_C8LtWvPc9-TOIigKw4_a6B4zO3HaUHt_sk49SWeQxyV-RBu7xNKb-uh_t3ULnXrXYIlnTMzM4ECnrAAKo4i1SIjWNj1YYjICRw5GzIChHOhaKGPJgkPl8VSjd6:1uCADt:geQRFzdBQtwMvP6cjjlqHhg4L3Z0s6WQyZxU4OfesSo','2025-05-20 04:48:05.138718'),('2octnbloud3i1vt3k7s1v4ybhz0s0k66','.eJxVjEEOwiAQRe_C2hBapgPj0n3P0AwDkaqBpLQr491tky50-997_60m3tY8bS0t0xzVVRGpy-8YWJ6pHCQ-uNyrllrWZQ76UPRJmx5rTK_b6f4dZG55r-1gHKLtvEV00VsA8OJJzMBWPHY9szgiEYLkGDAlt7uEYHoPEoz6fAHNrTat:1uCAta:WqJ80Pz942SaehJLBqrhtX8Tm0J-FAswlZJbm2aV0zI','2025-05-20 05:31:10.944056'),('2pswqkp2qlpoc1nsc32ylbri7b18ulic','.eJxVjMEOwiAQRP-FsyHAslQ8evcbyLKAVA1NSnsy_rtt0oPeJvPezFsEWpca1p7nMCZxEQaUOP22kfiZ247Sg9p9kjy1ZR6j3BV50C5vU8qv6-H-HVTqdVuTVWeDUXvLHm0ZUBVEj2wLDCnpXAApRWscgPFA6CJnqz073nI2Sny-FCA31w:1uCHsa:SrZj_AfzU6Jg_G-60Zr7nPKPmPT5zB8D51DYW4B03Rc','2025-05-20 12:58:36.196543'),('2qo5fw753dejrf5kcwhi6aupfunv6hoi','.eJxVjEEOwiAQRe_C2hAYih1cuvcMhIFBqgaS0q6Md7dNutDtf-_9t_BhXYpfO89-SuIi9GDF6XelEJ9cd5Qeod6bjK0u80RyV-RBu7y1xK_r4f4dlNDLVkebRz2AIdYASkE0JsKozg7BJEWI7IiQNqxBGwzJMWZixzpb61iJzxcSsTgC:1uBxyx:nZ67ef_PVJP-dZJ9CP2qqcX1iD-04pix62l4fMmbRLQ','2025-05-19 15:43:51.625404'),('2tpcxsaryvb2vhqhyj0116r050lvhtu6','.eJxVjDsOwjAQBe_iGln-bWxT0nMGa-3d4ABypDipEHeHSCmgfTPzXiLhtta0dV7SROIsjHbi9LtmLA9uO6I7ttssy9zWZcpyV-RBu7zOxM_L4f4dVOz1W2cf0GudwWqK7AujH6AM0QIy2lKURxpHZw1hJOWCDQ604oyglIkA4v0BOfw4LQ:1uCBHP:FR5jT5ygIbwCgtlSNJwJ5kLYiU6yukiEniIWC9MaxSg','2025-05-20 05:55:47.361020'),('2vi5vx2hlapiue2skh597ptawm2mbwdh','.eJxVjEEOgjAURO_StWko7ZfWpXvP0MxvP4KaklBYGe8uJCx0M4t5b-atItZliGuVOY5ZXZRtSJ1-W0Z6StlRfqDcJ52msswj613RB636NmV5XQ_372BAHbZ18K2n4CkjON4ywfQNuubMVjII0lruiI3zfQdBSw7C1hjvUgIsqc8XOzw45Q:1uCB9a:TlyTECq_CwxqKwY4bFSEfJ0JRTZIXO3FInAcY8qxj1s','2025-05-20 05:47:42.383102'),('2zkh5aa9t8eaz0886emfajg63ss6e8j9','.eJxVjMEOgjAQRP-lZ9NY2C2tR-9-A9llt4KaNqFwMv67kHDQZE7z3szb9LQuY79WnftJzMW03px-S6bhqXkn8qB8L3YoeZkntrtiD1rtrYi-rof7dzBSHbc1hhg5NF0DKAKdT0jiFTnClhRaxsSdAxri2TlCScgAkWNoRcE7NZ8v_n43-w:1uCAaG:KqYJBTwTxTPH4VoJWSRewPf1-hq-ipe7DESp5ZlO64g','2025-05-20 05:11:12.980337'),('30c3r4jwfiyvqv2lvseooolgcm1ebp1f','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBoOc:pVDON-j0LvpykqYIt7mNgyHSzKD_fH9-pa6WtbZ_aUo','2025-05-19 05:29:42.157035'),('31r8nyut1abxhg1g3t3aiqb1gggn7hlz','.eJxVjEEOwiAQRe_C2hAGGAou3XsGAsxUqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xInEW4L04_a45lQe3HdE9tdssy9zWZcpyV-RBu7zOxM_L4f4d1NTrt3Z5zIrJqqKRtcFhLI7YBUtgTFYAlNhAQNKImDTxYLQKYL0KCN4Z8f4ANr43cw:1uCAeo:GczORaoRuEYxL_sjCzHaCHHa16Y8FASvjh78Dyemgw8','2025-05-20 05:15:54.118999'),('337b10uwpjwr2la7hbzswv28cr7zud7v','.eJxVjEEOwiAQRe_C2pBSGASX7nsGAsOMVA0kpV0Z765NutDtf-_9lwhxW0vYOi1hzuIi3ChOv2OK-KC6k3yP9dYktrouc5K7Ig_a5dQyPa-H-3dQYi_fWuVoPBPqqMmwypqQFRgLHpDZe2_PyWhGcoMdPbMlYHBuyGw1MFrx_gAtijjL:1uCAyQ:FgHqsl4n2_wXznUjj1C__KKPtX3xUBo4x86K74RJcyU','2025-05-20 05:36:10.277906'),('38cbgfpzx735athc7qf95p3xle4f817l','.eJxVjEsOwiAUAO_C2pDy-BRcuu8ZyOMBUjWQlHZlvLsh6UK3M5N5M4_HXvzR0-bXyK5MzoJdfmlAeqY6VHxgvTdOre7bGvhI-Gk7X1pMr9vZ_g0K9jLGNqEwkqxTqBUZ41QEcIDaghQiqOzACNJZC5tAZ4lKRpQYaQ6Twol9vgn3N50:1uDlX0:1TkOu7yy6aSyLatDM8ItAcgkWef1KZOL6JmT7SDAtC8','2025-05-24 14:50:26.894178'),('38s1h1bjwey22ou3miq74vcfbkopgtih','.eJxVjEEOwiAQRe_C2hDqQJm6dO8ZyMAMUjU0Ke3KeHfbpAvdvvf-f6tA61LC2mQOI6uL6npUp18aKT2l7oofVO-TTlNd5jHqPdGHbfo2sbyuR_t3UKiVbW2QgcUkP_QEQr4DtECSnQw2WQJE5EzJbRzOYiA579iKNZwjmQzq8wU5UTid:1uC9Yq:V3RuWv8fTtlj2xuo5jGXq2CpYlsiR1COM3kOagZCk2Q','2025-05-20 04:05:40.535620'),('38uh4zkr0qpa72k6b3f0is2m7b5tbl9h','.eJxVjDsOwjAQBe_iGlle_1hT0ucMln-LA8iW4qRC3B0ipYD2zcx7MR-2tfptlMXPmV2YMez0O8aQHqXtJN9Du3WeeluXOfJd4QcdfOq5PK-H-3dQw6jfmlQhGa1NUiGCI4dQpLEpEyUNoAXJ7BQQaIVAeBbJBaPBIRphJRF7fwAB4Ddk:1uCG1g:tsGsvu5YU83h3cPmJtyVglhelx3WAFe-j3v4Tgs9_Zk','2025-05-20 10:59:52.441904'),('39xd1hfqyv95ueiy49dtjkfa7vsgo47g','.eJxVjDsOwjAQBe_iGlle4i8lfc5g7XptHECOFCcV4u4QKQW0b2beS0Tc1hq3npc4sbiIswZx-l0J0yO3HfEd222WaW7rMpHcFXnQLseZ8_N6uH8HFXv91ugoE-gEwSM4rY03LoDNSZHlZAqxKkFxAAIHqIMphWmwFpzXZvBKvD8uGTfg:1uC9w1:5_bdTXxjGgq84PHGvjAdillx7mDDGbvKTYOnTvWrpiM','2025-05-20 04:29:37.174136'),('3avp5ph1v6a3ztgxtocqd49b7uzus2qw','.eJxVjEsOwiAUAO_C2pDHv7h03zMQHg-kamhS2pXx7oakC93OTObNQjz2Go6et7AQuzIFml1-Kcb0zG0oesR2X3la274tyEfCT9v5vFJ-3c72b1Bjr2NscAIUTqFJkAid8qjBUc7FFq-AhCiuJGOliaCooM-T1SYmJUE6YdnnCzRiOC0:1uCB60:S92OfanGH5ynYhB4K0bZdgL_5n318uYSy0222Y0CaVs','2025-05-20 05:44:00.975257'),('3bu5cw7zsuxlxyovvafxnmnl9c67xibi','.eJxVjMsOwiAQRf-FtSG8oS7d-w1kYAapGkhKuzL-uzbpQrf3nHNfLMK21rgNWuKM7My0m9jpd02QH9R2hHdot85zb-syJ74r_KCDXzvS83K4fwcVRv3Wyip0XqALyhrlk_Y6TCVQKikjquIBMkhri7DWGYJCEoJXRgAJBCnZ-wMupDiV:1uDbJu:Pt5TA_WWnNL8yHNtcnS6bwlqPYj9HPkeyJJMGm9z8R8','2025-05-24 03:56:14.794705'),('3imq6c6gog7oi79zakq1vd0y6fl3sc76','.eJxVjEEOgjAQRe_StWlmOm2lLt1zhqbDDIIaSCisjHdXEha6_e-9_zK5bOuQt6pLHsVcDKE3p9-VS_fQaUdyL9Nttt08rcvIdlfsQattZ9Hn9XD_DoZSh2-dhJkxUN8hqABHCIIe3Jm8CCG5hNqEBtH72IOLxCUpAcSIosRs3h8b8jeA:1uCBVt:Qp7BZ8wDQE0D8Z5Q5S_kdi9NlDvAN5ilMbiSvlbHDBA','2025-05-20 06:10:45.352536'),('3iyl34bpozfa1expxc2s5lsrx6hoyxbw','.eJxVjEEOwiAQRe_C2hBapgPj0n3P0AwDkaqBpLQr491tky50-997_60m3tY8bS0t0xzVVRGpy-8YWJ6pHCQ-uNyrllrWZQ76UPRJmx5rTK_b6f4dZG55r-1gHKLtvEV00VsA8OJJzMBWPHY9szgiEYLkGDAlt7uEYHoPEoz6fAHNrTat:1uBv1M:FHBIROgdoTclVS-mjtnnwgp-QF-R4Ul777SuK7qQVmQ','2025-05-19 12:34:08.145574'),('3j0fh0b6owxed1toydvo2n48grvt2smb','.eJxVjMsKwjAQAP8lZwlt3uvRe7-hbLIbU5UUmvYk_rsEetDrzDBvMeOxl_lovM0LiavQ2ovLL42Ynly7ogfW-yrTWvdtibIn8rRNTivx63a2f4OCrfQxBwuDN057QMOYwAwWsglgVTA0kos0hKxHCxzBaQRGr1xyzmeyKonPFwrzN6k:1uCFSx:G_DalIKfByV8M18YcW7XNJyqnn_sMCVzjJg59X0Hhe0','2025-05-20 10:23:59.520198'),('3j9eg979qpk3mpurv3dn4noowsq45jk0','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uCbnH:5g1-B4ZWdU99IHqdct4lgRRshZCR88bPY_Yw_I2WfHc','2025-05-21 10:14:27.101304'),('3jzdtl52g5kdm2m0hlhjfw7hiy5si24r','.eJxVjEEOwiAQAP_C2RDpskvx6N03EBa2UjU0Ke3J-Het6UGvM5N5qhDXpYS1yRzGrE7KgFeHX8ox3aVuKt9ivU46TXWZR9Zbonfb9GXK8jjv7d-gxFa-Y0RrCUSYuENGyQw9s-kGbxyBj8Jg0Tl26QgAH0KRLHpMQ58oqdcbHHo3ug:1uBxjM:ZmMqCVFQ7ZGiuZOoxCEtrWCuO2lf2yx7ADX8Qb8tKD8','2025-05-19 15:27:44.990948'),('3lvz8mh9by76ajhz2wu8r9eebu85kv4p','.eJxVjMEOgyAYg9-F80IQUXDH3X0GUvl_h9sCiehp2bsPEw_bpU36tX0Lj32Lfi-8-oXEVbR9Ky6_6YTw5HQgeiDdsww5besyyaMiT1rkmIlft7P7dxBRYl0PCmSB4BwFtlVhjGs6sGZLOpim-kyqZxqYwEZxp3u4lqEHzJrE5wtb_jmR:1uCTyt:n2x5pqkfPt3f5dIxwYagI1QkmHcLBS2oQ7UDgep26Dc','2025-05-21 01:53:55.441333'),('3mfnrq4xyigqp17iparggxzfgc9g9yd6','.eJxVjDkOwjAURO_iGlnxAvGnpM8ZrL8FB5AjZakQdyeRUkAxxcybmbfJuC4lr7NOeRBzNc6dzek3JeSn1h3JA-t9tDzWZRrI7hV70Nl2o-jrdnT_DgrOZVsjsxDTpj5yA6FBDypBkeHiogbxDYP6PgYgv1nCCK3ziVqFxKk3ny97JTm1:1uBwII:T3n57dBa198FL-tzCPCDLKfk9uHrAP5x5uqtfU4fmrc','2025-05-19 13:55:42.070194'),('3nizcq6m83r2x3latp8gp6srknk3whi8','.eJxVjEsOAiEQBe_C2hAYaBpcuvcMpGnAGTWQzGdlvLtOMgvdvqp6LxFpW8e4LWWOUxZnMYARp981ET9K21G-U7t1yb2t85TkrsiDLvLac3leDvfvYKRl_NYV0BKDL2xsDswAyvqKybJhTU47o1XB7GkADJpDQmUw1IJAPrmgxfsDLwg37w:1uCAAm:cE4_lMUvokTRTe0sNeHms7CYm_B4CBAF_yvCBNle4fo','2025-05-20 04:44:52.812973'),('3ovrlhw5u3vcxgjciahnpowur3u41erh','.eJxVjDsOwyAQRO9CHSHD8llSpvcZEJ8lOImwZOwqyt1jSy6SbjTvzbyZD9ta_dZp8VNmVyalYJffNob0pHag_AjtPvM0t3WZIj8UftLOxznT63a6fwc19LqvldMFjAYkNDppEzAqVOgG6wrFUERJZhBapD1LJGMBAAupKIuN4AT7fAEXEjf3:1uC9h1:QqbVtxSrSi3cUWt2UMwJdndr5qWUSzVG7Gn-9O64u2I','2025-05-20 04:14:07.575871'),('3pry47cofokdzitaht83jkgikphqompu','.eJxVjMsOwiAQRf-FtSEwDI-6dN9vIAOMUjU0Ke3K-O_apAvd3nPOfYlI21rj1nmJUxFnAaDE6XdNlB_cdlTu1G6zzHNblynJXZEH7XKcCz8vh_t3UKnXb82BIRkGk9EEbXS23ib2KWgqMKBDS0EXoxwF1GA9DlhYZ2TvPSh3Fe8PE6U3Rw:1uC9gv:aO41NIr5SAdp-t5Csj4mC2Wrb_qqqMLYZPMBb3xkJJo','2025-05-20 04:14:01.998793'),('3r5g9egmnl1btjtrywd444v06cxi3ib7','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0CnZ:XqY-RKsmC-EtnMNrDltacEKJoyWTBLqtq64SFgOnJS8','2025-04-17 05:07:29.206951'),('3tauxfv2zf5q8rasswweyjkdwk6houqm','.eJxVjDsOwjAQRO_iGlle_0NJnzNYa3uNA8iR4qRC3J1ESgHFNPPezJsF3NYatk5LmDK7skGyy28ZMT2pHSQ_sN1nnua2LlPkh8JP2vk4Z3rdTvfvoGKv-7pEpR2BB1GSdyZBVKAHIgAlvdHWZAKtrJNojIhQrMaU91gSwmEu7PMF8vA3yA:1uBuL3:TShxI77Sx7qp7BNx0coWLH466EX_bgN655uQjVwwPIs','2025-05-19 11:50:25.903934'),('3uam4il9vzbhubezxkh8q5rxxhs204cz','.eJxVjEEOwiAQRe_C2pBQnDK4dO8ZyMAMUjWQlHbVeHdt0oVu_3vvbyrQupSwdpnDxOqinFen3zFSekrdCT-o3ptOrS7zFPWu6IN2fWssr-vh_h0U6uVbR0E7AIH1NoIlysQmJeQBEEQyipjssonATCYbj45wJE9gziNmEfX-ADXFOUE:1uBta7:SDi6rWvcbz6gYnhrROge2gmrPt9_hgb9v2rBqgvgCjY','2025-05-19 11:01:55.634118'),('3wfhwyr78ogwmkvsfagiccsn1yprdt8b','.eJxVjMsOwiAQRf-FtSEjjwIu3fcbyDAMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJUxYXoaw4_Y4J6cFtJ_mO7TZLmtu6TEnuijxol-Oc-Xk93L-Dir1-64AKDDsPKlDyrB2Ds8V4C4M-e9DBBCQCKjrn5Cy7gh6xOC7ICGYQ7w_2ljhw:1uBviE:0LnhQP-HxPckLGOFhtDm0EWWEGi5TBZ_mO8h7izUrJM','2025-05-19 13:18:26.780129'),('3yq57ywk1hm5pj9slxaf4f0q10awd1kh','.eJxVjEEOwiAQRe_C2hAoDlSX7j0DmWEGqRpISrsy3l2bdKHb_977LxVxXUpcu8xxYnVW1qjD70iYHlI3wnest6ZTq8s8kd4UvdOur43ledndv4OCvXzrfMpgQGiQkBCsyeLZIWSDxI7piHYcDAfkAOKBPbGBZJ1AEsp2BPX-ADOnOT8:1tx0bv:02f9Dq98EdPHY9J53Xv8ourdsUjq4Wj9S_ch5vq-PpE','2025-04-08 09:30:15.137236'),('3z7g08hg754mqe786txie8uc8ggi4zd3','.eJxVjMEOgjAQRP-lZ9NY2C2tR-9-A9llt4KaNqFwMv67kHDQZE7z3szb9LQuY79WnftJzMW03px-S6bhqXkn8qB8L3YoeZkntrtiD1rtrYi-rof7dzBSHbc1hhg5NF0DKAKdT0jiFTnClhRaxsSdAxri2TlCScgAkWNoRcE7NZ8v_n43-w:1uCE1E:KRS8BDhoOGYLNyALz82EzbNkFHy5lcCG6lW6moLCK9M','2025-05-20 08:51:16.176121'),('44gpje5iv3pvb4a422xvlb66bl12hcjo','.eJxVjMsOwiAQRf-FtSFAYQZcuvcbCI9BqgaS0q6M_65NutDtPefcF_NhW6vfBi1-zuzMJDv9bjGkB7Ud5Htot85Tb-syR74r_KCDX3um5-Vw_w5qGPVbRyWtgmxSRMgOwWLRTmllSDsDMNGEEsjqIoROxSSUwRaJrpDAiTCz9we6xDcL:1tVNQg:CZdgmDEpfbVTtXa_rbQWf0C5ooAXV2KB1DBmhPTJfA8','2025-01-22 09:42:26.660565'),('46xrbirionuzae4k1p5b1tnhx2hq6g9a','.eJxVjDsOwjAQBe_iGll4_YmhpOcM1q53jQPIkeKkQtwdIqWA9s3Me6mE61LT2mVOI6uzAmvU4XclzA9pG-I7ttuk89SWeSS9KXqnXV8nludld_8OKvb6rX0oIMZlysUbHKyFCEyFY5ZjcdbwwA4RSQRP7CyJBwghgivEho1T7w9SRjlC:1uC9o5:QgnTCMTG3ET_HXjlE_RLH9fWeL9KLrJv39aj_V1fEd4','2025-05-20 04:21:25.557677'),('4e168p8e2knny5yi34q70y46dkvjh5cc','.eJxVjDsOwyAQBe9CHSEWIz4p0-cMaM2ywUkEkrErK3ePLblI2pl5bxMR16XEtec5TiSuQnsvLr90xPTK9VD0xPpoMrW6zNMoj0Setst7o_y-ne3fQcFe9rUJlMJgmDgYyNoy-cAmICnldji4rBLB4BxYi6wxWWBAx1mTscqB-HwBSbg4sg:1uCAjg:o-_5ArIe76fmYkJ2qZLDJvbukumRNywZ0j9pJjzmufQ','2025-05-20 05:20:56.592367'),('4ge69pbsq1d5foeou98j75qww0b3t5nx','.eJxVjDsOwjAQBe_iGlmxd_2jpOcMlj9rHEC2FCcV4u4QKQW0b2bei_mwrdVvgxY_Z3ZmoAw7_a4xpAe1HeV7aLfOU2_rMke-K_ygg197puflcP8Oahj1WxdnhSxYrKCorZigCCNJKFJOgrMxqmI0JkTSMJmiJNkcFAZEDVZAZu8PFnU3ZQ:1uCK8z:xmRykGKAjRj_G7JOZFu3SRuXQMGdPX8VjdcYtiCg7Rc','2025-05-20 15:23:41.241313'),('4knxuahw9x3ckwf7pc4r2g2hlfr0rg95','.eJxVjMsOwiAQRf-FtSFQHhaX7vsNZIYZpGogKe3K-O_apAvd3nPOfYkI21ri1nmJM4mL0G4Up98VIT247ojuUG9NplbXZUa5K_KgXU6N-Hk93L-DAr1866zs4HMwrLPXChNZqwE8k1OGXAp89pqJLQGgy4P3aLIzxoyoQmJA8f4AQ1o5Hg:1uBz1l:Fy_tTmAxrDcP7V_ffdSg7SGJ2L0uWqkBpbBmfL-FsHY','2025-05-19 16:50:49.736865'),('4sowqfur65r8ye3hmzcnanqo5hsbnsoa','.eJxVjDsOwjAQBe_iGll4_YmhpOcM1q53jQPIkeKkQtwdIqWA9s3Me6mE61LT2mVOI6uzAmvU4XclzA9pG-I7ttuk89SWeSS9KXqnXV8nludld_8OKvb6rX0oIMZlysUbHKyFCEyFY5ZjcdbwwA4RSQRP7CyJBwghgivEho1T7w9SRjlC:1uC9ne:CruRe9gr5t9uMO31wShd4WFOEBEwlU22bkifskf4kps','2025-05-20 04:20:58.135713'),('4xgmvo09b8cz5oonwcmiwm56pc0i99j0','.eJxVjDsOwyAQBe9CHaHFLB-lTJ8zoAXWwUkEkrErK3ePLblI2jczbxOB1qWEtfMcpiyuwoG4_I6R0ovrQfKT6qPJ1OoyT1Eeijxpl_eW-X073b-DQr3stU0KMWqTB-Y0Ao4ePRmbjPWkYNAuAxhAjxrYmV1Fx16RtaSRLRjx-QLtxDbb:1uBu1y:8bSniQbQIelObTQN7jk6MqRpa7nNV6-enIJEoRy7HKE','2025-05-19 11:30:42.079041'),('501gxdqmv5arnxy0d0d7yrvmdpmrw4k2','.eJxVjMsOwiAURP-FtSE85AIu3fsN5F4eUjU0Ke3K-O-WpAtNJrOYMzNvFnBba9h6XsKU2IUpyU6_IWF85jZIemC7zzzObV0m4qPCD9r5bU75dT26fwcVe93XBMbt0hDRCzBKFyMLWMpaJQTvrBbirF1RjgpIo601RSjKFv1wwz5f2Po2_A:1uBufA:Pri5gTt1MjCKXsGGoZoJ35ne_X-PPuX2l7jNr34MgMk','2025-05-19 12:11:12.121885'),('51ay3suwghgg5ha57zyc6l58uapu4sgw','.eJxVjEEOwiAQRe_C2pAMdAq4dO8ZyMBMpWogKe3KeHdt0oVu_3vvv1SkbS1x67LEmdVZwRDU6XdNlB9Sd8R3qremc6vrMie9K_qgXV8by_NyuH8HhXr51gHB8WgQvHMTIoplK2IIZbRoGWjwEqYgCRggmOSJwBm0GUM22SX1_gAWuTfs:1uCGTq:Ob1YdVYQFeSZfVxajtZeNaN1JgHn9xvPtt7XYTPSJSE','2025-05-20 11:28:58.757882'),('52zlyh8u16fu6mz1wrbuo5ayaitr24cr','.eJxVjEEOgjAQRe_StWmg0ymDS_eeoZlOB4saSCisjHdXEha6_e-9_zKRt7XEreoSx2zOBhDN6XdNLA-ddpTvPN1mK_O0LmOyu2IPWu11zvq8HO7fQeFavrVTJ4QkCthR8H3vUmbCRgZCDwh5cCodKg6N88530rcJlBmAQsgtmfcHIBI3ww:1uCK0J:a-ZTsYEKpK2oO5x2E15dn_nuM1DEahp6Gs3kh24en0o','2025-05-20 15:14:43.733271'),('576gfukjesceq8ae360y01fc2zx7snh6','.eJxVjEEOwiAQRe_C2hAGkIJL9z0DmWFAqoYmpV0Z765NutDtf-_9l4i4rTVuPS9xYnERoMXpdyRMj9x2wndst1mmua3LRHJX5EG7HGfOz-vh_h1U7PVbnyGwdopCMsGCyo6HwhqtH1iBp-x8UZ5KCsZ4yBYCFCzJOLQIwXgS7w_3YDfc:1uBmkb:tPTiExDZbYCH_h5da6ajY65DuxqQpmAnGatkxYbw05s','2025-05-19 03:44:17.814295'),('57wb02zap32ujs95vigk13r87lvn4u3v','.eJxVjMsOwiAQRf-FtSE8CgMu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmWhl2-l0jpge1HeU7tlvnqbd1mSPfFX7Qwa890_NyuH8HFUf91gIpJyEhI1qSjiSRIg9SCVdkAm3MBCUnb2yaNDkAH4vS1hVRTJEI7P0BQdA4eg:1uCCj2:ovOTxgS2-6fMuQ3PCjUEf__CLaLL69zd1W_j11B-Q1g','2025-05-20 07:28:24.316757'),('5bf661vpuexy8vj571ra0tuyn049eq0u','.eJxVjEEOwiAQRe_C2pBCZwBduu8ZCDCDVA0kpV0Z765NutDtf-_9l_BhW4vfOi9-JnERymhx-l1jSA-uO6J7qLcmU6vrMke5K_KgXU6N-Hk93L-DEnr51qgJyJjzEG00DjDwYJlUSsDorAF2BpTOCR3TiAgZNFiMRJqzzmEU7w8kKDhM:1uC9BO:cerhgAHpf6Bs8xESn3sb-bBpUxIXXkf-HXH0u4kc1Zk','2025-05-20 03:41:26.147836'),('5byo7xvz7d3j4vcgg32iamy1xwlhc9at','.eJxVjDsOwjAQBe_iGln-x6ak5wzWeneFA8iW4qRC3B0ipYD2zcx7iQzbWvM2eMkzibOwOojT71oAH9x2RHdoty6xt3WZi9wVedAhr534eTncv4MKo35ro8hALJE9I5c0aQxIFNBGj4osKdATJQVWu0iJA_jiPAWDqSinTBTvD0xUOI4:1uCBXF:kFrdfPK5KnStYiZVbuXQGz-DmISpsoIqkc8XaYiouLQ','2025-05-20 06:12:09.113274'),('5c2vocul5pba45wht2eor6tp8k479lcc','.eJxVjMEOwiAQRP-FsyEgWMCj934D2V0WqRqalPZk_Hdp0oPeJm_ezFtE2NYSt8ZLnJK4CmOsOP1SBHpy3av0gHqfJc11XSaUuyKPtslxTvy6He7fQYFW-jp7pzVBMIE8WQw9doAmOzQOFQysssqWLWVmDUj5TBfFXmHwmPQgPl9K5TlV:1uEsxG:iaO0poRp0BLzeM59_j1xwEJP2FF1OWOuKv0IkwQ2orU','2025-05-27 16:58:10.386532'),('5cxt6dsaj2vq645f1eysxoalaaezj8se','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzul6:9uC-nM85AkijxC0pNDzAtCUVYA1PEkSSgsQlxn5gTUk','2025-04-16 09:51:44.377631'),('5cykdqkgda8dyi9zgpljhuugemdd7p6r','.eJxVjEEOwiAURO_C2pAPrUBduvcM5A8fpWpKUtqV8e7apAvdzntvXiryupS4tjzHUdRJ2WDU4XcFp0eeNiR3nm5Vpzot8wi9KXqnTV-q5Od5d_8OCrfyrUEINAQkghcwJWe97QM663CUgTkHoevAzltje2ZnAHgYSEcUSNT7Az5hOKE:1uCAc3:Ylr7MwuFq-oTpfCjsbLh4cOTOgHt-tWZCLyy5mM9_iM','2025-05-20 05:13:03.360831'),('5fq9tmupfj503h1c1v7cl0wv3oxhrib2','.eJxVjEEOwiAQRe_C2hAZYFpcuu8ZyMCAVA0kpV0Z765NutDtf-_9l_C0rcVvPS1-ZnERbhSn3zFQfKS6E75TvTUZW12XOchdkQftcmqcntfD_Tso1Mu3RsLI9myDyxGREzirObFNYAE1KAB0IWcVhmgYHPCQDSg95pCtQXLi_QEWbzgg:1uCAdz:ww9KgNp0YwNBpgfVxhPlmqgRm3d8EdkX6AyNKr7Lff0','2025-05-20 05:15:03.337571'),('5izo698fmc0ijbqwgk0egr7f56ud2ap1','.eJxVjMsOwiAURP-FtSE85AIu3fsN5F4eUjU0Ke3K-O-WpAtNJrOYMzNvFnBba9h6XsKU2IUpyU6_IWF85jZIemC7zzzObV0m4qPCD9r5bU75dT26fwcVe93XBMbt0hDRCzBKFyMLWMpaJQTvrBbirF1RjgpIo601RSjKFv1wwz5f2Po2_A:1uBv0c:915KwAZS10eIJjhg5IoBR6fOXNnvjH1wdd8Rz3ozV2s','2025-05-19 12:33:22.818604'),('5k07nyaef9c68s5bx8i5hgsoobpjjhps','.eJxVjEEOwiAQAP_C2RCy0JX16N03kGUBqRqalPZk_Lsh6UGvM5N5q8D7VsPe8xrmpC7KglGnXxpZnrkNlR7c7ouWpW3rHPVI9GG7vi0pv65H-zeo3OsYuwLFJWO8L0zoSjRgWIAk-Yxn5y1PZCdLwt4KWoiI5MRhyYUQovp8AR-LN-0:1uCCCm:gW08nyzP6eqy8Qqf8GFUFx_PG5uUw2kIAou-Q0eXaKk','2025-05-20 06:55:04.971585'),('5kagtrdjl3n40rwvwkpil9o2pkwjsh7x','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzunT:Z8GYLPigoSaok0d8nvgbtDlYJgAbkPE4AdbtTT5bm9U','2025-04-16 09:54:11.691773'),('5ofe941pgtmmv82id9q8ix11uva9ndkj','.eJxVjM0OwiAQhN-FsyHLAhY8evcZyC4_UjU0Ke3J-O62SQ96mmS-b-YtAq1LDWvPcxiTuAjUgzj9tkzxmduO0oPafZJxass8stwVedAub1PKr-vh_h1U6nVbq0IRorHZkAVltiCH3mokr4HhzBadA8JM4AYCDSUrRTolRl8MO_H5AiTpOA8:1uCB4g:ZKxFPA0kp3Gx5s9kDXNC68JS1ogPrkvLXwSO-2L2P2I','2025-05-20 05:42:38.008004'),('5r1q3cjxeuwgvmppz0dzpp3uy6lnvwtx','.eJxVjDsOwjAQBe_iGln4R9aU9DmD5V2vcQDZUpxUiLuTSCmgnZn33iLEdSlh7TyHKYmr0FacfiFGenLdTXrEem-SWl3mCeWeyMN2ObbEr9vR_h2U2Mu2pgzanlEpGoxzyB6IQEPWbAdjnDWsPPEGGR2xR0pWm4tPBjIojEp8vg00OHM:1uBvp7:VkzeIGPodftEdZnZF0BrbDKbaff4DONd6Hdp0nhqQes','2025-05-19 13:25:33.026407'),('5r94meifnpw79i894fdbcodp7ynyvd0a','.eJxVjDsOwjAQBe_iGlm7iTa2Kek5g7XrDw4gR4qTKuLuJFIKaN_MvE15Xpfi15ZmP0Z1Vdaoy-8oHF6pHiQ-uT4mHaa6zKPoQ9Enbfo-xfS-ne7fQeFW9hrEdZY4M2JCh-gGEJMNkk0DCxBmCn2G1BH3wA4MkNhsouzcoYnq8wX4ADep:1uBuD3:4QS-tuCYLCNQ57m3WlKDn_kf0NJoAOO6kncafeaJ7n0','2025-05-19 11:42:09.682342'),('5sr4sidu5slwhxwas959ju8cpnegfvzk','.eJxVjDsOwjAQBe_iGlnYqzUxJT1niPZnHECJFCcV4u4QKQW0b2bey_W0LrVfm839oO7sANzhd2SSh40b0TuNt8nLNC7zwH5T_E6bv05qz8vu_h1UavVbG2DHjJjJDMMxaFLF2MWSUDFJRk1CGZiTgbLYiUJBjYWhI5FS3PsDIoE5jg:1uGrNs:dyY6yykLvPy2vrj_FGcR_iYQOac1aLhOnFVSkdRIMak','2025-06-02 03:41:48.422177'),('5xrird0w453z89qq0v1sfwiw3gl78w9o','.eJxVjDsOwjAQBe_iGln-bWxT0nMGa-3d4ABypDipEHeHSCmgfTPzXiLhtta0dV7SROIsjHbi9LtmLA9uO6I7ttssy9zWZcpyV-RBu7zOxM_L4f4dVOz1W2cf0GudwWqK7AujH6AM0QIy2lKURxpHZw1hJOWCDQ604oyglIkA4v0BOfw4LQ:1uC9Y2:eaD23zBHtZh7yYwJvhveggMi4axYbKgNieMrGAOsIzk','2025-05-20 04:04:50.815213'),('5zs9xipy728xnay0podnenfdevd1e0ta','.eJxVjDsOwjAQRO_iGlle-U9JzxmsjXeNA8iR4qSKuDuJlAK60bw3s4mE61LT2nlOI4mrAO_E5bcdML-4HYie2B6TzFNb5nGQhyJP2uV9In7fTvfvoGKv-7pwIEIuGrI2NrOxAApiADaglC_aMKOLe3JIukDIMQaL4HJw1vkoPl87wjfy:1uC9AU:GFc4jrbZkt2gehAcPUgB9YmBUDqKEqa6pfVxfEplHqM','2025-05-20 03:40:30.088200'),('60a2vtzzpux5ok450706cr7podgx63ov','.eJxVjEEOwiAQRe_C2hAHGAou3fcMBIZRqgaS0q6Md7dNutDtf-_9twhxXUpYO89hyuIijBen3zFFenLdSX7Eem-SWl3mKcldkQftcmyZX9fD_TsosZetRkjOKwDMSnu-ObbGA1IczuAAWLuUiZS37AeyG3PGIBtiJI3RGhSfL-i5Nzg:1uBsB6:08uGMSEEQ30sIoYU4eJyZN5jVdt7sjkM7PMICVEGRpQ','2025-05-19 09:32:00.037130'),('64ey8rasb304aobzvlyb6yifucyrilvy','.eJxVjMsOgjAUBf-la9NwW2ipS_d8A7kvBTVtQmFl_HclYaHbMzPnZUbc1mncqi7jLOZsHPTm9LsS8kPzjuSO-VYsl7wuM9ldsQetdiiiz8vh_h1MWKdvDV7o6nv0oiSpYcXYdkgaIxG3yMDCGoLzvSTQhl2UxAFCG6HTRsG8P2vQOU0:1uC9if:pQdZ3C3yoFi6jjjbh2_1nbJblmLMuW3UYr1ajhlUCJw','2025-05-20 04:15:49.254613'),('65kk1ysiih6iydg3e8w3j5izfmfbptcx','.eJxVjEEOwiAQRe_C2hCEDhSX7nsGMgyDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwJ3ER2orT7xiRHlx3ku5Yb01Sq-syR7kr8qBdTi3x83q4fwcFe_nWitk6iJlJZ2NHyI61zYTeEsAwZDLM-qyj8mCYPCLEAb1yeowJ0Sjx_gAorzjI:1uBneo:ZmmhQhzLuYeYxaL-8fC_qtPkS9uXejAsJqdgXiNY2_I','2025-05-19 04:42:22.393802'),('67dzo0yrpy59dgomw3ko4t7zubk3kklp','.eJxVjEEOwiAQRe_C2hABB6Yu3fcMZIBBqgaS0q6Md7dNutDtf-_9t_C0LsWvnWc_JXEVCkCcftdA8cl1R-lB9d5kbHWZpyB3RR60y7Elft0O9--gUC9bnVkrdImyMzZhQKucI0ZtwFDWHHkTmCyDOccckcPAZCINcHHZoAXx-QJSwDlH:1uByr5:zvla3zsc-STazHh2Wm9gPbwvja3RsmPmsO9gCDoqMfE','2025-05-19 16:39:47.922890'),('697ix1cp03i1v05dkolbg2t5jpjsqq71','.eJxVjEEOwiAQRe_C2hBKKQwu3XsGMsOAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEWfhCn35EwPlLdCd-x3pqMra7LTHJX5EG7vDZOz8vh_h0U7OVb2xEYYfDWOZt9YsMGDRBjtgonbSYLiJqUQxdVzpl41JiAkqeRwIF4fwAXZDjc:1uBuK8:d6039-ZTKiAImdV7Xr_aEh3GHquUqiIpnFWhWY4TGpk','2025-05-19 11:49:28.150741'),('6b91rgh7jmp35e8cgfba0e24p2djh19w','.eJxVjDsOwyAQBe9CHSHA_Jwyvc-AFnYJTiKQjF1FuXtsyUXSzsx7bxZgW0vYOi1hRnZlcvTs8ksjpCfVQ-ED6r3x1Oq6zJEfCT9t51NDet3O9u-gQC_7OqPXIyKlDGAdeR9BqkTgrFCkEJ0yFrI0YohWaBDW6EGmnUtAMmlgny9j3zkg:1uCAXL:34540ZT0c_QLdK5ZguXzf0xeA9Y1bub1lU6kZJEWtYY','2025-05-20 05:08:11.173465'),('6eksawuv7he5oqd8iggr1w4dqfwskh5b','.eJxVjDsOwjAQBe_iGlm7_saU9DmDtf7hAHKkOKkQdyeRUkD7Zua9madtrX7refFTYleGCOzyuwaKz9wOlB7U7jOPc1uXKfBD4SftfJxTft1O9--gUq97TckBKMhaWgw6a5KYo6akRDRgsOCAEAcjk5WWqMQiBDnlCCDsSAn2-QIccDer:1uBvk7:mbmeXCZX2FSBIAlbdpx21_0Gz7neu6TAwbgK0D3cj-I','2025-05-19 13:20:23.735047'),('6nhspcaww49odbn468y9bqhn8sywhbmf','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBoHU:y2cah8dnzi6bz43SI0WdajLoWhhxyIBXOfGWC7X-FxY','2025-05-19 05:22:20.398835'),('6nsclt3gq4125kb5o96cs30801a99pju','.eJxVjEEOwiAQRe_C2hDKlNJx6d4zEIYZpGpoUtqV8e7apAvd_vfef6kQt7WErckSJlZnBQDq9LtSTA-pO-J7rLdZp7muy0R6V_RBm77OLM_L4f4dlNjKtzbdgMhIpvNI1nigofecTEIBhzZ7HtladEJ5dOS5jyYbiZ7AMmdg9f4AFrM4dA:1uCDj5:pqcR2mu-koNHHoAxT86MS89x5VIu4fV_uliaJFteDzY','2025-05-20 08:32:31.650261'),('6o505ewo6yj3gz0a8y19u7sgtdps6nwc','.eJxVjDsOwjAQBe_iGllx1r9Q0nOGaL3exQHkSHFSIe4OkVJA-2bmvdSI21rGrfEyTlmdFTirTr9rQnpw3VG-Y73Nmua6LlPSu6IP2vR1zvy8HO7fQcFWvrUTHMRBJg5igbBLPYEHL8wUIlqQLF5S6GP0bEwwYI24jiJwhwOSen8AWCE5Ag:1uCJpd:ibGkTxum64wjcVEDNFxb5pMpUnRStoq-EAk57qwK7r0','2025-05-20 15:03:41.072656'),('6sz899w7qo3xyec3k8os52fzxrf7xwxz','.eJxVjEEOwiAQRe_C2hCQwjAu3fcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXERfhCn3zFSenDbSb5Tu80yzW1dpih3RR60y3HO_Lwe7t9BpV6_NYK1Riv2kDVbMOxAu0hFlbMdNCZQJfnoiyMkBSZjogQFNTg0xpMV7w_yzzeb:1uBu4G:Lvsqd4r6Euh8FYdS7x92QUqRqFjibWv7EJEHeiRHTXo','2025-05-19 11:33:04.017439'),('6tk0groslpsqjjbv8dh7tv3p2wpw7dif','.eJxVjEEOwiAQRe_C2pDCAA4u3fcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXERyoM4_a6R0oPbjvKd2m2WaW7rMkW5K_KgXY5z5uf1cP8OKvX6rQ1qnTSWjOCMJSiKHHtfQJ-NiWQ5qWFAKsUCsnPRIQC7osAisIpKvD8ckze4:1uCAZq:1SRTjDHvMB4mxKjfEKfvljbz23OwRjtqtiXvlRp83Lg','2025-05-20 05:10:46.345071'),('6txyp4hrvlv6wob4q1tl89548qem6k0c','.eJxVjMsOwiAUBf-FtSHQwqW4dO83NPcBUjU0Ke3K-O_apAvdnpk5LzXitpZxa2kZJ1FnZTuvTr8rIT9S3ZHcsd5mzXNdl4n0ruiDNn2dJT0vh_t3ULCVb80CjLkHZ0IyProBYpDoc-gHimTJADo2TOwFfBJwzC473wFGBLKo3h8zzDih:1uC9DI:O41TBk6Kg5M5hbZfcobCxzB9J9RfO_wYf3RT9IBARyc','2025-05-20 03:43:24.432983'),('6y2o21gkl7hkdusfy5k8ps2akfe7fb6p','.eJxVjDsOwyAQRO9CHSGMjNlNmT5nsGCXDU4ikPyprNw9WHKRVCO9eTO7GsO25nFb0jxOrK6qc15dfmkM9ErlqPgZyqNqqmWdp6gPRZ_tou-V0_t2un8HOSy5rZOkYSBngNg6hB48kxUL0hMYh4LeWoMdOBbvEFuQJB4goG0sivp8ATDKOIA:1uBz8q:dhgSnzDke_HpZ0ThIcFi11H-hrufPVVTZzTot3lIy1A','2025-05-19 16:58:08.702336'),('6zuhdwdk9spa5yahq7mwjuagt9fmrll5','.eJxVjMEOwiAQRP-FsyFAC4hH734D2WVZqRpISnsy_rtt0oOeJpn3Zt4iwrqUuPY8x4nERWgvTr8lQnrmuhN6QL03mVpd5gnlrsiDdnlrlF_Xw_07KNDLtjYagwrosxkJjaUz80jKGb0FWNaYeGA_WG994ISaLWWnGIiCC9aD-HwBG2s42Q:1uBtOT:XHkbS00diolRdZGQW3FXWKBCnjMGY38i1HD-GfFCcng','2025-05-19 10:49:53.989430'),('71js8oefgsf1q5p504kd3brrjfdb9up5','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0DYN:A3adIWY7Qv4Vkrnp7nWdAaaKJ5NxL4Tef60bmtkcmkk','2025-04-17 05:55:51.505219'),('76rm6lahic99abiywqgxadkueypvw5yv','.eJxVjEEOwiAQRe_C2pCBhpni0r1nIMAMUjU0Ke3KeHdt0oVu_3vvv1SI21rD1mUJE6uzQlSn3zHF_JC2E77Hdpt1ntu6TEnvij5o19eZ5Xk53L-DGnv91pkG8AMlodFgYRIiKUAZCNkDZuACpjDaaHKxFjw4TA4SOz8iiqj3BwVyN-o:1uC9UH:XpZzVsJRS5wnC-dy6sOeX1Imk2RO-BqJz3ynLQK3dOs','2025-05-20 04:00:57.492767'),('7aril4rdyhnlyw0klgx4lo3ngisuvxs6','.eJxVjEEOwiAQRe_C2hAoTpm6dN8zkJkBpGpKUtqV8e7apAvd_vfef6lA21rC1tISpqguCqw6_Y5M8kjzTuKd5lvVUud1mVjvij5o02ON6Xk93L-DQq18awSHXQfkxCDn3gxIGdgk4yEzDnL2BOzRR2u8YJfJJc429cIWMlpR7w_6ozg-:1uBtLP:ggSKPacy06SFDmJkFaqVgEKYxjaVXeOPvyH8sg61PiI','2025-05-19 10:46:43.795570'),('7eazg1cj0p1lo1jp6tveb03deo5rztry','.eJxVjDsOwjAQBe_iGlkxiT9Q0nMGa737jAMoluKkQtwdIqWA9s3Me6lI61Li2jDHUdRZOa8Ov2MifmDaiNxpulXNdVrmMelN0Ttt-loFz8vu_h0UauVbG5_I2EBiQSFTly16yQ49-x6DsxgCO3gkpO5ohYRPwaEbwAbsU1bvDz3nOcQ:1uBvGK:dVgF5awtDI8hs3Z93U0xsDa7umtrJxnaFBHsJXQ6yfI','2025-05-19 12:49:36.673537'),('7h1vxazd3yyse8qlj46n5tfwjlvac1tf','.eJxVjMEOwiAQRP-FsyECbgGP3vsNZGG3UjWQlPZk_Hdp0oMe582beYuA25rD1ngJM4mrMMaL0y-NmJ5c9ooeWO5VplrWZY5yV-TRNjlW4tftcP8OMrbc1864SVtgBwkMW29Qqc4sR6_TAGy1ZwWDsfEMTHRxkaFHwIm1ImTx-QIRjTf-:1uCFZo:PzCdQt_vQUiSZWktfaEqbI82v_nSPn0J94_y7Ix9nCo','2025-05-20 10:31:04.903016'),('7iu2vlob8y09dm6r1l0ghe8atf7czsm0','.eJxVjEEOwiAQRe_C2pAMTKG4dO8ZCDMMUjU0Ke3KeHdt0oVu_3vvv1RM21rj1mWJU1ZnZQHU6XelxA9pO8r31G6z5rmty0R6V_RBu77OWZ6Xw_07qKnXb11MYRMCOggeZMCxCFhk64uRUCg7QxzAWw44IIkg01iQ0Vj24nxS7w8qnjiE:1uCBMv:Lopxrs1ypCANs0oU7y7MTjk2J0LFpL3Pa5NNt2p1xqI','2025-05-20 06:01:29.092479'),('7llygy9jt9pq4vlah3lhnpmf3lovirww','.eJxVjDsOwyAQRO9CHaHFsHxSpvcZrGVBwUkEkrGrKHePLblIypn3Zt5iom0t09bzMs1JXIVWQVx-20j8zPVA6UH13iS3ui5zlIciT9rl2FJ-3U7376BQL_uavXLegSOlySkX2IRgh4gpMlpklRFtcnsCDQBIBgwaY60fwEcOID5fBw026A:1uCBwa:nTf14RAPTC0XdkXQ5Ki3xwZ8O159qry3NVmrdAekcE4','2025-05-20 06:38:20.736617'),('7ns08syxomniwwuy69u2gwenlp8xfjts','.eJxVjDsOwjAQBe_iGlnY8Zo1JT1niLwf4wBKpDipEHeHSCmgfTPzXqbP61L7tencD2LOxmEyh9-VMj903JDc83ibLE_jMg9kN8XutNnrJPq87O7fQc2tfmskUo4E0asP2QGWyMcCLjMJoFBwiQsAxYBdd3LK3gdJih5iQoli3h9KSjiC:1uC9S3:UR6_LuC5WxbqYD2oWaQM-t5nhYH6uq4z-Ev3E2x06iY','2025-05-20 03:58:39.675513'),('7x063uclghnl7svaype91iu5w8whokfu','.eJxVjDsOwjAQRO_iGlnesP5R0ucMltdecADZUpxUiLuTSCmgG817M28R4rqUsHaew5TFRQA4cfptKaYn1x3lR6z3JlOryzyR3BV50C7Hlvl1Pdy_gxJ72dbIxF7fMg9MwJ5cAqsSA57ZEPqEeUDtAZLdEhtE54w1bDQpjFo58fkCSSw4GQ:1uBwWR:g1kTP936lD98IeVxi7B41HCnKJcyrhy7UqQiRWjlZ2A','2025-05-19 14:10:19.379280'),('7zj14trh06b27i57agod7p5whhtwj29n','.eJxVjEEOwiAQRe_C2hAo0AGX7j0DYWBGqoYmpV0Z765NutDtf-_9l4hpW2vcOi1xKuIsAojT74gpP6jtpNxTu80yz21dJpS7Ig_a5XUu9Lwc7t9BTb1-68GwJUsFmQz7YJzKJqDS1rEeANwIKitPVNhDNuwgj5g8sg7BsrYg3h8Vfzgr:1uBukD:fxrwdLhrHUvsMaataluaR82T7pcNn3vMvuC7njVe18Q','2025-05-19 12:16:25.147174'),('80mktzdwu0eknhpnczrutrp5qbfq3j09','.eJxVjEEOwiAQRe_C2pABhIJL9z0DgZlBqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xInER5gzi9LvmhA9uO6J7ardZ4tzWZcpyV-RBuxxn4uf1cP8Oaur1W2tiV7xV7AdlAtuiMXijE2oKhHoAMBY4KafRZYUBCiqjIFsy3tkSxPsDI6g31A:1uCFjy:vrozWIKXSwmXtsGZpI6KgF6ksBODKmbCw4ka2WFjjdw','2025-05-20 10:41:34.992042'),('8189qm55qbnx31qy20ba6kayucm0b046','.eJxVjDsOwyAQRO9CHSFYzC9lep8BLbAEJxGWjF1FuXtsyUXSjea9mTcLuK01bJ2WMGV2ZaCAXX7biOlJ7UD5ge0-8zS3dZkiPxR-0s7HOdPrdrp_BxV73dcKBEGWRaJBiSSlldqYjMVpsB4GdIMREJWlCOg9FrEnRyVqSlZ5YJ8vHa84Lg:1uCCDr:zz1fTVXSOGicieHn704fueHoIsDWAotN7362dPbv9FQ','2025-05-20 06:56:11.574030'),('81usenvnp0x7r6do2l0d7tpzj6x3nfla','.eJxVjDkOwjAUBe_iGlleMPanpOcM1l9sHECJFCcV4u4QKQW0b2beS2Vcl5bXXuY8iDora47q8LsS8qOMG5I7jrdJ8zQu80B6U_ROu75OUp6X3f07aNjbt6aEAMVGFF-AhcWHWCM5Zu88R0hQg0GbnI0eoEpMhgwFOqVQOQCo9wdB2Thc:1uBvW2:ubIvOCNmp6dfwSBRpyE4AXfjkoBZLbPgTQgdY_tKpqw','2025-05-19 13:05:50.815671'),('82i1pwqlgpzu7bdke6jo7pk7rqhebput','.eJxVjMsOwiAQRf-FtSEwPAZduu83EB6DVA0kpV0Z_12bdKHbe865L-bDtla_DVr8nNmFgUV2-l1jSA9qO8r30G6dp97WZY58V_hBB596puf1cP8Oahj1W5PIgGQlGBsdgDhLoR2CcVpIslAQXbFkEiKKrCkhYFEYlNIuBV0Ke38A9xM3Mw:1uCAPM:obK6p_qzjr076z35Peio8pz0Uh7Hw97Uirh-bwD8FxE','2025-05-20 04:59:56.800886'),('85af0zuv17xlgu4ptfxz4hi7a8aszvmb','.eJxVjDkOwjAQAP_iGllkcdYsJT1viPYKCSBHylEh_o4spYB2ZjTv0PG2Dt22-NyNFi4BCMPhlwrr00tV9uByn6JOZZ1HiTWJu13ibTJ_Xff2bzDwMtSxAbpJIjmeKWNuvGHSnE8OWSUlVFHzXpHASbhFQmi9sV5ZwIjC5wtCOTkb:1uCAxu:DFJTZYbzULP3pyIqUmYfGFodFhbtFcpg3XcCRIx3dNQ','2025-05-20 05:35:38.827866'),('882exke5e0zf6wyn992kkqe3ettv8g41','.eJxVjEEOwiAQRe_C2hBmgA66dN8zkIGhUjVtUtqV8e7apAvd_vfef6nI21rj1soSR1EXBeTV6XdNnB9l2pHcebrNOs_TuoxJ74o-aNP9LOV5Pdy_g8qtfmsbiJ1xrkv2nMFKSMAwALqMAEAU0mAyuuIQBTyjDYYI2WYhlM579f4AAZ82_Q:1uDZZa:VrH10w0J3YPn_08FVS0B4BXeViIEVYCSSG7DhZur0Qg','2025-05-24 02:04:18.596677'),('89bta2zvgo941j6wvy2o1mg5ku2tevg0','.eJxVjEEOwiAQRe_C2pBhBKEu3fcMZGAGWzU0Ke3KeHdD0oVu_3vvv1WkfZvi3mSNM6urQu_V6XdNlJ9SO-IH1fui81K3dU66K_qgTY8Ly-t2uH8HE7Wp10TAGRyhd3i22RmLjIZTyd5IGcAbyHyREAgtIjHAAEUEbCg8IKvPFzndOH8:1uCAYm:dbEPnYzI2fSowqEQNcX2xdAF46MnnJF_nwGqyjH5es0','2025-05-20 05:09:40.405014'),('89w286lzuns1vu3pqpgq4q07cz61punf','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uGrAD:EHjTpZhUxp6zUYd0W0FwnaehfBXLhJA76uzcevtrmYE','2025-06-02 03:27:41.940264'),('8gad56dokdc15t15c34tb44wjjhs4iiw','.eJxVjEEOwiAQRe_C2hCBUsCl-56BDMyMVA0kpV0Z765NutDtf-_9l4iwrSVunZY4o7gIr8Tpd0yQH1R3gneotyZzq-syJ7kr8qBdTg3peT3cv4MCvXzrlIkck81Kew3WeDKgQLFRyJ7Gsxs4YGA9JELPwZL2hpAyoBsVZyPeHzf5OWs:1uBvAA:2tYS4ihj6RBWNfAdK4o_7xztS2xnvRTVz2RskOo-cIs','2025-05-19 12:43:14.476776'),('8gyr635z2igvhkryur9ixy3zis3xsm2d','.eJxVjMsOwiAQAP-FsyHA8lCP3vsNZGG3UjWQlPZk_HdD0oNeZybzFhH3rcS98xoXEldhjBenX5owP7kORQ-s9yZzq9u6JDkSedgup0b8uh3t36BgL2OsZmeD16zA2kQY4EIaUHFGAqsdzBY1gkVnkk_BGR2MU8gJGYjCWXy-Gcw4EA:1uC9li:YhHxo7Z1s2M61EykUuwqmtiNt4cSothmgqX7wQlcYhE','2025-05-20 04:18:58.383071'),('8po0jawn0m9onzbkprsaexhja1t3adkp','.eJxVjEEOwiAQRe_C2hCgQwGX7j0DGZhBqoYmpV0Z765NutDtf-_9l4i4rTVunZc4kTgLA1acfteE-cFtR3THdptlntu6TEnuijxol9eZ-Hk53L-Dir1-a_ao2Sl2xbsRvHEZB8zakgoMplg0pLLKaWBPBpExaG0dcLAARY9WvD89Azhn:1uCA9S:k-zNBZ309YqFjat-5BMCTKTJgB0gp8PNItdse4g8ovM','2025-05-20 04:43:30.298671'),('8q783br5kkrx0nodrs9obrxl1lmks30u','.eJxVjMsOwiAQRf-FtSE4w6su3fsNZIBBqoYmpV0Z_92QdKHbe865bxFo32rYO69hzuIiAIw4_a6R0pPbQPlB7b7ItLRtnaMcijxol7cl8-t6uH8HlXodNaL3kdgDa0IsZ4xGJ-cdQMFkeFKatY2lkEpULFvlvII8xazQA7L4fAE0kDho:1uCA0R:Zf38shFm-b4FZMXK3ELCH7k5m06-HVDiqk-A16UAGCA','2025-05-20 04:34:11.587837'),('8rfl1komnyo3bizgvc9qabazd5uyga2j','.eJxVjEEOgjAQRe_StWnKDEOrS_ecoZlpp4IaSCisjHdXEha6_e-9_zKRt3WIW9UljtlcDFJjTr-rcHrotKN85-k22zRP6zKK3RV70Gr7Oevzerh_BwPX4Vuz6rmId0DsScFjS-TEcVBxXdCEUFIowBhAG5SuUAvSAvmixeeM5v0BOKU4mA:1uCJfM:98Q01AARko81Fk5dsXaKRqiwAUKvqU5SdZIFeTJUDnQ','2025-05-20 14:53:04.127705'),('8v077lmszi5xus3291mzhbnj71mtcyjh','.eJxVjMsOwiAQRf-FtSHQBzAu3fsNZIYZpGpoUtqV8d-1SRe6veec-1IRt7XErckSJ1Zn1XmnTr8rYXpI3RHfsd5mnea6LhPpXdEHbfo6szwvh_t3ULCVb20liJEweiQwAUJyzMAixNm70eaMXW8SQh6IR7C92fUBLA3OkM1OvT9SMTjf:1uCAYY:V4LFsm5UI23dVw_gUXkIvnifyHJiv0Aj3EVTGxBJ2Pk','2025-05-20 05:09:26.749348'),('8y06dpxx6lfbover611w3hw9z0fdhg8w','.eJxVjEEOwiAQRe_C2hCgMKUu3XsGMsMMUjVtUtqV8e7apAvd_vfef6mE21rT1mRJI6uzssGq0-9KmB8y7YjvON1mnedpXUbSu6IP2vR1ZnleDvfvoGKr3zo48IZ65B5dYUbMHWSkMkCUznofgChbQIiGJIahc5F9cSiRDAsU9f4ASUA5Iw:1uCgsQ:kwhaGMJT4Lv2arRapgodkqadU3DUyFm4TvqXpVyHlfE','2025-05-21 15:40:06.527676'),('8zivu4lc1j611vnkvlfz2foq39cpxkwf','.eJxVjEEOwiAQRe_C2pDSMjC4dN8zkAEGqRqalHZlvLtt0oVu_3vvv4WnbS1-a7z4KYmrUB2Ky-8aKD65Hig9qN5nGee6LlOQhyJP2uQ4J37dTvfvoFAre50HirrjECCwBdKAIZnIigAGh73KvRuQtbFOYwbEnWTDxI7ARGuc-HwBREM4jg:1uC9FM:CFdcySlH9gbaK9hF-1GyawxU8ZQ-7VIlHmigayiO4Vk','2025-05-20 03:45:32.861755'),('92crorufkxd76nviw238yshex8s7t731','.eJxVjMsOwiAQRf-FtSG8oS7d-w1kGAapGkhKuzL-uzbpQrf3nHNfLMK21rgNWuKc2ZlJr9npd02AD2o7yndot86xt3WZE98VftDBrz3T83K4fwcVRv3WXgpFWIop0pFIThtdMpLy2SkVhNEKJ59kEdn5YBM6sECQbKBgpiAte38AMw84QA:1uC99v:2Ix0ep0YeBRMuLilqdHzRsiKd_8aoOmW8kcsyi4puSE','2025-05-20 03:39:55.509793'),('94ejk1r29aog86d814c6tjjisw3p3p7c','.eJxVjEEOwiAQRe_C2pDpBAbq0r1nIAwdpGogKe3KeHdt0oVu_3vvv1SI21rC1mUJ86TOCsGp0-_KMT2k7mi6x3prOrW6LjPrXdEH7fraJnleDvfvoMRevrXJRJQsj5YNeo5ejBjLHkZBwxJhyIhZyBNBGkk8Wwc4EAI4yNar9wcnRDeD:1uC9Y2:OmJ7QC9S68Rj76VO_wCYh1p7y2Xyu7ZIVgXHtJoBrk0','2025-05-20 04:04:50.610365'),('94vno2hd2rrvehbq8e42ybv3djig5ok0','.eJxVjEsOwiAUAO_C2hDgUT4u3fcM5AEPqRqalHZlvLsh6UK3M5N5s4DHXsPRaQtLZlempGOXXxoxPakNlR_Y7itPa9u3JfKR8NN2Pq-ZXrez_RtU7HWMJ2_QWevBC-0mSUBRFyckgBaoRSHlhYnSeBUVSkyFQBVbbCbIvhj2-QL7uze1:1uCAbW:xpjKSyz4mSQYmQPoYVLSwZ8kUvBG42-utdsrZDl3Sfg','2025-05-20 05:12:30.594963'),('95240jet0c1unboxg0ly8mg5qbjfyhi1','.eJxVjMsOwiAQRf-FtSGFIg-X7v0GMswMUjWQlHZl_HfbpAvd3nPOfYsI61Li2nmOE4mL0EMQp981AT657ogeUO9NYqvLPCW5K_KgXd4a8et6uH8HBXrZagU52eTI-DwMlEflwpkheKO9Vo5NxhRoRAzMyvmNEWSLDFkrJrIkPl9KiTmi:1uCAzy:iivEF8U0zcYGKPoO10kFsXOZDbebp111XEiz-4O07m0','2025-05-20 05:37:46.687793'),('95pqcg8m2glyit4a44edxjnu7mnnhnkv','.eJxVjDsOwjAQBe_iGlmO1-sPJT1nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3Zm0iI7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rZ0FB8W6EHCioC0kQEsxFaMlIbqI1mQoiKkoLUErEsJFbYyBPCkh2PsDIyI3bA:1uCAfx:Sp3IfkWsIGBeEsTKV1XyhwUvhyl2Osr1KWTo8B8E4QU','2025-05-20 05:17:05.279369'),('983y966nqslud8bcg14g08ge04okqqnv','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uHZm8:tO4Xg-H0ss6XM2crB4VmCwPiB3wCZa_MiL4c2YEEl-A','2025-06-04 03:05:48.374258'),('98iy8yt7gzqdk320jj1bsucxfsytgjau','.eJxVjEEOwiAQRe_C2pDCAA4u3fcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXERyoM4_a6R0oPbjvKd2m2WaW7rMkW5K_KgXY5z5uf1cP8OKvX6rQ1qnTSWjOCMJSiKHHtfQJ-NiWQ5qWFAKsUCsnPRIQC7osAisIpKvD8ckze4:1uC9Of:D4vpsHm5saCNBofzcZkWrYrd4IpEM24GlERDnPkV00c','2025-05-20 03:55:09.755821'),('994k4xg4lrrez3jx954556kyzpw63z5l','.eJxVjMEOwiAQRP-FsyGBtVA8evcbyC67SNVAUtqT8d9tkx70Npn3Zt4q4rqUuHaZ48TqoqwP6vTbEqan1B3xA-u96dTqMk-kd0UftOtbY3ldD_fvoGAv2xoAyIyAzmWfh-yYxaA7g_HkDaI1KCltGQFHygaZBgqB2HEAyWzV5wtH0jmI:1uCAZv:WG-E7AbSmuaD--Q_FOYwgj77_byVxBHBPlPLBACeVI0','2025-05-20 05:10:51.081427'),('999lk7hoxqkgehmgyggi064pat7i29mp','.eJxVjMEOgjAQRP-lZ9NY2C2tR-9-A9llt4KaNqFwMv67kHDQZE7z3szb9LQuY79WnftJzMW03px-S6bhqXkn8qB8L3YoeZkntrtiD1rtrYi-rof7dzBSHbc1hhg5NF0DKAKdT0jiFTnClhRaxsSdAxri2TlCScgAkWNoRcE7NZ8v_n43-w:1uCAn6:8AvGD1WhPoTTDdOwFdZVtzbxyk0BX9lDGGjLbSmRY0M','2025-05-20 05:24:28.734242'),('9ab9h9b2drwmtrvg8uzhlj658s2kqsku','.eJxVjMsOwiAQRf-FtSG8y7h07zcQYAapGkhKuzL-uzbpQrf3nHNfLMRtrWEbtIQZ2ZlpAez0u6aYH9R2hPfYbp3n3tZlTnxX-EEHv3ak5-Vw_w5qHPVbk7GopQOKBnTOhDKTQYfkyUnjQXiRVCoS0VPxE8g4OQvKmeydgmLZ-wNFEzhj:1uCBJV:eDpoaABgKfIlyHpLNYp7ptI5qJZ-8aFItGsDUjvUisU','2025-05-20 05:57:57.023355'),('9bex3j07iedgks2xke4cz2gaqfs10r7q','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzuuy:rub04ZeCawVkEjPhMG0fSLcqAOkbRM2YDiQb7IKhzPk','2025-04-16 10:01:56.112825'),('9d76c0r26gca4kx7bc3wgi8650bcrv4n','.eJxVjMsOwiAURP-FtSFAefS6dO83kHt5SNVAUtqV8d-VpAtdTTLnzLyYx30rfu9p9UtkZyYNO_2WhOGR6iDxjvXWeGh1WxfiQ-EH7fzaYnpeDvfvoGAv37URWmAygGrOSriYnNV5AqBonUMkIBuMHak15GQJo56BQFilpJQTe38ACMs34g:1uBmvh:4J3D-g4hWquwkKINvg1BYwVNOx9LEvIhYSj_d7v0Q3E','2025-05-19 03:55:45.344401'),('9f6sqsphoy2a5iuxw9ule3ob5mf0brqc','.eJxVjMsOwiAQRf-FtSF0YHi4dO83EB6DVA0kpV0Z_12bdKHbe865L-bDtla_DVr8nNmZgZvY6XeNIT2o7SjfQ7t1nnpblznyXeEHHfzaMz0vh_t3UMOo31q6RDEFY8FqI7REJaeSBJHNQZWYAZQASQjWaYwWSadsC6IArV1Rhr0_KR03xA:1uCAny:dI0Obj9dhT6cLSh8o0q8FlEMOxStHcFILYAG3sZE9wA','2025-05-20 05:25:22.334155'),('9iwoie5spr2tgqkl6aw9egqvfva9ml90','.eJxVjEEOwiAQRe_C2pBOC53i0r1nIAMzSNVAUtqV8e7apAvd_vfefylP25r91mTxM6uzAoPq9LsGig8pO-I7lVvVsZZ1mYPeFX3Qpq-V5Xk53L-DTC1_azeAs0CCQhCMdYg4jSZSQHZxAJug7zsSCOQYMZLwaBGFY0odTpbU-wMo4Dis:1uBxyO:IM3q0IHY4uNwLcqIvzci8azEQoI1SQhVekMBJmZ3fI8','2025-05-19 15:43:16.927732'),('9l73dxflfc80z1mtojwcyicbu7hoclz7','.eJxVjMEOgjAQRP-lZ9Mg26Vbj979hma33QpqIKFwMv67kHDQZE7z3szbRF6XPq5V5zhkczHQoTn9tsLpqeOO8oPH-2TTNC7zIHZX7EGrvU1ZX9fD_Tvoufbb2ikQYChYKKEU16GG1oEvvvVBWhUKrqBrhIAYKZ2brCFIx7QFIJvPFx9yN98:1uCwlI:sy8zg7gFgRJqbQk3PxWBrghzOR-uo4TmHgEuxJ_Z_zM','2025-05-22 08:37:48.349961'),('9ll6nsnk6ivb6eqxwwefozw9gb3zfwjy','.eJxVjDsOwjAQBe_iGlnr9Z-SPmeI1vaGBJAtxUmFuDuKlALaNzPvLUbat3ncO6_jUsRVKG_E5XdNlJ9cD1QeVO9N5la3dUnyUORJuxxa4dftdP8OZurzUStLiAyhKPA2-ggBLUycnTeJkybCAAignTEWcyQApz3qQAam4ibx-QIDTTcD:1uC9AT:HJF7M--s9Hf3oZZoVz0xNEDxUUYxksq5Ww8yvKCQbwE','2025-05-20 03:40:29.644095'),('9oao7321f03uvcr2arzedcruzotbfaaj','.eJxVjDsOwyAQBe9CHSHYRWBSps8Z0PLZ4CTCkrErK3ePLblI2jczbxOB1qWGtZc5jFlcBWoQl981UnqVdqD8pPaYZJraMo9RHoo8aZf3KZf37XT_Dir1utfWIeiBOEUEb6JXBZjRJGCwhWJJPChHkLXVytvsPRJGw9olC2pH4vMFLw84AQ:1uCBOc:MRfbbKgWDA3GEA4yKzoHraCrbyjO-4J5Pf3hot1znwc','2025-05-20 06:03:14.863611'),('9q5utioekhsx2109cgm5794w68vm6hpy','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uB3XR:DgLwvSbvScoQk6x0I5ibh7Yllkscm0G0QxPn7nsriZQ','2025-05-17 03:27:41.256129'),('9spdmr32sjfji05o4euk8la03jj1zeyv','.eJxVjMsOwiAUBf-FtSHl1YJL934D4T6QqoGktCvjv2uTLnR7Zua8REzbWuLWeYkzibNQSpx-R0j44LoTuqd6axJbXZcZ5K7Ig3Z5bcTPy-H-HZTUy7cGD4q8JRo8BESdLBudHfgQnLcjW4fTwAjBs8tZA5mJQmCNxjoYkxPvDyDjOLA:1u0IYi:h6OaYclBu4kSH22RH6rGZqYHvI-INEiSuUpBVCW238A','2025-04-17 11:16:32.388808'),('9srh19wzl000d09gdvko8u95ralzditz','.eJxVjEEOwiAQRe_C2pAplKF16b5nIDMwSNW0SWlXxrsbki50-997_60CHXsJR5UtzEldlQWvLr8rU3zK0lB60HJfdVyXfZtZN0WftOppTfK6ne7fQaFaWt0xMg_Mjn2MtgdHIziDZDjnPhsEK533hocRyKDrrUEBBBRhdETq8wU3Ejgg:1uCBGd:KgrDMmPG0biXA7Gj7fs1IPFJ2H4bvwhn_cFTNfAhmT0','2025-05-20 05:54:59.925224'),('9wa26rcl4509m732zxcygu1p9gvhq7fo','.eJxVjDkOwjAURO_iGll4jynpOYP1N5MASqQ4qRB3J5FSQDnz3sxbFViXvqxN5jKwuihrvTr9tgj0lHFH_IDxPmmaxmUeUO-KPmjTt4nldT3cv4MeWr-to2SAmjvjgqfgM0iyaNBzdBEdUCKokSxWit3ZQUhiwpa5Y5uFgdTnC0HFOSo:1uCAye:lMdymOm4qWJpO4DAvutZITyz25vNg-NPM8b9On4cH8s','2025-05-20 05:36:24.778943'),('9wm32ifcnhpoq841y7vtzyx119106ilk','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNZBhAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hTuzMlJXs9LtGpEduO0p3bLfOqbd1mSPfFX7Qwa895eflcP8OKo76rYuNYBLSZCZlnfBgSKPL0hVSBAV8LD4JSwUgegIrZAbUXjqjPZGW7P0BNA04MA:1uCALv:lkMTfTnUKxwNKMoZBgC_NVDm0STboEgu5CRUr2JyOZM','2025-05-20 04:56:23.869883'),('9y8gwrnudoaknbnn384co0sslzjdlek6','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tzu7a:I7saXKkSv0VlA40dnYuBgQZ-Kw4MVSjre3uvbi79BDM','2025-04-16 09:10:54.701875'),('a0gr943o9h33x3a2rea4f038p39mte21','.eJxVjDsOwjAQBe_iGlnr-BtKes5g7dobHEC2FCcV4u4QKQW0b2beS0Tc1hK3zkucszgLFYw4_a6E6cF1R_mO9dZkanVdZpK7Ig_a5bVlfl4O9--gYC_fOhm0mQbjAwR0TllgjYknD5DBgM3B85A44UiktNHkDXuHI04YHJEV7w81BDi9:1uCBFH:lEUSQiHjfU_tXEZm5C67gZFHQ_PnCB4hOikj93-EFc0','2025-05-20 05:53:35.494913'),('a0s86upsr8qy2z4g71yvn6uu242h3kcy','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzwCR:MypbJUwOaJ775wMwU5-zQb-UPdC5aKqM4nmdPm3MApo','2025-04-16 11:24:03.811159'),('a2ybksjejl9wwodqwlrj7qoe24ry3zh8','.eJxVjEEOwiAQRe_C2hAZYFpcuu8ZyMCAVA0kpV0Z765NutDtf-_9l_C0rcVvPS1-ZnERbhSn3zFQfKS6E75TvTUZW12XOchdkQftcmqcntfD_Tso1Mu3RsLI9myDyxGREzirObFNYAE1KAB0IWcVhmgYHPCQDSg95pCtQXLi_QEWbzgg:1uC9jC:pruTLK40Lgdis3aa_AMU6xewU5MAlE3AsDL4cqb2y6I','2025-05-20 04:16:22.617375'),('a771vuds4cp6gkc27yk9nkzcoanwgxeo','.eJxVjDsOwjAQBe_iGln-JeulpOcM0a69JgEUS3FSIe4OkVJA-2bmvdRA2zoOW5NlmLI6K4udOv2uTOkh847yneZb1anO6zKx3hV90KavNcvzcrh_ByO18VsbJI-CFtElNoWi68mb6Ewq0sU-gJTIxlmXIQL07AsFdALJlsDsQb0_Hfg37g:1uC9UL:18wD63C3aHPVbGtYSF8Pd9-ZfUtX7-jyMicdG9jVvYQ','2025-05-20 04:01:01.232204'),('a7oe7dpi3yklpw9dxwtsn5a8icvd2yov','.eJxVjMsOwiAQRf-FtSEjjwIu3fcbyDAMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJUxYXoaw4_Y4J6cFtJ_mO7TZLmtu6TEnuijxol-Oc-Xk93L-Dir1-64AKDDsPKlDyrB2Ds8V4C4M-e9DBBCQCKjrn5Cy7gh6xOC7ICGYQ7w_2ljhw:1uBnRC:KWIit-TaN-LC7uLrMWD8ipMxz_ujjBbuEXFtpAl08Sk','2025-05-19 04:28:18.351923'),('apmh7hvemg4xwe5l0xitmn1memxmgh0y','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uChaZ:CCuW5N2AsPyctKDJrEJfBS-9s5SwEQA_UqgL1ScCm00','2025-05-21 16:25:43.058430'),('apmxjzwfzu3oebtcztls7je7j178dxcj','.eJxVjMsOwiAQRf-FtSGU8pi6dO83kIEZpGogKe3K-O_apAvd3nPOfYmA21rC1nkJM4mzGJwSp981Ynpw3RHdsd6aTK2uyxzlrsiDdnltxM_L4f4dFOzlW6thisqNwN4qmzRYY7S2DgxmcjajynliQO0hx8ToATnSaAnQ5EiE4v0BFic5Ag:1uDmir:6iAaNKahHX8Dsn9Mal8NEPKp6Fg_WzkfKmFHi4yRtp0','2025-05-24 16:06:45.626534'),('apsss4qbovbls40pz8xcp4i4juvoalvs','.eJxVjDsOwjAQBe_iGlmxd_2jpOcMlj9rHEC2FCcV4u4QKQW0b2bei_mwrdVvgxY_Z3ZmoAw7_a4xpAe1HeV7aLfOU2_rMke-K_ygg197puflcP8Oahj1WxdnhSxYrKCorZigCCNJKFJOgrMxqmI0JkTSMJmiJNkcFAZEDVZAZu8PFnU3ZQ:1uCLjW:YkqVe1sdetk3GTbghQRSYKQIJsZxXKHAEvNf_dN84eo','2025-05-20 17:05:30.519620'),('aw064mtph299wie12o4dn0hu82x2jkfj','.eJxVjDsOwjAQBe_iGln-xjYlPWew1utdHECOlE-FuDtESgHtm5n3Ehm2teVtoTmPVZxFsOL0OxbAB_Wd1Dv02yRx6us8Frkr8qCLvE6VnpfD_TtosLRvzalUH9BE5wbG6k1gbUIE4wYVuTC7pAJ5q41G4gha2WRJKSxYEikQ7w8KYDg4:1uCHvy:ulXafvVMVV2S4oyZxocRnptcMbqrD4YD04ig52Xv2fc','2025-05-20 13:02:06.642022'),('ayuuup7j280rp4gvkgx73uix94u2q6g9','.eJxVjMsOwiAURP-FtSEXLiB16b7fQC4vqRpISrsy_ruSdKGrSeacmRdztG_F7T2tbonswlCz02_pKTxSHSTeqd4aD61u6-L5UPhBO59bTM_r4f4dFOrlu7ZeIUJIcDbaQowSpZbCam9iVqQpGSOksX4aqZAyJBQAXugpY5bA3h_e7jbQ:1uBpOc:C1RO3xKYblTsnEtBz8RB3KOxPUL6fJYW-61qSbgaLrc','2025-05-19 06:33:46.390958'),('b5wx8rs2ytjpkmwoa96s3bige15shui4','.eJxVjDsOwjAQBe_iGlnxb9ehpOcMlr1r4wBypDipEHeHSCmgfTPzXiLEba1h63kJE4uzMODF6XdNkR657Yjvsd1mSXNblynJXZEH7fI6c35eDvfvoMZevzVa0oYVusGTBs3kiK0pWWXjVCHlHQNqMITWYwL2w6jR-cxxTJC4iPcHHtU4JA:1uDJAl:7U95SKEix5L8Qy32jNmWvDX_jPwLylmu7PyQGzQVhzE','2025-05-23 08:33:35.407084'),('bepwuj51ed7dvmxbikmabsikc2afyw7q','.eJxVjEEOwiAQRe_C2pCBUgou3XsGMsOAVA0kpV0Z765NutDtf-_9lwi4rSVsPS1hZnEWSmlx-l0J4yPVHfEd663J2Oq6zCR3RR60y2vj9Lwc7t9BwV6-tc_Rjt5RVIkGGIxhMJNW1rLPCNmiYuOyBvCGIE6KonUDJm99JgMji_cHINk4BA:1uBvtn:WtrwCK-42fhxpZriR8GGl_vAezvYzlfb670PGoyL0Zs','2025-05-19 13:30:23.653950'),('bklq255714gdo269e4cgedrenxnr93co','.eJxVjMsOwiAQRf-FtSGU8pi6dO83kIEZpGogKe3K-O_apAvd3nPOfYmA21rC1nkJM4mzGJwSp981Ynpw3RHdsd6aTK2uyxzlrsiDdnltxM_L4f4dFOzlW6thisqNwN4qmzRYY7S2DgxmcjajynliQO0hx8ToATnSaAnQ5EiE4v0BFic5Ag:1uDmiq:x2Us-Hj1LG6pVV6VjEFtibwjoebG0WnkP_0kugNTask','2025-05-24 16:06:44.234673'),('bl0gxt2finkq7ht3fkp9t3ja8hlrurmh','.eJxVjEEOwiAQRe_C2pCWAQsu3fcMZIYZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uL8k6dfkfC9JC6E75jvc06zXVdJtK7og_a9DizPK-H-3dQsJVvjR4tJyAv_mzIibE2OGAeXJYsDK6jbqAAyUFPbBDRg7EQQp-DpWTV-wMjfjhu:1uBu6Y:tM8IUFA5jkeco4zN4fj7v-3_uZw_0borFDE3cWWRxLc','2025-05-19 11:35:26.687912'),('bm1de3wiuifs8vbhkthd3yqxbgg77739','.eJxVjDEKwzAMAP_iuRjsWLHVsXvfYBRJadIWG-JkCv17CWRo17vjdpNpW6e8NV3yLOZqfNeZyy8diF9aDiVPKo9quZZ1mQd7JPa0zd6r6Pt2tn-Didp0jAGdeMIAyALKjiiK55CA-0CIKZJGGSMgKSimLg3RA4Ue2cURnfl8ATCQODU:1uC9qu:G51TkAA2N17dltNmIH-H3xwOidBJ6DkPoKTnZSs1PjY','2025-05-20 04:24:20.393740'),('bn9druqidwu9lnrmjkrglwx6iayzfnhu','.eJxVjEsOwjAMBe-SNYryMy4s2XOGynFsUkCt1LQrxN2hUhewfTPzXqandan92mTuh2LOxqdgDr9rJn7IuKFyp_E2WZ7GZR6y3RS702avU5HnZXf_Diq1-q2jImjBnAgdEAJDl1NQH0BcVMZCR-zIK3NURypd0gjgRQp7wFM27w8-xjj9:1uBxka:DWlWSJSM8IslHXD2wK8qBuo_IDa4t2HEtCfuKn-374Q','2025-05-19 15:29:00.658338'),('bqdgyyryk861h1r3bfnauuvp0bire99l','.eJxVjDsOwjAQBe_iGlnr-BtKes5g7dobHEC2FCcV4u4QKQW0b2beS0Tc1hK3zkucszgLFYw4_a6E6cF1R_mO9dZkanVdZpK7Ig_a5bVlfl4O9--gYC_fOhm0mQbjAwR0TllgjYknD5DBgM3B85A44UiktNHkDXuHI04YHJEV7w81BDi9:1uCAX7:lNhexJJBZ3W10Nwi49dtGfFZZD9jB89ol2yjAYdvhtM','2025-05-20 05:07:57.644385'),('bu26qsoe2wzdc8rkkmuloq0rxzas8zfb','.eJxVjDsOwjAQRO_iGlm2N-vElPQ5g7XrtXEAJVI-FeLuJFIK6Ebz3sxbRdrWGrclz3EQdVXQeHX5bZnSM48HkgeN90mnaVzngfWh6JMuup8kv26n-3dQaan7OgkI2Q7Quza02GCQAAWoFJMcuizYMntkctaCt8CYzZ5sapIxtsvq8wUhITeT:1uCH7f:EPmQbJ3Gztqw7DfY-LqtRilAij38B1xwqrdb4tHTgOo','2025-05-20 12:10:07.608678'),('bulkb6yrckm2girl940z4sh7nqw3bmhn','.eJxVjMEOwiAQRP-FsyFAaQGP3vsNZNldpGpoUtqT8d9tkx40mdO8N_MWEba1xK3xEicSV6FVJy6_bQJ8cj0QPaDeZ4lzXZcpyUORJ21ynIlft9P9OyjQyr5O2pLjjp0fepsdOELUHkBTIO4NKmIDxiaN2ZMOgfOAfg8pkxWnJD5fTyQ5hw:1uCB5L:zTkOBKvJbHEp36GQ1JS-re98wzaGP9FmwqJ4q_nXZiU','2025-05-20 05:43:19.605684'),('bw0mgz0ue1vw68gu2libustsmydusfif','.eJxVjEEOwiAQRe_C2hAECoxL956BTGFGqgaS0q6Md7dNutDtf-_9t4i4LiWuneY4ZXER2ipx-l1HTE-qO8oPrPcmU6vLPI1yV-RBu7y1TK_r4f4dFOxlqwdmbzyAJ1BGY2B2hnTSiNY6coETKlLkyELiAYI5AzDbDTtOzmvx-QIzYTiS:1uC9up:lPIy0XezGK_H9E7icnpDbRTkxSSLsiru67xyegkO6fg','2025-05-20 04:28:23.221299'),('bz3vo6q5w9osm79jov1ooi49s5ediksf','.eJxVjDsOwjAQBe_iGlleOYljSnrOEO3HiwPIluKkQtwdIqWA9s3Me5kJtzVPW0vLNIs5GxgHc_pdCfmRyo7kjuVWLdeyLjPZXbEHbfZaJT0vh_t3kLHlbx1AlIjZa4AxsKLru0jkVBQ6VOy8i0JOGKIGdIl7D8KJQ4I4xDCY9wdrBjmL:1uC9M9:0TG73KL1Od1esjU4jpYNF_R6dveUY025XTSEmkwJV4o','2025-05-20 03:52:33.819685'),('bzmadlntqoqg5fwyk5rdwgx3y6jzwdi6','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzw5k:1xQ-Lz7gdKZbYbJHncg5aDPDtQTjF8ygVxVNr_Jyrrs','2025-04-16 11:17:08.172096'),('c0duim9yrwmck5ek45475li9tbevw80g','.eJxVjDsOgzAQRO_iOrK84G_K9JzBWrPeQBLZEoYqyt0DEkVSzrw38xYRt3WKW8tLnElcBeheXH7bhOMzlwPRA8u9yrGWdZmTPBR50iaHSvl1O92_gwnbtK-tMmRZUeot6cSBesAMwSmvDXnHaDpmCJChQ9JoudsDsDHJKOd1Fp8vL8Y4Cg:1uBxke:OajJK9i_pwZG2SD0ZNqVfw5zeTd9yX5QVGmT3CCD9Bo','2025-05-19 15:29:04.725351'),('c19khnrij9d0761yx79lm8ezcjpsz2kx','.eJxVjMsOwiAQRf-FtSE8Bigu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmZmKn3zFieuS2E7pju3WeeluXOfJd4Qcd_NopPy-H-3dQcdRvHTGCcsWkbEshi5N1KE1BYWUkE7PIoIQHRNDeeuMICoBXJUnvNCXN3h8uozh0:1uCCgt:R8kS3V-9VOX2_TT7gsx4V5aOaiF9ykG9ogI6EROIhqg','2025-05-20 07:26:11.214455'),('c3zzkbehenovq0wa951o56hiejqsarmd','.eJxVjDsOwjAQBe_iGln-7TqhpM8ZrLW9wQHkSHFSIe5OIqWAdmbee4tA21rC1ngJUxZXYVCJyy-NlJ5cD5UfVO-zTHNdlynKI5GnbXKYM79uZ_t3UKiVfU2AKsfsAPukNWo2GnwCQDTOswFjbed6Soxjh9YmTzsiA5EUxdF58fkCBe43bg:1uCAan:IeQqSUiglfYpDYfiaZv7pXZnMTA_2RtncaNjkzNGDoI','2025-05-20 05:11:45.143190'),('c5o3hhk0xdwhur5r1f0z5tdfsl0pc5sh','.eJxVjMsOwiAQRf-FtSECHR4u3fcbGoYZpGogKe3K-O_apAvd3nPOfYkpbmuZts7LNJO4COWUOP2uGNOD647oHuutydTquswod0UetMuxET-vh_t3UGIv39paY4EzolPR25QtgfbsiGJI3pFOZjAIkM9GI3GgMPgEIRjjQCMCi_cHPks4ig:1uCBGW:xQUThLUpTi4Bsp1jJ6lZ9XMB8kjfumlkb5UyhuPLchU','2025-05-20 05:54:52.010075'),('c6n3mrnv9yfvkygjxnbjtniebuxhn63o','.eJxVjMsOwiAQRf-FtSE8Bigu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmZmKn3zFieuS2E7pju3WeeluXOfJd4Qcd_NopPy-H-3dQcdRvHTGCcsWkbEshi5N1KE1BYWUkE7PIoIQHRNDeeuMICoBXJUnvNCXN3h8uozh0:1uBvre:2VJEfdH48y0IXKs5fwu2RHsDseZrVe01MROWnGrLHz0','2025-05-19 13:28:10.900101'),('c8xshvodmfhbqf3spxh6s5zg0qaazwqt','.eJxVjMsOwiAQRf-FtSFAGR4u3fsNhJmhUjU0Ke3K-O_apAvd3nPOfYmUt7WmrZclTSzOwmgvTr8rZnqUtiO-53abJc1tXSaUuyIP2uV15vK8HO7fQc29fmuNw4iaLLOBHAO74EdFFp1lpU0BILQYChQdnUejCDAaZKscWDVkFu8PPGI4WA:1uCAOC:Vj4xap5K6lgebwCcsdtn4ykV_vSy1_bMxBWGdhfJROk','2025-05-20 04:58:44.267077'),('c945b56n2ax9okgzvkzhtbk3yodqy6ki','.eJxVjDkOwjAUBe_iGlmOl--Ekp4zWH9xcADFUpxUiLtDpBTQvpl5L5VwW0vaWl7SJOqsbOfU6Xcl5EeedyR3nG9Vc53XZSK9K_qgTV-r5OflcP8OCrbyrZGH0YJjMiREHggC8GBNREYhayg4H6XvwXiOcYwdBC80EIjPmZjV-wNItDkg:1uCBEs:6fEgdlPIt4MueRwRd1lmqvWuXB1IvJS9-45DCYuYaOM','2025-05-20 05:53:10.182713'),('ca7b087xan6a5fabuqkmes9b878do077','.eJxVjEEOwiAURO_C2hCgQD8u3fcM5MMHqRqalHZlvLs06UJnOe_NvJnHfSt-b2n1M7Erk86yy28bMD5TPRA9sN4XHpe6rXPgh8JP2vi0UHrdTvfvoGArfS1yDnrMIlphc9YAVpMNToZoNIxgBoOqpyMzgEIy2boQgYQUChQB-3wBKic3wA:1uCAvf:LHnN4PVCQhxrVPegB1NgKjRFcK4x43LQ7RfR2WhiHT4','2025-05-20 05:33:19.957992'),('ceasxbdpqkt0qj4bcpq4lsge1mu74fwc','.eJxVjEEOwiAQRe_C2hDqQJm6dO8ZyMAMUjU0Ke3KeHfbpAvdvvf-f6tA61LC2mQOI6uL6npUp18aKT2l7oofVO-TTlNd5jHqPdGHbfo2sbyuR_t3UKiVbW2QgcUkP_QEQr4DtECSnQw2WQJE5EzJbRzOYiA579iKNZwjmQzq8wU5UTid:1uCAYm:EgCBFdtaHqKQYyClvUfItoQax-hl3aT6TRP7SW7w8dU','2025-05-20 05:09:40.394287'),('cfdwkptxg2eujro06aurd541fasztuf5','.eJxVjEEOwiAQRe_C2hAolBaX7nsGMswMUjWQlHZlvLtt0oVu_3vvv0WAbc1ha7yEmcRVaKXF5XeNgE8uB6IHlHuVWMu6zFEeijxpk1Mlft1O9-8gQ8t7PZp-GHZ9jMCQoiECB8kZ1UVrDZP3yAkRehO1S5gMAyIrj2ATdaTF5wtylTqS:1uBvMG:a1XRlran8EPRLxQx6Ifrv-aZhGcUboLILFGEVEA6MFA','2025-05-19 12:55:44.052467'),('cgopytefw92zo3kvtup0y7wwcxutu79p','.eJxVjMsOwiAQRf-FtSGU8BhcuvcbyMAMUjU0Ke3K-O9K0oXm7u45OS8Rcd9q3DuvcSZxFk6L0--ZMD-4DUJ3bLdF5qVt65zkUORBu7wuxM_L4f4FKvY6uj4AQACrLTsNlpKh7MGzsxmVnYoyxmulOBTK4EoOiZP-jhCMD5N4fwDpzjfP:1uCB1p:PHMLBUIpzQOFfJptl9Cyinck-VUArO88_yq1wly1u0k','2025-05-20 05:39:41.074428'),('cldahn80htgwwl7zl12fz0cqxd9yltay','.eJxVjDsOwjAQBe_iGlnJ-k9JnzNYXnuNA8iW4qRC3J1ESgHtm5n3Zj5sa_Fbp8XPiV3ZOGp2-V0xxCfVA6VHqPfGY6vrMiM_FH7SzqeW6HU73b-DEnrZa5OjFVFbkklLCFo4cDlllw1Y0gOCQhRuMG430BKaCEoraylKQAOKfb4tqTgH:1uBwIV:UDr5GDx8i2G5uURyAjiGHpvP3viD0hFavN2WCWPoQ3c','2025-05-19 13:55:55.985385'),('cnh26he1h74lptonemnruvod4ubbmegp','.eJxVjDkOwjAQRe_iGlmzOBslPWeIZjyGBJAtZakQdyeRUkD733v_7XpZl6Ff5zT1o7mzI27d6XdVic-Ud2QPyffiY8nLNKrfFX_Q2V-LpdflcP8OBpmHrVYxSLU10EFDiIw1coOxilohd5oE6raNVIWAwAhGnW4Jk6gFC3Rzny8PXDes:1uC9tS:1JnhORCe_CwxWvCQaXpSqryrlKpVjgwDzHCZZ_cWmJ4','2025-05-20 04:26:58.203900'),('csp4eddrn022a1z24wjkfl1ny8ltsl8x','.eJxVjEEOwiAQRe_C2hCgjAwu3fcMBIZBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIitDHi9LumSA9uO8r32G6zpLmty5TkrsiDdjnOmZ_Xw_07qLHXbw0OrY1YCnhXyBWvyLIqio1NVAw4owZkcDoiMpIzGihpryHjcPYwiPcHJBs3lg:1uCATX:ZArrX6GTAkzl_Tqb99MPCr8QmZNNmovE0VJGrYfu94g','2025-05-20 05:04:15.105121'),('cw5ajfunvmswz2333rnklc8gu2jvun2j','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1txKpU:PrairEKq-a6UdqyXNZ_KQ33dihGb7p7Xqutv10QiCJ8','2025-04-09 07:05:36.697922'),('d12ltv4qh4u1oq708fjallh38ohqb6wk','.eJxVjEEOwiAQRe_C2pCBAgWX7j0DmRmoVA0kpV0Z765NutDtf-_9l4i4rSVuPS9xTuIsBi9OvyMhP3LdSbpjvTXJra7LTHJX5EG7vLaUn5fD_Tso2Mu3NgYc6GQD6TExGqBgg51U8plsZoejJ6_ZIxin8jBZAG-UJReYGBDE-wP8zzfN:1uBrR2:wAABS_Ou1zHx_Nb6_BfPnkfyAFz95j4U_ClTxg_-Ms0','2025-05-19 08:44:24.956203'),('d1hnzo51rf9q2jltt1jq1f48jxykhfuh','.eJxVjM0OwiAQhN-FsyHLAhY8evcZyC4_UjU0Ke3J-O62SQ96mmS-b-YtAq1LDWvPcxiTuAjUgzj9tkzxmduO0oPafZJxass8stwVedAub1PKr-vh_h1U6nVbq0IRorHZkAVltiCH3mokr4HhzBadA8JM4AYCDSUrRTolRl8MO_H5AiTpOA8:1uCAbe:bP9s9dfHj2tYZ_xhDyRTxl4ClYkLMzSXahXVEli8ErY','2025-05-20 05:12:38.562215'),('d467rke1frriq050e84bu6g47jv85jvk','.eJxVjEEOwiAQRe_C2pBKOwy4dN8zkBkGpGpoUtqV8e7apAvd_vfef6lA21rC1tISJlEX5a06_Y5M8ZHqTuRO9TbrONd1mVjvij5o0-Ms6Xk93L-DQq18a5Q4cERB8IkZEYj6gRNEh-x6m7uMkMj6s2UBzobBYuxyJmOcBwvq_QE0rDi6:1uCAeK:-pPhFwMGdNaT45FPWwdKHgFbUAHXkhyz_8S-7stqGZ0','2025-05-20 05:15:24.916608'),('d5oy3ax217cv63gh87r0ql5w4t9y0ez1','.eJxVjDsOwjAQBe_iGlne-LuU9Jwh2vXaOIASKZ8KcXeIlALaNzPvpXra1tZvS5n7QdRZdQnV6Xdlyo8y7kjuNN4mnadxnQfWu6IPuujrJOV5Ody_g0ZL-9bWpa6AYcOFbYoGqrdEXQ0C4hAgJ0YM0aEp3qLHjIGqJXAsLgoE9f4AHWg3tQ:1uCApi:cJ5lvscRlKQtctoyze6Nl0MgR_Qs52s6eu5ch9hcMPE','2025-05-20 05:27:10.858922'),('d96pevznqqoj40ftzjaag1mb4fthzdyy','.eJxVjMEOwiAQRP-FsyHYBVY8eu83kF0WpGrapLQn47_bJj3oaZJ5b-atIq1LjWvLcxxEXRV0Vp1-W6b0zOOO5EHjfdJpGpd5YL0r-qBN95Pk1-1w_w4qtbqtLwyEBov1xkkiFsLE7pww-xDAYMfAwVLJzhBsEbwHC2hELAaioj5fP7g4yQ:1uCCse:O9lcMvoqUYCKxFcir9O8C6t4IfV4rFvptjzrdJH-JqI','2025-05-20 07:38:20.065285'),('danmgrtf64nfdn1obrnf50anhvn9xk7s','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzuqY:LRKcNSZS5xCppZjoqEgim82GziYI4Y3HSb6aiV9odGU','2025-04-16 09:57:22.082983'),('dbd4p18gv4gx6tpjvemosxfu6lrgc8wk','.eJxVjMsOwiAQRf-FtSEwDI-6dN9vIAOMUjU0Ke3K-O_apAvd3nPOfYlI21rj1nmJUxFnAaDE6XdNlB_cdlTu1G6zzHNblynJXZEH7XKcCz8vh_t3UKnXb82BIRkGk9EEbXS23ib2KWgqMKBDS0EXoxwF1GA9DlhYZ2TvPSh3Fe8PE6U3Rw:1uCAZm:VHaPrK9O7FfRRX_bhkgWe87_yhhSnOh1EoxcQePJo_E','2025-05-20 05:10:42.914339'),('dgy8m63ltcorhq19gxe0o9deolcrx8xs','.eJxVjDkOwjAUBe_iGln-eElESc8ZLP8NB1AixUkVcXeIlALaNzNvM7msS81rkzkPbC4Gkjn9jljoKeNO-FHG-2RpGpd5QLsr9qDN3iaW1_Vw_w5qafVba-iJncSoXvpYQgrKhEiY1KNKIFDuknNRFUg8nwEKQufBi9Mgwbw_QeU5RQ:1uBn8P:FmX4ab84tfUbU856Pu-QMiPd4Ry-EDlkQvDsMFi3lBU','2025-05-19 04:08:53.745925'),('dhn4ill8pq6dyiriqyyof2jjahh5x1tb','.eJxVjMsOwiAQRf-FtSEDlAFcuvcbyPCSqoGktCvjv2uTLnR7zzn3xTxta_XbyIufEzszI9npdwwUH7ntJN2p3TqPva3LHPiu8IMOfu0pPy-H-3dQadRvrYXSMWBwEAVhtuSEBQVWSV2MIVe0QoJispAmTRgFBJgcmhgsWJTI3h_pgDbp:1uBtSa:vPxeWC92jbwa8YZky_91Q1VZeS2Ph33qG-wvlQjgXcE','2025-05-19 10:54:08.088197'),('dkd4e43wxff50fpl6iuo0trmz9cxjcy0','.eJxVjDEOwjAMRe-SGUVWnNDCyM4ZIttxSAElUtNOiLtDpQ6w_vfef5lI61Li2nWOUzJn4_BoDr8rkzy0bijdqd6alVaXeWK7KXan3V5b0udld_8OCvXyrZmzgNDgQcQlD8QOWYAgJ-VMSuggy3hS9qQ4asAgokjehTQggnl_AH9iOec:1uCAS5:bYP8Z3zSIbUNLb2HbHpJP73FpC1IoD7Al3IzSHP8KRo','2025-05-20 05:02:45.294874'),('dn82i16xwc8txwu91rr4h1zzgu85qn8l','.eJxVjDsOwjAQRO_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHlzHszbxZhW2vcel7iROzKlHXs8tsmwGduB6IHtPvMcW7rMiV-KPyknY8z5dftdP8OKvS6r0WQA9kkrJdGeKUU-AxYCLMZtDVIRqLWVpY9OqSQgLJy3hvvig2k2OcLHEs38A:1uD2wM:BN3o6prw5qdkFigg3lYhggmB-qHaR293VCF4DNqRvwI','2025-05-22 15:13:38.190965'),('dpv5q70du7lfynlbrxsqaxcqxuhxba69','.eJxVjEEOwiAQRe_C2pAyhUJduu8ZyAAzUjWQlHZlvLtt0oVu33v_v4XHbc1-a7T4OYmrADOKyy8NGJ9UDpUeWO5VxlrWZQ7ySORpm5xqotftbP8OMra8r3nstRqsAaWg49DjDiw7A6wHIsNOYQSTbB86Qk4IWrsACW2Ilkmh-HwBJAI4yg:1uCAY2:aUeFT4GXNGa-kyoTEr7EszR4cQWHTXTWobRRynP9Qc8','2025-05-20 05:08:54.763994'),('due1grn0r10u35eq59dkvcc7pv1f0x4v','.eJxVjMsOwiAQRf-FtSECHR4u3fcbGoYZpGogKe3K-O_apAvd3nPOfYkpbmuZts7LNJO4COWUOP2uGNOD647oHuutydTquswod0UetMuxET-vh_t3UGIv39paY4EzolPR25QtgfbsiGJI3pFOZjAIkM9GI3GgMPgEIRjjQCMCi_cHPks4ig:1uC9CF:W4Jh2HlkWg8c7V2zhS622QuOQdiD7bwFuXUjR3IAc0E','2025-05-20 03:42:19.441094'),('dwi8461z69ehz2c63vf7x6o5ickedp4o','.eJxVjEEOwiAQRe_C2hDGKRRcuu8ZCAODVA1NSrsy3l1JutDtf-_9l_Bh34rfG69-TuIijBOn35FCfHDtJN1DvS0yLnVbZ5JdkQdtcloSP6-H-3dQQivfWhE70M6OUWG2EFOm4cxIyEG7HB2phKM1wAlJAwYiyBmMMW7oCMX7Ax3IOGo:1uBtRL:eQkYtFdLn2v22zCApFUBUHz0pTUzwE9me2FVNHO5uzA','2025-05-19 10:52:51.769229'),('e1pyjoajy7hnly0ono3x69mynt9nmouu','.eJxVjMsOwiAQRf-FtSHA8HTp3m8gwwBSNTQp7cr479qkC93ec859sYjb2uI2yhKnzM4MHLDT75qQHqXvKN-x32ZOc1-XKfFd4Qcd_Drn8rwc7t9Bw9G-NULNRiSRQ1W1SkXVCBKZgAi0ROtqkVIlrVOgYAqA8bZ4lwiNBY-KvT9Ruji_:1uDmJC:XxrIwReHCe1SAg4Mo-egT34DnA51TVvxHJj2D0WIWKA','2025-05-24 15:40:14.026494'),('e2qn8p13bz8wt0ax6dyyi51u1key9jqe','e30:1tWCCd:tqKqGnMn48kGvHQajxniPWv6748bspJWH9mKPe2lmdM','2025-01-24 15:55:19.869625'),('e73e00bpn8l70p5qag2ld3s8himlvocs','.eJxVjEEOwiAQRe_C2hAcoIpL956BzDCDVA0kpV0Z726bdKHb997_bxVxmUtcukxxZHVRzqrDLyRMT6mb4QfWe9Op1XkaSW-J3m3Xt8byuu7t30HBXtZ1yuDJAVjwmdkKWRCCcExkCBxKNn4gY_0ZwkohCBnnxTM6OkkaRH2-EDE4Tg:1uBs2g:cH-ZBYjSNr9dUN_27xk9KqAMLiv9owxpDAEYW59h76s','2025-05-19 09:23:18.820876'),('ealercnlfwxvd5n04b39spb887vp4tdj','.eJxVjEsOwjAMRO-SNYpI1MQJS_acobJjmxRQKvWzQtydVuoCljPvzbxNj-tS-3WWqR_YXIxLYE6_LWF5StsRP7DdR1vGtkwD2V2xB53tbWR5XQ_376DiXLe1qpxBJHWoAJ2WoCVx9OA9BodUCMjlBEpdAfDBRXY5uy2FqMwi5vMFWvo5SQ:1uCAiS:Wz3FiWbeW7DQGXrA40418GOC_cgcELED_PBU9rnoF1Y','2025-05-20 05:19:40.566935'),('eatw2w34v0dwu0t8t3kc9e3w4dbi45jf','.eJxVjDsOwjAQBe_iGln-JP5Q0nMGa9e7xgHkSHFSIe4OkVJA-2bmvUSCba1p67ykicRZRCVOvyNCfnDbCd2h3WaZ57YuE8pdkQft8joTPy-H-3dQoddvjZqM88XGMJqhRGKvstdBB1DM4HlwiAiEzhk7gCvGItiRmDNmi1jE-wMXgTlP:1uBuKS:YZwBIJM-QdD48JoI-7NGEslPz-RidLcqWtkek9u2FTA','2025-05-19 11:49:48.083390'),('eb6plzt939x1re7s72kixrvhdts47vnx','.eJxVjMsOwiAQRf-FtSENjwFcuvcbyMAMUjWQlHZl_Hdt0oVu7znnvkTEba1xG7zEmcRZKBPE6XdNmB_cdkR3bLcuc2_rMie5K_KgQ1478fNyuH8HFUf91sYBKc5KBSrKeYBiyE_sfQLiwIzaaERvE5PWDGiDBadNsVNiB8mK9wc8VTiR:1uCAxD:ZsY65rjvhycOwIPi2L2uvj0iZeAFT0Dgx_3X1CS6XZo','2025-05-20 05:34:55.855445'),('ecqlopfymds3x6l0f8x8dvhthe5lenrc','.eJxVjMsOwiAQRf-FtSE8yjC4dO83EB6DVA0kpV0Z_12bdKHbe865L-bDtla_DVr8nNmZacdOv2MM6UFtJ_ke2q3z1Nu6zJHvCj_o4Nee6Xk53L-DGkb91sFYRVHYqUCSWDAWIyEb0Aq1lUTRQclEIFEm5-yEqRRUKJxRTmQA9v4ACb43qw:1uBrTt:HWwUIgfJrU6qfPt2OmD2C_ZEOdr9IdJ9EmZLe03IZl4','2025-05-19 08:47:21.747015'),('eeilvixum002u38dvl6lovaqg54w7roo','.eJxVjDsOgzAQRO_iOrJswIudMj1nsLwfxyQRSBiqKHcPSBRJM8W8N_NWMW1riVuVJY6srsqry2-HiZ4yHYAfabrPmuZpXUbUh6JPWvUws7xup_t3UFIt-7rBDL0VsOgAjWd2BIGgRW-a3nJnu0ytg97twR0IZQomOMoBvbTC6vMF26437w:1txlZR:ZcjvJFvXF1MyxbGMF7ogVoQ5GBrP6Ua-QuOQSi6dpL0','2025-04-10 11:38:49.570892'),('ejpatzc2qyt1npr596li8ciyns1rg2yk','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tzrIX:LN5n8MZWwm10vq3NnPsO6nmdzbzAgqdVuW5a6BTSLos','2025-04-16 06:10:01.281116'),('ejupuoo9xxvubrdyw65pljfnfn3oag7f','.eJxVjMEOgjAQRP-lZ9NY2C2tR-9-A9llt4KaNqFwMv67kHDQZE7z3szb9LQuY79WnftJzMW03px-S6bhqXkn8qB8L3YoeZkntrtiD1rtrYi-rof7dzBSHbc1hhg5NF0DKAKdT0jiFTnClhRaxsSdAxri2TlCScgAkWNoRcE7NZ8v_n43-w:1uBydp:Odgnuw3ay-lX6wjrofcHO8Qye12lhDQitqSxnOJJq74','2025-05-19 16:26:05.671355'),('ejzrr8enw2931nzubizeg0esizislkqd','.eJxVjjsOgzAQRO_iOrK8xviTMj1nsNbsEpNERsJQRbl7jESRtPPejOYtIu5bjnvlNc4krsJ7cfkNE45PLgehB5b7IselbOuc5KHIk1Y5LMSv2-n-DWSsubUZDZmg_WR96MEhmC4E7kzqTQqsiAH1ZDkFtIpBkdII2ATlwTlurz5fBFQ3uQ:1uBuGV:MQKFF4dNUeRG8njEVU_Y-HaU7apf5rdxYkQGM0Tqx6Y','2025-05-19 11:45:43.012408'),('ek7iohveuw2pc9rxqeebeq8ia772folk','.eJxVjEEOwiAQRe_C2pAyhUJduu8ZyAAzUjWQlHZlvLtt0oVu33v_v4XHbc1-a7T4OYmrADOKyy8NGJ9UDpUeWO5VxlrWZQ7ySORpm5xqotftbP8OMra8r3nstRqsAaWg49DjDiw7A6wHIsNOYQSTbB86Qk4IWrsACW2Ilkmh-HwBJAI4yg:1uCAmK:o0PBpVBcv3MP36MJRd3QFsOLd8yJzydLH1fBbJtlykQ','2025-05-20 05:23:40.618813'),('ek8v4i33ncbbm6kc2t6rnzriyqntlosc','.eJxVjMEOwiAQRP-FsyGwwOJ69O43EGCpVA1NSnsy_rtt0oMe5jLvzbxFiOtSw9rLHEYWF2EciNNvm2J-lrYjfsR2n2Se2jKPSe6KPGiXt4nL63q4fwc19rqtSRkCbzTbgjxYyKiJELR2EVVWHiLjlqKAFCqHZMjrhHpgtGfyKD5f9Us2lA:1uCJfu:TisROAWerUtaYulqwLNrLoXI7rdBxWGnp88HeURqbMo','2025-05-20 14:53:38.428958'),('elh8ctfby6284y4930rmgl959d8zilek','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0Cun:ZbQKlvhw6imdXDF34q7NKeDaqIk7ZWNOJ4UNYe7YToo','2025-04-17 05:14:57.520143'),('enqe145p6jnq797ht4fh1r7o7rrwo2yh','.eJxVjEEOwiAQRe_C2hBaYGBcuvcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXEWWonT7xgpPbjtJN-p3WaZ5rYuU5S7Ig_a5XXO_Lwc7t9BpV6_tcrotNfgrLU6jzR6bdBF432xAwEC8YCmgEJQyjIyFgfWMFDUyZAT7w_Jtjbc:1uBsGo:Zt4sQ5FAA_InrnHV-Xy6TVFsjdUquEDZIr27i-PCggY','2025-05-19 09:37:54.338256'),('eq13yzy6ace2b8wbaxu4yl7xswxnnysk','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNZBhAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hTuzMlJXs9LtGpEduO0p3bLfOqbd1mSPfFX7Qwa895eflcP8OKo76rYuNYBLSZCZlnfBgSKPL0hVSBAV8LD4JSwUgegIrZAbUXjqjPZGW7P0BNA04MA:1uCBOL:2RAk5IteUdIsrE7Mss0QAxpZQhjEsyIEUmLAT5v5dCI','2025-05-20 06:02:57.434962'),('eum4b888nf0mcwgsx05tl9ue0h2faolu','.eJxVjMsOwiAQRf-FtSEOMFBcuu83kIEZbNWUpI-V8d-1SRe6veec-1KJtnVI2yJzGlldFERQp981U3nItCO-03RrurRpncesd0UfdNF9Y3leD_fvYKBl-NYosVYpgAxQLHQhEoJEi9lUMni2jqBCxyjI1Rjn2IdQyXeCwUYf1PsDMfc38A:1uC9NW:IMgCmVcQ5rGkQnTvEMbmlERhAKP6fptKadHIZ203Gtc','2025-05-20 03:53:58.995327'),('ew2fxy6y1in81flwa4zov65sv497298r','.eJxVjEEOwiAQRe_C2pABLKUu3fcMZJgZpGpKUtqV8e7apAvd_vfef6mI21ri1mSJE6uLCqBOv2NCesi8E77jfKua6rwuU9K7og_a9FhZntfD_Tso2Mq3HrAnT44dhr4Tn9FS9gE7NoIYWJxhCwMggcUgcoaQKFljDQjkPGT1_gAwezkT:1uBwbP:9-8sqX3DVW5UaIdTl1YOq7pSwKu4UXvsU_Slg4d9hrA','2025-05-19 14:15:27.190356'),('ey5mkui9h0frx951btd7rlmccf4bvdjz','.eJxVjDsOwjAQBe_iGlnE6y8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbiIwVpx-l0x5Qe3HdE9tdss89zWZUK5K_KgXY4z8fN6uH8HNfX6rTOgCoVIIXDRzpjiXVDs0UL2BhJr8OgwDJmZkve6gGKjicCYM7AW7w9KBzi2:1uCBtV:fotuw7S9E7b6naQhRyhtVhSAE-LDOWRI7qqcCZUC_IY','2025-05-20 06:35:09.988540'),('eyrvcs39cn53c5lx8yipnzv951axpz48','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBoCZ:wVC3q4sZLIVcJblCH-N_MF0wvX-1rX5Pk_3JZyaKpVo','2025-05-19 05:17:15.340454'),('ezdhdaq47ozklpe3pudulokgd2n0yzwz','.eJxVjMsOwiAQRf-FtSGU8BhcuvcbyMAMUjU0Ke3K-O9K0oXm7u45OS8Rcd9q3DuvcSZxFk6L0--ZMD-4DUJ3bLdF5qVt65zkUORBu7wuxM_L4f4FKvY6uj4AQACrLTsNlpKh7MGzsxmVnYoyxmulOBTK4EoOiZP-jhCMD5N4fwDpzjfP:1uCIoS:tYHe-OX66w7dhhgFCn97LyDO1dObeaDTxFFbdFYwyvg','2025-05-20 13:58:24.347670'),('f0bf3tsv2bbzd5nae6rumbzw7352bfvn','.eJxVjEEOwiAQRe_C2hAZBqEu3XsGMlMGqRpISrsy3l2bdKHb_977LxVpXUpcu8xxSuqsYDiqw-_KND6kbijdqd6aHltd5on1puiddn1tSZ6X3f07KNTLtx4ZXfI2sDGSWMwgCIxkJWfJhsFmCMGjO2EiO3iPgIHZidgAQIzq_QFKCTie:1uCAtM:sPy7_B3ASZpRs-9tAbJUHKOLAL026WkJzjuhCZ6Tekk','2025-05-20 05:30:56.698857'),('f22hwk4969e6hu59gunf7io4r23wjoou','.eJxVjDsOwjAQBe_iGln-rH-U9JzBWttrHECOFCcV4u4QKQW0b2bei0Xc1ha3QUucCjszaSw7_a4J84P6jsod-23mee7rMiW-K_ygg1_nQs_L4f4dNBztWweioBxpV4wM4H3VpgTSNoHXqJWBLEoFqhayUclYAKRkq3dOVKmEZO8PImo3xQ:1uByvN:3UutFeRjfo9wwLLNeOoxbnqrab3tmAuu_V3Xzm4JiPQ','2025-05-19 16:44:13.469857'),('f512ygitxhb9wuoh7oye1t3hzx47lmwx','.eJxVjDsOwjAQRO_iGln-EH8o6TmDtd5d4wBypDipEHcnkVJANdK8N_MWCdalprXznEYSF6GjEqffNgM-ue2IHtDuk8SpLfOY5a7Ig3Z5m4hf18P9O6jQ67YuvmgMxrEJyNZ5tuxRAROeKSBFPYBVqAYXs_ZOZbtF8eCizuzJBPH5AkaiOKI:1uC9VY:DNbT-pPpkDmJrqT-cO_M5MwB78q3LpRi5v2OsbQkqc8','2025-05-20 04:02:16.875487'),('f6t6cu3zzstxlz59g9posidvigqcvvwm','.eJxVjMsOwiAQRf-FtSEFWh4u3fsNZIYZpGogKe3K-O_apAvd3nPOfYkI21ri1nmJM4mzcF6cfkeE9OC6E7pDvTWZWl2XGeWuyIN2eW3Ez8vh_h0U6OVbB8MhQTAqgfPeakBMA-ak9KB4JMoTG_bMRKwhEwVL6DIw2nFSqJx4fwBEujnt:1uBtYa:8A1pSTYiN6mWVLaWMnPSrQj_kSS0RXX4Y_4h8Ii45Bg','2025-05-19 11:00:20.648117'),('f6wj8lkh22teinrhm9v8yzb69c37rno8','.eJxVjDsOwjAQBe_iGll4nXVsSnrOEO0-GxxAiZRPhbg7REoB7ZuZ9zKdrEvt1rlMXZ_NydAxmMPvqoJHGTaU7zLcRotxWKZe7abYnc72MubyPO_u30GVuX7rQqVpVJk8KKljT_AheQDsELlNWWIibpHgKESOrkCRriJRiKHm_QEk-zht:1uC9cC:qtDKa-i44d9DmyPALWvCAGDsddVj4nfcHSys4-CeO_o','2025-05-20 04:09:08.395133'),('f97klop1jhngbbbe43edajc44vejelpb','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1twetP:HnCsROq5HTgGR9dzLik1xoz9Zw1WIKqrgtktuD5iJ4s','2025-04-07 10:18:51.989124'),('fal3k8dq3w1n7yso041i19ack11z3ue4','.eJxVjEEOwiAQRe_C2hAKhRlcuu8ZCDCjVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWgx7F6XdNMT-47ojusd6azK2uy5zkrsiDdjk14uflcP8OSuzlWxuNOieLDIpHdINHp1wi0KgckU5ICNE4MBli8sZ7ZWBkZf0VnGWrxPsDBEY3Cw:1uCAZp:KqeUDq3ChFU0yqaYMBY5ZBSFwjLwP6OuEjx07NZCSoM','2025-05-20 05:10:45.904105'),('fhij8k58hgj7tsv6bcsmbpkuxrx2dfoq','.eJxVjDsOgzAQRO_iOrJswDZOmZ4zWOv1bCCJQOJTRbl7QKJIutG8N_NWiba1T9uCOQ1FXZVtjbr8tpn4ifFA5UHjfdI8jes8ZH0o-qSL7qaC1-10_w56Wvp9LVVk8nUrFj7uMQMZNRyo1MguFOYGkFaq7IR844IRCTFaw1x5YvX5AnocOi0:1uCApE:EjY40fpkzTAAwmksYgZCQ-Kxh5Jy3A3EvDclOva-_CE','2025-05-20 05:26:40.711686'),('figyy5ou9nzz39giffykherdg2wc5c2e','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0Ygh:u_pE4RJ0DNLqzB8ReH17-somd9u-J7dqmBPR7XcmgZs','2025-04-18 04:29:51.797227'),('fkv4oau401x6ska56nd5e1rz493amv4o','.eJxVjEEOwiAQRe_C2pDOlA7o0n3PQBgYpGpoUtqV8e7apAvd_vfefykftrX4rcnip6QuConU6XflEB9Sd5Tuod5mHee6LhPrXdEHbXqckzyvh_t3UEIr3zpiNyCgQ2AhgmgiWEEnyEzkpM-BExqDKWPnjD1nKwFh6A0AUc-i3h8X7jeb:1uCALx:PgUHaWwDRVu9zcJmqMTW0jZkaCQ_lwY6kyF0jqsqz2w','2025-05-20 04:56:25.658005'),('fl7273vt44rm8z6dwxevsu6avwph2cho','.eJxVjMsOwiAQRf-FtSEDw6N16d5vIDADUjU0Ke3K-O_apAvd3nPOfYkQt7WGreclTCzOAh2I0--aIj1y2xHfY7vNkua2LlOSuyIP2uV15vy8HO7fQY29fmvPaAAsawJg1AN7i96gUzRYTBBZa8raAxk3Kk84QrLF5-Iss-aixPsDAVY3mQ:1uCKhW:EMeSlgMRylGJ6OinwQX5ABLvAVfmpYN2IDCWOnGd-Tg','2025-05-20 15:59:22.812766'),('fnquw4tw7y79if61q6ur9lgfe6iycgrm','.eJxVjM0OwiAQhN-FsyEsP1Y8eu8zkF1YpGogKe3J-O62SQ96m8z3zbxFwHUpYe08hymJqwDvxem3JYxPrjtKD6z3JmOryzyR3BV50C7Hlvh1O9y_g4K9bGs2hD6dMVkdBwZibZTKBM4k57KydosZMkD03mYyqIeIoHy27IzBi_h8AUlnOIc:1uCB73:lo9-UiTxUxHRi8t0tjEFbPex5h-C_ms3PXqHVGrbKp8','2025-05-20 05:45:05.696325'),('fpn7vhv9tojq3souk0o9k7bspriqha5y','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBv0N:LM_LlOLYdQ9MPayI43cENQZyQOWpCKN6Ei-8ur2mHq8','2025-05-19 12:33:07.406063'),('fu1si0stltjb5b9ifycvku5arytzw6z2','.eJxVjDsOwjAQBe_iGln-7TqhpM8ZrLW9wQHkSHFSIe5OIqWAdmbee4tA21rC1ngJUxZXYVCJyy-NlJ5cD5UfVO-zTHNdlynKI5GnbXKYM79uZ_t3UKiVfU2AKsfsAPukNWo2GnwCQDTOswFjbed6Soxjh9YmTzsiA5EUxdF58fkCBe43bg:1uCAHn:vIT_VMqwIy0fMIQ0p_MgiJGGqFxqF8Li2w79xZSiynM','2025-05-20 04:52:07.872421'),('g36thw11adjldmdyzlerxmmag02dghkz','.eJxVjMsOwiAQRf-FtSEMb1y69xvIwIBUDU1KuzL-uzbpQrf3nHNfLOK2triNssSJ2JlJ69npd02YH6XviO7YbzPPc1-XKfFd4Qcd_DpTeV4O9--g4WjfWkhfspGOADRYtE4FDcZUSARBKEHFZac8apGlg5wSKKgavDPGBh8qe38AAFU27Q:1uCAQa:dG3fDyFviSAcMAcc-ZOOvIpl04qzduw5UFOR3kV5WTE','2025-05-20 05:01:12.241330'),('gcckml504rhsf656dkpqop55x5u9jp4r','.eJxVjDkOwjAUBe_iGlmOl--Ekp4zWH9xcADFUpxUiLtDpBTQvpl5L5VwW0vaWl7SJOqsbOfU6Xcl5EeedyR3nG9Vc53XZSK9K_qgTV-r5OflcP8OCrbyrZGH0YJjMiREHggC8GBNREYhayg4H6XvwXiOcYwdBC80EIjPmZjV-wNItDkg:1uC9XD:VwO1v5cFi9qRD1M1isAHwVhGExvKdnbMyoBDeddw4TY','2025-05-20 04:03:59.103971'),('geelvvmufyyydcizaimkek04gjy1q3cr','.eJxVjDsOgzAQBe_iOrIMGH9SpucM6O2uHZNEIGGootw9QqJI2jcz761G7FsZ95rWcRJ1VV2jLr8jgZ9pPog8MN8Xzcu8rRPpQ9EnrXpYJL1up_t3UFDLUYeM4C3DNFYohF5C9ESts8gULTE4wyMJg_rcGZci2NloWulBPqnPFzyGObY:1uBo8t:KipAeMlazBbFuIBHbnU5S7nPh1qMLPKY3zyDtZzvZ20','2025-05-19 05:13:27.389758'),('ggw4w0xp4xdmakle74mu01eel9vygwwf','.eJxVjDsOwjAQRO_iGlnxOlnblPQ5g7XrtXEAJVI-FeLuJFIKKKaZ92beKtK21rgteY6DqKsCBHX5bZnSM48HkgeN90mnaVzngfWh6JMuup8kv26n-3dQaan72nTWF_AOTTEtByKbHLReAAo7xyFnaUhYmLDBnOwe12GXEDEEaqz6fAEvPzh0:1uCAIJ:o09Ve1UcSkg6sUPpuyRyQDXm6xSMaEExsT9NAZ58bTg','2025-05-20 04:52:39.029163'),('ghnn9cu88o2xzmznj5axzmoezgbroyv8','.eJxVjEEOwiAQRe_C2pAOdQZw6b5naAYYpGpoUtqV8e7apAvd_vfef6mRt7WMW5NlnJK6KOhQnX7XwPEhdUfpzvU26zjXdZmC3hV90KaHOcnzerh_B4Vb-dZoEJwQBEc5enEGiHsLnLyLHbnekEfK4KkPgOQtODqzRWAjtjOS1fsD-ew20Q:1uBvXv:HOLTwM0FVFRwoUb2__XVTtcEuUrMQyGruRdTgnZxwTA','2025-05-19 13:07:47.127138'),('giedye1pl0exn4eff65chghy7middfsx','.eJxVjMsOwiAUBf-FtSG8Hy7d9xvI5QJSNZCUdmX8d9ukC92emTlvEmBba9hGXsKcyJVIacjld42Az9wOlB7Q7p1ib-syR3oo9KSDTj3l1-10_w4qjLrXxsZimfYuquJEcaC51Cyrgsi5cJCUsJ6DR-55ksYXmQVYhx7Fzlkkny8d9jev:1uCEjM:O3wgBpf7oYt6kCEydhsuhNXBvWGJWII7Q2Ij8kbljL8','2025-05-20 09:36:52.002719'),('gl6vozze1de2s2kke83vfz7mknbfx6l5','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzwZg:bnfldR7eEsyty54vsA5OIy7Un9ag5TjMvTRCG7aiaaI','2025-04-16 11:48:04.939785'),('glpjx45hsadhy12g57gjn0a5bp1cioxp','.eJxVjEEOwiAQRe_C2hBmgA66dN8zkIGhUjVtUtqV8e7apAvd_vfef6nI21rj1soSR1EXBeTV6XdNnB9l2pHcebrNOs_TuoxJ74o-aNP9LOV5Pdy_g8qtfmsbiJ1xrkv2nMFKSMAwALqMAEAU0mAyuuIQBTyjDYYI2WYhlM579f4AAZ82_Q:1uE4zk:1nsXMsOw9rVxTyXdnrz0D5LpwE8XfJCydvewrvH8fgY','2025-05-25 11:37:24.652561'),('gpql24askajmtytrm3p5cb5mv4qrv52p','.eJxVjDsOwjAQBe_iGlnxJ3ZCSZ8zWOtdLw4gW4qTCnF3EikFtG9m3lsE2NYctpaWMJO4Ct1rcfldI-AzlQPRA8q9SqxlXeYoD0WetMmpUnrdTvfvIEPLe63MQM53rJC9YUKMMSH3wEwE4KwdE9HgtQJjlVfWWnbIMe2GHqPuxOcLa6k5tA:1uCA9v:GjR5T30ijYdH8n2GQ-RexjqG1sgP7A8XNY6zipOW0DQ','2025-05-20 04:43:59.429119'),('gvh7iw1ib8bbp82oc1dz258y4j8wb9br','.eJxVjEsOwiAUAO_C2hDg8XXp3jMQ4L1K1dCktCvj3ZWkC93OTObFYtq3GvdOa5yRnZmT7PQLcyoPasPgPbXbwsvStnXOfCT8sJ1fF6Tn5Wj_BjX1Or5GFouAcjI5-YwQEBy5gAa1lRM5ygWCUoK809qQEtmK8M29AePBsfcHFIk3wA:1uBtRv:Ygeh3bPBShd9yUDSPBCqszI9ij66Q49mb-qS8sF4dhQ','2025-05-19 10:53:27.677805'),('h2c6pzlz0dl9jx0dqiavz21lmbsdgtqr','.eJxVjEEOgjAQRe_StWmGUhBduvcMZDp_xqIGEgor492VhIVu_3vvv1zP65L7tejcD3BnFyi6w--aWB46bgh3Hm-Tl2lc5iH5TfE7Lf46QZ-X3f07yFzyt-7YghkoUI0G1qo1oRJDd2pCLQyqIicONUARgB5VjFQriIDUWvf-AGTsOl4:1uCIML:PDa0xdzkuHRKbOCxlOegt2FhPF6IstlA08E0iJewNlQ','2025-05-20 13:29:21.717657'),('h3qtj91v843ee6rlglkzjws1j4hanhs4','.eJxVjDsOwjAQBe_iGlmb9Xcp6TlDtF47JIAcKU4qxN0hUgpo38y8l-p5W8d-a2Xpp6zOynhUp981sTxK3VG-c73NWua6LlPSu6IP2vR1zuV5Ody_g5Hb-K0jks_ODR0xdiV7KsZHcqaAEOKQBEBSwMDA3gDkaKNNQsl6cRhoUO8PGDo3tw:1uCWy0:ypJZWTrSM7KRMwq1OWKPy4ryVhelpnuzDwF1ML3nS4Q','2025-05-21 05:05:12.870656'),('h41balxok77to0l6somn9ozbng9o4mqi','.eJxVjEEOwiAURO_C2hCgQD8u3fcM5MMHqRqalHZlvLs06UJnOe_NvJnHfSt-b2n1M7Erk86yy28bMD5TPRA9sN4XHpe6rXPgh8JP2vi0UHrdTvfvoGArfS1yDnrMIlphc9YAVpMNToZoNIxgBoOqpyMzgEIy2boQgYQUChQB-3wBKic3wA:1uCAua:X_f1Nrp88ke9MoFo1ERBc-xEF0SPiwp_4cUhdwJr9LQ','2025-05-20 05:32:12.114066'),('h58p8n4wnqolc3miav6z9g0y9kx5p1xn','.eJxVjMsOwiAQRf-FtSGU8pi6dO83kIEZpGogKe3K-O_apAvd3nPOfYmA21rC1nkJM4mzGJwSp981Ynpw3RHdsd6aTK2uyxzlrsiDdnltxM_L4f4dFOzlW6thisqNwN4qmzRYY7S2DgxmcjajynliQO0hx8ToATnSaAnQ5EiE4v0BFic5Ag:1uBzPl:lBikp99pTxLyY_fPHPb5gtpPkTHJIZLAiKzfv74fTv0','2025-05-19 17:15:37.834164'),('h8gg8c2i0ctkljk4z7gw4iilf9csbhw9','.eJxVjDsOwjAQBe_iGlmb9Xcp6TlDtF47JIAcKU4qxN0hUgpo38y8l-p5W8d-a2Xpp6zOynhUp981sTxK3VG-c73NWua6LlPSu6IP2vR1zuV5Ody_g5Hb-K0jks_ODR0xdiV7KsZHcqaAEOKQBEBSwMDA3gDkaKNNQsl6cRhoUO8PGDo3tw:1uCWTz:HkOaf0iTPoFKpVe65tMC1NAc598prUXUaiWZSutkmd4','2025-05-21 04:34:11.683980'),('hbinaiz6xcof544dv3xri79vb917n0y4','.eJxVjMsOwiAQRf-FtSEOMFBcuu83kIEZbNWUpI-V8d-1SRe6veec-1KJtnVI2yJzGlldFERQp981U3nItCO-03RrurRpncesd0UfdNF9Y3leD_fvYKBl-NYosVYpgAxQLHQhEoJEi9lUMni2jqBCxyjI1Rjn2IdQyXeCwUYf1PsDMfc38A:1uCAjw:YyGdq5vSnXk9UitR0_gk5_bOrKl_MvDvgMOeDzXpEEU','2025-05-20 05:21:12.979832'),('hbutonobnbnn0yfvidlnouxq6b7y33ng','.eJxVjDsOwjAQBe_iGlmsHX9CSZ8zWLvrNQ6gRIqTCnF3iJQC2jcz76USbmtNW5MljVldFNioTr8rIT9k2lG-43SbNc_Tuoykd0UftOlhzvK8Hu7fQcVWv7WL0mOms5fsO0DPFtAKWZJCWQz37ApwFyiWKIAlOAtEDDYYJlNEvT9mtTne:1uBxeP:Bp9etF6E0YYCu4OHP-IabUxG29joTdRhDBVQymhq5D8','2025-05-19 15:22:37.220297'),('hbz52iu9pzk5ydfyhkq4guhk6332i042','.eJxVjEEOwiAQAP_C2ZAWlhY8eu8bml12kaqBpLQn499Nkx70OjOZt5px3_K8N1nnhdVVGQB1-aWE8SnlUPzAcq861rKtC-kj0adteqosr9vZ_g0ytnyMxZC1aBMzJ-CYAlKi0WHnALALBMgk3A8sJrKnbqAUrB_Eejc66tXnC3UjObE:1uCAt2:0sRLAUFVA9a23SSeWyCYIi28Z0w57mW6Aw0GpNTActo','2025-05-20 05:30:36.925318'),('hhga1bizzs5u5s9yu5ejzzecvm5cp7hr','.eJxVjUEOwiAURO_C2hCgpYBL9z0D4f8PUjWQlHZlvLs06UK3897MvJkP-5b93uLqF2JXJseRXX5TCPiM5UD0COVeOdayrQvwQ-EnbXyuFF-30_0byKHl3jYwiW6byVACoRQIl9zQ7wZjrZYCjSSJOjkcVCQJRgckTIKEVRCkY58vJ8U4Vw:1uBxnp:1bAX-kNUv4U6o0FVnyOAZbsU7A4zgREoWxM5druan1w','2025-05-19 15:32:21.476174'),('hj2f6zobi7i85bqje4zzpzbg44zsoqae','.eJxVjM0OwiAQhN-FsyHLAhY8evcZyC4_UjU0Ke3J-O62SQ96mmS-b-YtAq1LDWvPcxiTuAjUgzj9tkzxmduO0oPafZJxass8stwVedAub1PKr-vh_h1U6nVbq0IRorHZkAVltiCH3mokr4HhzBadA8JM4AYCDSUrRTolRl8MO_H5AiTpOA8:1uC9sf:rS8N4TWWgAO-VcprHiUscm8iMkksMY26xfN_chsEwRo','2025-05-20 04:26:09.420523'),('hllitq37l662i8apb676kilawzpyfm3v','.eJxVjEEOwiAQRe_C2hBksIBL956hmRkGqRpISrsy3l2bdKHb_977LzXiupRx7TKPU1JnZUEdfkdCfkjdSLpjvTXNrS7zRHpT9E67vrYkz8vu_h0U7OVbZ0pJgCgAABsnnryR4A1izCE6PvqcgW1O4IfgB4kAgQOxE7bkTqLeHy1wONw:1uBnEm:nKjQbhUjVvJ1MBAYbvgyBnQfryDMvpEZ26DaaMd5ThQ','2025-05-19 04:15:28.744952'),('hqk71wqzk5bkj8uoat7wo570cxae2wg2','.eJxVjLsOAiEQAP-F2hB2iTws7f0GssAipwaS464y_rshuULbmcm8RaB9q2EfvIYli4sAB-L0SyOlJ7ep8oPavcvU27YuUc5EHnbIW8_8uh7t36DSqHNc2Hhgn2IEKC5RQa-MIg_Ixk2CXJwmzZgMJtZorfII_mzZWkLx-QI7sjgU:1uCAXc:coHnCE97rxUh1jRf_TqrfkZhUFCiVxF-4VAjL02avDI','2025-05-20 05:08:28.676775'),('huddk8urwxsq7iz4m0yz246vxnc7s5xp','.eJxVjDsOwjAQBe_iGlle_1hT0ucMln-LA8iW4qRC3B0ipYD2zcx7MR-2tfptlMXPmV2YMez0O8aQHqXtJN9Du3WeeluXOfJd4QcdfOq5PK-H-3dQw6jfmlQhGa1NUiGCI4dQpLEpEyUNoAXJ7BQQaIVAeBbJBaPBIRphJRF7fwAB4Ddk:1uBsOl:GODSv6wHISRigsi6xxXNA_iNH7pURXXy8w_OGHjlIyE','2025-05-19 09:46:07.748165'),('hvybmao3hwqxlk0iwzfzndzt4b03darc','.eJxVjEEOwiAQRe_C2hCBUsCl-56BDMyMVA0kpV0Z765NutDtf-_9l4iwrSVunZY4o7gIr8Tpd0yQH1R3gneotyZzq-syJ7kr8qBdTg3peT3cv4MCvXzrlIkck81Kew3WeDKgQLFRyJ7Gsxs4YGA9JELPwZL2hpAyoBsVZyPeHzf5OWs:1uBvHx:XhhwQEKLytbuvuecobVdkumPJE0gnezItLAq0nSgkJU','2025-05-19 12:51:17.710711'),('hyvb8i3pvn3tnrn600pnjw2q34yp9xxv','.eJxVjEEOwiAQRe_C2hCgjAwu3fcMBIZBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIitDHi9LumSA9uO8r32G6zpLmty5TkrsiDdjnOmZ_Xw_07qLHXbw0OrY1YCnhXyBWvyLIqio1NVAw4owZkcDoiMpIzGihpryHjcPYwiPcHJBs3lg:1uCUC4:xd0MdYzkxQ9ioVyqNRSxa21-kCm7cp4YrDTKMYM6NdE','2025-05-21 02:07:32.172801'),('i0ku5pt85wdkkifx59yhxtb8t0kz1hr2','.eJxVjDsOwjAQBe_iGln-rBKHkp4zWLteLw4gR4qTKuLuyFIKaN_MvENF3LcS95bXOLO6KhvU5XckTK9cO-En1sei01K3dSbdFX3Spu8L5_ftdP8OCrbSa2v9AAZIHBBKmlwYBUYvlrzz3oDLUyLHACgGiR3AkIVRUIIFIvX5AgVYOKs:1uBn2e:Ew0oAg4kx72i3_jHBTljlRxWFetQScFqrP0ZaGj0ZhA','2025-05-19 04:02:56.852240'),('i1krzbzttlsupe7rudo6qk4c4ictr3li','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBAY6:O1jMEO2EV5j-V9akZwb8cnds0TysYMue_cDM8MCUYqo','2025-05-17 10:56:50.378677'),('i1s9lksgfh6vzmp40w7mtnisqysojulf','.eJxVjEsOwjAMBe-SNYqCWzsWS_acIXJihxZQK_Wzqrg7VOoCtm9m3uaSrEuX1tmm1Ku7OODgTr9rlvK0YUf6kOE--jIOy9Rnvyv-oLO_jWqv6-H-HXQyd98aq5K2XE0LEEIuDGKgEGJsCaARrliFAzFHI0UQxIjhbE0xwhDd-wM3Ujfo:1uCAbn:X0FfTJvJP_bOSfnHDoDRSKKDaEHnrLsYWpqKa0bqy88','2025-05-20 05:12:47.679254'),('i2f2or3qs8whsimv3reagv4u6yof7yz2','.eJxVjMsOwiAQRf-FtSGFIg-X7v0GMswMUjWQlHZl_HfbpAvd3nPOfYsI61Li2nmOE4mL0EMQp981AT657ogeUO9NYqvLPCW5K_KgXd4a8et6uH8HBXrZagU52eTI-DwMlEflwpkheKO9Vo5NxhRoRAzMyvmNEWSLDFkrJrIkPl9KiTmi:1uCA75:1xv0Qslxq-RIdX57jfTrwySrcU1pHv6d4h3CCGurtDc','2025-05-20 04:41:03.566755'),('i39zsu4u977pz4epzljxt1yg1cd2c6vs','.eJxVjMsOwiAQAP-FsyHILrR49N5vIDx2pWpoUtqT8d-VpAe9zkzmJXzYt-L3Rqufs7gIjVacfmkM6UG1q3wP9bbItNRtnaPsiTxsk9OS6Xk92r9BCa30MUMMzBGttqgRFQxmTJrAnjOxYhxUSsrAiEZlx2SQQekIjr9xRCfeHyJyN6c:1uCAkE:IN9s32bP0ixDQUdr4yFWxtzfqqoy2A3XfvMhkz9Ymxw','2025-05-20 05:21:30.549701'),('i3o5lkbl95u6f8llggeuw27wul4dvpp1','.eJxVjEEOwiAQRe_C2pBiCjO4dO8ZyAwDUjWQlHbVeHdt0oVu_3vvbyrQupSw9jSHSdRFnUdUp9-VKT5T3ZE8qN6bjq0u88R6V_RBu741Sa_r4f4dFOrlWwOheJ_IDdFHky1nEBEeyAp450ZGsikikEFvAAkyIpsI2TlOAqzeH1i5OVk:1uCAaa:JJuPp_TTBCtnu6GjpadeZ-boX3EOQ0TYK2sV0D2YV0I','2025-05-20 05:11:32.965393'),('i4n4umagewgw8ry9tqxinoz4js4lnl0s','.eJxVjDkOwjAUBe_iGlk2XuJQ0nMG62_gALKlOKkQd4dIKaB9M_NeKsO6lLx2mfPE6qSct-rwuyLQQ-qG-A711jS1uswT6k3RO-360lie5939OyjQy7f2EA0BsSEDjkgSIRGjZ3QSBNm5MSXL3g5ooo3BXJEhkMWjuDGaQb0_cIs5Yw:1uCFlt:Z4pcjef8XyMmu5ZekIsiYJ3mkUcit6ZZjTaj5CWX6j4','2025-05-20 10:43:33.216003'),('i801jgr9xn40m2mivxsq6h2q6jo3px0r','.eJxVjMsOwiAQRf-FtSE8OlBcuvcbyACDVA0kpV0Z_11JutDlvefkvJjHfSt-77T6JbEzk9Ky0-8bMD6oDpTuWG-Nx1a3dQl8KPygnV9bouflcP8CBXsZYQJtJqGzMHFGF2yG4JJB54RWmCjlCFFqgaS-U2mkWQJMOWSwSkZg7w8zFDiL:1uBwKL:1_kcr4eWga9bOEYlWa-ads5PUK0Rxeqa5n2Gn1S4xyA','2025-05-19 13:57:49.954444'),('ibn7mx6jbtbv1qkaih4kvdd5m79aqa0y','.eJxVjEEOwiAQRe_C2hCgyIBL9z0DmYFBqoYmpV0Z765NutDtf-_9l4i4rTVunZc4ZXERgwZx-l0J04PbjvId222WaW7rMpHcFXnQLsc58_N6uH8HFXv91sUwWwZnUsZSSoZkA_hklfIWkMAp8FoHYuPPTA4ZHSXSClmHAZ0X7w9UCzkD:1uCC0V:zir4cIMoz4J5ib13LlGODEnmk7LdCB4-D9KODdhTXpE','2025-05-20 06:42:23.767722'),('ic8mvr57jvp5h1kmmal7zp48u34g01ib','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uBoBp:dG6ClrJFZQ1HjSNyfSqbaBitDPY92SHep2xkIsw8QmI','2025-05-19 05:16:29.778349'),('idh98iftbmbhqlwsthasu1oj5qn92bcy','.eJxVjE0OwiAUBu_C2hB-fAVcuu8ZyOMDbNW0SWlXxrubmi50OzOZl4i8rUPcWlnimMVFWGPE6ZcmxqNMu8p3nm6zxDyty5jknsjDNtnPuTyvR_s3GLgN33GFJcAUMqSpJp3IEZyqUOUcakJQOXgdPFt2quu4InkH0gawBeL9ATWaOMM:1uCCZX:U2gXUFujRGd2BamBRl5EHZb6Lgh-SA_hibs5p4GeyvI','2025-05-20 07:18:35.288333'),('if4tc8hlw7k97kgja1zlbexhhcbfc3ii','.eJxVjEEOwiAQRe_C2pB2CgVcuvcMZIYZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uzAnDq9LsSpofUHfEd623Waa7rMpHeFX3Qpq8zy_NyuH8HBVv51mj6ICDBBkHKkMkFI5CFs3UIyCmR8Z3AYDsvGNgmx_3Ig4AdPQGq9wdgMDlj:1uC9ww:o3YuhxCdiwPVTmRDl_e6ng9ocJh1xapiZ7JnQnA1K6U','2025-05-20 04:30:34.398847'),('igusyipqeqsbm8j7i4hfh311vvvo4bqk','.eJxVjEEOwiAQRe_C2pAAhTIu3XuGZmYYpGogKe3KeHdt0oVu_3vvv9SE21qmrcsyzUmdlQtBnX5XQn5I3VG6Y701za2uy0x6V_RBu762JM_L4f4dFOzlW4NPFGFktAM7Nm70ggDkwHPg7DDTaMAaHy2JRWEDgDEADSbjkIOo9wc62zi2:1uCx9Y:YoDfVYbGfTdrGAMbyymqPBCD2Q7-_mdhHVOCDXRvoxY','2025-05-22 09:02:52.577984'),('ihmsig59uh8rnrldwpcylkga6b0wa3u7','.eJxVjLsOAiEQAP-F2hB2iTws7f0GssAipwaS464y_rshuULbmcm8RaB9q2EfvIYli4sAB-L0SyOlJ7ep8oPavcvU27YuUc5EHnbIW8_8uh7t36DSqHNc2Hhgn2IEKC5RQa-MIg_Ixk2CXJwmzZgMJtZorfII_mzZWkLx-QI7sjgU:1uC9LE:9ejPmMXNlfNTJ-uEJ82BS9XapM8HTwbcUPeMs8noPAE','2025-05-20 03:51:36.857336'),('iiq774aoycteih3pmxt1fkxee2am810v','.eJxVjEEOwiAQRe_C2hAKhRlcuu8ZCDCjVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWgx7F6XdNMT-47ojusd6azK2uy5zkrsiDdjk14uflcP8OSuzlWxuNOieLDIpHdINHp1wi0KgckU5ICNE4MBli8sZ7ZWBkZf0VnGWrxPsDBEY3Cw:1uCAbA:sifwHrMHdkmoKHSmkWc2qbHD611hw8AQOE3IKoYSERQ','2025-05-20 05:12:08.118953'),('ikkrr630u24cu36k22qji4ag8vgiidhb','.eJxVjMsOwiAQRf-FtSE8pgVcuvcbyDAMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJUxZnYbw4_Y4J6cFtJ_mO7TZLmtu6TEnuijxol9c58_NyuH8HFXv91raoMUBwnIMdaMzagAJMjghAJzZkDaYBnNXgNXIBKMYphUQUvC9FvD_53TgE:1uBzF5:iyrPWNU6ZQP_A1Ce3BnCI2XIxYgftuFmioO7SPiA08s','2025-05-19 17:04:35.683798'),('il652fzg3oxhuvtpw4g0hnuclontgcdn','.eJxVjDsOwjAQBe_iGln4R9aU9DmD5V2vcQDZUpxUiLuTSCmgnZn33iLEdSlh7TyHKYmr0FacfiFGenLdTXrEem-SWl3mCeWeyMN2ObbEr9vR_h2U2Mu2pgzanlEpGoxzyB6IQEPWbAdjnDWsPPEGGR2xR0pWm4tPBjIojEp8vg00OHM:1uBnFs:29XPdtRJDytvpIVw74bHErmGbdBoBo6lDmCQp0fq0y4','2025-05-19 04:16:36.062988'),('in8444zldfbf2tugr4r6rcg3haefozkz','.eJxVjMsOwiAQRf-FtSEDyMul-34DGWCQqqFJaVfGf1eSLnR7zrn3xQLuWw17pzXMmV2Y1Gd2-qUR04PaUPmO7bbwtLRtnSMfCT9s59OS6Xk92r-Dir2OdQQAb3UuILOD5EURJMBGQmtTRJWU-UJHHg1KMDkKrbRXpNCqYh17fwAyaTgx:1uCAjA:6rxXOTWftQKUxUIsycLnxk-jEKd79CVqoJn3qKHVPAg','2025-05-20 05:20:24.529673'),('iptskber7186c8euowa4qyf95a4qe7jm','.eJxVjDsOwyAQRO9CHSFYzC9lep8BLbAEJxGWjF1FuXtsyUXSjea9mTcLuK01bJ2WMGV2ZaCAXX7biOlJ7UD5ge0-8zS3dZkiPxR-0s7HOdPrdrp_BxV73dcKBEGWRaJBiSSlldqYjMVpsB4GdIMREJWlCOg9FrEnRyVqSlZ5YJ8vHa84Lg:1uC9nt:VBsKKMTRRPucEcD6ZNygAj3ldSIGSL3wHypDqfVmrVc','2025-05-20 04:21:13.804694'),('iqjxrnyzbh6rkiz5d0w6i4er7ba45j0w','.eJxVjEEOwiAQRe_C2pAywEhduu8ZCMNMbdVAUtqV8e7apAvd_vfef6mYtnWKW5Mlzqwu6ozq9DtSyg8pO-F7Kreqcy3rMpPeFX3QpofK8rwe7t_BlNr0raEHm0ckKy5ZziagcWiFbWBA7xz1xo-OkKGDRJ4BjIh06D1I7wKp9wf9Vzek:1uBtWo:uo7DxDMZ5OcTjxMBBr-EhTw5DDTir9QrbGK_tpByrZw','2025-05-19 10:58:30.256198'),('iqpilmbyey03avkzyfnm64j3jg4u6869','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tzuQq:ZieClh8Ml7n391laaYd3ECnEUaHfgeM5zWlNYENeDds','2025-04-16 09:30:48.697865'),('iri7i50pmwmv46760jnnlcjyb1lp65o4','.eJxVjEEOwiAQAP_C2RDpskvx6N03EBa2UjU0Ke3J-Het6UGvM5N5qhDXpYS1yRzGrE7KgFeHX8ox3aVuKt9ivU46TXWZR9Zbonfb9GXK8jjv7d-gxFa-Y0RrCUSYuENGyQw9s-kGbxyBj8Jg0Tl26QgAH0KRLHpMQ58oqdcbHHo3ug:1uByMA:bDJ7a0Elh0cJIJqLajkqw6GOajgmJl153TDA254_oXY','2025-05-19 16:07:50.970671'),('is2gkty3lqx3jn296b201olh03oy3188','.eJxVjMEOwiAQRP-FsyFAC4hH734D2WVZqRpISnsy_rtt0oOeJpn3Zt4iwrqUuPY8x4nERWgvTr8lQnrmuhN6QL03mVpd5gnlrsiDdnlrlF_Xw_07KNDLtjYagwrosxkJjaUz80jKGb0FWNaYeGA_WG994ISaLWWnGIiCC9aD-HwBG2s42Q:1uBmzd:GVv1kuN2rMdI03mD_LhM1GZ-7P6DGV6Cg1kUb04Q6R8','2025-05-19 03:59:49.705266'),('isezu76hgplctklgclp8ctnt2og5aiaq','.eJxVjDsOwjAQBe_iGlmxtXaylPScwdqPTQLIlvKpEHeHSCmgfTPzXibRto5pW_KcJjVn43xnTr8rkzxy3ZHeqd6alVbXeWK7K_agi702zc_L4f4djLSM37oDZHXRgfcC2gs6KSQSBFE45xiQuB8KAOUhMilB7IISQoll8Izm_QFD-Tky:1uBwdm:epzjXFlMf2w7Vs7aZtlh5cHuOCPSCT-romS8YjAHujg','2025-05-19 14:17:54.000577'),('iw62ygtnup12wbbmvroqlv5i4vm7zt1h','.eJxVjEEOwiAQRe_C2hCgVMCle89AhplBqgaS0q6Md7dNutDte-__t4iwLiWunec4kbgIHcTpFybAJ9fd0APqvUlsdZmnJPdEHrbLWyN-XY_276BAL9s6cM6grTtrCkhBoTPGGzuQyuy9Q5thNJbRZNgAgNcjhcQhJWZFA4nPFyWjOWk:1uCAuy:x1tXuaSH-knHtHUUu4p70TkPiXkhXn0LK6I3ULjtcyA','2025-05-20 05:32:36.137071'),('iyr8lw5kps6abk65zbtuxly2znap9k7f','.eJxVjEEOwiAQRe_C2hA6UCfj0r1nIMwAUjWQlHZlvLsh6UK3_73338qHfSt-72n1S1QXBUDq9LtykGeqA8VHqPempdVtXVgPRR-061uL6XU93L-DEnoZdTZiOKNwjECAYmxgEA7ZmonQZRGaGGi2OAs6liRnxxY5Z4pgnfp8AWJwOVE:1uC9mN:i5Bkyx1PvEGjFDdOQ329hzDS1pltpT6SrnwZUbt7Q9k','2025-05-20 04:19:39.632562'),('iz1mqzlcozid4c35y5vlgd63g8jfjw0x','.eJxVjMEOwiAQRP-FsyEgWMCj934D2V0WqRqalPZk_Hdp0oPeJm_ezFtE2NYSt8ZLnJK4CmOsOP1SBHpy3av0gHqfJc11XSaUuyKPtslxTvy6He7fQYFW-jp7pzVBMIE8WQw9doAmOzQOFQysssqWLWVmDUj5TBfFXmHwmPQgPl9K5TlV:1uCEMh:z66p-upP3_y2EjGy4ET6lsfBAnqFZknQziE4FTYhzSM','2025-05-20 09:13:27.414439'),('izqdo7qr2qevunksmoayshxudo4pa3kg','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uGwNO:_068UTMS_lQllhEXHmhmJql-lFTOicj7T4jS9lB_33Q','2025-06-02 09:01:38.951888'),('j3iyndbohqqq1yuztr24iinj6r5wqxmx','.eJxVjDEOwjAMRe-SGUURThqbkZ0zRI7jkgJqpaadKu4OlTrA-t97fzOJ16WmtemchmIuBjya0--aWZ467qg8eLxPVqZxmYdsd8UetNnbVPR1Pdy_g8qtfmsvEAkAwcUggr0SoISOeiQgrywus8Pe54CheEKK0XNXOpZzdlGjeX8AGJ433w:1uCHlY:9VFZ1lTze_BhXiEhJ5YecviK2WdUURUAJfgLHdNEmzk','2025-05-20 12:51:20.776707'),('j46x865t9fkccr4caktvime34hyd5ibw','.eJxVjEsOwjAMBe-SNYrspqlTluw5Q-S4DimgRupnhbg7VOoCtm9m3stE3tYSt0XnOA7mbBDRnH7XxPLQaUfDnadbtVKndR6T3RV70MVe66DPy-H-HRReyrdW31FuuQF1PQgzgCgRIJPXgKhZBdsuuOSgy0iUGupFMgQfBD0m8_4AJn439g:1uBvkJ:o909y9VRmbBBKObkmt7NcMB7L8o6sCJzQPNN5Dn7mn8','2025-05-19 13:20:35.666970'),('j5shpioefl1k4ti8voqgzus5qo68ylkr','.eJxVjMsOwiAQRf-FtSFQHhaX7vsNZIYZpGogKe3K-O_apAvd3nPOfYkI21ri1nmJM4mL0G4Up98VIT247ojuUG9NplbXZUa5K_KgXU6N-Hk93L-DAr1866zs4HMwrLPXChNZqwE8k1OGXAp89pqJLQGgy4P3aLIzxoyoQmJA8f4AQ1o5Hg:1uBzOa:6NyU7geAZxsQEWnr-ooNoaRXTbmyPNF8vBxEJL1wP2w','2025-05-19 17:14:24.807435'),('j87mdovd21laxei21n56arhekbh60gxg','.eJxVjDsOwjAQBe_iGlmO1-sPJT1nsNY_HEC2FCcV4u4QKQW0b2bei3na1uq3kRc_J3Zm0iI7_a6B4iO3HaU7tVvnsbd1mQPfFX7Qwa895eflcP8OKo36rZ0FB8W6EHCioC0kQEsxFaMlIbqI1mQoiKkoLUErEsJFbYyBPCkh2PsDIyI3bA:1uCAxc:gWcDDq6gSfAwH8LY4J-mPGkzHsy6QRG8wLnp8psTsCo','2025-05-20 05:35:20.866086'),('jafcexiilasd8xstk6lm60yenkwly71v','.eJxVjDsOwjAQRO_iGll2_Kekzxms9a6NA8iR4qRC3J1ESgHlzHszbxZhW2vcel7iROzKlHXs8tsmwGduB6IHtPvMcW7rMiV-KPyknY8z5dftdP8OKvS6r0WQA9kkrJdGeKUU-AxYCLMZtDVIRqLWVpY9OqSQgLJy3hvvig2k2OcLHEs38A:1uD2Mi:W2IQtWxgMBcoBwUYnS9qF1eChPrRJYMYKITi2azV9z4','2025-05-22 14:36:48.078344'),('jaqvm21as3o0xhjajzmfpss51p65v66s','.eJxVjEEOwiAQRe_C2hAK7QAu3XuGZmaYSNVAUtqV8e5K0oVu_3vvv9SM-5bnvck6L0md1ejV6Xck5IeUTtIdy61qrmVbF9Jd0Qdt-lqTPC-H-3eQseVeG0IECpYGMWAjADA4Dpy8uEQ4ugiSgnHRTYzyxSQSeCIraIbg1fsDIL44nA:1uCADu:krRiEzvDrl0-dM76plzCfuQ1MAifI6YFEWk_wPncD6c','2025-05-20 04:48:06.984608'),('jemdrtqserw4qgcoilmp8efku8qxu5pr','.eJxVjEEOwiAQRe_C2hCgjAwu3fcMBIZBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIitDHi9LumSA9uO8r32G6zpLmty5TkrsiDdjnOmZ_Xw_07qLHXbw0OrY1YCnhXyBWvyLIqio1NVAw4owZkcDoiMpIzGihpryHjcPYwiPcHJBs3lg:1uCATW:u5i52Fp_qXpTThCubTt0tni_g8ip3v5hUPe2XTjQSyk','2025-05-20 05:04:14.203037'),('jg6r0w0vtlamt9mbesjtkakr71k7xo8e','.eJxVjM0OwiAQhN-FsyEsP1Y8eu8zkF1YpGogKe3J-O62SQ96m8z3zbxFwHUpYe08hymJqwDvxem3JYxPrjtKD6z3JmOryzyR3BV50C7Hlvh1O9y_g4K9bGs2hD6dMVkdBwZibZTKBM4k57KydosZMkD03mYyqIeIoHy27IzBi_h8AUlnOIc:1uCAXA:oj1lzEyJQJP6A-wDKadQMWXHGbyG-VF1S0HGe30znwU','2025-05-20 05:08:00.321154'),('jidr514yac9ifhw6bb5mtdan1o6i7u9p','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0CqW:bznvHlnUv_9zk4NhIOFJB5aedKudluwDuA7G9igzzZA','2025-04-17 05:10:32.349312'),('jk79o4lgoouu8ghctnctws1lj7cbxzqb','.eJxVjDsOwyAQBe9CHSHAfEzK9D4D2jVLcBKBZOwqyt2DJRdJOzPvvVmAfcthb7SGJbIr84ZdfiHC_KRymPiAcq98rmVbF-RHwk_b-FQjvW5n-3eQoeW-1mCTU1I4MGSiJz9E7ZJAN6JWRmpprOtIgOmRUt0LwjFJ5z1aMXj2-QLptzbB:1uCAZ9:4yQCz4zqkwILHke5vgnsweoH5swkJTcauCzBsz9ZJfI','2025-05-20 05:10:03.858935'),('jln6javf8upfb7i7dfyaz4xc4b8bodk8','.eJxVjDsOwjAQRO_iGln2Zu01lPScwVr_cAA5UpxUiLuTSClgynlv5i08r0v1a8-zH5O4CGPF6bcMHJ-57SQ9uN0nGae2zGOQuyIP2uVtSvl1Pdy_g8q9bmskPgOhswCxZJcjBa2sCQhqSGpLxKIZGIms1UERkgGNthRHeogkPl_hiTat:1uCA8n:F-7X87EKKLDS5QGndGrxzNJnSMYj72xnb8nES2i-X-E','2025-05-20 04:42:49.765308'),('jmkcwyl71mdnkdan8esutji8r2tn20xx','.eJxVjEsOAiEQBe_C2hBgaD4u3XuGSTc0Mmogmc_KeHedZBa6fVX1XmLEba3jtvA8TlmcxaCVOP2uhOnBbUf5ju3WZeptnSeSuyIPushrz_y8HO7fQcWlfmtWymcTjbbeFSBdXPFgmKMLgQiJhoIBLNkCg4-RFIJm8BAwGaTkxPsDJjI4cA:1uCDL5:cxs08zXiSlIaJoKnsIzri9ChDLaHwHJwoF51LM1X8xI','2025-05-20 08:07:43.502780'),('jnsgp0bk35rrl1beawb376y5nnr7ipy4','.eJxVjDkOwjAUBe_iGllOvldKes5g-S_BAZRIcVIh7g6RUkD7Zua9VC7bWvPWZMkjq7MCb9Xpd8VCD5l2xPcy3WZN87QuI-pd0Qdt-jqzPC-H-3dQS6vf2qNQLwiUOCYARyayGJOSCQGZugAmekeE3A2utxbTwBGkxIJgAwT1_gA98jh3:1uCWvG:4QW9iCN0Xp3mNSPEic-FSJHEeeYaOQtlLqdod0Advb0','2025-05-21 05:02:22.145753'),('jppfptnl6abp5mmybxjzwydzvyfnaj6e','.eJxVjMsOwiAQRf-FtSE8Bigu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmZmKn3zFieuS2E7pju3WeeluXOfJd4Qcd_NopPy-H-3dQcdRvHTGCcsWkbEshi5N1KE1BYWUkE7PIoIQHRNDeeuMICoBXJUnvNCXN3h8uozh0:1uCD0d:3qlRz9fz74I5TUZrNCkD8JinO5AmdK2vVjoHKlyPG8g','2025-05-20 07:46:35.724292'),('jzygyjw3tnv4z5oltfyxauw844b2lzgb','.eJxVjUEOwiAURO_C2hCgpYBL9z0D4f8PUjWQlHZlvLs06UK3897MvJkP-5b93uLqF2JXJseRXX5TCPiM5UD0COVeOdayrQvwQ-EnbXyuFF-30_0byKHl3jYwiW6byVACoRQIl9zQ7wZjrZYCjSSJOjkcVCQJRgckTIKEVRCkY58vJ8U4Vw:1uC0Yb:ich-_eQzXYuNLQ1wvFkQbOPbqtr9tysRHhSdO3Ou7mc','2025-05-19 18:28:49.290065'),('k19k6k8r07o4sb8i6ma5u4lzmalik1tn','.eJxVjMsOwiAQRf-FtSECHR4u3fcbGoYZpGogKe3K-O_apAvd3nPOfYkpbmuZts7LNJO4COWUOP2uGNOD647oHuutydTquswod0UetMuxET-vh_t3UGIv39paY4EzolPR25QtgfbsiGJI3pFOZjAIkM9GI3GgMPgEIRjjQCMCi_cHPks4ig:1uC971:Zv0GtpwjoripHUTtiWiQqtHgKh9M_fU7rGgixwM9cLg','2025-05-20 03:36:55.329948'),('k1zqvqpj70uf9mkohutol2g0it7xiuzz','.eJxVjMsOwiAQRf-FtSEFWh4u3fsNZIYZpGogKe3K-O_apAvd3nPOfYkI21ri1nmJM4mzcF6cfkeE9OC6E7pDvTWZWl2XGeWuyIN2eW3Ez8vh_h0U6OVbB8MhQTAqgfPeakBMA-ak9KB4JMoTG_bMRKwhEwVL6DIw2nFSqJx4fwBEujnt:1uByiw:6SbFebcxZ2xN8FMSdtNsUYeUTVcXvqOyoEMR202Wulo','2025-05-19 16:31:22.826197'),('k4a10lb0k26izc8rrnjt74ify9fjbch1','.eJxVjDkOwjAUBe_iGlleMPanpOcM1l9sHECJFCcV4u4QKQW0b2beS2Vcl5bXXuY8iDora47q8LsS8qOMG5I7jrdJ8zQu80B6U_ROu75OUp6X3f07aNjbt6aEAMVGFF-AhcWHWCM5Zu88R0hQg0GbnI0eoEpMhgwFOqVQOQCo9wdB2Thc:1uBvWK:GLsrVtzt2kR_fteoct7Y4mU-Wl5UtYtDTZRveQ1jBQI','2025-05-19 13:06:08.375263'),('kb1gp465121xml3q2pdlbvtodcmyyzwz','.eJxVjEEOwiAQRe_C2hBgCKUu3XsGMgwzUjU0Ke3KeHdt0oVu_3vvv1TCba1p67ykqaizAu_U6XfNSA9uOyp3bLdZ09zWZcp6V_RBu77OhZ-Xw_07qNjrt7ZDzF48D8YbBEsQwI4oaCx4zkRegstjZBNKJHaMEsQgcywYgMSo9wcu6TkY:1uCFp5:_zsiEZgZNTfKlwNJSMbpfCKpLEnSWx0Xel-Ky_TIxd0','2025-05-20 10:46:51.758884'),('ki4rxarzfib1wm3pq8rv5aga6dzap9p5','.eJxVjEEOwiAQRe_C2pBKOwy4dN8zkBkGpGpoUtqV8e7apAvd_vfef6lA21rC1tISJlEX5a06_Y5M8ZHqTuRO9TbrONd1mVjvij5o0-Ms6Xk93L-DQq18a5Q4cERB8IkZEYj6gRNEh-x6m7uMkMj6s2UBzobBYuxyJmOcBwvq_QE0rDi6:1uCA7P:lLpWGdMJlhv3c9FENyyPfKcRp978-rNOFtDegFOHQj8','2025-05-20 04:41:23.612241'),('kia8494xbmcxzl5eapaityn7oss9lpyh','.eJxVjDsOwjAQBe_iGlnrLw4lfc5grddrHECOFCcV4u4QKQW0b2beS0Tc1hq3zkucsrgIq8Xpd0xID247yXdst1nS3NZlSnJX5EG7HOfMz-vh_h1U7PVbO-eZISgI4B2YEIwfiBJra9DoUpTKGQzbYFxBH4AJvbKUCJQdtD6L9wfiBTc1:1uC8gN:xYbFlKuPhUSb03lvp8fqulKF0M8iYMC6kyQkIhBTjbY','2025-05-20 03:09:23.457386'),('kmmya0v4lel14e4y03cjfb4vqcu569od','.eJxVjDsOwjAQBe_iGlleOYljSnrOEO3HiwPIluKkQtwdIqWA9s3Me5kJtzVPW0vLNIs5GxgHc_pdCfmRyo7kjuVWLdeyLjPZXbEHbfZaJT0vh_t3kLHlbx1AlIjZa4AxsKLru0jkVBQ6VOy8i0JOGKIGdIl7D8KJQ4I4xDCY9wdrBjmL:1uCAjO:71GOlWv9WqAtzLEh6gqHlYbZz9RP_76yFypeQMkwXwc','2025-05-20 05:20:38.559984'),('kqb5um8h8nwr4gu5h7o2mh97urki9amo','.eJxVjMsOwiAQRf-FtSE8OlBcuvcbyACDVA0kpV0Z_11JutDlvefkvJjHfSt-77T6JbEzk9Ky0-8bMD6oDpTuWG-Nx1a3dQl8KPygnV9bouflcP8CBXsZYQJtJqGzMHFGF2yG4JJB54RWmCjlCFFqgaS-U2mkWQJMOWSwSkZg7w8zFDiL:1uFcjj:ogsGQ4yQj6eyLY-RllHyVmPOiv_zO4Q-9uVRPlgLpuE','2025-05-29 17:51:15.837587'),('kr91cjy39buhvzehpvanca5q7d4vxdmg','.eJxVjEEOwiAQRe_C2pCBDi24dO8ZCDCDVA0kpV0Z765NutDtf-_9l_BhW4vfOi9-JnEWWltx-l1jSA-uO6J7qLcmU6vrMke5K_KgXV4b8fNyuH8HJfTyrZO1DFapZECbDNHQhFGhTZkAYEpGMeQcY3BOKxyZ9GBHHJBxIGcYxfsDIiM31A:1uCAlh:X6NDn-QcSU8YpkoMsItWmmB4mXHbaOI1Mi-4CvWW8Fw','2025-05-20 05:23:01.255315'),('kt39beum51f5rdyuc9jgsamjczty4w0b','.eJxVjMsOwiAQAP-FsyFbHi716L3fQBZYpGogKe3J-O-mpge9zkzmJTxta_Fb58XPSVwEWnH6hYHig-tu0p3qrcnY6rrMQe6JPGyXU0v8vB7t36BQL98vJyAcgFw8a41O2aCy09kCjmQIOOtonTNRswHFCiyoiANmndHkUbw_8s43Tg:1uBtVo:Yd-oXOrtAyEUwyjngRRW_cTPlcerXzOgeFSBhocQt0s','2025-05-19 10:57:28.503155'),('kux0gkj6afj9lpvidvwqsh07u5767vod','.eJxVjDsOwjAQBe_iGln-4cSU9JzBWu-ucQDZUpxUiLuTSCmgfTPz3iLCupS4dp7jROIijPbi9LsmwCfXHdED6r1JbHWZpyR3RR60y1sjfl0P9--gQC9bnc4BbTYWldceOKmcyDprvGftiYlB25E2bDi4wTiLNA4IEDCAVtmIzxc9ZDi1:1uC9at:nopzCsC8lgq5K3UkRG0LnrMMIn_-iGH-6Z4v_rdmWec','2025-05-20 04:07:47.935255'),('kz2f3y61mj4ou7c44jwa7zvyo5folh91','.eJxVjDsOwyAQBe9CHSHAfEzK9D4D2jVLcBKBZOwqyt2DJRdJOzPvvVmAfcthb7SGJbIr84ZdfiHC_KRymPiAcq98rmVbF-RHwk_b-FQjvW5n-3eQoeW-1mCTU1I4MGSiJz9E7ZJAN6JWRmpprOtIgOmRUt0LwjFJ5z1aMXj2-QLptzbB:1uBuU0:QyZrWLP3qyVXlqMN86tEhbiCMFDVRkUuIB-rNR-78oI','2025-05-19 11:59:40.864651'),('kz69nx316a16wrtq9cqsdo2vdfgq3jed','.eJxVjDsOwjAQBe_iGln-4B8lPWewdtcbHECOFCcV4u7IUgpo38y8t8iwbzXvndc8F3ER_ixOvyMCPbkNUh7Q7oukpW3rjHIo8qBd3pbCr-vh_h1U6HXUoEKwHD1giVqDY6-NRUpAU6JoTUzOIBFQmVRSyZtgbWDnEDV6CuLzBRuOOGo:1uBsss:XTRctBrOkT2JpQKAi4Sy45gGgFB6nXTtGBGG2_7TMzY','2025-05-19 10:17:14.310017'),('l2wbd8azdsqlwdaazd73kb623yxf1etg','.eJxVjEEOwiAQRe_C2hAZBqEu3XsGMlMGqRpISrsy3l2bdKHb_977LxVpXUpcu8xxSuqsYDiqw-_KND6kbijdqd6aHltd5on1puiddn1tSZ6X3f07KNTLtx4ZXfI2sDGSWMwgCIxkJWfJhsFmCMGjO2EiO3iPgIHZidgAQIzq_QFKCTie:1uCAmP:59bZ7yui6_uHFn8uGV6vBL1zeV6frrVEAXQj-hr9Q5E','2025-05-20 05:23:45.403952'),('l51z196jcypk0kzoadsrf2dewosvd15v','.eJxVjDsOwyAQBe9CHaHFLB-lTJ8zoAXWwUkEkrErK3ePLblI2jczbxOB1qWEtfMcpiyuwoG4_I6R0ovrQfKT6qPJ1OoyT1Eeijxpl_eW-X073b-DQr3stU0KMWqTB-Y0Ao4ePRmbjPWkYNAuAxhAjxrYmV1Fx16RtaSRLRjx-QLtxDbb:1uBtRY:G3wA2VQS_aDl3eb65BFU0fen9b9RwyJbEOSkvzEM3CA','2025-05-19 10:53:04.401940'),('lco1b4lm1v8wp8s8s9budosx8yj3dtat','.eJxVjEEOwiAQRe_C2hBAyhSX7nsGwsyAVA0kpV0Z765NutDtf-_9lwhxW0vYelrCzOIitPHi9LtipEeqO-J7rLcmqdV1mVHuijxol1Pj9Lwe7t9Bib18awXobKKsSUUCYh6tGQEQ-OysgYF9Vi5pTqgGzjH7TBqJlHLokIwT7w9NszlV:1uBy4q:6BBBVQb6Wpr_zJ091y-oHjshaIV-1y5aHaE3XnbX-84','2025-05-19 15:49:56.963496'),('ldequswu0eefccn4zhr7uc4s0nwsbbsw','.eJxVjMsOwiAURP-FtSGXewHBpXu_gfCUqqFJaVfGf5cmXehqkjNn5s2c39bqtp4XNyV2YWiInX5p8PGZ216lh2_3mce5rcsU-K7wo-38Nqf8uh7u30H1vY41AeRgiwSdNAVhpAZRskFbSCOWoJK2IliSZwRZ9MhYVBxAIUUEwz5fDGQ3IA:1uCB1E:47bPD77ukm8K1368X48gYfC8c9IQ01baQed3IvbcERo','2025-05-20 05:39:04.355888'),('lhjdtcrcysbdzgtd1q7lf1k2m68y6x8r','.eJxVjEEOgjAQRe_StWkYmY7UpXvOQNqZqaCmTSisjHcXEha6_e_99zZDWJdxWKvOwyTmagDQnH7XGPipeUfyCPleLJe8zFO0u2IPWm1fRF-3w_0LjKGO2xsDnz0zNUIAXiVdvHLsSNqYHKIkJEhE6HRrUmJw2AG2nXdNahvvzecLRb04Tg:1uBw0C:xkoSMd6GOZaG_vf7ob4ojNhExkuBLVjg0o9SrgvvkcY','2025-05-19 13:37:00.925082'),('li7a54h4uicztxiwlq4bfj7cojvaqh8k','.eJxVjEEOwiAQRe_C2pCBAQou3XsGMsBUqoYmpV0Z765NutDtf-_9l4i0rTVunZc4FXEW2oI4_a6J8oPbjsqd2m2WeW7rMiW5K_KgXV7nws_L4f4dVOr1W_sM2o862IGUBUMmJJ_siIVVcNloRGvIIwJ60iqoNHBg1oTgwJmUxfsDBW43PQ:1uCA6p:EqNGST95RovWEwx5fj1OHf6AzVnYy1fhFWvBmVKXjwU','2025-05-20 04:40:47.687306'),('lj5tlyf2rzv90mr3iin0apfojqmt6534','.eJxVjEsOwjAMBe-SNYrquHUDS_Y9QxTXNimgVupnhbg7VOoCtm9m3sulvK0lbYvOaRB3cRDRnX5Xzv1Dxx3JPY-3yffTuM4D-13xB118N4k-r4f7d1DyUr61QWxqjKws3FoDDKgBRI2xNatq5p5RiEApCEEGpoDnYFQR1o1F9_4ATc44kQ:1uCAWM:OiwzgQw7ug52w32-Msi8yizRaZDYxLKDdJGJV1TgAhc','2025-05-20 05:07:10.335580'),('ljeetca8ebfopl57f1i8tvwbh9palizs','.eJxVjDsOwjAQBe_iGlnrLw4lfc5grddrHECOFCcV4u4QKQW0b2beS0Tc1hq3zkucsrgIq8Xpd0xID247yXdst1nS3NZlSnJX5EG7HOfMz-vh_h1U7PVbO-eZISgI4B2YEIwfiBJra9DoUpTKGQzbYFxBH4AJvbKUCJQdtD6L9wfiBTc1:1uBs1F:rHa7iMn0n_detskVCt2NV5ghD0yAicKsSL5VD6PYhJQ','2025-05-19 09:21:49.198719'),('lmuj4euaqrts5ijnqzkd8of5jc6ea3ne','.eJxVjDsOwjAQBe_iGln-fyjpOYPl3XVwANlSnFSIu0OkFNC-mXkvlvK21rSNsqSZ2Jmp4Nnpd4WMj9J2RPfcbp1jb-syA98VftDBr53K83K4fwc1j_qtIWuLxhmUkaQTWILzQNEb4SdFYBUJQKGjLKilMQjSWKcCBghWS5jY-wMt0TgD:1uCAia:BY_p8kxLrbQ-V6Of5iRr6FWQrKG4lKXffsdhQ5vkm88','2025-05-20 05:19:48.435432'),('ltmpfow7sf19zlehitlliv0734kv124e','.eJxVjDsOwyAQRO9CHSEDZoGU6X0GC3aX4CQCyZ8qyt1jSy6SaqR5b-YtxritZdwWnseJxFUY24nLb5siPrkeiB6x3pvEVtd5SvJQ5EkXOTTi1-10_w5KXMq-dgl6pZRmcuDA-j6FiNkG0Hs49JZQkQrsMJMxukeynAEydyl12oP4fAEsrDip:1uCITp:zO8NhovYoApFFTtgFibBIBgqiZJddGBmqihQHoj2UPc','2025-05-20 13:37:05.932483'),('ltsks566otqs8me8u705vyggh8spqpws','.eJxVjEEOwiAQRe_C2pDCDEVcuu8ZyEwHpGpoUtqV8e7apAvd_vfef6lI21ri1tISJ1EXZRHU6XdlGh-p7kjuVG-zHue6LhPrXdEHbXqYJT2vh_t3UKiVbx3O4jB4xx5NoN4EsJ6As0GgTGJRAFLuWDrMmdEGR95ATyE7NohGvT8ZTTfW:1uC9wp:YbeMo8fegXwv4P4yUZFAhoWQeuGf1DPQCvYgVg2aAhQ','2025-05-20 04:30:27.510407'),('ltvwp2jar7dqmmy1gkv40gx39xv307d4','.eJxVjMEOwiAQRP-FsyGUxQIevfsNZFkWqRpISnsy_rtt0oNe5jDvzbxFwHUpYe08hymJi9BenH7LiPTkupP0wHpvklpd5inKXZEH7fLWEr-uh_t3ULCXba20PXtyPBBbBk-ZDCfFgEm5CMZZSziQsSNnQsg58xYjkI0ZtEIQny8vzDlh:1uBnow:TuHwdZ89fnqFNsgJ2iolCFy2UjqL8Vg8b5YgagvDj3Q','2025-05-19 04:52:50.503998'),('lxuxa5gsaisil3scawaaqrfb7wzjo3vq','.eJxVjEEOwiAQRe_C2hDoEAZcuvcMZGCoVA0kpV013t026UK3_733NxFoXUpYe57DxOIqQGlx-V0jpVeuB-In1UeTqdVlnqI8FHnSLu-N8_t2un8HhXrZ60jgFEfkpCCBBqeTU9Ybi5a8Q2Dweuce2Y52cISGTHaUIymDYx7E5wsarDgL:1uCB2D:K2B20bwVUqsyYosv6KNY_dKzyPC1sYfU7_1M4SWofwU','2025-05-20 05:40:05.329723'),('m4xlhhig8jwttpd3rnpjsfqzh3xmf935','.eJxVjEEOwiAQRe_C2pDSMjC4dN8zkAEGqRqalHZlvLtt0oVu_3vvv4WnbS1-a7z4KYmrUB2Ky-8aKD65Hig9qN5nGee6LlOQhyJP2uQ4J37dTvfvoFAre50HirrjECCwBdKAIZnIigAGh73KvRuQtbFOYwbEnWTDxI7ARGuc-HwBREM4jg:1uCIMj:0JzoT5NYuu3RDH1I2dZ0jJODD0fKW4zYtUnOyOqR7Rg','2025-05-20 13:29:45.480452'),('m866hhy8ezvq1aaqdjr0yminoqfp53rw','e30:1tVUcK:JkXs5CJlOBGrsvwmXY5naMO5mqsnDFuGqHusbaQuiK0','2025-01-22 17:22:56.261546'),('magp3jb7apk5lw8ky01omsq4088kajze','.eJxVjMsOwiAQRf-FtSEMAh1cuu83NDMMlaqBpI-V8d-1SRe6veec-1IDbWsZtiXPwyTqosAEdfpdmdIj1x3Jneqt6dTqOk-sd0UfdNF9k_y8Hu7fQaGlfGsfnHeSwUlnHWIwJJhs54OncwzAnIEthogcCQyO6ASMAT-yWImW1PsDBYo3eg:1uBvdx:oe8QXRoh3ECvnlOQBlR-WcyrwBl5YYOO1ZZl7DbP4b8','2025-05-19 13:14:01.192067'),('mahiss6tin1fod7ztlkdws6d2dnm4uxe','.eJxVjEEOwiAQRe_C2pABLKUu3fcMZJgZpGpKUtqV8e7apAvd_vfef6mI21ri1mSJE6uLCqBOv2NCesi8E77jfKua6rwuU9K7og_a9FhZntfD_Tso2Mq3HrAnT44dhr4Tn9FS9gE7NoIYWJxhCwMggcUgcoaQKFljDQjkPGT1_gAwezkT:1uBtdV:191IM0KG-hMiaysA7QSFKzuvH2LeLU5bF1wMGLWC0YE','2025-05-19 11:05:25.396200'),('mfprlaq0fox25iaa5abkalheoc1gmpad','.eJxVjMsOwiAUBf-FtSG8Hy7d9xvIBS5SNZCUdmX8d9ukC93OzDlvEmBba9gGLmHO5Eq4V-TySyOkJ7ZD5Qe0e6ept3WZIz0SetpBp57xdTvbv4MKo-7rJEpEJrj3hRdjI0qZJDKjtXUQTQZAnpnUIhXnHOd2hwaVUOiElt6Rzxc9HTgV:1uCAau:MEEuou4tXh8eBWy71qO_SE0up2p8LOyY0rHrjHM-O6o','2025-05-20 05:11:52.953191'),('mo5rhkjlp1l27ha72x93j74yv8g5hdtd','.eJxVjEEOwiAQRe_C2pCWKYy4dN8zkBkGbNVAUtqV8e7apAvd_vfef6lA2zqFraUlzKIuynijTr8rU3yksiO5U7lVHWtZl5n1ruiDNj1WSc_r4f4dTNSmb536wUQj0RJZyJkZvRV77iJgD94zOvEJCDijcJfJOQLjcEAEzAORen8ARO44pA:1uCB2P:x77vdBefNl8Xwu8B9R0M6MqtrzUgMba5Xojutvp3p38','2025-05-20 05:40:17.523028'),('mpx7y1kn46skr0tyt4d42x07k2rfz3or','.eJxVjEsOwjAMRO-SNYpI1MQJS_acobJjmxRQKvWzQtydVuoCljPvzbxNj-tS-3WWqR_YXIxLYE6_LWF5StsRP7DdR1vGtkwD2V2xB53tbWR5XQ_376DiXLe1qpxBJHWoAJ2WoCVx9OA9BodUCMjlBEpdAfDBRXY5uy2FqMwi5vMFWvo5SQ:1uC9LR:wFx7hX8r8EhGseSZ2cN4fiwTXyuRp5xxrwgq7o6WOT4','2025-05-20 03:51:49.490571'),('mrd58opnev0cogy4dwyhz3u2efqshte4','.eJxVjDsOwjAQRO_iGlmOvU7WlPQ5Q7Rrr0kA2VI-FeLuJFIK6Ebz3sxbDbSt47AtMg9TUldlA6rLb8sUn1IOlB5U7lXHWtZ5Yn0o-qSL7muS1-10_w5GWsZ97RmBpfVCEqAVxzFD45oEbMiytxL2iB0akyHF4IjBdJi9hy4TYlKfL0iqOKw:1uCHsI:zUMoU59pqUE0eWDB3vhmi4GeHyJYhTg2IOivtcC9s9M','2025-05-20 12:58:18.981220'),('mrnayrz8ux1c26yu92iy1q395f95w76v','.eJxVjEEOwiAQRe_C2hAcoIBL9z0DYZhBqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xInERoMTpd8SUH9x2QvfUbrPMc1uXCeWuyIN2Oc7Ez-vh_h3U1Ou3ttpwAbbhrKwPrgAa0mUwGsGgglRCUBoJTHED-uysKRRc9sCMlJMV7w_1VzhE:1uBn9x:gIWHRfjGmojo8RbtPiV7jF5kHm31k5mdToIpLLZV9EE','2025-05-19 04:10:29.913077'),('n0ml1uh1mwvd0kdpgrk8mdb3e7gsb9ug','.eJxVjE0OwiAUBu_C2hB-fAVcuu8ZyOMDbNW0SWlXxrubmi50OzOZl4i8rUPcWlnimMVFWGPE6ZcmxqNMu8p3nm6zxDyty5jknsjDNtnPuTyvR_s3GLgN33GFJcAUMqSpJp3IEZyqUOUcakJQOXgdPFt2quu4InkH0gawBeL9ATWaOMM:1uCCM5:OV-w71u8YkO-dDm4lu9RRg0Upqka9WLFMdP84r4neHU','2025-05-20 07:04:41.695515'),('n4of14ne77drm23dsrzrf5ox4w0ky7tl','.eJxVjEEOwiAQRe_C2hBg6FBcuu8ZCDNQqRqalHZlvLtt0oVu33v_v0WI21rC1vISpiSuwmglLr-UIj9zPVR6xHqfJc91XSaSRyJP2-Qwp_y6ne3fQYmt7GvwAD6zYcW2iwqJfDJgc6d2YpDy6BB9hNQjsiP0xDSC1b5nnQCc-HwBKMA4Nw:1uC9Ts:rwnPQRB7L7SEs2VUsXIvL2Suw0AcrAqGajsZ58ySqPk','2025-05-20 04:00:32.992911'),('n5nmkloyzhc6ahkh1d44roddhhmoap83','.eJxVjMsOwiAURP-FtSGABS4u3fsN5F4eUjWQlHZl_Hdp0oXuJnPOzJt53Nbit54WP0d2YXKS7PTbEoZnqjuKD6z3xkOr6zIT3xV-0M5vLabX9XD_Dgr2MtYWiEAoJ10QCtBYA2c5gsguZK0FDQwRlSQRM2YHoxdAeqLJJQOWfb4ZBjgc:1uBxhS:LwLBDwSyWFdueLNZb01djPp5YNaREMyf2rFFHNxtC4U','2025-05-19 15:25:46.867862'),('n5xxpjqj9q6o8b0bm64kbxpwtpnhjobs','.eJxVjDsOwjAQBe_iGln-re1Q0ucM1tq74ABypDipEHeHSCmgfTPzXiLhtta0dV7SROIsTHDi9LtmLA9uO6I7ttssy9zWZcpyV-RBuxxn4uflcP8OKvb6rblYDd6AG5xTFNBkZk8IiqNHbT1oAtQhemOsjkMs1kYbuXBxcM2kxPsDE4U3rA:1uCAXO:hf_snxox1-2BQ1xUWmI1no_uaMCg9fr3OHsNGAiHaqE','2025-05-20 05:08:14.598474'),('n9v4wmt8d7ulfbtstvwbo0gzqtefq329','.eJxVjEEOwiAQRe_C2hAECoxL956BTGFGqgaS0q6Md7dNutDtf-_9t4i4LiWuneY4ZXER2ipx-l1HTE-qO8oPrPcmU6vLPI1yV-RBu7y1TK_r4f4dFOxlqwdmbzyAJ1BGY2B2hnTSiNY6coETKlLkyELiAYI5AzDbDTtOzmvx-QIzYTiS:1uCCYI:gqIo0QuPSJSlFnuGB5_LU3khoRCABesUikSQCYeE1i8','2025-05-20 07:17:18.808923'),('na98wxcw6jon90slb1hmcy4z1yfa0a08','.eJxVjDkOwjAQRe_iGlm2x5OFkp4zRLOZBFAiZakQd4dIKaD9773_ch1ta99ti83doO7sEkZ3-l2Z5GHjjvRO423yMo3rPLDfFX_QxV8nteflcP8Oelr6b42WuOSCTEDUhlhAFBBShACNJONcY2XSFMVWS6WSOEHGYMB1IBH3_gBBrjjg:1uCA8y:JHhcCsb8CWWM8qQWzDL9nNkJ73-XU-8xWxwJNrHFAmk','2025-05-20 04:43:00.951389'),('nano8b8aqkiguv4xb3d27pnfwzdixzbu','.eJxVjEEOwiAQRe_C2hAo4xRcuvcMDcxMpWogKe3KeHdD0oVu_3vvv9UU9y1Pe5N1Wlhd1ACDOv2uKdJTSkf8iOVeNdWyrUvSXdEHbfpWWV7Xw_07yLHlXgdhaz0IO5pHOluDSdAnJ84nawQkJOTgRycWIRBGb2YJBAGRgUB9vkCaOIg:1uC9w6:ADsSdv6cxH3f-N1ykQ6okBTUtmJ5XjjqzWw1PBJAjI4','2025-05-20 04:29:42.499218'),('ndy1kij46ivuhp9uxck89da96xjvipxv','.eJxVjMsOwiAQRf-FtSE8Cgwu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmWnl2-l0jpkduO6I7tlvnqbd1mSPfFX7Qwa-d8vNyuH8HFUf91qCjIZnAl0misE7qAlmCBwIjTXZWJSuMmLImgeB80cm65K2KwlH0yN4fEMI3lw:1uCHpS:qp5QdqzXMeMxinXB4fpqGMgorqMvrNMS9KCeIgjwXuM','2025-05-20 12:55:22.865873'),('ne596auz4x6zb8c04am6fh1y1p2pi9ji','.eJxVjDsOwjAQBe_iGln-O6ak5wzWeneNA8iR8qkQd4dIKaB9M_NeIsO2trwtPOeRxFkYZcTpdy2AD-47ojv02yRx6us8Frkr8qCLvE7Ez8vh_h00WNq3VqySDrFG68DVgIOuJVEyBD4ErbwDRREtG109JAupsCmMIeKASJHE-wMkETjJ:1uC9RP:7Fg20PNRyXoqYrPee5xwnHAuJx5zBSl7y4rSfbmqDlw','2025-05-20 03:57:59.204040'),('nf519jvyu4yx2r1hy3rsixf6twu24wnm','.eJxVjDsOwjAQBe_iGlnZ2F4sSnrOYHm9zySAEimfKuLuECkFtG9m3mZSXpcurTOm1Ku5GHJkTr-r5PLEsCN95OE-2jIOy9SL3RV70NneRsXrerh_B12eu28NJQCtBg56rkIKLa4SNRGlwMNx4LY4IeaoEVo9GqlSA7Pmmr15fwBuDjoY:1uBy3u:KKQUqG2RDX8zq24VNHYj6kRam8S98c5biP0_L_OSrkw','2025-05-19 15:48:58.590299'),('nfoj1i2po4a9vyw5jzfvrckvswu7zuey','.eJxVjDsOwjAQBe_iGln-rh1Kes5g7fqDA8iW4qRC3B0ipYD2zcx7sYDbWsM28hLmxM5MWWCn35UwPnLbUbpju3Uee1uXmfiu8IMOfu0pPy-H-3dQcdRvXYww3jmKVmmhIWWQMk_We4VEnoqepMhRGCwWFAGJEqEAaXQpWkjA3h8hxThr:1uCAIt:yG4hNsqTTbS8Z40sJJ87xNO587vT9EyysJDLgdS2OM4','2025-05-20 04:53:15.335116'),('nj7zbpbeh029hxbje48ajf137gjxn6mc','.eJxVjEEOwiAQRe_C2hAYoAwu3XsGMjBUqoYmpV0Z765NutDtf-_9l4i0rTVuvSxxYnEW4EGcftdE-VHajvhO7TbLPLd1mZLcFXnQLq8zl-flcP8OKvX6rZ0ZDFNAS-xohJwBCRGMAs05OzumVAKBTsUjBKdYDUob7TVbQEYl3h8v_jfI:1uCAWb:nZwNuTHJ4Kgz7TdWanTdhHUjGsmcrL6lpU_bv09wymM','2025-05-20 05:07:25.842186'),('nv8h2mn7sroftfzdb9c8keo92ccvst2r','.eJxVjMsOwiAQRf-FtSEMw6O6dN9vIAMMUjU0Ke3K-O_apAvd3nPOfYlA21rD1nkJUxYX4VCcfsdI6cFtJ_lO7TbLNLd1maLcFXnQLsc58_N6uH8HlXr91qQoO4PecjaQNDN4BdoiAavBnos2xaUcNWgTCYpBRjCEqEoclPYg3h__xTd6:1uBssr:rtQlh0KSgc_O-TsmZYr85CuPYQFvZ8GQUhMVbg-OX48','2025-05-19 10:17:13.610322'),('nvs82ivqqkozul58s6nbtvcakwo210tk','.eJxVjLEOwyAQQ_-FuULhDgTq2L3fgA7uUtJWQQrJFPXfG6QM7WTZz_auIm1riVuTJU6srgqMUZffNFF-ydwRP2l-VJ3rvC5T0r2iT9r0vbK8b2f376BQK8c6ZRgI7ZCsuK4kwaCRJMgWAjJnOMzIaGn05AwED9k7jx7ZZQ_q8wU9ZDh4:1uC9UJ:J3N0m5fkHx9GyVb-r3dzFTaZMwiunYBhkK7PgId5ctw','2025-05-20 04:00:59.133042'),('nxtq2tv4ib59u6ndyr48dtxa2v2i3au9','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1txj4q:XBwAFPYU4g5W-n9kM22KtbTVuJnlIQXsM7-sYZLZ64w','2025-04-10 08:59:04.253083'),('o48igh5c4isblb18uqiyy96hyyyigpd9','.eJxVjMsOwiAQRf-FtSHC8HTpvt9ABgakaiAp7cr479qkC93ec859sYDbWsM28hJmYhcGGtjpd42YHrntiO7Ybp2n3tZljnxX-EEHnzrl5_Vw_w4qjvqtnaaCmlAZkYRCrX3BYp2zlEVBIChR4RmV97ZIkgIJlPCQPFgjwVj2_gBIWzhH:1uCJoZ:oNPYF_J4Tbv6hoQxqP0rWe7yR7zP05gPKmFnoZJflpk','2025-05-20 15:02:35.981982'),('o9tfabbgde3wexei3pxu75b4etzrvaur','.eJxVjMsOgjAUBf-la9Nc-pDWpXu-obkvBDWQUFgZ_11JWOj2zMx5mYLbOpSt6lJGMRfjPZjT70rID512JHecbrPleVqXkeyu2INW282iz-vh_h0MWIdv3SMHIZdElYSoAYcKoXfRZeTWQwJgF5W8ck6BuQ25AcwxaHAS89m8P11BOLU:1uCDG1:Q-Z2YI966GlwjDrZ7KAJbueiFKd0cG1xxpmbnysxBy4','2025-05-20 08:02:29.347971'),('oat9cgj46s3vzuu5avi9nm7shn4ddlya','.eJxVjDsOwjAQBe_iGlmb9Xcp6TlDtF47JIAcKU4qxN0hUgpo38y8l-p5W8d-a2Xpp6zOynhUp981sTxK3VG-c73NWua6LlPSu6IP2vR1zuV5Ody_g5Hb-K0jks_ODR0xdiV7KsZHcqaAEOKQBEBSwMDA3gDkaKNNQsl6cRhoUO8PGDo3tw:1uCLjV:CFEVSq3W44dYc7FN5G2s2zUmxAM2A87PaIhKVA5ByTQ','2025-05-20 17:05:29.038578'),('obbkvgwmifdp23e6wlxikh62552hyylk','.eJxVjEEOwiAQRe_C2hCgMEWX7nsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwk7gIp8Tpd4yYHlx3QnestyZTq-syR7kr8qBdTo34eT3cv4OCvXxrQ6hHpUfKiBGBwFoiRmAaNA-Q0JnkFKQzZ0s2RpW9B5cMeYMDKC3eHzWWON0:1uCB8s:Z16SPnXIWwE3wX-nB1OMHacsJm_rZF4BvPpdj_g9B0Q','2025-05-20 05:46:58.225059'),('oep1j341pi7yvve8rfzsd1ey7od5dui9','.eJxVjMsOwiAQRf-FtSFQHhaX7vsNZIYZpGogKe3K-O_apAvd3nPOfYkI21ri1nmJM4mL0G4Up98VIT247ojuUG9NplbXZUa5K_KgXU6N-Hk93L-DAr1866zs4HMwrLPXChNZqwE8k1OGXAp89pqJLQGgy4P3aLIzxoyoQmJA8f4AQ1o5Hg:1uCOw0:ifivZ-i9pFBdC4MiJ2LDMdjonc-X8jeP2_yxAbksyD0','2025-05-20 20:30:36.416611'),('oklr138s1shn54tmww1n97mizo3v4qr7','.eJxVjMsOwiAQRf-FtSE4w6su3fsNZIBBqoYmpV0Z_92QdKHbe865bxFo32rYO69hzuIiAIw4_a6R0pPbQPlB7b7ItLRtnaMcijxol7cl8-t6uH8HlXodNaL3kdgDa0IsZ4xGJ-cdQMFkeFKatY2lkEpULFvlvII8xazQA7L4fAE0kDho:1uCARL:uqVKCabxMo1PKLUsiCXAsJ1toK6XrTiz-a21NDkEEx4','2025-05-20 05:01:59.075360'),('ovtay5lhf76637o81sp1vxjg8gvmr0p1','.eJxVjDsOwjAQBe_iGlnY8Zo1JT1niLwf4wBKpDipEHeHSCmgfTPzXqbP61L7tencD2LOxmEyh9-VMj903JDc83ibLE_jMg9kN8XutNnrJPq87O7fQc2tfmskUo4E0asP2QGWyMcCLjMJoFBwiQsAxYBdd3LK3gdJih5iQoli3h9KSjiC:1uC9PT:0Tx7qwb8uIDzyTrI2VIlcWZneFO1_des5-7MFpuT_BE','2025-05-20 03:55:59.847086'),('oxbth8sjc9lddr55n2ivk5bk75scu5o8','.eJxVjDsOwjAQBe_iGln4s_5Q0nMGa3ft4ABypDipEHcnkVJA-2bmvUXCdalp7WVOYxYXAVGcfkdCfpa2k_zAdp8kT22ZR5K7Ig_a5W3K5XU93L-Dir1uNbFHZ42ywJCdC6FwJEBTCmoIHJVxfAarNW8GI-EACBbRKe_JxEF8vhQeOGg:1uBsWK:0hcd8EZDLrX4OA5rYy5LsUKJthUVfUwd6MrohtBFFFc','2025-05-19 09:53:56.495743'),('oxj17foobjzpl3npydpysufw0gdr7sd0','.eJxVjDsOwjAQBe_iGln-brKU9JzBWttrHECOFCcV4u4QKQW0b2beSwTa1hq2zkuYsjgLY504_a6R0oPbjvKd2m2WaW7rMkW5K_KgXV7nzM_L4f4dVOr1W4PFFIdYnLGQIyAQOVfMmH1hSwa8AjSEGsaiCsPgU_K6sFYcszeI4v0BL9I4TQ:1uCAV2:jx_IuTazEiNyu0b_YdHyp8DzcHd8Fnl3PhI4ieX_6p0','2025-05-20 05:05:48.510136'),('oxofifznnr51oa5uv5nzo9dtauajp387','.eJxVjDsOwjAQBe_iGln-JP5Q0nMGa9e7xgHkSHFSIe4OkVJA-2bmvUSCba1p67ykicRZRCVOvyNCfnDbCd2h3WaZ57YuE8pdkQft8joTPy-H-3dQoddvjZqM88XGMJqhRGKvstdBB1DM4HlwiAiEzhk7gCvGItiRmDNmi1jE-wMXgTlP:1uCExC:mIWhXlOJv4yTvlFTWxEcMeW7ydXh9fJyGeYDAdsDwPw','2025-05-20 09:51:10.229547'),('ozvl60xrkx3vh086dwnq8nwujj1qob1a','.eJxVjEEOwiAQRe_C2hAQOoBL9z0DGWBGqoYmpV0Z765NutDtf-_9l4i4rTVunZY4FXERMIjT75gwP6jtpNyx3WaZ57YuU5K7Ig_a5TgXel4P9--gYq_fGo31FrT2jtCzhYCJtSKlODtDylIygA4haEZbIENyxpIvA2lmH87i_QEHfDhG:1uBt4W:IsEMM91G-uKw-WBlUdJTWRZw1rHc-04y3P2cxY8f6LA','2025-05-19 10:29:16.529706'),('p0c6s40joe626797efrm0jomlxhkqshl','.eJxVjDsOwjAQBe_iGln-Z01JnzNYu16bBFAixUmFuDuJlALaNzPvLRJu65C2VpY0srgK40FcflfC_CzTgfiB032WeZ7WZSR5KPKkTfYzl9ftdP8OBmzDXoOKHVJWGi2Gqn3lzC5jAMAS9Y5itdqzsxCyqaQ0WXIxGNMBGe5AfL5FcDht:1uCAWK:vXu_lb7OZTAqdhuJYmz-ANt4Tf4OED4S8mInJfyawJE','2025-05-20 05:07:08.072018'),('p10w8ugdokmkuawnh7i8ydrcl02yk0s3','.eJxVjEsOAiEQBe_C2hAYaBpcuvcMpGnAGTWQzGdlvLtOMgvdvqp6LxFpW8e4LWWOUxZnMYARp981ET9K21G-U7t1yb2t85TkrsiDLvLac3leDvfvYKRl_NYV0BKDL2xsDswAyvqKybJhTU47o1XB7GkADJpDQmUw1IJAPrmgxfsDLwg37w:1uCAvE:OcEqCxiPM_XvApwRWrUPFwmXdlSh-SfxEsj2kaI7uRk','2025-05-20 05:32:52.191883'),('p6ea5e7iz8617sibjq9175da2li2wkc7','.eJxVjEEOwiAQRe_C2hCBUsCl-56BDMyMVA0kpV0Z765NutDtf-_9l4iwrSVunZY4o7gIr8Tpd0yQH1R3gneotyZzq-syJ7kr8qBdTg3peT3cv4MCvXzrlIkck81Kew3WeDKgQLFRyJ7Gsxs4YGA9JELPwZL2hpAyoBsVZyPeHzf5OWs:1uBteC:BtNZExIOXIH-w3sITgktJP6wUkmRCg3N54fSGR4rU50','2025-05-19 11:06:08.136508'),('p7oakpoqpsmlr6ymzl43f4poioxj215o','.eJxVjDsOwjAQBe_iGlnrb2JK-pwh2o3XOIBsKU4qxN2RpRTQvpl5bzHjsef5aLzNaxRX4Yy4_I6Ey5NLJ_GB5V7lUsu-rSS7Ik_a5FQjv26n-3eQseVeawppIAATaLQpJsUIJgWPaKwnVqMLoJxmpyhFNwQiz0oHgIjKkhefLxdbOCs:1uBtN0:oWBtKhMSgEL2ECnL4L8dfUUtrtLL3lf5oH5v3FNMT48','2025-05-19 10:48:22.118611'),('p9japbdrtw9fvgjdw4c3i51vrcu0rj5x','.eJxVjssOwiAURP-FtSFA5eXSfb-BXC4XqRpISrsy_ruSdKHbOWcm82IB9q2EvdMalsQuTHnNTr9pBHxQHSjdod4ax1a3dYl8KPygnc8t0fN6uH8DBXoZbSO8Eyg1IGTp8pQsSS3IkPBKGOc05gmd9WjBnvVEiiBFykTSf08J9v4ANBk4gA:1uCAzm:BxzdK-_QGhcgRjKjbQSefr1T6UBHSisrSfi33nmA34E','2025-05-20 05:37:34.071601'),('pb3295wo7oiz9l9cesiq6patbi7mxvr9','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzuSu:ypGYSWvV3kZIn5eaTjtG_T5my2ODxclgAcB2cHC5blE','2025-04-16 09:32:56.619044'),('pgw9euvh5kimfalj60k8u6uvtlj3t980','.eJxVjEEOwiAQRe_C2hAcoIpL956BzDCDVA0kpV0Z726bdKHb997_bxVxmUtcukxxZHVRzqrDLyRMT6mb4QfWe9Op1XkaSW-J3m3Xt8byuu7t30HBXtZ1yuDJAVjwmdkKWRCCcExkCBxKNn4gY_0ZwkohCBnnxTM6OkkaRH2-EDE4Tg:1uBsZF:qioMG6jX5C1_-Mg05G-M5a_5C9cCjSc2ZX37JDtkVvU','2025-05-19 09:56:57.149343'),('phymwyaehchsryz4iwraxzydtgudqpr1','.eJxVjLsOwjAMAP8lM4qI86oZ2fmGyk4cUkCt1LQT4t9RpA6w3p3urUbatzruTdZxyuqirEN1-qVM6SlzV_lB833RaZm3dWLdE33Ypm9Lltf1aP8GlVrtYyPALgoYzIYGh7F4COzjGahQwGIQQwEAMSzIlrO1PpkggwfrJKvPFx0PN-Y:1uCIRp:1gHFMh1WOfFIbQG70DQHuRBbC_09DDpLQOJnXrRdJdE','2025-05-20 13:35:01.830449'),('pk0et60qk3e26epd88yvnxfye7osn36k','.eJxVjEEOwiAQRe_C2hAKhRlcuu8ZCDCjVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWgx7F6XdNMT-47ojusd6azK2uy5zkrsiDdjk14uflcP8OSuzlWxuNOieLDIpHdINHp1wi0KgckU5ICNE4MBli8sZ7ZWBkZf0VnGWrxPsDBEY3Cw:1uBxFZ:7I3ePOW2M6GcRah1b2JO4O343WQ9tNM8lYrGUUalUMU','2025-05-19 14:56:57.649592'),('pk7bo5l0jiek18waacoyljztqiwv7bqw','.eJxVjDEOAiEQRe9CbcggMiOW9p6BDAPIqmGTZbcy3t2QbKHtf-_9twq8rTVsPS9hSuqiDFp1-F0jyzO3gdKD233WMrd1maIeit5p17c55dd1d_8OKvc66nRyhsE4chxdcVI8IVkoaITEpqNFD4LChJnPbB0WQLEQfQQ2ROrzBSiCOAI:1uC0KM:zcxVAxfS2rV9i0JaaWhuynqyKizMauEBPGITMLF4i_A','2025-05-19 18:14:06.809827'),('pkqr7vvhzz6b3wjvjp0665h21tyoqnsf','.eJxVjEEKwyAQAP_iuUiMLq499t43yK6uNW2JEJNT6N9LIIf2OjPMriJta41blyVOWV2VBVSXX8qUXjIfKj9pfjSd2rwuE-sj0aft-t6yvG9n-zeo1OsxZichI7iQeMww0sA4JPQlWWtLdkICBpMxNPhSRlsweDQM4IlFBNTnC0CEONg:1uCKH0:P6orD8Nqk_6o9r2umseMjtXtpcyQogiMgmGsbTHwXSU','2025-05-20 15:31:58.556917'),('pnbjpv816lbjpwjzf1oe7ptel3i5yhz9','.eJxVjEEOwiAQRe_C2hCmQAGX7j0DmWFAqoYmpV0Z765NutDtf-_9l4i4rTVuPS9xYnEWBsTpdyRMj9x2wndst1mmua3LRHJX5EG7vM6cn5fD_Tuo2Ou3DpjYMTptdQFb3AAYRvAleNSBCI1hnRRpUM6iUSUlgsLk_GiAh6zE-wMSyThX:1uCFPo:MeaSotiqGUEyijXVV-yNZAv08Esl2pjp3q8HWPwG1rA','2025-05-20 10:20:44.587872'),('po334s1ox54hqk2h9p5d4gqokpbubhi6','.eJxVjEEOwiAQRe_C2hDoUKAu3XsGAjODVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEWoLw4_a4p4oPrjuge661JbHVd5iR3RR60y2sjfl4O9--gxF6-tQbO6D2xR4I46GhgtAN5axyaMVk1Ke214qSREEllDRbd5IgTZDAs3h81PjiU:1uCBHf:IArQq6CuWdUGQTh8HCc47v94N9Bf4D0AwKzkGsKh4W8','2025-05-20 05:56:03.943232'),('pqnfv1tap5c355r4ios70xmr7rywg0ei','.eJxVjDsOwjAQBe_iGlnE6y8lfc5geb1rHECOFCcV4u4QKQW0b2beS8S0rTVunZc4kbiIwVpx-l0x5Qe3HdE9tdss89zWZUK5K_KgXY4z8fN6uH8HNfX6rTOgCoVIIXDRzpjiXVDs0UL2BhJr8OgwDJmZkve6gGKjicCYM7AW7w9KBzi2:1uCWUV:gaZ5AJxdW80rMezQrP85Zq86DQTL8dAZmIvCbovjVZ4','2025-05-21 04:34:43.555745'),('psnk2111npa4qow7yz8qauwpf1cw75gv','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1uB3wn:s_WL7fy3FcjcvZZbi8CVRusbAL7Uzhirdn2Ms4oDMlw','2025-05-17 03:53:53.645328'),('ptv0c2fl6gp4l9q4htqt3sd7cahi77x8','.eJxVjMsOwiAQRf-FtSE8B-rSvd9ABgakaiAp7cr479qkC93ec859sYDbWsM28hJmYmdmPDv9jhHTI7ed0B3brfPU27rMke8KP-jg1075eTncv4OKo35rZYsyYJ0Sypope4xaGquzROVBS0qgiigFhPMkwSQnogFKEizaSRCy9wfWmzcQ:1uBs8H:FXq_hAX76Y0oCF_qxye4ciWI0OoROkRgqXIEEz4v3hU','2025-05-19 09:29:05.133956'),('pva87j9uwuabji118505yvw4toj0aom7','.eJxVjDsOwjAQRO_iGllk_V1Kes5g7a4dHECJFCcV4u4kUgroRvPezFslWpea1lbmNGR1UZ0z6vTbMsmzjDvKDxrvk5ZpXOaB9a7ogzZ9m3J5XQ_376BSq9saReiMKBC9AWMMmRA6x4zI2RO6YAF9KGJjD8CQOVhyEGULWHzv1OcLF1M39g:1uBygh:NEd4JiZs_EvaIlapXgUaO7RAl8icyYSYJmtHo03SYbw','2025-05-19 16:29:03.174031'),('pwrfx74f7putqvgujqptq3kcas8c9edp','.eJxVjEEOwiAQRe_C2hCgVMCle89AhplBqgaS0q6Md7dNutDte-__t4iwLiWunec4kbgIHcTpFybAJ9fd0APqvUlsdZmnJPdEHrbLWyN-XY_276BAL9s6cM6grTtrCkhBoTPGGzuQyuy9Q5thNJbRZNgAgNcjhcQhJWZFA4nPFyWjOWk:1uBn7a:r3dJjzKEdsHcghEWcpDKjXfgukz3XClMQOzRsVJfPf8','2025-05-19 04:08:02.921887'),('pzjvxevbws08x2tfml09kgpk4tolm35v','.eJxVjDsOwjAQBe_iGlnr_4aSPmew1j8cQI4UJxXi7iRSCmjfzLw387St1W89L35K7MqkkOzyuwaKz9wOlB7U7jOPc1uXKfBD4SftfJxTft1O9--gUq97HaMwoC0OaB2VoGUWES1pB8oAIqCTgwFQqII2VktMuuykSKCgrFDs8wXwlTZR:1uCAnu:kFdB0jsPoWx-E_Kx2r4f8IJQ70-d4DtqGh9aBjgBa8g','2025-05-20 05:25:18.068496'),('q17oix1zoimm6z7hdeuht2xz124mtrmh','.eJxVjDsOwjAQBe_iGln-JeulpOcM0a69JgEUS3FSIe4OkVJA-2bmvdRA2zoOW5NlmLI6K4udOv2uTOkh847yneZb1anO6zKx3hV90KavNcvzcrh_ByO18VsbJI-CFtElNoWi68mb6Ewq0sU-gJTIxlmXIQL07AsFdALJlsDsQb0_Hfg37g:1uCBGt:y58fMkkh6B4Bttfllv0QMM11AQ2LflX3b_1-9d5HWV4','2025-05-20 05:55:15.707361'),('q18iizigwr3nsoggywij16g1iqwww2yl','.eJxVjDsOwjAQRO_iGlle-U9JzxmsjXeNA8iR4qSKuDuJlAK60bw3s4mE61LT2nlOI4mrAO_E5bcdML-4HYie2B6TzFNb5nGQhyJP2uV9In7fTvfvoGKv-7pwIEIuGrI2NrOxAApiADaglC_aMKOLe3JIukDIMQaL4HJw1vkoPl87wjfy:1uCB3c:5jMFN9_uT7Q7lgc_mLBMsVstOknUKTQg0y_Yd8K_RaU','2025-05-20 05:41:32.360790'),('q4krhldk7ed34ugbbk2yas3ye8y0bx3y','.eJxVjMEOwiAQRP-FsyFsaRfw6N1vaJYFpGogKe3J-O9K0oMe5jLvzbzETPuW573FdV6COAsYxem39MSPWDoJdyq3KrmWbV287Io8aJPXGuLzcrh_B5la7msXE2h2ExMRWD1-Y5ViRI-eIAVlDFgyFic2IQxAGiFNDjk6THoQ7w8J8zfb:1uBn3j:6aF_EwUBrGQZB8OHr_wdnUM6SGudxWhBagnBFBT1iBc','2025-05-19 04:04:03.757080'),('q86wu4krjsxjg7kraxujcahurvamzr0h','.eJxVjDEOwjAMRe-SGUVWnNDCyM4ZIttxSAElUtNOiLtDpQ6w_vfef5lI61Li2nWOUzJn4_BoDr8rkzy0bijdqd6alVaXeWK7KXan3V5b0udld_8OCvXyrZmzgNDgQcQlD8QOWYAgJ-VMSuggy3hS9qQ4asAgokjehTQggnl_AH9iOec:1uCAVZ:z_Qfjo7CAWCg5eMvcZ6HsOS802ozrhjC6Agvhvw8dSU','2025-05-20 05:06:21.254086'),('q9uvdo2dabe3laobkczh58vc8j7uz3xl','.eJxVjEEOwiAQRe_C2pB2CgVcuvcMZIYZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uzAnDq9LsSpofUHfEd623Waa7rMpHeFX3Qpq8zy_NyuH8HBVv51mj6ICDBBkHKkMkFI5CFs3UIyCmR8Z3AYDsvGNgmx_3Ig4AdPQGq9wdgMDlj:1uCBLA:6SrVueNcmXuilIgbYarAUerjODAM3qGs0kzz93LjKr0','2025-05-20 05:59:40.770167'),('qbo66i2exlf6oggspb07gfz75ch7xqgo','.eJxVjMsOwiAUBf-FtSEF5FGX7vsN5D5AqgaS0q6M_65NutDtmZnzEhG2tcStpyXOLC7CitPvhkCPVHfAd6i3JqnVdZlR7oo8aJdT4_S8Hu7fQYFevnVAzWrQOqAbTFbAlr3LjgNx0pTMCMaEoJwG9CoAG3LZWxgVnZFMQvH-AOhUOFw:1tzpQn:Yfbo1D6QgI6pw6q19r0HfD5Ak7BONpcCi9ibhTJXZ4I','2025-04-16 04:10:25.221349'),('qii1hi5yoc8s7iwxra2xjck55xdoy4gn','.eJxVjMsOwiAQRf-FtSHQAaa4dO83kBkeUjU0Ke3K-O_apAvd3nPOfYlA21rD1vMSpiTOAkCL0-_KFB-57Sjdqd1mGee2LhPLXZEH7fI6p_y8HO7fQaVevzUmF33BqMA4ImNwREDtCKJGTHZIhTw7UgOPlhly8ayUcZFYWeuyF-8PJc44OA:1uCDql:6jLfdkUHj98lR4GujtjtxBqTWn2lv6U_FWzBDwz7cZ8','2025-05-20 08:40:27.757194'),('qjgbg9fiurjbfe90sn2jlhnk3vw46qvl','.eJxVjDsOwjAQBe_iGln-sP5Q0ucM1sa7xgHkSHFSIe4OkVJA-2bmvUTCba1p67ykicRFGB_E6XcdMT-47Yju2G6zzHNbl2mUuyIP2uUwEz-vh_t3ULHXb50BIpmglbaosvbggYoCraK1wI6NJc0uFGKLIYAmMNlELKSMK2cfxfsDDEo3gw:1uCAd4:gt7wjdKNWTqNtczC9wzspNRqqzBTpHjaCNulnBGJ0g4','2025-05-20 05:14:06.344785'),('qossfjwwhitjgal905xw837d7op3iyqk','.eJxVjLsOAiEQAP-F2hB2iTws7f0GssAipwaS464y_rshuULbmcm8RaB9q2EfvIYli4sAB-L0SyOlJ7ep8oPavcvU27YuUc5EHnbIW8_8uh7t36DSqHNc2Hhgn2IEKC5RQa-MIg_Ixk2CXJwmzZgMJtZorfII_mzZWkLx-QI7sjgU:1uEP2g:nEUvZhWGj84XDQwJvOAxryVD6-VAe6O9TutR4s1MgbE','2025-05-26 09:01:46.143954'),('qxmesn2dyd3k51vb5o33xx9ysvvtqo99','.eJxVjDkOwjAUBe_iGlnON_FCSZ8zRH8LCSBbylIh7g6RUkD7Zua9TI_bOvbbonM_ibkYAG9OvyshP7TsSO5YbtVyLes8kd0Ve9DFdlX0eT3cv4MRl_FbY1LJQC4pRg5nbbxTijGCI598EEk6NOAkxxQwtdkTAwfOqLEZWibz_gA2Rjil:1uCBIL:jSJgaaZro5JtxUpONSuXLjIgY0aZgn99gDig8rcBrBU','2025-05-20 05:56:45.954746'),('qzh7bz8zilmm32q8ohtj0izq3dbim296','.eJxVjEEOwiAQRe_C2hCoBQaX7nsGMsMMUjVtUtqV8e7apAvd_vfef6mE21rT1mRJI6uLcp06_Y6E-SHTTviO023WeZ7WZSS9K_qgTQ8zy_N6uH8HFVv91iXm6BnDmVGyCdRlb4NlJwHIo7CxngnAgwEXQ6HY98AOggMSLgLq_QEjSTiY:1uCKLX:9NHMzfoucJhW7e9IgRolqtOONCTNoUvj_VkLNK6M8wQ','2025-05-20 15:36:39.314892'),('r0ge6gc89lyc866eb6056zzhp2m0msbe','.eJxVjL0OwjAQg98lM4qSXO56ZWTnGaL8QQoolZp2Qrw7qdQBFsvyZ_stnN_W4raWFzclcRaDFaffMPj4zHUn6eHrfZZxrusyBblX5EGbvM4pvy5H9--g-Fb6WllDnAwrxGCAtFH2hpYocJeRkaK2GkYNAzEgx27Je2KGjMBBi88XqDA1fw:1uBtUB:In7tCyWnh8X-pyJAbGRUzFOKUPLzvYhJ4gr1Lr4jft4','2025-05-19 10:55:47.106157'),('r3p7zu63c8ufpxcup5svwqd1jjd2yz7j','.eJxVjMsOwiAQRf-FtSE82hlw6d5vIDAMUjU0Ke3K-O_apAvd3nPOfYkQt7WGrfMSpizOwoIWp981RXpw21G-x3abJc1tXaYkd0UetMvrnPl5Ody_gxp7_daA5Ecy4DwMzNYAeQ2kskqErFMsaFKJqAfW1pbsGFVGdCN5cEg6ifcHK8s4Ug:1uCKnp:6438Y8Kp0cPJWRMN1wN5uyuyEhR6ZKAmb14OWXNawQQ','2025-05-20 16:05:53.660047'),('r6f8xuxhbthcy8pm8m6tj7psb3rkub7n','.eJxVjMsOwiAURP-FtSGXewHBpXu_gfCUqqFJaVfGf5cmXehqkjNn5s2c39bqtp4XNyV2YWiInX5p8PGZ216lh2_3mce5rcsU-K7wo-38Nqf8uh7u30H1vY41AeRgiwSdNAVhpAZRskFbSCOWoJK2IliSZwRZ9MhYVBxAIUUEwz5fDGQ3IA:1uCAfm:qvWLdw_-QY9n4d6QfSvtlZCxOeqqARfHjk5phLimFFo','2025-05-20 05:16:54.071249'),('ra7gafs92i9mt2jprs6phfkj3haixe4i','.eJxVjEsOwjAMBe-SNYqCWzsWS_acIXJihxZQK_Wzqrg7VOoCtm9m3uaSrEuX1tmm1Ku7OODgTr9rlvK0YUf6kOE--jIOy9Rnvyv-oLO_jWqv6-H-HXQyd98aq5K2XE0LEEIuDGKgEGJsCaARrliFAzFHI0UQxIjhbE0xwhDd-wM3Ujfo:1uCB0F:pOL67F33Mm2ElUbpEITQdRC_qflJaLN9Wi3cdSzXKnM','2025-05-20 05:38:03.265292'),('rbcy1xb4zcpal2mryher8da1wzym0skx','.eJxVjEEOwiAQRe_C2hBgGKAu3XsGAswgVdMmpV0Z765NutDtf-_9l4hpW1vcOi9xJHEWxoM4_a45lQdPO6J7mm6zLPO0LmOWuyIP2uV1Jn5eDvfvoKXevvXAoVqDBAGDZiSjgi6FICETKnagtba1DtYHcpgheWUYB8gIznMB8f4AH6M3uQ:1uCAd0:g8wMktmnhXegUErKYNhAvHDwRcxaWQqGC4ngPFtPD9A','2025-05-20 05:14:02.565219'),('rdoyy4hsq6s7ar7wgtovbqrht5lrvkue','.eJxVjMsOwiAURP-FtSEIlIdL934D4XK5UjWQlHZl_Hdp0oUuZ86ZebMQt7WEreclzMguTErJTr8txPTMdUf4iPXeeGp1XWbgu8IP2vmtYX5dD_fvoMRexlqDJyQPxqOyQMk4IoxREYER5LM1aSKnJj3C2VFSNqPJwmgclrDAPl9urTna:1uDm0t:PHlH1kI2p-IinFm7fkqf6VQax0c7q4wDdSINklkqgVU','2025-05-24 15:21:19.919211'),('relldfkot957yicuenavog9pzougaakd','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0CSq:cp8i9FT6447hJx6x66sC5FD-3laVHSMi_xZX-WKnunE','2025-04-17 04:46:04.511518'),('rirfyckiic72i774m239bbkibqvyqlbj','.eJxVjEEOwiAQRe_C2pAZKHTq0r1nIAxDpWpoUtqV8e7apAvd_vfef6kQt7WEreUlTKLOylinTr8rx_TIdUdyj_U26zTXdZlY74o-aNPXWfLzcrh_ByW28q0JBgCKaLywYWQZITnXJU8ZPOYxE3NvLXIH5NAReRQSHoiwt8Cs3h8bKTei:1uC9rl:BuZbWWAMfWUk-kyu7xgC_YVodvxhz7kmx8BEZqk6uIE','2025-05-20 04:25:13.499876'),('rjlgvu301il3125qidpe9i2cgziwe2u5','.eJxVjEEOwiAQRe_C2hAoTpm6dN8zkJkBpGpKUtqV8e7apAvd_vfef6lA21rC1tISpqguCqw6_Y5M8kjzTuKd5lvVUud1mVjvij5o02ON6Xk93L-DQq18awSHXQfkxCDn3gxIGdgk4yEzDnL2BOzRR2u8YJfJJc429cIWMlpR7w_6ozg-:1uBsQg:26XSFXUA70-Pp0OUoJ1pp9j0wKl_S_crY5e-IExgGY4','2025-05-19 09:48:06.612703'),('rjq4uzhdjdva6xucvymrfy745r6r1ifx','.eJxVjEEOwiAQRe_C2pDOlA7o0n3PQBgYpGpoUtqV8e7apAvd_vfefykftrX4rcnip6QuConU6XflEB9Sd5Tuod5mHee6LhPrXdEHbXqckzyvh_t3UEIr3zpiNyCgQ2AhgmgiWEEnyEzkpM-BExqDKWPnjD1nKwFh6A0AUc-i3h8X7jeb:1uCBg2:xawTQx5J4a8HTOc7_kpdqdyYWdMtMI4ZTbY9D8o8Mbw','2025-05-20 06:21:14.050743'),('rm64yix8gs9m8uni2byb67jkmozwbvmo','.eJxVjDsOwjAQBe_iGlnGfyjpcwZrvbvgALKlOKkQdwdLKaB8b0bzEgm2taSt85JmEmehlRKH3zcDPrgORHeotyax1XWZsxyK3GmXUyN-Xnb3L1CglxEORkXWEKOLgfXJeWeJGR3lgGQyEwPraMkYb_m7CLWPVntzzFdEEO8PM2o5MA:1uCAuQ:FNKbBLT0nsvpTc6fStYlR4c8oRr021QC-JPe-Al4-Kk','2025-05-20 05:32:02.737722'),('rn8wdt8l16571xzkim03b2jwqgp5jub4','.eJxVjEEOwiAQRe_C2hBaYGBcuvcMZIBBqoYmpV0Z765NutDtf-_9lwi0rTVsnZcwZXEWWonT7xgpPbjtJN-p3WaZ5rYuU5S7Ig_a5XXO_Lwc7t9BpV6_tcrotNfgrLU6jzR6bdBF432xAwEC8YCmgEJQyjIyFgfWMFDUyZAT7w_Jtjbc:1uBry4:XFJTumF7smPp1NpkCCQ0WTbzmi5_2KRB2mFh5_B8yQM','2025-05-19 09:18:32.104352'),('ro4dwq14zp6su2wlhbylpwbuc0ehiqym','.eJxVjDsOwjAQRO_iGlmOvU7WlPQ5Q7Rrr0kA2VI-FeLuJFIK6Ebz3sxbDbSt47AtMg9TUldlA6rLb8sUn1IOlB5U7lXHWtZ5Yn0o-qSL7muS1-10_w5GWsZ97RmBpfVCEqAVxzFD45oEbMiytxL2iB0akyHF4IjBdJi9hy4TYlKfL0iqOKw:1uCBAZ:vWBDCTKYtFhZ_NWE6nHlzbPRdu_iR-8TfKSQZh5vZ8M','2025-05-20 05:48:43.756672'),('rof72utvnp9ua1a8sgmi1nnluvgegndq','.eJxVjDsOwjAQBe_iGln-ZeNQ0nMGa9e7xgGUSHFSIe4OkVJA-2bmvVTCba1pa7KkkdVZ-W5Qp9-VMD9k2hHfcbrNOs_Tuoykd0UftOnrzPK8HO7fQcVWv7WxAF6cMFMZqEfLMdocOQCLAQ9gfCFPIuQcgQkOiHs7ZIyAIXRFvT9BcTia:1uCKLG:DJF9se9WYjOESytjvHr0jIUgrMldsynp5xLFsTcVdaE','2025-05-20 15:36:22.906164'),('rtpc7ig5qvnvp46dtxstibphogt1595q','.eJxVjDsOwjAQBe_iGlnr_4aSPmew1j8cQI4UJxXi7iRSCmjfzLw387St1W89L35K7MqkkOzyuwaKz9wOlB7U7jOPc1uXKfBD4SftfJxTft1O9--gUq97HaMwoC0OaB2VoGUWES1pB8oAIqCTgwFQqII2VktMuuykSKCgrFDs8wXwlTZR:1uGfFS:nzYzB0rLzL7WnbQUTCrgf_CxiAutEOWvO85rJ47x68A','2025-06-01 14:44:18.384270'),('ruo9705edkpsxnia562carpav949c2a1','.eJxVjDsOwyAQBe9CHSHA_Jwyvc-AFnYJTiKQjF1FuXtsyUXSzsx7bxZgW0vYOi1hRnZlcvTs8ksjpCfVQ-ED6r3x1Oq6zJEfCT9t51NDet3O9u-gQC_7OqPXIyKlDGAdeR9BqkTgrFCkEJ0yFrI0YohWaBDW6EGmnUtAMmlgny9j3zkg:1uD2Q2:g1p2430d35tgs4lQNhWbylAD1NVGdZcM8KWTts1Ok0s','2025-05-22 14:40:14.037750'),('rxx7kuulba15rwlvd04ux63ss5zbv88e','.eJxVjDsOwjAQBe_iGln2Ov5R0nMGa71ecAA5UpxUiLuTSCmgfTPz3iLhutS0dp7TWMRZGAXi9LtmpCe3HZUHtvskaWrLPGa5K_KgXV6nwq_L4f4dVOx1qzUAsRnIDRR8YFZgNEVlY_Demqg8F0ZyJrJ2NwvFa5OVBWvRbQKQ-HwBCGc3Ig:1uCB4E:HAsWAPkG6S9HEegNF0cLuSUjgvlvJoHMp-faLMKhxR8','2025-05-20 05:42:10.806966'),('rzlbm552nlar2yrrpit61flnalw6dl37','.eJxVjDsOwyAQBe9CHSGwl1_K9D4DWhYITiKQjF1FuXtsyUXSzsx7b-ZxW4vfelr8HNmVSdDs8ksD0jPVQ8UH1nvj1Oq6zIEfCT9t51OL6XU727-Dgr3sa-Ms2uCUFoMAshKTzhZyVGBAKrlzMCJootGZKIIipGwFiGFUKMOY2ecLCKc3dQ:1uBxxJ:abK_eGtsE-oh3IaWN32L660dSHO827xOCczW5sRB_ak','2025-05-19 15:42:09.380518'),('s1l9byt3u3o92fj9vhrain1ox0rcunqf','.eJxVjDsOwjAQBe_iGln-xjYlPWew1utdHECOlE-FuDtESgHtm5n3Ehm2teVtoTmPVZxFsOL0OxbAB_Wd1Dv02yRx6us8Frkr8qCLvE6VnpfD_TtosLRvzalUH9BE5wbG6k1gbUIE4wYVuTC7pAJ5q41G4gha2WRJKSxYEikQ7w8KYDg4:1uC0Bb:HEN_JNVde0xDOxIQGtTj8Vqpd4iZH02-FhjQoYljQG0','2025-05-19 18:05:03.089752'),('s34uqbkif7k6ihtk2tmv6e44zytfdahi','.eJxVjMsOwiAQRf-FtSEDyMul-34DGWCQqqFJaVfGf1eSLnR7zrn3xQLuWw17pzXMmV2Y1Gd2-qUR04PaUPmO7bbwtLRtnSMfCT9s59OS6Xk92r-Dir2OdQQAb3UuILOD5EURJMBGQmtTRJWU-UJHHg1KMDkKrbRXpNCqYh17fwAyaTgx:1uCAJ2:MAbNBGz95fBuZABIpgHPNWv6ZG88S9ZsTmsy6wDIfxw','2025-05-20 04:53:24.647894'),('s93qtpdnt6e2vkeg77vn7lx36nrj9cc8','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0IBd:9YnboZjT5hO9GNywh_4QHcPrC1KiAEKuGurtzaThjdY','2025-04-17 10:52:41.513017'),('silte3q4e87svwzp4mtrbur01z62c3yx','.eJxVjEEOgjAQRe_StWmYDlTq0j1naKYzg6CmTSisjHdXEha6_e-9_zKRtnWKW9UlzmIuBp03p981ET8070julG_FcsnrMie7K_ag1Q5F9Hk93L-Dier0rdtRE3kA1yOjoGMhdF2fQEPis45dCB1KaAM13rUKMgoKMEPqG_BBzfsDPTc4lw:1uCCsO:gPeqmUJ2SE1_WcAKPKQoNJA3BpVQz_PXejI6U4un994','2025-05-20 07:38:04.287316'),('siq8tbpovpmp4e52jg0s8wytlyqblt68','.eJxVjEsOwiAUAO_C2hDgUT4u3fcM5AEPqRqalHZlvLsh6UK3M5N5s4DHXsPRaQtLZlempGOXXxoxPakNlR_Y7itPa9u3JfKR8NN2Pq-ZXrez_RtU7HWMJ2_QWevBC-0mSUBRFyckgBaoRSHlhYnSeBUVSkyFQBVbbCbIvhj2-QL7uze1:1uCAZ2:r6eThWpxglNBTJ-m60MVLcObTwBAGKe3YhfzWdsczeY','2025-05-20 05:09:56.829054'),('sjodsuikm5h8gsshnwpbtalubbh6adez','.eJxVjMsOwiAQRf-FtSFDebt0328gM4BSNZCUdmX8dyXpQrfnnHtfLOC-lbD3vIYlsTNTwE6_kDA-ch0m3bHeGo-tbutCfCT8sJ3PLeXn5Wj_Dgr28l3TVfjoLTmw4L0yCZyzk5ZGonRGZFQg9eDWAiQhlJNTjpq09Q6JJHt_AM8KNpU:1uBrca:UmI8oH6pOhVgZWf7gxYXfjopUjJPu-M3PBcGfyZFmGE','2025-05-19 08:56:20.192963'),('sl07admuv6dmyecgs68c4gobsl7tmb7o','.eJxVjEEOwiAQRe_C2pAylKG4dO8ZyDAMtmpoUtqV8e7apAvd_vfef6lI2zrGrckSp6zOCmxQp981ET-k7ijfqd5mzXNdlynpXdEHbfo6Z3leDvfvYKQ2fmvfd8DM3gKEznNCEUOCLlMRV_KQBoC-MGKPkIq1BR2CMx0EB2QGUO8PNq832g:1uC9tf:_fOcI9Hg2lrp2yXZqsQen_aqHHkQvyN8FsOQma18inE','2025-05-20 04:27:11.401177'),('sote2x5cwihe6aycvsexbnf0z5enu9ez','.eJxVjMsOwiAUBf-FtSEVyqMu3fcbyH2AVA0kpV0Z_11JutDtmZnzEgH2LYe9xTUsLC5CK3H6HRHoEUsnfIdyq5Jq2dYFZVfkQZucK8fn9XD_DjK03GvtE7A3A4xoFBKCcdEaNzqabALlU0LjEkNSOJC2PNK3YHu2xDwZEO8PMqM5YQ:1uBtwE:hYmQZeuVqWRoH2jAuB2i4PxfOXtWrdhSRZVyGEcDok4','2025-05-19 11:24:46.231136'),('spt1rvye3wfnpt2u9977an9mrtozcxzf','.eJxVjDsOwjAQBe_iGln-O6ak5wzWeneNA8iR8qkQd4dIKaB9M_NeIsO2trwtPOeRxFkYZcTpdy2AD-47ojv02yRx6us8Frkr8qCLvE7Ez8vh_h00WNq3VqySDrFG68DVgIOuJVEyBD4ErbwDRREtG109JAupsCmMIeKASJHE-wMkETjJ:1uCAYy:-i5SITkIjN6sF8Y3ux4hSjO-8hm4N17CizO2aX_Ak0A','2025-05-20 05:09:52.344888'),('sqygqyoq6zrkak2idx2v0hotnil64k9e','.eJxVjDsOwjAQBe_iGllO1usPJT1niHbXNg6gRIqTCnF3iJQC2jcz76UG2tY6bC0vw5jUWUGH6vS7MskjTztKd5pus5Z5WpeR9a7ogzZ9nVN-Xg7376BSq9_aoiTD2TsBy1gidiHlHoqwsS4b8oDCUAqGQomEnTXR2663EaGPHNT7A0OTOGw:1uD2yA:pF4AkxiWC2SSR0fEFOcLFUYoMcdMb5FlgL6hJx2ZnI0','2025-05-22 15:15:30.833555'),('stvd5d9du1zibca38bg5ddbyppene2j6','.eJxVjDsOwyAQRO9CHSE-xuCU6X0GtCxLcBKBZOwqyt1jJBdJM8W8N_NmHvYt-73R6pfIrkw6xS6_bQB8UukoPqDcK8datnUJvCv8pI3PNdLrdrp_Bxla7muhEjknpJrwyFEJCAZxAtAJDQVLpG1Cq6wQEpQejDWkRxDDYbjo2OcLLsM4JQ:1uC9J5:oQuyYM2YxvJYUDiLNt1LXny9RTpplr9FU7UVkSwcG7k','2025-05-20 03:49:23.776382'),('sufgtw75kwmn51ilnz6hvvjvobku6qc3','.eJxVjEEOwiAQRe_C2pCBDi24dO8ZCDCDVA0kpV0Z765NutDtf-_9l_BhW4vfOi9-JnEWWltx-l1jSA-uO6J7qLcmU6vrMke5K_KgXV4b8fNyuH8HJfTyrZO1DFapZECbDNHQhFGhTZkAYEpGMeQcY3BOKxyZ9GBHHJBxIGcYxfsDIiM31A:1uC9m7:l_ro2XpaPY248ElhKPuqtUkVLauNuZsPwZodHjVbgRE','2025-05-20 04:19:23.786079'),('sv4yd53qc176dnwqapeu3tnkjsr0g9if','.eJxVjEEOwiAQRe_C2hBgpgVcuvcMDTCDVA0kpV0Z765NutDtf-_9l5jCtpZp67xMM4mz0OjE6XeNIT247ojuod6aTK2uyxzlrsiDdnltxM_L4f4dlNDLt1aQ9WANW0sR8uAZCRnNSDEnYlCI5MCjHnWi5BwYyuB4MOQVeu1BvD8wsjfx:1uCLZo:vLMF5KmfIgpqu87HvURZ7_3kMV98IPAkcqFF9k9P5I4','2025-05-20 16:55:28.387811'),('sxm7j88w5heodqkeoktt0h8wjhgf9kvk','.eJxVjEEOwiAQRe_C2pA6TAZw6d4zEGAGqRqalHZlvLtt0oVu_3vvv1WI61LD2mUOI6uLAu_V6XdNMT-l7Ygfsd0nnae2zGPSu6IP2vVtYnldD_fvoMZet9qSAzYiqRSkM7pBsljxUIgGI5AQi7CxJGgMgmVAguySQYrMG1SfLzoAOFU:1uCB09:Nqs2UQ2Q89633sfceoIk6n6e1ghzpNsF2CsuzpMnhEI','2025-05-20 05:37:57.126516'),('sxnsrfdze5mkqykvz970340ui08uucgj','.eJxVjDsOwjAQBe_iGlnrT7IOJT1nsNbrNQ4gR8qnQtwdIqWA9s3Me6lI21rjtsgcx6zOyqI6_Y6J-CFtJ_lO7TZpnto6j0nvij7ooq9TluflcP8OKi31WxcUsY4DOzMMJlsBIMoFsANOmEIniYnRF1cKgrPouwA9SO4NiCdS7w8iyjiH:1uCssG:E2TRtk9Lkwfs-6A4e3O6mCPDz0ybxU06fPNC-5dyT5Q','2025-05-22 04:28:44.424483'),('t2mzsr8gglutmq53tlqoovnxowmn4er5','.eJxVjDkOwjAUBe_iGlnON_FCSZ8zRH8LCSBbylIh7g6RUkD7Zua9TI_bOvbbonM_ibkYAG9OvyshP7TsSO5YbtVyLes8kd0Ve9DFdlX0eT3cv4MRl_FbY1LJQC4pRg5nbbxTijGCI598EEk6NOAkxxQwtdkTAwfOqLEZWibz_gA2Rjil:1uC9i0:Kiw7G7pdAU8fyK8eG94SSQ2MqJIVM6Oy2lXU0QRGQgs','2025-05-20 04:15:08.807112'),('t7v97xb0hwlfoxxjp0ih3xg75zcfnouc','.eJxVjEEOgjAQRe_StWmGUhBduvcMZDp_xqIGEgor492VhIVu_3vvv1zP65L7tejcD3BnFyi6w--aWB46bgh3Hm-Tl2lc5iH5TfE7Lf46QZ-X3f07yFzyt-7YghkoUI0G1qo1oRJDd2pCLQyqIicONUARgB5VjFQriIDUWvf-AGTsOl4:1uC9RX:d04JfXVtY-roYPbrr3XDvXF2FjTLzKsgUIsHuvMOiug','2025-05-20 03:58:07.890195'),('t9jqmaubbb06jynnzt9j173fy6kncjp2','.eJxVjDsOwjAQBe_iGlnxZv2jpM8ZrPWuwQHkSPlUiLtDpBTQvpl5L5VoW2valjKnUdRZWXX63TLxo7QdyJ3abdI8tXUes94VfdBFD5OU5-Vw_w4qLfVbE1DnBYNxCNEgizU2cu6RMUvOCELsLXtnAKQLXZDiekBAGyhemdT7A9T2N5E:1tweK4:brho2t6R2dGpbyyIRzYZOn0Sy-GTzHIqpiz8UK8SQZo','2025-04-07 09:42:20.358159'),('tbfzcha5ra9hxnxa3erwbfxuhf4rfuju','.eJxVjMEOwiAQRP-FsyEuZQU8eu83kAW2UjWQlPZk_Hdp0oMe582beQtP25r91njxcxJXAajE6ZcGik8ue5UeVO5VxlrWZQ5yV-TRNjnWxK_b4f4dZGq5r5nNpAFtSMYiuqRjzxMMoIwbEkVUwXQcNSFYq8ANZ7wQWueAbdQgPl8iSTdp:1uByYd:bT8HmVtWI_HMmntzoLwaU0qSau1ISv2SxNYS64zwIbw','2025-05-19 16:20:43.802850'),('tbsnw91jcfmzx50kphsn9m2uf4ehnpgo','.eJxVjDsOwjAQBe_iGlnrJP5R0nMGy-v14gCypXwqxN3BUgpo38y8lwhx30rY17yEmcRZDM6I0--KMT1y7Yjusd6aTK1uy4yyK_Kgq7w2ys_L4f4dlLiWXgOQH9kyoceRYDBMCizEgQGdZq-Y1aTJZQ82ao8OfbJJma-NaWLx_gBEzDjZ:1uCAiP:WEKEOHll0hJZdB4x8-MkilkkR9_090bf6JlhSf0hnVw','2025-05-20 05:19:37.535374'),('tgb0bbiozqdu8x7yo8fh5f1clfy3x7wu','.eJxVjMsOgjAQRf-la9NQZ-jDpXu-gQwzU4saSCisjP-uJCx0dZN7Ts7L9LStpd-qLv0o5mIAgzn9vgPxQ6cdyZ2m22x5ntZlHOyu2INW282iz-vh_gUK1bKHMzTKsdXGCwq7SBEhIlH4rlcnzgm2yQ8JMlPm7AjOCRI3qBIAzfsDMGI4QQ:1uCHJ4:AFMh96b7xQBRlQMqN0cWBQZOFfyfq7LYqrtF3w5TdCY','2025-05-20 12:21:54.080024'),('tgmampz47ii6c31oe04whtsa7mzy3sjh','.eJxVjDsOwjAQRO_iGlle_0NJnzNY66yNA8iW4qRC3J1ESgHdaN6bebOA21rC1tMSZmJXppxkl9824vRM9UD0wHpvfGp1XebID4WftPOxUXrdTvfvoGAv-3qwWgkHxmctBooqqpzB71E6L6xzEgFBJOmz8eSMzt4gkQVtIwEqYJ8vADU3UA:1uE94L:Y1NTtrwvIB71KdVJtHXc7zQd8H2xQQou7bRNgZvAdV4','2025-05-25 15:58:25.287238'),('th31k98kl50qzqqt14svz7knengr8oll','.eJxVjEEOwiAQRe_C2hAHGAou3fcMBIZRqgaS0q6Md7dNutDtf-_9twhxXUpYO89hyuIijBen3zFFenLdSX7Eem-SWl3mKcldkQftcmyZX9fD_TsosZetRkjOKwDMSnu-ObbGA1IczuAAWLuUiZS37AeyG3PGIBtiJI3RGhSfL-i5Nzg:1uBtQa:2vXKiCD3fyEpDsLWU7xhyUNEhPAyjyts28LGMMBt49A','2025-05-19 10:52:04.528041'),('thmw4hzykd7o0zxdv8y2d8h4m3utl2cy','.eJxVjMsOwiAQRf-FtSEOMFBcuu83kIEZbNWUpI-V8d-1SRe6veec-1KJtnVI2yJzGlldFERQp981U3nItCO-03RrurRpncesd0UfdNF9Y3leD_fvYKBl-NYosVYpgAxQLHQhEoJEi9lUMni2jqBCxyjI1Rjn2IdQyXeCwUYf1PsDMfc38A:1uC9P7:NTFy4t2pQhT-8Vxu3sbUiyHJkbINeszD-efPXEtSaJk','2025-05-20 03:55:37.628970'),('tjlfa2hzrholbfor98z7uev7sl9v27g8','.eJxVjMsOwiAURP-FtSEIlIdL934D4XK5UjWQlHZl_Hdp0oUuZ86ZebMQt7WEreclzMguTErJTr8txPTMdUf4iPXeeGp1XWbgu8IP2vmtYX5dD_fvoMRexlqDJyQPxqOyQMk4IoxREYER5LM1aSKnJj3C2VFSNqPJwmgclrDAPl9urTna:1uCCQW:-Wv6ua1astozwRq4ZJ5sMOsd7G5EJpHKQwlJqY_DAqc','2025-05-20 07:09:16.150231'),('tm3j5xnbj97bgjinev6qjuczcwgw1uev','.eJxVjEEOwiAQAP_C2ZBuoUA9eu8byLILUjWQlPZk_Lsh6UGvM5N5C4_Hnv3R4uZXFlcBdhaXXxqQnrF0xQ8s9yqpln1bg-yJPG2TS-X4up3t3yBjy31M2ozJaAfgVBhNGAKzw4RgjINRIYBOkeI0pIntTINlxcqaiUiT41l8viQkOD0:1uC9DV:kOvflsa75L8GV3WhhvHsf6msspLWsIG4Uh983y9ia78','2025-05-20 03:43:37.033816'),('tn84az62rp2hrmepgylexbimgjhfiw9w','.eJxVjMsOwiAQRf-FtSF0Bgrj0r3f0AwwlaqBpI-V8d-1SRe6veec-1IDb2sZtkXmYcrqrJxVp98xcnpI3Um-c701nVpd5ynqXdEHXfS1ZXleDvfvoPBSvjU5MsYCJBQ_WsgBnQcvANkBWEse49gbFwkxJBKM3HEgk5ipw96Ken8A0Nw27g:1uCFlC:1oj2f6hxeil-pn-BrQd1SrXkuhSOLtjIDuJKNbujWPA','2025-05-20 10:42:50.391130'),('tns34r9cb0ichbx1exi8p1lmiccv5neo','.eJxVjMsOwiAQRf-FtSHymAIu3fcbyMxApWogKe3K-O_apAvd3nPOfYmI21ri1vMS5yQuQg9WnH5XQn7kuqN0x3prkltdl5nkrsiDdjm2lJ_Xw_07KNjLt2bvFIDOxrNTNnAAw5lJgQ_gIdhAqKxJk500ea3IOR6MZgV4BrLM4v0BEcQ3tg:1uCAKo:3_kQGtM1YU8Sy2i-IY0iGPy-BFPXDgFNj3-XkmXp5Hs','2025-05-20 04:55:14.709002'),('tqph447ol3aezjsnk5kxljopgj5l56k9','.eJxVjMsOwiAQRf-FtSE8Bigu3fsNZGBAqgaS0q6M_65NutDtPefcFwu4rTVsIy9hJnZmZmKn3zFieuS2E7pju3WeeluXOfJd4Qcd_NopPy-H-3dQcdRvHTGCcsWkbEshi5N1KE1BYWUkE7PIoIQHRNDeeuMICoBXJUnvNCXN3h8uozh0:1uCD99:xso261H_qu9fzsFMeO1x2V7jv7ec0-BsRyf3ESJ2KLQ','2025-05-20 07:55:23.700415'),('tspkvoaf0tr9mby2e3rwnci7m2kb5rxz','.eJxVjDEOwjAMRe-SGUVRXccpIztnqJzaJgXUSk07Ie4OlTrA-t97_-V63tbSb1WXfhR3dkDu9DtmHh467UTuPN1mP8zTuozZ74o_aPXXWfR5Ody_g8K1fOtIxkmjEKpmNGgsJzIKORnKYC10EKWDJIAUrW0QWQkDxtQKcBfc-wMi0DgJ:1uCrO5:9GWkOgZjN2XOeXnPc2JfctPWGvqGtPuwykSLm2YOQCM','2025-05-22 02:53:29.879067'),('tt16ivfqqj6t2f4tnvhiwquqntbddult','.eJxVjDEOwyAQBP9CHSHAYLiU6f0GdMARnEQgGbuK8vfYkouk2GZndt_M47YWv3Va_JzYlUln2OW3DRifVA-UHljvjcdW12UO_FD4STufWqLX7XT_Dgr2sq-NBhxEzlYJlzIYZaXISQx7TCClk0IDJjpwUjsgBE0DgnV21Jn0COzzBR0TN6c:1uC9Ke:1epzu3ht60TLB75tmb7jKIvLwM-0sSklZEQqZXrz7uw','2025-05-20 03:51:00.636119'),('tuaze4jwkus5prg05gtj2113i91tiol8','.eJxVjEEOwiAQRe_C2hCgMKUu3XsGMsMMUjVtUtqV8e7apAvd_vfef6mE21rT1mRJI6uzssGq0-9KmB8y7YjvON1mnedpXUbSu6IP2vR1ZnleDvfvoGKr3zo48IZ65B5dYUbMHWSkMkCUznofgChbQIiGJIahc5F9cSiRDAsU9f4ASUA5Iw:1uC8lM:UW5j9zzgDJMG6ynK_1t-ubsbtdILNCoQWFODnN2u77Q','2025-05-20 03:14:32.477505'),('u0x135l4lloxxw1xei21eleijma0jybd','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzwIZ:Y7VF_QsClXB_AWnIatAW5a8CwIsojgEsA8MBUT3-mjQ','2025-04-16 11:30:23.464968'),('u138540ozcxth7qtir4a1vfdbru7zy8b','.eJxVjDsOwjAQBe_iGln-4B8lfc5grb1rHEC2FCcV4u4QKQW0b2bei0XY1hq3QUuckV2YEoadftcE-UFtR3iHdus897Yuc-K7wg86-NSRntfD_TuoMOq3dilJrT2YIMFaAdmr4koBLXwO6FLw55IDGDQks_Kkg8JEhM5Yo6WX7P0BNu44eg:1uC9Rq:6HVPhfDP6r_Nnk23v22zLA5LwcZ6nhH8NQJEOhacrXs','2025-05-20 03:58:26.896917'),('u732t7mfqenkueb4itn6aehs9cb52hvt','.eJxVjDsOwjAQBe_iGlnrb2JK-pwh2o3XOIBsKU4qxN2RpRTQvpl5bzHjsef5aLzNaxRX4Yy4_I6Ey5NLJ_GB5V7lUsu-rSS7Ik_a5FQjv26n-3eQseVeawppIAATaLQpJsUIJgWPaKwnVqMLoJxmpyhFNwQiz0oHgIjKkhefLxdbOCs:1uBsJy:QyuDfSLqHHCGberc3XbREt-YRYqxRaOFq3xWGVcNzms','2025-05-19 09:41:10.961317'),('u9rfkt4zpg79fgvcnfl9xo1ux5qimw3x','.eJxVjEEOwiAQRe_C2hBkaGFcuvcMZGBAqgaS0q6Md7dNutDtf-_9t_C0LsWvPc1-YnERDsXpdwwUn6nuhB9U703GVpd5CnJX5EG7vDVOr-vh_h0U6mWrgbM1Q2YNqEiT4swJkIHRuTSSM_o8ZkZWZDauTAxIoK01kAdnCMXnCx0POBc:1uBuJY:dXFuOJygW-kL-J7iapeq95qVt5tfeWqQFyyFmuLnahE','2025-05-19 11:48:52.047545'),('uavwk9lw5kx09mq3bcywin3nb21rdwmz','.eJxVjMsOwiAQRf-FtSEUwsule7-BTJkZqRpISrsy_ruSdKHbe849L5Fg30raO61pQXEW1ovT7zhDflAdBO9Qb03mVrd1meVQ5EG7vDak5-Vw_wIFehlvz6SBnTMWFBhndM46MGJkY4Kyhu3ECEHFiRRH-pYDYPDRaetz1OL9ASMkOH0:1uBsUa:Xo8nKCZgLY3pcFkHPpDOMgHQjWDtjWzbZDM2A9cto3E','2025-05-19 09:52:08.933651'),('ubbntyr9llfm302iw2g8slfhluss0imq','.eJxVjEEOwiAQRe_C2pAZKHTq0r1nIAxDpWpoUtqV8e7apAvd_vfef6kQt7WEreUlTKLOylinTr8rx_TIdUdyj_U26zTXdZlY74o-aNPXWfLzcrh_ByW28q0JBgCKaLywYWQZITnXJU8ZPOYxE3NvLXIH5NAReRQSHoiwt8Cs3h8bKTei:1uCMR0:z_jtL8182Xfy5MDYpofV3N5TAtgXzrb8T7tOzD2s_mk','2025-05-20 17:50:26.256776'),('uefdt702z4dxcesyt6718beya8547g9n','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0CgM:dEnhn7zkS_FQQbdfKw9aJxkdCZyeAf6IaBxcbuwn5_c','2025-04-17 05:00:02.579579'),('ui56wo9jm53v4ud6xk1f90a7eypvdgnr','.eJxVjMsOwiAUBf-FtSG8Hy7d9xvIBS5SNZCUdmX8d9ukC93OzDlvEmBba9gGLmHO5Eq4V-TySyOkJ7ZD5Qe0e6ept3WZIz0SetpBp57xdTvbv4MKo-7rJEpEJrj3hRdjI0qZJDKjtXUQTQZAnpnUIhXnHOd2hwaVUOiElt6Rzxc9HTgV:1uC9Oy:prXj79jtxU_-wgkwRxg9F7rnmxafgyC0I5CMgEfCLQ8','2025-05-20 03:55:28.645397'),('uiuv24ydfrtce6s8y5kms74ilmzt4cu9','.eJxVjMsOwiAQRf-FtSHDQDvFpXu_gTA8pGogKe3K-O_apAvd3nPOfQnnt7W4rafFzVGcBRoSp9-VfXikuqN49_XWZGh1XWaWuyIP2uW1xfS8HO7fQfG9fGsFFoJXCCPmgRVyThopGTtFDTYMhjNgBJ4wEHEYjSdtKHGOiiwxifcHG5A4Aw:1uC9xV:O9niVa8HxLwGobUOdLqjIQwJplkbBTIRGn0ruB8ST28','2025-05-20 04:31:09.010943'),('ujoglu2qziev79n2qhx3bd4n3hpqscwj','.eJxVjDsOwjAQBe_iGln-xjYlPWew1utdHECOlE-FuDtESgHtm5n3Ehm2teVtoTmPVZxFsOL0OxbAB_Wd1Dv02yRx6us8Frkr8qCLvE6VnpfD_TtosLRvzalUH9BE5wbG6k1gbUIE4wYVuTC7pAJ5q41G4gha2WRJKSxYEikQ7w8KYDg4:1uBtSo:f4XVZapBIp1VXuSmrm31Emcpfzz0M9RKEjrQDHTkI_s','2025-05-19 10:54:22.040397'),('ujrccbz3vpu1gel8ekrmgsqsdkppewjc','.eJxVjEEOwiAQRe_C2hCgMEWX7nsGMjCDVA0kpV0Z765NutDtf-_9lwi4rSVsnZcwk7gIp8Tpd4yYHlx3QnestyZTq-syR7kr8qBdTo34eT3cv4OCvXxrQ6hHpUfKiBGBwFoiRmAaNA-Q0JnkFKQzZ0s2RpW9B5cMeYMDKC3eHzWWON0:1uBxZB:8nmvLwNDkrU4woXYs5HWWMAdKfigumilg9a5dJCSUss','2025-05-19 15:17:13.025579'),('uobdaqdg0gdncksa3lepni0kkwq7tam0','.eJxVjMsOwiAQRf-FtSEUwsule7-BTJkZqRpISrsy_ruSdKHbe849L5Fg30raO61pQXEW1ovT7zhDflAdBO9Qb03mVrd1meVQ5EG7vDak5-Vw_wIFehlvz6SBnTMWFBhndM46MGJkY4Kyhu3ECEHFiRRH-pYDYPDRaetz1OL9ASMkOH0:1uBtCX:NTe9vW3W8G-kK-tCTqF-jO7iu5fxC4B6gly1NzTYyGQ','2025-05-19 10:37:33.304391'),('urzzf8cx6eeqqlv92yauk237fba3a8bp','.eJxVjEEOwiAQRe_C2hAGGAou3XsGAsxUqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xInEW4L04_a45lQe3HdE9tdssy9zWZcpyV-RBu7zOxM_L4f4d1NTrt3Z5zIrJqqKRtcFhLI7YBUtgTFYAlNhAQNKImDTxYLQKYL0KCN4Z8f4ANr43cw:1uC9Ld:0ijq4JGMvU91z53SJTap66BsOktvIHgmtLf0OP8mip0','2025-05-20 03:52:01.448810'),('utdg056c2umjaygdg752czl1mhghapn9','.eJxVjEEOwiAQRe_C2hCgjAwu3fcMBIZBqoYmpV0Z765NutDtf-_9lwhxW2vYOi9hyuIitDHi9LumSA9uO8r32G6zpLmty5TkrsiDdjnOmZ_Xw_07qLHXbw0OrY1YCnhXyBWvyLIqio1NVAw4owZkcDoiMpIzGihpryHjcPYwiPcHJBs3lg:1uCAl3:fKvHKAPotX2KfkltNd-plELxtLrsMIPDvlFhymCNcjU','2025-05-20 05:22:21.579899'),('utmemu819ggy6g0nbh7wqc2hl9wweqk9','.eJxVjr0OAiEQhN-F2pAFlp-ztPcZCAsopwaS464yvrtccoU2U8x8M5k382Fbi996Xvyc2JkJJdnp16UQn7nuUXqEem88trouM_Ed4Ufa-bWl_Loc7N9ACb2MtpGkUBCCI0zSTURKKOdQ3WyKKlgCAE0oI2YJFsaPaWgGg6gNWc0-X_8eNpc:1uBxO9:LAaXnJKvtQbmuym5FcXhBNrYt4gZkK5Oc42geV2Eryw','2025-05-19 15:05:49.878937'),('utoknrbgqhtg1m5ssuz1gu5ju2bqci44','.eJxVjEEOwiAQRe_C2hBmKAVcuvcMDcNMpGogKe3KeHdt0oVu_3vvv9SUtrVMW5dlmlmdFURUp9-VUn5I3RHfU701nVtdl5n0ruiDdn1tLM_L4f4dlNTLt85WEBisQ09ekhEYnLUZjARnAogghojk0BINHiSONIATQmZE4VG9PxSBN8A:1uC9O5:-Jz2JOL207zAVj22E4jhgR8xEBcHgUeBaFY3kL_RYKo','2025-05-20 03:54:33.027718'),('utpm9socaaaros0ye2sllw3joajfdkp1','.eJxVjDsOgzAQRO_iOrJswIudMj1nsLwfxyQRSBiqKHcPSBRJM8W8N_NWMW1riVuVJY6srsqry2-HiZ4yHYAfabrPmuZpXUbUh6JPWvUws7xup_t3UFIt-7rBDL0VsOgAjWd2BIGgRW-a3nJnu0ytg97twR0IZQomOMoBvbTC6vMF26437w:1twgAD:QFfoutxMy6I357OzGN2H8GU_10pnM0fNxUEUAcWMaEQ','2025-04-07 11:40:17.828793'),('uy2e8zztrdzxi3u9d7t907xineb4y6wo','.eJxVjMsOwiAQRf-FtSEwDI-6dN9vIAOMUjU0Ke3K-O_apAvd3nPOfYlI21rj1nmJUxFnAaDE6XdNlB_cdlTu1G6zzHNblynJXZEH7XKcCz8vh_t3UKnXb82BIRkGk9EEbXS23ib2KWgqMKBDS0EXoxwF1GA9DlhYZ2TvPSh3Fe8PE6U3Rw:1uCB06:wMrgGNAkXC58W0wVdivl-miEZN7VNaX-WGcE-pGRu2Y','2025-05-20 05:37:54.138825'),('v1por4oxuj9xs2l5b4cfsaiwwa5mh0il','.eJxVjDsOwjAQBe_iGlnxZv2jpM8ZrPWuwQHkSPlUiLtDpBTQvpl5L5VoW2valjKnUdRZWXX63TLxo7QdyJ3abdI8tXUes94VfdBFD5OU5-Vw_w4qLfVbE1DnBYNxCNEgizU2cu6RMUvOCELsLXtnAKQLXZDiekBAGyhemdT7A9T2N5E:1tWCnc:RbMfjwqX2_uO_X0xRyKaA1fexI_Ryb3GQVHDZpaleNA','2025-01-24 16:33:32.667793'),('v1sefo4nhync2iffj6iph10rukn4i05m','.eJxVjEEOwiAQRe_C2hAGhKJL9z0DmYFBqgaS0q6Md7dNutDtf-_9twi4LiWsnecwJXEVYKw4_a6E8cl1R-mB9d5kbHWZJ5K7Ig_a5dgSv26H-3dQsJetjj4D6jNZUJCcTkY5GsCABmeZNEPeBA-Z7BCzTh6J2atLjsBWRwDx-QIhwzhN:1uBxl7:R3bylnwAwq20GP4wuGGdt7CRNl7jbtdnoVjjHldb6Kg','2025-05-19 15:29:33.342522'),('v23qpgu34bmi3qitmanzo2q3wxl9qbj4','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tVUci:XtkuyDwVnoLAvaSCQpyCPcgyMQNRRJEBMXJi_Lwxq3Y','2025-01-22 17:23:20.079090'),('v3x6t0rf0bd9z5vb0kpdqcmcrh2wc4xg','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tzu4B:T0khqZK1lONAkgQUIDjHX9RLSWTimg2s8WqucvRzRtw','2025-04-16 09:07:23.623876'),('va813bgqup6iv40gedia8j4pngwg7rek','.eJxVjMsOwiAQRf-FtSEzDFBw6d5vIMMjUjWQlHZl_Hdt0oVu7znnvkTgba1hG2UJcxZnodCL0-8aOT1K21G-c7t1mXpblznKXZEHHfLac3leDvfvoPKo39pYIqsBTY6US9JepcgAzgCQTgjo7MSkgMElA5oBMbKPk1GEhZDE-wP7fjar:1uC9mU:0DrqqXCRwyhIAcEmZbLWSIs7AWThTZS0t6yU2kycNEg','2025-05-20 04:19:46.892896'),('vbtl60eaaaega9bof0osmn5a5ridwknf','.eJxVjDsOwjAQBe_iGlmxtXaylPScwdqPTQLIlvKpEHeHSCmgfTPzXibRto5pW_KcJjVn43xnTr8rkzxy3ZHeqd6alVbXeWK7K_agi702zc_L4f4djLSM37oDZHXRgfcC2gs6KSQSBFE45xiQuB8KAOUhMilB7IISQoll8Izm_QFD-Tky:1uBwif:UTw9VXgJy_uW3s7SZiq6kmFTl6FjqM5YjYIEUSVeXRE','2025-05-19 14:22:57.106998'),('vd5eo2igx6elcil7m74do0n0ih7rzbp2','.eJxVjEEOwiAQRe_C2hAECoxL956BTGFGqgaS0q6Md7dNutDtf-_9t4i4LiWuneY4ZXER2ipx-l1HTE-qO8oPrPcmU6vLPI1yV-RBu7y1TK_r4f4dFOxlqwdmbzyAJ1BGY2B2hnTSiNY6coETKlLkyELiAYI5AzDbDTtOzmvx-QIzYTiS:1uCCyf:bPMk8YwtTa_5qSDdOUhkFaJz6xrLTEftf1gXqVI0Oxc','2025-05-20 07:44:33.198506'),('vdte7irvdxkcx8mdxfg00d3x82jinyad','.eJxVjDsOwjAQRO_iGln-EH8o6TmDtd5d4wBypDipEHcnkVJANdK8N_MWCdalprXznEYSF6GjEqffNgM-ue2IHtDuk8SpLfOY5a7Ig3Z5m4hf18P9O6jQ67YuvmgMxrEJyNZ5tuxRAROeKSBFPYBVqAYXs_ZOZbtF8eCizuzJBPH5AkaiOKI:1uCAbY:TKEdJ30AU1SgoFnxYEy52v_IOye7SOnLd0y8vrAecsU','2025-05-20 05:12:32.878165'),('vh0p3xvb0j0fcx6l0x4e277l77kyvapa','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1ty89P:SgMYYsWRdErO_nLlvFukp6araZQRltzdvAkAmykyMdQ','2025-04-11 11:45:27.233146'),('vn5p871hqectyu6hruag4b7utk7l7d6b','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0cjc:Qb1swWiB-OnVfpTc2aibOs782iSlpVh8DjondbbeR5w','2025-04-18 08:49:08.528945'),('vnbzbxv4ha63gtfg1wblb7pwdyr4seuf','.eJxVjEEOwiAQRe_C2hAQYYpL9z0DYWBGqgaS0q6MdzckXej2v_f-W4S4byXsndawZHEVkxOn3xFjelIdJD9ivTeZWt3WBeVQ5EG7nFum1-1w_w5K7GXUU8pM1kIGx8YTI2FCjUCoVeSE9gzgjUVIrCEyewMXrVkRe6cUic8XU7k5bg:1uBuBT:DVhfJn0YBGiYV6n_4h8jWM6sQjLWgmwzW8RNT_VaQq4','2025-05-19 11:40:31.221324'),('vnncxvwynnsa4z7k2ybkf4ym1gv8olz3','.eJxVjEEOwiAQRe_C2hAYoVCX7j0DmWFAqgaS0q6Md7dNutDtf-_9twi4LiWsPc1hYnERozj9boTxmeoO-IH13mRsdZknkrsiD9rlrXF6XQ_376BgL1vt-eyAyQ0aARxZjRZoyMY7SIRGocvgUUeykIA5KZXRbA2aTEBjFJ8v5_I4fA:1tx0Zi:ZE5Cgc_zKR9jw39Z2or-o7aaHgEsBsZQk0l5nxrWO5E','2025-04-08 09:27:58.312467'),('vt71cwdfopvfvkgkqj27oof9mshjisr5','.eJxVjEEOwiAQRe_C2hCgMKUu3XsGMsMMUjVtUtqV8e7apAvd_vfef6mE21rT1mRJI6uzssGq0-9KmB8y7YjvON1mnedpXUbSu6IP2vR1ZnleDvfvoGKr3zo48IZ65B5dYUbMHWSkMkCUznofgChbQIiGJIahc5F9cSiRDAsU9f4ASUA5Iw:1uC8lL:isaQ8FZbmt8L4djghFX0ZOMPrFZqadABb1gQtaXPJ-Y','2025-05-20 03:14:31.129859'),('vtr81w8w23ylt1dnxacz7dew6t7lsz21','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u0CX4:6zm73QGSF-rhtytHXU2QW1-UIyNB92V-TYB2tF3tr38','2025-04-17 04:50:26.494234'),('vwg5cqgxwe4hkb8jrw29h2ylb3mw7rik','.eJxVjEEOwiAQRe_C2hCgQwGX7j0DGYZBqoYmpV0Z765NutDtf-_9l4i4rTVunZc4ZXEWA4jT75iQHtx2ku_YbrOkua3LlOSuyIN2eZ0zPy-H-3dQsddvDUp7FRKRNkmFrK1DCBnZB1O8LuxHPZiRAMihBQ6EBZEM5MQIzirx_gABKDhd:1uBxAp:NZaPVLQXdxzkmjHjew_HjY0jN4fEMuta1QJ82uTyjCc','2025-05-19 14:52:03.517229'),('w2la8oayscr96mqy8tdqaj7dxyfrysyk','.eJxVjEEOgjAQRe_StWmmBUbq0j1naGY6U4saSCisjHdXEha6_e-9_zKRtrXEreoSRzEX46Exp9-VKT102pHcabrNNs3Tuoxsd8UetNphFn1eD_fvoFAt3zpp5gSkbdMpQIeNeman1IJzHAgQSTixEwfSe8FzyxkhQMiI2kMy7w9PZDjQ:1uC9sp:xrx0xr0pNRpfGTyI6i_dzGaKbzgoWtwQr9d0qsYbIWE','2025-05-20 04:26:19.899939'),('w35b775b9ej00q0e6gjr3no2deobxbhz','.eJxVjMsOwiAQAP-FsyEs7IJ49N5vIMtDqRqalPZk_HdD0oNeZybzFoH3rYa9lzXMWVwEWBCnXxo5PUsbKj-43ReZlratc5QjkYftclpyeV2P9m9QudcxLuQtFFMsnRGVdowuegAiBRQNEmpQLlkyHB17m9BpypGNcoT5lsTnC-moNtw:1uCBy1:Ce_UjX2oVBwAxd3ykE9yE_h_Q5fPdQvTu-K3ZNBiqHM','2025-05-20 06:39:49.140288'),('w682qxfvgwnex4f5bq4rtjkireaauuub','.eJxVjMEOwiAQRP-FsyEgWMCj934D2V0WqRqalPZk_Hdp0oPeJm_ezFtE2NYSt8ZLnJK4CmOsOP1SBHpy3av0gHqfJc11XSaUuyKPtslxTvy6He7fQYFW-jp7pzVBMIE8WQw9doAmOzQOFQysssqWLWVmDUj5TBfFXmHwmPQgPl9K5TlV:1uCENI:MhgPDiDwCbEIK2k_6ROC4b3GsfqlO-rTYX2vXlituMM','2025-05-20 09:14:04.720849'),('w79nlhc7plh244k4hqevoozxc9a8jgq5','.eJxVjMsOwiAQRf-FtSE8ygx16d5vIDAMUjU0Ke3K-O_apAvd3nPOfYkQt7WGrfMSpizOwlojTr9rivTgtqN8j-02S5rbukxJ7oo8aJfXOfPzcrh_BzX2-q3JI5BxHJ0bDDlXECmiJpdsSeiHbL0CVZIG1ug1APgRFFqCkQddWLw_HrM3lQ:1uCDoV:R3fxrxcsTbpFJwEo8ySjWTJ-HH0YAtr-Vj81G6lAACA','2025-05-20 08:38:07.035942'),('watzunc39v8nwcra1xyht3xvg50oc4pb','.eJxVjMsOwiAURP-FtSGlhSu4dO83EO4DqRqalHZl_HfbpAtNZjXnzLxVTOtS4tpkjiOrizL9WZ1-W0z0lLojfqR6nzRNdZlH1LuiD9r0bWJ5XQ_376CkVra1p57RGCeZKJF0YMAgguO8RbwlyjQAMEMAzzCgcx1aH4RtDhmy-nwBZl45og:1uCCqV:a-OVOak_Q9su6Y2UtMNvUs4eUjCMGUQgDE0YlkQIZuk','2025-05-20 07:36:07.471940'),('whr4wt8ogbegm21qy6vkuhbrhbnh9w65','.eJxVjMsOwiAQRf-FtSG8oS7d-w1kGAapGkhKuzL-uzbpQrf3nHNfLMK21rgNWuKc2ZlJr9npd02AD2o7yndot86xt3WZE98VftDBrz3T83K4fwcVRv3WXgpFWIop0pFIThtdMpLy2SkVhNEKJ59kEdn5YBM6sECQbKBgpiAte38AMw84QA:1uCAZb:qRGrP9of5ZrSrzL_MJyTj9YTkBseQSHFzGzb3LGtaf0','2025-05-20 05:10:31.118176'),('wm4ng5gti54b9s9s0tn246jlpi3le8xp','.eJxVjMsOwiAQRf-FtSG8YVy69xvIAINUDU1KuzL-uzbpQrf3nHNfLOK2trgNWuJU2Jlp5dnpd02YH9R3VO7YbzPPc1-XKfFd4Qcd_DoXel4O9--g4WjfGiq6nFFkIzB4J6TELDWhA1WlldorNFCBfPDWJEMSFaYADmwhrQ2w9wctzzfg:1uCCx8:BIrYYuSFrXUV4HXD9V4Lt2Ji8YC8p6YVKr88Ye2kI6c','2025-05-20 07:42:58.055700'),('wp94pfiwrxlplr5eh0ef3mxxby97c4t2','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1tzx3v:tqCRe7QHjwQLkw_PtGEEuqib-Dm5HYAey8Ih63_IIbg','2025-04-16 12:19:19.572833'),('wqv4ze6dayrtq65s599hoo33i07qnp3n','.eJxVjDkOwjAURO_iGll4jynpOYP1N5MASqQ4qRB3J5FSQDnz3sxbFViXvqxN5jKwuihrvTr9tgj0lHFH_IDxPmmaxmUeUO-KPmjTt4nldT3cv4MeWr-to2SAmjvjgqfgM0iyaNBzdBEdUCKokSxWit3ZQUhiwpa5Y5uFgdTnC0HFOSo:1uC9iC:HWimJK_KaGXYEcd8HUMHzkYtccqOovXaEojLoicx95s','2025-05-20 04:15:20.227768'),('wulgvwzwc7tk54cxinsan98qeg9hes04','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1twyJ1:bZqKDpUdsZuufCT_crfs0rbgFgMs22ofowh6LRTWaM8','2025-04-08 07:02:35.803208'),('wv60t4tc7g7wpyzs0ii97qlybzm49fkg','.eJxVjDkOwjAUBe_iGlleYiempOcM1t-MAyiR4qRC3B0ipYD2zcx7qQzbWvPWZMkjq7PqnTr9jgj0kGknfIfpNmuap3UZUe-KPmjT15nleTncv4MKrX7rKB46P0ikIRnHxZMkQ8I9JkkM6K1DpGQTBx86ssUB2UA2lg69AVHvDyfCOO8:1uCAE9:ZOsITSQh7BKnzv_9nnY-BHAFcwcwFWFN6jd8Y_SHKPo','2025-05-20 04:48:21.822298'),('wwcjxk9arjy7pyfkv0arlyom88wxzarf','.eJxVjDsOwjAQBe_iGlle4i8lfc5g7XptHECOFCcV4u4QKQW0b2beS0Tc1hq3npc4sbiIswZx-l0J0yO3HfEd222WaW7rMpHcFXnQLseZ8_N6uH8HFXv91ugoE-gEwSM4rY03LoDNSZHlZAqxKkFxAAIHqIMphWmwFpzXZvBKvD8uGTfg:1uCBOC:Mb_-PvaDL8cbKOz4Prf4evu9Qo1Li2fX1T6ajcCD9gQ','2025-05-20 06:02:48.395163'),('x1b4tw6kaacoxprl90alc3wwbwcfsv2k','.eJxVjDsOwjAQBe_iGln-4B8lPWewdtcbHECOFCcV4u7IUgpo38y8t8iwbzXvndc8F3ER_ixOvyMCPbkNUh7Q7oukpW3rjHIo8qBd3pbCr-vh_h1U6HXUoEKwHD1giVqDY6-NRUpAU6JoTUzOIBFQmVRSyZtgbWDnEDV6CuLzBRuOOGo:1uCstr:brAVfXgZ7UTpyE0zJLehrPFLigMzE_ymvz1-qXBA2R8','2025-05-22 04:30:23.403182'),('x1yka7w50qpus2ytfsyq4953fvyuylzz','.eJxVjMsOwiAQRf-FtSGFGRhw6d5vaAYGpGrapI-V8d-1SRe6veec-1I9b2vrt6XM_SDqrIwBdfpdE-dHGXckdx5vk87TuM5D0ruiD7ro6yTleTncv4PGS_vWEbqUpfMhO8sVg4_RYvZE3iBiDESYqKYIUoAcCdhK4gy4CpYZUb0_BU03NQ:1uBvu9:G2tcXcC8aX2hdtRz1JXbCSgheTuJLpDn021UOyS2Wgk','2025-05-19 13:30:45.549213'),('x3g6v6rtrvfrrq82vehff6jrjxuj8wai','.eJxVjDsOwjAQBe_iGlm2F_8o6XMGa9cfHEC2FCcV4u4QKQW0b2beiwXc1hq2kZcwJ3ZhEgQ7_a6E8ZHbjtId263z2Nu6zMR3hR908Kmn_Lwe7t9BxVG_NUSpC0gtfNEqgQG0Hry0htBjAkKXBcmzoSyVK9YVhSJmi-gUWUiGvT8YDzgu:1uBxUa:CRCV6MzoKpTC2bxZUveEg7JDee5vIrnajv80usrRLSk','2025-05-19 15:12:28.435105'),('x4lrbdb8u2sy3s2sh0caa5sx8p6r40l1','.eJxVjMsOwiAQRf-FtSHQBzAu3fsNZIYZpGpoUtqV8d-1SRe6veec-1IRt7XErckSJ1Zn1XmnTr8rYXpI3RHfsd5mnea6LhPpXdEHbfo6szwvh_t3ULCVb20liJEweiQwAUJyzMAixNm70eaMXW8SQh6IR7C92fUBLA3OkM1OvT9SMTjf:1uCAcR:JCqZMOJ9E-x2Optz0oVe_35Rz6vVgQLOpw3CHPeAkH4','2025-05-20 05:13:27.033027'),('x6caj8926npu74ndrblpg3zhxokglb9p','.eJxVjDsOwjAQBe_iGlm24y8lPWewdr1rHECxlE-FuDtESgHtm5n3Ehm2teVt4TmPJM5iUF6cfleE8uBpR3SH6dZl6dM6jyh3RR50kddO_Lwc7t9Bg6V961hdqUEZMClqBgDLSnNN3lAgoxFjMhWphBqSY8dxsKgYtTeFkyUv3h9J1jkG:1uCBEi:lJA3wss_-6i8zZhoSpt999hj3EO0hS0tVXb9GH9_x5U','2025-05-20 05:53:00.415890'),('x6tmco643b0a8uyc3gd53ryxwf37h06m','.eJxVjDsOwjAQBe_iGln-21DScwZr17vBAeRIcVIh7k4ipYD2zcx7iwzrUvPaec4jiYsISZx-R4Ty5LYTekC7T7JMbZlHlLsiD9rlbSJ-XQ_376BCr1vNIWJBb0tCE8qZk_IDmai0RkPWgY4UlQXlCNSwYbTgETkFCBHQKfH5AhuTOIY:1uBtci:-P_jI7xWfxVr76XFTkZ5i9zkg-xmsWLzVFc6vYlH3eM','2025-05-19 11:04:36.777252'),('xanltv382cfoy0s5lt51l6k9k3g00xtc','.eJxVjEEOwiAQRe_C2pCWKYy4dN8zkBkGbNVAUtqV8e7apAvd_vfef6lA2zqFraUlzKIuynijTr8rU3yksiO5U7lVHWtZl5n1ruiDNj1WSc_r4f4dTNSmb536wUQj0RJZyJkZvRV77iJgD94zOvEJCDijcJfJOQLjcEAEzAORen8ARO44pA:1uCAsC:SSGSernPlsEXTV0hxJVU4tcqQKmyMyb2Nk5HjwMiJ8I','2025-05-20 05:29:44.041569'),('xbsas4o6k2z8lppa8j6tttwtwkdje1eo','.eJxVjDsOwyAQBe9CHSGM-aZM7zMg2F2CkwgkY1dR7h5bcpG0b2bem4W4rSVsnZYwI7uywUp2-V1ThCfVA-Ej1nvj0Oq6zIkfCj9p51NDet1O9--gxF72GgTorLQcHbqotMlWREmWfCbUEgY3EmkrdiLRkCByY0aEbJJ2ynvDPl82DTiL:1uC9ZJ:JT81QfnojA77WRNN10LaJ8JcZt7C4ZY7tI_cdSKQ604','2025-05-20 04:06:09.965255'),('xcb33370x54ce6zru1hulstxfe29cgdq','.eJxVjEsOwjAMRO-SNYqaOG4CS_acIbJjQwuokfpZIe4OkbqA5cx7My-TaVuHvC0651HMyTgP5vDbMpWHTg3JnaZbtaVO6zyybYrd6WIvVfR53t2_g4GWoa0dEYBGjEGwcIcxAkZUZK_fGDpQ4mtKCUSYUxDF3kPXSzkGcuLN-wM0qjiL:1uBwxw:Pz23REPF9ACP6Vn-dZV17LKp5eSGN_KntBUuWPNaEU0','2025-05-19 14:38:44.562568'),('xctr2b2hq7g6ego1wlioy7b6i8bhyuf5','.eJxVjEEOwiAQRe_C2hAEx2Fcuu8ZCAyDVA1NSrsy3l2bdKHb_977LxXiutSwdpnDmNVFnY06_I4p8kPaRvI9ttukeWrLPCa9KXqnXQ9Tlud1d_8Oauz1WzsuRUggolC2Hhi9NYToXUFfkMnhqRjDLMmaBJBIEBmASgZiPqr3BxgGOGs:1uBsg9:BE9joKgAy6T87rCofAjcNsAd07ZE5db2YkEXritXvr4','2025-05-19 10:04:05.040113'),('xcvz2cuqtbf7j1qke4b4fyt0hrhveijm','.eJxVjEEOwiAQRe_C2pBCgYJL9z0DmWGmUjWQlHZlvLtt0oVu33v_v0WEbc1xa7zEmcRVaGXF5ZcipCeXQ9EDyr3KVMu6zCiPRJ62ybESv25n-3eQoeV9jeDQkw9IHLrequQ9k-oHIAzo2UHaiXWT0jDRYBw4ZoPMqTOgHWnx-QJcLDmT:1uC9YB:xjKs-S_llHFt1gqqDWPmr1-mwpfm24aqcjdyDHTWOUM','2025-05-20 04:04:59.430721'),('xcz2s438ttih4xmsuvcglw6u0r5h5x0j','.eJxVjDsOwjAQBe_iGlnrb2JK-pwh2o3XOIBsKU4qxN2RpRTQvpl5bzHjsef5aLzNaxRX4Yy4_I6Ey5NLJ_GB5V7lUsu-rSS7Ik_a5FQjv26n-3eQseVeawppIAATaLQpJsUIJgWPaKwnVqMLoJxmpyhFNwQiz0oHgIjKkhefLxdbOCs:1uBuFt:eC5wrHxMeEQ3Z-3k_RYaYniWurWp4sPUpF_RmVuMQn8','2025-05-19 11:45:05.918317'),('xfyz9pzixslf2kdl1jw4hnf33p9f635o','.eJxVjE0OwiAYBe_C2hD-SsGle89AHnwgVUOT0q6Md9cmXej2zcx7sYBtrWHreQkTsTNTxrLT7xqRHrntiO5ot5mnua3LFPmu8IN2fp0pPy-H-3dQ0eu3NiRGQV4lKzXGYlS0RUaUYlzx0mJAVEoOGlqTQXIpSxQBeKe1Iy_Z-wM1lTiH:1uC9xH:r80cB-KdqBAjfpS5juzYYz3fq9FJm5xNTxvP9UEyXyo','2025-05-20 04:30:55.367337'),('xh6wzz52h2tqi3f612hwzz599gumutkx','.eJxVjEEOwiAQRe_C2hCQQsGl-56BzDCDVA0kpV0Z765NutDtf-_9l4iwrSVunZc4k7gIrYI4_a4I6cF1R3SHemsytbouM8pdkQftcmrEz-vh_h0U6OVbex4QyJ0DwKCCJj0CeZ-CsiZlzKCcYs4EnpXD0bAjbdlCJrQ-ozfi_QFTpjmM:1uBvj0:ucF6xd5RgfqaT_MATbLvYQTxCVkrnxyFQ66ILANEFWQ','2025-05-19 13:19:14.901903'),('xhln3bdrkieb9tx6yn1wf8mwslypkppm','.eJxVjMEKwyAQRP_Fc5EQddUee-83hF1Xa9qiEJNT6L_XQA4tzGnem9nFhNuap63FZZpZXMUIRlx-W8LwiuVA_MTyqDLUsi4zyUORJ23yXjm-b6f7d5Cx5b5WPJCxKgAY7cgwDcZZMMkzDCpGbYlJR5d6uoEekrcekcCOyoML4vMFKh04Pg:1uCALM:5Y78Vu3duvIIQUncCP8ED6RAMfbtt4sfLnru3GxM10c','2025-05-20 04:55:48.632825'),('xi7fvg6e353rchi9gcpqxqq3drpxnao9','.eJxVjEsOwjAMBe-SNYrquHUDS_Y9QxTXNimgVupnhbg7VOoCtm9m3sulvK0lbYvOaRB3cRDRnX5Xzv1Dxx3JPY-3yffTuM4D-13xB118N4k-r4f7d1DyUr61QWxqjKws3FoDDKgBRI2xNatq5p5RiEApCEEGpoDnYFQR1o1F9_4ATc44kQ:1uC9NT:poVeQl1MJzj4A9WiY4Jz9Zh8HlYTfZwnj4nemho2_m8','2025-05-20 03:53:55.872880'),('xju1rx9pbopcpxdev2dv6b4d7uxyz40c','.eJxVjMsOwiAQRf-FtSF0Bgrj0r3f0AwwlaqBpI-V8d-1SRe6veec-1IDb2sZtkXmYcrqrJxVp98xcnpI3Um-c701nVpd5ynqXdEHXfS1ZXleDvfvoPBSvjU5MsYCJBQ_WsgBnQcvANkBWEse49gbFwkxJBKM3HEgk5ipw96Ken8A0Nw27g:1uCFq0:Q5kOF0qHX7iyWkY-7sPqFmKx8O7W8Bj96SqiClihu3E','2025-05-20 10:47:48.640460'),('xk6vaa7v95lfjfqzq7j9eper9kyh0evq','.eJxVjDsOgzAQRO_iOrJswDZOmZ4zWOv1bCCJQOJTRbl7QKJIutG8N_NWiba1T9uCOQ1FXZVtjbr8tpn4ifFA5UHjfdI8jes8ZH0o-qSL7qaC1-10_w56Wvp9LVVk8nUrFj7uMQMZNRyo1MguFOYGkFaq7IR844IRCTFaw1x5YvX5AnocOi0:1uC9Jf:pb2E2JtjIcU50QYRwJ1V-IETycc5tjEevRqENVloIWQ','2025-05-20 03:49:59.961497'),('xp269uxsvh4itbqls165ilbqqrb6kikn','.eJxVjEsOwjAMBe-SNYrqtCYOS_Y9Q-XELimgROpnhbg7VOoCtm9m3ssMvK152Badh0nMxUDTmNPvGjk9tOxI7lxu1aZa1nmKdlfsQRfbV9Hn9XD_DjIv-VurJgRK6loXIokXhpHIMbEXVJQAOGIXQkt4Jg8djLFxKsgdCws58_4ANyg4dw:1uBvIN:7l0Gs1RgDlH08ynTO652WOAc0QqKztqgTw46W6tbSAc','2025-05-19 12:51:43.738174'),('xpiyllt5vv5i7c772hmsahdrsobt30y5','.eJxVjDsOwjAQBe_iGllx_Kek5wzWeneDA8iW4qRC3B0ipYD2zcx7iQTbWtLWeUkzibMwTpx-xwz44LoTukO9NYmtrsuc5a7Ig3Z5bcTPy-H-HRTo5Vs7i4bBOLSkSY9q8AozElsYfdREFC244JXKGTwZmEIeME7GsefAJoj3Bx97ONI:1uBsRw:qQSZ7z2rtqQQR6bussTIC38VYtSBQt_VPBvYsiyPfAU','2025-05-19 09:49:24.602792'),('xplrvyexs7it113cxjd1eisgchdcybfy','.eJxVjEEOgjAQRe_StWk6MwitS_eegQwzrUVNSSisjHcXEha6_e-9_zY9r0vu1xrnflRzMYjm9DsOLM9YdqIPLvfJylSWeRzsrtiDVnubNL6uh_t3kLnmrRbtgKJDbgmwEwJp1IdzoA6APFJKHhyxNAG9IqkLHhtIro2bxknM5wvaFDcS:1uBnBq:zA_Se8SSoROaoT9fG7WhyfcPndB7uIxviQIy1R3-Bjw','2025-05-19 04:12:26.459600'),('xrt1st5jlolc9gb8edkzaqfy09l8s4ph','.eJxVjEEOwiAQRe_C2hCgQwGX7j0DYYZBqoYmpV0Z765NutDtf-_9l4hpW2vcOi9xyuIsNChx-l0x0YPbjvI9tdssaW7rMqHcFXnQLq9z5uflcP8Oaur1W4NiYwkcJOO1CU47MMFqHH0x2cFAMIzFOgwBoZBBtgyevNI2UebC4v0B-ec35Q:1uGXYI:lhP__Gx1-qbWnD7YRIIzgFrzrYLkInu_AOPLLA61z4M','2025-06-01 06:31:14.099979'),('xscpzoumq6l6a5sq3wcd5dsas7ewsg9b','.eJxVjMsOwiAQAP-FsyG0Li-P3v0GwrKLVA0kpT0Z_92Q9KDXmcm8RYj7VsLeeQ0LiYvwIE6_EGN6ch2GHrHem0ytbuuCciTysF3eGvHrerR_gxJ7GV8CzeiA0KKZVHaU0Hs-W21Rz0ahy4QJtJ2AIPnM0ZJzBnEGl7Oy4vMFJNA4vw:1uBuZN:f3DDkXL3KtkpGL-BaKgrqYlDxUeqxGZUYGnSovFGmFM','2025-05-19 12:05:13.640730'),('xuonbxwowsxoc30u95wj0x21xpi7batz','.eJxVjEEOwiAQRe_C2pBiCjO4dO8ZyAwDUjWQlHbVeHdt0oVu_3vvbyrQupSw9jSHSdRFnUdUp9-VKT5T3ZE8qN6bjq0u88R6V_RBu741Sa_r4f4dFOrlWwOheJ_IDdFHky1nEBEeyAp450ZGsikikEFvAAkyIpsI2TlOAqzeH1i5OVk:1uC9y2:DvxEtWWjecNNuudFlnHSK-E3uRnSdCZ6FQpJRpUk9d8','2025-05-20 04:31:42.673360'),('xuq91vdzoa1kdfhpyhzjofp1tmc7v28l','.eJxVjMsOwiAQRf-FtSE8CgMu3fsNZIBBqgaS0q6M_65NutDtPefcFwu4rTVsg5YwZ3ZmWhl2-l0jpge1HeU7tlvnqbd1mSPfFX7Qwa890_NyuH8HFUf91gIpJyEhI1qSjiSRIg9SCVdkAm3MBCUnb2yaNDkAH4vS1hVRTJEI7P0BQdA4eg:1uCCxS:6VMEC3vbrZ-00QTpWOaDT9vuJ9qkWE5zGhx2GFjWBAE','2025-05-20 07:43:18.149640'),('xvndupfj46y45t1yxt9m86j2x5h72i5l','.eJxVjMsOwiAQRf-FtSGFGRhw6d5vaAYGpGrapI-V8d-1SRe6veec-1I9b2vrt6XM_SDqrIwBdfpdE-dHGXckdx5vk87TuM5D0ruiD7ro6yTleTncv4PGS_vWEbqUpfMhO8sVg4_RYvZE3iBiDESYqKYIUoAcCdhK4gy4CpYZUb0_BU03NQ:1uBwhv:uMusLvb2HQJpAO-CRIdb9Y4k7o5dZ-wQGPAdAsIh-Bc','2025-05-19 14:22:11.029036'),('xw9l3cjdl4ormrgbfg03qz0l5seqqacv','.eJxVjM0OwiAQhN-FsyEILD8evfsMZFm2UjU0Ke3J-O62SQ96m8z3zbxFwnWpae08p7GIi9Dgxem3zUhPbjsqD2z3SdLUlnnMclfkQbu8TYVf18P9O6jY67aOhtQ5-xjZkQYqW1DsySJ7Rm-s9QogMGliGxToAYwzxgzMFKIDFJ8vLts4Kw:1uCAGP:AFgsM483DWm0l0op6QeM6dhAaDjHAsdHUNZVJd4LyaQ','2025-05-20 04:50:41.785914'),('xy7gbg7mm9t50kpuzd6lph0pz9cjzkyw','.eJxVjMsOwiAQRf-FtSGFIg-X7v0GMswMUjWQlHZl_HfbpAvd3nPOfYsI61Li2nmOE4mL0EMQp981AT657ogeUO9NYqvLPCW5K_KgXd4a8et6uH8HBXrZagU52eTI-DwMlEflwpkheKO9Vo5NxhRoRAzMyvmNEWSLDFkrJrIkPl9KiTmi:1uC9hC:rIPU_f6xTuBA82QJGedrRwREPKR7GlsicLqjGg-W1iE','2025-05-20 04:14:18.907618'),('y0ymm1cbserugn53eh4xn68397451clj','.eJxVjDsOwjAQBe_iGlkb_9ahpM8ZIn92cQA5UpxUiLsjSymgfTPz3mIOx17mo9E2L1lcBYrL7xZDelLtID9Cva8yrXXflii7Ik_a5LRmet1O9--ghFZ67TGO2TCCZu2TJjsisSIdAFxkdpiAmbInj4MP2VhQBtNgHCSFFsTnC_prN-g:1twfyJ:DjR4iQNrSHae4XJU5wsPC1l4DWpQgS_iwvp4cSWZUVk','2025-04-07 11:27:59.920226'),('y72a7qd8nlf42c8mell4z08k0ost5shy','.eJxVjEEOwiAQRe_C2hCmQAGX7j0DmWFAqoYmpV0Z765NutDtf-_9l4i4rTVuPS9xYnEWBsTpdyRMj9x2wndst1mmua3LRHJX5EG7vM6cn5fD_Tuo2Ou3DpjYMTptdQFb3AAYRvAleNSBCI1hnRRpUM6iUSUlgsLk_GiAh6zE-wMSyThX:1uBru7:768tvr2Z6cdMRX4i6HMdz9xQoVMN96vKv0nSbG9LlVo','2025-05-19 09:14:27.648892'),('y94202jsgqzog3kdswc69m2nere1vb5q','.eJxVjDsOwyAQRO9CHSE-8oJTps8Z0AK7wUkEkrErK3ePLblIqpHmvZlNBFyXEtZOc5iyuArtvLj8thHTi-qB8hPro8nU6jJPUR6KPGmX95bpfTvdv4OCvexrz5bAcvQ2E3mGFAfwVsU9h4SQMEFWzpvMGiwQ40isR8dGK2OMNuLzBV1uONU:1uCd79:lqzzrzd4isYgY8lYe6c7q5_YEN7O7sMXr0iS5nxoKbA','2025-05-21 11:39:03.427800'),('y9mdw9zhhbu1c2zxptpemmz8bm3y43jr','.eJxVjEEOwiAQRe_C2hBKmQFcuvcMBJipVA0kpV0Z765NutDtf-_9lwhxW0vYOi9hJnEW2oI4_a4p5gfXHdE91luTudV1mZPcFXnQLq-N-Hk53L-DEnv51k4lRRMOCRg8aWCVR0dmNBqdijYDetSenfeEDgbCqBUDjESAZOwk3h8Z5zea:1uCAYU:CHvxKnLA1e7R2deOGhwDOw9iFpKnazTKQPXKQRerXl0','2025-05-20 05:09:22.208519'),('yccvmnnx9lkvkacc4exb5wgh9mf6yg1j','.eJxVjDsOwyAQBe9CHSHA_Jwyvc-AFnYJTiKQjF1FuXtsyUXSzsx7bxZgW0vYOi1hRnZlcvTs8ksjpCfVQ-ED6r3x1Oq6zJEfCT9t51NDet3O9u-gQC_7OqPXIyKlDGAdeR9BqkTgrFCkEJ0yFrI0YohWaBDW6EGmnUtAMmlgny9j3zkg:1uCAif:aV4pIkYwXMA2z5PB91HVF898A4sYZxKnzVPkcwf3ZB0','2025-05-20 05:19:53.589321'),('ye0jijghzykaggr7bbhisnszx20a1ob5','.eJxVjMEOwiAQRP-FsyFsaRfw6N1vaJYFpGogKe3J-O9K0oMe5jLvzbzETPuW573FdV6COAsYxem39MSPWDoJdyq3KrmWbV287Io8aJPXGuLzcrh_B5la7msXE2h2ExMRWD1-Y5ViRI-eIAVlDFgyFic2IQxAGiFNDjk6THoQ7w8J8zfb:1uBmtL:MmnM22jHmHqUftqi0bOt_GLqeOGmM15qAXLaIBwSoVg','2025-05-19 03:53:19.741458'),('yk1p8g4jc1tncao7gbndipwlb21ubffm','.eJxVjDsOwjAQBe_iGlnr9Z-SPmeI1vaGBJAtxUmFuDuKlALaNzPvLUbat3ncO6_jUsRVKG_E5XdNlJ9cD1QeVO9N5la3dUnyUORJuxxa4dftdP8OZurzUStLiAyhKPA2-ggBLUycnTeJkybCAAignTEWcyQApz3qQAam4ibx-QIDTTcD:1uCAiJ:kTJDRESdtbAlDrObjsyGGDCsx15Zb7-HfxtN-xwS0hA','2025-05-20 05:19:31.171454'),('ykpqngiw8jrk6ffauwhlj82uxmyzfsre','.eJxVjEEOwiAURO_C2hCg8AGX7nsG8vmAVA1NSrsy3t026UJXk8x7M28WcFtr2HpewpTYlYFkl98yIj1zO0h6YLvPnOa2LlPkh8JP2vk4p_y6ne7fQcVe9zVqAd5RTHZPAGPyMPhYhPLOOgFaUtRJKiA0UWORBAAKrS_CK5e8ZJ8v5xM3KQ:1uBwlq:YvqTevPhV5Mdx0Mg2rcI8dLW4UjUaeBzRioe0M23c90','2025-05-19 14:26:14.062471'),('ykxnw1m6k506nywlho1aglacm0v4e4o1','.eJxVjsEOwiAQRP-FsyGwtQt49O43kAUWqRpISnsy_rtt0oNe572ZzFt4Wpfi186zn5K4CA1WnH7TQPHJdUfpQfXeZGx1macgd0UetMtbS_y6Hu7fQKFetjYqQoc6RzsoC5lRj0DJGAcuacpgkOOASgVzpmhVIAejDgRuQN5OZfH5AhV0N6g:1uBxFW:iJfCrSJFQRNPFFDYaroNtsv7FA7tem-YZvS2HsDe9YU','2025-05-19 14:56:54.243713'),('ypc4mwc84fhmcv54gnvdmu9c47p4bvnl','.eJxVjEEOgjAQRe_StWlop3TApXvP0ExnpoIaSCisjHdXEha6_e-9_zKJtnVIW9UljWLOxnlnTr9rJn7otCO503SbLc_TuozZ7oo9aLXXWfR5Ody_g4Hq8K2pNL640hdxCDE4Qii-xUCBOWCLquBVBD11Cr0Ad6XvKGeODUaGbN4fN5U4zw:1uBwco:0ePWXGdbLoC-q-pn4mbEDSaxwjB9nFHfjCksHQu6iTc','2025-05-19 14:16:54.374829'),('yqdq1ine50wtmo3ch23fgsdhircygt2f','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1ty8G5:Yaar_kqAlNdSbwdbeYnv3-63zQ6__bIyJGuGQ9KVNVs','2025-04-11 11:52:21.996884'),('yvizzynfwyl7h93yongi3rtieq35xvfz','.eJxVjDsOwjAQBe_iGln-Z01JnzNYu16bBFAixUmFuDuJlALaNzPvLRJu65C2VpY0srgK40FcflfC_CzTgfiB032WeZ7WZSR5KPKkTfYzl9ftdP8OBmzDXoOKHVJWGi2Gqn3lzC5jAMAS9Y5itdqzsxCyqaQ0WXIxGNMBGe5AfL5FcDht:1uCAGv:dVrmNATbzxYla4acIiCpMr2519e0tbzFIkHkRDhZFKE','2025-05-20 04:51:13.547684'),('yxov87irskp9ofc7uvyx40h99hdvk4ji','.eJxVjMsOwiAQRf-FtSG0MDC4dO83kBkeUjU0Ke3K-O_apAvd3nPOfYlA21rD1vMSpiTOQhstTr8rU3zktqN0p3abZZzbukwsd0UetMvrnPLzcrh_B5V6_damoEbnhmwLYqKB2ALF0YPyAMpoJEDt2NislNUwKl_YYMLCUJxRWbw_DQU3Yg:1uCGY5:c0GuChL23lVGM81NBlEkBxDtyfFGojT9LqisaWagbvc','2025-05-20 11:33:21.247486'),('yzljqqieevcfpo1f9zog7fmbf5gz75bl','.eJxVjDsOwjAQBe_iGllZ_01JzxmsXe-GBFAixUmFuDtESgHtm5n3UgW3dShbk6WMrM4KrFWn35WwPmTaEd9xus26ztO6jKR3RR-06evM8rwc7t_BgG341p6SsQYwZlfZMiQvBmuOGZ3vEaKTFHpOhkjY95AldBwgkbHBVYqden8AKSI4QA:1uBxTA:8BRx1bcWe1m23CjzkSfoQ-X9St7a_m5sOy8HTT5w8cM','2025-05-19 15:11:00.177745'),('z1ngw5dnkjoz5qxtzir8ruijlkduv9za','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1tx1fc:KNO_35jWbzHyoLp-HauPSmnp1A2ZdZdT_6l9zHmMplo','2025-04-08 10:38:08.650334'),('z1w1e0giyz2jitnivmj9z9o6vi6aq25k','.eJxVjM0OwiAQhN-FsyHLAhY8evcZyC4_UjU0Ke3J-O62SQ96mmS-b-YtAq1LDWvPcxiTuAjUgzj9tkzxmduO0oPafZJxass8stwVedAub1PKr-vh_h1U6nVbq0IRorHZkAVltiCH3mokr4HhzBadA8JM4AYCDSUrRTolRl8MO_H5AiTpOA8:1uCBFK:ymU9VtYZgyPb5KOFAR-9XNPuo-K6z1mvV9BSKw73i9Q','2025-05-20 05:53:38.678971'),('z2n6k6k6gkt2v9sfk5t7wc9zl9giiziv','.eJxVjEEOwiAQRe_C2hBg6FBcuu8ZCDNQqRqalHZlvLtt0oVu33v_v0WI21rC1vISpiSuwmglLr-UIj9zPVR6xHqfJc91XSaSRyJP2-Qwp_y6ne3fQYmt7GvwAD6zYcW2iwqJfDJgc6d2YpDy6BB9hNQjsiP0xDSC1b5nnQCc-HwBKMA4Nw:1uCBHt:yQkG9oVgi0T1QWvr8YP2_pFsX46OFMXDEaChfBL_Tdo','2025-05-20 05:56:17.733913'),('z380ydofdg230nyfixk0oznehr6vltok','.eJxVjMsOwiAQRf-FtSE8pgVcuvcbyDAMUjU0Ke3K-O_apAvd3nPOfYmI21rj1nmJUxZnYbw4_Y4J6cFtJ_mO7TZLmtu6TEnuijxol9c58_NyuH8HFXv91raoMUBwnIMdaMzagAJMjghAJzZkDaYBnNXgNXIBKMYphUQUvC9FvD_53TgE:1uDR1Z:a0Tv94TPLaDTbsqRjHDM21FqCGkitWiI4Qc-bGzndqg','2025-05-23 16:56:37.445547'),('z78mpz5k11emo7s2gjaenve9j0q2jwjz','.eJxVjLsOAiEQAP-F2hAeGwiW9n4DYRdWTg0kx11l_HcluULbmcm8REz7VuM-yhqXLM7CidMvw0SP0qbI99RuXVJv27qgnIk87JDXnsvzcrR_g5pGnVsAj5gwsFbOg4KiHSvNhDkHJA0agAOxMTbrr7IBnbOGoSRP3qJ4fwDmrTf7:1u603X:cqsifgrhiH7hGIJGI32jCkuKXDvmaKSjn5C0BQsZ5FU','2025-05-03 04:43:55.039497'),('za1c86wynlopx2zfhcfju1ymgxzzougm','.eJxVjMsOwiAQRf-FtSEwPAZduu83EB6DVA0kpV0Z_12bdKHbe865L-bDtla_DVr8nNmFgUV2-l1jSA9qO8r30G6dp97WZY58V_hBB596puf1cP8Oahj1W5PIgGQlGBsdgDhLoR2CcVpIslAQXbFkEiKKrCkhYFEYlNIuBV0Ke38A9xM3Mw:1uCAy0:3MGkso45bK_cwqDcVK6Y0UQRA4r7sNDaS9cDcT002ko','2025-05-20 05:35:44.478368'),('zf0onhukm7lm5bvky4omp2eoib96imcp','.eJxVjDsOwjAQBe_iGlnrT7IOJT1nsNbrNQ4gR8qnQtwdIqWA9s3Me6lI21rjtsgcx6zOyqI6_Y6J-CFtJ_lO7TZpnto6j0nvij7ooq9TluflcP8OKi31WxcUsY4DOzMMJlsBIMoFsANOmEIniYnRF1cKgrPouwA9SO4NiCdS7w8iyjiH:1uC8nI:ULZ4lw1RlgQ8HpSzb9T31w7mjpCScMfvXKHL-UXG3t4','2025-05-20 03:16:32.828610'),('zf98mvd7bqpoyrom1fxsdnr2fkiaapll','.eJxVjEEOwiAQRe_C2pChgIBL956hmWFGqRpISrsy3l2bdKHb_977LzXiupRx7TKPE6uTMgHU4XclzA-pG-I71lvTudVlnkhvit5p15fG8jzv7t9BwV6-tRiEjFdPyClatIwDkomOg_WRogMQMuBjSkIgfMTBxCDWgXUGLWT1_gBHdDhE:1uC9Ss:I-hAqGd3K1EO47pWhbpAEBDsbPlobozO3PUYrMNmaUg','2025-05-20 03:59:30.747828'),('zfycf4nqqromiw1pvx1v85q0ge4j23zc','.eJxVjDsOwjAQBe_iGln2Ygebkp4zRPszDqBEipMKcXeIlALaNzPvZXpcl9qvTed-EHM23oE5_K6E_NBxQ3LH8TZZnsZlHshuit1ps9dJ9HnZ3b-Diq1-a0Z_7MQlZQKF5AEk-Bi0YMaQEbscc3Sk7BnoxBBK5uBJUiQnJRfz_gA4ZTjp:1uCErl:UOJss2kZF5xjHZhd8dj-sDBEnmoHSelEi_AeUz2POCw','2025-05-20 09:45:33.575325'),('zgditzxgkqdbj3kmtko2ud4k1q6ffrhi','.eJxVjDsOwjAQBe_iGlle4i8lfc5g7XptHECOFCcV4u4QKQW0b2beS0Tc1hq3npc4sbiIswZx-l0J0yO3HfEd222WaW7rMpHcFXnQLseZ8_N6uH8HFXv91ugoE-gEwSM4rY03LoDNSZHlZAqxKkFxAAIHqIMphWmwFpzXZvBKvD8uGTfg:1uCBIM:YJWqzz1N0niyq-mBwGhlRIuJ0EP4kebFfZ0EH0kA_lQ','2025-05-20 05:56:46.537223'),('zheceq4np98xqaygpy8ekyzichf8hoat','.eJxVjDsOwjAQBe_iGln4x8aU9JzBWu9ucADZUpxUiLtDpBTQvpl5L5VwXUpau8xpYnVWVh1-t4z0kLoBvmO9NU2tLvOU9abonXZ9bSzPy-7-HRTs5VtDPNqIjik4JOBsOKKAicAA3pkxGxNDtJ4gE8pALOEkI3rDjoUGUO8P7NU4oQ:1u12EK:R9KSxb0XU2mfMJ1FeoA-ekneE_l7nHvnJ3pUa86_8os','2025-04-19 12:02:32.734477'),('zhx3p6jaovppxffx8ue7ue9io8948vvm','.eJxVjMsOwiAQRf-FtSEUwsule7-BTJkZqRpISrsy_ruSdKHbe849L5Fg30raO61pQXEW1ovT7zhDflAdBO9Qb03mVrd1meVQ5EG7vDak5-Vw_wIFehlvz6SBnTMWFBhndM46MGJkY4Kyhu3ECEHFiRRH-pYDYPDRaetz1OL9ASMkOH0:1uBsXq:k57o-rYj-yF6U2zTDcBnC2NGWyeDHNBmLsU4nQY50C8','2025-05-19 09:55:30.679475'),('zicyz5ld74yn63ud77h47s3oia2bb9hl','.eJxVjEEOwiAQRe_C2hCoBQaX7nsGMsMMUjVtUtqV8e7apAvd_vfef6mE21rT1mRJI6uLcp06_Y6E-SHTTviO023WeZ7WZSS9K_qgTQ8zy_N6uH8HFVv91iXm6BnDmVGyCdRlb4NlJwHIo7CxngnAgwEXQ6HY98AOggMSLgLq_QEjSTiY:1uBsIH:VykGAVWjlYBkNc-sgl4F8426iR7PVfjVXGDaljpwi24','2025-05-19 09:39:25.121855'),('zigooyrpojsrz9pa7pj0v4g3saqswcl0','.eJxVjMsOwiAURP-FtSFAefS6dO83kHt5SNVAUtqV8d-VpAtdTTLnzLyYx30rfu9p9UtkZyYNO_2WhOGR6iDxjvXWeGh1WxfiQ-EH7fzaYnpeDvfvoGAv37URWmAygGrOSriYnNV5AqBonUMkIBuMHak15GQJo56BQFilpJQTe38ACMs34g:1uBnBU:WNy-Gds5Yo07G5TBRiGYdTANVc73ilUKyzBDmMDNgaQ','2025-05-19 04:12:04.341963'),('zkpoufjvh1bx8hayy7cpcyj08vj60mvm','.eJxVjMsOwiAUBf-FtSEVyqMu3fcbyH2AVA0kpV0Z_11JutDtmZnzEgH2LYe9xTUsLC5CK3H6HRHoEUsnfIdyq5Jq2dYFZVfkQZucK8fn9XD_DjK03GvtE7A3A4xoFBKCcdEaNzqabALlU0LjEkNSOJC2PNK3YHu2xDwZEO8PMqM5YQ:1uBoVD:aUwgXl4Ix52b5izZNKYsAW-0aPqmGopC0pCDh-2svD0','2025-05-19 05:36:31.658617'),('znxu065gyzcnvax4ssidc7ye9762m8xz','.eJxVjDsOwyAQBe9CHSHA_Jwyvc-AFnYJTiKQjF1FuXtsyUXSzsx7bxZgW0vYOi1hRnZlcvTs8ksjpCfVQ-ED6r3x1Oq6zJEfCT9t51NDet3O9u-gQC_7OqPXIyKlDGAdeR9BqkTgrFCkEJ0yFrI0YohWaBDW6EGmnUtAMmlgny9j3zkg:1uCANG:xCl0HHm9VKOr-PeQGLixMWQK5uzt600dUHioxbsHibI','2025-05-20 04:57:46.749671'),('ztkdbxeid8dgr4ss5239wls5u8z4o47y','.eJxVjDsOwjAQBe_iGllee_2jpOcM1vqHA8iR4qRC3B0ipYD2zcx7sUDb2sI2yhKmzM5Mas1Ov2uk9Ch9R_lO_TbzNPd1mSLfFX7Qwa9zLs_L4f4dNBrtWzuP1QOB8VU4VFmlIiNGdDZ5I431ijIoIlAObEkSyaIWyRohqwCo7P0BETQ3Sg:1uCADH:I-RU34bH38atTU3bPaejfgjeRKvLmFwX2GyKat5m7GM','2025-05-20 04:47:27.509412'),('zygeit5161od64ef6sdkb0tt4kuudplj','.eJxVjEsOwjAMBe-SNYoaO1USluw5Q-XENimgVOpnhbg7VOoCtm9m3ssMtK112BaZh5HN2UQ0p98xU3lI2wnfqd0mW6a2zmO2u2IPutjrxPK8HO7fQaWlfmvvNYcC0EOB3GlJXlWKuh5QMDoK2TMTcsBAGHNSTRg4iUdAENeZ9wci_Thq:1uBtln:rZkW4lr-hZDiNe870OC0HpXvxSPB6htT6GZ1a-Z1Pjo','2025-05-19 11:13:59.246762');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_assignment`
--

DROP TABLE IF EXISTS `track_assignment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_assignment` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(55) NOT NULL,
  `start_date` date NOT NULL,
  `end_date` date NOT NULL,
  `course_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `track_assignment_course_id_69bfb3ac_fk_track_course_id` (`course_id`),
  CONSTRAINT `track_assignment_course_id_69bfb3ac_fk_track_course_id` FOREIGN KEY (`course_id`) REFERENCES `track_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_assignment`
--

LOCK TABLES `track_assignment` WRITE;
/*!40000 ALTER TABLE `track_assignment` DISABLE KEYS */;
INSERT INTO `track_assignment` VALUES (4,'Dynamic Programming - Day 1 & 2','2025-05-28','2025-05-29',3),(5,'Greedy - Day 3 & 4','2025-05-30','2025-05-31',3),(6,'Prefix Sum - Day 5 & 6','2025-06-02','2025-06-03',3),(7,'Bit Manipulation - Day 7 & 8','2025-06-04','2025-06-05',3),(8,'Maths - Day 9 & 10','2025-06-06','2025-06-07',3),(9,'Trees - Day 11 & 12','2025-06-09','2025-06-10',3),(10,'Types - Day 2','2025-05-23','2025-05-23',6);
/*!40000 ALTER TABLE `track_assignment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_assignment_problems`
--

DROP TABLE IF EXISTS `track_assignment_problems`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_assignment_problems` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `assignment_id` bigint(20) NOT NULL,
  `problem_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_assignment_pro_assignment_id_03260666_fk_track_ass` (`assignment_id`),
  KEY `track_assignment_pro_problem_id_4c46aab3_fk_track_pro` (`problem_id`),
  CONSTRAINT `track_assignment_pro_assignment_id_03260666_fk_track_ass` FOREIGN KEY (`assignment_id`) REFERENCES `track_assignment` (`id`),
  CONSTRAINT `track_assignment_pro_problem_id_4c46aab3_fk_track_pro` FOREIGN KEY (`problem_id`) REFERENCES `track_problem` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=168 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_assignment_problems`
--

LOCK TABLES `track_assignment_problems` WRITE;
/*!40000 ALTER TABLE `track_assignment_problems` DISABLE KEYS */;
INSERT INTO `track_assignment_problems` VALUES (75,4,322),(76,4,16584),(77,4,518),(78,4,10),(79,4,44),(80,4,85),(81,4,115),(82,4,87),(83,4,123),(84,4,17307),(85,4,17309),(86,4,14123),(91,5,763),(92,5,678),(93,5,135),(94,5,2551),(95,5,1717),(96,5,1537),(97,5,1753),(98,5,2818),(99,5,12269),(100,5,15793),(101,5,14754),(102,5,15029),(103,6,253),(104,6,325),(105,6,528),(106,6,813),(107,6,4129),(108,6,4362),(109,6,4598),(110,6,4449),(111,6,4597),(112,6,17030),(113,6,4407),(114,6,644),(124,7,260),(125,7,371),(126,7,898),(127,7,2275),(128,7,2564),(129,7,1310),(130,7,1442),(131,7,2429),(132,7,266),(133,7,868),(134,7,762),(135,7,351),(136,7,421),(137,7,477),(138,7,491),(139,8,166),(140,8,223),(141,8,227),(142,8,279),(143,8,294),(144,8,313),(145,8,343),(146,8,356),(147,8,357),(148,8,3703),(149,8,3737),(150,8,3778),(151,8,3872),(152,8,3912),(153,9,2096),(154,9,538),(155,9,230),(156,9,98),(157,9,1361),(158,9,1448),(159,9,199),(160,9,235),(161,9,236),(162,9,1123),(163,9,449),(164,9,297),(165,9,124),(166,10,4927),(167,10,4036);
/*!40000 ALTER TABLE `track_assignment_problems` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_batch`
--

DROP TABLE IF EXISTS `track_batch`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_batch` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `start_year` int(11) NOT NULL,
  `end_year` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_batch`
--

LOCK TABLES `track_batch` WRITE;
/*!40000 ALTER TABLE `track_batch` DISABLE KEYS */;
INSERT INTO `track_batch` VALUES (1,2022,2026),(2,2023,2027),(3,2024,2028);
/*!40000 ALTER TABLE `track_batch` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_complexity`
--

DROP TABLE IF EXISTS `track_complexity`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_complexity` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `level` varchar(55) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_complexity`
--

LOCK TABLES `track_complexity` WRITE;
/*!40000 ALTER TABLE `track_complexity` DISABLE KEYS */;
INSERT INTO `track_complexity` VALUES (1,'Easy'),(2,'Medium'),(3,'Hard'),(4,'Basic'),(5,'School'),(6,'Undefined');
/*!40000 ALTER TABLE `track_complexity` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_contest`
--

DROP TABLE IF EXISTS `track_contest`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_contest` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `start_time` datetime(6) NOT NULL,
  `end_time` datetime(6) NOT NULL,
  `dmoj_key` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_contest`
--

LOCK TABLES `track_contest` WRITE;
/*!40000 ALTER TABLE `track_contest` DISABLE KEYS */;
INSERT INTO `track_contest` VALUES (1,'Code War','2025-03-26 07:25:00.166029','2025-03-26 07:25:00.166039','codewar'),(2,'Sample Contest','2025-04-02 10:00:00.000000','2025-04-02 12:00:00.000000','samplecontest'),(3,'Code Contest','2025-04-02 09:20:09.000000','2025-04-02 09:30:10.000000','codecontest'),(4,'Test Contest','2025-04-02 10:01:08.000000','2025-04-02 10:11:09.000000','testcontest'),(5,'Testing Contest','2025-04-03 00:30:00.000000','2025-04-03 12:30:00.000000','testing'),(6,'Crash','2025-04-04 04:30:00.000000','2025-04-04 07:00:00.000000','crash'),(7,'Mega Contest','2025-04-05 04:30:00.000000','2025-04-05 12:30:00.000000','megacontest'),(8,'Omni Contest','2025-04-03 10:51:48.000000','2025-04-03 11:51:49.000000','omnicontest'),(9,'Ace','2025-04-04 08:47:58.000000','2025-04-04 12:30:00.000000','ace');
/*!40000 ALTER TABLE `track_contest` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_course`
--

DROP TABLE IF EXISTS `track_course`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_course` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `course_title` varchar(255) DEFAULT NULL,
  `start_date` date DEFAULT NULL,
  `end_date` date DEFAULT NULL,
  `created_by_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `track_course_created_by_id_b246f3e4_fk_auth_user_id` (`created_by_id`),
  CONSTRAINT `track_course_created_by_id_b246f3e4_fk_auth_user_id` FOREIGN KEY (`created_by_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_course`
--

LOCK TABLES `track_course` WRITE;
/*!40000 ALTER TABLE `track_course` DISABLE KEYS */;
INSERT INTO `track_course` VALUES (3,'2026_SDE_1','2025-05-01','2026-01-30',6),(4,'2026_SDE_2','2025-05-05','2026-01-30',6),(6,'Java_2026_1','2025-05-28','2025-10-31',336);
/*!40000 ALTER TABLE `track_course` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_course_coordinator`
--

DROP TABLE IF EXISTS `track_course_coordinator`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_course_coordinator` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `course_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_course_coordinator_course_id_f54b7c4a_fk_track_course_id` (`course_id`),
  KEY `track_course_coordinator_user_id_4b41b261_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_course_coordinator_course_id_f54b7c4a_fk_track_course_id` FOREIGN KEY (`course_id`) REFERENCES `track_course` (`id`),
  CONSTRAINT `track_course_coordinator_user_id_4b41b261_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_course_coordinator`
--

LOCK TABLES `track_course_coordinator` WRITE;
/*!40000 ALTER TABLE `track_course_coordinator` DISABLE KEYS */;
/*!40000 ALTER TABLE `track_course_coordinator` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_course_enrollement`
--

DROP TABLE IF EXISTS `track_course_enrollement`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_course_enrollement` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `course_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_course_enrollement_course_id_cf5fc066_fk_track_course_id` (`course_id`),
  KEY `track_course_enrollement_user_id_cfcd1fb2_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_course_enrollement_course_id_cf5fc066_fk_track_course_id` FOREIGN KEY (`course_id`) REFERENCES `track_course` (`id`),
  CONSTRAINT `track_course_enrollement_user_id_cfcd1fb2_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_course_enrollement`
--

LOCK TABLES `track_course_enrollement` WRITE;
/*!40000 ALTER TABLE `track_course_enrollement` DISABLE KEYS */;
INSERT INTO `track_course_enrollement` VALUES (8,3,16),(9,3,20),(10,3,158),(11,3,15),(12,3,94),(13,3,14),(14,3,18),(15,3,37),(16,3,51),(17,3,85),(18,3,88),(19,3,145),(20,3,90),(21,3,19),(22,3,156),(23,3,12),(24,3,24),(25,3,102),(26,3,299),(27,3,23),(28,3,17),(29,3,21),(30,3,25),(31,3,13),(32,3,92),(33,3,32);
/*!40000 ALTER TABLE `track_course_enrollement` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_department`
--

DROP TABLE IF EXISTS `track_department`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_department` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `short_name` varchar(6) NOT NULL,
  `name` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_department`
--

LOCK TABLES `track_department` WRITE;
/*!40000 ALTER TABLE `track_department` DISABLE KEYS */;
INSERT INTO `track_department` VALUES (1,'CSE','Computer Science and Engineering'),(2,'IT','Information Technology'),(3,'ECE','Electronics and Communication Engineering'),(4,'EEE','Electrical and Electronics Engineering'),(5,'AD','Artificial Intelligence and Data Science'),(6,'MECH','Mechanical Engineering');
/*!40000 ALTER TABLE `track_department` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_discussion`
--

DROP TABLE IF EXISTS `track_discussion`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_discussion` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `discussion_name` varchar(55) NOT NULL,
  `course_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_discussion_course_id_c418ef26_fk_track_course_id` (`course_id`),
  CONSTRAINT `track_discussion_course_id_c418ef26_fk_track_course_id` FOREIGN KEY (`course_id`) REFERENCES `track_course` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_discussion`
--

LOCK TABLES `track_discussion` WRITE;
/*!40000 ALTER TABLE `track_discussion` DISABLE KEYS */;
INSERT INTO `track_discussion` VALUES (1,'Discussion 1',3),(2,'Discussion 2',3),(3,'Discussion 3',3);
/*!40000 ALTER TABLE `track_discussion` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_discussion_detail`
--

DROP TABLE IF EXISTS `track_discussion_detail`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_discussion_detail` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `integrity_score` int(11) NOT NULL,
  `communication_score` int(11) NOT NULL,
  `comments` longtext NOT NULL,
  `date` date NOT NULL,
  `discussion_id` bigint(20) NOT NULL,
  `problem_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_discussion_det_discussion_id_8638165a_fk_track_dis` (`discussion_id`),
  KEY `track_discussion_detail_problem_id_a19bc220_fk_track_problem_id` (`problem_id`),
  KEY `track_discussion_detail_user_id_e4f2cf6a_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_discussion_det_discussion_id_8638165a_fk_track_dis` FOREIGN KEY (`discussion_id`) REFERENCES `track_discussion` (`id`),
  CONSTRAINT `track_discussion_detail_problem_id_a19bc220_fk_track_problem_id` FOREIGN KEY (`problem_id`) REFERENCES `track_problem` (`id`),
  CONSTRAINT `track_discussion_detail_user_id_e4f2cf6a_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_discussion_detail`
--

LOCK TABLES `track_discussion_detail` WRITE;
/*!40000 ALTER TABLE `track_discussion_detail` DISABLE KEYS */;
INSERT INTO `track_discussion_detail` VALUES (8,2,1,'Good','2025-05-21',1,12269,16),(9,0,2,'Better','2025-05-21',1,223,94);
/*!40000 ALTER TABLE `track_discussion_detail` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_institution`
--

DROP TABLE IF EXISTS `track_institution`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_institution` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_institution`
--

LOCK TABLES `track_institution` WRITE;
/*!40000 ALTER TABLE `track_institution` DISABLE KEYS */;
INSERT INTO `track_institution` VALUES (1,'Karpagam Institute of Technology'),(2,'Karpagam College of Engineering'),(3,'Karpagam Academy of Higher Education');
/*!40000 ALTER TABLE `track_institution` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_platform`
--

DROP TABLE IF EXISTS `track_platform`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_platform` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `url` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_platform`
--

LOCK TABLES `track_platform` WRITE;
/*!40000 ALTER TABLE `track_platform` DISABLE KEYS */;
INSERT INTO `track_platform` VALUES (1,'Leet Code','https://leetcode.com/problems/'),(2,'Geeks for Geeks','https://www.geeksforgeeks.org/problems/'),(3,'Code Forces','https://codeforces.com/problemset/problem/');
/*!40000 ALTER TABLE `track_platform` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problem`
--

DROP TABLE IF EXISTS `track_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problem` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `problem_title` varchar(255) NOT NULL,
  `problem_slug` varchar(255) DEFAULT NULL,
  `complexity_id` bigint(20) DEFAULT NULL,
  `platform_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_problem_complexity_id_a2960e76_fk_track_complexity_id` (`complexity_id`),
  KEY `track_problem_platform_id_bb8224e4_fk_track_platform_id` (`platform_id`),
  CONSTRAINT `track_problem_complexity_id_a2960e76_fk_track_complexity_id` FOREIGN KEY (`complexity_id`) REFERENCES `track_complexity` (`id`),
  CONSTRAINT `track_problem_platform_id_bb8224e4_fk_track_platform_id` FOREIGN KEY (`platform_id`) REFERENCES `track_platform` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=17419 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problem`
--

LOCK TABLES `track_problem` WRITE;
/*!40000 ALTER TABLE `track_problem` DISABLE KEYS */;
INSERT INTO `track_problem` VALUES (1,'Two Sum','two-sum',1,1),(2,'Add Two Numbers','add-two-numbers',2,1),(3,'Longest Substring Without Repeating Characters','longest-substring-without-repeating-characters',2,1),(4,'Median of Two Sorted Arrays','median-of-two-sorted-arrays',3,1),(5,'Longest Palindromic Substring','longest-palindromic-substring',2,1),(6,'Zigzag Conversion','zigzag-conversion',2,1),(7,'Reverse Integer','reverse-integer',2,1),(8,'String to Integer (atoi)','string-to-integer-atoi',2,1),(9,'Palindrome Number','palindrome-number',1,1),(10,'Regular Expression Matching','regular-expression-matching',3,1),(11,'Container With Most Water','container-with-most-water',2,1),(12,'Integer to Roman','integer-to-roman',2,1),(13,'Roman to Integer','roman-to-integer',1,1),(14,'Longest Common Prefix','longest-common-prefix',1,1),(15,'3Sum','3sum',2,1),(16,'3Sum Closest','3sum-closest',2,1),(17,'Letter Combinations of a Phone Number','letter-combinations-of-a-phone-number',2,1),(18,'4Sum','4sum',2,1),(19,'Remove Nth Node From End of List','remove-nth-node-from-end-of-list',2,1),(20,'Valid Parentheses','valid-parentheses',1,1),(21,'Merge Two Sorted Lists','merge-two-sorted-lists',1,1),(22,'Generate Parentheses','generate-parentheses',2,1),(23,'Merge k Sorted Lists','merge-k-sorted-lists',3,1),(24,'Swap Nodes in Pairs','swap-nodes-in-pairs',2,1),(25,'Reverse Nodes in k-Group','reverse-nodes-in-k-group',3,1),(26,'Remove Duplicates from Sorted Array','remove-duplicates-from-sorted-array',1,1),(27,'Remove Element','remove-element',1,1),(28,'Find the Index of the First Occurrence in a String','find-the-index-of-the-first-occurrence-in-a-string',1,1),(29,'Divide Two Integers','divide-two-integers',2,1),(30,'Substring with Concatenation of All Words','substring-with-concatenation-of-all-words',3,1),(31,'Next Permutation','next-permutation',2,1),(32,'Longest Valid Parentheses','longest-valid-parentheses',3,1),(33,'Search in Rotated Sorted Array','search-in-rotated-sorted-array',2,1),(34,'Find First and Last Position of Element in Sorted Array','find-first-and-last-position-of-element-in-sorted-array',2,1),(35,'Search Insert Position','search-insert-position',1,1),(36,'Valid Sudoku','valid-sudoku',2,1),(37,'Sudoku Solver','sudoku-solver',3,1),(38,'Count and Say','count-and-say',2,1),(39,'Combination Sum','combination-sum',2,1),(40,'Combination Sum II','combination-sum-ii',2,1),(41,'First Missing Positive','first-missing-positive',3,1),(42,'Trapping Rain Water','trapping-rain-water',3,1),(43,'Multiply Strings','multiply-strings',2,1),(44,'Wildcard Matching','wildcard-matching',3,1),(45,'Jump Game II','jump-game-ii',2,1),(46,'Permutations','permutations',2,1),(47,'Permutations II','permutations-ii',2,1),(48,'Rotate Image','rotate-image',2,1),(49,'Group Anagrams','group-anagrams',2,1),(50,'Pow(x, n)','powx-n',2,1),(51,'N-Queens','n-queens',3,1),(52,'N-Queens II','n-queens-ii',3,1),(53,'Maximum Subarray','maximum-subarray',2,1),(54,'Spiral Matrix','spiral-matrix',2,1),(55,'Jump Game','jump-game',2,1),(56,'Merge Intervals','merge-intervals',2,1),(57,'Insert Interval','insert-interval',2,1),(58,'Length of Last Word','length-of-last-word',1,1),(59,'Spiral Matrix II','spiral-matrix-ii',2,1),(60,'Permutation Sequence','permutation-sequence',3,1),(61,'Rotate List','rotate-list',2,1),(62,'Unique Paths','unique-paths',2,1),(63,'Unique Paths II','unique-paths-ii',2,1),(64,'Minimum Path Sum','minimum-path-sum',2,1),(65,'Valid Number','valid-number',3,1),(66,'Plus One','plus-one',1,1),(67,'Add Binary','add-binary',1,1),(68,'Text Justification','text-justification',3,1),(69,'Sqrt(x)','sqrtx',1,1),(70,'Climbing Stairs','climbing-stairs',1,1),(71,'Simplify Path','simplify-path',2,1),(72,'Edit Distance','edit-distance',2,1),(73,'Set Matrix Zeroes','set-matrix-zeroes',2,1),(74,'Search a 2D Matrix','search-a-2d-matrix',2,1),(75,'Sort Colors','sort-colors',2,1),(76,'Minimum Window Substring','minimum-window-substring',3,1),(77,'Combinations','combinations',2,1),(78,'Subsets','subsets',2,1),(79,'Word Search','word-search',2,1),(80,'Remove Duplicates from Sorted Array II','remove-duplicates-from-sorted-array-ii',2,1),(81,'Search in Rotated Sorted Array II','search-in-rotated-sorted-array-ii',2,1),(82,'Remove Duplicates from Sorted List II','remove-duplicates-from-sorted-list-ii',2,1),(83,'Remove Duplicates from Sorted List','remove-duplicates-from-sorted-list',1,1),(84,'Largest Rectangle in Histogram','largest-rectangle-in-histogram',3,1),(85,'Maximal Rectangle','maximal-rectangle',3,1),(86,'Partition List','partition-list',2,1),(87,'Scramble String','scramble-string',3,1),(88,'Merge Sorted Array','merge-sorted-array',1,1),(89,'Gray Code','gray-code',2,1),(90,'Subsets II','subsets-ii',2,1),(91,'Decode Ways','decode-ways',2,1),(92,'Reverse Linked List II','reverse-linked-list-ii',2,1),(93,'Restore IP Addresses','restore-ip-addresses',2,1),(94,'Binary Tree Inorder Traversal','binary-tree-inorder-traversal',1,1),(95,'Unique Binary Search Trees II','unique-binary-search-trees-ii',2,1),(96,'Unique Binary Search Trees','unique-binary-search-trees',2,1),(97,'Interleaving String','interleaving-string',2,1),(98,'Validate Binary Search Tree','validate-binary-search-tree',2,1),(99,'Recover Binary Search Tree','recover-binary-search-tree',2,1),(100,'Same Tree','same-tree',1,1),(101,'Symmetric Tree','symmetric-tree',1,1),(102,'Binary Tree Level Order Traversal','binary-tree-level-order-traversal',2,1),(103,'Binary Tree Zigzag Level Order Traversal','binary-tree-zigzag-level-order-traversal',2,1),(104,'Maximum Depth of Binary Tree','maximum-depth-of-binary-tree',1,1),(105,'Construct Binary Tree from Preorder and Inorder Traversal','construct-binary-tree-from-preorder-and-inorder-traversal',2,1),(106,'Construct Binary Tree from Inorder and Postorder Traversal','construct-binary-tree-from-inorder-and-postorder-traversal',2,1),(107,'Binary Tree Level Order Traversal II','binary-tree-level-order-traversal-ii',2,1),(108,'Convert Sorted Array to Binary Search Tree','convert-sorted-array-to-binary-search-tree',1,1),(109,'Convert Sorted List to Binary Search Tree','convert-sorted-list-to-binary-search-tree',2,1),(110,'Balanced Binary Tree','balanced-binary-tree',1,1),(111,'Minimum Depth of Binary Tree','minimum-depth-of-binary-tree',1,1),(112,'Path Sum','path-sum',1,1),(113,'Path Sum II','path-sum-ii',2,1),(114,'Flatten Binary Tree to Linked List','flatten-binary-tree-to-linked-list',2,1),(115,'Distinct Subsequences','distinct-subsequences',3,1),(116,'Populating Next Right Pointers in Each Node','populating-next-right-pointers-in-each-node',2,1),(117,'Populating Next Right Pointers in Each Node II','populating-next-right-pointers-in-each-node-ii',2,1),(118,'Pascal\'s Triangle','pascals-triangle',1,1),(119,'Pascal\'s Triangle II','pascals-triangle-ii',1,1),(120,'Triangle','triangle',2,1),(121,'Best Time to Buy and Sell Stock','best-time-to-buy-and-sell-stock',1,1),(122,'Best Time to Buy and Sell Stock II','best-time-to-buy-and-sell-stock-ii',2,1),(123,'Best Time to Buy and Sell Stock III','best-time-to-buy-and-sell-stock-iii',3,1),(124,'Binary Tree Maximum Path Sum','binary-tree-maximum-path-sum',3,1),(125,'Valid Palindrome','valid-palindrome',1,1),(126,'Word Ladder II','word-ladder-ii',3,1),(127,'Word Ladder','word-ladder',3,1),(128,'Longest Consecutive Sequence','longest-consecutive-sequence',2,1),(129,'Sum Root to Leaf Numbers','sum-root-to-leaf-numbers',2,1),(130,'Surrounded Regions','surrounded-regions',2,1),(131,'Palindrome Partitioning','palindrome-partitioning',2,1),(132,'Palindrome Partitioning II','palindrome-partitioning-ii',3,1),(133,'Clone Graph','clone-graph',2,1),(134,'Gas Station','gas-station',2,1),(135,'Candy','candy',3,1),(136,'Single Number','single-number',1,1),(137,'Single Number II','single-number-ii',2,1),(138,'Copy List with Random Pointer','copy-list-with-random-pointer',2,1),(139,'Word Break','word-break',2,1),(140,'Word Break II','word-break-ii',3,1),(141,'Linked List Cycle','linked-list-cycle',1,1),(142,'Linked List Cycle II','linked-list-cycle-ii',2,1),(143,'Reorder List','reorder-list',2,1),(144,'Binary Tree Preorder Traversal','binary-tree-preorder-traversal',1,1),(145,'Binary Tree Postorder Traversal','binary-tree-postorder-traversal',1,1),(146,'LRU Cache','lru-cache',2,1),(147,'Insertion Sort List','insertion-sort-list',2,1),(148,'Sort List','sort-list',2,1),(149,'Max Points on a Line','max-points-on-a-line',3,1),(150,'Evaluate Reverse Polish Notation','evaluate-reverse-polish-notation',2,1),(151,'Reverse Words in a String','reverse-words-in-a-string',2,1),(152,'Maximum Product Subarray','maximum-product-subarray',2,1),(153,'Find Minimum in Rotated Sorted Array','find-minimum-in-rotated-sorted-array',2,1),(154,'Find Minimum in Rotated Sorted Array II','find-minimum-in-rotated-sorted-array-ii',3,1),(155,'Min Stack','min-stack',2,1),(156,'Binary Tree Upside Down','binary-tree-upside-down',2,1),(157,'Read N Characters Given Read4','read-n-characters-given-read4',1,1),(158,'Read N Characters Given read4 II - Call Multiple Times','read-n-characters-given-read4-ii-call-multiple-times',3,1),(159,'Longest Substring with At Most Two Distinct Characters','longest-substring-with-at-most-two-distinct-characters',2,1),(160,'Intersection of Two Linked Lists','intersection-of-two-linked-lists',1,1),(161,'One Edit Distance','one-edit-distance',2,1),(162,'Find Peak Element','find-peak-element',2,1),(163,'Missing Ranges','missing-ranges',1,1),(164,'Maximum Gap','maximum-gap',2,1),(165,'Compare Version Numbers','compare-version-numbers',2,1),(166,'Fraction to Recurring Decimal','fraction-to-recurring-decimal',2,1),(167,'Two Sum II - Input Array Is Sorted','two-sum-ii-input-array-is-sorted',2,1),(168,'Excel Sheet Column Title','excel-sheet-column-title',1,1),(169,'Majority Element','majority-element',1,1),(170,'Two Sum III - Data structure design','two-sum-iii-data-structure-design',1,1),(171,'Excel Sheet Column Number','excel-sheet-column-number',1,1),(172,'Factorial Trailing Zeroes','factorial-trailing-zeroes',2,1),(173,'Binary Search Tree Iterator','binary-search-tree-iterator',2,1),(174,'Dungeon Game','dungeon-game',3,1),(175,'Combine Two Tables','combine-two-tables',1,1),(176,'Second Highest Salary','second-highest-salary',2,1),(177,'Nth Highest Salary','nth-highest-salary',2,1),(178,'Rank Scores','rank-scores',2,1),(179,'Largest Number','largest-number',2,1),(180,'Consecutive Numbers','consecutive-numbers',2,1),(181,'Employees Earning More Than Their Managers','employees-earning-more-than-their-managers',1,1),(182,'Duplicate Emails','duplicate-emails',1,1),(183,'Customers Who Never Order','customers-who-never-order',1,1),(184,'Department Highest Salary','department-highest-salary',2,1),(185,'Department Top Three Salaries','department-top-three-salaries',3,1),(186,'Reverse Words in a String II','reverse-words-in-a-string-ii',2,1),(187,'Repeated DNA Sequences','repeated-dna-sequences',2,1),(188,'Best Time to Buy and Sell Stock IV','best-time-to-buy-and-sell-stock-iv',3,1),(189,'Rotate Array','rotate-array',2,1),(190,'Reverse Bits','reverse-bits',1,1),(191,'Number of 1 Bits','number-of-1-bits',1,1),(192,'Word Frequency','word-frequency',2,1),(193,'Valid Phone Numbers','valid-phone-numbers',1,1),(194,'Transpose File','transpose-file',2,1),(195,'Tenth Line','tenth-line',1,1),(196,'Delete Duplicate Emails','delete-duplicate-emails',1,1),(197,'Rising Temperature','rising-temperature',1,1),(198,'House Robber','house-robber',2,1),(199,'Binary Tree Right Side View','binary-tree-right-side-view',2,1),(200,'Number of Islands','number-of-islands',2,1),(201,'Bitwise AND of Numbers Range','bitwise-and-of-numbers-range',2,1),(202,'Happy Number','happy-number',1,1),(203,'Remove Linked List Elements','remove-linked-list-elements',1,1),(204,'Count Primes','count-primes',2,1),(205,'Isomorphic Strings','isomorphic-strings',1,1),(206,'Reverse Linked List','reverse-linked-list',1,1),(207,'Course Schedule','course-schedule',2,1),(208,'Implement Trie (Prefix Tree)','implement-trie-prefix-tree',2,1),(209,'Minimum Size Subarray Sum','minimum-size-subarray-sum',2,1),(210,'Course Schedule II','course-schedule-ii',2,1),(211,'Design Add and Search Words Data Structure','design-add-and-search-words-data-structure',2,1),(212,'Word Search II','word-search-ii',3,1),(213,'House Robber II','house-robber-ii',2,1),(214,'Shortest Palindrome','shortest-palindrome',3,1),(215,'Kth Largest Element in an Array','kth-largest-element-in-an-array',2,1),(216,'Combination Sum III','combination-sum-iii',2,1),(217,'Contains Duplicate','contains-duplicate',1,1),(218,'The Skyline Problem','the-skyline-problem',3,1),(219,'Contains Duplicate II','contains-duplicate-ii',1,1),(220,'Contains Duplicate III','contains-duplicate-iii',3,1),(221,'Maximal Square','maximal-square',2,1),(222,'Count Complete Tree Nodes','count-complete-tree-nodes',1,1),(223,'Rectangle Area','rectangle-area',2,1),(224,'Basic Calculator','basic-calculator',3,1),(225,'Implement Stack using Queues','implement-stack-using-queues',1,1),(226,'Invert Binary Tree','invert-binary-tree',1,1),(227,'Basic Calculator II','basic-calculator-ii',2,1),(228,'Summary Ranges','summary-ranges',1,1),(229,'Majority Element II','majority-element-ii',2,1),(230,'Kth Smallest Element in a BST','kth-smallest-element-in-a-bst',2,1),(231,'Power of Two','power-of-two',1,1),(232,'Implement Queue using Stacks','implement-queue-using-stacks',1,1),(233,'Number of Digit One','number-of-digit-one',3,1),(234,'Palindrome Linked List','palindrome-linked-list',1,1),(235,'Lowest Common Ancestor of a Binary Search Tree','lowest-common-ancestor-of-a-binary-search-tree',2,1),(236,'Lowest Common Ancestor of a Binary Tree','lowest-common-ancestor-of-a-binary-tree',2,1),(237,'Delete Node in a Linked List','delete-node-in-a-linked-list',2,1),(238,'Product of Array Except Self','product-of-array-except-self',2,1),(239,'Sliding Window Maximum','sliding-window-maximum',3,1),(240,'Search a 2D Matrix II','search-a-2d-matrix-ii',2,1),(241,'Different Ways to Add Parentheses','different-ways-to-add-parentheses',2,1),(242,'Valid Anagram','valid-anagram',1,1),(243,'Shortest Word Distance','shortest-word-distance',1,1),(244,'Shortest Word Distance II','shortest-word-distance-ii',2,1),(245,'Shortest Word Distance III','shortest-word-distance-iii',2,1),(246,'Strobogrammatic Number','strobogrammatic-number',1,1),(247,'Strobogrammatic Number II','strobogrammatic-number-ii',2,1),(248,'Strobogrammatic Number III','strobogrammatic-number-iii',3,1),(249,'Group Shifted Strings','group-shifted-strings',2,1),(250,'Count Univalue Subtrees','count-univalue-subtrees',2,1),(251,'Flatten 2D Vector','flatten-2d-vector',2,1),(252,'Meeting Rooms','meeting-rooms',1,1),(253,'Meeting Rooms II','meeting-rooms-ii',2,1),(254,'Factor Combinations','factor-combinations',2,1),(255,'Verify Preorder Sequence in Binary Search Tree','verify-preorder-sequence-in-binary-search-tree',2,1),(256,'Paint House','paint-house',2,1),(257,'Binary Tree Paths','binary-tree-paths',1,1),(258,'Add Digits','add-digits',1,1),(259,'3Sum Smaller','3sum-smaller',2,1),(260,'Single Number III','single-number-iii',2,1),(261,'Graph Valid Tree','graph-valid-tree',2,1),(262,'Trips and Users','trips-and-users',3,1),(263,'Ugly Number','ugly-number',1,1),(264,'Ugly Number II','ugly-number-ii',2,1),(265,'Paint House II','paint-house-ii',3,1),(266,'Palindrome Permutation','palindrome-permutation',1,1),(267,'Palindrome Permutation II','palindrome-permutation-ii',2,1),(268,'Missing Number','missing-number',1,1),(269,'Alien Dictionary','alien-dictionary',3,1),(270,'Closest Binary Search Tree Value','closest-binary-search-tree-value',1,1),(271,'Encode and Decode Strings','encode-and-decode-strings',2,1),(272,'Closest Binary Search Tree Value II','closest-binary-search-tree-value-ii',3,1),(273,'Integer to English Words','integer-to-english-words',3,1),(274,'H-Index','h-index',2,1),(275,'H-Index II','h-index-ii',2,1),(276,'Paint Fence','paint-fence',2,1),(277,'Find the Celebrity','find-the-celebrity',2,1),(278,'First Bad Version','first-bad-version',1,1),(279,'Perfect Squares','perfect-squares',2,1),(280,'Wiggle Sort','wiggle-sort',2,1),(281,'Zigzag Iterator','zigzag-iterator',2,1),(282,'Expression Add Operators','expression-add-operators',3,1),(283,'Move Zeroes','move-zeroes',1,1),(284,'Peeking Iterator','peeking-iterator',2,1),(285,'Inorder Successor in BST','inorder-successor-in-bst',2,1),(286,'Walls and Gates','walls-and-gates',2,1),(287,'Find the Duplicate Number','find-the-duplicate-number',2,1),(288,'Unique Word Abbreviation','unique-word-abbreviation',2,1),(289,'Game of Life','game-of-life',2,1),(290,'Word Pattern','word-pattern',1,1),(291,'Word Pattern II','word-pattern-ii',2,1),(292,'Nim Game','nim-game',1,1),(293,'Flip Game','flip-game',1,1),(294,'Flip Game II','flip-game-ii',2,1),(295,'Find Median from Data Stream','find-median-from-data-stream',3,1),(296,'Best Meeting Point','best-meeting-point',3,1),(297,'Serialize and Deserialize Binary Tree','serialize-and-deserialize-binary-tree',3,1),(298,'Binary Tree Longest Consecutive Sequence','binary-tree-longest-consecutive-sequence',2,1),(299,'Bulls and Cows','bulls-and-cows',2,1),(300,'Longest Increasing Subsequence','longest-increasing-subsequence',2,1),(301,'Remove Invalid Parentheses','remove-invalid-parentheses',3,1),(302,'Smallest Rectangle Enclosing Black Pixels','smallest-rectangle-enclosing-black-pixels',3,1),(303,'Range Sum Query - Immutable','range-sum-query-immutable',1,1),(304,'Range Sum Query 2D - Immutable','range-sum-query-2d-immutable',2,1),(305,'Number of Islands II','number-of-islands-ii',3,1),(306,'Additive Number','additive-number',2,1),(307,'Range Sum Query - Mutable','range-sum-query-mutable',2,1),(308,'Range Sum Query 2D - Mutable','range-sum-query-2d-mutable',2,1),(309,'Best Time to Buy and Sell Stock with Cooldown','best-time-to-buy-and-sell-stock-with-cooldown',2,1),(310,'Minimum Height Trees','minimum-height-trees',2,1),(311,'Sparse Matrix Multiplication','sparse-matrix-multiplication',2,1),(312,'Burst Balloons','burst-balloons',3,1),(313,'Super Ugly Number','super-ugly-number',2,1),(314,'Binary Tree Vertical Order Traversal','binary-tree-vertical-order-traversal',2,1),(315,'Count of Smaller Numbers After Self','count-of-smaller-numbers-after-self',3,1),(316,'Remove Duplicate Letters','remove-duplicate-letters',2,1),(317,'Shortest Distance from All Buildings','shortest-distance-from-all-buildings',3,1),(318,'Maximum Product of Word Lengths','maximum-product-of-word-lengths',2,1),(319,'Bulb Switcher','bulb-switcher',2,1),(320,'Generalized Abbreviation','generalized-abbreviation',2,1),(321,'Create Maximum Number','create-maximum-number',3,1),(322,'Coin Change','coin-change',2,1),(323,'Number of Connected Components in an Undirected Graph','number-of-connected-components-in-an-undirected-graph',2,1),(324,'Wiggle Sort II','wiggle-sort-ii',2,1),(325,'Maximum Size Subarray Sum Equals k','maximum-size-subarray-sum-equals-k',2,1),(326,'Power of Three','power-of-three',1,1),(327,'Count of Range Sum','count-of-range-sum',3,1),(328,'Odd Even Linked List','odd-even-linked-list',2,1),(329,'Longest Increasing Path in a Matrix','longest-increasing-path-in-a-matrix',3,1),(330,'Patching Array','patching-array',3,1),(331,'Verify Preorder Serialization of a Binary Tree','verify-preorder-serialization-of-a-binary-tree',2,1),(332,'Reconstruct Itinerary','reconstruct-itinerary',3,1),(333,'Largest BST Subtree','largest-bst-subtree',2,1),(334,'Increasing Triplet Subsequence','increasing-triplet-subsequence',2,1),(335,'Self Crossing','self-crossing',3,1),(336,'Palindrome Pairs','palindrome-pairs',3,1),(337,'House Robber III','house-robber-iii',2,1),(338,'Counting Bits','counting-bits',1,1),(339,'Nested List Weight Sum','nested-list-weight-sum',2,1),(340,'Longest Substring with At Most K Distinct Characters','longest-substring-with-at-most-k-distinct-characters',2,1),(341,'Flatten Nested List Iterator','flatten-nested-list-iterator',2,1),(342,'Power of Four','power-of-four',1,1),(343,'Integer Break','integer-break',2,1),(344,'Reverse String','reverse-string',1,1),(345,'Reverse Vowels of a String','reverse-vowels-of-a-string',1,1),(346,'Moving Average from Data Stream','moving-average-from-data-stream',1,1),(347,'Top K Frequent Elements','top-k-frequent-elements',2,1),(348,'Design Tic-Tac-Toe','design-tic-tac-toe',2,1),(349,'Intersection of Two Arrays','intersection-of-two-arrays',1,1),(350,'Intersection of Two Arrays II','intersection-of-two-arrays-ii',1,1),(351,'Android Unlock Patterns','android-unlock-patterns',2,1),(352,'Data Stream as Disjoint Intervals','data-stream-as-disjoint-intervals',3,1),(353,'Design Snake Game','design-snake-game',2,1),(354,'Russian Doll Envelopes','russian-doll-envelopes',3,1),(355,'Design Twitter','design-twitter',2,1),(356,'Line Reflection','line-reflection',2,1),(357,'Count Numbers with Unique Digits','count-numbers-with-unique-digits',2,1),(358,'Rearrange String k Distance Apart','rearrange-string-k-distance-apart',3,1),(359,'Logger Rate Limiter','logger-rate-limiter',1,1),(360,'Sort Transformed Array','sort-transformed-array',2,1),(361,'Bomb Enemy','bomb-enemy',2,1),(362,'Design Hit Counter','design-hit-counter',2,1),(363,'Max Sum of Rectangle No Larger Than K','max-sum-of-rectangle-no-larger-than-k',3,1),(364,'Nested List Weight Sum II','nested-list-weight-sum-ii',2,1),(365,'Water and Jug Problem','water-and-jug-problem',2,1),(366,'Find Leaves of Binary Tree','find-leaves-of-binary-tree',2,1),(367,'Valid Perfect Square','valid-perfect-square',1,1),(368,'Largest Divisible Subset','largest-divisible-subset',2,1),(369,'Plus One Linked List','plus-one-linked-list',2,1),(370,'Range Addition','range-addition',2,1),(371,'Sum of Two Integers','sum-of-two-integers',2,1),(372,'Super Pow','super-pow',2,1),(373,'Find K Pairs with Smallest Sums','find-k-pairs-with-smallest-sums',2,1),(374,'Guess Number Higher or Lower','guess-number-higher-or-lower',1,1),(375,'Guess Number Higher or Lower II','guess-number-higher-or-lower-ii',2,1),(376,'Wiggle Subsequence','wiggle-subsequence',2,1),(377,'Combination Sum IV','combination-sum-iv',2,1),(378,'Kth Smallest Element in a Sorted Matrix','kth-smallest-element-in-a-sorted-matrix',2,1),(379,'Design Phone Directory','design-phone-directory',2,1),(380,'Insert Delete GetRandom O(1)','insert-delete-getrandom-o1',2,1),(381,'Insert Delete GetRandom O(1) - Duplicates allowed','insert-delete-getrandom-o1-duplicates-allowed',3,1),(382,'Linked List Random Node','linked-list-random-node',2,1),(383,'Ransom Note','ransom-note',1,1),(384,'Shuffle an Array','shuffle-an-array',2,1),(385,'Mini Parser','mini-parser',2,1),(386,'Lexicographical Numbers','lexicographical-numbers',2,1),(387,'First Unique Character in a String','first-unique-character-in-a-string',1,1),(388,'Longest Absolute File Path','longest-absolute-file-path',2,1),(389,'Find the Difference','find-the-difference',1,1),(390,'Elimination Game','elimination-game',2,1),(391,'Perfect Rectangle','perfect-rectangle',3,1),(392,'Is Subsequence','is-subsequence',1,1),(393,'UTF-8 Validation','utf-8-validation',2,1),(394,'Decode String','decode-string',2,1),(395,'Longest Substring with At Least K Repeating Characters','longest-substring-with-at-least-k-repeating-characters',2,1),(396,'Rotate Function','rotate-function',2,1),(397,'Integer Replacement','integer-replacement',2,1),(398,'Random Pick Index','random-pick-index',2,1),(399,'Evaluate Division','evaluate-division',2,1),(400,'Nth Digit','nth-digit',2,1),(401,'Binary Watch','binary-watch',1,1),(402,'Remove K Digits','remove-k-digits',2,1),(403,'Frog Jump','frog-jump',3,1),(404,'Sum of Left Leaves','sum-of-left-leaves',1,1),(405,'Convert a Number to Hexadecimal','convert-a-number-to-hexadecimal',1,1),(406,'Queue Reconstruction by Height','queue-reconstruction-by-height',2,1),(407,'Trapping Rain Water II','trapping-rain-water-ii',3,1),(408,'Valid Word Abbreviation','valid-word-abbreviation',1,1),(409,'Longest Palindrome','longest-palindrome',1,1),(410,'Split Array Largest Sum','split-array-largest-sum',3,1),(411,'Minimum Unique Word Abbreviation','minimum-unique-word-abbreviation',3,1),(412,'Fizz Buzz','fizz-buzz',1,1),(413,'Arithmetic Slices','arithmetic-slices',2,1),(414,'Third Maximum Number','third-maximum-number',1,1),(415,'Add Strings','add-strings',1,1),(416,'Partition Equal Subset Sum','partition-equal-subset-sum',2,1),(417,'Pacific Atlantic Water Flow','pacific-atlantic-water-flow',2,1),(418,'Sentence Screen Fitting','sentence-screen-fitting',2,1),(419,'Battleships in a Board','battleships-in-a-board',2,1),(420,'Strong Password Checker','strong-password-checker',3,1),(421,'Maximum XOR of Two Numbers in an Array','maximum-xor-of-two-numbers-in-an-array',2,1),(422,'Valid Word Square','valid-word-square',1,1),(423,'Reconstruct Original Digits from English','reconstruct-original-digits-from-english',2,1),(424,'Longest Repeating Character Replacement','longest-repeating-character-replacement',2,1),(425,'Word Squares','word-squares',3,1),(426,'Convert Binary Search Tree to Sorted Doubly Linked List','convert-binary-search-tree-to-sorted-doubly-linked-list',2,1),(427,'Construct Quad Tree','construct-quad-tree',2,1),(428,'Serialize and Deserialize N-ary Tree','serialize-and-deserialize-n-ary-tree',3,1),(429,'N-ary Tree Level Order Traversal','n-ary-tree-level-order-traversal',2,1),(430,'Flatten a Multilevel Doubly Linked List','flatten-a-multilevel-doubly-linked-list',2,1),(431,'Encode N-ary Tree to Binary Tree','encode-n-ary-tree-to-binary-tree',3,1),(432,'All O`one Data Structure','all-oone-data-structure',3,1),(433,'Minimum Genetic Mutation','minimum-genetic-mutation',2,1),(434,'Number of Segments in a String','number-of-segments-in-a-string',1,1),(435,'Non-overlapping Intervals','non-overlapping-intervals',2,1),(436,'Find Right Interval','find-right-interval',2,1),(437,'Path Sum III','path-sum-iii',2,1),(438,'Find All Anagrams in a String','find-all-anagrams-in-a-string',2,1),(439,'Ternary Expression Parser','ternary-expression-parser',2,1),(440,'K-th Smallest in Lexicographical Order','k-th-smallest-in-lexicographical-order',3,1),(441,'Arranging Coins','arranging-coins',1,1),(442,'Find All Duplicates in an Array','find-all-duplicates-in-an-array',2,1),(443,'String Compression','string-compression',2,1),(444,'Sequence Reconstruction','sequence-reconstruction',2,1),(445,'Add Two Numbers II','add-two-numbers-ii',2,1),(446,'Arithmetic Slices II - Subsequence','arithmetic-slices-ii-subsequence',3,1),(447,'Number of Boomerangs','number-of-boomerangs',2,1),(448,'Find All Numbers Disappeared in an Array','find-all-numbers-disappeared-in-an-array',1,1),(449,'Serialize and Deserialize BST','serialize-and-deserialize-bst',2,1),(450,'Delete Node in a BST','delete-node-in-a-bst',2,1),(451,'Sort Characters By Frequency','sort-characters-by-frequency',2,1),(452,'Minimum Number of Arrows to Burst Balloons','minimum-number-of-arrows-to-burst-balloons',2,1),(453,'Minimum Moves to Equal Array Elements','minimum-moves-to-equal-array-elements',2,1),(454,'4Sum II','4sum-ii',2,1),(455,'Assign Cookies','assign-cookies',1,1),(456,'132 Pattern','132-pattern',2,1),(457,'Circular Array Loop','circular-array-loop',2,1),(458,'Poor Pigs','poor-pigs',3,1),(459,'Repeated Substring Pattern','repeated-substring-pattern',1,1),(460,'LFU Cache','lfu-cache',3,1),(461,'Hamming Distance','hamming-distance',1,1),(462,'Minimum Moves to Equal Array Elements II','minimum-moves-to-equal-array-elements-ii',2,1),(463,'Island Perimeter','island-perimeter',1,1),(464,'Can I Win','can-i-win',2,1),(465,'Optimal Account Balancing','optimal-account-balancing',3,1),(466,'Count The Repetitions','count-the-repetitions',3,1),(467,'Unique Substrings in Wraparound String','unique-substrings-in-wraparound-string',2,1),(468,'Validate IP Address','validate-ip-address',2,1),(469,'Convex Polygon','convex-polygon',2,1),(470,'Implement Rand10() Using Rand7()','implement-rand10-using-rand7',2,1),(471,'Encode String with Shortest Length','encode-string-with-shortest-length',3,1),(472,'Concatenated Words','concatenated-words',3,1),(473,'Matchsticks to Square','matchsticks-to-square',2,1),(474,'Ones and Zeroes','ones-and-zeroes',2,1),(475,'Heaters','heaters',2,1),(476,'Number Complement','number-complement',1,1),(477,'Total Hamming Distance','total-hamming-distance',2,1),(478,'Generate Random Point in a Circle','generate-random-point-in-a-circle',2,1),(479,'Largest Palindrome Product','largest-palindrome-product',3,1),(480,'Sliding Window Median','sliding-window-median',3,1),(481,'Magical String','magical-string',2,1),(482,'License Key Formatting','license-key-formatting',1,1),(483,'Smallest Good Base','smallest-good-base',3,1),(484,'Find Permutation','find-permutation',2,1),(485,'Max Consecutive Ones','max-consecutive-ones',1,1),(486,'Predict the Winner','predict-the-winner',2,1),(487,'Max Consecutive Ones II','max-consecutive-ones-ii',2,1),(488,'Zuma Game','zuma-game',3,1),(489,'Robot Room Cleaner','robot-room-cleaner',3,1),(490,'The Maze','the-maze',2,1),(491,'Non-decreasing Subsequences','non-decreasing-subsequences',2,1),(492,'Construct the Rectangle','construct-the-rectangle',1,1),(493,'Reverse Pairs','reverse-pairs',3,1),(494,'Target Sum','target-sum',2,1),(495,'Teemo Attacking','teemo-attacking',1,1),(496,'Next Greater Element I','next-greater-element-i',1,1),(497,'Random Point in Non-overlapping Rectangles','random-point-in-non-overlapping-rectangles',2,1),(498,'Diagonal Traverse','diagonal-traverse',2,1),(499,'The Maze III','the-maze-iii',3,1),(500,'Keyboard Row','keyboard-row',1,1),(501,'Find Mode in Binary Search Tree','find-mode-in-binary-search-tree',1,1),(502,'IPO','ipo',3,1),(503,'Next Greater Element II','next-greater-element-ii',2,1),(504,'Base 7','base-7',1,1),(505,'The Maze II','the-maze-ii',2,1),(506,'Relative Ranks','relative-ranks',1,1),(507,'Perfect Number','perfect-number',1,1),(508,'Most Frequent Subtree Sum','most-frequent-subtree-sum',2,1),(509,'Fibonacci Number','fibonacci-number',1,1),(510,'Inorder Successor in BST II','inorder-successor-in-bst-ii',2,1),(511,'Game Play Analysis I','game-play-analysis-i',1,1),(512,'Game Play Analysis II','game-play-analysis-ii',1,1),(513,'Find Bottom Left Tree Value','find-bottom-left-tree-value',2,1),(514,'Freedom Trail','freedom-trail',3,1),(515,'Find Largest Value in Each Tree Row','find-largest-value-in-each-tree-row',2,1),(516,'Longest Palindromic Subsequence','longest-palindromic-subsequence',2,1),(517,'Super Washing Machines','super-washing-machines',3,1),(518,'Coin Change II','coin-change-ii',2,1),(519,'Random Flip Matrix','random-flip-matrix',2,1),(520,'Detect Capital','detect-capital',1,1),(521,'Longest Uncommon Subsequence I','longest-uncommon-subsequence-i',1,1),(522,'Longest Uncommon Subsequence II','longest-uncommon-subsequence-ii',2,1),(523,'Continuous Subarray Sum','continuous-subarray-sum',2,1),(524,'Longest Word in Dictionary through Deleting','longest-word-in-dictionary-through-deleting',2,1),(525,'Contiguous Array','contiguous-array',2,1),(526,'Beautiful Arrangement','beautiful-arrangement',2,1),(527,'Word Abbreviation','word-abbreviation',3,1),(528,'Random Pick with Weight','random-pick-with-weight',2,1),(529,'Minesweeper','minesweeper',2,1),(530,'Minimum Absolute Difference in BST','minimum-absolute-difference-in-bst',1,1),(531,'Lonely Pixel I','lonely-pixel-i',2,1),(532,'K-diff Pairs in an Array','k-diff-pairs-in-an-array',2,1),(533,'Lonely Pixel II','lonely-pixel-ii',2,1),(534,'Game Play Analysis III','game-play-analysis-iii',2,1),(535,'Encode and Decode TinyURL','encode-and-decode-tinyurl',2,1),(536,'Construct Binary Tree from String','construct-binary-tree-from-string',2,1),(537,'Complex Number Multiplication','complex-number-multiplication',2,1),(538,'Convert BST to Greater Tree','convert-bst-to-greater-tree',2,1),(539,'Minimum Time Difference','minimum-time-difference',2,1),(540,'Single Element in a Sorted Array','single-element-in-a-sorted-array',2,1),(541,'Reverse String II','reverse-string-ii',1,1),(542,'01 Matrix','01-matrix',2,1),(543,'Diameter of Binary Tree','diameter-of-binary-tree',1,1),(544,'Output Contest Matches','output-contest-matches',2,1),(545,'Boundary of Binary Tree','boundary-of-binary-tree',2,1),(546,'Remove Boxes','remove-boxes',3,1),(547,'Number of Provinces','number-of-provinces',2,1),(548,'Split Array with Equal Sum','split-array-with-equal-sum',3,1),(549,'Binary Tree Longest Consecutive Sequence II','binary-tree-longest-consecutive-sequence-ii',2,1),(550,'Game Play Analysis IV','game-play-analysis-iv',2,1),(551,'Student Attendance Record I','student-attendance-record-i',1,1),(552,'Student Attendance Record II','student-attendance-record-ii',3,1),(553,'Optimal Division','optimal-division',2,1),(554,'Brick Wall','brick-wall',2,1),(555,'Split Concatenated Strings','split-concatenated-strings',2,1),(556,'Next Greater Element III','next-greater-element-iii',2,1),(557,'Reverse Words in a String III','reverse-words-in-a-string-iii',1,1),(558,'Logical OR of Two Binary Grids Represented as Quad-Trees','logical-or-of-two-binary-grids-represented-as-quad-trees',2,1),(559,'Maximum Depth of N-ary Tree','maximum-depth-of-n-ary-tree',1,1),(560,'Subarray Sum Equals K','subarray-sum-equals-k',2,1),(561,'Array Partition','array-partition',1,1),(562,'Longest Line of Consecutive One in Matrix','longest-line-of-consecutive-one-in-matrix',2,1),(563,'Binary Tree Tilt','binary-tree-tilt',1,1),(564,'Find the Closest Palindrome','find-the-closest-palindrome',3,1),(565,'Array Nesting','array-nesting',2,1),(566,'Reshape the Matrix','reshape-the-matrix',1,1),(567,'Permutation in String','permutation-in-string',2,1),(568,'Maximum Vacation Days','maximum-vacation-days',3,1),(569,'Median Employee Salary','median-employee-salary',3,1),(570,'Managers with at Least 5 Direct Reports','managers-with-at-least-5-direct-reports',2,1),(571,'Find Median Given Frequency of Numbers','find-median-given-frequency-of-numbers',3,1),(572,'Subtree of Another Tree','subtree-of-another-tree',1,1),(573,'Squirrel Simulation','squirrel-simulation',2,1),(574,'Winning Candidate','winning-candidate',2,1),(575,'Distribute Candies','distribute-candies',1,1),(576,'Out of Boundary Paths','out-of-boundary-paths',2,1),(577,'Employee Bonus','employee-bonus',1,1),(578,'Get Highest Answer Rate Question','get-highest-answer-rate-question',2,1),(579,'Find Cumulative Salary of an Employee','find-cumulative-salary-of-an-employee',3,1),(580,'Count Student Number in Departments','count-student-number-in-departments',2,1),(581,'Shortest Unsorted Continuous Subarray','shortest-unsorted-continuous-subarray',2,1),(582,'Kill Process','kill-process',2,1),(583,'Delete Operation for Two Strings','delete-operation-for-two-strings',2,1),(584,'Find Customer Referee','find-customer-referee',1,1),(585,'Investments in 2016','investments-in-2016',2,1),(586,'Customer Placing the Largest Number of Orders','customer-placing-the-largest-number-of-orders',1,1),(587,'Erect the Fence','erect-the-fence',3,1),(588,'Design In-Memory File System','design-in-memory-file-system',3,1),(589,'N-ary Tree Preorder Traversal','n-ary-tree-preorder-traversal',1,1),(590,'N-ary Tree Postorder Traversal','n-ary-tree-postorder-traversal',1,1),(591,'Tag Validator','tag-validator',3,1),(592,'Fraction Addition and Subtraction','fraction-addition-and-subtraction',2,1),(593,'Valid Square','valid-square',2,1),(594,'Longest Harmonious Subsequence','longest-harmonious-subsequence',1,1),(595,'Big Countries','big-countries',1,1),(596,'Classes More Than 5 Students','classes-more-than-5-students',1,1),(597,'Friend Requests I: Overall Acceptance Rate','friend-requests-i-overall-acceptance-rate',1,1),(598,'Range Addition II','range-addition-ii',1,1),(599,'Minimum Index Sum of Two Lists','minimum-index-sum-of-two-lists',1,1),(600,'Non-negative Integers without Consecutive Ones','non-negative-integers-without-consecutive-ones',3,1),(601,'Human Traffic of Stadium','human-traffic-of-stadium',3,1),(602,'Friend Requests II: Who Has the Most Friends','friend-requests-ii-who-has-the-most-friends',2,1),(603,'Consecutive Available Seats','consecutive-available-seats',1,1),(604,'Design Compressed String Iterator','design-compressed-string-iterator',1,1),(605,'Can Place Flowers','can-place-flowers',1,1),(606,'Construct String from Binary Tree','construct-string-from-binary-tree',2,1),(607,'Sales Person','sales-person',1,1),(608,'Tree Node','tree-node',2,1),(609,'Find Duplicate File in System','find-duplicate-file-in-system',2,1),(610,'Triangle Judgement','triangle-judgement',1,1),(611,'Valid Triangle Number','valid-triangle-number',2,1),(612,'Shortest Distance in a Plane','shortest-distance-in-a-plane',2,1),(613,'Shortest Distance in a Line','shortest-distance-in-a-line',1,1),(614,'Second Degree Follower','second-degree-follower',2,1),(615,'Average Salary: Departments VS Company','average-salary-departments-vs-company',3,1),(616,'Add Bold Tag in String','add-bold-tag-in-string',2,1),(617,'Merge Two Binary Trees','merge-two-binary-trees',1,1),(618,'Students Report By Geography','students-report-by-geography',3,1),(619,'Biggest Single Number','biggest-single-number',1,1),(620,'Not Boring Movies','not-boring-movies',1,1),(621,'Task Scheduler','task-scheduler',2,1),(622,'Design Circular Queue','design-circular-queue',2,1),(623,'Add One Row to Tree','add-one-row-to-tree',2,1),(624,'Maximum Distance in Arrays','maximum-distance-in-arrays',2,1),(625,'Minimum Factorization','minimum-factorization',2,1),(626,'Exchange Seats','exchange-seats',2,1),(627,'Swap Salary','swap-salary',1,1),(628,'Maximum Product of Three Numbers','maximum-product-of-three-numbers',1,1),(629,'K Inverse Pairs Array','k-inverse-pairs-array',3,1),(630,'Course Schedule III','course-schedule-iii',3,1),(631,'Design Excel Sum Formula','design-excel-sum-formula',3,1),(632,'Smallest Range Covering Elements from K Lists','smallest-range-covering-elements-from-k-lists',3,1),(633,'Sum of Square Numbers','sum-of-square-numbers',2,1),(634,'Find the Derangement of An Array','find-the-derangement-of-an-array',2,1),(635,'Design Log Storage System','design-log-storage-system',2,1),(636,'Exclusive Time of Functions','exclusive-time-of-functions',2,1),(637,'Average of Levels in Binary Tree','average-of-levels-in-binary-tree',1,1),(638,'Shopping Offers','shopping-offers',2,1),(639,'Decode Ways II','decode-ways-ii',3,1),(640,'Solve the Equation','solve-the-equation',2,1),(641,'Design Circular Deque','design-circular-deque',2,1),(642,'Design Search Autocomplete System','design-search-autocomplete-system',3,1),(643,'Maximum Average Subarray I','maximum-average-subarray-i',1,1),(644,'Maximum Average Subarray II','maximum-average-subarray-ii',3,1),(645,'Set Mismatch','set-mismatch',1,1),(646,'Maximum Length of Pair Chain','maximum-length-of-pair-chain',2,1),(647,'Palindromic Substrings','palindromic-substrings',2,1),(648,'Replace Words','replace-words',2,1),(649,'Dota2 Senate','dota2-senate',2,1),(650,'2 Keys Keyboard','2-keys-keyboard',2,1),(651,'4 Keys Keyboard','4-keys-keyboard',2,1),(652,'Find Duplicate Subtrees','find-duplicate-subtrees',2,1),(653,'Two Sum IV - Input is a BST','two-sum-iv-input-is-a-bst',1,1),(654,'Maximum Binary Tree','maximum-binary-tree',2,1),(655,'Print Binary Tree','print-binary-tree',2,1),(656,'Coin Path','coin-path',3,1),(657,'Robot Return to Origin','robot-return-to-origin',1,1),(658,'Find K Closest Elements','find-k-closest-elements',2,1),(659,'Split Array into Consecutive Subsequences','split-array-into-consecutive-subsequences',2,1),(660,'Remove 9','remove-9',3,1),(661,'Image Smoother','image-smoother',1,1),(662,'Maximum Width of Binary Tree','maximum-width-of-binary-tree',2,1),(663,'Equal Tree Partition','equal-tree-partition',2,1),(664,'Strange Printer','strange-printer',3,1),(665,'Non-decreasing Array','non-decreasing-array',2,1),(666,'Path Sum IV','path-sum-iv',2,1),(667,'Beautiful Arrangement II','beautiful-arrangement-ii',2,1),(668,'Kth Smallest Number in Multiplication Table','kth-smallest-number-in-multiplication-table',3,1),(669,'Trim a Binary Search Tree','trim-a-binary-search-tree',2,1),(670,'Maximum Swap','maximum-swap',2,1),(671,'Second Minimum Node In a Binary Tree','second-minimum-node-in-a-binary-tree',1,1),(672,'Bulb Switcher II','bulb-switcher-ii',2,1),(673,'Number of Longest Increasing Subsequence','number-of-longest-increasing-subsequence',2,1),(674,'Longest Continuous Increasing Subsequence','longest-continuous-increasing-subsequence',1,1),(675,'Cut Off Trees for Golf Event','cut-off-trees-for-golf-event',3,1),(676,'Implement Magic Dictionary','implement-magic-dictionary',2,1),(677,'Map Sum Pairs','map-sum-pairs',2,1),(678,'Valid Parenthesis String','valid-parenthesis-string',2,1),(679,'24 Game','24-game',3,1),(680,'Valid Palindrome II','valid-palindrome-ii',1,1),(681,'Next Closest Time','next-closest-time',2,1),(682,'Baseball Game','baseball-game',1,1),(683,'K Empty Slots','k-empty-slots',3,1),(684,'Redundant Connection','redundant-connection',2,1),(685,'Redundant Connection II','redundant-connection-ii',3,1),(686,'Repeated String Match','repeated-string-match',2,1),(687,'Longest Univalue Path','longest-univalue-path',2,1),(688,'Knight Probability in Chessboard','knight-probability-in-chessboard',2,1),(689,'Maximum Sum of 3 Non-Overlapping Subarrays','maximum-sum-of-3-non-overlapping-subarrays',3,1),(690,'Employee Importance','employee-importance',2,1),(691,'Stickers to Spell Word','stickers-to-spell-word',3,1),(692,'Top K Frequent Words','top-k-frequent-words',2,1),(693,'Binary Number with Alternating Bits','binary-number-with-alternating-bits',1,1),(694,'Number of Distinct Islands','number-of-distinct-islands',2,1),(695,'Max Area of Island','max-area-of-island',2,1),(696,'Count Binary Substrings','count-binary-substrings',1,1),(697,'Degree of an Array','degree-of-an-array',1,1),(698,'Partition to K Equal Sum Subsets','partition-to-k-equal-sum-subsets',2,1),(699,'Falling Squares','falling-squares',3,1),(700,'Search in a Binary Search Tree','search-in-a-binary-search-tree',1,1),(701,'Insert into a Binary Search Tree','insert-into-a-binary-search-tree',2,1),(702,'Search in a Sorted Array of Unknown Size','search-in-a-sorted-array-of-unknown-size',2,1),(703,'Kth Largest Element in a Stream','kth-largest-element-in-a-stream',1,1),(704,'Binary Search','binary-search',1,1),(705,'Design HashSet','design-hashset',1,1),(706,'Design HashMap','design-hashmap',1,1),(707,'Design Linked List','design-linked-list',2,1),(708,'Insert into a Sorted Circular Linked List','insert-into-a-sorted-circular-linked-list',2,1),(709,'To Lower Case','to-lower-case',1,1),(710,'Random Pick with Blacklist','random-pick-with-blacklist',3,1),(711,'Number of Distinct Islands II','number-of-distinct-islands-ii',3,1),(712,'Minimum ASCII Delete Sum for Two Strings','minimum-ascii-delete-sum-for-two-strings',2,1),(713,'Subarray Product Less Than K','subarray-product-less-than-k',2,1),(714,'Best Time to Buy and Sell Stock with Transaction Fee','best-time-to-buy-and-sell-stock-with-transaction-fee',2,1),(715,'Range Module','range-module',3,1),(716,'Max Stack','max-stack',3,1),(717,'1-bit and 2-bit Characters','1-bit-and-2-bit-characters',1,1),(718,'Maximum Length of Repeated Subarray','maximum-length-of-repeated-subarray',2,1),(719,'Find K-th Smallest Pair Distance','find-k-th-smallest-pair-distance',3,1),(720,'Longest Word in Dictionary','longest-word-in-dictionary',2,1),(721,'Accounts Merge','accounts-merge',2,1),(722,'Remove Comments','remove-comments',2,1),(723,'Candy Crush','candy-crush',2,1),(724,'Find Pivot Index','find-pivot-index',1,1),(725,'Split Linked List in Parts','split-linked-list-in-parts',2,1),(726,'Number of Atoms','number-of-atoms',3,1),(727,'Minimum Window Subsequence','minimum-window-subsequence',3,1),(728,'Self Dividing Numbers','self-dividing-numbers',1,1),(729,'My Calendar I','my-calendar-i',2,1),(730,'Count Different Palindromic Subsequences','count-different-palindromic-subsequences',3,1),(731,'My Calendar II','my-calendar-ii',2,1),(732,'My Calendar III','my-calendar-iii',3,1),(733,'Flood Fill','flood-fill',1,1),(734,'Sentence Similarity','sentence-similarity',1,1),(735,'Asteroid Collision','asteroid-collision',2,1),(736,'Parse Lisp Expression','parse-lisp-expression',3,1),(737,'Sentence Similarity II','sentence-similarity-ii',2,1),(738,'Monotone Increasing Digits','monotone-increasing-digits',2,1),(739,'Daily Temperatures','daily-temperatures',2,1),(740,'Delete and Earn','delete-and-earn',2,1),(741,'Cherry Pickup','cherry-pickup',3,1),(742,'Closest Leaf in a Binary Tree','closest-leaf-in-a-binary-tree',2,1),(743,'Network Delay Time','network-delay-time',2,1),(744,'Find Smallest Letter Greater Than Target','find-smallest-letter-greater-than-target',1,1),(745,'Prefix and Suffix Search','prefix-and-suffix-search',3,1),(746,'Min Cost Climbing Stairs','min-cost-climbing-stairs',1,1),(747,'Largest Number At Least Twice of Others','largest-number-at-least-twice-of-others',1,1),(748,'Shortest Completing Word','shortest-completing-word',1,1),(749,'Contain Virus','contain-virus',3,1),(750,'Number Of Corner Rectangles','number-of-corner-rectangles',2,1),(751,'IP to CIDR','ip-to-cidr',2,1),(752,'Open the Lock','open-the-lock',2,1),(753,'Cracking the Safe','cracking-the-safe',3,1),(754,'Reach a Number','reach-a-number',2,1),(755,'Pour Water','pour-water',2,1),(756,'Pyramid Transition Matrix','pyramid-transition-matrix',2,1),(757,'Set Intersection Size At Least Two','set-intersection-size-at-least-two',3,1),(758,'Bold Words in String','bold-words-in-string',2,1),(759,'Employee Free Time','employee-free-time',3,1),(760,'Find Anagram Mappings','find-anagram-mappings',1,1),(761,'Special Binary String','special-binary-string',3,1),(762,'Prime Number of Set Bits in Binary Representation','prime-number-of-set-bits-in-binary-representation',1,1),(763,'Partition Labels','partition-labels',2,1),(764,'Largest Plus Sign','largest-plus-sign',2,1),(765,'Couples Holding Hands','couples-holding-hands',3,1),(766,'Toeplitz Matrix','toeplitz-matrix',1,1),(767,'Reorganize String','reorganize-string',2,1),(768,'Max Chunks To Make Sorted II','max-chunks-to-make-sorted-ii',3,1),(769,'Max Chunks To Make Sorted','max-chunks-to-make-sorted',2,1),(770,'Basic Calculator IV','basic-calculator-iv',3,1),(771,'Jewels and Stones','jewels-and-stones',1,1),(772,'Basic Calculator III','basic-calculator-iii',3,1),(773,'Sliding Puzzle','sliding-puzzle',3,1),(774,'Minimize Max Distance to Gas Station','minimize-max-distance-to-gas-station',3,1),(775,'Global and Local Inversions','global-and-local-inversions',2,1),(776,'Split BST','split-bst',2,1),(777,'Swap Adjacent in LR String','swap-adjacent-in-lr-string',2,1),(778,'Swim in Rising Water','swim-in-rising-water',3,1),(779,'K-th Symbol in Grammar','k-th-symbol-in-grammar',2,1),(780,'Reaching Points','reaching-points',3,1),(781,'Rabbits in Forest','rabbits-in-forest',2,1),(782,'Transform to Chessboard','transform-to-chessboard',3,1),(783,'Minimum Distance Between BST Nodes','minimum-distance-between-bst-nodes',1,1),(784,'Letter Case Permutation','letter-case-permutation',2,1),(785,'Is Graph Bipartite?','is-graph-bipartite',2,1),(786,'K-th Smallest Prime Fraction','k-th-smallest-prime-fraction',2,1),(787,'Cheapest Flights Within K Stops','cheapest-flights-within-k-stops',2,1),(788,'Rotated Digits','rotated-digits',2,1),(789,'Escape The Ghosts','escape-the-ghosts',2,1),(790,'Domino and Tromino Tiling','domino-and-tromino-tiling',2,1),(791,'Custom Sort String','custom-sort-string',2,1),(792,'Number of Matching Subsequences','number-of-matching-subsequences',2,1),(793,'Preimage Size of Factorial Zeroes Function','preimage-size-of-factorial-zeroes-function',3,1),(794,'Valid Tic-Tac-Toe State','valid-tic-tac-toe-state',2,1),(795,'Number of Subarrays with Bounded Maximum','number-of-subarrays-with-bounded-maximum',2,1),(796,'Rotate String','rotate-string',1,1),(797,'All Paths From Source to Target','all-paths-from-source-to-target',2,1),(798,'Smallest Rotation with Highest Score','smallest-rotation-with-highest-score',3,1),(799,'Champagne Tower','champagne-tower',2,1),(800,'Similar RGB Color','similar-rgb-color',1,1),(801,'Minimum Swaps To Make Sequences Increasing','minimum-swaps-to-make-sequences-increasing',3,1),(802,'Find Eventual Safe States','find-eventual-safe-states',2,1),(803,'Bricks Falling When Hit','bricks-falling-when-hit',3,1),(804,'Unique Morse Code Words','unique-morse-code-words',1,1),(805,'Split Array With Same Average','split-array-with-same-average',3,1),(806,'Number of Lines To Write String','number-of-lines-to-write-string',1,1),(807,'Max Increase to Keep City Skyline','max-increase-to-keep-city-skyline',2,1),(808,'Soup Servings','soup-servings',2,1),(809,'Expressive Words','expressive-words',2,1),(810,'Chalkboard XOR Game','chalkboard-xor-game',3,1),(811,'Subdomain Visit Count','subdomain-visit-count',2,1),(812,'Largest Triangle Area','largest-triangle-area',1,1),(813,'Largest Sum of Averages','largest-sum-of-averages',2,1),(814,'Binary Tree Pruning','binary-tree-pruning',2,1),(815,'Bus Routes','bus-routes',3,1),(816,'Ambiguous Coordinates','ambiguous-coordinates',2,1),(817,'Linked List Components','linked-list-components',2,1),(818,'Race Car','race-car',3,1),(819,'Most Common Word','most-common-word',1,1),(820,'Short Encoding of Words','short-encoding-of-words',2,1),(821,'Shortest Distance to a Character','shortest-distance-to-a-character',1,1),(822,'Card Flipping Game','card-flipping-game',2,1),(823,'Binary Trees With Factors','binary-trees-with-factors',2,1),(824,'Goat Latin','goat-latin',1,1),(825,'Friends Of Appropriate Ages','friends-of-appropriate-ages',2,1),(826,'Most Profit Assigning Work','most-profit-assigning-work',2,1),(827,'Making A Large Island','making-a-large-island',3,1),(828,'Count Unique Characters of All Substrings of a Given String','count-unique-characters-of-all-substrings-of-a-given-string',3,1),(829,'Consecutive Numbers Sum','consecutive-numbers-sum',3,1),(830,'Positions of Large Groups','positions-of-large-groups',1,1),(831,'Masking Personal Information','masking-personal-information',2,1),(832,'Flipping an Image','flipping-an-image',1,1),(833,'Find And Replace in String','find-and-replace-in-string',2,1),(834,'Sum of Distances in Tree','sum-of-distances-in-tree',3,1),(835,'Image Overlap','image-overlap',2,1),(836,'Rectangle Overlap','rectangle-overlap',1,1),(837,'New 21 Game','new-21-game',2,1),(838,'Push Dominoes','push-dominoes',2,1),(839,'Similar String Groups','similar-string-groups',3,1),(840,'Magic Squares In Grid','magic-squares-in-grid',2,1),(841,'Keys and Rooms','keys-and-rooms',2,1),(842,'Split Array into Fibonacci Sequence','split-array-into-fibonacci-sequence',2,1),(843,'Guess the Word','guess-the-word',3,1),(844,'Backspace String Compare','backspace-string-compare',1,1),(845,'Longest Mountain in Array','longest-mountain-in-array',2,1),(846,'Hand of Straights','hand-of-straights',2,1),(847,'Shortest Path Visiting All Nodes','shortest-path-visiting-all-nodes',3,1),(848,'Shifting Letters','shifting-letters',2,1),(849,'Maximize Distance to Closest Person','maximize-distance-to-closest-person',2,1),(850,'Rectangle Area II','rectangle-area-ii',3,1),(851,'Loud and Rich','loud-and-rich',2,1),(852,'Peak Index in a Mountain Array','peak-index-in-a-mountain-array',2,1),(853,'Car Fleet','car-fleet',2,1),(854,'K-Similar Strings','k-similar-strings',3,1),(855,'Exam Room','exam-room',2,1),(856,'Score of Parentheses','score-of-parentheses',2,1),(857,'Minimum Cost to Hire K Workers','minimum-cost-to-hire-k-workers',3,1),(858,'Mirror Reflection','mirror-reflection',2,1),(859,'Buddy Strings','buddy-strings',1,1),(860,'Lemonade Change','lemonade-change',1,1),(861,'Score After Flipping Matrix','score-after-flipping-matrix',2,1),(862,'Shortest Subarray with Sum at Least K','shortest-subarray-with-sum-at-least-k',3,1),(863,'All Nodes Distance K in Binary Tree','all-nodes-distance-k-in-binary-tree',2,1),(864,'Shortest Path to Get All Keys','shortest-path-to-get-all-keys',3,1),(865,'Smallest Subtree with all the Deepest Nodes','smallest-subtree-with-all-the-deepest-nodes',2,1),(866,'Prime Palindrome','prime-palindrome',2,1),(867,'Transpose Matrix','transpose-matrix',1,1),(868,'Binary Gap','binary-gap',1,1),(869,'Reordered Power of 2','reordered-power-of-2',2,1),(870,'Advantage Shuffle','advantage-shuffle',2,1),(871,'Minimum Number of Refueling Stops','minimum-number-of-refueling-stops',3,1),(872,'Leaf-Similar Trees','leaf-similar-trees',1,1),(873,'Length of Longest Fibonacci Subsequence','length-of-longest-fibonacci-subsequence',2,1),(874,'Walking Robot Simulation','walking-robot-simulation',2,1),(875,'Koko Eating Bananas','koko-eating-bananas',2,1),(876,'Middle of the Linked List','middle-of-the-linked-list',1,1),(877,'Stone Game','stone-game',2,1),(878,'Nth Magical Number','nth-magical-number',3,1),(879,'Profitable Schemes','profitable-schemes',3,1),(880,'Decoded String at Index','decoded-string-at-index',2,1),(881,'Boats to Save People','boats-to-save-people',2,1),(882,'Reachable Nodes In Subdivided Graph','reachable-nodes-in-subdivided-graph',3,1),(883,'Projection Area of 3D Shapes','projection-area-of-3d-shapes',1,1),(884,'Uncommon Words from Two Sentences','uncommon-words-from-two-sentences',1,1),(885,'Spiral Matrix III','spiral-matrix-iii',2,1),(886,'Possible Bipartition','possible-bipartition',2,1),(887,'Super Egg Drop','super-egg-drop',3,1),(888,'Fair Candy Swap','fair-candy-swap',1,1),(889,'Construct Binary Tree from Preorder and Postorder Traversal','construct-binary-tree-from-preorder-and-postorder-traversal',2,1),(890,'Find and Replace Pattern','find-and-replace-pattern',2,1),(891,'Sum of Subsequence Widths','sum-of-subsequence-widths',3,1),(892,'Surface Area of 3D Shapes','surface-area-of-3d-shapes',1,1),(893,'Groups of Special-Equivalent Strings','groups-of-special-equivalent-strings',2,1),(894,'All Possible Full Binary Trees','all-possible-full-binary-trees',2,1),(895,'Maximum Frequency Stack','maximum-frequency-stack',3,1),(896,'Monotonic Array','monotonic-array',1,1),(897,'Increasing Order Search Tree','increasing-order-search-tree',1,1),(898,'Bitwise ORs of Subarrays','bitwise-ors-of-subarrays',2,1),(899,'Orderly Queue','orderly-queue',3,1),(900,'RLE Iterator','rle-iterator',2,1),(901,'Online Stock Span','online-stock-span',2,1),(902,'Numbers At Most N Given Digit Set','numbers-at-most-n-given-digit-set',3,1),(903,'Valid Permutations for DI Sequence','valid-permutations-for-di-sequence',3,1),(904,'Fruit Into Baskets','fruit-into-baskets',2,1),(905,'Sort Array By Parity','sort-array-by-parity',1,1),(906,'Super Palindromes','super-palindromes',3,1),(907,'Sum of Subarray Minimums','sum-of-subarray-minimums',2,1),(908,'Smallest Range I','smallest-range-i',1,1),(909,'Snakes and Ladders','snakes-and-ladders',2,1),(910,'Smallest Range II','smallest-range-ii',2,1),(911,'Online Election','online-election',2,1),(912,'Sort an Array','sort-an-array',2,1),(913,'Cat and Mouse','cat-and-mouse',3,1),(914,'X of a Kind in a Deck of Cards','x-of-a-kind-in-a-deck-of-cards',1,1),(915,'Partition Array into Disjoint Intervals','partition-array-into-disjoint-intervals',2,1),(916,'Word Subsets','word-subsets',2,1),(917,'Reverse Only Letters','reverse-only-letters',1,1),(918,'Maximum Sum Circular Subarray','maximum-sum-circular-subarray',2,1),(919,'Complete Binary Tree Inserter','complete-binary-tree-inserter',2,1),(920,'Number of Music Playlists','number-of-music-playlists',3,1),(921,'Minimum Add to Make Parentheses Valid','minimum-add-to-make-parentheses-valid',2,1),(922,'Sort Array By Parity II','sort-array-by-parity-ii',1,1),(923,'3Sum With Multiplicity','3sum-with-multiplicity',2,1),(924,'Minimize Malware Spread','minimize-malware-spread',3,1),(925,'Long Pressed Name','long-pressed-name',1,1),(926,'Flip String to Monotone Increasing','flip-string-to-monotone-increasing',2,1),(927,'Three Equal Parts','three-equal-parts',3,1),(928,'Minimize Malware Spread II','minimize-malware-spread-ii',3,1),(929,'Unique Email Addresses','unique-email-addresses',1,1),(930,'Binary Subarrays With Sum','binary-subarrays-with-sum',2,1),(931,'Minimum Falling Path Sum','minimum-falling-path-sum',2,1),(932,'Beautiful Array','beautiful-array',2,1),(933,'Number of Recent Calls','number-of-recent-calls',1,1),(934,'Shortest Bridge','shortest-bridge',2,1),(935,'Knight Dialer','knight-dialer',2,1),(936,'Stamping The Sequence','stamping-the-sequence',3,1),(937,'Reorder Data in Log Files','reorder-data-in-log-files',2,1),(938,'Range Sum of BST','range-sum-of-bst',1,1),(939,'Minimum Area Rectangle','minimum-area-rectangle',2,1),(940,'Distinct Subsequences II','distinct-subsequences-ii',3,1),(941,'Valid Mountain Array','valid-mountain-array',1,1),(942,'DI String Match','di-string-match',1,1),(943,'Find the Shortest Superstring','find-the-shortest-superstring',3,1),(944,'Delete Columns to Make Sorted','delete-columns-to-make-sorted',1,1),(945,'Minimum Increment to Make Array Unique','minimum-increment-to-make-array-unique',2,1),(946,'Validate Stack Sequences','validate-stack-sequences',2,1),(947,'Most Stones Removed with Same Row or Column','most-stones-removed-with-same-row-or-column',2,1),(948,'Bag of Tokens','bag-of-tokens',2,1),(949,'Largest Time for Given Digits','largest-time-for-given-digits',2,1),(950,'Reveal Cards In Increasing Order','reveal-cards-in-increasing-order',2,1),(951,'Flip Equivalent Binary Trees','flip-equivalent-binary-trees',2,1),(952,'Largest Component Size by Common Factor','largest-component-size-by-common-factor',3,1),(953,'Verifying an Alien Dictionary','verifying-an-alien-dictionary',1,1),(954,'Array of Doubled Pairs','array-of-doubled-pairs',2,1),(955,'Delete Columns to Make Sorted II','delete-columns-to-make-sorted-ii',2,1),(956,'Tallest Billboard','tallest-billboard',3,1),(957,'Prison Cells After N Days','prison-cells-after-n-days',2,1),(958,'Check Completeness of a Binary Tree','check-completeness-of-a-binary-tree',2,1),(959,'Regions Cut By Slashes','regions-cut-by-slashes',2,1),(960,'Delete Columns to Make Sorted III','delete-columns-to-make-sorted-iii',3,1),(961,'N-Repeated Element in Size 2N Array','n-repeated-element-in-size-2n-array',1,1),(962,'Maximum Width Ramp','maximum-width-ramp',2,1),(963,'Minimum Area Rectangle II','minimum-area-rectangle-ii',2,1),(964,'Least Operators to Express Number','least-operators-to-express-number',3,1),(965,'Univalued Binary Tree','univalued-binary-tree',1,1),(966,'Vowel Spellchecker','vowel-spellchecker',2,1),(967,'Numbers With Same Consecutive Differences','numbers-with-same-consecutive-differences',2,1),(968,'Binary Tree Cameras','binary-tree-cameras',3,1),(969,'Pancake Sorting','pancake-sorting',2,1),(970,'Powerful Integers','powerful-integers',2,1),(971,'Flip Binary Tree To Match Preorder Traversal','flip-binary-tree-to-match-preorder-traversal',2,1),(972,'Equal Rational Numbers','equal-rational-numbers',3,1),(973,'K Closest Points to Origin','k-closest-points-to-origin',2,1),(974,'Subarray Sums Divisible by K','subarray-sums-divisible-by-k',2,1),(975,'Odd Even Jump','odd-even-jump',3,1),(976,'Largest Perimeter Triangle','largest-perimeter-triangle',1,1),(977,'Squares of a Sorted Array','squares-of-a-sorted-array',1,1),(978,'Longest Turbulent Subarray','longest-turbulent-subarray',2,1),(979,'Distribute Coins in Binary Tree','distribute-coins-in-binary-tree',2,1),(980,'Unique Paths III','unique-paths-iii',3,1),(981,'Time Based Key-Value Store','time-based-key-value-store',2,1),(982,'Triples with Bitwise AND Equal To Zero','triples-with-bitwise-and-equal-to-zero',3,1),(983,'Minimum Cost For Tickets','minimum-cost-for-tickets',2,1),(984,'String Without AAA or BBB','string-without-aaa-or-bbb',2,1),(985,'Sum of Even Numbers After Queries','sum-of-even-numbers-after-queries',2,1),(986,'Interval List Intersections','interval-list-intersections',2,1),(987,'Vertical Order Traversal of a Binary Tree','vertical-order-traversal-of-a-binary-tree',3,1),(988,'Smallest String Starting From Leaf','smallest-string-starting-from-leaf',2,1),(989,'Add to Array-Form of Integer','add-to-array-form-of-integer',1,1),(990,'Satisfiability of Equality Equations','satisfiability-of-equality-equations',2,1),(991,'Broken Calculator','broken-calculator',2,1),(992,'Subarrays with K Different Integers','subarrays-with-k-different-integers',3,1),(993,'Cousins in Binary Tree','cousins-in-binary-tree',1,1),(994,'Rotting Oranges','rotting-oranges',2,1),(995,'Minimum Number of K Consecutive Bit Flips','minimum-number-of-k-consecutive-bit-flips',3,1),(996,'Number of Squareful Arrays','number-of-squareful-arrays',3,1),(997,'Find the Town Judge','find-the-town-judge',1,1),(998,'Maximum Binary Tree II','maximum-binary-tree-ii',2,1),(999,'Available Captures for Rook','available-captures-for-rook',1,1),(1000,'Minimum Cost to Merge Stones','minimum-cost-to-merge-stones',3,1),(1001,'Grid Illumination','grid-illumination',3,1),(1002,'Find Common Characters','find-common-characters',1,1),(1003,'Check If Word Is Valid After Substitutions','check-if-word-is-valid-after-substitutions',2,1),(1004,'Max Consecutive Ones III','max-consecutive-ones-iii',2,1),(1005,'Maximize Sum Of Array After K Negations','maximize-sum-of-array-after-k-negations',1,1),(1006,'Clumsy Factorial','clumsy-factorial',2,1),(1007,'Minimum Domino Rotations For Equal Row','minimum-domino-rotations-for-equal-row',2,1),(1008,'Construct Binary Search Tree from Preorder Traversal','construct-binary-search-tree-from-preorder-traversal',2,1),(1009,'Complement of Base 10 Integer','complement-of-base-10-integer',1,1),(1010,'Pairs of Songs With Total Durations Divisible by 60','pairs-of-songs-with-total-durations-divisible-by-60',2,1),(1011,'Capacity To Ship Packages Within D Days','capacity-to-ship-packages-within-d-days',2,1),(1012,'Numbers With Repeated Digits','numbers-with-repeated-digits',3,1),(1013,'Partition Array Into Three Parts With Equal Sum','partition-array-into-three-parts-with-equal-sum',1,1),(1014,'Best Sightseeing Pair','best-sightseeing-pair',2,1),(1015,'Smallest Integer Divisible by K','smallest-integer-divisible-by-k',2,1),(1016,'Binary String With Substrings Representing 1 To N','binary-string-with-substrings-representing-1-to-n',2,1),(1017,'Convert to Base -2','convert-to-base-2',2,1),(1018,'Binary Prefix Divisible By 5','binary-prefix-divisible-by-5',1,1),(1019,'Next Greater Node In Linked List','next-greater-node-in-linked-list',2,1),(1020,'Number of Enclaves','number-of-enclaves',2,1),(1021,'Remove Outermost Parentheses','remove-outermost-parentheses',1,1),(1022,'Sum of Root To Leaf Binary Numbers','sum-of-root-to-leaf-binary-numbers',1,1),(1023,'Camelcase Matching','camelcase-matching',2,1),(1024,'Video Stitching','video-stitching',2,1),(1025,'Divisor Game','divisor-game',1,1),(1026,'Maximum Difference Between Node and Ancestor','maximum-difference-between-node-and-ancestor',2,1),(1027,'Longest Arithmetic Subsequence','longest-arithmetic-subsequence',2,1),(1028,'Recover a Tree From Preorder Traversal','recover-a-tree-from-preorder-traversal',3,1),(1029,'Two City Scheduling','two-city-scheduling',2,1),(1030,'Matrix Cells in Distance Order','matrix-cells-in-distance-order',1,1),(1031,'Maximum Sum of Two Non-Overlapping Subarrays','maximum-sum-of-two-non-overlapping-subarrays',2,1),(1032,'Stream of Characters','stream-of-characters',3,1),(1033,'Moving Stones Until Consecutive','moving-stones-until-consecutive',2,1),(1034,'Coloring A Border','coloring-a-border',2,1),(1035,'Uncrossed Lines','uncrossed-lines',2,1),(1036,'Escape a Large Maze','escape-a-large-maze',3,1),(1037,'Valid Boomerang','valid-boomerang',1,1),(1038,'Binary Search Tree to Greater Sum Tree','binary-search-tree-to-greater-sum-tree',2,1),(1039,'Minimum Score Triangulation of Polygon','minimum-score-triangulation-of-polygon',2,1),(1040,'Moving Stones Until Consecutive II','moving-stones-until-consecutive-ii',2,1),(1041,'Robot Bounded In Circle','robot-bounded-in-circle',2,1),(1042,'Flower Planting With No Adjacent','flower-planting-with-no-adjacent',2,1),(1043,'Partition Array for Maximum Sum','partition-array-for-maximum-sum',2,1),(1044,'Longest Duplicate Substring','longest-duplicate-substring',3,1),(1045,'Customers Who Bought All Products','customers-who-bought-all-products',2,1),(1046,'Last Stone Weight','last-stone-weight',1,1),(1047,'Remove All Adjacent Duplicates In String','remove-all-adjacent-duplicates-in-string',1,1),(1048,'Longest String Chain','longest-string-chain',2,1),(1049,'Last Stone Weight II','last-stone-weight-ii',2,1),(1050,'Actors and Directors Who Cooperated At Least Three Times','actors-and-directors-who-cooperated-at-least-three-times',1,1),(1051,'Height Checker','height-checker',1,1),(1052,'Grumpy Bookstore Owner','grumpy-bookstore-owner',2,1),(1053,'Previous Permutation With One Swap','previous-permutation-with-one-swap',2,1),(1054,'Distant Barcodes','distant-barcodes',2,1),(1055,'Shortest Way to Form String','shortest-way-to-form-string',2,1),(1056,'Confusing Number','confusing-number',1,1),(1057,'Campus Bikes','campus-bikes',2,1),(1058,'Minimize Rounding Error to Meet Target','minimize-rounding-error-to-meet-target',2,1),(1059,'All Paths from Source Lead to Destination','all-paths-from-source-lead-to-destination',2,1),(1060,'Missing Element in Sorted Array','missing-element-in-sorted-array',2,1),(1061,'Lexicographically Smallest Equivalent String','lexicographically-smallest-equivalent-string',2,1),(1062,'Longest Repeating Substring','longest-repeating-substring',2,1),(1063,'Number of Valid Subarrays','number-of-valid-subarrays',3,1),(1064,'Fixed Point','fixed-point',1,1),(1065,'Index Pairs of a String','index-pairs-of-a-string',1,1),(1066,'Campus Bikes II','campus-bikes-ii',2,1),(1067,'Digit Count in Range','digit-count-in-range',3,1),(1068,'Product Sales Analysis I','product-sales-analysis-i',1,1),(1069,'Product Sales Analysis II','product-sales-analysis-ii',1,1),(1070,'Product Sales Analysis III','product-sales-analysis-iii',2,1),(1071,'Greatest Common Divisor of Strings','greatest-common-divisor-of-strings',1,1),(1072,'Flip Columns For Maximum Number of Equal Rows','flip-columns-for-maximum-number-of-equal-rows',2,1),(1073,'Adding Two Negabinary Numbers','adding-two-negabinary-numbers',2,1),(1074,'Number of Submatrices That Sum to Target','number-of-submatrices-that-sum-to-target',3,1),(1075,'Project Employees I','project-employees-i',1,1),(1076,'Project Employees II','project-employees-ii',1,1),(1077,'Project Employees III','project-employees-iii',2,1),(1078,'Occurrences After Bigram','occurrences-after-bigram',1,1),(1079,'Letter Tile Possibilities','letter-tile-possibilities',2,1),(1080,'Insufficient Nodes in Root to Leaf Paths','insufficient-nodes-in-root-to-leaf-paths',2,1),(1081,'Smallest Subsequence of Distinct Characters','smallest-subsequence-of-distinct-characters',2,1),(1082,'Sales Analysis I','sales-analysis-i',1,1),(1083,'Sales Analysis II','sales-analysis-ii',1,1),(1084,'Sales Analysis III','sales-analysis-iii',1,1),(1085,'Sum of Digits in the Minimum Number','sum-of-digits-in-the-minimum-number',1,1),(1086,'High Five','high-five',1,1),(1087,'Brace Expansion','brace-expansion',2,1),(1088,'Confusing Number II','confusing-number-ii',3,1),(1089,'Duplicate Zeros','duplicate-zeros',1,1),(1090,'Largest Values From Labels','largest-values-from-labels',2,1),(1091,'Shortest Path in Binary Matrix','shortest-path-in-binary-matrix',2,1),(1092,'Shortest Common Supersequence ','shortest-common-supersequence',3,1),(1093,'Statistics from a Large Sample','statistics-from-a-large-sample',2,1),(1094,'Car Pooling','car-pooling',2,1),(1095,'Find in Mountain Array','find-in-mountain-array',3,1),(1096,'Brace Expansion II','brace-expansion-ii',3,1),(1097,'Game Play Analysis V','game-play-analysis-v',3,1),(1098,'Unpopular Books','unpopular-books',2,1),(1099,'Two Sum Less Than K','two-sum-less-than-k',1,1),(1100,'Find K-Length Substrings With No Repeated Characters','find-k-length-substrings-with-no-repeated-characters',2,1),(1101,'The Earliest Moment When Everyone Become Friends','the-earliest-moment-when-everyone-become-friends',2,1),(1102,'Path With Maximum Minimum Value','path-with-maximum-minimum-value',2,1),(1103,'Distribute Candies to People','distribute-candies-to-people',1,1),(1104,'Path In Zigzag Labelled Binary Tree','path-in-zigzag-labelled-binary-tree',2,1),(1105,'Filling Bookcase Shelves','filling-bookcase-shelves',2,1),(1106,'Parsing A Boolean Expression','parsing-a-boolean-expression',3,1),(1107,'New Users Daily Count','new-users-daily-count',2,1),(1108,'Defanging an IP Address','defanging-an-ip-address',1,1),(1109,'Corporate Flight Bookings','corporate-flight-bookings',2,1),(1110,'Delete Nodes And Return Forest','delete-nodes-and-return-forest',2,1),(1111,'Maximum Nesting Depth of Two Valid Parentheses Strings','maximum-nesting-depth-of-two-valid-parentheses-strings',2,1),(1112,'Highest Grade For Each Student','highest-grade-for-each-student',2,1),(1113,'Reported Posts','reported-posts',1,1),(1114,'Print in Order','print-in-order',1,1),(1115,'Print FooBar Alternately','print-foobar-alternately',2,1),(1116,'Print Zero Even Odd','print-zero-even-odd',2,1),(1117,'Building H2O','building-h2o',2,1),(1118,'Number of Days in a Month','number-of-days-in-a-month',1,1),(1119,'Remove Vowels from a String','remove-vowels-from-a-string',1,1),(1120,'Maximum Average Subtree','maximum-average-subtree',2,1),(1121,'Divide Array Into Increasing Sequences','divide-array-into-increasing-sequences',3,1),(1122,'Relative Sort Array','relative-sort-array',1,1),(1123,'Lowest Common Ancestor of Deepest Leaves','lowest-common-ancestor-of-deepest-leaves',2,1),(1124,'Longest Well-Performing Interval','longest-well-performing-interval',2,1),(1125,'Smallest Sufficient Team','smallest-sufficient-team',3,1),(1126,'Active Businesses','active-businesses',2,1),(1127,'User Purchase Platform','user-purchase-platform',3,1),(1128,'Number of Equivalent Domino Pairs','number-of-equivalent-domino-pairs',1,1),(1129,'Shortest Path with Alternating Colors','shortest-path-with-alternating-colors',2,1),(1130,'Minimum Cost Tree From Leaf Values','minimum-cost-tree-from-leaf-values',2,1),(1131,'Maximum of Absolute Value Expression','maximum-of-absolute-value-expression',2,1),(1132,'Reported Posts II','reported-posts-ii',2,1),(1133,'Largest Unique Number','largest-unique-number',1,1),(1134,'Armstrong Number','armstrong-number',1,1),(1135,'Connecting Cities With Minimum Cost','connecting-cities-with-minimum-cost',2,1),(1136,'Parallel Courses','parallel-courses',2,1),(1137,'N-th Tribonacci Number','n-th-tribonacci-number',1,1),(1138,'Alphabet Board Path','alphabet-board-path',2,1),(1139,'Largest 1-Bordered Square','largest-1-bordered-square',2,1),(1140,'Stone Game II','stone-game-ii',2,1),(1141,'User Activity for the Past 30 Days I','user-activity-for-the-past-30-days-i',1,1),(1142,'User Activity for the Past 30 Days II','user-activity-for-the-past-30-days-ii',1,1),(1143,'Longest Common Subsequence','longest-common-subsequence',2,1),(1144,'Decrease Elements To Make Array Zigzag','decrease-elements-to-make-array-zigzag',2,1),(1145,'Binary Tree Coloring Game','binary-tree-coloring-game',2,1),(1146,'Snapshot Array','snapshot-array',2,1),(1147,'Longest Chunked Palindrome Decomposition','longest-chunked-palindrome-decomposition',3,1),(1148,'Article Views I','article-views-i',1,1),(1149,'Article Views II','article-views-ii',2,1),(1150,'Check If a Number Is Majority Element in a Sorted Array','check-if-a-number-is-majority-element-in-a-sorted-array',1,1),(1151,'Minimum Swaps to Group All 1\'s Together','minimum-swaps-to-group-all-1s-together',2,1),(1152,'Analyze User Website Visit Pattern','analyze-user-website-visit-pattern',2,1),(1153,'String Transforms Into Another String','string-transforms-into-another-string',3,1),(1154,'Day of the Year','day-of-the-year',1,1),(1155,'Number of Dice Rolls With Target Sum','number-of-dice-rolls-with-target-sum',2,1),(1156,'Swap For Longest Repeated Character Substring','swap-for-longest-repeated-character-substring',2,1),(1157,'Online Majority Element In Subarray','online-majority-element-in-subarray',3,1),(1158,'Market Analysis I','market-analysis-i',2,1),(1159,'Market Analysis II','market-analysis-ii',3,1),(1160,'Find Words That Can Be Formed by Characters','find-words-that-can-be-formed-by-characters',1,1),(1161,'Maximum Level Sum of a Binary Tree','maximum-level-sum-of-a-binary-tree',2,1),(1162,'As Far from Land as Possible','as-far-from-land-as-possible',2,1),(1163,'Last Substring in Lexicographical Order','last-substring-in-lexicographical-order',3,1),(1164,'Product Price at a Given Date','product-price-at-a-given-date',2,1),(1165,'Single-Row Keyboard','single-row-keyboard',1,1),(1166,'Design File System','design-file-system',2,1),(1167,'Minimum Cost to Connect Sticks','minimum-cost-to-connect-sticks',2,1),(1168,'Optimize Water Distribution in a Village','optimize-water-distribution-in-a-village',3,1),(1169,'Invalid Transactions','invalid-transactions',2,1),(1170,'Compare Strings by Frequency of the Smallest Character','compare-strings-by-frequency-of-the-smallest-character',2,1),(1171,'Remove Zero Sum Consecutive Nodes from Linked List','remove-zero-sum-consecutive-nodes-from-linked-list',2,1),(1172,'Dinner Plate Stacks','dinner-plate-stacks',3,1),(1173,'Immediate Food Delivery I','immediate-food-delivery-i',1,1),(1174,'Immediate Food Delivery II','immediate-food-delivery-ii',2,1),(1175,'Prime Arrangements','prime-arrangements',1,1),(1176,'Diet Plan Performance','diet-plan-performance',1,1),(1177,'Can Make Palindrome from Substring','can-make-palindrome-from-substring',2,1),(1178,'Number of Valid Words for Each Puzzle','number-of-valid-words-for-each-puzzle',3,1),(1179,'Reformat Department Table','reformat-department-table',1,1),(1180,'Count Substrings with Only One Distinct Letter','count-substrings-with-only-one-distinct-letter',1,1),(1181,'Before and After Puzzle','before-and-after-puzzle',2,1),(1182,'Shortest Distance to Target Color','shortest-distance-to-target-color',2,1),(1183,'Maximum Number of Ones','maximum-number-of-ones',3,1),(1184,'Distance Between Bus Stops','distance-between-bus-stops',1,1),(1185,'Day of the Week','day-of-the-week',1,1),(1186,'Maximum Subarray Sum with One Deletion','maximum-subarray-sum-with-one-deletion',2,1),(1187,'Make Array Strictly Increasing','make-array-strictly-increasing',3,1),(1188,'Design Bounded Blocking Queue','design-bounded-blocking-queue',2,1),(1189,'Maximum Number of Balloons','maximum-number-of-balloons',1,1),(1190,'Reverse Substrings Between Each Pair of Parentheses','reverse-substrings-between-each-pair-of-parentheses',2,1),(1191,'K-Concatenation Maximum Sum','k-concatenation-maximum-sum',2,1),(1192,'Critical Connections in a Network','critical-connections-in-a-network',3,1),(1193,'Monthly Transactions I','monthly-transactions-i',2,1),(1194,'Tournament Winners','tournament-winners',3,1),(1195,'Fizz Buzz Multithreaded','fizz-buzz-multithreaded',2,1),(1196,'How Many Apples Can You Put into the Basket','how-many-apples-can-you-put-into-the-basket',1,1),(1197,'Minimum Knight Moves','minimum-knight-moves',2,1),(1198,'Find Smallest Common Element in All Rows','find-smallest-common-element-in-all-rows',2,1),(1199,'Minimum Time to Build Blocks','minimum-time-to-build-blocks',3,1),(1200,'Minimum Absolute Difference','minimum-absolute-difference',1,1),(1201,'Ugly Number III','ugly-number-iii',2,1),(1202,'Smallest String With Swaps','smallest-string-with-swaps',2,1),(1203,'Sort Items by Groups Respecting Dependencies','sort-items-by-groups-respecting-dependencies',3,1),(1204,'Last Person to Fit in the Bus','last-person-to-fit-in-the-bus',2,1),(1205,'Monthly Transactions II','monthly-transactions-ii',2,1),(1206,'Design Skiplist','design-skiplist',3,1),(1207,'Unique Number of Occurrences','unique-number-of-occurrences',1,1),(1208,'Get Equal Substrings Within Budget','get-equal-substrings-within-budget',2,1),(1209,'Remove All Adjacent Duplicates in String II','remove-all-adjacent-duplicates-in-string-ii',2,1),(1210,'Minimum Moves to Reach Target with Rotations','minimum-moves-to-reach-target-with-rotations',3,1),(1211,'Queries Quality and Percentage','queries-quality-and-percentage',1,1),(1212,'Team Scores in Football Tournament','team-scores-in-football-tournament',2,1),(1213,'Intersection of Three Sorted Arrays','intersection-of-three-sorted-arrays',1,1),(1214,'Two Sum BSTs','two-sum-bsts',2,1),(1215,'Stepping Numbers','stepping-numbers',2,1),(1216,'Valid Palindrome III','valid-palindrome-iii',3,1),(1217,'Minimum Cost to Move Chips to The Same Position','minimum-cost-to-move-chips-to-the-same-position',1,1),(1218,'Longest Arithmetic Subsequence of Given Difference','longest-arithmetic-subsequence-of-given-difference',2,1),(1219,'Path with Maximum Gold','path-with-maximum-gold',2,1),(1220,'Count Vowels Permutation','count-vowels-permutation',3,1),(1221,'Split a String in Balanced Strings','split-a-string-in-balanced-strings',1,1),(1222,'Queens That Can Attack the King','queens-that-can-attack-the-king',2,1),(1223,'Dice Roll Simulation','dice-roll-simulation',3,1),(1224,'Maximum Equal Frequency','maximum-equal-frequency',3,1),(1225,'Report Contiguous Dates','report-contiguous-dates',3,1),(1226,'The Dining Philosophers','the-dining-philosophers',2,1),(1227,'Airplane Seat Assignment Probability','airplane-seat-assignment-probability',2,1),(1228,'Missing Number In Arithmetic Progression','missing-number-in-arithmetic-progression',1,1),(1229,'Meeting Scheduler','meeting-scheduler',2,1),(1230,'Toss Strange Coins','toss-strange-coins',2,1),(1231,'Divide Chocolate','divide-chocolate',3,1),(1232,'Check If It Is a Straight Line','check-if-it-is-a-straight-line',1,1),(1233,'Remove Sub-Folders from the Filesystem','remove-sub-folders-from-the-filesystem',2,1),(1234,'Replace the Substring for Balanced String','replace-the-substring-for-balanced-string',2,1),(1235,'Maximum Profit in Job Scheduling','maximum-profit-in-job-scheduling',3,1),(1236,'Web Crawler','web-crawler',2,1),(1237,'Find Positive Integer Solution for a Given Equation','find-positive-integer-solution-for-a-given-equation',2,1),(1238,'Circular Permutation in Binary Representation','circular-permutation-in-binary-representation',2,1),(1239,'Maximum Length of a Concatenated String with Unique Characters','maximum-length-of-a-concatenated-string-with-unique-characters',2,1),(1240,'Tiling a Rectangle with the Fewest Squares','tiling-a-rectangle-with-the-fewest-squares',3,1),(1241,'Number of Comments per Post','number-of-comments-per-post',1,1),(1242,'Web Crawler Multithreaded','web-crawler-multithreaded',2,1),(1243,'Array Transformation','array-transformation',1,1),(1244,'Design A Leaderboard','design-a-leaderboard',2,1),(1245,'Tree Diameter','tree-diameter',2,1),(1246,'Palindrome Removal','palindrome-removal',3,1),(1247,'Minimum Swaps to Make Strings Equal','minimum-swaps-to-make-strings-equal',2,1),(1248,'Count Number of Nice Subarrays','count-number-of-nice-subarrays',2,1),(1249,'Minimum Remove to Make Valid Parentheses','minimum-remove-to-make-valid-parentheses',2,1),(1250,'Check If It Is a Good Array','check-if-it-is-a-good-array',3,1),(1251,'Average Selling Price','average-selling-price',1,1),(1252,'Cells with Odd Values in a Matrix','cells-with-odd-values-in-a-matrix',1,1),(1253,'Reconstruct a 2-Row Binary Matrix','reconstruct-a-2-row-binary-matrix',2,1),(1254,'Number of Closed Islands','number-of-closed-islands',2,1),(1255,'Maximum Score Words Formed by Letters','maximum-score-words-formed-by-letters',3,1),(1256,'Encode Number','encode-number',2,1),(1257,'Smallest Common Region','smallest-common-region',2,1),(1258,'Synonymous Sentences','synonymous-sentences',2,1),(1259,'Handshakes That Don\'t Cross','handshakes-that-dont-cross',3,1),(1260,'Shift 2D Grid','shift-2d-grid',1,1),(1261,'Find Elements in a Contaminated Binary Tree','find-elements-in-a-contaminated-binary-tree',2,1),(1262,'Greatest Sum Divisible by Three','greatest-sum-divisible-by-three',2,1),(1263,'Minimum Moves to Move a Box to Their Target Location','minimum-moves-to-move-a-box-to-their-target-location',3,1),(1264,'Page Recommendations','page-recommendations',2,1),(1265,'Print Immutable Linked List in Reverse','print-immutable-linked-list-in-reverse',2,1),(1266,'Minimum Time Visiting All Points','minimum-time-visiting-all-points',1,1),(1267,'Count Servers that Communicate','count-servers-that-communicate',2,1),(1268,'Search Suggestions System','search-suggestions-system',2,1),(1269,'Number of Ways to Stay in the Same Place After Some Steps','number-of-ways-to-stay-in-the-same-place-after-some-steps',3,1),(1270,'All People Report to the Given Manager','all-people-report-to-the-given-manager',2,1),(1271,'Hexspeak','hexspeak',1,1),(1272,'Remove Interval','remove-interval',2,1),(1273,'Delete Tree Nodes','delete-tree-nodes',2,1),(1274,'Number of Ships in a Rectangle','number-of-ships-in-a-rectangle',3,1),(1275,'Find Winner on a Tic Tac Toe Game','find-winner-on-a-tic-tac-toe-game',1,1),(1276,'Number of Burgers with No Waste of Ingredients','number-of-burgers-with-no-waste-of-ingredients',2,1),(1277,'Count Square Submatrices with All Ones','count-square-submatrices-with-all-ones',2,1),(1278,'Palindrome Partitioning III','palindrome-partitioning-iii',3,1),(1279,'Traffic Light Controlled Intersection','traffic-light-controlled-intersection',1,1),(1280,'Students and Examinations','students-and-examinations',1,1),(1281,'Subtract the Product and Sum of Digits of an Integer','subtract-the-product-and-sum-of-digits-of-an-integer',1,1),(1282,'Group the People Given the Group Size They Belong To','group-the-people-given-the-group-size-they-belong-to',2,1),(1283,'Find the Smallest Divisor Given a Threshold','find-the-smallest-divisor-given-a-threshold',2,1),(1284,'Minimum Number of Flips to Convert Binary Matrix to Zero Matrix','minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix',3,1),(1285,'Find the Start and End Number of Continuous Ranges','find-the-start-and-end-number-of-continuous-ranges',2,1),(1286,'Iterator for Combination','iterator-for-combination',2,1),(1287,'Element Appearing More Than 25% In Sorted Array','element-appearing-more-than-25-in-sorted-array',1,1),(1288,'Remove Covered Intervals','remove-covered-intervals',2,1),(1289,'Minimum Falling Path Sum II','minimum-falling-path-sum-ii',3,1),(1290,'Convert Binary Number in a Linked List to Integer','convert-binary-number-in-a-linked-list-to-integer',1,1),(1291,'Sequential Digits','sequential-digits',2,1),(1292,'Maximum Side Length of a Square with Sum Less than or Equal to Threshold','maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold',2,1),(1293,'Shortest Path in a Grid with Obstacles Elimination','shortest-path-in-a-grid-with-obstacles-elimination',3,1),(1294,'Weather Type in Each Country','weather-type-in-each-country',1,1),(1295,'Find Numbers with Even Number of Digits','find-numbers-with-even-number-of-digits',1,1),(1296,'Divide Array in Sets of K Consecutive Numbers','divide-array-in-sets-of-k-consecutive-numbers',2,1),(1297,'Maximum Number of Occurrences of a Substring','maximum-number-of-occurrences-of-a-substring',2,1),(1298,'Maximum Candies You Can Get from Boxes','maximum-candies-you-can-get-from-boxes',3,1),(1299,'Replace Elements with Greatest Element on Right Side','replace-elements-with-greatest-element-on-right-side',1,1),(1300,'Sum of Mutated Array Closest to Target','sum-of-mutated-array-closest-to-target',2,1),(1301,'Number of Paths with Max Score','number-of-paths-with-max-score',3,1),(1302,'Deepest Leaves Sum','deepest-leaves-sum',2,1),(1303,'Find the Team Size','find-the-team-size',1,1),(1304,'Find N Unique Integers Sum up to Zero','find-n-unique-integers-sum-up-to-zero',1,1),(1305,'All Elements in Two Binary Search Trees','all-elements-in-two-binary-search-trees',2,1),(1306,'Jump Game III','jump-game-iii',2,1),(1307,'Verbal Arithmetic Puzzle','verbal-arithmetic-puzzle',3,1),(1308,'Running Total for Different Genders','running-total-for-different-genders',2,1),(1309,'Decrypt String from Alphabet to Integer Mapping','decrypt-string-from-alphabet-to-integer-mapping',1,1),(1310,'XOR Queries of a Subarray','xor-queries-of-a-subarray',2,1),(1311,'Get Watched Videos by Your Friends','get-watched-videos-by-your-friends',2,1),(1312,'Minimum Insertion Steps to Make a String Palindrome','minimum-insertion-steps-to-make-a-string-palindrome',3,1),(1313,'Decompress Run-Length Encoded List','decompress-run-length-encoded-list',1,1),(1314,'Matrix Block Sum','matrix-block-sum',2,1),(1315,'Sum of Nodes with Even-Valued Grandparent','sum-of-nodes-with-even-valued-grandparent',2,1),(1316,'Distinct Echo Substrings','distinct-echo-substrings',3,1),(1317,'Convert Integer to the Sum of Two No-Zero Integers','convert-integer-to-the-sum-of-two-no-zero-integers',1,1),(1318,'Minimum Flips to Make a OR b Equal to c','minimum-flips-to-make-a-or-b-equal-to-c',2,1),(1319,'Number of Operations to Make Network Connected','number-of-operations-to-make-network-connected',2,1),(1320,'Minimum Distance to Type a Word Using Two Fingers','minimum-distance-to-type-a-word-using-two-fingers',3,1),(1321,'Restaurant Growth','restaurant-growth',2,1),(1322,'Ads Performance','ads-performance',1,1),(1323,'Maximum 69 Number','maximum-69-number',1,1),(1324,'Print Words Vertically','print-words-vertically',2,1),(1325,'Delete Leaves With a Given Value','delete-leaves-with-a-given-value',2,1),(1326,'Minimum Number of Taps to Open to Water a Garden','minimum-number-of-taps-to-open-to-water-a-garden',3,1),(1327,'List the Products Ordered in a Period','list-the-products-ordered-in-a-period',1,1),(1328,'Break a Palindrome','break-a-palindrome',2,1),(1329,'Sort the Matrix Diagonally','sort-the-matrix-diagonally',2,1),(1330,'Reverse Subarray To Maximize Array Value','reverse-subarray-to-maximize-array-value',3,1),(1331,'Rank Transform of an Array','rank-transform-of-an-array',1,1),(1332,'Remove Palindromic Subsequences','remove-palindromic-subsequences',1,1),(1333,'Filter Restaurants by Vegan-Friendly, Price and Distance','filter-restaurants-by-vegan-friendly-price-and-distance',2,1),(1334,'Find the City With the Smallest Number of Neighbors at a Threshold Distance','find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance',2,1),(1335,'Minimum Difficulty of a Job Schedule','minimum-difficulty-of-a-job-schedule',3,1),(1336,'Number of Transactions per Visit','number-of-transactions-per-visit',3,1),(1337,'The K Weakest Rows in a Matrix','the-k-weakest-rows-in-a-matrix',1,1),(1338,'Reduce Array Size to The Half','reduce-array-size-to-the-half',2,1),(1339,'Maximum Product of Splitted Binary Tree','maximum-product-of-splitted-binary-tree',2,1),(1340,'Jump Game V','jump-game-v',3,1),(1341,'Movie Rating','movie-rating',2,1),(1342,'Number of Steps to Reduce a Number to Zero','number-of-steps-to-reduce-a-number-to-zero',1,1),(1343,'Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold','number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold',2,1),(1344,'Angle Between Hands of a Clock','angle-between-hands-of-a-clock',2,1),(1345,'Jump Game IV','jump-game-iv',3,1),(1346,'Check If N and Its Double Exist','check-if-n-and-its-double-exist',1,1),(1347,'Minimum Number of Steps to Make Two Strings Anagram','minimum-number-of-steps-to-make-two-strings-anagram',2,1),(1348,'Tweet Counts Per Frequency','tweet-counts-per-frequency',2,1),(1349,'Maximum Students Taking Exam','maximum-students-taking-exam',3,1),(1350,'Students With Invalid Departments','students-with-invalid-departments',1,1),(1351,'Count Negative Numbers in a Sorted Matrix','count-negative-numbers-in-a-sorted-matrix',1,1),(1352,'Product of the Last K Numbers','product-of-the-last-k-numbers',2,1),(1353,'Maximum Number of Events That Can Be Attended','maximum-number-of-events-that-can-be-attended',2,1),(1354,'Construct Target Array With Multiple Sums','construct-target-array-with-multiple-sums',3,1),(1355,'Activity Participants','activity-participants',2,1),(1356,'Sort Integers by The Number of 1 Bits','sort-integers-by-the-number-of-1-bits',1,1),(1357,'Apply Discount Every n Orders','apply-discount-every-n-orders',2,1),(1358,'Number of Substrings Containing All Three Characters','number-of-substrings-containing-all-three-characters',2,1),(1359,'Count All Valid Pickup and Delivery Options','count-all-valid-pickup-and-delivery-options',3,1),(1360,'Number of Days Between Two Dates','number-of-days-between-two-dates',1,1),(1361,'Validate Binary Tree Nodes','validate-binary-tree-nodes',2,1),(1362,'Closest Divisors','closest-divisors',2,1),(1363,'Largest Multiple of Three','largest-multiple-of-three',3,1),(1364,'Number of Trusted Contacts of a Customer','number-of-trusted-contacts-of-a-customer',2,1),(1365,'How Many Numbers Are Smaller Than the Current Number','how-many-numbers-are-smaller-than-the-current-number',1,1),(1366,'Rank Teams by Votes','rank-teams-by-votes',2,1),(1367,'Linked List in Binary Tree','linked-list-in-binary-tree',2,1),(1368,'Minimum Cost to Make at Least One Valid Path in a Grid','minimum-cost-to-make-at-least-one-valid-path-in-a-grid',3,1),(1369,'Get the Second Most Recent Activity','get-the-second-most-recent-activity',3,1),(1370,'Increasing Decreasing String','increasing-decreasing-string',1,1),(1371,'Find the Longest Substring Containing Vowels in Even Counts','find-the-longest-substring-containing-vowels-in-even-counts',2,1),(1372,'Longest ZigZag Path in a Binary Tree','longest-zigzag-path-in-a-binary-tree',2,1),(1373,'Maximum Sum BST in Binary Tree','maximum-sum-bst-in-binary-tree',3,1),(1374,'Generate a String With Characters That Have Odd Counts','generate-a-string-with-characters-that-have-odd-counts',1,1),(1375,'Number of Times Binary String Is Prefix-Aligned','number-of-times-binary-string-is-prefix-aligned',2,1),(1376,'Time Needed to Inform All Employees','time-needed-to-inform-all-employees',2,1),(1377,'Frog Position After T Seconds','frog-position-after-t-seconds',3,1),(1378,'Replace Employee ID With The Unique Identifier','replace-employee-id-with-the-unique-identifier',1,1),(1379,'Find a Corresponding Node of a Binary Tree in a Clone of That Tree','find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree',1,1),(1380,'Lucky Numbers in a Matrix','lucky-numbers-in-a-matrix',1,1),(1381,'Design a Stack With Increment Operation','design-a-stack-with-increment-operation',2,1),(1382,'Balance a Binary Search Tree','balance-a-binary-search-tree',2,1),(1383,'Maximum Performance of a Team','maximum-performance-of-a-team',3,1),(1384,'Total Sales Amount by Year','total-sales-amount-by-year',3,1),(1385,'Find the Distance Value Between Two Arrays','find-the-distance-value-between-two-arrays',1,1),(1386,'Cinema Seat Allocation','cinema-seat-allocation',2,1),(1387,'Sort Integers by The Power Value','sort-integers-by-the-power-value',2,1),(1388,'Pizza With 3n Slices','pizza-with-3n-slices',3,1),(1389,'Create Target Array in the Given Order','create-target-array-in-the-given-order',1,1),(1390,'Four Divisors','four-divisors',2,1),(1391,'Check if There is a Valid Path in a Grid','check-if-there-is-a-valid-path-in-a-grid',2,1),(1392,'Longest Happy Prefix','longest-happy-prefix',3,1),(1393,'Capital Gain/Loss','capital-gainloss',2,1),(1394,'Find Lucky Integer in an Array','find-lucky-integer-in-an-array',1,1),(1395,'Count Number of Teams','count-number-of-teams',2,1),(1396,'Design Underground System','design-underground-system',2,1),(1397,'Find All Good Strings','find-all-good-strings',3,1),(1398,'Customers Who Bought Products A and B but Not C','customers-who-bought-products-a-and-b-but-not-c',2,1),(1399,'Count Largest Group','count-largest-group',1,1),(1400,'Construct K Palindrome Strings','construct-k-palindrome-strings',2,1),(1401,'Circle and Rectangle Overlapping','circle-and-rectangle-overlapping',2,1),(1402,'Reducing Dishes','reducing-dishes',3,1),(1403,'Minimum Subsequence in Non-Increasing Order','minimum-subsequence-in-non-increasing-order',1,1),(1404,'Number of Steps to Reduce a Number in Binary Representation to One','number-of-steps-to-reduce-a-number-in-binary-representation-to-one',2,1),(1405,'Longest Happy String','longest-happy-string',2,1),(1406,'Stone Game III','stone-game-iii',3,1),(1407,'Top Travellers','top-travellers',1,1),(1408,'String Matching in an Array','string-matching-in-an-array',1,1),(1409,'Queries on a Permutation With Key','queries-on-a-permutation-with-key',2,1),(1410,'HTML Entity Parser','html-entity-parser',2,1),(1411,'Number of Ways to Paint N × 3 Grid','number-of-ways-to-paint-n-3-grid',3,1),(1412,'Find the Quiet Students in All Exams','find-the-quiet-students-in-all-exams',3,1),(1413,'Minimum Value to Get Positive Step by Step Sum','minimum-value-to-get-positive-step-by-step-sum',1,1),(1414,'Find the Minimum Number of Fibonacci Numbers Whose Sum Is K','find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k',2,1),(1415,'The k-th Lexicographical String of All Happy Strings of Length n','the-k-th-lexicographical-string-of-all-happy-strings-of-length-n',2,1),(1416,'Restore The Array','restore-the-array',3,1),(1417,'Reformat The String','reformat-the-string',1,1),(1418,'Display Table of Food Orders in a Restaurant','display-table-of-food-orders-in-a-restaurant',2,1),(1419,'Minimum Number of Frogs Croaking','minimum-number-of-frogs-croaking',2,1),(1420,'Build Array Where You Can Find The Maximum Exactly K Comparisons','build-array-where-you-can-find-the-maximum-exactly-k-comparisons',3,1),(1421,'NPV Queries','npv-queries',1,1),(1422,'Maximum Score After Splitting a String','maximum-score-after-splitting-a-string',1,1),(1423,'Maximum Points You Can Obtain from Cards','maximum-points-you-can-obtain-from-cards',2,1),(1424,'Diagonal Traverse II','diagonal-traverse-ii',2,1),(1425,'Constrained Subsequence Sum','constrained-subsequence-sum',3,1),(1426,'Counting Elements','counting-elements',1,1),(1427,'Perform String Shifts','perform-string-shifts',1,1),(1428,'Leftmost Column with at Least a One','leftmost-column-with-at-least-a-one',2,1),(1429,'First Unique Number','first-unique-number',2,1),(1430,'Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree','check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree',2,1),(1431,'Kids With the Greatest Number of Candies','kids-with-the-greatest-number-of-candies',1,1),(1432,'Max Difference You Can Get From Changing an Integer','max-difference-you-can-get-from-changing-an-integer',2,1),(1433,'Check If a String Can Break Another String','check-if-a-string-can-break-another-string',2,1),(1434,'Number of Ways to Wear Different Hats to Each Other','number-of-ways-to-wear-different-hats-to-each-other',3,1),(1435,'Create a Session Bar Chart','create-a-session-bar-chart',1,1),(1436,'Destination City','destination-city',1,1),(1437,'Check If All 1\'s Are at Least Length K Places Away','check-if-all-1s-are-at-least-length-k-places-away',1,1),(1438,'Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit','longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit',2,1),(1439,'Find the Kth Smallest Sum of a Matrix With Sorted Rows','find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows',3,1),(1440,'Evaluate Boolean Expression','evaluate-boolean-expression',2,1),(1441,'Build an Array With Stack Operations','build-an-array-with-stack-operations',2,1),(1442,'Count Triplets That Can Form Two Arrays of Equal XOR','count-triplets-that-can-form-two-arrays-of-equal-xor',2,1),(1443,'Minimum Time to Collect All Apples in a Tree','minimum-time-to-collect-all-apples-in-a-tree',2,1),(1444,'Number of Ways of Cutting a Pizza','number-of-ways-of-cutting-a-pizza',3,1),(1445,'Apples & Oranges','apples-oranges',2,1),(1446,'Consecutive Characters','consecutive-characters',1,1),(1447,'Simplified Fractions','simplified-fractions',2,1),(1448,'Count Good Nodes in Binary Tree','count-good-nodes-in-binary-tree',2,1),(1449,'Form Largest Integer With Digits That Add up to Target','form-largest-integer-with-digits-that-add-up-to-target',3,1),(1450,'Number of Students Doing Homework at a Given Time','number-of-students-doing-homework-at-a-given-time',1,1),(1451,'Rearrange Words in a Sentence','rearrange-words-in-a-sentence',2,1),(1452,'People Whose List of Favorite Companies Is Not a Subset of Another List','people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list',2,1),(1453,'Maximum Number of Darts Inside of a Circular Dartboard','maximum-number-of-darts-inside-of-a-circular-dartboard',3,1),(1454,'Active Users','active-users',2,1),(1455,'Check If a Word Occurs As a Prefix of Any Word in a Sentence','check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence',1,1),(1456,'Maximum Number of Vowels in a Substring of Given Length','maximum-number-of-vowels-in-a-substring-of-given-length',2,1),(1457,'Pseudo-Palindromic Paths in a Binary Tree','pseudo-palindromic-paths-in-a-binary-tree',2,1),(1458,'Max Dot Product of Two Subsequences','max-dot-product-of-two-subsequences',3,1),(1459,'Rectangles Area','rectangles-area',2,1),(1460,'Make Two Arrays Equal by Reversing Subarrays','make-two-arrays-equal-by-reversing-subarrays',1,1),(1461,'Check If a String Contains All Binary Codes of Size K','check-if-a-string-contains-all-binary-codes-of-size-k',2,1),(1462,'Course Schedule IV','course-schedule-iv',2,1),(1463,'Cherry Pickup II','cherry-pickup-ii',3,1),(1464,'Maximum Product of Two Elements in an Array','maximum-product-of-two-elements-in-an-array',1,1),(1465,'Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts','maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts',2,1),(1466,'Reorder Routes to Make All Paths Lead to the City Zero','reorder-routes-to-make-all-paths-lead-to-the-city-zero',2,1),(1467,'Probability of a Two Boxes Having The Same Number of Distinct Balls','probability-of-a-two-boxes-having-the-same-number-of-distinct-balls',3,1),(1468,'Calculate Salaries','calculate-salaries',2,1),(1469,'Find All The Lonely Nodes','find-all-the-lonely-nodes',1,1),(1470,'Shuffle the Array','shuffle-the-array',1,1),(1471,'The k Strongest Values in an Array','the-k-strongest-values-in-an-array',2,1),(1472,'Design Browser History','design-browser-history',2,1),(1473,'Paint House III','paint-house-iii',3,1),(1474,'Delete N Nodes After M Nodes of a Linked List','delete-n-nodes-after-m-nodes-of-a-linked-list',1,1),(1475,'Final Prices With a Special Discount in a Shop','final-prices-with-a-special-discount-in-a-shop',1,1),(1476,'Subrectangle Queries','subrectangle-queries',2,1),(1477,'Find Two Non-overlapping Sub-arrays Each With Target Sum','find-two-non-overlapping-sub-arrays-each-with-target-sum',2,1),(1478,'Allocate Mailboxes','allocate-mailboxes',3,1),(1479,'Sales by Day of the Week','sales-by-day-of-the-week',3,1),(1480,'Running Sum of 1d Array','running-sum-of-1d-array',1,1),(1481,'Least Number of Unique Integers after K Removals','least-number-of-unique-integers-after-k-removals',2,1),(1482,'Minimum Number of Days to Make m Bouquets','minimum-number-of-days-to-make-m-bouquets',2,1),(1483,'Kth Ancestor of a Tree Node','kth-ancestor-of-a-tree-node',3,1),(1484,'Group Sold Products By The Date','group-sold-products-by-the-date',1,1),(1485,'Clone Binary Tree With Random Pointer','clone-binary-tree-with-random-pointer',2,1),(1486,'XOR Operation in an Array','xor-operation-in-an-array',1,1),(1487,'Making File Names Unique','making-file-names-unique',2,1),(1488,'Avoid Flood in The City','avoid-flood-in-the-city',2,1),(1489,'Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree','find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree',3,1),(1490,'Clone N-ary Tree','clone-n-ary-tree',2,1),(1491,'Average Salary Excluding the Minimum and Maximum Salary','average-salary-excluding-the-minimum-and-maximum-salary',1,1),(1492,'The kth Factor of n','the-kth-factor-of-n',2,1),(1493,'Longest Subarray of 1\'s After Deleting One Element','longest-subarray-of-1s-after-deleting-one-element',2,1),(1494,'Parallel Courses II','parallel-courses-ii',3,1),(1495,'Friendly Movies Streamed Last Month','friendly-movies-streamed-last-month',1,1),(1496,'Path Crossing','path-crossing',1,1),(1497,'Check If Array Pairs Are Divisible by k','check-if-array-pairs-are-divisible-by-k',2,1),(1498,'Number of Subsequences That Satisfy the Given Sum Condition','number-of-subsequences-that-satisfy-the-given-sum-condition',2,1),(1499,'Max Value of Equation','max-value-of-equation',3,1),(1500,'Design a File Sharing System','design-a-file-sharing-system',2,1),(1501,'Countries You Can Safely Invest In','countries-you-can-safely-invest-in',2,1),(1502,'Can Make Arithmetic Progression From Sequence','can-make-arithmetic-progression-from-sequence',1,1),(1503,'Last Moment Before All Ants Fall Out of a Plank','last-moment-before-all-ants-fall-out-of-a-plank',2,1),(1504,'Count Submatrices With All Ones','count-submatrices-with-all-ones',2,1),(1505,'Minimum Possible Integer After at Most K Adjacent Swaps On Digits','minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits',3,1),(1506,'Find Root of N-Ary Tree','find-root-of-n-ary-tree',2,1),(1507,'Reformat Date','reformat-date',1,1),(1508,'Range Sum of Sorted Subarray Sums','range-sum-of-sorted-subarray-sums',2,1),(1509,'Minimum Difference Between Largest and Smallest Value in Three Moves','minimum-difference-between-largest-and-smallest-value-in-three-moves',2,1),(1510,'Stone Game IV','stone-game-iv',3,1),(1511,'Customer Order Frequency','customer-order-frequency',1,1),(1512,'Number of Good Pairs','number-of-good-pairs',1,1),(1513,'Number of Substrings With Only 1s','number-of-substrings-with-only-1s',2,1),(1514,'Path with Maximum Probability','path-with-maximum-probability',2,1),(1515,'Best Position for a Service Centre','best-position-for-a-service-centre',3,1),(1516,'Move Sub-Tree of N-Ary Tree','move-sub-tree-of-n-ary-tree',3,1),(1517,'Find Users With Valid E-Mails','find-users-with-valid-e-mails',1,1),(1518,'Water Bottles','water-bottles',1,1),(1519,'Number of Nodes in the Sub-Tree With the Same Label','number-of-nodes-in-the-sub-tree-with-the-same-label',2,1),(1520,'Maximum Number of Non-Overlapping Substrings','maximum-number-of-non-overlapping-substrings',3,1),(1521,'Find a Value of a Mysterious Function Closest to Target','find-a-value-of-a-mysterious-function-closest-to-target',3,1),(1522,'Diameter of N-Ary Tree','diameter-of-n-ary-tree',2,1),(1523,'Count Odd Numbers in an Interval Range','count-odd-numbers-in-an-interval-range',1,1),(1524,'Number of Sub-arrays With Odd Sum','number-of-sub-arrays-with-odd-sum',2,1),(1525,'Number of Good Ways to Split a String','number-of-good-ways-to-split-a-string',2,1),(1526,'Minimum Number of Increments on Subarrays to Form a Target Array','minimum-number-of-increments-on-subarrays-to-form-a-target-array',3,1),(1527,'Patients With a Condition','patients-with-a-condition',1,1),(1528,'Shuffle String','shuffle-string',1,1),(1529,'Minimum Suffix Flips','minimum-suffix-flips',2,1),(1530,'Number of Good Leaf Nodes Pairs','number-of-good-leaf-nodes-pairs',2,1),(1531,'String Compression II','string-compression-ii',3,1),(1532,'The Most Recent Three Orders','the-most-recent-three-orders',2,1),(1533,'Find the Index of the Large Integer','find-the-index-of-the-large-integer',2,1),(1534,'Count Good Triplets','count-good-triplets',1,1),(1535,'Find the Winner of an Array Game','find-the-winner-of-an-array-game',2,1),(1536,'Minimum Swaps to Arrange a Binary Grid','minimum-swaps-to-arrange-a-binary-grid',2,1),(1537,'Get the Maximum Score','get-the-maximum-score',3,1),(1538,'Guess the Majority in a Hidden Array','guess-the-majority-in-a-hidden-array',2,1),(1539,'Kth Missing Positive Number','kth-missing-positive-number',1,1),(1540,'Can Convert String in K Moves','can-convert-string-in-k-moves',2,1),(1541,'Minimum Insertions to Balance a Parentheses String','minimum-insertions-to-balance-a-parentheses-string',2,1),(1542,'Find Longest Awesome Substring','find-longest-awesome-substring',3,1),(1543,'Fix Product Name Format','fix-product-name-format',1,1),(1544,'Make The String Great','make-the-string-great',1,1),(1545,'Find Kth Bit in Nth Binary String','find-kth-bit-in-nth-binary-string',2,1),(1546,'Maximum Number of Non-Overlapping Subarrays With Sum Equals Target','maximum-number-of-non-overlapping-subarrays-with-sum-equals-target',2,1),(1547,'Minimum Cost to Cut a Stick','minimum-cost-to-cut-a-stick',3,1),(1548,'The Most Similar Path in a Graph','the-most-similar-path-in-a-graph',3,1),(1549,'The Most Recent Orders for Each Product','the-most-recent-orders-for-each-product',2,1),(1550,'Three Consecutive Odds','three-consecutive-odds',1,1),(1551,'Minimum Operations to Make Array Equal','minimum-operations-to-make-array-equal',2,1),(1552,'Magnetic Force Between Two Balls','magnetic-force-between-two-balls',2,1),(1553,'Minimum Number of Days to Eat N Oranges','minimum-number-of-days-to-eat-n-oranges',3,1),(1554,'Strings Differ by One Character','strings-differ-by-one-character',2,1),(1555,'Bank Account Summary','bank-account-summary',2,1),(1556,'Thousand Separator','thousand-separator',1,1),(1557,'Minimum Number of Vertices to Reach All Nodes','minimum-number-of-vertices-to-reach-all-nodes',2,1),(1558,'Minimum Numbers of Function Calls to Make Target Array','minimum-numbers-of-function-calls-to-make-target-array',2,1),(1559,'Detect Cycles in 2D Grid','detect-cycles-in-2d-grid',2,1),(1560,'Most Visited Sector in  a Circular Track','most-visited-sector-in-a-circular-track',1,1),(1561,'Maximum Number of Coins You Can Get','maximum-number-of-coins-you-can-get',2,1),(1562,'Find Latest Group of Size M','find-latest-group-of-size-m',2,1),(1563,'Stone Game V','stone-game-v',3,1),(1564,'Put Boxes Into the Warehouse I','put-boxes-into-the-warehouse-i',2,1),(1565,'Unique Orders and Customers Per Month','unique-orders-and-customers-per-month',1,1),(1566,'Detect Pattern of Length M Repeated K or More Times','detect-pattern-of-length-m-repeated-k-or-more-times',1,1),(1567,'Maximum Length of Subarray With Positive Product','maximum-length-of-subarray-with-positive-product',2,1),(1568,'Minimum Number of Days to Disconnect Island','minimum-number-of-days-to-disconnect-island',3,1),(1569,'Number of Ways to Reorder Array to Get Same BST','number-of-ways-to-reorder-array-to-get-same-bst',3,1),(1570,'Dot Product of Two Sparse Vectors','dot-product-of-two-sparse-vectors',2,1),(1571,'Warehouse Manager','warehouse-manager',1,1),(1572,'Matrix Diagonal Sum','matrix-diagonal-sum',1,1),(1573,'Number of Ways to Split a String','number-of-ways-to-split-a-string',2,1),(1574,'Shortest Subarray to be Removed to Make Array Sorted','shortest-subarray-to-be-removed-to-make-array-sorted',2,1),(1575,'Count All Possible Routes','count-all-possible-routes',3,1),(1576,'Replace All ?\'s to Avoid Consecutive Repeating Characters','replace-all-s-to-avoid-consecutive-repeating-characters',1,1),(1577,'Number of Ways Where Square of Number Is Equal to Product of Two Numbers','number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers',2,1),(1578,'Minimum Time to Make Rope Colorful','minimum-time-to-make-rope-colorful',2,1),(1579,'Remove Max Number of Edges to Keep Graph Fully Traversable','remove-max-number-of-edges-to-keep-graph-fully-traversable',3,1),(1580,'Put Boxes Into the Warehouse II','put-boxes-into-the-warehouse-ii',2,1),(1581,'Customer Who Visited but Did Not Make Any Transactions','customer-who-visited-but-did-not-make-any-transactions',1,1),(1582,'Special Positions in a Binary Matrix','special-positions-in-a-binary-matrix',1,1),(1583,'Count Unhappy Friends','count-unhappy-friends',2,1),(1584,'Min Cost to Connect All Points','min-cost-to-connect-all-points',2,1),(1585,'Check If String Is Transformable With Substring Sort Operations','check-if-string-is-transformable-with-substring-sort-operations',3,1),(1586,'Binary Search Tree Iterator II','binary-search-tree-iterator-ii',2,1),(1587,'Bank Account Summary II','bank-account-summary-ii',1,1),(1588,'Sum of All Odd Length Subarrays','sum-of-all-odd-length-subarrays',1,1),(1589,'Maximum Sum Obtained of Any Permutation','maximum-sum-obtained-of-any-permutation',2,1),(1590,'Make Sum Divisible by P','make-sum-divisible-by-p',2,1),(1591,'Strange Printer II','strange-printer-ii',3,1),(1592,'Rearrange Spaces Between Words','rearrange-spaces-between-words',1,1),(1593,'Split a String Into the Max Number of Unique Substrings','split-a-string-into-the-max-number-of-unique-substrings',2,1),(1594,'Maximum Non Negative Product in a Matrix','maximum-non-negative-product-in-a-matrix',2,1),(1595,'Minimum Cost to Connect Two Groups of Points','minimum-cost-to-connect-two-groups-of-points',3,1),(1596,'The Most Frequently Ordered Products for Each Customer','the-most-frequently-ordered-products-for-each-customer',2,1),(1597,'Build Binary Expression Tree From Infix Expression','build-binary-expression-tree-from-infix-expression',3,1),(1598,'Crawler Log Folder','crawler-log-folder',1,1),(1599,'Maximum Profit of Operating a Centennial Wheel','maximum-profit-of-operating-a-centennial-wheel',2,1),(1600,'Throne Inheritance','throne-inheritance',2,1),(1601,'Maximum Number of Achievable Transfer Requests','maximum-number-of-achievable-transfer-requests',3,1),(1602,'Find Nearest Right Node in Binary Tree','find-nearest-right-node-in-binary-tree',2,1),(1603,'Design Parking System','design-parking-system',1,1),(1604,'Alert Using Same Key-Card Three or More Times in a One Hour Period','alert-using-same-key-card-three-or-more-times-in-a-one-hour-period',2,1),(1605,'Find Valid Matrix Given Row and Column Sums','find-valid-matrix-given-row-and-column-sums',2,1),(1606,'Find Servers That Handled Most Number of Requests','find-servers-that-handled-most-number-of-requests',3,1),(1607,'Sellers With No Sales','sellers-with-no-sales',1,1),(1608,'Special Array With X Elements Greater Than or Equal X','special-array-with-x-elements-greater-than-or-equal-x',1,1),(1609,'Even Odd Tree','even-odd-tree',2,1),(1610,'Maximum Number of Visible Points','maximum-number-of-visible-points',3,1),(1611,'Minimum One Bit Operations to Make Integers Zero','minimum-one-bit-operations-to-make-integers-zero',3,1),(1612,'Check If Two Expression Trees are Equivalent','check-if-two-expression-trees-are-equivalent',2,1),(1613,'Find the Missing IDs','find-the-missing-ids',2,1),(1614,'Maximum Nesting Depth of the Parentheses','maximum-nesting-depth-of-the-parentheses',1,1),(1615,'Maximal Network Rank','maximal-network-rank',2,1),(1616,'Split Two Strings to Make Palindrome','split-two-strings-to-make-palindrome',2,1),(1617,'Count Subtrees With Max Distance Between Cities','count-subtrees-with-max-distance-between-cities',3,1),(1618,'Maximum Font to Fit a Sentence in a Screen','maximum-font-to-fit-a-sentence-in-a-screen',2,1),(1619,'Mean of Array After Removing Some Elements','mean-of-array-after-removing-some-elements',1,1),(1620,'Coordinate With Maximum Network Quality','coordinate-with-maximum-network-quality',2,1),(1621,'Number of Sets of K Non-Overlapping Line Segments','number-of-sets-of-k-non-overlapping-line-segments',2,1),(1622,'Fancy Sequence','fancy-sequence',3,1),(1623,'All Valid Triplets That Can Represent a Country','all-valid-triplets-that-can-represent-a-country',1,1),(1624,'Largest Substring Between Two Equal Characters','largest-substring-between-two-equal-characters',1,1),(1625,'Lexicographically Smallest String After Applying Operations','lexicographically-smallest-string-after-applying-operations',2,1),(1626,'Best Team With No Conflicts','best-team-with-no-conflicts',2,1),(1627,'Graph Connectivity With Threshold','graph-connectivity-with-threshold',3,1),(1628,'Design an Expression Tree With Evaluate Function','design-an-expression-tree-with-evaluate-function',2,1),(1629,'Slowest Key','slowest-key',1,1),(1630,'Arithmetic Subarrays','arithmetic-subarrays',2,1),(1631,'Path With Minimum Effort','path-with-minimum-effort',2,1),(1632,'Rank Transform of a Matrix','rank-transform-of-a-matrix',3,1),(1633,'Percentage of Users Attended a Contest','percentage-of-users-attended-a-contest',1,1),(1634,'Add Two Polynomials Represented as Linked Lists','add-two-polynomials-represented-as-linked-lists',2,1),(1635,'Hopper Company Queries I','hopper-company-queries-i',3,1),(1636,'Sort Array by Increasing Frequency','sort-array-by-increasing-frequency',1,1),(1637,'Widest Vertical Area Between Two Points Containing No Points','widest-vertical-area-between-two-points-containing-no-points',1,1),(1638,'Count Substrings That Differ by One Character','count-substrings-that-differ-by-one-character',2,1),(1639,'Number of Ways to Form a Target String Given a Dictionary','number-of-ways-to-form-a-target-string-given-a-dictionary',3,1),(1640,'Check Array Formation Through Concatenation','check-array-formation-through-concatenation',1,1),(1641,'Count Sorted Vowel Strings','count-sorted-vowel-strings',2,1),(1642,'Furthest Building You Can Reach','furthest-building-you-can-reach',2,1),(1643,'Kth Smallest Instructions','kth-smallest-instructions',3,1),(1644,'Lowest Common Ancestor of a Binary Tree II','lowest-common-ancestor-of-a-binary-tree-ii',2,1),(1645,'Hopper Company Queries II','hopper-company-queries-ii',3,1),(1646,'Get Maximum in Generated Array','get-maximum-in-generated-array',1,1),(1647,'Minimum Deletions to Make Character Frequencies Unique','minimum-deletions-to-make-character-frequencies-unique',2,1),(1648,'Sell Diminishing-Valued Colored Balls','sell-diminishing-valued-colored-balls',2,1),(1649,'Create Sorted Array through Instructions','create-sorted-array-through-instructions',3,1),(1650,'Lowest Common Ancestor of a Binary Tree III','lowest-common-ancestor-of-a-binary-tree-iii',2,1),(1651,'Hopper Company Queries III','hopper-company-queries-iii',3,1),(1652,'Defuse the Bomb','defuse-the-bomb',1,1),(1653,'Minimum Deletions to Make String Balanced','minimum-deletions-to-make-string-balanced',2,1),(1654,'Minimum Jumps to Reach Home','minimum-jumps-to-reach-home',2,1),(1655,'Distribute Repeating Integers','distribute-repeating-integers',3,1),(1656,'Design an Ordered Stream','design-an-ordered-stream',1,1),(1657,'Determine if Two Strings Are Close','determine-if-two-strings-are-close',2,1),(1658,'Minimum Operations to Reduce X to Zero','minimum-operations-to-reduce-x-to-zero',2,1),(1659,'Maximize Grid Happiness','maximize-grid-happiness',3,1),(1660,'Correct a Binary Tree','correct-a-binary-tree',2,1),(1661,'Average Time of Process per Machine','average-time-of-process-per-machine',1,1),(1662,'Check If Two String Arrays are Equivalent','check-if-two-string-arrays-are-equivalent',1,1),(1663,'Smallest String With A Given Numeric Value','smallest-string-with-a-given-numeric-value',2,1),(1664,'Ways to Make a Fair Array','ways-to-make-a-fair-array',2,1),(1665,'Minimum Initial Energy to Finish Tasks','minimum-initial-energy-to-finish-tasks',3,1),(1666,'Change the Root of a Binary Tree','change-the-root-of-a-binary-tree',2,1),(1667,'Fix Names in a Table','fix-names-in-a-table',1,1),(1668,'Maximum Repeating Substring','maximum-repeating-substring',1,1),(1669,'Merge In Between Linked Lists','merge-in-between-linked-lists',2,1),(1670,'Design Front Middle Back Queue','design-front-middle-back-queue',2,1),(1671,'Minimum Number of Removals to Make Mountain Array','minimum-number-of-removals-to-make-mountain-array',3,1),(1672,'Richest Customer Wealth','richest-customer-wealth',1,1),(1673,'Find the Most Competitive Subsequence','find-the-most-competitive-subsequence',2,1),(1674,'Minimum Moves to Make Array Complementary','minimum-moves-to-make-array-complementary',2,1),(1675,'Minimize Deviation in Array','minimize-deviation-in-array',3,1),(1676,'Lowest Common Ancestor of a Binary Tree IV','lowest-common-ancestor-of-a-binary-tree-iv',2,1),(1677,'Product\'s Worth Over Invoices','products-worth-over-invoices',1,1),(1678,'Goal Parser Interpretation','goal-parser-interpretation',1,1),(1679,'Max Number of K-Sum Pairs','max-number-of-k-sum-pairs',2,1),(1680,'Concatenation of Consecutive Binary Numbers','concatenation-of-consecutive-binary-numbers',2,1),(1681,'Minimum Incompatibility','minimum-incompatibility',3,1),(1682,'Longest Palindromic Subsequence II','longest-palindromic-subsequence-ii',2,1),(1683,'Invalid Tweets','invalid-tweets',1,1),(1684,'Count the Number of Consistent Strings','count-the-number-of-consistent-strings',1,1),(1685,'Sum of Absolute Differences in a Sorted Array','sum-of-absolute-differences-in-a-sorted-array',2,1),(1686,'Stone Game VI','stone-game-vi',2,1),(1687,'Delivering Boxes from Storage to Ports','delivering-boxes-from-storage-to-ports',3,1),(1688,'Count of Matches in Tournament','count-of-matches-in-tournament',1,1),(1689,'Partitioning Into Minimum Number Of Deci-Binary Numbers','partitioning-into-minimum-number-of-deci-binary-numbers',2,1),(1690,'Stone Game VII','stone-game-vii',2,1),(1691,'Maximum Height by Stacking Cuboids ','maximum-height-by-stacking-cuboids',3,1),(1692,'Count Ways to Distribute Candies','count-ways-to-distribute-candies',3,1),(1693,'Daily Leads and Partners','daily-leads-and-partners',1,1),(1694,'Reformat Phone Number','reformat-phone-number',1,1),(1695,'Maximum Erasure Value','maximum-erasure-value',2,1),(1696,'Jump Game VI','jump-game-vi',2,1),(1697,'Checking Existence of Edge Length Limited Paths','checking-existence-of-edge-length-limited-paths',3,1),(1698,'Number of Distinct Substrings in a String','number-of-distinct-substrings-in-a-string',2,1),(1699,'Number of Calls Between Two Persons','number-of-calls-between-two-persons',2,1),(1700,'Number of Students Unable to Eat Lunch','number-of-students-unable-to-eat-lunch',1,1),(1701,'Average Waiting Time','average-waiting-time',2,1),(1702,'Maximum Binary String After Change','maximum-binary-string-after-change',2,1),(1703,'Minimum Adjacent Swaps for K Consecutive Ones','minimum-adjacent-swaps-for-k-consecutive-ones',3,1),(1704,'Determine if String Halves Are Alike','determine-if-string-halves-are-alike',1,1),(1705,'Maximum Number of Eaten Apples','maximum-number-of-eaten-apples',2,1),(1706,'Where Will the Ball Fall','where-will-the-ball-fall',2,1),(1707,'Maximum XOR With an Element From Array','maximum-xor-with-an-element-from-array',3,1),(1708,'Largest Subarray Length K','largest-subarray-length-k',1,1),(1709,'Biggest Window Between Visits','biggest-window-between-visits',2,1),(1710,'Maximum Units on a Truck','maximum-units-on-a-truck',1,1),(1711,'Count Good Meals','count-good-meals',2,1),(1712,'Ways to Split Array Into Three Subarrays','ways-to-split-array-into-three-subarrays',2,1),(1713,'Minimum Operations to Make a Subsequence','minimum-operations-to-make-a-subsequence',3,1),(1714,'Sum Of Special Evenly-Spaced Elements In Array','sum-of-special-evenly-spaced-elements-in-array',3,1),(1715,'Count Apples and Oranges','count-apples-and-oranges',2,1),(1716,'Calculate Money in Leetcode Bank','calculate-money-in-leetcode-bank',1,1),(1717,'Maximum Score From Removing Substrings','maximum-score-from-removing-substrings',2,1),(1718,'Construct the Lexicographically Largest Valid Sequence','construct-the-lexicographically-largest-valid-sequence',2,1),(1719,'Number Of Ways To Reconstruct A Tree','number-of-ways-to-reconstruct-a-tree',3,1),(1720,'Decode XORed Array','decode-xored-array',1,1),(1721,'Swapping Nodes in a Linked List','swapping-nodes-in-a-linked-list',2,1),(1722,'Minimize Hamming Distance After Swap Operations','minimize-hamming-distance-after-swap-operations',2,1),(1723,'Find Minimum Time to Finish All Jobs','find-minimum-time-to-finish-all-jobs',3,1),(1724,'Checking Existence of Edge Length Limited Paths II','checking-existence-of-edge-length-limited-paths-ii',3,1),(1725,'Number Of Rectangles That Can Form The Largest Square','number-of-rectangles-that-can-form-the-largest-square',1,1),(1726,'Tuple with Same Product','tuple-with-same-product',2,1),(1727,'Largest Submatrix With Rearrangements','largest-submatrix-with-rearrangements',2,1),(1728,'Cat and Mouse II','cat-and-mouse-ii',3,1),(1729,'Find Followers Count','find-followers-count',1,1),(1730,'Shortest Path to Get Food','shortest-path-to-get-food',2,1),(1731,'The Number of Employees Which Report to Each Employee','the-number-of-employees-which-report-to-each-employee',1,1),(1732,'Find the Highest Altitude','find-the-highest-altitude',1,1),(1733,'Minimum Number of People to Teach','minimum-number-of-people-to-teach',2,1),(1734,'Decode XORed Permutation','decode-xored-permutation',2,1),(1735,'Count Ways to Make Array With Product','count-ways-to-make-array-with-product',3,1),(1736,'Latest Time by Replacing Hidden Digits','latest-time-by-replacing-hidden-digits',1,1),(1737,'Change Minimum Characters to Satisfy One of Three Conditions','change-minimum-characters-to-satisfy-one-of-three-conditions',2,1),(1738,'Find Kth Largest XOR Coordinate Value','find-kth-largest-xor-coordinate-value',2,1),(1739,'Building Boxes','building-boxes',3,1),(1740,'Find Distance in a Binary Tree','find-distance-in-a-binary-tree',2,1),(1741,'Find Total Time Spent by Each Employee','find-total-time-spent-by-each-employee',1,1),(1742,'Maximum Number of Balls in a Box','maximum-number-of-balls-in-a-box',1,1),(1743,'Restore the Array From Adjacent Pairs','restore-the-array-from-adjacent-pairs',2,1),(1744,'Can You Eat Your Favorite Candy on Your Favorite Day?','can-you-eat-your-favorite-candy-on-your-favorite-day',2,1),(1745,'Palindrome Partitioning IV','palindrome-partitioning-iv',3,1),(1746,'Maximum Subarray Sum After One Operation','maximum-subarray-sum-after-one-operation',2,1),(1747,'Leetflex Banned Accounts','leetflex-banned-accounts',2,1),(1748,'Sum of Unique Elements','sum-of-unique-elements',1,1),(1749,'Maximum Absolute Sum of Any Subarray','maximum-absolute-sum-of-any-subarray',2,1),(1750,'Minimum Length of String After Deleting Similar Ends','minimum-length-of-string-after-deleting-similar-ends',2,1),(1751,'Maximum Number of Events That Can Be Attended II','maximum-number-of-events-that-can-be-attended-ii',3,1),(1752,'Check if Array Is Sorted and Rotated','check-if-array-is-sorted-and-rotated',1,1),(1753,'Maximum Score From Removing Stones','maximum-score-from-removing-stones',2,1),(1754,'Largest Merge Of Two Strings','largest-merge-of-two-strings',2,1),(1755,'Closest Subsequence Sum','closest-subsequence-sum',3,1),(1756,'Design Most Recently Used Queue','design-most-recently-used-queue',2,1),(1757,'Recyclable and Low Fat Products','recyclable-and-low-fat-products',1,1),(1758,'Minimum Changes To Make Alternating Binary String','minimum-changes-to-make-alternating-binary-string',1,1),(1759,'Count Number of Homogenous Substrings','count-number-of-homogenous-substrings',2,1),(1760,'Minimum Limit of Balls in a Bag','minimum-limit-of-balls-in-a-bag',2,1),(1761,'Minimum Degree of a Connected Trio in a Graph','minimum-degree-of-a-connected-trio-in-a-graph',3,1),(1762,'Buildings With an Ocean View','buildings-with-an-ocean-view',2,1),(1763,'Longest Nice Substring','longest-nice-substring',1,1),(1764,'Form Array by Concatenating Subarrays of Another Array','form-array-by-concatenating-subarrays-of-another-array',2,1),(1765,'Map of Highest Peak','map-of-highest-peak',2,1),(1766,'Tree of Coprimes','tree-of-coprimes',3,1),(1767,'Find the Subtasks That Did Not Execute','find-the-subtasks-that-did-not-execute',3,1),(1768,'Merge Strings Alternately','merge-strings-alternately',1,1),(1769,'Minimum Number of Operations to Move All Balls to Each Box','minimum-number-of-operations-to-move-all-balls-to-each-box',2,1),(1770,'Maximum Score from Performing Multiplication Operations','maximum-score-from-performing-multiplication-operations',3,1),(1771,'Maximize Palindrome Length From Subsequences','maximize-palindrome-length-from-subsequences',3,1),(1772,'Sort Features by Popularity','sort-features-by-popularity',2,1),(1773,'Count Items Matching a Rule','count-items-matching-a-rule',1,1),(1774,'Closest Dessert Cost','closest-dessert-cost',2,1),(1775,'Equal Sum Arrays With Minimum Number of Operations','equal-sum-arrays-with-minimum-number-of-operations',2,1),(1776,'Car Fleet II','car-fleet-ii',3,1),(1777,'Product\'s Price for Each Store','products-price-for-each-store',1,1),(1778,'Shortest Path in a Hidden Grid','shortest-path-in-a-hidden-grid',2,1),(1779,'Find Nearest Point That Has the Same X or Y Coordinate','find-nearest-point-that-has-the-same-x-or-y-coordinate',1,1),(1780,'Check if Number is a Sum of Powers of Three','check-if-number-is-a-sum-of-powers-of-three',2,1),(1781,'Sum of Beauty of All Substrings','sum-of-beauty-of-all-substrings',2,1),(1782,'Count Pairs Of Nodes','count-pairs-of-nodes',3,1),(1783,'Grand Slam Titles','grand-slam-titles',2,1),(1784,'Check if Binary String Has at Most One Segment of Ones','check-if-binary-string-has-at-most-one-segment-of-ones',1,1),(1785,'Minimum Elements to Add to Form a Given Sum','minimum-elements-to-add-to-form-a-given-sum',2,1),(1786,'Number of Restricted Paths From First to Last Node','number-of-restricted-paths-from-first-to-last-node',2,1),(1787,'Make the XOR of All Segments Equal to Zero','make-the-xor-of-all-segments-equal-to-zero',3,1),(1788,'Maximize the Beauty of the Garden','maximize-the-beauty-of-the-garden',3,1),(1789,'Primary Department for Each Employee','primary-department-for-each-employee',1,1),(1790,'Check if One String Swap Can Make Strings Equal','check-if-one-string-swap-can-make-strings-equal',1,1),(1791,'Find Center of Star Graph','find-center-of-star-graph',1,1),(1792,'Maximum Average Pass Ratio','maximum-average-pass-ratio',2,1),(1793,'Maximum Score of a Good Subarray','maximum-score-of-a-good-subarray',3,1),(1794,'Count Pairs of Equal Substrings With Minimum Difference','count-pairs-of-equal-substrings-with-minimum-difference',2,1),(1795,'Rearrange Products Table','rearrange-products-table',1,1),(1796,'Second Largest Digit in a String','second-largest-digit-in-a-string',1,1),(1797,'Design Authentication Manager','design-authentication-manager',2,1),(1798,'Maximum Number of Consecutive Values You Can Make','maximum-number-of-consecutive-values-you-can-make',2,1),(1799,'Maximize Score After N Operations','maximize-score-after-n-operations',3,1),(1800,'Maximum Ascending Subarray Sum','maximum-ascending-subarray-sum',1,1),(1801,'Number of Orders in the Backlog','number-of-orders-in-the-backlog',2,1),(1802,'Maximum Value at a Given Index in a Bounded Array','maximum-value-at-a-given-index-in-a-bounded-array',2,1),(1803,'Count Pairs With XOR in a Range','count-pairs-with-xor-in-a-range',3,1),(1804,'Implement Trie II (Prefix Tree)','implement-trie-ii-prefix-tree',2,1),(1805,'Number of Different Integers in a String','number-of-different-integers-in-a-string',1,1),(1806,'Minimum Number of Operations to Reinitialize a Permutation','minimum-number-of-operations-to-reinitialize-a-permutation',2,1),(1807,'Evaluate the Bracket Pairs of a String','evaluate-the-bracket-pairs-of-a-string',2,1),(1808,'Maximize Number of Nice Divisors','maximize-number-of-nice-divisors',3,1),(1809,'Ad-Free Sessions','ad-free-sessions',1,1),(1810,'Minimum Path Cost in a Hidden Grid','minimum-path-cost-in-a-hidden-grid',2,1),(1811,'Find Interview Candidates','find-interview-candidates',2,1),(1812,'Determine Color of a Chessboard Square','determine-color-of-a-chessboard-square',1,1),(1813,'Sentence Similarity III','sentence-similarity-iii',2,1),(1814,'Count Nice Pairs in an Array','count-nice-pairs-in-an-array',2,1),(1815,'Maximum Number of Groups Getting Fresh Donuts','maximum-number-of-groups-getting-fresh-donuts',3,1),(1816,'Truncate Sentence','truncate-sentence',1,1),(1817,'Finding the Users Active Minutes','finding-the-users-active-minutes',2,1),(1818,'Minimum Absolute Sum Difference','minimum-absolute-sum-difference',2,1),(1819,'Number of Different Subsequences GCDs','number-of-different-subsequences-gcds',3,1),(1820,'Maximum Number of Accepted Invitations','maximum-number-of-accepted-invitations',2,1),(1821,'Find Customers With Positive Revenue this Year','find-customers-with-positive-revenue-this-year',1,1),(1822,'Sign of the Product of an Array','sign-of-the-product-of-an-array',1,1),(1823,'Find the Winner of the Circular Game','find-the-winner-of-the-circular-game',2,1),(1824,'Minimum Sideway Jumps','minimum-sideway-jumps',2,1),(1825,'Finding MK Average','finding-mk-average',3,1),(1826,'Faulty Sensor','faulty-sensor',1,1),(1827,'Minimum Operations to Make the Array Increasing','minimum-operations-to-make-the-array-increasing',1,1),(1828,'Queries on Number of Points Inside a Circle','queries-on-number-of-points-inside-a-circle',2,1),(1829,'Maximum XOR for Each Query','maximum-xor-for-each-query',2,1),(1830,'Minimum Number of Operations to Make String Sorted','minimum-number-of-operations-to-make-string-sorted',3,1),(1831,'Maximum Transaction Each Day','maximum-transaction-each-day',2,1),(1832,'Check if the Sentence Is Pangram','check-if-the-sentence-is-pangram',1,1),(1833,'Maximum Ice Cream Bars','maximum-ice-cream-bars',2,1),(1834,'Single-Threaded CPU','single-threaded-cpu',2,1),(1835,'Find XOR Sum of All Pairs Bitwise AND','find-xor-sum-of-all-pairs-bitwise-and',3,1),(1836,'Remove Duplicates From an Unsorted Linked List','remove-duplicates-from-an-unsorted-linked-list',2,1),(1837,'Sum of Digits in Base K','sum-of-digits-in-base-k',1,1),(1838,'Frequency of the Most Frequent Element','frequency-of-the-most-frequent-element',2,1),(1839,'Longest Substring Of All Vowels in Order','longest-substring-of-all-vowels-in-order',2,1),(1840,'Maximum Building Height','maximum-building-height',3,1),(1841,'League Statistics','league-statistics',2,1),(1842,'Next Palindrome Using Same Digits','next-palindrome-using-same-digits',3,1),(1843,'Suspicious Bank Accounts','suspicious-bank-accounts',2,1),(1844,'Replace All Digits with Characters','replace-all-digits-with-characters',1,1),(1845,'Seat Reservation Manager','seat-reservation-manager',2,1),(1846,'Maximum Element After Decreasing and Rearranging','maximum-element-after-decreasing-and-rearranging',2,1),(1847,'Closest Room','closest-room',3,1),(1848,'Minimum Distance to the Target Element','minimum-distance-to-the-target-element',1,1),(1849,'Splitting a String Into Descending Consecutive Values','splitting-a-string-into-descending-consecutive-values',2,1),(1850,'Minimum Adjacent Swaps to Reach the Kth Smallest Number','minimum-adjacent-swaps-to-reach-the-kth-smallest-number',2,1),(1851,'Minimum Interval to Include Each Query','minimum-interval-to-include-each-query',3,1),(1852,'Distinct Numbers in Each Subarray','distinct-numbers-in-each-subarray',2,1),(1853,'Convert Date Format','convert-date-format',1,1),(1854,'Maximum Population Year','maximum-population-year',1,1),(1855,'Maximum Distance Between a Pair of Values','maximum-distance-between-a-pair-of-values',2,1),(1856,'Maximum Subarray Min-Product','maximum-subarray-min-product',2,1),(1857,'Largest Color Value in a Directed Graph','largest-color-value-in-a-directed-graph',3,1),(1858,'Longest Word With All Prefixes','longest-word-with-all-prefixes',2,1),(1859,'Sorting the Sentence','sorting-the-sentence',1,1),(1860,'Incremental Memory Leak','incremental-memory-leak',2,1),(1861,'Rotating the Box','rotating-the-box',2,1),(1862,'Sum of Floored Pairs','sum-of-floored-pairs',3,1),(1863,'Sum of All Subset XOR Totals','sum-of-all-subset-xor-totals',1,1),(1864,'Minimum Number of Swaps to Make the Binary String Alternating','minimum-number-of-swaps-to-make-the-binary-string-alternating',2,1),(1865,'Finding Pairs With a Certain Sum','finding-pairs-with-a-certain-sum',2,1),(1866,'Number of Ways to Rearrange Sticks With K Sticks Visible','number-of-ways-to-rearrange-sticks-with-k-sticks-visible',3,1),(1867,'Orders With Maximum Quantity Above Average','orders-with-maximum-quantity-above-average',2,1),(1868,'Product of Two Run-Length Encoded Arrays','product-of-two-run-length-encoded-arrays',2,1),(1869,'Longer Contiguous Segments of Ones than Zeros','longer-contiguous-segments-of-ones-than-zeros',1,1),(1870,'Minimum Speed to Arrive on Time','minimum-speed-to-arrive-on-time',2,1),(1871,'Jump Game VII','jump-game-vii',2,1),(1872,'Stone Game VIII','stone-game-viii',3,1),(1873,'Calculate Special Bonus','calculate-special-bonus',1,1),(1874,'Minimize Product Sum of Two Arrays','minimize-product-sum-of-two-arrays',2,1),(1875,'Group Employees of the Same Salary','group-employees-of-the-same-salary',2,1),(1876,'Substrings of Size Three with Distinct Characters','substrings-of-size-three-with-distinct-characters',1,1),(1877,'Minimize Maximum Pair Sum in Array','minimize-maximum-pair-sum-in-array',2,1),(1878,'Get Biggest Three Rhombus Sums in a Grid','get-biggest-three-rhombus-sums-in-a-grid',2,1),(1879,'Minimum XOR Sum of Two Arrays','minimum-xor-sum-of-two-arrays',3,1),(1880,'Check if Word Equals Summation of Two Words','check-if-word-equals-summation-of-two-words',1,1),(1881,'Maximum Value after Insertion','maximum-value-after-insertion',2,1),(1882,'Process Tasks Using Servers','process-tasks-using-servers',2,1),(1883,'Minimum Skips to Arrive at Meeting On Time','minimum-skips-to-arrive-at-meeting-on-time',3,1),(1884,'Egg Drop With 2 Eggs and N Floors','egg-drop-with-2-eggs-and-n-floors',2,1),(1885,'Count Pairs in Two Arrays','count-pairs-in-two-arrays',2,1),(1886,'Determine Whether Matrix Can Be Obtained By Rotation','determine-whether-matrix-can-be-obtained-by-rotation',1,1),(1887,'Reduction Operations to Make the Array Elements Equal','reduction-operations-to-make-the-array-elements-equal',2,1),(1888,'Minimum Number of Flips to Make the Binary String Alternating','minimum-number-of-flips-to-make-the-binary-string-alternating',2,1),(1889,'Minimum Space Wasted From Packaging','minimum-space-wasted-from-packaging',3,1),(1890,'The Latest Login in 2020','the-latest-login-in-2020',1,1),(1891,'Cutting Ribbons','cutting-ribbons',2,1),(1892,'Page Recommendations II','page-recommendations-ii',3,1),(1893,'Check if All the Integers in a Range Are Covered','check-if-all-the-integers-in-a-range-are-covered',1,1),(1894,'Find the Student that Will Replace the Chalk','find-the-student-that-will-replace-the-chalk',2,1),(1895,'Largest Magic Square','largest-magic-square',2,1),(1896,'Minimum Cost to Change the Final Value of Expression','minimum-cost-to-change-the-final-value-of-expression',3,1),(1897,'Redistribute Characters to Make All Strings Equal','redistribute-characters-to-make-all-strings-equal',1,1),(1898,'Maximum Number of Removable Characters','maximum-number-of-removable-characters',2,1),(1899,'Merge Triplets to Form Target Triplet','merge-triplets-to-form-target-triplet',2,1),(1900,'The Earliest and Latest Rounds Where Players Compete','the-earliest-and-latest-rounds-where-players-compete',3,1),(1901,'Find a Peak Element II','find-a-peak-element-ii',2,1),(1902,'Depth of BST Given Insertion Order','depth-of-bst-given-insertion-order',2,1),(1903,'Largest Odd Number in String','largest-odd-number-in-string',1,1),(1904,'The Number of Full Rounds You Have Played','the-number-of-full-rounds-you-have-played',2,1),(1905,'Count Sub Islands','count-sub-islands',2,1),(1906,'Minimum Absolute Difference Queries','minimum-absolute-difference-queries',2,1),(1907,'Count Salary Categories','count-salary-categories',2,1),(1908,'Game of Nim','game-of-nim',2,1),(1909,'Remove One Element to Make the Array Strictly Increasing','remove-one-element-to-make-the-array-strictly-increasing',1,1),(1910,'Remove All Occurrences of a Substring','remove-all-occurrences-of-a-substring',2,1),(1911,'Maximum Alternating Subsequence Sum','maximum-alternating-subsequence-sum',2,1),(1912,'Design Movie Rental System','design-movie-rental-system',3,1),(1913,'Maximum Product Difference Between Two Pairs','maximum-product-difference-between-two-pairs',1,1),(1914,'Cyclically Rotating a Grid','cyclically-rotating-a-grid',2,1),(1915,'Number of Wonderful Substrings','number-of-wonderful-substrings',2,1),(1916,'Count Ways to Build Rooms in an Ant Colony','count-ways-to-build-rooms-in-an-ant-colony',3,1),(1917,'Leetcodify Friends Recommendations','leetcodify-friends-recommendations',3,1),(1918,'Kth Smallest Subarray Sum','kth-smallest-subarray-sum',2,1),(1919,'Leetcodify Similar Friends','leetcodify-similar-friends',3,1),(1920,'Build Array from Permutation','build-array-from-permutation',1,1),(1921,'Eliminate Maximum Number of Monsters','eliminate-maximum-number-of-monsters',2,1),(1922,'Count Good Numbers','count-good-numbers',2,1),(1923,'Longest Common Subpath','longest-common-subpath',3,1),(1924,'Erect the Fence II','erect-the-fence-ii',3,1),(1925,'Count Square Sum Triples','count-square-sum-triples',1,1),(1926,'Nearest Exit from Entrance in Maze','nearest-exit-from-entrance-in-maze',2,1),(1927,'Sum Game','sum-game',2,1),(1928,'Minimum Cost to Reach Destination in Time','minimum-cost-to-reach-destination-in-time',3,1),(1929,'Concatenation of Array','concatenation-of-array',1,1),(1930,'Unique Length-3 Palindromic Subsequences','unique-length-3-palindromic-subsequences',2,1),(1931,'Painting a Grid With Three Different Colors','painting-a-grid-with-three-different-colors',3,1),(1932,'Merge BSTs to Create Single BST','merge-bsts-to-create-single-bst',3,1),(1933,'Check if String Is Decomposable Into Value-Equal Substrings','check-if-string-is-decomposable-into-value-equal-substrings',1,1),(1934,'Confirmation Rate','confirmation-rate',2,1),(1935,'Maximum Number of Words You Can Type','maximum-number-of-words-you-can-type',1,1),(1936,'Add Minimum Number of Rungs','add-minimum-number-of-rungs',2,1),(1937,'Maximum Number of Points with Cost','maximum-number-of-points-with-cost',2,1),(1938,'Maximum Genetic Difference Query','maximum-genetic-difference-query',3,1),(1939,'Users That Actively Request Confirmation Messages','users-that-actively-request-confirmation-messages',1,1),(1940,'Longest Common Subsequence Between Sorted Arrays','longest-common-subsequence-between-sorted-arrays',2,1),(1941,'Check if All Characters Have Equal Number of Occurrences','check-if-all-characters-have-equal-number-of-occurrences',1,1),(1942,'The Number of the Smallest Unoccupied Chair','the-number-of-the-smallest-unoccupied-chair',2,1),(1943,'Describe the Painting','describe-the-painting',2,1),(1944,'Number of Visible People in a Queue','number-of-visible-people-in-a-queue',3,1),(1945,'Sum of Digits of String After Convert','sum-of-digits-of-string-after-convert',1,1),(1946,'Largest Number After Mutating Substring','largest-number-after-mutating-substring',2,1),(1947,'Maximum Compatibility Score Sum','maximum-compatibility-score-sum',2,1),(1948,'Delete Duplicate Folders in System','delete-duplicate-folders-in-system',3,1),(1949,'Strong Friendship','strong-friendship',2,1),(1950,'Maximum of Minimum Values in All Subarrays','maximum-of-minimum-values-in-all-subarrays',2,1),(1951,'All the Pairs With the Maximum Number of Common Followers','all-the-pairs-with-the-maximum-number-of-common-followers',2,1),(1952,'Three Divisors','three-divisors',1,1),(1953,'Maximum Number of Weeks for Which You Can Work','maximum-number-of-weeks-for-which-you-can-work',2,1),(1954,'Minimum Garden Perimeter to Collect Enough Apples','minimum-garden-perimeter-to-collect-enough-apples',2,1),(1955,'Count Number of Special Subsequences','count-number-of-special-subsequences',3,1),(1956,'Minimum Time For K Virus Variants to Spread','minimum-time-for-k-virus-variants-to-spread',3,1),(1957,'Delete Characters to Make Fancy String','delete-characters-to-make-fancy-string',1,1),(1958,'Check if Move is Legal','check-if-move-is-legal',2,1),(1959,'Minimum Total Space Wasted With K Resizing Operations','minimum-total-space-wasted-with-k-resizing-operations',2,1),(1960,'Maximum Product of the Length of Two Palindromic Substrings','maximum-product-of-the-length-of-two-palindromic-substrings',3,1),(1961,'Check If String Is a Prefix of Array','check-if-string-is-a-prefix-of-array',1,1),(1962,'Remove Stones to Minimize the Total','remove-stones-to-minimize-the-total',2,1),(1963,'Minimum Number of Swaps to Make the String Balanced','minimum-number-of-swaps-to-make-the-string-balanced',2,1),(1964,'Find the Longest Valid Obstacle Course at Each Position','find-the-longest-valid-obstacle-course-at-each-position',3,1),(1965,'Employees With Missing Information','employees-with-missing-information',1,1),(1966,'Binary Searchable Numbers in an Unsorted Array','binary-searchable-numbers-in-an-unsorted-array',2,1),(1967,'Number of Strings That Appear as Substrings in Word','number-of-strings-that-appear-as-substrings-in-word',1,1),(1968,'Array With Elements Not Equal to Average of Neighbors','array-with-elements-not-equal-to-average-of-neighbors',2,1),(1969,'Minimum Non-Zero Product of the Array Elements','minimum-non-zero-product-of-the-array-elements',2,1),(1970,'Last Day Where You Can Still Cross','last-day-where-you-can-still-cross',3,1),(1971,'Find if Path Exists in Graph','find-if-path-exists-in-graph',1,1),(1972,'First and Last Call On the Same Day','first-and-last-call-on-the-same-day',3,1),(1973,'Count Nodes Equal to Sum of Descendants','count-nodes-equal-to-sum-of-descendants',2,1),(1974,'Minimum Time to Type Word Using Special Typewriter','minimum-time-to-type-word-using-special-typewriter',1,1),(1975,'Maximum Matrix Sum','maximum-matrix-sum',2,1),(1976,'Number of Ways to Arrive at Destination','number-of-ways-to-arrive-at-destination',2,1),(1977,'Number of Ways to Separate Numbers','number-of-ways-to-separate-numbers',3,1),(1978,'Employees Whose Manager Left the Company','employees-whose-manager-left-the-company',1,1),(1979,'Find Greatest Common Divisor of Array','find-greatest-common-divisor-of-array',1,1),(1980,'Find Unique Binary String','find-unique-binary-string',2,1),(1981,'Minimize the Difference Between Target and Chosen Elements','minimize-the-difference-between-target-and-chosen-elements',2,1),(1982,'Find Array Given Subset Sums','find-array-given-subset-sums',3,1),(1983,'Widest Pair of Indices With Equal Range Sum','widest-pair-of-indices-with-equal-range-sum',2,1),(1984,'Minimum Difference Between Highest and Lowest of K Scores','minimum-difference-between-highest-and-lowest-of-k-scores',1,1),(1985,'Find the Kth Largest Integer in the Array','find-the-kth-largest-integer-in-the-array',2,1),(1986,'Minimum Number of Work Sessions to Finish the Tasks','minimum-number-of-work-sessions-to-finish-the-tasks',2,1),(1987,'Number of Unique Good Subsequences','number-of-unique-good-subsequences',3,1),(1988,'Find Cutoff Score for Each School','find-cutoff-score-for-each-school',2,1),(1989,'Maximum Number of People That Can Be Caught in Tag','maximum-number-of-people-that-can-be-caught-in-tag',2,1),(1990,'Count the Number of Experiments','count-the-number-of-experiments',2,1),(1991,'Find the Middle Index in Array','find-the-middle-index-in-array',1,1),(1992,'Find All Groups of Farmland','find-all-groups-of-farmland',2,1),(1993,'Operations on Tree','operations-on-tree',2,1),(1994,'The Number of Good Subsets','the-number-of-good-subsets',3,1),(1995,'Count Special Quadruplets','count-special-quadruplets',1,1),(1996,'The Number of Weak Characters in the Game','the-number-of-weak-characters-in-the-game',2,1),(1997,'First Day Where You Have Been in All the Rooms','first-day-where-you-have-been-in-all-the-rooms',2,1),(1998,'GCD Sort of an Array','gcd-sort-of-an-array',3,1),(1999,'Smallest Greater Multiple Made of Two Digits','smallest-greater-multiple-made-of-two-digits',2,1),(2000,'Reverse Prefix of Word','reverse-prefix-of-word',1,1),(2001,'Number of Pairs of Interchangeable Rectangles','number-of-pairs-of-interchangeable-rectangles',2,1),(2002,'Maximum Product of the Length of Two Palindromic Subsequences','maximum-product-of-the-length-of-two-palindromic-subsequences',2,1),(2003,'Smallest Missing Genetic Value in Each Subtree','smallest-missing-genetic-value-in-each-subtree',3,1),(2004,'The Number of Seniors and Juniors to Join the Company','the-number-of-seniors-and-juniors-to-join-the-company',3,1),(2005,'Subtree Removal Game with Fibonacci Tree','subtree-removal-game-with-fibonacci-tree',3,1),(2006,'Count Number of Pairs With Absolute Difference K','count-number-of-pairs-with-absolute-difference-k',1,1),(2007,'Find Original Array From Doubled Array','find-original-array-from-doubled-array',2,1),(2008,'Maximum Earnings From Taxi','maximum-earnings-from-taxi',2,1),(2009,'Minimum Number of Operations to Make Array Continuous','minimum-number-of-operations-to-make-array-continuous',3,1),(2010,'The Number of Seniors and Juniors to Join the Company II','the-number-of-seniors-and-juniors-to-join-the-company-ii',3,1),(2011,'Final Value of Variable After Performing Operations','final-value-of-variable-after-performing-operations',1,1),(2012,'Sum of Beauty in the Array','sum-of-beauty-in-the-array',2,1),(2013,'Detect Squares','detect-squares',2,1),(2014,'Longest Subsequence Repeated k Times','longest-subsequence-repeated-k-times',3,1),(2015,'Average Height of Buildings in Each Segment','average-height-of-buildings-in-each-segment',2,1),(2016,'Maximum Difference Between Increasing Elements','maximum-difference-between-increasing-elements',1,1),(2017,'Grid Game','grid-game',2,1),(2018,'Check if Word Can Be Placed In Crossword','check-if-word-can-be-placed-in-crossword',2,1),(2019,'The Score of Students Solving Math Expression','the-score-of-students-solving-math-expression',3,1),(2020,'Number of Accounts That Did Not Stream','number-of-accounts-that-did-not-stream',2,1),(2021,'Brightest Position on Street','brightest-position-on-street',2,1),(2022,'Convert 1D Array Into 2D Array','convert-1d-array-into-2d-array',1,1),(2023,'Number of Pairs of Strings With Concatenation Equal to Target','number-of-pairs-of-strings-with-concatenation-equal-to-target',2,1),(2024,'Maximize the Confusion of an Exam','maximize-the-confusion-of-an-exam',2,1),(2025,'Maximum Number of Ways to Partition an Array','maximum-number-of-ways-to-partition-an-array',3,1),(2026,'Low-Quality Problems','low-quality-problems',1,1),(2027,'Minimum Moves to Convert String','minimum-moves-to-convert-string',1,1),(2028,'Find Missing Observations','find-missing-observations',2,1),(2029,'Stone Game IX','stone-game-ix',2,1),(2030,'Smallest K-Length Subsequence With Occurrences of a Letter','smallest-k-length-subsequence-with-occurrences-of-a-letter',3,1),(2031,'Count Subarrays With More Ones Than Zeros','count-subarrays-with-more-ones-than-zeros',2,1),(2032,'Two Out of Three','two-out-of-three',1,1),(2033,'Minimum Operations to Make a Uni-Value Grid','minimum-operations-to-make-a-uni-value-grid',2,1),(2034,'Stock Price Fluctuation ','stock-price-fluctuation',2,1),(2035,'Partition Array Into Two Arrays to Minimize Sum Difference','partition-array-into-two-arrays-to-minimize-sum-difference',3,1),(2036,'Maximum Alternating Subarray Sum','maximum-alternating-subarray-sum',2,1),(2037,'Minimum Number of Moves to Seat Everyone','minimum-number-of-moves-to-seat-everyone',1,1),(2038,'Remove Colored Pieces if Both Neighbors are the Same Color','remove-colored-pieces-if-both-neighbors-are-the-same-color',2,1),(2039,'The Time When the Network Becomes Idle','the-time-when-the-network-becomes-idle',2,1),(2040,'Kth Smallest Product of Two Sorted Arrays','kth-smallest-product-of-two-sorted-arrays',3,1),(2041,'Accepted Candidates From the Interviews','accepted-candidates-from-the-interviews',2,1),(2042,'Check if Numbers Are Ascending in a Sentence','check-if-numbers-are-ascending-in-a-sentence',1,1),(2043,'Simple Bank System','simple-bank-system',2,1),(2044,'Count Number of Maximum Bitwise-OR Subsets','count-number-of-maximum-bitwise-or-subsets',2,1),(2045,'Second Minimum Time to Reach Destination','second-minimum-time-to-reach-destination',3,1),(2046,'Sort Linked List Already Sorted Using Absolute Values','sort-linked-list-already-sorted-using-absolute-values',2,1),(2047,'Number of Valid Words in a Sentence','number-of-valid-words-in-a-sentence',1,1),(2048,'Next Greater Numerically Balanced Number','next-greater-numerically-balanced-number',2,1),(2049,'Count Nodes With the Highest Score','count-nodes-with-the-highest-score',2,1),(2050,'Parallel Courses III','parallel-courses-iii',3,1),(2051,'The Category of Each Member in the Store','the-category-of-each-member-in-the-store',2,1),(2052,'Minimum Cost to Separate Sentence Into Rows','minimum-cost-to-separate-sentence-into-rows',2,1),(2053,'Kth Distinct String in an Array','kth-distinct-string-in-an-array',1,1),(2054,'Two Best Non-Overlapping Events','two-best-non-overlapping-events',2,1),(2055,'Plates Between Candles','plates-between-candles',2,1),(2056,'Number of Valid Move Combinations On Chessboard','number-of-valid-move-combinations-on-chessboard',3,1),(2057,'Smallest Index With Equal Value','smallest-index-with-equal-value',1,1),(2058,'Find the Minimum and Maximum Number of Nodes Between Critical Points','find-the-minimum-and-maximum-number-of-nodes-between-critical-points',2,1),(2059,'Minimum Operations to Convert Number','minimum-operations-to-convert-number',2,1),(2060,'Check if an Original String Exists Given Two Encoded Strings','check-if-an-original-string-exists-given-two-encoded-strings',3,1),(2061,'Number of Spaces Cleaning Robot Cleaned','number-of-spaces-cleaning-robot-cleaned',2,1),(2062,'Count Vowel Substrings of a String','count-vowel-substrings-of-a-string',1,1),(2063,'Vowels of All Substrings','vowels-of-all-substrings',2,1),(2064,'Minimized Maximum of Products Distributed to Any Store','minimized-maximum-of-products-distributed-to-any-store',2,1),(2065,'Maximum Path Quality of a Graph','maximum-path-quality-of-a-graph',3,1),(2066,'Account Balance','account-balance',2,1),(2067,'Number of Equal Count Substrings','number-of-equal-count-substrings',2,1),(2068,'Check Whether Two Strings are Almost Equivalent','check-whether-two-strings-are-almost-equivalent',1,1),(2069,'Walking Robot Simulation II','walking-robot-simulation-ii',2,1),(2070,'Most Beautiful Item for Each Query','most-beautiful-item-for-each-query',2,1),(2071,'Maximum Number of Tasks You Can Assign','maximum-number-of-tasks-you-can-assign',3,1),(2072,'The Winner University','the-winner-university',1,1),(2073,'Time Needed to Buy Tickets','time-needed-to-buy-tickets',1,1),(2074,'Reverse Nodes in Even Length Groups','reverse-nodes-in-even-length-groups',2,1),(2075,'Decode the Slanted Ciphertext','decode-the-slanted-ciphertext',2,1),(2076,'Process Restricted Friend Requests','process-restricted-friend-requests',3,1),(2077,'Paths in Maze That Lead to Same Room','paths-in-maze-that-lead-to-same-room',2,1),(2078,'Two Furthest Houses With Different Colors','two-furthest-houses-with-different-colors',1,1),(2079,'Watering Plants','watering-plants',2,1),(2080,'Range Frequency Queries','range-frequency-queries',2,1),(2081,'Sum of k-Mirror Numbers','sum-of-k-mirror-numbers',3,1),(2082,'The Number of Rich Customers','the-number-of-rich-customers',1,1),(2083,'Substrings That Begin and End With the Same Letter','substrings-that-begin-and-end-with-the-same-letter',2,1),(2084,'Drop Type 1 Orders for Customers With Type 0 Orders','drop-type-1-orders-for-customers-with-type-0-orders',2,1),(2085,'Count Common Words With One Occurrence','count-common-words-with-one-occurrence',1,1),(2086,'Minimum Number of Food Buckets to Feed the Hamsters','minimum-number-of-food-buckets-to-feed-the-hamsters',2,1),(2087,'Minimum Cost Homecoming of a Robot in a Grid','minimum-cost-homecoming-of-a-robot-in-a-grid',2,1),(2088,'Count Fertile Pyramids in a Land','count-fertile-pyramids-in-a-land',3,1),(2089,'Find Target Indices After Sorting Array','find-target-indices-after-sorting-array',1,1),(2090,'K Radius Subarray Averages','k-radius-subarray-averages',2,1),(2091,'Removing Minimum and Maximum From Array','removing-minimum-and-maximum-from-array',2,1),(2092,'Find All People With Secret','find-all-people-with-secret',3,1),(2093,'Minimum Cost to Reach City With Discounts','minimum-cost-to-reach-city-with-discounts',2,1),(2094,'Finding 3-Digit Even Numbers','finding-3-digit-even-numbers',1,1),(2095,'Delete the Middle Node of a Linked List','delete-the-middle-node-of-a-linked-list',2,1),(2096,'Step-By-Step Directions From a Binary Tree Node to Another','step-by-step-directions-from-a-binary-tree-node-to-another',2,1),(2097,'Valid Arrangement of Pairs','valid-arrangement-of-pairs',3,1),(2098,'Subsequence of Size K With the Largest Even Sum','subsequence-of-size-k-with-the-largest-even-sum',2,1),(2099,'Find Subsequence of Length K With the Largest Sum','find-subsequence-of-length-k-with-the-largest-sum',1,1),(2100,'Find Good Days to Rob the Bank','find-good-days-to-rob-the-bank',2,1),(2101,'Detonate the Maximum Bombs','detonate-the-maximum-bombs',2,1),(2102,'Sequentially Ordinal Rank Tracker','sequentially-ordinal-rank-tracker',3,1),(2103,'Rings and Rods','rings-and-rods',1,1),(2104,'Sum of Subarray Ranges','sum-of-subarray-ranges',2,1),(2105,'Watering Plants II','watering-plants-ii',2,1),(2106,'Maximum Fruits Harvested After at Most K Steps','maximum-fruits-harvested-after-at-most-k-steps',3,1),(2107,'Number of Unique Flavors After Sharing K Candies','number-of-unique-flavors-after-sharing-k-candies',2,1),(2108,'Find First Palindromic String in the Array','find-first-palindromic-string-in-the-array',1,1),(2109,'Adding Spaces to a String','adding-spaces-to-a-string',2,1),(2110,'Number of Smooth Descent Periods of a Stock','number-of-smooth-descent-periods-of-a-stock',2,1),(2111,'Minimum Operations to Make the Array K-Increasing','minimum-operations-to-make-the-array-k-increasing',3,1),(2112,'The Airport With the Most Traffic','the-airport-with-the-most-traffic',2,1),(2113,'Elements in Array After Removing and Replacing Elements','elements-in-array-after-removing-and-replacing-elements',2,1),(2114,'Maximum Number of Words Found in Sentences','maximum-number-of-words-found-in-sentences',1,1),(2115,'Find All Possible Recipes from Given Supplies','find-all-possible-recipes-from-given-supplies',2,1),(2116,'Check if a Parentheses String Can Be Valid','check-if-a-parentheses-string-can-be-valid',2,1),(2117,'Abbreviating the Product of a Range','abbreviating-the-product-of-a-range',3,1),(2118,'Build the Equation','build-the-equation',3,1),(2119,'A Number After a Double Reversal','a-number-after-a-double-reversal',1,1),(2120,'Execution of All Suffix Instructions Staying in a Grid','execution-of-all-suffix-instructions-staying-in-a-grid',2,1),(2121,'Intervals Between Identical Elements','intervals-between-identical-elements',2,1),(2122,'Recover the Original Array','recover-the-original-array',3,1),(2123,'Minimum Operations to Remove Adjacent Ones in Matrix','minimum-operations-to-remove-adjacent-ones-in-matrix',3,1),(2124,'Check if All A\'s Appears Before All B\'s','check-if-all-as-appears-before-all-bs',1,1),(2125,'Number of Laser Beams in a Bank','number-of-laser-beams-in-a-bank',2,1),(2126,'Destroying Asteroids','destroying-asteroids',2,1),(2127,'Maximum Employees to Be Invited to a Meeting','maximum-employees-to-be-invited-to-a-meeting',3,1),(2128,'Remove All Ones With Row and Column Flips','remove-all-ones-with-row-and-column-flips',2,1),(2129,'Capitalize the Title','capitalize-the-title',1,1),(2130,'Maximum Twin Sum of a Linked List','maximum-twin-sum-of-a-linked-list',2,1),(2131,'Longest Palindrome by Concatenating Two Letter Words','longest-palindrome-by-concatenating-two-letter-words',2,1),(2132,'Stamping the Grid','stamping-the-grid',3,1),(2133,'Check if Every Row and Column Contains All Numbers','check-if-every-row-and-column-contains-all-numbers',1,1),(2134,'Minimum Swaps to Group All 1\'s Together II','minimum-swaps-to-group-all-1s-together-ii',2,1),(2135,'Count Words Obtained After Adding a Letter','count-words-obtained-after-adding-a-letter',2,1),(2136,'Earliest Possible Day of Full Bloom','earliest-possible-day-of-full-bloom',3,1),(2137,'Pour Water Between Buckets to Make Water Levels Equal','pour-water-between-buckets-to-make-water-levels-equal',2,1),(2138,'Divide a String Into Groups of Size k','divide-a-string-into-groups-of-size-k',1,1),(2139,'Minimum Moves to Reach Target Score','minimum-moves-to-reach-target-score',2,1),(2140,'Solving Questions With Brainpower','solving-questions-with-brainpower',2,1),(2141,'Maximum Running Time of N Computers','maximum-running-time-of-n-computers',3,1),(2142,'The Number of Passengers in Each Bus I','the-number-of-passengers-in-each-bus-i',2,1),(2143,'Choose Numbers From Two Arrays in Range','choose-numbers-from-two-arrays-in-range',3,1),(2144,'Minimum Cost of Buying Candies With Discount','minimum-cost-of-buying-candies-with-discount',1,1),(2145,'Count the Hidden Sequences','count-the-hidden-sequences',2,1),(2146,'K Highest Ranked Items Within a Price Range','k-highest-ranked-items-within-a-price-range',2,1),(2147,'Number of Ways to Divide a Long Corridor','number-of-ways-to-divide-a-long-corridor',3,1),(2148,'Count Elements With Strictly Smaller and Greater Elements ','count-elements-with-strictly-smaller-and-greater-elements',1,1),(2149,'Rearrange Array Elements by Sign','rearrange-array-elements-by-sign',2,1),(2150,'Find All Lonely Numbers in the Array','find-all-lonely-numbers-in-the-array',2,1),(2151,'Maximum Good People Based on Statements','maximum-good-people-based-on-statements',3,1),(2152,'Minimum Number of Lines to Cover Points','minimum-number-of-lines-to-cover-points',2,1),(2153,'The Number of Passengers in Each Bus II','the-number-of-passengers-in-each-bus-ii',3,1),(2154,'Keep Multiplying Found Values by Two','keep-multiplying-found-values-by-two',1,1),(2155,'All Divisions With the Highest Score of a Binary Array','all-divisions-with-the-highest-score-of-a-binary-array',2,1),(2156,'Find Substring With Given Hash Value','find-substring-with-given-hash-value',3,1),(2157,'Groups of Strings','groups-of-strings',3,1),(2158,'Amount of New Area Painted Each Day','amount-of-new-area-painted-each-day',3,1),(2159,'Order Two Columns Independently','order-two-columns-independently',2,1),(2160,'Minimum Sum of Four Digit Number After Splitting Digits','minimum-sum-of-four-digit-number-after-splitting-digits',1,1),(2161,'Partition Array According to Given Pivot','partition-array-according-to-given-pivot',2,1),(2162,'Minimum Cost to Set Cooking Time','minimum-cost-to-set-cooking-time',2,1),(2163,'Minimum Difference in Sums After Removal of Elements','minimum-difference-in-sums-after-removal-of-elements',3,1),(2164,'Sort Even and Odd Indices Independently','sort-even-and-odd-indices-independently',1,1),(2165,'Smallest Value of the Rearranged Number','smallest-value-of-the-rearranged-number',2,1),(2166,'Design Bitset','design-bitset',2,1),(2167,'Minimum Time to Remove All Cars Containing Illegal Goods','minimum-time-to-remove-all-cars-containing-illegal-goods',3,1),(2168,'Unique Substrings With Equal Digit Frequency','unique-substrings-with-equal-digit-frequency',2,1),(2169,'Count Operations to Obtain Zero','count-operations-to-obtain-zero',1,1),(2170,'Minimum Operations to Make the Array Alternating','minimum-operations-to-make-the-array-alternating',2,1),(2171,'Removing Minimum Number of Magic Beans','removing-minimum-number-of-magic-beans',2,1),(2172,'Maximum AND Sum of Array','maximum-and-sum-of-array',3,1),(2173,'Longest Winning Streak','longest-winning-streak',3,1),(2174,'Remove All Ones With Row and Column Flips II','remove-all-ones-with-row-and-column-flips-ii',2,1),(2175,'The Change in Global Rankings','the-change-in-global-rankings',2,1),(2176,'Count Equal and Divisible Pairs in an Array','count-equal-and-divisible-pairs-in-an-array',1,1),(2177,'Find Three Consecutive Integers That Sum to a Given Number','find-three-consecutive-integers-that-sum-to-a-given-number',2,1),(2178,'Maximum Split of Positive Even Integers','maximum-split-of-positive-even-integers',2,1),(2179,'Count Good Triplets in an Array','count-good-triplets-in-an-array',3,1),(2180,'Count Integers With Even Digit Sum','count-integers-with-even-digit-sum',1,1),(2181,'Merge Nodes in Between Zeros','merge-nodes-in-between-zeros',2,1),(2182,'Construct String With Repeat Limit','construct-string-with-repeat-limit',2,1),(2183,'Count Array Pairs Divisible by K','count-array-pairs-divisible-by-k',3,1),(2184,'Number of Ways to Build Sturdy Brick Wall','number-of-ways-to-build-sturdy-brick-wall',2,1),(2185,'Counting Words With a Given Prefix','counting-words-with-a-given-prefix',1,1),(2186,'Minimum Number of Steps to Make Two Strings Anagram II','minimum-number-of-steps-to-make-two-strings-anagram-ii',2,1),(2187,'Minimum Time to Complete Trips','minimum-time-to-complete-trips',2,1),(2188,'Minimum Time to Finish the Race','minimum-time-to-finish-the-race',3,1),(2189,'Number of Ways to Build House of Cards','number-of-ways-to-build-house-of-cards',2,1),(2190,'Most Frequent Number Following Key In an Array','most-frequent-number-following-key-in-an-array',1,1),(2191,'Sort the Jumbled Numbers','sort-the-jumbled-numbers',2,1),(2192,'All Ancestors of a Node in a Directed Acyclic Graph','all-ancestors-of-a-node-in-a-directed-acyclic-graph',2,1),(2193,'Minimum Number of Moves to Make Palindrome','minimum-number-of-moves-to-make-palindrome',3,1),(2194,'Cells in a Range on an Excel Sheet','cells-in-a-range-on-an-excel-sheet',1,1),(2195,'Append K Integers With Minimal Sum','append-k-integers-with-minimal-sum',2,1),(2196,'Create Binary Tree From Descriptions','create-binary-tree-from-descriptions',2,1),(2197,'Replace Non-Coprime Numbers in Array','replace-non-coprime-numbers-in-array',3,1),(2198,'Number of Single Divisor Triplets','number-of-single-divisor-triplets',2,1),(2199,'Finding the Topic of Each Post','finding-the-topic-of-each-post',3,1),(2200,'Find All K-Distant Indices in an Array','find-all-k-distant-indices-in-an-array',1,1),(2201,'Count Artifacts That Can Be Extracted','count-artifacts-that-can-be-extracted',2,1),(2202,'Maximize the Topmost Element After K Moves','maximize-the-topmost-element-after-k-moves',2,1),(2203,'Minimum Weighted Subgraph With the Required Paths','minimum-weighted-subgraph-with-the-required-paths',3,1),(2204,'Distance to a Cycle in Undirected Graph','distance-to-a-cycle-in-undirected-graph',3,1),(2205,'The Number of Users That Are Eligible for Discount','the-number-of-users-that-are-eligible-for-discount',1,1),(2206,'Divide Array Into Equal Pairs','divide-array-into-equal-pairs',1,1),(2207,'Maximize Number of Subsequences in a String','maximize-number-of-subsequences-in-a-string',2,1),(2208,'Minimum Operations to Halve Array Sum','minimum-operations-to-halve-array-sum',2,1),(2209,'Minimum White Tiles After Covering With Carpets','minimum-white-tiles-after-covering-with-carpets',3,1),(2210,'Count Hills and Valleys in an Array','count-hills-and-valleys-in-an-array',1,1),(2211,'Count Collisions on a Road','count-collisions-on-a-road',2,1),(2212,'Maximum Points in an Archery Competition','maximum-points-in-an-archery-competition',2,1),(2213,'Longest Substring of One Repeating Character','longest-substring-of-one-repeating-character',3,1),(2214,'Minimum Health to Beat Game','minimum-health-to-beat-game',2,1),(2215,'Find the Difference of Two Arrays','find-the-difference-of-two-arrays',1,1),(2216,'Minimum Deletions to Make Array Beautiful','minimum-deletions-to-make-array-beautiful',2,1),(2217,'Find Palindrome With Fixed Length','find-palindrome-with-fixed-length',2,1),(2218,'Maximum Value of K Coins From Piles','maximum-value-of-k-coins-from-piles',3,1),(2219,'Maximum Sum Score of Array','maximum-sum-score-of-array',2,1),(2220,'Minimum Bit Flips to Convert Number','minimum-bit-flips-to-convert-number',1,1),(2221,'Find Triangular Sum of an Array','find-triangular-sum-of-an-array',2,1),(2222,'Number of Ways to Select Buildings','number-of-ways-to-select-buildings',2,1),(2223,'Sum of Scores of Built Strings','sum-of-scores-of-built-strings',3,1),(2224,'Minimum Number of Operations to Convert Time','minimum-number-of-operations-to-convert-time',1,1),(2225,'Find Players With Zero or One Losses','find-players-with-zero-or-one-losses',2,1),(2226,'Maximum Candies Allocated to K Children','maximum-candies-allocated-to-k-children',2,1),(2227,'Encrypt and Decrypt Strings','encrypt-and-decrypt-strings',3,1),(2228,'Users With Two Purchases Within Seven Days','users-with-two-purchases-within-seven-days',2,1),(2229,'Check if an Array Is Consecutive','check-if-an-array-is-consecutive',1,1),(2230,'The Users That Are Eligible for Discount','the-users-that-are-eligible-for-discount',1,1),(2231,'Largest Number After Digit Swaps by Parity','largest-number-after-digit-swaps-by-parity',1,1),(2232,'Minimize Result by Adding Parentheses to Expression','minimize-result-by-adding-parentheses-to-expression',2,1),(2233,'Maximum Product After K Increments','maximum-product-after-k-increments',2,1),(2234,'Maximum Total Beauty of the Gardens','maximum-total-beauty-of-the-gardens',3,1),(2235,'Add Two Integers','add-two-integers',1,1),(2236,'Root Equals Sum of Children','root-equals-sum-of-children',1,1),(2237,'Count Positions on Street With Required Brightness','count-positions-on-street-with-required-brightness',2,1),(2238,'Number of Times a Driver Was a Passenger','number-of-times-a-driver-was-a-passenger',2,1),(2239,'Find Closest Number to Zero','find-closest-number-to-zero',1,1),(2240,'Number of Ways to Buy Pens and Pencils','number-of-ways-to-buy-pens-and-pencils',2,1),(2241,'Design an ATM Machine','design-an-atm-machine',2,1),(2242,'Maximum Score of a Node Sequence','maximum-score-of-a-node-sequence',3,1),(2243,'Calculate Digit Sum of a String','calculate-digit-sum-of-a-string',1,1),(2244,'Minimum Rounds to Complete All Tasks','minimum-rounds-to-complete-all-tasks',2,1),(2245,'Maximum Trailing Zeros in a Cornered Path','maximum-trailing-zeros-in-a-cornered-path',2,1),(2246,'Longest Path With Different Adjacent Characters','longest-path-with-different-adjacent-characters',3,1),(2247,'Maximum Cost of Trip With K Highways','maximum-cost-of-trip-with-k-highways',3,1),(2248,'Intersection of Multiple Arrays','intersection-of-multiple-arrays',1,1),(2249,'Count Lattice Points Inside a Circle','count-lattice-points-inside-a-circle',2,1),(2250,'Count Number of Rectangles Containing Each Point','count-number-of-rectangles-containing-each-point',2,1),(2251,'Number of Flowers in Full Bloom','number-of-flowers-in-full-bloom',3,1),(2252,'Dynamic Pivoting of a Table','dynamic-pivoting-of-a-table',3,1),(2253,'Dynamic Unpivoting of a Table','dynamic-unpivoting-of-a-table',3,1),(2254,'Design Video Sharing Platform','design-video-sharing-platform',3,1),(2255,'Count Prefixes of a Given String','count-prefixes-of-a-given-string',1,1),(2256,'Minimum Average Difference','minimum-average-difference',2,1),(2257,'Count Unguarded Cells in the Grid','count-unguarded-cells-in-the-grid',2,1),(2258,'Escape the Spreading Fire','escape-the-spreading-fire',3,1),(2259,'Remove Digit From Number to Maximize Result','remove-digit-from-number-to-maximize-result',1,1),(2260,'Minimum Consecutive Cards to Pick Up','minimum-consecutive-cards-to-pick-up',2,1),(2261,'K Divisible Elements Subarrays','k-divisible-elements-subarrays',2,1),(2262,'Total Appeal of A String','total-appeal-of-a-string',3,1),(2263,'Make Array Non-decreasing or Non-increasing','make-array-non-decreasing-or-non-increasing',3,1),(2264,'Largest 3-Same-Digit Number in String','largest-3-same-digit-number-in-string',1,1),(2265,'Count Nodes Equal to Average of Subtree','count-nodes-equal-to-average-of-subtree',2,1),(2266,'Count Number of Texts','count-number-of-texts',2,1),(2267,' Check if There Is a Valid Parentheses String Path','check-if-there-is-a-valid-parentheses-string-path',3,1),(2268,'Minimum Number of Keypresses','minimum-number-of-keypresses',2,1),(2269,'Find the K-Beauty of a Number','find-the-k-beauty-of-a-number',1,1),(2270,'Number of Ways to Split Array','number-of-ways-to-split-array',2,1),(2271,'Maximum White Tiles Covered by a Carpet','maximum-white-tiles-covered-by-a-carpet',2,1),(2272,'Substring With Largest Variance','substring-with-largest-variance',3,1),(2273,'Find Resultant Array After Removing Anagrams','find-resultant-array-after-removing-anagrams',1,1),(2274,'Maximum Consecutive Floors Without Special Floors','maximum-consecutive-floors-without-special-floors',2,1),(2275,'Largest Combination With Bitwise AND Greater Than Zero','largest-combination-with-bitwise-and-greater-than-zero',2,1),(2276,'Count Integers in Intervals','count-integers-in-intervals',3,1),(2277,'Closest Node to Path in Tree','closest-node-to-path-in-tree',3,1),(2278,'Percentage of Letter in String','percentage-of-letter-in-string',1,1),(2279,'Maximum Bags With Full Capacity of Rocks','maximum-bags-with-full-capacity-of-rocks',2,1),(2280,'Minimum Lines to Represent a Line Chart','minimum-lines-to-represent-a-line-chart',2,1),(2281,'Sum of Total Strength of Wizards','sum-of-total-strength-of-wizards',3,1),(2282,'Number of People That Can Be Seen in a Grid','number-of-people-that-can-be-seen-in-a-grid',2,1),(2283,'Check if Number Has Equal Digit Count and Digit Value','check-if-number-has-equal-digit-count-and-digit-value',1,1),(2284,'Sender With Largest Word Count','sender-with-largest-word-count',2,1),(2285,'Maximum Total Importance of Roads','maximum-total-importance-of-roads',2,1),(2286,'Booking Concert Tickets in Groups','booking-concert-tickets-in-groups',3,1),(2287,'Rearrange Characters to Make Target String','rearrange-characters-to-make-target-string',1,1),(2288,'Apply Discount to Prices','apply-discount-to-prices',2,1),(2289,'Steps to Make Array Non-decreasing','steps-to-make-array-non-decreasing',2,1),(2290,'Minimum Obstacle Removal to Reach Corner','minimum-obstacle-removal-to-reach-corner',3,1),(2291,'Maximum Profit From Trading Stocks','maximum-profit-from-trading-stocks',2,1),(2292,'Products With Three or More Orders in Two Consecutive Years','products-with-three-or-more-orders-in-two-consecutive-years',2,1),(2293,'Min Max Game','min-max-game',1,1),(2294,'Partition Array Such That Maximum Difference Is K','partition-array-such-that-maximum-difference-is-k',2,1),(2295,'Replace Elements in an Array','replace-elements-in-an-array',2,1),(2296,'Design a Text Editor','design-a-text-editor',3,1),(2297,'Jump Game VIII','jump-game-viii',2,1),(2298,'Tasks Count in the Weekend','tasks-count-in-the-weekend',2,1),(2299,'Strong Password Checker II','strong-password-checker-ii',1,1),(2300,'Successful Pairs of Spells and Potions','successful-pairs-of-spells-and-potions',2,1),(2301,'Match Substring After Replacement','match-substring-after-replacement',3,1),(2302,'Count Subarrays With Score Less Than K','count-subarrays-with-score-less-than-k',3,1),(2303,'Calculate Amount Paid in Taxes','calculate-amount-paid-in-taxes',1,1),(2304,'Minimum Path Cost in a Grid','minimum-path-cost-in-a-grid',2,1),(2305,'Fair Distribution of Cookies','fair-distribution-of-cookies',2,1),(2306,'Naming a Company','naming-a-company',3,1),(2307,'Check for Contradictions in Equations','check-for-contradictions-in-equations',3,1),(2308,'Arrange Table by Gender','arrange-table-by-gender',2,1),(2309,'Greatest English Letter in Upper and Lower Case','greatest-english-letter-in-upper-and-lower-case',1,1),(2310,'Sum of Numbers With Units Digit K','sum-of-numbers-with-units-digit-k',2,1),(2311,'Longest Binary Subsequence Less Than or Equal to K','longest-binary-subsequence-less-than-or-equal-to-k',2,1),(2312,'Selling Pieces of Wood','selling-pieces-of-wood',3,1),(2313,'Minimum Flips in Binary Tree to Get Result','minimum-flips-in-binary-tree-to-get-result',3,1),(2314,'The First Day of the Maximum Recorded Degree in Each City','the-first-day-of-the-maximum-recorded-degree-in-each-city',2,1),(2315,'Count Asterisks','count-asterisks',1,1),(2316,'Count Unreachable Pairs of Nodes in an Undirected Graph','count-unreachable-pairs-of-nodes-in-an-undirected-graph',2,1),(2317,'Maximum XOR After Operations ','maximum-xor-after-operations',2,1),(2318,'Number of Distinct Roll Sequences','number-of-distinct-roll-sequences',3,1),(2319,'Check if Matrix Is X-Matrix','check-if-matrix-is-x-matrix',1,1),(2320,'Count Number of Ways to Place Houses','count-number-of-ways-to-place-houses',2,1),(2321,'Maximum Score Of Spliced Array','maximum-score-of-spliced-array',3,1),(2322,'Minimum Score After Removals on a Tree','minimum-score-after-removals-on-a-tree',3,1),(2323,'Find Minimum Time to Finish All Jobs II','find-minimum-time-to-finish-all-jobs-ii',2,1),(2324,'Product Sales Analysis IV','product-sales-analysis-iv',2,1),(2325,'Decode the Message','decode-the-message',1,1),(2326,'Spiral Matrix IV','spiral-matrix-iv',2,1),(2327,'Number of People Aware of a Secret','number-of-people-aware-of-a-secret',2,1),(2328,'Number of Increasing Paths in a Grid','number-of-increasing-paths-in-a-grid',3,1),(2329,'Product Sales Analysis V','product-sales-analysis-v',1,1),(2330,'Valid Palindrome IV','valid-palindrome-iv',2,1),(2331,'Evaluate Boolean Binary Tree','evaluate-boolean-binary-tree',1,1),(2332,'The Latest Time to Catch a Bus','the-latest-time-to-catch-a-bus',2,1),(2333,'Minimum Sum of Squared Difference','minimum-sum-of-squared-difference',2,1),(2334,'Subarray With Elements Greater Than Varying Threshold','subarray-with-elements-greater-than-varying-threshold',3,1),(2335,'Minimum Amount of Time to Fill Cups','minimum-amount-of-time-to-fill-cups',1,1),(2336,'Smallest Number in Infinite Set','smallest-number-in-infinite-set',2,1),(2337,'Move Pieces to Obtain a String','move-pieces-to-obtain-a-string',2,1),(2338,'Count the Number of Ideal Arrays','count-the-number-of-ideal-arrays',3,1),(2339,'All the Matches of the League','all-the-matches-of-the-league',1,1),(2340,'Minimum Adjacent Swaps to Make a Valid Array','minimum-adjacent-swaps-to-make-a-valid-array',2,1),(2341,'Maximum Number of Pairs in Array','maximum-number-of-pairs-in-array',1,1),(2342,'Max Sum of a Pair With Equal Sum of Digits','max-sum-of-a-pair-with-equal-sum-of-digits',2,1),(2343,'Query Kth Smallest Trimmed Number','query-kth-smallest-trimmed-number',2,1),(2344,'Minimum Deletions to Make Array Divisible','minimum-deletions-to-make-array-divisible',3,1),(2345,'Finding the Number of Visible Mountains','finding-the-number-of-visible-mountains',2,1),(2346,'Compute the Rank as a Percentage','compute-the-rank-as-a-percentage',2,1),(2347,'Best Poker Hand','best-poker-hand',1,1),(2348,'Number of Zero-Filled Subarrays','number-of-zero-filled-subarrays',2,1),(2349,'Design a Number Container System','design-a-number-container-system',2,1),(2350,'Shortest Impossible Sequence of Rolls','shortest-impossible-sequence-of-rolls',3,1),(2351,'First Letter to Appear Twice','first-letter-to-appear-twice',1,1),(2352,'Equal Row and Column Pairs','equal-row-and-column-pairs',2,1),(2353,'Design a Food Rating System','design-a-food-rating-system',2,1),(2354,'Number of Excellent Pairs','number-of-excellent-pairs',3,1),(2355,'Maximum Number of Books You Can Take','maximum-number-of-books-you-can-take',3,1),(2356,'Number of Unique Subjects Taught by Each Teacher','number-of-unique-subjects-taught-by-each-teacher',1,1),(2357,'Make Array Zero by Subtracting Equal Amounts','make-array-zero-by-subtracting-equal-amounts',1,1),(2358,'Maximum Number of Groups Entering a Competition','maximum-number-of-groups-entering-a-competition',2,1),(2359,'Find Closest Node to Given Two Nodes','find-closest-node-to-given-two-nodes',2,1),(2360,'Longest Cycle in a Graph','longest-cycle-in-a-graph',3,1),(2361,'Minimum Costs Using the Train Line','minimum-costs-using-the-train-line',3,1),(2362,'Generate the Invoice','generate-the-invoice',3,1),(2363,'Merge Similar Items','merge-similar-items',1,1),(2364,'Count Number of Bad Pairs','count-number-of-bad-pairs',2,1),(2365,'Task Scheduler II','task-scheduler-ii',2,1),(2366,'Minimum Replacements to Sort the Array','minimum-replacements-to-sort-the-array',3,1),(2367,'Number of Arithmetic Triplets','number-of-arithmetic-triplets',1,1),(2368,'Reachable Nodes With Restrictions','reachable-nodes-with-restrictions',2,1),(2369,'Check if There is a Valid Partition For The Array','check-if-there-is-a-valid-partition-for-the-array',2,1),(2370,'Longest Ideal Subsequence','longest-ideal-subsequence',2,1),(2371,'Minimize Maximum Value in a Grid','minimize-maximum-value-in-a-grid',3,1),(2372,'Calculate the Influence of Each Salesperson','calculate-the-influence-of-each-salesperson',2,1),(2373,'Largest Local Values in a Matrix','largest-local-values-in-a-matrix',1,1),(2374,'Node With Highest Edge Score','node-with-highest-edge-score',2,1),(2375,'Construct Smallest Number From DI String','construct-smallest-number-from-di-string',2,1),(2376,'Count Special Integers','count-special-integers',3,1),(2377,'Sort the Olympic Table','sort-the-olympic-table',1,1),(2378,'Choose Edges to Maximize Score in a Tree','choose-edges-to-maximize-score-in-a-tree',2,1),(2379,'Minimum Recolors to Get K Consecutive Black Blocks','minimum-recolors-to-get-k-consecutive-black-blocks',1,1),(2380,'Time Needed to Rearrange a Binary String','time-needed-to-rearrange-a-binary-string',2,1),(2381,'Shifting Letters II','shifting-letters-ii',2,1),(2382,'Maximum Segment Sum After Removals','maximum-segment-sum-after-removals',3,1),(2383,'Minimum Hours of Training to Win a Competition','minimum-hours-of-training-to-win-a-competition',1,1),(2384,'Largest Palindromic Number','largest-palindromic-number',2,1),(2385,'Amount of Time for Binary Tree to Be Infected','amount-of-time-for-binary-tree-to-be-infected',2,1),(2386,'Find the K-Sum of an Array','find-the-k-sum-of-an-array',3,1),(2387,'Median of a Row Wise Sorted Matrix','median-of-a-row-wise-sorted-matrix',2,1),(2388,'Change Null Values in a Table to the Previous Value','change-null-values-in-a-table-to-the-previous-value',2,1),(2389,'Longest Subsequence With Limited Sum','longest-subsequence-with-limited-sum',1,1),(2390,'Removing Stars From a String','removing-stars-from-a-string',2,1),(2391,'Minimum Amount of Time to Collect Garbage','minimum-amount-of-time-to-collect-garbage',2,1),(2392,'Build a Matrix With Conditions','build-a-matrix-with-conditions',3,1),(2393,'Count Strictly Increasing Subarrays','count-strictly-increasing-subarrays',2,1),(2394,'Employees With Deductions','employees-with-deductions',2,1),(2395,'Find Subarrays With Equal Sum','find-subarrays-with-equal-sum',1,1),(2396,'Strictly Palindromic Number','strictly-palindromic-number',2,1),(2397,'Maximum Rows Covered by Columns','maximum-rows-covered-by-columns',2,1),(2398,'Maximum Number of Robots Within Budget','maximum-number-of-robots-within-budget',3,1),(2399,'Check Distances Between Same Letters','check-distances-between-same-letters',1,1),(2400,'Number of Ways to Reach a Position After Exactly k Steps','number-of-ways-to-reach-a-position-after-exactly-k-steps',2,1),(2401,'Longest Nice Subarray','longest-nice-subarray',2,1),(2402,'Meeting Rooms III','meeting-rooms-iii',3,1),(2403,'Minimum Time to Kill All Monsters','minimum-time-to-kill-all-monsters',3,1),(2404,'Most Frequent Even Element','most-frequent-even-element',1,1),(2405,'Optimal Partition of String','optimal-partition-of-string',2,1),(2406,'Divide Intervals Into Minimum Number of Groups','divide-intervals-into-minimum-number-of-groups',2,1),(2407,'Longest Increasing Subsequence II','longest-increasing-subsequence-ii',3,1),(2408,'Design SQL','design-sql',2,1),(2409,'Count Days Spent Together','count-days-spent-together',1,1),(2410,'Maximum Matching of Players With Trainers','maximum-matching-of-players-with-trainers',2,1),(2411,'Smallest Subarrays With Maximum Bitwise OR','smallest-subarrays-with-maximum-bitwise-or',2,1),(2412,'Minimum Money Required Before Transactions','minimum-money-required-before-transactions',3,1),(2413,'Smallest Even Multiple','smallest-even-multiple',1,1),(2414,'Length of the Longest Alphabetical Continuous Substring','length-of-the-longest-alphabetical-continuous-substring',2,1),(2415,'Reverse Odd Levels of Binary Tree','reverse-odd-levels-of-binary-tree',2,1),(2416,'Sum of Prefix Scores of Strings','sum-of-prefix-scores-of-strings',3,1),(2417,'Closest Fair Integer','closest-fair-integer',2,1),(2418,'Sort the People','sort-the-people',1,1),(2419,'Longest Subarray With Maximum Bitwise AND','longest-subarray-with-maximum-bitwise-and',2,1),(2420,'Find All Good Indices','find-all-good-indices',2,1),(2421,'Number of Good Paths','number-of-good-paths',3,1),(2422,'Merge Operations to Turn Array Into a Palindrome','merge-operations-to-turn-array-into-a-palindrome',2,1),(2423,'Remove Letter To Equalize Frequency','remove-letter-to-equalize-frequency',1,1),(2424,'Longest Uploaded Prefix','longest-uploaded-prefix',2,1),(2425,'Bitwise XOR of All Pairings','bitwise-xor-of-all-pairings',2,1),(2426,'Number of Pairs Satisfying Inequality','number-of-pairs-satisfying-inequality',3,1),(2427,'Number of Common Factors','number-of-common-factors',1,1),(2428,'Maximum Sum of an Hourglass','maximum-sum-of-an-hourglass',2,1),(2429,'Minimize XOR','minimize-xor',2,1),(2430,'Maximum Deletions on a String','maximum-deletions-on-a-string',3,1),(2431,'Maximize Total Tastiness of Purchased Fruits','maximize-total-tastiness-of-purchased-fruits',2,1),(2432,'The Employee That Worked on the Longest Task','the-employee-that-worked-on-the-longest-task',1,1),(2433,'Find The Original Array of Prefix Xor','find-the-original-array-of-prefix-xor',2,1),(2434,'Using a Robot to Print the Lexicographically Smallest String','using-a-robot-to-print-the-lexicographically-smallest-string',2,1),(2435,'Paths in Matrix Whose Sum Is Divisible by K','paths-in-matrix-whose-sum-is-divisible-by-k',3,1),(2436,'Minimum Split Into Subarrays With GCD Greater Than One','minimum-split-into-subarrays-with-gcd-greater-than-one',2,1),(2437,'Number of Valid Clock Times','number-of-valid-clock-times',1,1),(2438,'Range Product Queries of Powers','range-product-queries-of-powers',2,1),(2439,'Minimize Maximum of Array','minimize-maximum-of-array',2,1),(2440,'Create Components With Same Value','create-components-with-same-value',3,1),(2441,'Largest Positive Integer That Exists With Its Negative','largest-positive-integer-that-exists-with-its-negative',1,1),(2442,'Count Number of Distinct Integers After Reverse Operations','count-number-of-distinct-integers-after-reverse-operations',2,1),(2443,'Sum of Number and Its Reverse','sum-of-number-and-its-reverse',2,1),(2444,'Count Subarrays With Fixed Bounds','count-subarrays-with-fixed-bounds',3,1),(2445,'Number of Nodes With Value One','number-of-nodes-with-value-one',2,1),(2446,'Determine if Two Events Have Conflict','determine-if-two-events-have-conflict',1,1),(2447,'Number of Subarrays With GCD Equal to K','number-of-subarrays-with-gcd-equal-to-k',2,1),(2448,'Minimum Cost to Make Array Equal','minimum-cost-to-make-array-equal',3,1),(2449,'Minimum Number of Operations to Make Arrays Similar','minimum-number-of-operations-to-make-arrays-similar',3,1),(2450,'Number of Distinct Binary Strings After Applying Operations','number-of-distinct-binary-strings-after-applying-operations',2,1),(2451,'Odd String Difference','odd-string-difference',1,1),(2452,'Words Within Two Edits of Dictionary','words-within-two-edits-of-dictionary',2,1),(2453,'Destroy Sequential Targets','destroy-sequential-targets',2,1),(2454,'Next Greater Element IV','next-greater-element-iv',3,1),(2455,'Average Value of Even Numbers That Are Divisible by Three','average-value-of-even-numbers-that-are-divisible-by-three',1,1),(2456,'Most Popular Video Creator','most-popular-video-creator',2,1),(2457,'Minimum Addition to Make Integer Beautiful','minimum-addition-to-make-integer-beautiful',2,1),(2458,'Height of Binary Tree After Subtree Removal Queries','height-of-binary-tree-after-subtree-removal-queries',3,1),(2459,'Sort Array by Moving Items to Empty Space','sort-array-by-moving-items-to-empty-space',3,1),(2460,'Apply Operations to an Array','apply-operations-to-an-array',1,1),(2461,'Maximum Sum of Distinct Subarrays With Length K','maximum-sum-of-distinct-subarrays-with-length-k',2,1),(2462,'Total Cost to Hire K Workers','total-cost-to-hire-k-workers',2,1),(2463,'Minimum Total Distance Traveled','minimum-total-distance-traveled',3,1),(2464,'Minimum Subarrays in a Valid Split','minimum-subarrays-in-a-valid-split',2,1),(2465,'Number of Distinct Averages','number-of-distinct-averages',1,1),(2466,'Count Ways To Build Good Strings','count-ways-to-build-good-strings',2,1),(2467,'Most Profitable Path in a Tree','most-profitable-path-in-a-tree',2,1),(2468,'Split Message Based on Limit','split-message-based-on-limit',3,1),(2469,'Convert the Temperature','convert-the-temperature',1,1),(2470,'Number of Subarrays With LCM Equal to K','number-of-subarrays-with-lcm-equal-to-k',2,1),(2471,'Minimum Number of Operations to Sort a Binary Tree by Level','minimum-number-of-operations-to-sort-a-binary-tree-by-level',2,1),(2472,'Maximum Number of Non-overlapping Palindrome Substrings','maximum-number-of-non-overlapping-palindrome-substrings',3,1),(2473,'Minimum Cost to Buy Apples','minimum-cost-to-buy-apples',2,1),(2474,'Customers With Strictly Increasing Purchases','customers-with-strictly-increasing-purchases',3,1),(2475,'Number of Unequal Triplets in Array','number-of-unequal-triplets-in-array',1,1),(2476,'Closest Nodes Queries in a Binary Search Tree','closest-nodes-queries-in-a-binary-search-tree',2,1),(2477,'Minimum Fuel Cost to Report to the Capital','minimum-fuel-cost-to-report-to-the-capital',2,1),(2478,'Number of Beautiful Partitions','number-of-beautiful-partitions',3,1),(2479,'Maximum XOR of Two Non-Overlapping Subtrees','maximum-xor-of-two-non-overlapping-subtrees',3,1),(2480,'Form a Chemical Bond','form-a-chemical-bond',1,1),(2481,'Minimum Cuts to Divide a Circle','minimum-cuts-to-divide-a-circle',1,1),(2482,'Difference Between Ones and Zeros in Row and Column','difference-between-ones-and-zeros-in-row-and-column',2,1),(2483,'Minimum Penalty for a Shop','minimum-penalty-for-a-shop',2,1),(2484,'Count Palindromic Subsequences','count-palindromic-subsequences',3,1),(2485,'Find the Pivot Integer','find-the-pivot-integer',1,1),(2486,'Append Characters to String to Make Subsequence','append-characters-to-string-to-make-subsequence',2,1),(2487,'Remove Nodes From Linked List','remove-nodes-from-linked-list',2,1),(2488,'Count Subarrays With Median K','count-subarrays-with-median-k',3,1),(2489,'Number of Substrings With Fixed Ratio','number-of-substrings-with-fixed-ratio',2,1),(2490,'Circular Sentence','circular-sentence',1,1),(2491,'Divide Players Into Teams of Equal Skill','divide-players-into-teams-of-equal-skill',2,1),(2492,'Minimum Score of a Path Between Two Cities','minimum-score-of-a-path-between-two-cities',2,1),(2493,'Divide Nodes Into the Maximum Number of Groups','divide-nodes-into-the-maximum-number-of-groups',3,1),(2494,'Merge Overlapping Events in the Same Hall','merge-overlapping-events-in-the-same-hall',3,1),(2495,'Number of Subarrays Having Even Product','number-of-subarrays-having-even-product',2,1),(2496,'Maximum Value of a String in an Array','maximum-value-of-a-string-in-an-array',1,1),(2497,'Maximum Star Sum of a Graph','maximum-star-sum-of-a-graph',2,1),(2498,'Frog Jump II','frog-jump-ii',2,1),(2499,'Minimum Total Cost to Make Arrays Unequal','minimum-total-cost-to-make-arrays-unequal',3,1),(2500,'Delete Greatest Value in Each Row','delete-greatest-value-in-each-row',1,1),(2501,'Longest Square Streak in an Array','longest-square-streak-in-an-array',2,1),(2502,'Design Memory Allocator','design-memory-allocator',2,1),(2503,'Maximum Number of Points From Grid Queries','maximum-number-of-points-from-grid-queries',3,1),(2504,'Concatenate the Name and the Profession','concatenate-the-name-and-the-profession',1,1),(2505,'Bitwise OR of All Subsequence Sums','bitwise-or-of-all-subsequence-sums',2,1),(2506,'Count Pairs Of Similar Strings','count-pairs-of-similar-strings',1,1),(2507,'Smallest Value After Replacing With Sum of Prime Factors','smallest-value-after-replacing-with-sum-of-prime-factors',2,1),(2508,'Add Edges to Make Degrees of All Nodes Even','add-edges-to-make-degrees-of-all-nodes-even',3,1),(2509,'Cycle Length Queries in a Tree','cycle-length-queries-in-a-tree',3,1),(2510,'Check if There is a Path With Equal Number of 0\'s And 1\'s','check-if-there-is-a-path-with-equal-number-of-0s-and-1s',2,1),(2511,'Maximum Enemy Forts That Can Be Captured','maximum-enemy-forts-that-can-be-captured',1,1),(2512,'Reward Top K Students','reward-top-k-students',2,1),(2513,'Minimize the Maximum of Two Arrays','minimize-the-maximum-of-two-arrays',2,1),(2514,'Count Anagrams','count-anagrams',3,1),(2515,'Shortest Distance to Target String in a Circular Array','shortest-distance-to-target-string-in-a-circular-array',1,1),(2516,'Take K of Each Character From Left and Right','take-k-of-each-character-from-left-and-right',2,1),(2517,'Maximum Tastiness of Candy Basket','maximum-tastiness-of-candy-basket',2,1),(2518,'Number of Great Partitions','number-of-great-partitions',3,1),(2519,'Count the Number of K-Big Indices','count-the-number-of-k-big-indices',3,1),(2520,'Count the Digits That Divide a Number','count-the-digits-that-divide-a-number',1,1),(2521,'Distinct Prime Factors of Product of Array','distinct-prime-factors-of-product-of-array',2,1),(2522,'Partition String Into Substrings With Values at Most K','partition-string-into-substrings-with-values-at-most-k',2,1),(2523,'Closest Prime Numbers in Range','closest-prime-numbers-in-range',2,1),(2524,'Maximum Frequency Score of a Subarray','maximum-frequency-score-of-a-subarray',3,1),(2525,'Categorize Box According to Criteria','categorize-box-according-to-criteria',1,1),(2526,'Find Consecutive Integers from a Data Stream','find-consecutive-integers-from-a-data-stream',2,1),(2527,'Find Xor-Beauty of Array','find-xor-beauty-of-array',2,1),(2528,'Maximize the Minimum Powered City','maximize-the-minimum-powered-city',3,1),(2529,'Maximum Count of Positive Integer and Negative Integer','maximum-count-of-positive-integer-and-negative-integer',1,1),(2530,'Maximal Score After Applying K Operations','maximal-score-after-applying-k-operations',2,1),(2531,'Make Number of Distinct Characters Equal','make-number-of-distinct-characters-equal',2,1),(2532,'Time to Cross a Bridge','time-to-cross-a-bridge',3,1),(2533,'Number of Good Binary Strings','number-of-good-binary-strings',2,1),(2534,'Time Taken to Cross the Door','time-taken-to-cross-the-door',3,1),(2535,'Difference Between Element Sum and Digit Sum of an Array','difference-between-element-sum-and-digit-sum-of-an-array',1,1),(2536,'Increment Submatrices by One','increment-submatrices-by-one',2,1),(2537,'Count the Number of Good Subarrays','count-the-number-of-good-subarrays',2,1),(2538,'Difference Between Maximum and Minimum Price Sum','difference-between-maximum-and-minimum-price-sum',3,1),(2539,'Count the Number of Good Subsequences','count-the-number-of-good-subsequences',2,1),(2540,'Minimum Common Value','minimum-common-value',1,1),(2541,'Minimum Operations to Make Array Equal II','minimum-operations-to-make-array-equal-ii',2,1),(2542,'Maximum Subsequence Score','maximum-subsequence-score',2,1),(2543,'Check if Point Is Reachable','check-if-point-is-reachable',3,1),(2544,'Alternating Digit Sum','alternating-digit-sum',1,1),(2545,'Sort the Students by Their Kth Score','sort-the-students-by-their-kth-score',2,1),(2546,'Apply Bitwise Operations to Make Strings Equal','apply-bitwise-operations-to-make-strings-equal',2,1),(2547,'Minimum Cost to Split an Array','minimum-cost-to-split-an-array',3,1),(2548,'Maximum Price to Fill a Bag','maximum-price-to-fill-a-bag',2,1),(2549,'Count Distinct Numbers on Board','count-distinct-numbers-on-board',1,1),(2550,'Count Collisions of Monkeys on a Polygon','count-collisions-of-monkeys-on-a-polygon',2,1),(2551,'Put Marbles in Bags','put-marbles-in-bags',3,1),(2552,'Count Increasing Quadruplets','count-increasing-quadruplets',3,1),(2553,'Separate the Digits in an Array','separate-the-digits-in-an-array',1,1),(2554,'Maximum Number of Integers to Choose From a Range I','maximum-number-of-integers-to-choose-from-a-range-i',2,1),(2555,'Maximize Win From Two Segments','maximize-win-from-two-segments',2,1),(2556,'Disconnect Path in a Binary Matrix by at Most One Flip','disconnect-path-in-a-binary-matrix-by-at-most-one-flip',2,1),(2557,'Maximum Number of Integers to Choose From a Range II','maximum-number-of-integers-to-choose-from-a-range-ii',2,1),(2558,'Take Gifts From the Richest Pile','take-gifts-from-the-richest-pile',1,1),(2559,'Count Vowel Strings in Ranges','count-vowel-strings-in-ranges',2,1),(2560,'House Robber IV','house-robber-iv',2,1),(2561,'Rearranging Fruits','rearranging-fruits',3,1),(2562,'Find the Array Concatenation Value','find-the-array-concatenation-value',1,1),(2563,'Count the Number of Fair Pairs','count-the-number-of-fair-pairs',2,1),(2564,'Substring XOR Queries','substring-xor-queries',2,1),(2565,'Subsequence With the Minimum Score','subsequence-with-the-minimum-score',3,1),(2566,'Maximum Difference by Remapping a Digit','maximum-difference-by-remapping-a-digit',1,1),(2567,'Minimum Score by Changing Two Elements','minimum-score-by-changing-two-elements',2,1),(2568,'Minimum Impossible OR','minimum-impossible-or',2,1),(2569,'Handling Sum Queries After Update','handling-sum-queries-after-update',3,1),(2570,'Merge Two 2D Arrays by Summing Values','merge-two-2d-arrays-by-summing-values',1,1),(2571,'Minimum Operations to Reduce an Integer to 0','minimum-operations-to-reduce-an-integer-to-0',2,1),(2572,'Count the Number of Square-Free Subsets','count-the-number-of-square-free-subsets',2,1),(2573,'Find the String with LCP','find-the-string-with-lcp',3,1),(2574,'Left and Right Sum Differences','left-and-right-sum-differences',1,1),(2575,'Find the Divisibility Array of a String','find-the-divisibility-array-of-a-string',2,1),(2576,'Find the Maximum Number of Marked Indices','find-the-maximum-number-of-marked-indices',2,1),(2577,'Minimum Time to Visit a Cell In a Grid','minimum-time-to-visit-a-cell-in-a-grid',3,1),(2578,'Split With Minimum Sum','split-with-minimum-sum',1,1),(2579,'Count Total Number of Colored Cells','count-total-number-of-colored-cells',2,1),(2580,'Count Ways to Group Overlapping Ranges','count-ways-to-group-overlapping-ranges',2,1),(2581,'Count Number of Possible Root Nodes','count-number-of-possible-root-nodes',3,1),(2582,'Pass the Pillow','pass-the-pillow',1,1),(2583,'Kth Largest Sum in a Binary Tree','kth-largest-sum-in-a-binary-tree',2,1),(2584,'Split the Array to Make Coprime Products','split-the-array-to-make-coprime-products',3,1),(2585,'Number of Ways to Earn Points','number-of-ways-to-earn-points',3,1),(2586,'Count the Number of Vowel Strings in Range','count-the-number-of-vowel-strings-in-range',1,1),(2587,'Rearrange Array to Maximize Prefix Score','rearrange-array-to-maximize-prefix-score',2,1),(2588,'Count the Number of Beautiful Subarrays','count-the-number-of-beautiful-subarrays',2,1),(2589,'Minimum Time to Complete All Tasks','minimum-time-to-complete-all-tasks',3,1),(2590,'Design a Todo List','design-a-todo-list',2,1),(2591,'Distribute Money to Maximum Children','distribute-money-to-maximum-children',1,1),(2592,'Maximize Greatness of an Array','maximize-greatness-of-an-array',2,1),(2593,'Find Score of an Array After Marking All Elements','find-score-of-an-array-after-marking-all-elements',2,1),(2594,'Minimum Time to Repair Cars','minimum-time-to-repair-cars',2,1),(2595,'Number of Even and Odd Bits','number-of-even-and-odd-bits',1,1),(2596,'Check Knight Tour Configuration','check-knight-tour-configuration',2,1),(2597,'The Number of Beautiful Subsets','the-number-of-beautiful-subsets',2,1),(2598,'Smallest Missing Non-negative Integer After Operations','smallest-missing-non-negative-integer-after-operations',2,1),(2599,'Make the Prefix Sum Non-negative','make-the-prefix-sum-non-negative',2,1),(2600,'K Items With the Maximum Sum','k-items-with-the-maximum-sum',1,1),(2601,'Prime Subtraction Operation','prime-subtraction-operation',2,1),(2602,'Minimum Operations to Make All Array Elements Equal','minimum-operations-to-make-all-array-elements-equal',2,1),(2603,'Collect Coins in a Tree','collect-coins-in-a-tree',3,1),(2604,'Minimum Time to Eat All Grains','minimum-time-to-eat-all-grains',3,1),(2605,'Form Smallest Number From Two Digit Arrays','form-smallest-number-from-two-digit-arrays',1,1),(2606,'Find the Substring With Maximum Cost','find-the-substring-with-maximum-cost',2,1),(2607,'Make K-Subarray Sums Equal','make-k-subarray-sums-equal',2,1),(2608,'Shortest Cycle in a Graph','shortest-cycle-in-a-graph',3,1),(2609,'Find the Longest Balanced Substring of a Binary String','find-the-longest-balanced-substring-of-a-binary-string',1,1),(2610,'Convert an Array Into a 2D Array With Conditions','convert-an-array-into-a-2d-array-with-conditions',2,1),(2611,'Mice and Cheese','mice-and-cheese',2,1),(2612,'Minimum Reverse Operations','minimum-reverse-operations',3,1),(2613,'Beautiful Pairs','beautiful-pairs',3,1),(2614,'Prime In Diagonal','prime-in-diagonal',1,1),(2615,'Sum of Distances','sum-of-distances',2,1),(2616,'Minimize the Maximum Difference of Pairs','minimize-the-maximum-difference-of-pairs',2,1),(2617,'Minimum Number of Visited Cells in a Grid','minimum-number-of-visited-cells-in-a-grid',3,1),(2618,'Check if Object Instance of Class','check-if-object-instance-of-class',2,1),(2619,'Array Prototype Last','array-prototype-last',1,1),(2620,'Counter','counter',1,1),(2621,'Sleep','sleep',1,1),(2622,'Cache With Time Limit','cache-with-time-limit',2,1),(2623,'Memoize','memoize',2,1),(2624,'Snail Traversal','snail-traversal',2,1),(2625,'Flatten Deeply Nested Array','flatten-deeply-nested-array',2,1),(2626,'Array Reduce Transformation','array-reduce-transformation',1,1),(2627,'Debounce','debounce',2,1),(2628,'JSON Deep Equal','json-deep-equal',2,1),(2629,'Function Composition','function-composition',1,1),(2630,'Memoize II','memoize-ii',3,1),(2631,'Group By','group-by',2,1),(2632,'Curry','curry',2,1),(2633,'Convert Object to JSON String','convert-object-to-json-string',2,1),(2634,'Filter Elements from Array','filter-elements-from-array',1,1),(2635,'Apply Transform Over Each Element in Array','apply-transform-over-each-element-in-array',1,1),(2636,'Promise Pool','promise-pool',2,1),(2637,'Promise Time Limit','promise-time-limit',2,1),(2638,'Count the Number of K-Free Subsets','count-the-number-of-k-free-subsets',2,1),(2639,'Find the Width of Columns of a Grid','find-the-width-of-columns-of-a-grid',1,1),(2640,'Find the Score of All Prefixes of an Array','find-the-score-of-all-prefixes-of-an-array',2,1),(2641,'Cousins in Binary Tree II','cousins-in-binary-tree-ii',2,1),(2642,'Design Graph With Shortest Path Calculator','design-graph-with-shortest-path-calculator',3,1),(2643,'Row With Maximum Ones','row-with-maximum-ones',1,1),(2644,'Find the Maximum Divisibility Score','find-the-maximum-divisibility-score',1,1),(2645,'Minimum Additions to Make Valid String','minimum-additions-to-make-valid-string',2,1),(2646,'Minimize the Total Price of the Trips','minimize-the-total-price-of-the-trips',3,1),(2647,'Color the Triangle Red','color-the-triangle-red',3,1),(2648,'Generate Fibonacci Sequence','generate-fibonacci-sequence',1,1),(2649,'Nested Array Generator','nested-array-generator',2,1),(2650,'Design Cancellable Function','design-cancellable-function',3,1),(2651,'Calculate Delayed Arrival Time','calculate-delayed-arrival-time',1,1),(2652,'Sum Multiples','sum-multiples',1,1),(2653,'Sliding Subarray Beauty','sliding-subarray-beauty',2,1),(2654,'Minimum Number of Operations to Make All Array Elements Equal to 1','minimum-number-of-operations-to-make-all-array-elements-equal-to-1',2,1),(2655,'Find Maximal Uncovered Ranges','find-maximal-uncovered-ranges',2,1),(2656,'Maximum Sum With Exactly K Elements ','maximum-sum-with-exactly-k-elements',1,1),(2657,'Find the Prefix Common Array of Two Arrays','find-the-prefix-common-array-of-two-arrays',2,1),(2658,'Maximum Number of Fish in a Grid','maximum-number-of-fish-in-a-grid',2,1),(2659,'Make Array Empty','make-array-empty',3,1),(2660,'Determine the Winner of a Bowling Game','determine-the-winner-of-a-bowling-game',1,1),(2661,'First Completely Painted Row or Column','first-completely-painted-row-or-column',2,1),(2662,'Minimum Cost of a Path With Special Roads','minimum-cost-of-a-path-with-special-roads',2,1),(2663,'Lexicographically Smallest Beautiful String','lexicographically-smallest-beautiful-string',3,1),(2664,'The Knight’s Tour','the-knights-tour',2,1),(2665,'Counter II','counter-ii',1,1),(2666,'Allow One Function Call','allow-one-function-call',1,1),(2667,'Create Hello World Function','create-hello-world-function',1,1),(2668,'Find Latest Salaries','find-latest-salaries',1,1),(2669,'Count Artist Occurrences On Spotify Ranking List','count-artist-occurrences-on-spotify-ranking-list',1,1),(2670,'Find the Distinct Difference Array','find-the-distinct-difference-array',1,1),(2671,'Frequency Tracker','frequency-tracker',2,1),(2672,'Number of Adjacent Elements With the Same Color','number-of-adjacent-elements-with-the-same-color',2,1),(2673,'Make Costs of Paths Equal in a Binary Tree','make-costs-of-paths-equal-in-a-binary-tree',2,1),(2674,'Split a Circular Linked List','split-a-circular-linked-list',2,1),(2675,'Array of Objects to Matrix','array-of-objects-to-matrix',3,1),(2676,'Throttle','throttle',2,1),(2677,'Chunk Array','chunk-array',1,1),(2678,'Number of Senior Citizens','number-of-senior-citizens',1,1),(2679,'Sum in a Matrix','sum-in-a-matrix',2,1),(2680,'Maximum OR','maximum-or',2,1),(2681,'Power of Heroes','power-of-heroes',3,1),(2682,'Find the Losers of the Circular Game','find-the-losers-of-the-circular-game',1,1),(2683,'Neighboring Bitwise XOR','neighboring-bitwise-xor',2,1),(2684,'Maximum Number of Moves in a Grid','maximum-number-of-moves-in-a-grid',2,1),(2685,'Count the Number of Complete Components','count-the-number-of-complete-components',2,1),(2686,'Immediate Food Delivery III','immediate-food-delivery-iii',2,1),(2687,'Bikes Last Time Used ','bikes-last-time-used',1,1),(2688,'Find Active Users','find-active-users',2,1),(2689,'Extract Kth Character From The Rope Tree','extract-kth-character-from-the-rope-tree',1,1),(2690,'Infinite Method Object','infinite-method-object',1,1),(2691,'Immutability Helper','immutability-helper',3,1),(2692,'Make Object Immutable','make-object-immutable',2,1),(2693,'Call Function with Custom Context','call-function-with-custom-context',2,1),(2694,'Event Emitter','event-emitter',2,1),(2695,'Array Wrapper','array-wrapper',1,1),(2696,'Minimum String Length After Removing Substrings','minimum-string-length-after-removing-substrings',1,1),(2697,'Lexicographically Smallest Palindrome','lexicographically-smallest-palindrome',1,1),(2698,'Find the Punishment Number of an Integer','find-the-punishment-number-of-an-integer',2,1),(2699,'Modify Graph Edge Weights','modify-graph-edge-weights',3,1),(2700,'Differences Between Two Objects','differences-between-two-objects',2,1),(2701,'Consecutive Transactions with Increasing Amounts','consecutive-transactions-with-increasing-amounts',3,1),(2702,'Minimum Operations to Make Numbers Non-positive','minimum-operations-to-make-numbers-non-positive',3,1),(2703,'Return Length of Arguments Passed','return-length-of-arguments-passed',1,1),(2704,'To Be Or Not To Be','to-be-or-not-to-be',1,1),(2705,'Compact Object','compact-object',2,1),(2706,'Buy Two Chocolates','buy-two-chocolates',1,1),(2707,'Extra Characters in a String','extra-characters-in-a-string',2,1),(2708,'Maximum Strength of a Group','maximum-strength-of-a-group',2,1),(2709,'Greatest Common Divisor Traversal','greatest-common-divisor-traversal',3,1),(2710,'Remove Trailing Zeros From a String','remove-trailing-zeros-from-a-string',1,1),(2711,'Difference of Number of Distinct Values on Diagonals','difference-of-number-of-distinct-values-on-diagonals',2,1),(2712,'Minimum Cost to Make All Characters Equal','minimum-cost-to-make-all-characters-equal',2,1),(2713,'Maximum Strictly Increasing Cells in a Matrix','maximum-strictly-increasing-cells-in-a-matrix',3,1),(2714,'Find Shortest Path with K Hops','find-shortest-path-with-k-hops',3,1),(2715,'Timeout Cancellation','timeout-cancellation',1,1),(2716,'Minimize String Length','minimize-string-length',1,1),(2717,'Semi-Ordered Permutation','semi-ordered-permutation',1,1),(2718,'Sum of Matrix After Queries','sum-of-matrix-after-queries',2,1),(2719,'Count of Integers','count-of-integers',3,1),(2720,'Popularity Percentage','popularity-percentage',3,1),(2721,'Execute Asynchronous Functions in Parallel','execute-asynchronous-functions-in-parallel',2,1),(2722,'Join Two Arrays by ID','join-two-arrays-by-id',2,1),(2723,'Add Two Promises','add-two-promises',1,1),(2724,'Sort By','sort-by',1,1),(2725,'Interval Cancellation','interval-cancellation',1,1),(2726,'Calculator with Method Chaining','calculator-with-method-chaining',1,1),(2727,'Is Object Empty','is-object-empty',1,1),(2728,'Count Houses in a Circular Street','count-houses-in-a-circular-street',1,1),(2729,'Check if The Number is Fascinating','check-if-the-number-is-fascinating',1,1),(2730,'Find the Longest Semi-Repetitive Substring','find-the-longest-semi-repetitive-substring',2,1),(2731,'Movement of Robots','movement-of-robots',2,1),(2732,'Find a Good Subset of the Matrix','find-a-good-subset-of-the-matrix',3,1),(2733,'Neither Minimum nor Maximum','neither-minimum-nor-maximum',1,1),(2734,'Lexicographically Smallest String After Substring Operation','lexicographically-smallest-string-after-substring-operation',2,1),(2735,'Collecting Chocolates','collecting-chocolates',2,1),(2736,'Maximum Sum Queries','maximum-sum-queries',3,1),(2737,'Find the Closest Marked Node','find-the-closest-marked-node',2,1),(2738,'Count Occurrences in Text','count-occurrences-in-text',2,1),(2739,'Total Distance Traveled','total-distance-traveled',1,1),(2740,'Find the Value of the Partition','find-the-value-of-the-partition',2,1),(2741,'Special Permutations','special-permutations',2,1),(2742,'Painting the Walls','painting-the-walls',3,1),(2743,'Count Substrings Without Repeating Character','count-substrings-without-repeating-character',2,1),(2744,'Find Maximum Number of String Pairs','find-maximum-number-of-string-pairs',1,1),(2745,'Construct the Longest New String','construct-the-longest-new-string',2,1),(2746,'Decremental String Concatenation','decremental-string-concatenation',2,1),(2747,'Count Zero Request Servers','count-zero-request-servers',2,1),(2748,'Number of Beautiful Pairs','number-of-beautiful-pairs',1,1),(2749,'Minimum Operations to Make the Integer Zero','minimum-operations-to-make-the-integer-zero',2,1),(2750,'Ways to Split Array Into Good Subarrays','ways-to-split-array-into-good-subarrays',2,1),(2751,'Robot Collisions','robot-collisions',3,1),(2752,'Customers with Maximum Number of Transactions on Consecutive Days','customers-with-maximum-number-of-transactions-on-consecutive-days',3,1),(2753,'Count Houses in a Circular Street II','count-houses-in-a-circular-street-ii',3,1),(2754,'Bind Function to Context','bind-function-to-context',2,1),(2755,'Deep Merge of Two Objects','deep-merge-of-two-objects',2,1),(2756,'Query Batching','query-batching',3,1),(2757,'Generate Circular Array Values','generate-circular-array-values',2,1),(2758,'Next Day','next-day',1,1),(2759,'Convert JSON String to Object','convert-json-string-to-object',3,1),(2760,'Longest Even Odd Subarray With Threshold','longest-even-odd-subarray-with-threshold',1,1),(2761,'Prime Pairs With Target Sum','prime-pairs-with-target-sum',2,1),(2762,'Continuous Subarrays','continuous-subarrays',2,1),(2763,'Sum of Imbalance Numbers of All Subarrays','sum-of-imbalance-numbers-of-all-subarrays',3,1),(2764,'Is Array a Preorder of Some ‌Binary Tree','is-array-a-preorder-of-some-binary-tree',2,1),(2765,'Longest Alternating Subarray','longest-alternating-subarray',1,1),(2766,'Relocate Marbles','relocate-marbles',2,1),(2767,'Partition String Into Minimum Beautiful Substrings','partition-string-into-minimum-beautiful-substrings',2,1),(2768,'Number of Black Blocks','number-of-black-blocks',2,1),(2769,'Find the Maximum Achievable Number','find-the-maximum-achievable-number',1,1),(2770,'Maximum Number of Jumps to Reach the Last Index','maximum-number-of-jumps-to-reach-the-last-index',2,1),(2771,'Longest Non-decreasing Subarray From Two Arrays','longest-non-decreasing-subarray-from-two-arrays',2,1),(2772,'Apply Operations to Make All Array Elements Equal to Zero','apply-operations-to-make-all-array-elements-equal-to-zero',2,1),(2773,'Height of Special Binary Tree','height-of-special-binary-tree',2,1),(2774,'Array Upper Bound','array-upper-bound',1,1),(2775,'Undefined to Null','undefined-to-null',2,1),(2776,'Convert Callback Based Function to Promise Based Function','convert-callback-based-function-to-promise-based-function',2,1),(2777,'Date Range Generator','date-range-generator',2,1),(2778,'Sum of Squares of Special Elements ','sum-of-squares-of-special-elements',1,1),(2779,'Maximum Beauty of an Array After Applying Operation','maximum-beauty-of-an-array-after-applying-operation',2,1),(2780,'Minimum Index of a Valid Split','minimum-index-of-a-valid-split',2,1),(2781,'Length of the Longest Valid Substring','length-of-the-longest-valid-substring',3,1),(2782,'Number of Unique Categories','number-of-unique-categories',2,1),(2783,'Flight Occupancy and Waitlist Analysis','flight-occupancy-and-waitlist-analysis',2,1),(2784,'Check if Array is Good','check-if-array-is-good',1,1),(2785,'Sort Vowels in a String','sort-vowels-in-a-string',2,1),(2786,'Visit Array Positions to Maximize Score','visit-array-positions-to-maximize-score',2,1),(2787,'Ways to Express an Integer as Sum of Powers','ways-to-express-an-integer-as-sum-of-powers',2,1),(2788,'Split Strings by Separator','split-strings-by-separator',1,1),(2789,'Largest Element in an Array after Merge Operations','largest-element-in-an-array-after-merge-operations',2,1),(2790,'Maximum Number of Groups With Increasing Length','maximum-number-of-groups-with-increasing-length',3,1),(2791,'Count Paths That Can Form a Palindrome in a Tree','count-paths-that-can-form-a-palindrome-in-a-tree',3,1),(2792,'Count Nodes That Are Great Enough','count-nodes-that-are-great-enough',3,1),(2793,'Status of Flight Tickets','status-of-flight-tickets',3,1),(2794,'Create Object from Two Arrays','create-object-from-two-arrays',1,1),(2795,'Parallel Execution of Promises for Individual Results Retrieval','parallel-execution-of-promises-for-individual-results-retrieval',2,1),(2796,'Repeat String','repeat-string',1,1),(2797,'Partial Function with Placeholders','partial-function-with-placeholders',1,1),(2798,'Number of Employees Who Met the Target','number-of-employees-who-met-the-target',1,1),(2799,'Count Complete Subarrays in an Array','count-complete-subarrays-in-an-array',2,1),(2800,'Shortest String That Contains Three Strings','shortest-string-that-contains-three-strings',2,1),(2801,'Count Stepping Numbers in Range','count-stepping-numbers-in-range',3,1),(2802,'Find The K-th Lucky Number','find-the-k-th-lucky-number',2,1),(2803,'Factorial Generator','factorial-generator',1,1),(2804,'Array Prototype ForEach','array-prototype-foreach',1,1),(2805,'Custom Interval','custom-interval',2,1),(2806,'Account Balance After Rounded Purchase','account-balance-after-rounded-purchase',1,1),(2807,'Insert Greatest Common Divisors in Linked List','insert-greatest-common-divisors-in-linked-list',2,1),(2808,'Minimum Seconds to Equalize a Circular Array','minimum-seconds-to-equalize-a-circular-array',2,1),(2809,'Minimum Time to Make Array Sum At Most x','minimum-time-to-make-array-sum-at-most-x',3,1),(2810,'Faulty Keyboard','faulty-keyboard',1,1),(2811,'Check if it is Possible to Split Array','check-if-it-is-possible-to-split-array',2,1),(2812,'Find the Safest Path in a Grid','find-the-safest-path-in-a-grid',2,1),(2813,'Maximum Elegance of a K-Length Subsequence','maximum-elegance-of-a-k-length-subsequence',3,1),(2814,'Minimum Time Takes to Reach Destination Without Drowning','minimum-time-takes-to-reach-destination-without-drowning',3,1),(2815,'Max Pair Sum in an Array','max-pair-sum-in-an-array',1,1),(2816,'Double a Number Represented as a Linked List','double-a-number-represented-as-a-linked-list',2,1),(2817,'Minimum Absolute Difference Between Elements With Constraint','minimum-absolute-difference-between-elements-with-constraint',2,1),(2818,'Apply Operations to Maximize Score','apply-operations-to-maximize-score',3,1),(2819,'Minimum Relative Loss After Buying Chocolates','minimum-relative-loss-after-buying-chocolates',3,1),(2820,'Election Results','election-results',2,1),(2821,'Delay the Resolution of Each Promise','delay-the-resolution-of-each-promise',2,1),(2822,'Inversion of Object','inversion-of-object',1,1),(2823,'Deep Object Filter','deep-object-filter',2,1),(2824,'Count Pairs Whose Sum is Less than Target','count-pairs-whose-sum-is-less-than-target',1,1),(2825,'Make String a Subsequence Using Cyclic Increments','make-string-a-subsequence-using-cyclic-increments',2,1),(2826,'Sorting Three Groups','sorting-three-groups',2,1),(2827,'Number of Beautiful Integers in the Range','number-of-beautiful-integers-in-the-range',3,1),(2828,'Check if a String Is an Acronym of Words','check-if-a-string-is-an-acronym-of-words',1,1),(2829,'Determine the Minimum Sum of a k-avoiding Array','determine-the-minimum-sum-of-a-k-avoiding-array',2,1),(2830,'Maximize the Profit as the Salesman','maximize-the-profit-as-the-salesman',2,1),(2831,'Find the Longest Equal Subarray','find-the-longest-equal-subarray',2,1),(2832,'Maximal Range That Each Element Is Maximum in It','maximal-range-that-each-element-is-maximum-in-it',2,1),(2833,'Furthest Point From Origin','furthest-point-from-origin',1,1),(2834,'Find the Minimum Possible Sum of a Beautiful Array','find-the-minimum-possible-sum-of-a-beautiful-array',2,1),(2835,'Minimum Operations to Form Subsequence With Target Sum','minimum-operations-to-form-subsequence-with-target-sum',3,1),(2836,'Maximize Value of Function in a Ball Passing Game','maximize-value-of-function-in-a-ball-passing-game',3,1),(2837,'Total Traveled Distance','total-traveled-distance',1,1),(2838,'Maximum Coins Heroes Can Collect','maximum-coins-heroes-can-collect',2,1),(2839,'Check if Strings Can be Made Equal With Operations I','check-if-strings-can-be-made-equal-with-operations-i',1,1),(2840,'Check if Strings Can be Made Equal With Operations II','check-if-strings-can-be-made-equal-with-operations-ii',2,1),(2841,'Maximum Sum of Almost Unique Subarray','maximum-sum-of-almost-unique-subarray',2,1),(2842,'Count K-Subsequences of a String With Maximum Beauty','count-k-subsequences-of-a-string-with-maximum-beauty',3,1),(2843,'  Count Symmetric Integers','count-symmetric-integers',1,1),(2844,'Minimum Operations to Make a Special Number','minimum-operations-to-make-a-special-number',2,1),(2845,'Count of Interesting Subarrays','count-of-interesting-subarrays',2,1),(2846,'Minimum Edge Weight Equilibrium Queries in a Tree','minimum-edge-weight-equilibrium-queries-in-a-tree',3,1),(2847,'Smallest Number With Given Digit Product','smallest-number-with-given-digit-product',2,1),(2848,'Points That Intersect With Cars','points-that-intersect-with-cars',1,1),(2849,'Determine if a Cell Is Reachable at a Given Time','determine-if-a-cell-is-reachable-at-a-given-time',2,1),(2850,'Minimum Moves to Spread Stones Over Grid','minimum-moves-to-spread-stones-over-grid',2,1),(2851,'String Transformation','string-transformation',3,1),(2852,'Sum of Remoteness of All Cells','sum-of-remoteness-of-all-cells',2,1),(2853,'Highest Salaries Difference','highest-salaries-difference',1,1),(2854,'Rolling Average Steps','rolling-average-steps',2,1),(2855,'Minimum Right Shifts to Sort the Array','minimum-right-shifts-to-sort-the-array',1,1),(2856,'Minimum Array Length After Pair Removals','minimum-array-length-after-pair-removals',2,1),(2857,'Count Pairs of Points With Distance k','count-pairs-of-points-with-distance-k',2,1),(2858,'Minimum Edge Reversals So Every Node Is Reachable','minimum-edge-reversals-so-every-node-is-reachable',3,1),(2859,'Sum of Values at Indices With K Set Bits','sum-of-values-at-indices-with-k-set-bits',1,1),(2860,'Happy Students','happy-students',2,1),(2861,'Maximum Number of Alloys','maximum-number-of-alloys',2,1),(2862,'Maximum Element-Sum of a Complete Subset of Indices','maximum-element-sum-of-a-complete-subset-of-indices',3,1),(2863,'Maximum Length of Semi-Decreasing Subarrays','maximum-length-of-semi-decreasing-subarrays',2,1),(2864,'Maximum Odd Binary Number','maximum-odd-binary-number',1,1),(2865,'Beautiful Towers I','beautiful-towers-i',2,1),(2866,'Beautiful Towers II','beautiful-towers-ii',2,1),(2867,'Count Valid Paths in a Tree','count-valid-paths-in-a-tree',3,1),(2868,'The Wording Game','the-wording-game',3,1),(2869,'Minimum Operations to Collect Elements','minimum-operations-to-collect-elements',1,1),(2870,'Minimum Number of Operations to Make Array Empty','minimum-number-of-operations-to-make-array-empty',2,1),(2871,'Split Array Into Maximum Number of Subarrays','split-array-into-maximum-number-of-subarrays',2,1),(2872,'Maximum Number of K-Divisible Components','maximum-number-of-k-divisible-components',3,1),(2873,'Maximum Value of an Ordered Triplet I','maximum-value-of-an-ordered-triplet-i',1,1),(2874,'Maximum Value of an Ordered Triplet II','maximum-value-of-an-ordered-triplet-ii',2,1),(2875,'Minimum Size Subarray in Infinite Array','minimum-size-subarray-in-infinite-array',2,1),(2876,'Count Visited Nodes in a Directed Graph','count-visited-nodes-in-a-directed-graph',3,1),(2877,'Create a DataFrame from List','create-a-dataframe-from-list',1,1),(2878,'Get the Size of a DataFrame','get-the-size-of-a-dataframe',1,1),(2879,'Display the First Three Rows','display-the-first-three-rows',1,1),(2880,'Select Data','select-data',1,1),(2881,'Create a New Column','create-a-new-column',1,1),(2882,'Drop Duplicate Rows','drop-duplicate-rows',1,1),(2883,'Drop Missing Data','drop-missing-data',1,1),(2884,'Modify Columns','modify-columns',1,1),(2885,'Rename Columns','rename-columns',1,1),(2886,'Change Data Type','change-data-type',1,1),(2887,'Fill Missing Data','fill-missing-data',1,1),(2888,'Reshape Data: Concatenate','reshape-data-concatenate',1,1),(2889,'Reshape Data: Pivot','reshape-data-pivot',1,1),(2890,'Reshape Data: Melt','reshape-data-melt',1,1),(2891,'Method Chaining','method-chaining',1,1),(2892,'Minimizing Array After Replacing Pairs With Their Product','minimizing-array-after-replacing-pairs-with-their-product',2,1),(2893,'Calculate Orders Within Each Interval','calculate-orders-within-each-interval',2,1),(2894,'Divisible and Non-divisible Sums Difference','divisible-and-non-divisible-sums-difference',1,1),(2895,'Minimum Processing Time','minimum-processing-time',2,1),(2896,'Apply Operations to Make Two Strings Equal','apply-operations-to-make-two-strings-equal',2,1),(2897,'Apply Operations on Array to Maximize Sum of Squares','apply-operations-on-array-to-maximize-sum-of-squares',3,1),(2898,'Maximum Linear Stock Score','maximum-linear-stock-score',2,1),(2899,'Last Visited Integers','last-visited-integers',1,1),(2900,'Longest Unequal Adjacent Groups Subsequence I','longest-unequal-adjacent-groups-subsequence-i',1,1),(2901,'Longest Unequal Adjacent Groups Subsequence II','longest-unequal-adjacent-groups-subsequence-ii',2,1),(2902,'Count of Sub-Multisets With Bounded Sum','count-of-sub-multisets-with-bounded-sum',3,1),(2903,'Find Indices With Index and Value Difference I','find-indices-with-index-and-value-difference-i',1,1),(2904,'Shortest and Lexicographically Smallest Beautiful String','shortest-and-lexicographically-smallest-beautiful-string',2,1),(2905,'Find Indices With Index and Value Difference II','find-indices-with-index-and-value-difference-ii',2,1),(2906,'Construct Product Matrix','construct-product-matrix',2,1),(2907,'Maximum Profitable Triplets With Increasing Prices I','maximum-profitable-triplets-with-increasing-prices-i',2,1),(2908,'Minimum Sum of Mountain Triplets I','minimum-sum-of-mountain-triplets-i',1,1),(2909,'Minimum Sum of Mountain Triplets II','minimum-sum-of-mountain-triplets-ii',2,1),(2910,'Minimum Number of Groups to Create a Valid Assignment','minimum-number-of-groups-to-create-a-valid-assignment',2,1),(2911,'Minimum Changes to Make K Semi-palindromes','minimum-changes-to-make-k-semi-palindromes',3,1),(2912,'Number of Ways to Reach Destination in the Grid','number-of-ways-to-reach-destination-in-the-grid',3,1),(2913,'Subarrays Distinct Element Sum of Squares I','subarrays-distinct-element-sum-of-squares-i',1,1),(2914,'Minimum Number of Changes to Make Binary String Beautiful','minimum-number-of-changes-to-make-binary-string-beautiful',2,1),(2915,'Length of the Longest Subsequence That Sums to Target','length-of-the-longest-subsequence-that-sums-to-target',2,1),(2916,'Subarrays Distinct Element Sum of Squares II','subarrays-distinct-element-sum-of-squares-ii',3,1),(2917,'Find the K-or of an Array','find-the-k-or-of-an-array',1,1),(2918,'Minimum Equal Sum of Two Arrays After Replacing Zeros','minimum-equal-sum-of-two-arrays-after-replacing-zeros',2,1),(2919,'Minimum Increment Operations to Make Array Beautiful','minimum-increment-operations-to-make-array-beautiful',2,1),(2920,'Maximum Points After Collecting Coins From All Nodes','maximum-points-after-collecting-coins-from-all-nodes',3,1),(2921,'Maximum Profitable Triplets With Increasing Prices II','maximum-profitable-triplets-with-increasing-prices-ii',3,1),(2922,'Market Analysis III','market-analysis-iii',2,1),(2923,'Find Champion I','find-champion-i',1,1),(2924,'Find Champion II','find-champion-ii',2,1),(2925,'Maximum Score After Applying Operations on a Tree','maximum-score-after-applying-operations-on-a-tree',2,1),(2926,'Maximum Balanced Subsequence Sum','maximum-balanced-subsequence-sum',3,1),(2927,'Distribute Candies Among Children III','distribute-candies-among-children-iii',3,1),(2928,'Distribute Candies Among Children I','distribute-candies-among-children-i',1,1),(2929,'Distribute Candies Among Children II','distribute-candies-among-children-ii',2,1),(2930,'Number of Strings Which Can Be Rearranged to Contain Substring','number-of-strings-which-can-be-rearranged-to-contain-substring',2,1),(2931,'Maximum Spending After Buying Items','maximum-spending-after-buying-items',3,1),(2932,'Maximum Strong Pair XOR I','maximum-strong-pair-xor-i',1,1),(2933,'High-Access Employees','high-access-employees',2,1),(2934,'Minimum Operations to Maximize Last Elements in Arrays','minimum-operations-to-maximize-last-elements-in-arrays',2,1),(2935,'Maximum Strong Pair XOR II','maximum-strong-pair-xor-ii',3,1),(2936,'Number of Equal Numbers Blocks','number-of-equal-numbers-blocks',2,1),(2937,'Make Three Strings Equal','make-three-strings-equal',1,1),(2938,'Separate Black and White Balls','separate-black-and-white-balls',2,1),(2939,'Maximum Xor Product','maximum-xor-product',2,1),(2940,'Find Building Where Alice and Bob Can Meet','find-building-where-alice-and-bob-can-meet',3,1),(2941,'Maximum GCD-Sum of a Subarray','maximum-gcd-sum-of-a-subarray',3,1),(2942,'Find Words Containing Character','find-words-containing-character',1,1),(2943,'Maximize Area of Square Hole in Grid','maximize-area-of-square-hole-in-grid',2,1),(2944,'Minimum Number of Coins for Fruits','minimum-number-of-coins-for-fruits',2,1),(2945,'Find Maximum Non-decreasing Array Length','find-maximum-non-decreasing-array-length',3,1),(2946,'Matrix Similarity After Cyclic Shifts','matrix-similarity-after-cyclic-shifts',1,1),(2947,'Count Beautiful Substrings I','count-beautiful-substrings-i',2,1),(2948,'Make Lexicographically Smallest Array by Swapping Elements','make-lexicographically-smallest-array-by-swapping-elements',2,1),(2949,'Count Beautiful Substrings II','count-beautiful-substrings-ii',3,1),(2950,'Number of Divisible Substrings','number-of-divisible-substrings',2,1),(2951,'Find the Peaks','find-the-peaks',1,1),(2952,'Minimum Number of Coins to be Added','minimum-number-of-coins-to-be-added',2,1),(2953,'Count Complete Substrings','count-complete-substrings',3,1),(2954,'Count the Number of Infection Sequences','count-the-number-of-infection-sequences',3,1),(2955,'Number of Same-End Substrings','number-of-same-end-substrings',2,1),(2956,'Find Common Elements Between Two Arrays','find-common-elements-between-two-arrays',1,1),(2957,'Remove Adjacent Almost-Equal Characters','remove-adjacent-almost-equal-characters',2,1),(2958,'Length of Longest Subarray With at Most K Frequency','length-of-longest-subarray-with-at-most-k-frequency',2,1),(2959,'Number of Possible Sets of Closing Branches','number-of-possible-sets-of-closing-branches',3,1),(2960,'Count Tested Devices After Test Operations','count-tested-devices-after-test-operations',1,1),(2961,'Double Modular Exponentiation','double-modular-exponentiation',2,1),(2962,'Count Subarrays Where Max Element Appears at Least K Times','count-subarrays-where-max-element-appears-at-least-k-times',2,1),(2963,'Count the Number of Good Partitions','count-the-number-of-good-partitions',3,1),(2964,'Number of Divisible Triplet Sums','number-of-divisible-triplet-sums',2,1),(2965,'Find Missing and Repeated Values','find-missing-and-repeated-values',1,1),(2966,'Divide Array Into Arrays With Max Difference','divide-array-into-arrays-with-max-difference',2,1),(2967,'Minimum Cost to Make Array Equalindromic','minimum-cost-to-make-array-equalindromic',2,1),(2968,'Apply Operations to Maximize Frequency Score','apply-operations-to-maximize-frequency-score',3,1),(2969,'Minimum Number of Coins for Fruits II','minimum-number-of-coins-for-fruits-ii',3,1),(2970,'Count the Number of Incremovable Subarrays I','count-the-number-of-incremovable-subarrays-i',1,1),(2971,'Find Polygon With the Largest Perimeter','find-polygon-with-the-largest-perimeter',2,1),(2972,'Count the Number of Incremovable Subarrays II','count-the-number-of-incremovable-subarrays-ii',3,1),(2973,'Find Number of Coins to Place in Tree Nodes','find-number-of-coins-to-place-in-tree-nodes',3,1),(2974,'Minimum Number Game','minimum-number-game',1,1),(2975,'Maximum Square Area by Removing Fences From a Field','maximum-square-area-by-removing-fences-from-a-field',2,1),(2976,'Minimum Cost to Convert String I','minimum-cost-to-convert-string-i',2,1),(2977,'Minimum Cost to Convert String II','minimum-cost-to-convert-string-ii',3,1),(2978,'Symmetric Coordinates','symmetric-coordinates',2,1),(2979,'Most Expensive Item That Can Not Be Bought','most-expensive-item-that-can-not-be-bought',2,1),(2980,'Check if Bitwise OR Has Trailing Zeros','check-if-bitwise-or-has-trailing-zeros',1,1),(2981,'Find Longest Special Substring That Occurs Thrice I','find-longest-special-substring-that-occurs-thrice-i',2,1),(2982,'Find Longest Special Substring That Occurs Thrice II','find-longest-special-substring-that-occurs-thrice-ii',2,1),(2983,'Palindrome Rearrangement Queries','palindrome-rearrangement-queries',3,1),(2984,'Find Peak Calling Hours for Each City','find-peak-calling-hours-for-each-city',2,1),(2985,'Calculate Compressed Mean','calculate-compressed-mean',1,1),(2986,'Find Third Transaction','find-third-transaction',2,1),(2987,'Find Expensive Cities','find-expensive-cities',1,1),(2988,'Manager of the Largest Department','manager-of-the-largest-department',2,1),(2989,'Class Performance','class-performance',2,1),(2990,'Loan Types','loan-types',1,1),(2991,'Top Three Wineries ','top-three-wineries',3,1),(2992,'Number of Self-Divisible Permutations','number-of-self-divisible-permutations',2,1),(2993,'Friday Purchases I','friday-purchases-i',2,1),(2994,'Friday Purchases II ','friday-purchases-ii',3,1),(2995,'Viewers Turned Streamers','viewers-turned-streamers',3,1),(2996,'Smallest Missing Integer Greater Than Sequential Prefix Sum','smallest-missing-integer-greater-than-sequential-prefix-sum',1,1),(2997,'Minimum Number of Operations to Make Array XOR Equal to K','minimum-number-of-operations-to-make-array-xor-equal-to-k',2,1),(2998,'Minimum Number of Operations to Make X and Y Equal','minimum-number-of-operations-to-make-x-and-y-equal',2,1),(2999,'Count the Number of Powerful Integers','count-the-number-of-powerful-integers',3,1),(3000,'Maximum Area of Longest Diagonal Rectangle','maximum-area-of-longest-diagonal-rectangle',1,1),(3001,'Minimum Moves to Capture The Queen','minimum-moves-to-capture-the-queen',2,1),(3002,'Maximum Size of a Set After Removals','maximum-size-of-a-set-after-removals',2,1),(3003,'Maximize the Number of Partitions After Operations','maximize-the-number-of-partitions-after-operations',3,1),(3004,'Maximum Subtree of the Same Color','maximum-subtree-of-the-same-color',2,1),(3005,'Count Elements With Maximum Frequency','count-elements-with-maximum-frequency',1,1),(3006,'Find Beautiful Indices in the Given Array I','find-beautiful-indices-in-the-given-array-i',2,1),(3007,'Maximum Number That Sum of the Prices Is Less Than or Equal to K','maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k',2,1),(3008,'Find Beautiful Indices in the Given Array II','find-beautiful-indices-in-the-given-array-ii',3,1),(3009,'Maximum Number of Intersections on the Chart','maximum-number-of-intersections-on-the-chart',3,1),(3010,'Divide an Array Into Subarrays With Minimum Cost I','divide-an-array-into-subarrays-with-minimum-cost-i',1,1),(3011,'Find if Array Can Be Sorted','find-if-array-can-be-sorted',2,1),(3012,'Minimize Length of Array Using Operations','minimize-length-of-array-using-operations',2,1),(3013,'Divide an Array Into Subarrays With Minimum Cost II','divide-an-array-into-subarrays-with-minimum-cost-ii',3,1),(3014,'Minimum Number of Pushes to Type Word I','minimum-number-of-pushes-to-type-word-i',1,1),(3015,'Count the Number of Houses at a Certain Distance I','count-the-number-of-houses-at-a-certain-distance-i',2,1),(3016,'Minimum Number of Pushes to Type Word II','minimum-number-of-pushes-to-type-word-ii',2,1),(3017,'Count the Number of Houses at a Certain Distance II','count-the-number-of-houses-at-a-certain-distance-ii',3,1),(3018,'Maximum Number of Removal Queries That Can Be Processed I','maximum-number-of-removal-queries-that-can-be-processed-i',3,1),(3019,'Number of Changing Keys','number-of-changing-keys',1,1),(3020,'Find the Maximum Number of Elements in Subset','find-the-maximum-number-of-elements-in-subset',2,1),(3021,'Alice and Bob Playing Flower Game','alice-and-bob-playing-flower-game',2,1),(3022,'Minimize OR of Remaining Elements Using Operations','minimize-or-of-remaining-elements-using-operations',3,1),(3023,'Find Pattern in Infinite Stream I','find-pattern-in-infinite-stream-i',2,1),(3024,'Type of Triangle','type-of-triangle',1,1),(3025,'Find the Number of Ways to Place People I','find-the-number-of-ways-to-place-people-i',2,1),(3026,'Maximum Good Subarray Sum','maximum-good-subarray-sum',2,1),(3027,'Find the Number of Ways to Place People II','find-the-number-of-ways-to-place-people-ii',3,1),(3028,'Ant on the Boundary','ant-on-the-boundary',1,1),(3029,'Minimum Time to Revert Word to Initial State I','minimum-time-to-revert-word-to-initial-state-i',2,1),(3030,'Find the Grid of Region Average','find-the-grid-of-region-average',2,1),(3031,'Minimum Time to Revert Word to Initial State II','minimum-time-to-revert-word-to-initial-state-ii',3,1),(3032,'Count Numbers With Unique Digits II','count-numbers-with-unique-digits-ii',1,1),(3033,'Modify the Matrix','modify-the-matrix',1,1),(3034,'Number of Subarrays That Match a Pattern I','number-of-subarrays-that-match-a-pattern-i',2,1),(3035,'Maximum Palindromes After Operations','maximum-palindromes-after-operations',2,1),(3036,'Number of Subarrays That Match a Pattern II','number-of-subarrays-that-match-a-pattern-ii',3,1),(3037,'Find Pattern in Infinite Stream II','find-pattern-in-infinite-stream-ii',3,1),(3038,'Maximum Number of Operations With the Same Score I','maximum-number-of-operations-with-the-same-score-i',1,1),(3039,'Apply Operations to Make String Empty','apply-operations-to-make-string-empty',2,1),(3040,'Maximum Number of Operations With the Same Score II','maximum-number-of-operations-with-the-same-score-ii',2,1),(3041,'Maximize Consecutive Elements in an Array After Modification','maximize-consecutive-elements-in-an-array-after-modification',3,1),(3042,'Count Prefix and Suffix Pairs I','count-prefix-and-suffix-pairs-i',1,1),(3043,'Find the Length of the Longest Common Prefix','find-the-length-of-the-longest-common-prefix',2,1),(3044,'Most Frequent Prime','most-frequent-prime',2,1),(3045,'Count Prefix and Suffix Pairs II','count-prefix-and-suffix-pairs-ii',3,1),(3046,'Split the Array','split-the-array',1,1),(3047,'Find the Largest Area of Square Inside Two Rectangles','find-the-largest-area-of-square-inside-two-rectangles',2,1),(3048,'Earliest Second to Mark Indices I','earliest-second-to-mark-indices-i',2,1),(3049,'Earliest Second to Mark Indices II','earliest-second-to-mark-indices-ii',3,1),(3050,'Pizza Toppings Cost Analysis','pizza-toppings-cost-analysis',2,1),(3051,'Find Candidates for Data Scientist Position','find-candidates-for-data-scientist-position',1,1),(3052,'Maximize Items','maximize-items',3,1),(3053,'Classifying Triangles by Lengths','classifying-triangles-by-lengths',1,1),(3054,'Binary Tree Nodes','binary-tree-nodes',2,1),(3055,'Top Percentile Fraud','top-percentile-fraud',2,1),(3056,'Snaps Analysis','snaps-analysis',2,1),(3057,'Employees Project Allocation','employees-project-allocation',3,1),(3058,'Friends With No Mutual Friends','friends-with-no-mutual-friends',2,1),(3059,'Find All Unique Email Domains','find-all-unique-email-domains',1,1),(3060,'User Activities within Time Bounds','user-activities-within-time-bounds',3,1),(3061,'Calculate Trapping Rain Water','calculate-trapping-rain-water',3,1),(3062,'Winner of the Linked List Game','winner-of-the-linked-list-game',1,1),(3063,'Linked List Frequency','linked-list-frequency',1,1),(3064,'Guess the Number Using Bitwise Questions I','guess-the-number-using-bitwise-questions-i',2,1),(3065,'Minimum Operations to Exceed Threshold Value I','minimum-operations-to-exceed-threshold-value-i',1,1),(3066,'Minimum Operations to Exceed Threshold Value II','minimum-operations-to-exceed-threshold-value-ii',2,1),(3067,'Count Pairs of Connectable Servers in a Weighted Tree Network','count-pairs-of-connectable-servers-in-a-weighted-tree-network',2,1),(3068,'Find the Maximum Sum of Node Values','find-the-maximum-sum-of-node-values',3,1),(3069,'Distribute Elements Into Two Arrays I','distribute-elements-into-two-arrays-i',1,1),(3070,'Count Submatrices with Top-Left Element and Sum Less Than k','count-submatrices-with-top-left-element-and-sum-less-than-k',2,1),(3071,'Minimum Operations to Write the Letter Y on a Grid','minimum-operations-to-write-the-letter-y-on-a-grid',2,1),(3072,'Distribute Elements Into Two Arrays II','distribute-elements-into-two-arrays-ii',3,1),(3073,'Maximum Increasing Triplet Value','maximum-increasing-triplet-value',2,1),(3074,'Apple Redistribution into Boxes','apple-redistribution-into-boxes',1,1),(3075,'Maximize Happiness of Selected Children','maximize-happiness-of-selected-children',2,1),(3076,'Shortest Uncommon Substring in an Array','shortest-uncommon-substring-in-an-array',2,1),(3077,'Maximum Strength of K Disjoint Subarrays','maximum-strength-of-k-disjoint-subarrays',3,1),(3078,'Match Alphanumerical Pattern in Matrix I','match-alphanumerical-pattern-in-matrix-i',2,1),(3079,'Find the Sum of Encrypted Integers','find-the-sum-of-encrypted-integers',1,1),(3080,'Mark Elements on Array by Performing Queries','mark-elements-on-array-by-performing-queries',2,1),(3081,'Replace Question Marks in String to Minimize Its Value','replace-question-marks-in-string-to-minimize-its-value',2,1),(3082,'Find the Sum of the Power of All Subsequences','find-the-sum-of-the-power-of-all-subsequences',3,1),(3083,'Existence of a Substring in a String and Its Reverse','existence-of-a-substring-in-a-string-and-its-reverse',1,1),(3084,'Count Substrings Starting and Ending with Given Character','count-substrings-starting-and-ending-with-given-character',2,1),(3085,'Minimum Deletions to Make String K-Special','minimum-deletions-to-make-string-k-special',2,1),(3086,'Minimum Moves to Pick K Ones','minimum-moves-to-pick-k-ones',3,1),(3087,'Find Trending Hashtags','find-trending-hashtags',2,1),(3088,'Make String Anti-palindrome','make-string-anti-palindrome',3,1),(3089,'Find Bursty Behavior','find-bursty-behavior',2,1),(3090,'Maximum Length Substring With Two Occurrences','maximum-length-substring-with-two-occurrences',1,1),(3091,'Apply Operations to Make Sum of Array Greater Than or Equal to k','apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k',2,1),(3092,'Most Frequent IDs','most-frequent-ids',2,1),(3093,'Longest Common Suffix Queries','longest-common-suffix-queries',3,1),(3094,'Guess the Number Using Bitwise Questions II','guess-the-number-using-bitwise-questions-ii',2,1),(3095,'Shortest Subarray With OR at Least K I','shortest-subarray-with-or-at-least-k-i',1,1),(3096,'Minimum Levels to Gain More Points','minimum-levels-to-gain-more-points',2,1),(3097,'Shortest Subarray With OR at Least K II','shortest-subarray-with-or-at-least-k-ii',2,1),(3098,'Find the Sum of Subsequence Powers','find-the-sum-of-subsequence-powers',3,1),(3099,'Harshad Number','harshad-number',1,1),(3100,'Water Bottles II','water-bottles-ii',2,1),(3101,'Count Alternating Subarrays','count-alternating-subarrays',2,1),(3102,'Minimize Manhattan Distances','minimize-manhattan-distances',3,1),(3103,'Find Trending Hashtags II ','find-trending-hashtags-ii',3,1),(3104,'Find Longest Self-Contained Substring','find-longest-self-contained-substring',3,1),(3105,'Longest Strictly Increasing or Strictly Decreasing Subarray','longest-strictly-increasing-or-strictly-decreasing-subarray',1,1),(3106,'Lexicographically Smallest String After Operations With Constraint','lexicographically-smallest-string-after-operations-with-constraint',2,1),(3107,'Minimum Operations to Make Median of Array Equal to K','minimum-operations-to-make-median-of-array-equal-to-k',2,1),(3108,'Minimum Cost Walk in Weighted Graph','minimum-cost-walk-in-weighted-graph',3,1),(3109,'Find the Index of Permutation','find-the-index-of-permutation',2,1),(3110,'Score of a String','score-of-a-string',1,1),(3111,'Minimum Rectangles to Cover Points','minimum-rectangles-to-cover-points',2,1),(3112,'Minimum Time to Visit Disappearing Nodes','minimum-time-to-visit-disappearing-nodes',2,1),(3113,'Find the Number of Subarrays Where Boundary Elements Are Maximum','find-the-number-of-subarrays-where-boundary-elements-are-maximum',3,1),(3114,'Latest Time You Can Obtain After Replacing Characters','latest-time-you-can-obtain-after-replacing-characters',1,1),(3115,'Maximum Prime Difference','maximum-prime-difference',2,1),(3116,'Kth Smallest Amount With Single Denomination Combination','kth-smallest-amount-with-single-denomination-combination',3,1),(3117,'Minimum Sum of Values by Dividing Array','minimum-sum-of-values-by-dividing-array',3,1),(3118,'Friday Purchase III ','friday-purchase-iii',2,1),(3119,'Maximum Number of Potholes That Can Be Fixed','maximum-number-of-potholes-that-can-be-fixed',2,1),(3120,'Count the Number of Special Characters I','count-the-number-of-special-characters-i',1,1),(3121,'Count the Number of Special Characters II','count-the-number-of-special-characters-ii',2,1),(3122,'Minimum Number of Operations to Satisfy Conditions','minimum-number-of-operations-to-satisfy-conditions',2,1),(3123,'Find Edges in Shortest Paths','find-edges-in-shortest-paths',3,1),(3124,'Find Longest Calls','find-longest-calls',2,1),(3125,'Maximum Number That Makes Result of Bitwise AND Zero','maximum-number-that-makes-result-of-bitwise-and-zero',2,1),(3126,'Server Utilization Time','server-utilization-time',2,1),(3127,'Make a Square with the Same Color','make-a-square-with-the-same-color',1,1),(3128,'Right Triangles','right-triangles',2,1),(3129,'Find All Possible Stable Binary Arrays I','find-all-possible-stable-binary-arrays-i',2,1),(3130,'Find All Possible Stable Binary Arrays II','find-all-possible-stable-binary-arrays-ii',3,1),(3131,'Find the Integer Added to Array I','find-the-integer-added-to-array-i',1,1),(3132,'Find the Integer Added to Array II','find-the-integer-added-to-array-ii',2,1),(3133,'Minimum Array End','minimum-array-end',2,1),(3134,'Find the Median of the Uniqueness Array','find-the-median-of-the-uniqueness-array',3,1),(3135,'Equalize Strings by Adding or Removing Characters at Ends','equalize-strings-by-adding-or-removing-characters-at-ends',2,1),(3136,'Valid Word','valid-word',1,1),(3137,'Minimum Number of Operations to Make Word K-Periodic','minimum-number-of-operations-to-make-word-k-periodic',2,1),(3138,'Minimum Length of Anagram Concatenation','minimum-length-of-anagram-concatenation',2,1),(3139,'Minimum Cost to Equalize Array','minimum-cost-to-equalize-array',3,1),(3140,'Consecutive Available Seats II','consecutive-available-seats-ii',2,1),(3141,'Maximum Hamming Distances','maximum-hamming-distances',3,1),(3142,'Check if Grid Satisfies Conditions','check-if-grid-satisfies-conditions',1,1),(3143,'Maximum Points Inside the Square','maximum-points-inside-the-square',2,1),(3144,'Minimum Substring Partition of Equal Character Frequency','minimum-substring-partition-of-equal-character-frequency',2,1),(3145,'Find Products of Elements of Big Array','find-products-of-elements-of-big-array',3,1),(3146,'Permutation Difference between Two Strings','permutation-difference-between-two-strings',1,1),(3147,'Taking Maximum Energy From the Mystic Dungeon','taking-maximum-energy-from-the-mystic-dungeon',2,1),(3148,'Maximum Difference Score in a Grid','maximum-difference-score-in-a-grid',2,1),(3149,'Find the Minimum Cost Array Permutation','find-the-minimum-cost-array-permutation',3,1),(3150,'Invalid Tweets II','invalid-tweets-ii',1,1),(3151,'Special Array I','special-array-i',1,1),(3152,'Special Array II','special-array-ii',2,1),(3153,'Sum of Digit Differences of All Pairs','sum-of-digit-differences-of-all-pairs',2,1),(3154,'Find Number of Ways to Reach the K-th Stair','find-number-of-ways-to-reach-the-k-th-stair',3,1),(3155,'Maximum Number of Upgradable Servers','maximum-number-of-upgradable-servers',2,1),(3156,'Employee Task Duration and Concurrent Tasks','employee-task-duration-and-concurrent-tasks',3,1),(3157,'Find the Level of Tree with Minimum Sum','find-the-level-of-tree-with-minimum-sum',2,1),(3158,'Find the XOR of Numbers Which Appear Twice','find-the-xor-of-numbers-which-appear-twice',1,1),(3159,'Find Occurrences of an Element in an Array','find-occurrences-of-an-element-in-an-array',2,1),(3160,'Find the Number of Distinct Colors Among the Balls','find-the-number-of-distinct-colors-among-the-balls',2,1),(3161,'Block Placement Queries','block-placement-queries',3,1),(3162,'Find the Number of Good Pairs I','find-the-number-of-good-pairs-i',1,1),(3163,'String Compression III','string-compression-iii',2,1),(3164,'Find the Number of Good Pairs II','find-the-number-of-good-pairs-ii',2,1),(3165,'Maximum Sum of Subsequence With Non-adjacent Elements','maximum-sum-of-subsequence-with-non-adjacent-elements',3,1),(3166,'Calculate Parking Fees and Duration','calculate-parking-fees-and-duration',2,1),(3167,'Better Compression of String','better-compression-of-string',2,1),(3168,'Minimum Number of Chairs in a Waiting Room','minimum-number-of-chairs-in-a-waiting-room',1,1),(3169,'Count Days Without Meetings','count-days-without-meetings',2,1),(3170,'Lexicographically Minimum String After Removing Stars','lexicographically-minimum-string-after-removing-stars',2,1),(3171,'Find Subarray With Bitwise OR Closest to K','find-subarray-with-bitwise-or-closest-to-k',3,1),(3172,'Second Day Verification','second-day-verification',1,1),(3173,'Bitwise OR of Adjacent Elements','bitwise-or-of-adjacent-elements',1,1),(3174,'Clear Digits','clear-digits',1,1),(3175,'Find The First Player to win K Games in a Row','find-the-first-player-to-win-k-games-in-a-row',2,1),(3176,'Find the Maximum Length of a Good Subsequence I','find-the-maximum-length-of-a-good-subsequence-i',2,1),(3177,'Find the Maximum Length of a Good Subsequence II','find-the-maximum-length-of-a-good-subsequence-ii',3,1),(3178,'Find the Child Who Has the Ball After K Seconds','find-the-child-who-has-the-ball-after-k-seconds',1,1),(3179,'Find the N-th Value After K Seconds','find-the-n-th-value-after-k-seconds',2,1),(3180,'Maximum Total Reward Using Operations I','maximum-total-reward-using-operations-i',2,1),(3181,'Maximum Total Reward Using Operations II','maximum-total-reward-using-operations-ii',3,1),(3182,'Find Top Scoring Students','find-top-scoring-students',2,1),(3183,'The Number of Ways to Make the Sum','the-number-of-ways-to-make-the-sum',2,1),(3184,'Count Pairs That Form a Complete Day I','count-pairs-that-form-a-complete-day-i',1,1),(3185,'Count Pairs That Form a Complete Day II','count-pairs-that-form-a-complete-day-ii',2,1),(3186,'Maximum Total Damage With Spell Casting','maximum-total-damage-with-spell-casting',2,1),(3187,'Peaks in Array','peaks-in-array',3,1),(3188,'Find Top Scoring Students II','find-top-scoring-students-ii',3,1),(3189,'Minimum Moves to Get a Peaceful Board','minimum-moves-to-get-a-peaceful-board',2,1),(3190,'Find Minimum Operations to Make All Elements Divisible by Three','find-minimum-operations-to-make-all-elements-divisible-by-three',1,1),(3191,'Minimum Operations to Make Binary Array Elements Equal to One I','minimum-operations-to-make-binary-array-elements-equal-to-one-i',2,1),(3192,'Minimum Operations to Make Binary Array Elements Equal to One II','minimum-operations-to-make-binary-array-elements-equal-to-one-ii',2,1),(3193,'Count the Number of Inversions','count-the-number-of-inversions',3,1),(3194,'Minimum Average of Smallest and Largest Elements','minimum-average-of-smallest-and-largest-elements',1,1),(3195,'Find the Minimum Area to Cover All Ones I','find-the-minimum-area-to-cover-all-ones-i',2,1),(3196,'Maximize Total Cost of Alternating Subarrays','maximize-total-cost-of-alternating-subarrays',2,1),(3197,'Find the Minimum Area to Cover All Ones II','find-the-minimum-area-to-cover-all-ones-ii',3,1),(3198,'Find Cities in Each State','find-cities-in-each-state',1,1),(3199,'Count Triplets with Even XOR Set Bits I','count-triplets-with-even-xor-set-bits-i',1,1),(3200,'Maximum Height of a Triangle','maximum-height-of-a-triangle',1,1),(3201,'Find the Maximum Length of Valid Subsequence I','find-the-maximum-length-of-valid-subsequence-i',2,1),(3202,'Find the Maximum Length of Valid Subsequence II','find-the-maximum-length-of-valid-subsequence-ii',2,1),(3203,'Find Minimum Diameter After Merging Two Trees','find-minimum-diameter-after-merging-two-trees',3,1),(3204,'Bitwise User Permissions Analysis','bitwise-user-permissions-analysis',2,1),(3205,'Maximum Array Hopping Score I','maximum-array-hopping-score-i',2,1),(3206,'Alternating Groups I','alternating-groups-i',1,1),(3207,'Maximum Points After Enemy Battles','maximum-points-after-enemy-battles',2,1),(3208,'Alternating Groups II','alternating-groups-ii',2,1),(3209,'Number of Subarrays With AND Value of K','number-of-subarrays-with-and-value-of-k',3,1),(3210,'Find the Encrypted String','find-the-encrypted-string',1,1),(3211,'Generate Binary Strings Without Adjacent Zeros','generate-binary-strings-without-adjacent-zeros',2,1),(3212,'Count Submatrices With Equal Frequency of X and Y','count-submatrices-with-equal-frequency-of-x-and-y',2,1),(3213,'Construct String with Minimum Cost','construct-string-with-minimum-cost',3,1),(3214,'Year on Year Growth Rate','year-on-year-growth-rate',3,1),(3215,'Count Triplets with Even XOR Set Bits II','count-triplets-with-even-xor-set-bits-ii',2,1),(3216,'Lexicographically Smallest String After a Swap','lexicographically-smallest-string-after-a-swap',1,1),(3217,'Delete Nodes From Linked List Present in Array','delete-nodes-from-linked-list-present-in-array',2,1),(3218,'Minimum Cost for Cutting Cake I','minimum-cost-for-cutting-cake-i',2,1),(3219,'Minimum Cost for Cutting Cake II','minimum-cost-for-cutting-cake-ii',3,1),(3220,'Odd and Even Transactions','odd-and-even-transactions',2,1),(3221,'Maximum Array Hopping Score II','maximum-array-hopping-score-ii',2,1),(3222,'Find the Winning Player in Coin Game','find-the-winning-player-in-coin-game',1,1),(3223,'Minimum Length of String After Operations','minimum-length-of-string-after-operations',2,1),(3224,'Minimum Array Changes to Make Differences Equal','minimum-array-changes-to-make-differences-equal',2,1),(3225,'Maximum Score From Grid Operations','maximum-score-from-grid-operations',3,1),(3226,'Number of Bit Changes to Make Two Integers Equal','number-of-bit-changes-to-make-two-integers-equal',1,1),(3227,'Vowels Game in a String','vowels-game-in-a-string',2,1),(3228,'Maximum Number of Operations to Move Ones to the End','maximum-number-of-operations-to-move-ones-to-the-end',2,1),(3229,'Minimum Operations to Make Array Equal to Target','minimum-operations-to-make-array-equal-to-target',3,1),(3230,'Customer Purchasing Behavior Analysis','customer-purchasing-behavior-analysis',2,1),(3231,'Minimum Number of Increasing Subsequence to Be Removed','minimum-number-of-increasing-subsequence-to-be-removed',3,1),(3232,'Find if Digit Game Can Be Won','find-if-digit-game-can-be-won',1,1),(3233,'Find the Count of Numbers Which Are Not Special','find-the-count-of-numbers-which-are-not-special',2,1),(3234,'Count the Number of Substrings With Dominant Ones','count-the-number-of-substrings-with-dominant-ones',2,1),(3235,'Check if the Rectangle Corner Is Reachable','check-if-the-rectangle-corner-is-reachable',3,1),(3236,'CEO Subordinate Hierarchy','ceo-subordinate-hierarchy',3,1),(3237,'Alt and Tab Simulation','alt-and-tab-simulation',2,1),(3238,'Find the Number of Winning Players','find-the-number-of-winning-players',1,1),(3239,'Minimum Number of Flips to Make Binary Grid Palindromic I','minimum-number-of-flips-to-make-binary-grid-palindromic-i',2,1),(3240,'Minimum Number of Flips to Make Binary Grid Palindromic II','minimum-number-of-flips-to-make-binary-grid-palindromic-ii',2,1),(3241,'Time Taken to Mark All Nodes','time-taken-to-mark-all-nodes',3,1),(3242,'Design Neighbor Sum Service','design-neighbor-sum-service',1,1),(3243,'Shortest Distance After Road Addition Queries I','shortest-distance-after-road-addition-queries-i',2,1),(3244,'Shortest Distance After Road Addition Queries II','shortest-distance-after-road-addition-queries-ii',3,1),(3245,'Alternating Groups III','alternating-groups-iii',3,1),(3246,'Premier League Table Ranking','premier-league-table-ranking',1,1),(3247,'Number of Subsequences with Odd Sum','number-of-subsequences-with-odd-sum',2,1),(3248,'Snake in Matrix','snake-in-matrix',1,1),(3249,'Count the Number of Good Nodes','count-the-number-of-good-nodes',2,1),(3250,'Find the Count of Monotonic Pairs I','find-the-count-of-monotonic-pairs-i',3,1),(3251,'Find the Count of Monotonic Pairs II','find-the-count-of-monotonic-pairs-ii',3,1),(3252,'Premier League Table Ranking II','premier-league-table-ranking-ii',2,1),(3253,'Construct String with Minimum Cost (Easy)','construct-string-with-minimum-cost-easy',2,1),(3254,'Find the Power of K-Size Subarrays I','find-the-power-of-k-size-subarrays-i',2,1),(3255,'Find the Power of K-Size Subarrays II','find-the-power-of-k-size-subarrays-ii',2,1),(3256,'Maximum Value Sum by Placing Three Rooks I','maximum-value-sum-by-placing-three-rooks-i',3,1),(3257,'Maximum Value Sum by Placing Three Rooks II','maximum-value-sum-by-placing-three-rooks-ii',3,1),(3258,'Count Substrings That Satisfy K-Constraint I','count-substrings-that-satisfy-k-constraint-i',1,1),(3259,'Maximum Energy Boost From Two Drinks','maximum-energy-boost-from-two-drinks',2,1),(3260,'Find the Largest Palindrome Divisible by K','find-the-largest-palindrome-divisible-by-k',3,1),(3261,'Count Substrings That Satisfy K-Constraint II','count-substrings-that-satisfy-k-constraint-ii',3,1),(3262,'Find Overlapping Shifts','find-overlapping-shifts',2,1),(3263,'Convert Doubly Linked List to Array I','convert-doubly-linked-list-to-array-i',1,1),(3264,'Final Array State After K Multiplication Operations I','final-array-state-after-k-multiplication-operations-i',1,1),(3265,'Count Almost Equal Pairs I','count-almost-equal-pairs-i',2,1),(3266,'Final Array State After K Multiplication Operations II','final-array-state-after-k-multiplication-operations-ii',3,1),(3267,'Count Almost Equal Pairs II','count-almost-equal-pairs-ii',3,1),(3268,'Find Overlapping Shifts II','find-overlapping-shifts-ii',3,1),(3269,'Constructing Two Increasing Arrays','constructing-two-increasing-arrays',3,1),(3270,'Find the Key of the Numbers','find-the-key-of-the-numbers',1,1),(3271,'Hash Divided String','hash-divided-string',2,1),(3272,'Find the Count of Good Integers','find-the-count-of-good-integers',3,1),(3273,'Minimum Amount of Damage Dealt to Bob','minimum-amount-of-damage-dealt-to-bob',3,1),(3274,'Check if Two Chessboard Squares Have the Same Color','check-if-two-chessboard-squares-have-the-same-color',1,1),(3275,'K-th Nearest Obstacle Queries','k-th-nearest-obstacle-queries',2,1),(3276,'Select Cells in Grid With Maximum Score','select-cells-in-grid-with-maximum-score',3,1),(3277,'Maximum XOR Score Subarray Queries','maximum-xor-score-subarray-queries',3,1),(3278,'Find Candidates for Data Scientist Position II','find-candidates-for-data-scientist-position-ii',2,1),(3279,'Maximum Total Area Occupied by Pistons','maximum-total-area-occupied-by-pistons',3,1),(3280,'Convert Date to Binary','convert-date-to-binary',1,1),(3281,'Maximize Score of Numbers in Ranges','maximize-score-of-numbers-in-ranges',2,1),(3282,'Reach End of Array With Max Score','reach-end-of-array-with-max-score',2,1),(3283,'Maximum Number of Moves to Kill All Pawns','maximum-number-of-moves-to-kill-all-pawns',3,1),(3284,'Sum of Consecutive Subarrays','sum-of-consecutive-subarrays',2,1),(3285,'Find Indices of Stable Mountains','find-indices-of-stable-mountains',1,1),(3286,'Find a Safe Walk Through a Grid','find-a-safe-walk-through-a-grid',2,1),(3287,'Find the Maximum Sequence Value of Array','find-the-maximum-sequence-value-of-array',3,1),(3288,'Length of the Longest Increasing Path','length-of-the-longest-increasing-path',3,1),(3289,'The Two Sneaky Numbers of Digitville','the-two-sneaky-numbers-of-digitville',1,1),(3290,'Maximum Multiplication Score','maximum-multiplication-score',2,1),(3291,'Minimum Number of Valid Strings to Form Target I','minimum-number-of-valid-strings-to-form-target-i',2,1),(3292,'Minimum Number of Valid Strings to Form Target II','minimum-number-of-valid-strings-to-form-target-ii',3,1),(3293,'Calculate Product Final Price','calculate-product-final-price',2,1),(3294,'Convert Doubly Linked List to Array II','convert-doubly-linked-list-to-array-ii',2,1),(3295,'Report Spam Message','report-spam-message',2,1),(3296,'Minimum Number of Seconds to Make Mountain Height Zero','minimum-number-of-seconds-to-make-mountain-height-zero',2,1),(3297,'Count Substrings That Can Be Rearranged to Contain a String I','count-substrings-that-can-be-rearranged-to-contain-a-string-i',2,1),(3298,'Count Substrings That Can Be Rearranged to Contain a String II','count-substrings-that-can-be-rearranged-to-contain-a-string-ii',3,1),(3299,'Sum of Consecutive Subsequences','sum-of-consecutive-subsequences',3,1),(3300,'Minimum Element After Replacement With Digit Sum','minimum-element-after-replacement-with-digit-sum',1,1),(3301,'Maximize the Total Height of Unique Towers','maximize-the-total-height-of-unique-towers',2,1),(3302,'Find the Lexicographically Smallest Valid Sequence','find-the-lexicographically-smallest-valid-sequence',2,1),(3303,'Find the Occurrence of First Almost Equal Substring','find-the-occurrence-of-first-almost-equal-substring',3,1),(3304,'Find the K-th Character in String Game I','find-the-k-th-character-in-string-game-i',1,1),(3305,'Count of Substrings Containing Every Vowel and K Consonants I','count-of-substrings-containing-every-vowel-and-k-consonants-i',2,1),(3306,'Count of Substrings Containing Every Vowel and K Consonants II','count-of-substrings-containing-every-vowel-and-k-consonants-ii',2,1),(3307,'Find the K-th Character in String Game II','find-the-k-th-character-in-string-game-ii',3,1),(3308,'Find Top Performing Driver','find-top-performing-driver',2,1),(3309,'Maximum Possible Number by Binary Concatenation','maximum-possible-number-by-binary-concatenation',2,1),(3310,'Remove Methods From Project','remove-methods-from-project',2,1),(3311,'Construct 2D Grid Matching Graph Layout','construct-2d-grid-matching-graph-layout',3,1),(3312,'Sorted GCD Pair Queries','sorted-gcd-pair-queries',3,1),(3313,'Find the Last Marked Nodes in Tree','find-the-last-marked-nodes-in-tree',3,1),(3314,'Construct the Minimum Bitwise Array I','construct-the-minimum-bitwise-array-i',1,1),(3315,'Construct the Minimum Bitwise Array II','construct-the-minimum-bitwise-array-ii',2,1),(3316,'Find Maximum Removals From Source String','find-maximum-removals-from-source-string',2,1),(3317,'Find the Number of Possible Ways for an Event','find-the-number-of-possible-ways-for-an-event',3,1),(3318,'Find X-Sum of All K-Long Subarrays I','find-x-sum-of-all-k-long-subarrays-i',1,1),(3319,'K-th Largest Perfect Subtree Size in Binary Tree','k-th-largest-perfect-subtree-size-in-binary-tree',2,1),(3320,'Count The Number of Winning Sequences','count-the-number-of-winning-sequences',3,1),(3321,'Find X-Sum of All K-Long Subarrays II','find-x-sum-of-all-k-long-subarrays-ii',3,1),(3322,'Premier League Table Ranking III','premier-league-table-ranking-iii',2,1),(3323,'Minimize Connected Groups by Inserting Interval','minimize-connected-groups-by-inserting-interval',2,1),(3324,'Find the Sequence of Strings Appeared on the Screen','find-the-sequence-of-strings-appeared-on-the-screen',2,1),(3325,'Count Substrings With K-Frequency Characters I','count-substrings-with-k-frequency-characters-i',2,1),(3326,'Minimum Division Operations to Make Array Non Decreasing','minimum-division-operations-to-make-array-non-decreasing',2,1),(3327,'Check if DFS Strings Are Palindromes','check-if-dfs-strings-are-palindromes',3,1),(3328,'Find Cities in Each State II','find-cities-in-each-state-ii',2,1),(3329,'Count Substrings With K-Frequency Characters II','count-substrings-with-k-frequency-characters-ii',3,1),(3330,'Find the Original Typed String I','find-the-original-typed-string-i',1,1),(3331,'Find Subtree Sizes After Changes','find-subtree-sizes-after-changes',2,1),(3332,'Maximum Points Tourist Can Earn','maximum-points-tourist-can-earn',2,1),(3333,'Find the Original Typed String II','find-the-original-typed-string-ii',3,1),(3334,'Find the Maximum Factor Score of Array','find-the-maximum-factor-score-of-array',2,1),(3335,'Total Characters in String After Transformations I','total-characters-in-string-after-transformations-i',2,1),(3336,'Find the Number of Subsequences With Equal GCD','find-the-number-of-subsequences-with-equal-gcd',3,1),(3337,'Total Characters in String After Transformations II','total-characters-in-string-after-transformations-ii',3,1),(3338,'Second Highest Salary II','second-highest-salary-ii',2,1),(3339,'Find the Number of K-Even Arrays','find-the-number-of-k-even-arrays',2,1),(3340,'Check Balanced String','check-balanced-string',1,1),(3341,'Find Minimum Time to Reach Last Room I','find-minimum-time-to-reach-last-room-i',2,1),(3342,'Find Minimum Time to Reach Last Room II','find-minimum-time-to-reach-last-room-ii',2,1),(3343,'Count Number of Balanced Permutations','count-number-of-balanced-permutations',3,1),(3344,'Maximum Sized Array','maximum-sized-array',2,1),(3345,'Smallest Divisible Digit Product I','smallest-divisible-digit-product-i',1,1),(3346,'Maximum Frequency of an Element After Performing Operations I','maximum-frequency-of-an-element-after-performing-operations-i',2,1),(3347,'Maximum Frequency of an Element After Performing Operations II','maximum-frequency-of-an-element-after-performing-operations-ii',3,1),(3348,'Smallest Divisible Digit Product II','smallest-divisible-digit-product-ii',3,1),(3349,'Adjacent Increasing Subarrays Detection I','adjacent-increasing-subarrays-detection-i',1,1),(3350,'Adjacent Increasing Subarrays Detection II','adjacent-increasing-subarrays-detection-ii',2,1),(3351,'Sum of Good Subsequences','sum-of-good-subsequences',3,1),(3352,'Count K-Reducible Numbers Less Than N','count-k-reducible-numbers-less-than-n',3,1),(3353,'Minimum Total Operations','minimum-total-operations',1,1),(3354,'Make Array Elements Equal to Zero','make-array-elements-equal-to-zero',1,1),(3355,'Zero Array Transformation I','zero-array-transformation-i',2,1),(3356,'Zero Array Transformation II','zero-array-transformation-ii',2,1),(3357,'Minimize the Maximum Adjacent Element Difference','minimize-the-maximum-adjacent-element-difference',3,1),(3358,'Books with NULL Ratings','books-with-null-ratings',1,1),(3359,'Find Sorted Submatrices With Maximum Element at Most K','find-sorted-submatrices-with-maximum-element-at-most-k',3,1),(3360,'Stone Removal Game','stone-removal-game',1,1),(3361,'Shift Distance Between Two Strings','shift-distance-between-two-strings',2,1),(3362,'Zero Array Transformation III','zero-array-transformation-iii',2,1),(3363,'Find the Maximum Number of Fruits Collected','find-the-maximum-number-of-fruits-collected',3,1),(3364,'Minimum Positive Sum Subarray ','minimum-positive-sum-subarray',1,1),(3365,'Rearrange K Substrings to Form Target String','rearrange-k-substrings-to-form-target-string',2,1),(3366,'Minimum Array Sum','minimum-array-sum',2,1),(3367,'Maximize Sum of Weights after Edge Removals','maximize-sum-of-weights-after-edge-removals',3,1),(3368,'First Letter Capitalization','first-letter-capitalization',3,1),(3369,'Design an Array Statistics Tracker ','design-an-array-statistics-tracker',3,1),(3370,'Smallest Number With All Set Bits','smallest-number-with-all-set-bits',1,1),(3371,'Identify the Largest Outlier in an Array','identify-the-largest-outlier-in-an-array',2,1),(3372,'Maximize the Number of Target Nodes After Connecting Trees I','maximize-the-number-of-target-nodes-after-connecting-trees-i',2,1),(3373,'Maximize the Number of Target Nodes After Connecting Trees II','maximize-the-number-of-target-nodes-after-connecting-trees-ii',3,1),(3374,'First Letter Capitalization II','first-letter-capitalization-ii',3,1),(3375,'Minimum Operations to Make Array Values Equal to K','minimum-operations-to-make-array-values-equal-to-k',1,1),(3376,'Minimum Time to Break Locks I','minimum-time-to-break-locks-i',2,1),(3377,'Digit Operations to Make Two Integers Equal','digit-operations-to-make-two-integers-equal',2,1),(3378,'Count Connected Components in LCM Graph','count-connected-components-in-lcm-graph',3,1),(3379,'Transformed Array','transformed-array',1,1),(3380,'Maximum Area Rectangle With Point Constraints I','maximum-area-rectangle-with-point-constraints-i',2,1),(3381,'Maximum Subarray Sum With Length Divisible by K','maximum-subarray-sum-with-length-divisible-by-k',2,1),(3382,'Maximum Area Rectangle With Point Constraints II','maximum-area-rectangle-with-point-constraints-ii',3,1),(3383,'Minimum Runes to Add to Cast Spell','minimum-runes-to-add-to-cast-spell',3,1),(3384,'Team Dominance by Pass Success','team-dominance-by-pass-success',3,1),(3385,'Minimum Time to Break Locks II','minimum-time-to-break-locks-ii',3,1),(3386,'Button with Longest Push Time','button-with-longest-push-time',1,1),(3387,'Maximize Amount After Two Days of Conversions','maximize-amount-after-two-days-of-conversions',2,1),(3388,'Count Beautiful Splits in an Array','count-beautiful-splits-in-an-array',2,1),(3389,'Minimum Operations to Make Character Frequencies Equal','minimum-operations-to-make-character-frequencies-equal',3,1),(3390,'Longest Team Pass Streak','longest-team-pass-streak',3,1),(3391,'Design a 3D Binary Matrix with Efficient Layer Tracking','design-a-3d-binary-matrix-with-efficient-layer-tracking',2,1),(3392,'Count Subarrays of Length Three With a Condition','count-subarrays-of-length-three-with-a-condition',1,1),(3393,'Count Paths With the Given XOR Value','count-paths-with-the-given-xor-value',2,1),(3394,'Check if Grid can be Cut into Sections','check-if-grid-can-be-cut-into-sections',2,1),(3395,'Subsequences with a Unique Middle Mode I','subsequences-with-a-unique-middle-mode-i',3,1),(3396,'Minimum Number of Operations to Make Elements in Array Distinct','minimum-number-of-operations-to-make-elements-in-array-distinct',1,1),(3397,'Maximum Number of Distinct Elements After Operations','maximum-number-of-distinct-elements-after-operations',2,1),(3398,'Smallest Substring With Identical Characters I','smallest-substring-with-identical-characters-i',3,1),(3399,'Smallest Substring With Identical Characters II','smallest-substring-with-identical-characters-ii',3,1),(3400,'Maximum Number of Matching Indices After Right Shifts','maximum-number-of-matching-indices-after-right-shifts',2,1),(3401,'Find Circular Gift Exchange Chains','find-circular-gift-exchange-chains',3,1),(3402,'Minimum Operations to Make Columns Strictly Increasing','minimum-operations-to-make-columns-strictly-increasing',1,1),(3403,'Find the Lexicographically Largest String From the Box I','find-the-lexicographically-largest-string-from-the-box-i',2,1),(3404,'Count Special Subsequences','count-special-subsequences',2,1),(3405,'Count the Number of Arrays with K Matching Adjacent Elements','count-the-number-of-arrays-with-k-matching-adjacent-elements',3,1),(3406,'Find the Lexicographically Largest String From the Box II','find-the-lexicographically-largest-string-from-the-box-ii',3,1),(3407,'Substring Matching Pattern','substring-matching-pattern',1,1),(3408,'Design Task Manager','design-task-manager',2,1),(3409,'Longest Subsequence With Decreasing Adjacent Difference','longest-subsequence-with-decreasing-adjacent-difference',2,1),(3410,'Maximize Subarray Sum After Removing All Occurrences of One Element','maximize-subarray-sum-after-removing-all-occurrences-of-one-element',3,1),(3411,'Maximum Subarray With Equal Products','maximum-subarray-with-equal-products',1,1),(3412,'Find Mirror Score of a String','find-mirror-score-of-a-string',2,1),(3413,'Maximum Coins From K Consecutive Bags','maximum-coins-from-k-consecutive-bags',2,1),(3414,'Maximum Score of Non-overlapping Intervals','maximum-score-of-non-overlapping-intervals',3,1),(3415,'Find Products with Three Consecutive Digits ','find-products-with-three-consecutive-digits',1,1),(3416,'Indexes of Subarray Sum','https://www.geeksforgeeks.org/problems/subarray-with-given-sum-1587115621/1',2,2),(3417,'Missing in Array','https://www.geeksforgeeks.org/problems/missing-number-in-array1416/1',1,2),(3418,'Kadane\'s Algorithm','https://www.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1',2,2),(3419,'Second Largest','https://www.geeksforgeeks.org/problems/second-largest3735/1',1,2),(3420,'Minimum Jumps','https://www.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1',2,2),(3421,'Array Duplicates','https://www.geeksforgeeks.org/problems/find-duplicates-in-an-array/1',1,2),(3422,'Array Leaders','https://www.geeksforgeeks.org/problems/leaders-in-an-array-1587115620/1',1,2),(3423,'Sort 0s, 1s and 2s','https://www.geeksforgeeks.org/problems/sort-an-array-of-0s-1s-and-2s4231/1',1,2),(3424,'Majority Element','https://www.geeksforgeeks.org/problems/majority-element-1587115620/1',2,2),(3425,'Kth Smallest','https://www.geeksforgeeks.org/problems/kth-smallest-element5635/1',2,2),(3426,'Minimize the Heights II','https://www.geeksforgeeks.org/problems/minimize-the-heights3351/1',2,2),(3427,'Parenthesis Checker','https://www.geeksforgeeks.org/problems/parenthesis-checker2744/1',1,2),(3428,'Count Inversions','https://www.geeksforgeeks.org/problems/inversion-of-array-1587115620/1',2,2),(3429,'Equilibrium Point','https://www.geeksforgeeks.org/problems/equilibrium-point-1587115620/1',1,2),(3430,'Check for BST','https://www.geeksforgeeks.org/problems/check-for-bst/1',1,2),(3431,'Binary Search','https://www.geeksforgeeks.org/problems/binary-search-1587115620/1',1,2),(3432,'Missing And Repeating','https://www.geeksforgeeks.org/problems/find-missing-and-repeating2512/1',1,2),(3433,'Left View of Binary Tree','https://www.geeksforgeeks.org/problems/left-view-of-binary-tree/1',1,2),(3434,'Longest Sub-Array with Sum K','https://www.geeksforgeeks.org/problems/longest-sub-array-with-sum-k0809/1',2,2),(3435,'Peak element','https://www.geeksforgeeks.org/problems/peak-element/1',4,2),(3436,'Undirected Graph Cycle','https://www.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1',2,2),(3437,'Minimum Platforms','https://www.geeksforgeeks.org/problems/minimum-platforms-1587115620/1',2,2),(3438,'Remove loop in Linked List','https://www.geeksforgeeks.org/problems/remove-loop-in-linked-list/1',2,2),(3439,'Two sum -Pairs with 0 Sum','https://www.geeksforgeeks.org/problems/count-pairs-with-given-sum5022/1',1,2),(3440,'0 - 1 Knapsack Problem','https://www.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1',2,2),(3441,'Perfect Sum Problem','https://www.geeksforgeeks.org/problems/perfect-sum-problem5633/1',2,2),(3442,'Detect Loop in linked list','https://www.geeksforgeeks.org/problems/detect-loop-in-linked-list/1',2,2),(3443,'Trapping Rain Water','https://www.geeksforgeeks.org/problems/trapping-rain-water-1587115621/1',3,2),(3444,'BFS of graph','https://www.geeksforgeeks.org/problems/bfs-traversal-of-graph/1',1,2),(3445,'Rotate Array','https://www.geeksforgeeks.org/problems/rotate-array-by-n-elements-1587115621/1',2,2),(3446,'Sum of Natural Numbers','https://www.geeksforgeeks.org/problems/sum-of-series2811/1',4,2),(3447,'Cycle in a Directed Graph','https://www.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1',2,2),(3448,'Maximum Product Subarray','https://www.geeksforgeeks.org/problems/maximum-product-subarray3604/1',2,2),(3449,'Next Greater Element','https://www.geeksforgeeks.org/problems/next-larger-element-1587115620/1',2,2),(3450,'Union of Arrays with Duplicates','https://www.geeksforgeeks.org/problems/union-of-two-arrays3538/1',1,2),(3451,'Tree Boundary Traversal','https://www.geeksforgeeks.org/problems/boundary-traversal-of-binary-tree/1',2,2),(3452,'Power of 2','https://www.geeksforgeeks.org/problems/power-of-2-1587115620/1',1,2),(3453,'Common in 3 Sorted Arrays','https://www.geeksforgeeks.org/problems/common-elements1132/1',1,2),(3454,'Kth from End of Linked List','https://www.geeksforgeeks.org/problems/nth-node-from-end-of-linked-list/1',1,2),(3455,'Array Search','https://www.geeksforgeeks.org/problems/search-an-element-in-an-array-1587115621/1',4,2),(3456,'Floor in a Sorted Array','https://www.geeksforgeeks.org/problems/floor-in-a-sorted-array-1587115620/1',1,2),(3457,'Array Subset','https://www.geeksforgeeks.org/problems/array-subset-of-another-array2317/1',4,2),(3458,'Smallest Positive Missing','https://www.geeksforgeeks.org/problems/smallest-positive-missing-number-1587115621/1',2,2),(3459,'Largest Element in Array','https://www.geeksforgeeks.org/problems/largest-element-in-array4009/1',4,2),(3460,'Count Digits','https://www.geeksforgeeks.org/problems/count-digits5716/1',1,2),(3461,'Reverse a String','https://www.geeksforgeeks.org/problems/reverse-a-string/1',4,2),(3462,'Union of 2 Sorted with Duplicates','https://www.geeksforgeeks.org/problems/union-of-two-sorted-arrays-1587115621/1',2,2),(3463,'Check Equal Arrays','https://www.geeksforgeeks.org/problems/check-if-two-arrays-are-equal-or-not3847/1',1,2),(3464,'Anagram','https://www.geeksforgeeks.org/problems/anagram-1587115620/1',1,2),(3465,'Palindrome String','https://www.geeksforgeeks.org/problems/palindrome-string0817/1',1,2),(3466,'Largest subarray with 0 sum','https://www.geeksforgeeks.org/problems/largest-subarray-with-0-sum/1',2,2),(3467,'K Sized Subarray Maximum','https://www.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1',2,2),(3468,'Reverse Words','https://www.geeksforgeeks.org/problems/reverse-words-in-a-given-string5459/1',1,2),(3469,'Middle of a Linked List','https://www.geeksforgeeks.org/problems/finding-middle-element-in-a-linked-list/1',1,2),(3470,'Top View of Binary Tree','https://www.geeksforgeeks.org/problems/top-view-of-binary-tree/1',2,2),(3471,'Palindrome Linked List','https://www.geeksforgeeks.org/problems/check-if-linked-list-is-pallindrome/1',2,2),(3472,'Nth Fibonacci Number','https://www.geeksforgeeks.org/problems/nth-fibonacci-number1335/1',1,2),(3473,'Two Sum - Pair with Given Sum','https://www.geeksforgeeks.org/problems/key-pair5616/1',1,2),(3474,'Longest Consecutive Subsequence','https://www.geeksforgeeks.org/problems/longest-consecutive-subsequence2449/1',2,2),(3475,'Reverse array in groups','https://www.geeksforgeeks.org/problems/reverse-array-in-groups0255/1',4,2),(3476,'Find triplets with zero sum','https://www.geeksforgeeks.org/problems/find-triplets-with-zero-sum/1',2,2),(3477,'Frequencies in a Limited Array','https://www.geeksforgeeks.org/problems/frequency-of-array-elements-1587115620/1',1,2),(3478,'Row with max 1s','https://www.geeksforgeeks.org/problems/row-with-max-1s0023/1',2,2),(3479,'Power Of Numbers','https://www.geeksforgeeks.org/problems/power-of-numbers-1587115620/1',2,2),(3480,'Balanced Tree Check','https://www.geeksforgeeks.org/problems/check-for-balanced-tree/1',1,2),(3481,'Longest Increasing Subsequence','https://www.geeksforgeeks.org/problems/longest-increasing-subsequence-1587115620/1',2,2),(3482,'Prime Number','https://www.geeksforgeeks.org/problems/prime-number2314/1',4,2),(3483,'Min and Max in Array','https://www.geeksforgeeks.org/problems/find-minimum-and-maximum-element-in-an-array4428/1',4,2),(3484,'Reverse a linked list','https://www.geeksforgeeks.org/problems/reverse-a-linked-list/1',1,2),(3485,'nCr','https://www.geeksforgeeks.org/problems/ncr1019/1',2,2),(3486,'Rat in a Maze Problem - I','https://www.geeksforgeeks.org/problems/rat-in-a-maze-problem/1',2,2),(3487,'Triplet Sum in Array','https://www.geeksforgeeks.org/problems/triplet-sum-in-array-1587115621/1',2,2),(3488,'K-th element of two  Arrays','https://www.geeksforgeeks.org/problems/k-th-element-of-two-sorted-array1317/1',2,2),(3489,'Sorted Array Search','https://www.geeksforgeeks.org/problems/who-will-win-1587115621/1',4,2),(3490,'Longest Palindrome Substring','https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string3411/1',2,2),(3491,'Diameter of a Binary Tree','https://www.geeksforgeeks.org/problems/diameter-of-binary-tree/1',2,2),(3492,'Spirally traversing a matrix','https://www.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1',2,2),(3493,'DFS of Graph','https://www.geeksforgeeks.org/problems/depth-first-traversal-for-a-graph/1',1,2),(3494,'N meetings in one room','https://www.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1',1,2),(3495,'Remove Duplicates from a Sorted Linked List','https://www.geeksforgeeks.org/problems/remove-duplicate-element-from-sorted-linked-list/1',1,2),(3496,'Fractional Knapsack','https://www.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1',2,2),(3497,'Longest Common Prefix of Strings','https://www.geeksforgeeks.org/problems/longest-common-prefix-in-an-array5129/1',1,2),(3498,'Linked List Insertion At End','https://www.geeksforgeeks.org/problems/linked-list-insertion-1587115620/1',4,2),(3499,'Subset Sum Problem','https://www.geeksforgeeks.org/problems/subset-sum-problem-1611555638/1',2,2),(3500,'Height of Binary Tree','https://www.geeksforgeeks.org/problems/height-of-binary-tree/1',1,2),(3501,'Add Number Linked Lists','https://www.geeksforgeeks.org/problems/add-two-numbers-represented-by-linked-lists/1',2,2),(3502,'Intersection in Y Shaped Lists','https://www.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1',2,2),(3503,'The Celebrity Problem','https://www.geeksforgeeks.org/problems/the-celebrity-problem/1',2,2),(3504,'Rotate Array by One','https://www.geeksforgeeks.org/problems/cyclically-rotate-an-array-by-one2614/1',4,2),(3505,'Square Root','https://www.geeksforgeeks.org/problems/square-root/1',1,2),(3506,'Longest Common Subsequence','https://www.geeksforgeeks.org/problems/longest-common-subsequence-1587115620/1',2,2),(3507,'Subarray with 0 sum','https://www.geeksforgeeks.org/problems/subarray-with-0-sum-1587115621/1',2,2),(3508,'Max Value Permutation','https://www.geeksforgeeks.org/problems/maximize-arrii-of-an-array0026/1',1,2),(3509,'Validate an IP Address','https://www.geeksforgeeks.org/problems/validate-an-ip-address-1587115621/1',2,2),(3510,'Number of occurrence','https://www.geeksforgeeks.org/problems/number-of-occurrence2259/1',1,2),(3511,'Merge Without Extra Space','https://www.geeksforgeeks.org/problems/merge-two-sorted-arrays-1587115620/1',2,2),(3512,'Bottom View of Binary Tree','https://www.geeksforgeeks.org/problems/bottom-view-of-binary-tree/1',2,2),(3513,'Stock buy and sell','https://www.geeksforgeeks.org/problems/stock-buy-and-sell-1587115621/1',2,2),(3514,'Permutations of a String','https://www.geeksforgeeks.org/problems/permutations-of-a-given-string2041/1',2,2),(3515,'Add 1 to a Linked List Number','https://www.geeksforgeeks.org/problems/add-1-to-a-number-represented-as-linked-list/1',2,2),(3516,'Identical Trees','https://www.geeksforgeeks.org/problems/determine-if-two-trees-are-identical/1',1,2),(3517,'Coin Change (Count Ways)','https://www.geeksforgeeks.org/problems/coin-change2448/1',2,2),(3518,'First and Last Occurrences','https://www.geeksforgeeks.org/problems/first-and-last-occurrences-of-x3116/1',2,2),(3519,'First Repeating Element','https://www.geeksforgeeks.org/problems/first-repeating-element4018/1',1,2),(3520,'Job Sequencing Problem','https://www.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1',2,2),(3521,'Find Transition Point','https://www.geeksforgeeks.org/problems/find-transition-point-1587115620/1',1,2),(3522,'Move All Zeroes to End','https://www.geeksforgeeks.org/problems/move-all-zeroes-to-end-of-array0751/1',1,2),(3523,'Non Repeating Character','https://www.geeksforgeeks.org/problems/non-repeating-character-1587115620/1',1,2),(3524,'Print 1 To N Without Loop','https://www.geeksforgeeks.org/problems/print-1-to-n-without-using-loops-1587115620/1',4,2),(3525,'Remove Duplicates Sorted Array','https://www.geeksforgeeks.org/problems/remove-duplicate-elements-from-sorted-array/1',1,2),(3526,'Sum Tree','https://www.geeksforgeeks.org/problems/sum-tree/1',2,2),(3527,'Maximum Index','https://www.geeksforgeeks.org/problems/maximum-index-1587115620/1',2,2),(3528,'Find Pair Given Difference','https://www.geeksforgeeks.org/problems/find-pair-given-difference1559/1',1,2),(3529,'Wave Array','https://www.geeksforgeeks.org/problems/wave-array-1587115621/1',1,2),(3530,'Longest Common Substring','https://www.geeksforgeeks.org/problems/longest-common-substring1452/1',2,2),(3531,'Topological sort','https://www.geeksforgeeks.org/problems/topological-sort/1',2,2),(3532,'Rotate a Linked List','https://www.geeksforgeeks.org/problems/rotate-a-linked-list/1',2,2),(3533,'Get Min from Stack','https://www.geeksforgeeks.org/problems/get-minimum-element-from-stack/1',2,2),(3534,'Search in Rotated Sorted Array','https://www.geeksforgeeks.org/problems/search-in-a-rotated-array4618/1',2,2),(3535,'Bubble Sort','https://www.geeksforgeeks.org/problems/bubble-sort/1',1,2),(3536,'Product array puzzle','https://www.geeksforgeeks.org/problems/product-array-puzzle4525/1',1,2),(3537,'Implement Atoi','https://www.geeksforgeeks.org/problems/implement-atoi/1',2,2),(3538,'Find Kth Rotation','https://www.geeksforgeeks.org/problems/rotation4723/1',1,2),(3539,'Rearrange Array Alternately','https://www.geeksforgeeks.org/problems/-rearrange-array-alternately-1587115620/1',2,2),(3540,'Partition Equal Subset Sum','https://www.geeksforgeeks.org/problems/subset-sum-problem2014/1',2,2),(3541,'First n Fibonacci','https://www.geeksforgeeks.org/problems/print-first-n-fibonacci-numbers1002/1',4,2),(3542,'Quick Sort','https://www.geeksforgeeks.org/problems/quick-sort/1',2,2),(3543,'Allocate Minimum Pages','https://www.geeksforgeeks.org/problems/allocate-minimum-number-of-pages0937/1',2,2),(3544,'Maximize The Cut Segments','https://www.geeksforgeeks.org/problems/cutted-segments1642/1',2,2),(3545,'Implement stack using array','https://www.geeksforgeeks.org/problems/implement-stack-using-array/1',4,2),(3546,'Chocolate Distribution Problem','https://www.geeksforgeeks.org/problems/chocolate-distribution-problem3825/1',1,2),(3547,'Remove duplicates from an unsorted linked list','https://www.geeksforgeeks.org/problems/remove-duplicates-from-an-unsorted-linked-list/1',1,2),(3548,'Strings Rotations of Each Other','https://www.geeksforgeeks.org/problems/check-if-strings-are-rotations-of-each-other-or-not-1587115620/1',1,2),(3549,'Minimum distance in an Array','https://www.geeksforgeeks.org/problems/minimum-distance-between-two-numbers/1',1,2),(3550,'String Rotated by 2 Places','https://www.geeksforgeeks.org/problems/check-if-string-is-rotated-by-two-places-1587115620/1',1,2),(3551,'Minimum Cost of ropes','https://www.geeksforgeeks.org/problems/minimum-cost-of-ropes-1587115620/1',1,2),(3552,'Stickler Thief','https://www.geeksforgeeks.org/problems/stickler-theif-1587115621/1',2,2),(3553,'Check if array is sorted','https://www.geeksforgeeks.org/problems/check-if-an-array-is-sorted0701/1',1,2),(3554,'Count Linked List Nodes','https://www.geeksforgeeks.org/problems/count-nodes-of-linked-list/1',4,2),(3555,'Edit Distance','https://www.geeksforgeeks.org/problems/edit-distance3702/1',3,2),(3556,'Find the number of islands','https://www.geeksforgeeks.org/problems/find-the-number-of-islands/1',2,2),(3557,'Value equal to index value','https://www.geeksforgeeks.org/problems/value-equal-to-index-value1330/1',4,2),(3558,'Pythagorean Triplet','https://www.geeksforgeeks.org/problems/pythagorean-triplet3018/1',2,2),(3559,'Find length of Loop','https://www.geeksforgeeks.org/problems/find-length-of-loop/1',1,2),(3560,'Multiply two strings','https://www.geeksforgeeks.org/problems/multiply-two-strings/1',2,2),(3561,'Intersection of Arrays with Distinct','https://www.geeksforgeeks.org/problems/intersection-of-two-arrays2404/1',1,2),(3562,'Level Order in spiral form','https://www.geeksforgeeks.org/problems/level-order-traversal-in-spiral-form/1',1,2),(3563,'Sort a linked list of 0s, 1s and 2s','https://www.geeksforgeeks.org/problems/given-a-linked-list-of-0s-1s-and-2s-sort-it/1',1,2),(3564,'Merge Sort','https://www.geeksforgeeks.org/problems/merge-sort/1',2,2),(3565,'Coin Change (Minimum Coins)','https://www.geeksforgeeks.org/problems/number-of-coins1824/1',2,2),(3566,'Level order traversal','https://www.geeksforgeeks.org/problems/level-order-traversal/1',1,2),(3567,'Maximum Index','https://www.geeksforgeeks.org/problems/maximum-index3307/1',2,2),(3568,'Delete in a Singly Linked List','https://www.geeksforgeeks.org/problems/delete-a-node-in-single-linked-list/1',1,2),(3569,'Mirror Tree','https://www.geeksforgeeks.org/problems/mirror-tree/1',1,2),(3570,'K-th Bit is Set or Not','https://www.geeksforgeeks.org/problems/check-whether-k-th-bit-is-set-or-not-1587115620/1',1,2),(3571,'Stream First Non-repeating','https://www.geeksforgeeks.org/problems/first-non-repeating-character-in-a-stream1216/1',2,2),(3572,'Linked List Group Reverse','https://www.geeksforgeeks.org/problems/reverse-a-linked-list-in-groups-of-given-size/1',3,2),(3573,'Alternate Positive Negative','https://www.geeksforgeeks.org/problems/array-of-alternate-ve-and-ve-nos1401/1',1,2),(3574,'Delete without head pointer','https://www.geeksforgeeks.org/problems/delete-without-head-pointer/1',1,2),(3575,'Queue Using Array','https://www.geeksforgeeks.org/problems/implement-queue-using-array/1',4,2),(3576,'Count total set bits','https://www.geeksforgeeks.org/problems/count-total-set-bits-1587115620/1',2,2),(3577,'Count the triplets','https://www.geeksforgeeks.org/problems/count-the-triplets4615/1',1,2),(3578,'Ways to Reach the n\'th Stair','https://www.geeksforgeeks.org/problems/count-ways-to-reach-the-nth-stair-1587115620/1',2,2),(3579,'At Least K Occurrences','https://www.geeksforgeeks.org/problems/first-element-to-occur-k-times5150/1',1,2),(3580,'Max Sum Increasing Subsequence','https://www.geeksforgeeks.org/problems/maximum-sum-increasing-subsequence4749/1',2,2),(3581,'Minimum element in BST','https://www.geeksforgeeks.org/problems/minimum-element-in-bst/1',4,2),(3582,'4 Sum - All Quadruples','https://www.geeksforgeeks.org/problems/find-all-four-sum-numbers1732/1',2,2),(3583,'Stock span problem','https://www.geeksforgeeks.org/problems/stock-span-problem-1587115621/1',2,2),(3584,'Insertion Sort','https://www.geeksforgeeks.org/problems/insertion-sort/1',1,2),(3585,'Dijkstra Algorithm','https://www.geeksforgeeks.org/problems/implementing-dijkstra-set-1-adjacency-matrix/1',2,2),(3586,'Isomorphic Strings','https://www.geeksforgeeks.org/problems/isomorphic-strings-1587115620/1',1,2),(3587,'Alternates in an Array','https://www.geeksforgeeks.org/problems/print-alternate-elements-of-an-array/1',4,2),(3588,'Vertical Tree Traversal','https://www.geeksforgeeks.org/problems/print-a-binary-tree-in-vertical-order/1',2,2),(3589,'Max Path Sum 2 Special Nodes','https://www.geeksforgeeks.org/problems/maximum-path-sum/1',3,2),(3590,'Sum 1 to n Divisors','https://www.geeksforgeeks.org/problems/sum-of-all-divisors-from-1-to-n4738/1',1,2),(3591,'LCA in  Binary Tree','https://www.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-binary-tree/1',2,2),(3592,'Perfect Numbers','https://www.geeksforgeeks.org/problems/perfect-numbers3207/1',1,2),(3593,'Bipartite Graph','https://www.geeksforgeeks.org/problems/bipartite-graph/1',2,2),(3594,'First Occurence','https://www.geeksforgeeks.org/problems/implement-strstr/1',4,2),(3595,'LCM And GCD','https://www.geeksforgeeks.org/problems/lcm-and-gcd4516/1',4,2),(3596,'Right View of Binary Tree','https://www.geeksforgeeks.org/problems/right-view-of-binary-tree/1',1,2),(3597,'Arithmetic Number','https://www.geeksforgeeks.org/problems/arithmetic-number2815/1',1,2),(3598,'Next Permutation','https://www.geeksforgeeks.org/problems/next-permutation5226/1',2,2),(3599,'Roman Number to Integer','https://www.geeksforgeeks.org/problems/roman-number-to-integer3201/1',1,2),(3600,'Circular tour','https://www.geeksforgeeks.org/problems/circular-tour-1587115620/1',2,2),(3601,'Immediate Smaller Element','https://www.geeksforgeeks.org/problems/immediate-smaller-element1142/1',4,2),(3602,'Recursively Remove Adjacent Duplicates','https://www.geeksforgeeks.org/problems/recursively-remove-all-adjacent-duplicates0744/1',2,2),(3603,'Find nth root of m','https://www.geeksforgeeks.org/problems/find-nth-root-of-m5843/1',1,2),(3604,'Construct Tree from Inorder & Preorder','https://www.geeksforgeeks.org/problems/construct-tree-1/1',2,2),(3605,'Nodes without a Sibling','https://www.geeksforgeeks.org/problems/print-all-nodes-that-dont-have-sibling/1',1,2),(3606,'Children Sum in a Binary Tree','https://www.geeksforgeeks.org/problems/children-sum-parent/1',2,2),(3607,'Histogram Max Rectangular Area','https://www.geeksforgeeks.org/problems/maximum-rectangular-area-in-a-histogram-1587115620/1',3,2),(3608,'Palindromic Array','https://www.geeksforgeeks.org/problems/palindromic-array-1587115620/1',4,2),(3609,'Three way partitioning','https://www.geeksforgeeks.org/problems/three-way-partitioning/1',1,2),(3610,'Minimum Swaps to Sort','https://www.geeksforgeeks.org/problems/minimum-swaps/1',2,2),(3611,'Max Sum Subarray of size K','https://www.geeksforgeeks.org/problems/max-sum-subarray-of-size-k5313/1',1,2),(3612,'Longest Substring with K Uniques','https://www.geeksforgeeks.org/problems/longest-k-unique-characters-substring0853/1',2,2),(3613,'First negative in every window of size k','https://www.geeksforgeeks.org/problems/first-negative-integer-in-every-window-of-size-k3345/1',2,2),(3614,'ZigZag Tree Traversal','https://www.geeksforgeeks.org/problems/zigzag-tree-traversal/1',2,2),(3615,'First Set Bit','https://www.geeksforgeeks.org/problems/find-first-set-bit-1587115620/1',1,2),(3616,'Smallest window containing all characters of another string','https://www.geeksforgeeks.org/problems/smallest-window-in-a-string-containing-all-the-characters-of-another-string-1587115621/1',3,2),(3617,'Flattening a Linked List','https://www.geeksforgeeks.org/problems/flattening-a-linked-list/1',2,2),(3618,'Preorder Traversal','https://www.geeksforgeeks.org/problems/preorder-traversal/1',4,2),(3619,'Knapsack with Duplicate Items','https://www.geeksforgeeks.org/problems/knapsack-with-duplicate-items4201/1',2,2),(3620,'Check If Circular Linked List','https://www.geeksforgeeks.org/problems/circular-linked-list/1',1,2),(3621,'Armstrong Numbers','https://www.geeksforgeeks.org/problems/armstrong-numbers2727/1',1,2),(3622,'Insert a node in a BST','https://www.geeksforgeeks.org/problems/insert-a-node-in-a-bst/1',1,2),(3623,'Identical Linked Lists','https://www.geeksforgeeks.org/problems/identical-linked-lists/1',4,2),(3624,'Selection Sort','https://www.geeksforgeeks.org/problems/selection-sort/1',1,2),(3625,'Sum of first n terms','https://www.geeksforgeeks.org/problems/sum-of-first-n-terms5843/1',4,2),(3626,'Search in a Row-Column sorted matrix','https://www.geeksforgeeks.org/problems/search-in-a-matrix17201720/1',1,2),(3627,'k largest elements','https://www.geeksforgeeks.org/problems/k-largest-elements4206/1',2,2),(3628,'Stack using Linked List','https://www.geeksforgeeks.org/problems/implement-stack-using-linked-list/1',1,2),(3629,'Delete in a Doubly Linked List','https://www.geeksforgeeks.org/problems/delete-node-in-doubly-linked-list/1',1,2),(3630,'Form the Largest Number','https://www.geeksforgeeks.org/problems/largest-number-formed-from-an-array1117/1',2,2),(3631,'Search in a 2D Matrix','https://www.geeksforgeeks.org/problems/sum-of-array-elements2502/1',5,2),(3632,'Inorder Traversal','https://www.geeksforgeeks.org/problems/inorder-traversal/1',4,2),(3633,'Kth largest element in BST','https://www.geeksforgeeks.org/problems/kth-largest-element-in-bst/1',1,2),(3634,'Two Stacks in an Array','https://www.geeksforgeeks.org/problems/implement-two-stacks-in-an-array/1',2,2),(3635,'Merge two sorted linked lists','https://www.geeksforgeeks.org/problems/merge-two-sorted-linked-lists/1',2,2),(3636,'Find all pairs with a given sum','https://www.geeksforgeeks.org/problems/find-all-pairs-whose-sum-is-x5808/1',1,2),(3637,'Largest BST','https://www.geeksforgeeks.org/problems/largest-bst/1',2,2),(3638,'Binary Tree  to DLL','https://www.geeksforgeeks.org/problems/binary-tree-to-dll/1',3,2),(3639,'Floyd Warshall','https://www.geeksforgeeks.org/problems/implementing-floyd-warshall2042/1',2,2),(3640,'Bellman-Ford','https://www.geeksforgeeks.org/problems/distance-from-the-source-bellman-ford-algorithm/1',2,2),(3641,'Reverse a Doubly Linked List','https://www.geeksforgeeks.org/problems/reverse-a-doubly-linked-list/1',1,2),(3642,'Tower Of Hanoi','https://www.geeksforgeeks.org/problems/tower-of-hanoi-1587115621/1',2,2),(3643,'Index of an Extra Element','https://www.geeksforgeeks.org/problems/index-of-an-extra-element/1',1,2),(3644,'Factorials of large numbers','https://www.geeksforgeeks.org/problems/factorials-of-large-numbers2508/1',2,2),(3645,'Symmetric Tree','https://www.geeksforgeeks.org/problems/symmetric-tree/1',1,2),(3646,'Partitions with Given Difference','https://www.geeksforgeeks.org/problems/partitions-with-given-difference/1',2,2),(3647,'Rotten Oranges','https://www.geeksforgeeks.org/problems/rotten-oranges2536/1',2,2),(3648,'LCA in BST','https://www.geeksforgeeks.org/problems/lowest-common-ancestor-in-a-bst/1',1,2),(3649,'Print number pattern','https://www.geeksforgeeks.org/problems/print-the-pattern-set-1/1',4,2),(3650,'Minimum sum partition','https://www.geeksforgeeks.org/problems/minimum-sum-partition3317/1',3,2),(3651,'Non Repeating Numbers','https://www.geeksforgeeks.org/problems/finding-the-numbers0215/1',2,2),(3652,'Print adjacency list','https://www.geeksforgeeks.org/problems/print-adjacency-list-1587115620/1',1,2),(3653,'Rod Cutting','https://www.geeksforgeeks.org/problems/rod-cutting0840/1',2,2),(3654,'LRU Cache','https://www.geeksforgeeks.org/problems/lru-cache/1',3,2),(3655,'Count number of hops','https://www.geeksforgeeks.org/problems/count-number-of-hops-1587115620/1',1,2),(3656,'Stock Buy and Sell – Multiple Transaction Allowed','https://www.geeksforgeeks.org/problems/stock-buy-and-sell2615/1',2,2),(3657,'Egg Dropping Puzzle','https://www.geeksforgeeks.org/problems/egg-dropping-puzzle-1587115620/1',2,2),(3658,'Palindromic Partitioning','https://www.geeksforgeeks.org/problems/palindromic-patitioning4845/1',3,2),(3659,'Convert array into Zig-Zag fashion','https://www.geeksforgeeks.org/problems/convert-array-into-zig-zag-fashion1638/1',1,2),(3660,'Minimum Spanning Tree','https://www.geeksforgeeks.org/problems/minimum-spanning-tree/1',2,2),(3661,'Count Palindromic Subsequences','https://www.geeksforgeeks.org/problems/count-palindromic-subsequences/1',2,2),(3662,'Factorial','https://www.geeksforgeeks.org/problems/factorial5739/1',4,2),(3663,'Delete Mid of a Stack','https://www.geeksforgeeks.org/problems/delete-middle-element-of-a-stack/1',1,2),(3664,'Shortest path in Directed Acyclic Graph','https://www.geeksforgeeks.org/problems/shortest-path-in-undirected-graph/1',2,2),(3665,'Stack using two queues','https://www.geeksforgeeks.org/problems/stack-using-two-queues/1',1,2),(3666,'Minimum sum','https://www.geeksforgeeks.org/problems/minimum-sum4058/1',2,2),(3667,'Move all negative elements to end','https://www.geeksforgeeks.org/problems/move-all-negative-elements-to-end1813/1',1,2),(3668,'Subset Sums','https://www.geeksforgeeks.org/problems/subset-sums2234/1',2,2),(3669,'Decision Making in Java','https://www.geeksforgeeks.org/problems/java-if-else-decision-making0924/1',4,2),(3670,'Delete nodes having greater value on right','https://www.geeksforgeeks.org/problems/delete-nodes-having-greater-value-on-right/1',1,2),(3671,'Check if subtree','https://www.geeksforgeeks.org/problems/check-if-subtree/1',2,2),(3672,'Count Squares','https://www.geeksforgeeks.org/problems/count-squares3649/1',4,2),(3673,'Max Circular Subarray Sum','https://www.geeksforgeeks.org/problems/max-circular-subarray-sum-1587115620/1',3,2),(3674,'Alien Dictionary','https://www.geeksforgeeks.org/problems/alien-dictionary/1',3,2),(3675,'Number of 1 Bits','https://www.geeksforgeeks.org/problems/set-bits0143/1',1,2),(3676,'M-Coloring Problem','https://www.geeksforgeeks.org/problems/m-coloring-problem-1587115620/1',2,2),(3677,'Longest Prefix Suffix','https://www.geeksforgeeks.org/problems/longest-prefix-suffix2527/1',3,2),(3678,'Intersection Sorted Linked Lists','https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-linked-lists/1',1,2),(3679,'Reverse Level Order Traversal','https://www.geeksforgeeks.org/problems/reverse-level-order-traversal/1',1,2),(3680,'Sorted and Rotated Minimum','https://www.geeksforgeeks.org/problems/minimum-element-in-a-sorted-and-rotated-array3611/1',1,2),(3681,'Activity Selection','https://www.geeksforgeeks.org/problems/activity-selection-1587115620/1',2,2),(3682,'Print Linked List','https://www.geeksforgeeks.org/problems/print-linked-list-elements/1',4,2),(3683,'Largest number possible','https://www.geeksforgeeks.org/problems/largest-number-possible5028/1',1,2),(3684,'Remove Duplicates','https://www.geeksforgeeks.org/problems/remove-duplicates3034/1',1,2),(3685,'Ceil The Floor','https://www.geeksforgeeks.org/problems/ceil-the-floor2802/1',1,2),(3686,'Queue using two Stacks','https://www.geeksforgeeks.org/problems/queue-using-two-stacks/1',1,2),(3687,'Total Decoding Messages','https://www.geeksforgeeks.org/problems/total-decoding-messages1235/1',2,2),(3688,'Queue using Linked List','https://www.geeksforgeeks.org/problems/implement-queue-using-linked-list/1',4,2),(3689,'Reverse First K elements of Queue','https://www.geeksforgeeks.org/problems/reverse-first-k-elements-of-queue/1',1,2),(3690,'Substrings with K Distinct','https://www.geeksforgeeks.org/problems/count-number-of-substrings4528/1',2,2),(3691,'Zero Sum Subarrays','https://www.geeksforgeeks.org/problems/zero-sum-subarrays1825/1',2,2),(3692,'Element with left side smaller and right side greater','https://www.geeksforgeeks.org/problems/unsorted-array4925/1',1,2),(3693,'Insert in a Sorted List','https://www.geeksforgeeks.org/problems/insert-in-a-sorted-list/1',1,2),(3694,'Doubly linked list Insertion at given position','https://www.geeksforgeeks.org/problems/insert-a-node-in-doubly-linked-list/1',4,2),(3695,'Median of an Array','https://www.geeksforgeeks.org/problems/find-the-median0527/1',4,2),(3696,'Bitonic Point','https://www.geeksforgeeks.org/problems/maximum-value-in-a-bitonic-array3001/1',1,2),(3697,'Minimum swaps and K together','https://www.geeksforgeeks.org/problems/minimum-swaps-required-to-bring-all-elements-less-than-or-equal-to-k-together4847/1',2,2),(3698,'Matrix Chain Multiplication','https://www.geeksforgeeks.org/problems/matrix-chain-multiplication0303/1',3,2),(3699,'Longest Repeating Subsequence','https://www.geeksforgeeks.org/problems/longest-repeating-subsequence2004/1',2,2),(3700,'Number of Provinces','https://www.geeksforgeeks.org/problems/number-of-provinces/1',2,2),(3701,'Sort a stack','https://www.geeksforgeeks.org/problems/sort-a-stack/1',2,2),(3702,'Smallest subarray with sum greater than x','https://www.geeksforgeeks.org/problems/smallest-subarray-with-sum-greater-than-x5651/1',1,2),(3703,'Nth Catalan Number','https://www.geeksforgeeks.org/problems/nth-catalan-number0817/1',2,2),(3704,'Minimum Multiplications to reach End','https://www.geeksforgeeks.org/problems/minimum-multiplications-to-reach-end/1',2,2),(3705,'Delete Middle of Linked List','https://www.geeksforgeeks.org/problems/delete-middle-of-linked-list/1',1,2),(3706,'Longest valid Parentheses','https://www.geeksforgeeks.org/problems/longest-valid-parentheses5657/1',3,2),(3707,'Queue Reversal','https://www.geeksforgeeks.org/problems/queue-reversal/1',1,2),(3708,'Array Pair Sum Divisibility Problem','https://www.geeksforgeeks.org/problems/array-pair-sum-divisibility-problem3257/1',2,2),(3709,'Swapping pairs make sum equal','https://www.geeksforgeeks.org/problems/swapping-pairs-make-sum-equal4142/1',2,2),(3710,'Word Break','https://www.geeksforgeeks.org/problems/word-break1352/1',2,2),(3711,'Third largest element','https://www.geeksforgeeks.org/problems/third-largest-element/1',1,2),(3712,'Two Repeated Elements','https://www.geeksforgeeks.org/problems/two-repeated-elements-1587115621/1',2,2),(3713,'Longest substring with distinct characters','https://www.geeksforgeeks.org/problems/longest-distinct-characters-in-string5848/1',1,2),(3714,'Searching in an Array','https://www.geeksforgeeks.org/problems/searching-a-number0324/1',4,2),(3715,'Inorder Successor in BST','https://www.geeksforgeeks.org/problems/inorder-successor-in-bst/1',1,2),(3716,'Root to leaf path sum','https://www.geeksforgeeks.org/problems/root-to-leaf-path-sum/1',1,2),(3717,'Valid Substring','https://www.geeksforgeeks.org/problems/valid-substring0624/1',2,2),(3718,'Median in a row-wise sorted Matrix','https://www.geeksforgeeks.org/problems/median-in-a-row-wise-sorted-matrix1527/1',3,2),(3719,'Predecessor and Successor','https://www.geeksforgeeks.org/problems/predecessor-and-successor/1',2,2),(3720,'Pairwise swap elements of a linked list','https://www.geeksforgeeks.org/problems/pairwise-swap-elements-of-a-linked-list-by-swapping-data/1',1,2),(3721,'Friends Pairing Problem','https://www.geeksforgeeks.org/problems/friends-pairing-problem5425/1',2,2),(3722,'Min distance between two given nodes of a Binary Tree','https://www.geeksforgeeks.org/problems/min-distance-between-two-given-nodes-of-a-binary-tree/1',3,2),(3723,'Search in a sorted Matrix','https://www.geeksforgeeks.org/problems/search-in-a-matrix-1587115621/1',2,2),(3724,'Delete a node from BST','https://www.geeksforgeeks.org/problems/delete-a-node-from-bst/1',2,2),(3725,'The Painter\'s Partition Problem-II','https://www.geeksforgeeks.org/problems/the-painters-partition-problem1535/1',3,2),(3726,'Leaves at Same Level or Not','https://www.geeksforgeeks.org/problems/leaf-at-same-level/1',1,2),(3727,'Shortest Common Supersequence','https://www.geeksforgeeks.org/problems/shortest-common-supersequence0322/1',2,2),(3728,'Median of 2 Sorted Arrays of Different Sizes','https://www.geeksforgeeks.org/problems/median-of-2-sorted-arrays-of-different-sizes/1',3,2),(3729,'Check for Binary String','https://www.geeksforgeeks.org/problems/check-for-binary/1',4,2),(3730,'Flood fill Algorithm','https://www.geeksforgeeks.org/problems/flood-fill-algorithm1856/1',2,2),(3731,'Count distinct elements in every window','https://www.geeksforgeeks.org/problems/count-distinct-elements-in-every-window/1',1,2),(3732,'Find median in a stream','https://www.geeksforgeeks.org/problems/find-median-in-a-stream-1587115620/1',3,2),(3733,'Gold Mine Problem','https://www.geeksforgeeks.org/problems/gold-mine-problem2608/1',2,2),(3734,'Root to Leaf Paths','https://www.geeksforgeeks.org/problems/root-to-leaf-paths/1',2,2),(3735,'Boolean Parenthesization','https://www.geeksforgeeks.org/problems/boolean-parenthesization5610/1',3,2),(3736,'Length of the longest substring','https://www.geeksforgeeks.org/problems/length-of-the-longest-substring3036/1',2,2),(3737,'Lucky Numbers','https://www.geeksforgeeks.org/problems/lucky-numbers2911/1',2,2),(3738,'Boolean Matrix','https://www.geeksforgeeks.org/problems/boolean-matrix-problem-1587115620/1',2,2),(3739,'Sort The Array','https://www.geeksforgeeks.org/problems/sort-the-array0055/1',4,2),(3740,'Postorder Traversal','https://www.geeksforgeeks.org/problems/postorder-traversal/1',4,2),(3741,'First and Second Smallests','https://www.geeksforgeeks.org/problems/find-the-smallest-and-second-smallest-element-in-an-array3226/1',4,2),(3742,'Binary Array Sorting','https://www.geeksforgeeks.org/problems/binary-array-sorting-1587115620/1',4,2),(3743,'Sorted insert for circular linked list','https://www.geeksforgeeks.org/problems/sorted-insert-for-circular-linked-list/1',2,2),(3744,'Heap Sort','https://www.geeksforgeeks.org/problems/heap-sort/1',2,2),(3745,'Shortest Path in Undirected','https://www.geeksforgeeks.org/problems/shortest-path-in-undirected-graph-having-unit-distance/1',2,2),(3746,'Sum Except First and Last','https://www.geeksforgeeks.org/problems/max-length-chain/1',4,2),(3747,'Check if frequencies can be equal','https://www.geeksforgeeks.org/problems/check-frequencies4211/1',2,2),(3748,'k-th Smallest in BST','https://www.geeksforgeeks.org/problems/find-k-th-smallest-element-in-bst/1',2,2),(3749,'Java Hello World','https://www.geeksforgeeks.org/problems/java-hello-world4004/1',4,2),(3750,'Non-Repeating Element','https://www.geeksforgeeks.org/problems/non-repeating-element3958/1',1,2),(3751,'Insert in Middle of Linked List','https://www.geeksforgeeks.org/problems/insert-in-middle-of-linked-list/1',4,2),(3752,'Kth Ancestor in a Tree','https://www.geeksforgeeks.org/problems/kth-ancestor-in-a-tree/1',2,2),(3753,'Majority Element II','https://www.geeksforgeeks.org/problems/majority-vote/1',2,2),(3754,'Rightmost different bit','https://www.geeksforgeeks.org/problems/rightmost-different-bit-1587115621/1',1,2),(3755,'Number of paths','https://www.geeksforgeeks.org/problems/number-of-paths0926/1',2,2),(3756,'Rearrange an array with O(1) extra space','https://www.geeksforgeeks.org/problems/rearrange-an-array-with-o1-extra-space3142/1',2,2),(3757,'Painting the Fence','https://www.geeksforgeeks.org/problems/painting-the-fence3727/1',2,2),(3758,'Ceil in BST','https://www.geeksforgeeks.org/problems/implementing-ceil-in-bst/1',2,2),(3759,'Steps by Knight','https://www.geeksforgeeks.org/problems/steps-by-knight5927/1',2,2),(3760,'Combination Sum','https://www.geeksforgeeks.org/problems/combination-sum-1587115620/1',2,2),(3761,'Sum of Array','https://www.geeksforgeeks.org/problems/sum-of-array2326/1',4,2),(3762,'Odd or Even','https://www.geeksforgeeks.org/problems/odd-or-even3618/1',4,2),(3763,'Minimum Cost Path','https://www.geeksforgeeks.org/problems/minimum-cost-path3833/1',3,2),(3764,'Rotating an Array','https://www.geeksforgeeks.org/problems/reversal-algorithm5340/1',4,2),(3765,'More than n/k Occurrences','https://www.geeksforgeeks.org/problems/count-element-occurences/1',1,2),(3766,'Shortest Source to Destination Path','https://www.geeksforgeeks.org/problems/shortest-source-to-destination-path3544/1',2,2),(3767,'Pascal Triangle','https://www.geeksforgeeks.org/problems/pascal-triangle0652/1',2,2),(3768,'Count the number of possible triangles','https://www.geeksforgeeks.org/problems/count-possible-triangles-1587115620/1',2,2),(3769,'Count the Zeros','https://www.geeksforgeeks.org/problems/count-the-zeros2550/1',1,2),(3770,'Most Frequent Character','https://www.geeksforgeeks.org/problems/maximum-occuring-character-1587115620/1',4,2),(3771,'Count Leaves in Binary Tree','https://www.geeksforgeeks.org/problems/count-leaves-in-binary-tree/1',4,2),(3772,'Check the status - Python','https://www.geeksforgeeks.org/problems/check-the-status/1',1,2),(3773,'Consecutive 1\'s not allowed','https://www.geeksforgeeks.org/problems/consecutive-1s-not-allowed1912/1',2,2),(3774,'Largest square formed in a matrix','https://www.geeksforgeeks.org/problems/largest-square-formed-in-a-matrix0806/1',2,2),(3775,'Form a palindrome','https://www.geeksforgeeks.org/problems/form-a-palindrome1455/1',2,2),(3776,'Replace O\'s with X\'s','https://www.geeksforgeeks.org/problems/replace-os-with-xs0052/1',2,2),(3777,'Segregate 0s and 1s','https://www.geeksforgeeks.org/problems/segregate-0s-and-1s5106/1',1,2),(3778,'Max sum in the configuration','https://www.geeksforgeeks.org/problems/max-sum-in-the-configuration/1',2,2),(3779,'Max Sum without Adjacents','https://www.geeksforgeeks.org/problems/max-sum-without-adjacents2430/1',2,2),(3780,'Sum of two large numbers','https://www.geeksforgeeks.org/problems/sum-of-numbers-or-number1219/1',2,2),(3781,'Max  rectangle','https://www.geeksforgeeks.org/problems/max-rectangle/1',3,2),(3782,'Minimize the Heights I','https://www.geeksforgeeks.org/problems/minimize-the-heights-i/1',2,2),(3783,'Is Binary Tree Heap','https://www.geeksforgeeks.org/problems/is-binary-tree-heap/1',2,2),(3784,'Isomorphic Trees','https://www.geeksforgeeks.org/problems/check-if-tree-is-isomorphic/1',2,2),(3785,'Reverse an Array','https://www.geeksforgeeks.org/problems/reverse-an-array/1',1,2),(3786,'Sum of nodes on the longest path','https://www.geeksforgeeks.org/problems/sum-of-the-longest-bloodline-of-a-tree/1',2,2),(3787,'Rotate by 90 degree','https://www.geeksforgeeks.org/problems/rotate-by-90-degree-1587115621/1',1,2),(3788,'Precise Format - Java','https://www.geeksforgeeks.org/problems/precise-fomat-java/1',1,2),(3789,'Count of smaller elements','https://www.geeksforgeeks.org/problems/count-of-smaller-elements5947/1',4,2),(3790,'Maximum path sum in matrix','https://www.geeksforgeeks.org/problems/path-in-matrix3805/1',2,2),(3791,'Infix to Postfix','https://www.geeksforgeeks.org/problems/infix-to-postfix-1587115620/1',2,2),(3792,'Josephus problem','https://www.geeksforgeeks.org/problems/josephus-problem/1',1,2),(3793,'Largest prime factor','https://www.geeksforgeeks.org/problems/largest-prime-factor2601/1',2,2),(3794,'Count Pairs whose sum is equal to X','https://www.geeksforgeeks.org/problems/count-pairs-whose-sum-is-equal-to-x/1',1,2),(3795,'Sort according to an Array','https://www.geeksforgeeks.org/problems/relative-sorting4323/1',2,2),(3796,'Is Binary Number Multiple of 3','https://www.geeksforgeeks.org/problems/is-binary-number-multiple-of-30654/1',1,2),(3797,'Factorials Less than or Equal to n','https://www.geeksforgeeks.org/problems/find-all-factorial-numbers-less-than-or-equal-to-n3548/1',1,2),(3798,'K distance from root','https://www.geeksforgeeks.org/problems/k-distance-from-root/1',1,2),(3799,'Merge k Sorted Arrays','https://www.geeksforgeeks.org/problems/merge-k-sorted-arrays/1',2,2),(3800,'Count Odd and Even','https://www.geeksforgeeks.org/problems/count-odd-even/1',4,2),(3801,'Matrix Boundary Traversal','https://www.geeksforgeeks.org/problems/boundary-traversal-of-matrix-1587115620/1',1,2),(3802,'Aggressive Cows','https://www.geeksforgeeks.org/problems/aggressive-cows/1',2,2),(3803,'Transpose of Matrix','https://www.geeksforgeeks.org/problems/transpose-of-matrix-1587115621/1',1,2),(3804,'K Sum Paths','https://www.geeksforgeeks.org/problems/k-sum-paths/1',2,2),(3805,'Subarrays Product Less than K','https://www.geeksforgeeks.org/problems/count-the-subarrays-having-product-less-than-k1708/1',2,2),(3806,'String Duplicates Removal','https://www.geeksforgeeks.org/problems/remove-all-duplicates-from-a-given-string4321/1',1,2),(3807,'C++ Hello World','https://www.geeksforgeeks.org/problems/c-hello-world3402/1',4,2),(3808,'Max Min','https://www.geeksforgeeks.org/problems/max-min/1',4,2),(3809,'Geek Jump','https://www.geeksforgeeks.org/problems/geek-jump/1',1,2),(3810,'Bit Difference','https://www.geeksforgeeks.org/problems/bit-difference-1587115620/1',4,2),(3811,'Longest Bitonic subsequence','https://www.geeksforgeeks.org/problems/longest-bitonic-subsequence0824/1',2,2),(3812,'Reverse Using Stack','https://www.geeksforgeeks.org/problems/reverse-a-string-using-stack/1',1,2),(3813,'Power Set','https://www.geeksforgeeks.org/problems/power-set4302/1',2,2),(3814,'Duplicate Subtree','https://www.geeksforgeeks.org/problems/duplicate-subtree-in-binary-tree/1',2,2),(3815,'Last index of One','https://www.geeksforgeeks.org/problems/last-index-of-15847/1',4,2),(3816,'Solve the Sudoku','https://www.geeksforgeeks.org/problems/solve-the-sudoku-1587115621/1',3,2),(3817,'Largest number in K swaps','https://www.geeksforgeeks.org/problems/largest-number-in-k-swaps-1587115620/1',2,2),(3818,'Search Pattern (KMP-Algorithm)','https://www.geeksforgeeks.org/problems/search-pattern0205/1',2,2),(3819,'Minimum Operations','https://www.geeksforgeeks.org/problems/find-optimum-operation4504/1',1,2),(3820,'Print Elements of Array','https://www.geeksforgeeks.org/problems/print-elements-of-array4910/1',4,2),(3821,'Trailing zeroes in factorial','https://www.geeksforgeeks.org/problems/trailing-zeroes-in-factorial5134/1',1,2),(3822,'Binary Heap Operations','https://www.geeksforgeeks.org/problems/operations-on-binary-min-heap/1',2,2),(3823,'Strongly Connected','https://www.geeksforgeeks.org/problems/strongly-connected-components-kosarajus-algo/1',2,2),(3824,'Connect Nodes of Levels','https://www.geeksforgeeks.org/problems/connect-nodes-at-same-level/1',2,2),(3825,'Find missing in second array','https://www.geeksforgeeks.org/problems/in-first-but-second5423/1',1,2),(3826,'Smallest distinct window','https://www.geeksforgeeks.org/problems/smallest-distant-window3132/1',2,2),(3827,'Burning Tree','https://www.geeksforgeeks.org/problems/burning-tree/1',3,2),(3828,'Interleaved Strings','https://www.geeksforgeeks.org/problems/interleaved-strings/1',2,2),(3829,'Clone List with Next and Random','https://www.geeksforgeeks.org/problems/clone-a-linked-list-with-next-and-random-pointer/1',3,2),(3830,'GCD of two numbers','https://www.geeksforgeeks.org/problems/gcd-of-two-numbers3459/1',4,2),(3831,'Single Among Doubles in a Sorted','https://www.geeksforgeeks.org/problems/find-the-element-that-appears-once-in-sorted-array0624/1',1,2),(3832,'Closest Number','https://www.geeksforgeeks.org/problems/closest-number5728/1',4,2),(3833,'Reverse digits','https://www.geeksforgeeks.org/problems/reverse-digit0316/1',4,2),(3834,'Search a node in BST','https://www.geeksforgeeks.org/problems/search-a-node-in-bst/1',4,2),(3835,'Nearest multiple of 10','https://www.geeksforgeeks.org/problems/nearest-multiple-of-102437/1',1,2),(3836,'Longest subarray with sum divisible by K','https://www.geeksforgeeks.org/problems/longest-subarray-with-sum-divisible-by-k1259/1',2,2),(3837,'Distance of nearest cell having 1','https://www.geeksforgeeks.org/problems/distance-of-nearest-cell-having-1-1587115620/1',2,2),(3838,'Count BST nodes that lie in a given range','https://www.geeksforgeeks.org/problems/count-bst-nodes-that-lie-in-a-given-range/1',2,2),(3839,'Median of BST','https://www.geeksforgeeks.org/problems/median-of-bst/1',1,2),(3840,'Reverse a Stack','https://www.geeksforgeeks.org/problems/reverse-a-stack/1',2,2),(3841,'Uncommon characters','https://www.geeksforgeeks.org/problems/uncommon-characters4932/1',4,2),(3842,'Palindrome','https://www.geeksforgeeks.org/problems/palindrome0746/1',1,2),(3843,'N-Queen Problem','https://www.geeksforgeeks.org/problems/n-queen-problem0315/1',3,2),(3844,'Remove Consecutive Characters','https://www.geeksforgeeks.org/problems/consecutive-elements2306/1',1,2),(3845,'Winner of an election','https://www.geeksforgeeks.org/problems/winner-of-an-election-where-votes-are-represented-as-candidate-names-1587115621/1',1,2),(3846,'Is Linked List Length Even?','https://www.geeksforgeeks.org/problems/linked-list-length-even-or-odd/1',4,2),(3847,'Geek\'s Training','https://www.geeksforgeeks.org/problems/geeks-training/1',2,2),(3848,'Overlapping Intervals','https://www.geeksforgeeks.org/problems/overlapping-intervals--170633/1',2,2),(3849,'Print Pattern','https://www.geeksforgeeks.org/problems/print-pattern3549/1',1,2),(3850,'Top K Frequent in Array','https://www.geeksforgeeks.org/problems/top-k-frequent-elements-in-array/1',2,2),(3851,'Node at a given index in linked list','https://www.geeksforgeeks.org/problems/node-at-a-given-index-in-linked-list/1',1,2),(3852,'Print Anagrams Together','https://www.geeksforgeeks.org/problems/print-anagrams-together/1',2,2),(3853,'Triplets with Smaller Sum','https://www.geeksforgeeks.org/problems/count-triplets-with-sum-smaller-than-x5549/1',2,2),(3854,'Find Index','https://www.geeksforgeeks.org/problems/find-index4752/1',1,2),(3855,'Maximum Sub Array','https://www.geeksforgeeks.org/problems/maximum-sub-array5443/1',2,2),(3856,'Minimize the sum of product','https://www.geeksforgeeks.org/problems/minimize-the-sum-of-product1525/1',1,2),(3857,'Print GFG n times','https://www.geeksforgeeks.org/problems/print-gfg-n-times/1',1,2),(3858,'Floor in BST','https://www.geeksforgeeks.org/problems/floor-in-bst/1',2,2),(3859,'Longest Palindromic Subsequence','https://www.geeksforgeeks.org/problems/longest-palindromic-subsequence-1612327878/1',2,2),(3860,'Add Binary Strings','https://www.geeksforgeeks.org/problems/add-binary-strings3805/1',2,2),(3861,'Roof Top','https://www.geeksforgeeks.org/problems/roof-top-1587115621/1',1,2),(3862,'Data Type','https://www.geeksforgeeks.org/problems/data-type-1666706751/1',4,2),(3863,'Start Coding - Java','https://www.geeksforgeeks.org/problems/start-coding-java/1',1,2),(3864,'Sum of First N Natural Numbers','https://www.geeksforgeeks.org/problems/reverse-coding2452/1',1,2),(3865,'Remove every k\'th node','https://www.geeksforgeeks.org/problems/remove-every-kth-node/1',1,2),(3866,'Maximum Score from Subarray Minimums','https://www.geeksforgeeks.org/problems/max-sum-in-sub-arrays0824/1',2,2),(3867,'Product of an Array','https://www.geeksforgeeks.org/problems/product-of-array-element/1',1,2),(3868,'Number of pairs','https://www.geeksforgeeks.org/problems/number-of-pairs-1587115620/1',2,2),(3869,'Single Among Doubles','https://www.geeksforgeeks.org/problems/element-appearing-once2552/1',2,2),(3870,'Merge two BST \'s','https://www.geeksforgeeks.org/problems/merge-two-bst-s/1',2,2),(3871,'Segregate even and odd nodes in a Linked List','https://www.geeksforgeeks.org/problems/segregate-even-and-odd-nodes-in-a-linked-list5035/1',2,2),(3872,'Maximum occured integer','https://www.geeksforgeeks.org/problems/maximum-occured-integer4602/1',2,2),(3873,'Evaluation of Postfix Expression','https://www.geeksforgeeks.org/problems/evaluation-of-postfix-expression1735/1',1,2),(3874,'Swap the array elements','https://www.geeksforgeeks.org/problems/need-some-change/1',1,2),(3875,'Print N to 1 without loop','https://www.geeksforgeeks.org/problems/print-n-to-1-without-loop/1',1,2),(3876,'Largest subarray of 0\'s and 1\'s','https://www.geeksforgeeks.org/problems/largest-subarray-of-0s-and-1s/1',1,2),(3877,'Number of Distinct Islands','https://www.geeksforgeeks.org/problems/number-of-distinct-islands/1',2,2),(3878,'Diagonal Tree Traversal','https://www.geeksforgeeks.org/problems/diagonal-traversal-of-binary-tree/1',2,2),(3879,'Find whether path exist','https://www.geeksforgeeks.org/problems/find-whether-path-exist5238/1',2,2),(3880,'Circle of strings','https://www.geeksforgeeks.org/problems/circle-of-strings4530/1',3,2),(3881,'Pair with given sum in a sorted array','https://www.geeksforgeeks.org/problems/pair-with-given-sum-in-a-sorted-array4940/1',1,2),(3882,'Minimum indexed character','https://www.geeksforgeeks.org/problems/minimum-indexed-character-1587115620/1',1,2),(3883,'Optimal Strategy For A Game','https://www.geeksforgeeks.org/problems/optimal-strategy-for-a-game-1587115620/1',2,2),(3884,'Count all possible paths from top left to bottom right','https://www.geeksforgeeks.org/problems/count-all-possible-paths-from-top-left-to-bottom-right3011/1',1,2),(3885,'Multiply two linked lists','https://www.geeksforgeeks.org/problems/multiply-two-linked-lists/1',1,2),(3886,'Replace all 0\'s with 5','https://www.geeksforgeeks.org/problems/replace-all-0s-with-5/1',4,2),(3887,'Word Boggle','https://www.geeksforgeeks.org/problems/word-boggle4143/1',2,2),(3888,'Special Stack','https://www.geeksforgeeks.org/problems/special-stack/1',1,2),(3889,'Middle of Three','https://www.geeksforgeeks.org/problems/middle-of-three2926/1',4,2),(3890,'Sum of Middle elements of two sorted arrays','https://www.geeksforgeeks.org/problems/sum-of-middle-elements-of-two-sorted-arrays2305/1',2,2),(3891,'Delete Alternate Nodes','https://www.geeksforgeeks.org/problems/delete-alternate-nodes/1',1,2),(3892,'Minimal Cost','https://www.geeksforgeeks.org/problems/minimal-cost/1',2,2),(3893,'Merge K sorted linked lists','https://www.geeksforgeeks.org/problems/merge-k-sorted-linked-lists/1',2,2),(3894,'First Repeated Character','https://www.geeksforgeeks.org/problems/find-first-repeated-character4108/1',1,2),(3895,'Maximum Tip Calculator','https://www.geeksforgeeks.org/problems/maximum-tip-calculator2631/1',2,2),(3896,'Serialize and deserialize a binary tree','https://www.geeksforgeeks.org/problems/serialize-and-deserialize-a-binary-tree/1',2,2),(3897,'Rotate Bits','https://www.geeksforgeeks.org/problems/rotate-bits4524/1',1,2),(3898,'Facing the sun','https://www.geeksforgeeks.org/problems/facing-the-sun2126/1',1,2),(3899,'Find the closest number','https://www.geeksforgeeks.org/problems/find-the-closest-number5513/1',1,2),(3900,'Better String','https://www.geeksforgeeks.org/problems/better-string/1',3,2),(3901,'Shortest path from 1 to n','https://www.geeksforgeeks.org/problems/shortest-path-from-1-to-n0156/1',1,2),(3902,'Nodes at given distance in binary tree','https://www.geeksforgeeks.org/problems/nodes-at-given-distance-in-binary-tree/1',3,2),(3903,'Count Occurences of Anagrams','https://www.geeksforgeeks.org/problems/count-occurences-of-anagrams5839/1',2,2),(3904,'Taking input - Java','https://www.geeksforgeeks.org/problems/taking-input-java/1',1,2),(3905,'Party of Couples','https://www.geeksforgeeks.org/problems/alone-in-couple5507/1',1,2),(3906,'Unique BST\'s','https://www.geeksforgeeks.org/problems/unique-bsts-1587115621/1',2,2),(3907,'Maximize Toys','https://www.geeksforgeeks.org/problems/maximize-toys0331/1',1,2),(3908,'Panagram Checking','https://www.geeksforgeeks.org/problems/pangram-checking-1587115620/1',1,2),(3909,'Closest in BST','https://www.geeksforgeeks.org/problems/find-the-closest-element-in-bst/1',2,2),(3910,'Maximum Width of Tree','https://www.geeksforgeeks.org/problems/maximum-width-of-tree/1',1,2),(3911,'BST with Dead End','https://www.geeksforgeeks.org/problems/check-whether-bst-contains-dead-end/1',2,2),(3912,'Nth Natural Number','https://www.geeksforgeeks.org/problems/nth-natural-number/1',2,2),(3913,'Kth Largest in a Stream','https://www.geeksforgeeks.org/problems/kth-largest-element-in-a-stream2220/1',2,2),(3914,'Find the Frequency','https://www.geeksforgeeks.org/problems/find-the-frequency/1',1,2),(3915,'Binary Tree from Inorder and Postorder','https://www.geeksforgeeks.org/problems/tree-from-postorder-and-inorder/1',2,2),(3916,'Array to BST','https://www.geeksforgeeks.org/problems/array-to-bst4443/1',1,2),(3917,'Level Order Line by Line','https://www.geeksforgeeks.org/problems/level-order-traversal-line-by-line/1',1,2),(3918,'Mother Vertex','https://www.geeksforgeeks.org/problems/mother-vertex/1',2,2),(3919,'Closest Three Sum','https://www.geeksforgeeks.org/problems/three-sum-closest/1',2,2),(3920,'Modular Inverse','https://www.geeksforgeeks.org/problems/modular-multiplicative-inverse-1587115620/1',1,2),(3921,'Subtraction in Linked List','https://www.geeksforgeeks.org/problems/subtraction-in-linked-list/1',3,2),(3922,'Minimum Number in a sorted rotated array','https://www.geeksforgeeks.org/problems/minimum-number-in-a-sorted-rotated-array-1587115620/1',1,2),(3923,'Convert String to LowerCase','https://www.geeksforgeeks.org/problems/java-convert-string-to-lowercase2313/1',4,2),(3924,'Repeated Character','https://www.geeksforgeeks.org/problems/repeated-character2058/1',4,2),(3925,'Exceptionally odd','https://www.geeksforgeeks.org/problems/find-the-odd-occurence4820/1',4,2),(3926,'Sort Elements by Decreasing Frequency','https://www.geeksforgeeks.org/problems/sorting-elements-of-an-array-by-frequency-1587115621/1',2,2),(3927,'The New Line','https://www.geeksforgeeks.org/problems/the-new-line/1',1,2),(3928,'Find the string in grid','https://www.geeksforgeeks.org/problems/find-the-string-in-grid0111/1',2,2),(3929,'Wildcard Pattern Matching','https://www.geeksforgeeks.org/problems/wildcard-pattern-matching/1',2,2),(3930,'Left most and right most index','https://www.geeksforgeeks.org/problems/find-first-and-last-occurrence-of-x0849/1',1,2),(3931,'Frequency in a Linked List','https://www.geeksforgeeks.org/problems/occurence-of-an-integer-in-a-linked-list/1',1,2),(3932,'Column name from a given column number','https://www.geeksforgeeks.org/problems/column-name-from-a-given-column-number4244/1',2,2),(3933,'Fruit Into Baskets','https://www.geeksforgeeks.org/problems/fruit-into-baskets-1663137462/1',2,2),(3934,'Form a number divisible by 3 using array digits','https://www.geeksforgeeks.org/problems/form-a-number-divisible-by-3-using-array-digits0717/1',1,2),(3935,'Maximum product subset of an array','https://www.geeksforgeeks.org/problems/maximum-product-subset-of-an-array/1',2,2),(3936,'Shop in Candy Store','https://www.geeksforgeeks.org/problems/shop-in-candy-store1145/1',1,2),(3937,'Binary Tree to BST','https://www.geeksforgeeks.org/problems/binary-tree-to-bst/1',1,2),(3938,'Predict the Column','https://www.geeksforgeeks.org/problems/predict-the-column/1',1,2),(3939,'Minimum number of Coins','https://www.geeksforgeeks.org/problems/-minimum-number-of-coins4426/1',1,2),(3940,'Pair Sum Closest to 0','https://www.geeksforgeeks.org/problems/two-numbers-with-sum-closest-to-zero1737/1',2,2),(3941,'Series GP','https://www.geeksforgeeks.org/problems/series-gp4646/1',1,2),(3942,'Sorted subsequence of size 3','https://www.geeksforgeeks.org/problems/sorted-subsequence-of-size-3/1',2,2),(3943,'Counting elements in two arrays','https://www.geeksforgeeks.org/problems/counting-elements-in-two-arrays/1',2,2),(3944,'Min Chars to Add for Palindrome','https://www.geeksforgeeks.org/problems/minimum-characters-to-be-added-at-front-to-make-string-palindrome/1',3,2),(3945,'Nuts and Bolts Problem','https://www.geeksforgeeks.org/problems/nuts-and-bolts-problem0431/1',2,2),(3946,'Maximize sum after K negations','https://www.geeksforgeeks.org/problems/maximize-sum-after-k-negations1149/1',1,2),(3947,'Number Of Enclaves','https://www.geeksforgeeks.org/problems/number-of-enclaves/1',2,2),(3948,'Swap two numbers','https://www.geeksforgeeks.org/problems/swap-two-numbers3844/1',4,2),(3949,'Maximum path sum from any node','https://www.geeksforgeeks.org/problems/maximum-path-sum-from-any-node/1',2,2),(3950,'Choose and Swap','https://www.geeksforgeeks.org/problems/choose-and-swap0531/1',2,2),(3951,'Count Smaller elements','https://www.geeksforgeeks.org/problems/count-smaller-elements2214/1',3,2),(3952,'Longest subsequence-1','https://www.geeksforgeeks.org/problems/longest-subsequence-such-that-difference-between-adjacents-is-one4724/1',2,2),(3953,'Max sum path in two arrays','https://www.geeksforgeeks.org/problems/max-sum-path-in-two-arrays/1',2,2),(3954,'Reach the Nth point','https://www.geeksforgeeks.org/problems/reach-the-nth-point5433/1',1,2),(3955,'Plus One','https://www.geeksforgeeks.org/problems/plus-one/1',1,2),(3956,'Course Schedule','https://www.geeksforgeeks.org/problems/course-schedule/1',2,2),(3957,'Binary String','https://www.geeksforgeeks.org/problems/binary-string-1587115620/1',4,2),(3958,'Display longest name','https://www.geeksforgeeks.org/problems/display-longest-name0853/1',4,2),(3959,'Search in Linked List','https://www.geeksforgeeks.org/problems/search-in-linked-list-1664434326/1',1,2),(3960,'Prerequisite Tasks','https://www.geeksforgeeks.org/problems/prerequisite-tasks/1',2,2),(3961,'Minimum Depth of a Binary Tree','https://www.geeksforgeeks.org/problems/minimum-depth-of-a-binary-tree/1',1,2),(3962,'Maximum Difference','https://www.geeksforgeeks.org/problems/maximum-difference-1587115620/1',2,2),(3963,'Decimal Equivalent of Binary Linked List','https://www.geeksforgeeks.org/problems/decimal-equivalent-of-binary-linked-list/1',1,2),(3964,'Search insert position of K in a sorted array','https://www.geeksforgeeks.org/problems/search-insert-position-of-k-in-a-sorted-array/1',1,2),(3965,'Swap kth elements','https://www.geeksforgeeks.org/problems/swap-kth-elements5500/1',4,2),(3966,'Transform to Sum Tree','https://www.geeksforgeeks.org/problems/transform-to-sum-tree/1',1,2),(3967,'Print Matrix in snake Pattern','https://www.geeksforgeeks.org/problems/print-matrix-in-snake-pattern-1587115621/1',1,2),(3968,'Does array represent Heap','https://www.geeksforgeeks.org/problems/does-array-represent-heap4345/1',1,2),(3969,'Second most repeated string in a sequence','https://www.geeksforgeeks.org/problems/second-most-repeated-string-in-a-sequence0534/1',1,2),(3970,'While loop- printTable - Java','https://www.geeksforgeeks.org/problems/while-loop-printtable-java/1',1,2),(3971,'Java Switch Case statement','https://www.geeksforgeeks.org/problems/java-switch-case-statement3529/1',4,2),(3972,'The New Line - Java','https://www.geeksforgeeks.org/problems/the-new-line-java/1',1,2),(3973,'Find element at a given Index','https://www.geeksforgeeks.org/problems/c-array-print-an-element-set-25933/1',4,2),(3974,'Number of pairs','https://www.geeksforgeeks.org/problems/number-of-pairs3422/1',2,2),(3975,'Remove Spaces','https://www.geeksforgeeks.org/problems/remove-spaces0128/1',4,2),(3976,'Merge Sort for Linked List','https://www.geeksforgeeks.org/problems/sort-a-linked-list/1',2,2),(3977,'Count the nodes at distance K from leaf','https://www.geeksforgeeks.org/problems/node-at-distance/1',2,2),(3978,'Remove common characters and concatenate','https://www.geeksforgeeks.org/problems/remove-common-characters-and-concatenate-1587115621/1',4,2),(3979,'Maximum sum of Non-adjacent nodes','https://www.geeksforgeeks.org/problems/maximum-sum-of-non-adjacent-nodes/1',2,2),(3980,'Pattern 1','https://www.geeksforgeeks.org/problems/square-pattern/1',4,2),(3981,'Reverse a String','https://www.geeksforgeeks.org/problems/java-reverse-a-string0416/1',4,2),(3982,'Smaller and Larger','https://www.geeksforgeeks.org/problems/smaller-and-larger4005/1',4,2),(3983,'Max distance between same elements','https://www.geeksforgeeks.org/problems/max-distance-between-same-elements/1',1,2),(3984,'Maximum difference between node and its ancestor','https://www.geeksforgeeks.org/problems/maximum-difference-between-node-and-its-ancestor/1',2,2),(3985,'LCS of three strings','https://www.geeksforgeeks.org/problems/lcs-of-three-strings0028/1',2,2),(3986,'Quick Left Rotation','https://www.geeksforgeeks.org/problems/quick-left-rotation3806/1',4,2),(3987,'Sum of upper and lower triangles','https://www.geeksforgeeks.org/problems/sum-of-upper-and-lower-triangles-1587115621/1',1,2),(3988,'Jump Game','https://www.geeksforgeeks.org/problems/jump-game/1',2,2),(3989,'Minimum cost to fill given weight in a bag','https://www.geeksforgeeks.org/problems/minimum-cost-to-fill-given-weight-in-a-bag1956/1',2,2),(3990,'Remove K Digits','https://www.geeksforgeeks.org/problems/remove-k-digits/1',2,2),(3991,'Arranging the array','https://www.geeksforgeeks.org/problems/arranging-the-array1131/1',2,2),(3992,'K closest elements','https://www.geeksforgeeks.org/problems/k-closest-elements3619/1',2,2),(3993,'Find position of set bit','https://www.geeksforgeeks.org/problems/find-position-of-set-bit3706/1',4,2),(3994,'Palindrome Array','https://www.geeksforgeeks.org/problems/perfect-arrays4645/1',4,2),(3995,'Distinct occurrences','https://www.geeksforgeeks.org/problems/distinct-occurrences/1',3,2),(3996,'Find the Highest number','https://www.geeksforgeeks.org/problems/find-the-highest-number2259/1',1,2),(3997,'Count ways to N\'th Stair(Order does not matter)','https://www.geeksforgeeks.org/problems/count-ways-to-nth-stairorder-does-not-matter5639/1',2,2),(3998,'Count the Reversals','https://www.geeksforgeeks.org/problems/count-the-reversals0401/1',2,2),(3999,'Shortest Distance in a Binary Maze','https://www.geeksforgeeks.org/problems/shortest-path-in-a-binary-maze-1655453161/1',2,2),(4000,'Unit Area of largest region of 1\'s','https://www.geeksforgeeks.org/problems/length-of-largest-region-of-1s-1587115620/1',2,2),(4001,'Search Pattern (Rabin-Karp Algorithm)','https://www.geeksforgeeks.org/problems/search-pattern-rabin-karp-algorithm--141631/1',2,2),(4002,'Count ways to N\'th Stair','https://www.geeksforgeeks.org/problems/count-ways-to-nth-stairorder-does-not-matter1322/1',1,2),(4003,'Minimum number of deletions and insertions','https://www.geeksforgeeks.org/problems/minimum-number-of-deletions-and-insertions0209/1',2,2),(4004,'Divisibility by 8','https://www.geeksforgeeks.org/problems/check-if-a-number-is-divisible-by-83957/1',1,2),(4005,'For Loop- primeCheck','https://www.geeksforgeeks.org/problems/for-loop-primechecl/1',1,2),(4006,'Find Common Nodes in two BSTs','https://www.geeksforgeeks.org/problems/print-common-nodes-in-bst/1',2,2),(4007,'Negative weight cycle','https://www.geeksforgeeks.org/problems/negative-weight-cycle3504/1',2,2),(4008,'Number of Ways to Arrive at Destination','https://www.geeksforgeeks.org/problems/number-of-ways-to-arrive-at-destination/1',2,2),(4009,'Remaining String','https://www.geeksforgeeks.org/problems/remaining-string3515/1',1,2),(4010,'Reverse Bits','https://www.geeksforgeeks.org/problems/reverse-bits3556/1',1,2),(4011,'Longest Consecutive 1\'s','https://www.geeksforgeeks.org/problems/longest-consecutive-1s-1587115620/1',1,2),(4012,'Shortest Path in Weighted undirected graph','https://www.geeksforgeeks.org/problems/shortest-path-in-weighted-undirected-graph/1',2,2),(4013,'Nearly sorted','https://www.geeksforgeeks.org/problems/nearly-sorted-1587115620/1',2,2),(4014,'Anagram of String','https://www.geeksforgeeks.org/problems/anagram-of-string/1',4,2),(4015,'Number is sparse or not','https://www.geeksforgeeks.org/problems/number-is-sparse-or-not-1587115620/1',4,2),(4016,'Array to Linked List','https://www.geeksforgeeks.org/problems/introduction-to-linked-list/1',1,2),(4017,'Product Pair','https://www.geeksforgeeks.org/problems/equal-to-product3836/1',2,2),(4018,'Maximum Sum Combination','https://www.geeksforgeeks.org/problems/maximum-sum-combination/1',2,2),(4019,'Articulation Point - I','https://www.geeksforgeeks.org/problems/articulation-point-1/1',3,2),(4020,'Row with Minimum 1s','https://www.geeksforgeeks.org/problems/row-with-minimum-number-of-1s5430/1',1,2),(4021,'Maximum Meetings in One Room','https://www.geeksforgeeks.org/problems/maximum-meetings-in-one-room/1',2,2),(4022,'Find the N-th character','https://www.geeksforgeeks.org/problems/find-the-n-th-character5925/1',2,2),(4023,'Mark Even and Odd - Python','https://www.geeksforgeeks.org/problems/mark-even-and-odd/1',1,2),(4024,'Number of distinct subsequences','https://www.geeksforgeeks.org/problems/number-of-distinct-subsequences0909/1',3,2),(4025,'Binary number to decimal number','https://www.geeksforgeeks.org/problems/binary-number-to-decimal-number3525/1',4,2),(4026,'Subarrays with sum K','https://www.geeksforgeeks.org/problems/subarrays-with-sum-k/1',2,2),(4027,'Learn to Comment - Java','https://www.geeksforgeeks.org/problems/learn-to-comment-java/1',1,2),(4028,'Addition of Two Numbers','https://www.geeksforgeeks.org/problems/addition-of-two-numbers0812/1',4,2),(4029,'Introduction to DP','https://www.geeksforgeeks.org/problems/introduction-to-dp/1',2,2),(4030,'K-Pangrams','https://www.geeksforgeeks.org/problems/k-pangrams0909/1',1,2),(4031,'IPL 2021 - Match Day 2','https://www.geeksforgeeks.org/problems/ipl-2021-match-day-2--141634/1',2,2),(4032,'Sum of Digit is Palindrome or not','https://www.geeksforgeeks.org/problems/sum-of-digit-is-pallindrome-or-not2751/1',4,2),(4033,'Minimum repeat to make substring','https://www.geeksforgeeks.org/problems/minimum-times-a-has-to-be-repeated-such-that-b-is-a-substring-of-it--170645/1',2,2),(4034,'Ishaan Loves Chocolates','https://www.geeksforgeeks.org/problems/ishaan-loves-chocolates2156/1',4,2),(4035,'Check if it is possible to survive on Island','https://www.geeksforgeeks.org/problems/check-if-it-is-possible-to-survive-on-island4922/1',1,2),(4036,'Two numbers with odd occurrences','https://www.geeksforgeeks.org/problems/two-numbers-with-odd-occurrences5846/1',2,2),(4037,'k-Anagram','https://www.geeksforgeeks.org/problems/check-if-two-strings-are-k-anagrams-or-not/1',2,2),(4038,'Learn to Comment','https://www.geeksforgeeks.org/problems/learn-to-comment/1',1,2),(4039,'Insert and Search in a Trie','https://www.geeksforgeeks.org/problems/trie-insert-and-search0651/1',2,2),(4040,'Minimize Max Distance to Gas Station','https://www.geeksforgeeks.org/problems/minimize-max-distance-to-gas-station/1',3,2),(4041,'Extract the Number from the String','https://www.geeksforgeeks.org/problems/extract-the-number-from-the-string3428/1',1,2),(4042,'Get min at pop','https://www.geeksforgeeks.org/problems/get-min-at-pop/1',1,2),(4043,'Minimum Integer','https://www.geeksforgeeks.org/problems/minimum-integer--170647/1',1,2),(4044,'C++ if-else (Decision Making)','https://www.geeksforgeeks.org/problems/c-if-else-decision-making4138/1',4,2),(4045,'Eventual Safe States','https://www.geeksforgeeks.org/problems/eventual-safe-states/1',2,2),(4046,'Reach a given score','https://www.geeksforgeeks.org/problems/reach-a-given-score-1587115621/1',1,2),(4047,'Possible Words From Phone Digits','https://www.geeksforgeeks.org/problems/possible-words-from-phone-digits-1587115620/1',2,2),(4048,'Smallest number','https://www.geeksforgeeks.org/problems/smallest-number5829/1',2,2),(4049,'Find the closest pair from two arrays','https://www.geeksforgeeks.org/problems/find-the-closest-pair-from-two-arrays4215/1',1,2),(4050,'Leap Year','https://www.geeksforgeeks.org/problems/leap-year0943/1',4,2),(4051,'Vertical Width of a Binary Tree','https://www.geeksforgeeks.org/problems/vertical-width-of-a-binary-tree/1',2,2),(4052,'Intersection of Two Linked Lists','https://www.geeksforgeeks.org/problems/intersection-of-two-linked-list/1',1,2),(4053,'Find pairs with given sum in doubly linked list','https://www.geeksforgeeks.org/problems/find-pairs-with-given-sum-in-doubly-linked-list/1',1,2),(4054,'Smaller on Left','https://www.geeksforgeeks.org/problems/smallest-number-on-left3403/1',2,2),(4055,'Run Length Encoding','https://www.geeksforgeeks.org/problems/run-length-encoding/1',1,2),(4056,'Play With OR','https://www.geeksforgeeks.org/problems/play-with-or5515/1',1,2),(4057,'If conditional statement- Python','https://www.geeksforgeeks.org/problems/if-loop-python/1',1,2),(4058,'Padovan Sequence','https://www.geeksforgeeks.org/problems/padovan-sequence2855/1',1,2),(4059,'Modify the Array','https://www.geeksforgeeks.org/problems/ease-the-array0633/1',1,2),(4060,'Intersection of two sorted arrays','https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-array-1587115620/1',1,2),(4061,'Elements in the Range','https://www.geeksforgeeks.org/problems/elements-in-the-range2834/1',4,2),(4062,'Duplicate Subtrees','https://www.geeksforgeeks.org/problems/duplicate-subtrees/1',2,2),(4063,'Ancestors in Binary Tree','https://www.geeksforgeeks.org/problems/ancestors-in-binary-tree/1',2,2),(4064,'Remove duplicates in array','https://www.geeksforgeeks.org/problems/remove-duplicates-in-small-prime-array/1',1,2),(4065,'Modular Exponentiation for large numbers','https://www.geeksforgeeks.org/problems/modular-exponentiation-for-large-numbers5537/1',2,2),(4066,'Brothers From Different Roots','https://www.geeksforgeeks.org/problems/brothers-from-different-root/1',1,2),(4067,'Jumping Numbers','https://www.geeksforgeeks.org/problems/jumping-numbers3805/1',2,2),(4068,'String Permutations','https://www.geeksforgeeks.org/problems/permutations-of-a-given-string-1587115620/1',3,2),(4069,'Wildcard string matching','https://www.geeksforgeeks.org/problems/wildcard-string-matching1126/1',3,2),(4070,'For Loop- primeCheck - Java','https://www.geeksforgeeks.org/problems/for-loop-primecheck-java/1',1,2),(4071,'Check if a string is Isogram or not','https://www.geeksforgeeks.org/problems/check-if-a-string-is-isogram-or-not-1587115620/1',4,2),(4072,'Next Smallest Palindrome','https://www.geeksforgeeks.org/problems/next-smallest-palindrome4740/1',3,2),(4073,'Bleak Numbers','https://www.geeksforgeeks.org/problems/bleak-numbers1552/1',2,2),(4074,'Series AP','https://www.geeksforgeeks.org/problems/series-ap5310/1',4,2),(4075,'Detect Cycle using DSU','https://www.geeksforgeeks.org/problems/detect-cycle-using-dsu/1',2,2),(4076,'Preorder to BST','https://www.geeksforgeeks.org/problems/preorder-to-postorder4423/1',2,2),(4077,'Merge 2 sorted linked list in reverse order','https://www.geeksforgeeks.org/problems/merge-2-sorted-linked-list-in-reverse-order/1',2,2),(4078,'Find the Sum of Last N nodes of the Linked List','https://www.geeksforgeeks.org/problems/find-the-sum-of-last-n-nodes-of-the-linked-list/1',1,2),(4079,'Reorder List','https://www.geeksforgeeks.org/problems/reorder-list/1',3,2),(4080,'Sum of all prime numbers between 1 and N.','https://www.geeksforgeeks.org/problems/sum-of-all-prime-numbers-between-1-and-n4404/1',1,2),(4081,'Count the elements','https://www.geeksforgeeks.org/problems/count-the-elements1529/1',1,2),(4082,'Insert in Sorted way in a Sorted DLL','https://www.geeksforgeeks.org/problems/insert-in-sorted-way-in-a-sorted-dll/1',2,2),(4083,'Sieve of Eratosthenes','https://www.geeksforgeeks.org/problems/sieve-of-eratosthenes5242/1',1,2),(4084,'Rotate by 90 degree','https://www.geeksforgeeks.org/problems/rotate-by-90-degree0356/1',2,2),(4085,'Flip Bits','https://www.geeksforgeeks.org/problems/flip-bits0240/1',2,2),(4086,'Case-specific Sorting of Strings','https://www.geeksforgeeks.org/problems/case-specific-sorting-of-strings4845/1',2,2),(4087,'Sum of numbers in string','https://www.geeksforgeeks.org/problems/sum-of-numbers-in-string-1587115621/1',4,2),(4088,'Print  1 to n without using loops','https://www.geeksforgeeks.org/problems/print-1-to-n-without-using-loops3621/1',4,2),(4089,'Count possible ways to construct buildings','https://www.geeksforgeeks.org/problems/count-possible-ways-to-construct-buildings5007/1',2,2),(4090,'Make array elements unique','https://www.geeksforgeeks.org/problems/make-array-elements-unique--170645/1',2,2),(4091,'Start Coding','https://www.geeksforgeeks.org/problems/start-coding/1',4,2),(4092,'Swap Kth nodes from ends','https://www.geeksforgeeks.org/problems/swap-kth-node-from-beginning-and-kth-node-from-end-in-a-singly-linked-list/1',2,2),(4093,'Union of Two Linked Lists','https://www.geeksforgeeks.org/problems/union-of-two-linked-list/1',2,2),(4094,'Mobile numeric keypad','https://www.geeksforgeeks.org/problems/mobile-numeric-keypad5456/1',2,2),(4095,'Level of Nodes','https://www.geeksforgeeks.org/problems/level-of-nodes-1587115620/1',2,2),(4096,'Size of Binary Tree','https://www.geeksforgeeks.org/problems/size-of-binary-tree/1',4,2),(4097,'Kth element in Matrix','https://www.geeksforgeeks.org/problems/kth-element-in-matrix/1',2,2),(4098,'Four Elements','https://www.geeksforgeeks.org/problems/four-elements2452/1',1,2),(4099,'Linked List to Binary Tree','https://www.geeksforgeeks.org/problems/make-binary-tree/1',2,2),(4100,'Number Of Open Doors','https://www.geeksforgeeks.org/problems/number-of-open-doors1552/1',1,2),(4101,'Construct Binary Tree from Parent Array','https://www.geeksforgeeks.org/problems/construct-binary-tree-from-parent-array/1',2,2),(4102,'Three Great Candidates','https://www.geeksforgeeks.org/problems/three-great-candidates0515/1',1,2),(4103,'Check for subsequence','https://www.geeksforgeeks.org/problems/check-for-subsequence4930/1',4,2),(4104,'Longest alternating subsequence','https://www.geeksforgeeks.org/problems/longest-alternating-subsequence5951/1',2,2),(4105,'Pattern 2','https://www.geeksforgeeks.org/problems/right-triangle/1',1,2),(4106,'Largest Sum Subarray of Size at least K','https://www.geeksforgeeks.org/problems/largest-sum-subarray-of-size-at-least-k3121/1',2,2),(4107,'Maximum Sum Problem','https://www.geeksforgeeks.org/problems/maximum-sum-problem2211/1',1,2),(4108,'Pair Sum in BST','https://www.geeksforgeeks.org/problems/find-a-pair-with-given-target-in-bst/1',2,2),(4109,'Game with String','https://www.geeksforgeeks.org/problems/game-with-string4100/1',2,2),(4110,'Numbers containing 1, 2 and 3','https://www.geeksforgeeks.org/problems/numbers-containing-1-2-and-32555/1',1,2),(4111,'Rotate and delete','https://www.geeksforgeeks.org/problems/rotate-and-delete-1587115621/1',2,2),(4112,'Linked List that is Sorted Alternatingly','https://www.geeksforgeeks.org/problems/linked-list-that-is-sorted-alternatingly/1',2,2),(4113,'Stock Buy and Sell – Max one Transaction Allowed','https://www.geeksforgeeks.org/problems/buy-stock-2/1',1,2),(4114,'Reorganize The Array','https://www.geeksforgeeks.org/problems/reorganize-the-array4810/1',1,2),(4115,'BST Keys in a Range','https://www.geeksforgeeks.org/problems/print-bst-elements-in-given-range/1',1,2),(4116,'Sum of all substrings of a number','https://www.geeksforgeeks.org/problems/sum-of-all-substrings-of-a-number-1587115621/1',2,2),(4117,'Maximize dot product','https://www.geeksforgeeks.org/problems/maximize-dot-product2649/1',2,2),(4118,'Print Bracket Number','https://www.geeksforgeeks.org/problems/print-bracket-number4058/1',1,2),(4119,'At least two greater elements','https://www.geeksforgeeks.org/problems/at-least-two-greater-elements4625/1',4,2),(4120,'Minimum Deletions','https://www.geeksforgeeks.org/problems/minimum-deletitions1648/1',2,2),(4121,'Angle between hour and minute hand','https://www.geeksforgeeks.org/problems/angle-between-hour-and-minute-hand0545/1',4,2),(4122,'City With the Smallest Number of Neighbors at a Threshold Distance','https://www.geeksforgeeks.org/problems/city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/1',2,2),(4123,'Count numbers containing 4','https://www.geeksforgeeks.org/problems/count-numbers-containing-43022/1',1,2),(4124,'Stock Buy and Sell – Max 2 Transactions Allowed','https://www.geeksforgeeks.org/problems/buy-and-sell-a-share-at-most-twice/1',2,2),(4125,'Normal BST to Balanced BST','https://www.geeksforgeeks.org/problems/normal-bst-to-balanced-bst/1',2,2),(4126,'Split a Linked List into two halves','https://www.geeksforgeeks.org/problems/split-a-circular-linked-list-into-two-halves/1',1,2),(4127,'Deletion and Reverse in Circular Linked List','https://www.geeksforgeeks.org/problems/deletion-and-reverse-in-linked-list/1',2,2),(4128,'Populate Inorder Successor for all nodes','https://www.geeksforgeeks.org/problems/populate-inorder-successor-for-all-nodes/1',2,2),(4129,'Subarrays with equal 1s and 0s','https://www.geeksforgeeks.org/problems/count-subarrays-with-equal-number-of-1s-and-0s-1587115620/1',2,2),(4130,'Game with nos','https://www.geeksforgeeks.org/problems/game-with-nos3123/1',4,2),(4131,'Total count','https://www.geeksforgeeks.org/problems/total-count2415/1',1,2),(4132,'Number of paths in a matrix with k coins','https://www.geeksforgeeks.org/problems/number-of-paths-in-a-matrix-with-k-coins2728/1',2,2),(4133,'Leftmost and rightmost nodes of binary tree','https://www.geeksforgeeks.org/problems/leftmost-and-rightmost-nodes-of-binary-tree/1',2,2),(4134,'Sorted matrix','https://www.geeksforgeeks.org/problems/sorted-matrix2333/1',4,2),(4135,'Page Faults in LRU','https://www.geeksforgeeks.org/problems/page-faults-in-lru5603/1',1,2),(4136,'Make the array beautiful','https://www.geeksforgeeks.org/problems/make-the-array-beautiful--170647/1',1,2),(4137,'Smallest window containing 0, 1 and 2','https://www.geeksforgeeks.org/problems/smallest-window-containing-0-1-and-2--170637/1',1,2),(4138,'Paths to reach origin','https://www.geeksforgeeks.org/problems/paths-to-reach-origin3850/1',2,2),(4139,'C++ Input / Output','https://www.geeksforgeeks.org/problems/c-input-output2432/1',4,2),(4140,'Copy Set Bits in Range','https://www.geeksforgeeks.org/problems/copy-set-bits-in-range0623/1',1,2),(4141,'Reverse alternate nodes in Link List','https://www.geeksforgeeks.org/problems/given-a-linked-list-reverse-alternate-nodes-and-append-at-the-end/1',2,2),(4142,'Shuffle integers','https://www.geeksforgeeks.org/problems/shuffle-integers2401/1',2,2),(4143,'Number following a pattern','https://www.geeksforgeeks.org/problems/number-following-a-pattern3126/1',2,2),(4144,'Most frequent word in an array of strings','https://www.geeksforgeeks.org/problems/most-frequent-word-in-an-array-of-strings3528/1',2,2),(4145,'Make Matrix Beautiful','https://www.geeksforgeeks.org/problems/make-matrix-beautiful-1587115620/1',2,2),(4146,'Frogs and Jumps','https://www.geeksforgeeks.org/problems/frogs-and-jumps--170647/1',1,2),(4147,'Maximum AND Value','https://www.geeksforgeeks.org/problems/maximum-and-value-1587115620/1',2,2),(4148,'Delete N nodes after M nodes of a linked list','https://www.geeksforgeeks.org/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/1',1,2),(4149,'Pairs with difference k','https://www.geeksforgeeks.org/problems/pairs-with-difference-k1713/1',1,2),(4150,'Subarray range with given sum','https://www.geeksforgeeks.org/problems/subarray-range-with-given-sum0128/1',2,2),(4151,'First and last occurrences of x','https://www.geeksforgeeks.org/problems/first-and-last-occurrences-of-x2041/1',1,2),(4152,'Number of Unique Paths','https://www.geeksforgeeks.org/problems/number-of-unique-paths5339/1',2,2),(4153,'Pattern 3','https://www.geeksforgeeks.org/problems/triangle-number/1',1,2),(4154,'Snake and Ladder Problem','https://www.geeksforgeeks.org/problems/snake-and-ladder-problem4816/1',2,2),(4155,'Binary Tree to CDLL','https://www.geeksforgeeks.org/problems/binary-tree-to-cdll/1',2,2),(4156,'Sum Pair closest to target','https://www.geeksforgeeks.org/problems/pair-in-array-whose-sum-is-closest-to-x1124/1',1,2),(4157,'Largest number with given sum','https://www.geeksforgeeks.org/problems/largest-number-with-given-sum-1587115620/1',1,2),(4158,'Swap and Maximize','https://www.geeksforgeeks.org/problems/swap-and-maximize5859/1',1,2),(4159,'Prime Pair with Target Sum','https://www.geeksforgeeks.org/problems/sum-of-prime4751/1',2,2),(4160,'Multiply left and right array sum','https://www.geeksforgeeks.org/problems/multiply-left-and-right-array-sum1555/1',4,2),(4161,'Fibonacci series up to Nth term','https://www.geeksforgeeks.org/problems/fibonacci-series-up-to-nth-term/1',1,2),(4162,'Excel Sheet | Part - 1','https://www.geeksforgeeks.org/problems/excel-sheet5448/1',2,2),(4163,'Gray to Binary equivalent','https://www.geeksforgeeks.org/problems/gray-to-binary-equivalent-1587115620/1',2,2),(4164,'Sum of bit differences','https://www.geeksforgeeks.org/problems/sum-of-bit-differences2937/1',2,2),(4165,'Maximize Number of 1\'s','https://www.geeksforgeeks.org/problems/maximize-number-of-1s0905/1',2,2),(4166,'Find All Triplets with Zero Sum','https://www.geeksforgeeks.org/problems/find-all-triplets-with-zero-sum/1',2,2),(4167,'Bridge edge in a graph','https://www.geeksforgeeks.org/problems/bridge-edge-in-graph/1',2,2),(4168,'Vertical sum','https://www.geeksforgeeks.org/problems/vertical-sum/1',2,2),(4169,'Find n/k th node in Linked list','https://www.geeksforgeeks.org/problems/find-nk-th-node-in-linked-list/1',1,2),(4170,'Multiplication Table','https://www.geeksforgeeks.org/problems/print-table0303/1',4,2),(4171,'Recursive sequence','https://www.geeksforgeeks.org/problems/recursive-sequence1611/1',1,2),(4172,'Pattern 5','https://www.geeksforgeeks.org/problems/triangle-pattern/1',4,2),(4173,'Inorder Traversal and BST','https://www.geeksforgeeks.org/problems/inorder-traversal-and-bst5855/1',1,2),(4174,'Find kth element of spiral matrix','https://www.geeksforgeeks.org/problems/find-nth-element-of-spiral-matrix/1',2,2),(4175,'Find Prime numbers in a range','https://www.geeksforgeeks.org/problems/find-prime-numbers-in-a-range4718/1',2,2),(4176,'Search array with adjacent diff at most k','https://www.geeksforgeeks.org/problems/searching-in-an-array-where-adjacent-differ-by-at-most-k0456/1',1,2),(4177,'Smallest Subset with Greater Sum','https://www.geeksforgeeks.org/problems/smallest-subset-with-greater-sum/1',1,2),(4178,'Transitive closure of a Graph','https://www.geeksforgeeks.org/problems/transitive-closure-of-a-graph0930/1',2,2),(4179,'Single Element Among Triplets','https://www.geeksforgeeks.org/problems/find-element-occuring-once-when-all-other-are-present-thrice/1',2,2),(4180,'Sum of XOR of all pairs','https://www.geeksforgeeks.org/problems/sum-of-xor-of-all-pairs0723/1',2,2),(4181,'Sort by Set Bit Count','https://www.geeksforgeeks.org/problems/sort-by-set-bit-count1153/1',1,2),(4182,'Find the fine','https://www.geeksforgeeks.org/problems/find-the-fine4353/1',4,2),(4183,'Word Search','https://www.geeksforgeeks.org/problems/word-search/1',2,2),(4184,'Bit Manipulation','https://www.geeksforgeeks.org/problems/bit-manipulation-1666686020/1',1,2),(4185,'Min Number of Flips','https://www.geeksforgeeks.org/problems/min-number-of-flips3210/1',1,2),(4186,'Find Last Digit Of a^b for Large Numbers','https://www.geeksforgeeks.org/problems/find-last-digit-of-ab-for-large-numbers1936/1',2,2),(4187,'Summed Matrix','https://www.geeksforgeeks.org/problems/summed-matrix5834/1',1,2),(4188,'nextLine and next','https://www.geeksforgeeks.org/problems/nextline-and-next/1',1,2),(4189,'Search an element in sorted and rotated array','https://www.geeksforgeeks.org/problems/search-in-a-rotated-array0959/1',1,2),(4190,'Prime Factors','https://www.geeksforgeeks.org/problems/prime-factors5052/1',1,2),(4191,'Unique rows in boolean matrix','https://www.geeksforgeeks.org/problems/unique-rows-in-boolean-matrix/1',1,2),(4192,'Swap all odd and even bits','https://www.geeksforgeeks.org/problems/swap-all-odd-and-even-bits-1587115621/1',1,2),(4193,'Count Pairs in an Array','https://www.geeksforgeeks.org/problems/count-pairs-in-an-array4145/1',3,2),(4194,'Zero Converter - Python','https://www.geeksforgeeks.org/problems/zero-converter-python/1',4,2),(4195,'Remove character','https://www.geeksforgeeks.org/problems/remove-character3815/1',4,2),(4196,'Single Number','https://www.geeksforgeeks.org/problems/single-number1014/1',1,2),(4197,'Closest Neighbour in BST','https://www.geeksforgeeks.org/problems/closest-neighbor-in-bst/1',1,2),(4198,'Container With Most Water','https://www.geeksforgeeks.org/problems/container-with-most-water0535/1',2,2),(4199,'First 1 in a Sorted Binary Array','https://www.geeksforgeeks.org/problems/index-of-first-1-in-a-sorted-array-of-0s-and-1s4048/1',4,2),(4200,'Special Keyboard','https://www.geeksforgeeks.org/problems/special-keyboard3018/1',2,2),(4201,'Reverse each word in a given string','https://www.geeksforgeeks.org/problems/reverse-each-word-in-a-given-string1001/1',2,2),(4202,'Merge two binary Max heaps','https://www.geeksforgeeks.org/problems/merge-two-binary-max-heap0144/1',1,2),(4203,'Balanced Array','https://www.geeksforgeeks.org/problems/balanced-array07200720/1',4,2),(4204,'House Robber','https://www.geeksforgeeks.org/problems/maximum-money2855/1',4,2),(4205,'Common Elements','https://www.geeksforgeeks.org/problems/common-elements5420/1',1,2),(4206,'Find the first node of loop in linked list','https://www.geeksforgeeks.org/problems/find-the-first-node-of-loop-in-linked-list--170645/1',1,2),(4207,'Generate Binary Numbers','https://www.geeksforgeeks.org/problems/generate-binary-numbers-1587115620/1',1,2),(4208,'Grinding Geek','https://www.geeksforgeeks.org/problems/grinding-geek/1',2,2),(4209,'Path With Minimum Effort','https://www.geeksforgeeks.org/problems/path-with-minimum-effort/1',2,2),(4210,'Sum of dependencies in a graph','https://www.geeksforgeeks.org/problems/sum-of-dependencies-in-a-graph5311/1',1,2),(4211,'String\'s Count','https://www.geeksforgeeks.org/problems/count-of-strings-that-can-be-formed-using-a-b-and-c-under-given-constraints1135/1',1,2),(4212,'Unique Number of Occurrences','https://www.geeksforgeeks.org/problems/unique-frequencies-of-not/1',1,2),(4213,'Max and Min Product from 2 Arrays','https://www.geeksforgeeks.org/problems/product-of-maximum-in-first-array-and-minimum-in-second3943/1',4,2),(4214,'Word Ladder I','https://www.geeksforgeeks.org/problems/word-ladder/1',3,2),(4215,'Transform to prime','https://www.geeksforgeeks.org/problems/transform-to-prime4635/1',2,2),(4216,'Set the rightmost unset bit','https://www.geeksforgeeks.org/problems/set-the-rightmost-unset-bit4436/1',4,2),(4217,'Ways To Tile A Floor','https://www.geeksforgeeks.org/problems/ways-to-tile-a-floor5836/1',4,2),(4218,'Diagonal sum in binary tree','https://www.geeksforgeeks.org/problems/diagonal-sum-in-binary-tree/1',2,2),(4219,'Split Array Largest Sum','https://www.geeksforgeeks.org/problems/split-array-largest-sum--141634/1',3,2),(4220,'Java Arrays | Set 1','https://www.geeksforgeeks.org/problems/java-arrays-set-11354/1',1,2),(4221,'Sum of leaf nodes in BST','https://www.geeksforgeeks.org/problems/sum-of-leaf-nodes-in-bst/1',1,2),(4222,'Check If two Line segments Intersect','https://www.geeksforgeeks.org/problems/check-if-two-line-segments-intersect0017/1',2,2),(4223,'Maximum Diamonds','https://www.geeksforgeeks.org/problems/chinky-and-diamonds3340/1',1,2),(4224,'Knight Walk','https://www.geeksforgeeks.org/problems/knight-walk4521/1',2,2),(4225,'Seating Arrangement','https://www.geeksforgeeks.org/problems/seating-arrangement--170647/1',1,2),(4226,'Reversing the vowels','https://www.geeksforgeeks.org/problems/reversing-the-vowels5304/1',4,2),(4227,'Fixing Two nodes of a BST','https://www.geeksforgeeks.org/problems/fixed-two-nodes-of-a-bst/1',3,2),(4228,'Disjoint set (Union-Find)','https://www.geeksforgeeks.org/problems/disjoint-set-union-find/1',1,2),(4229,'Root to leaf paths sum','https://www.geeksforgeeks.org/problems/root-to-leaf-paths-sum/1',2,2),(4230,'Fraction to Repeating Decimal','https://www.geeksforgeeks.org/problems/a-simple-fraction0921/1',2,2),(4231,'Taking input','https://www.geeksforgeeks.org/problems/taking-input/1',1,2),(4232,'Pattern 6','https://www.geeksforgeeks.org/problems/triangle-number-1661489840/1',4,2),(4233,'Adding Ones','https://www.geeksforgeeks.org/problems/adding-ones3628/1',1,2),(4234,'Rearrange a linked list','https://www.geeksforgeeks.org/problems/rearrange-a-linked-list/1',2,2),(4235,'Pattern 4','https://www.geeksforgeeks.org/problems/triangle-number-1661428795/1',1,2),(4236,'Convert an array to reduced form','https://www.geeksforgeeks.org/problems/convert-an-array-to-reduced-form1101/1',1,2),(4237,'Counting Sort','https://www.geeksforgeeks.org/problems/counting-sort/1',1,2),(4238,'Introduction to Doubly Linked List','https://www.geeksforgeeks.org/problems/introduction-to-doubly-linked-list/1',1,2),(4239,'Upper Case Conversion','https://www.geeksforgeeks.org/problems/upper-case-conversion5419/1',4,2),(4240,'Count Number of SubTrees having given Sum','https://www.geeksforgeeks.org/problems/count-number-of-subtrees-having-given-sum/1',2,2),(4241,'Top k numbers in a stream','https://www.geeksforgeeks.org/problems/top-k-numbers3425/1',2,2),(4242,'Number of Good Components','https://www.geeksforgeeks.org/problems/number-of-good-components--170647/1',2,2),(4243,'Linked list of strings forms a palindrome','https://www.geeksforgeeks.org/problems/linked-list-of-strings-forms-a-palindrome/1',1,2),(4244,'Print first letter of every word in the string','https://www.geeksforgeeks.org/problems/print-first-letter-of-every-word-in-the-string3632/1',4,2),(4245,'Set kth bit','https://www.geeksforgeeks.org/problems/set-kth-bit3724/1',4,2),(4246,'Find the Safe Position','https://www.geeksforgeeks.org/problems/game-of-death-in-a-circle1840/1',2,2),(4247,'CamelCase Pattern Matching','https://www.geeksforgeeks.org/problems/camelcase-pattern-matching2259/1',2,2),(4248,'Leaf under budget','https://www.geeksforgeeks.org/problems/leaf-under-budget/1',1,2),(4249,'Remove vowels from string','https://www.geeksforgeeks.org/problems/remove-vowels-from-string1446/1',4,2),(4250,'Find XOR of numbers from L to R.','https://www.geeksforgeeks.org/problems/find-xor-of-numbers-from-l-to-r/1',1,2),(4251,'Count pairs Sum in matrices','https://www.geeksforgeeks.org/problems/count-pairs-sum-in-matrices4332/1',1,2),(4252,'Maximum of minimum for every window size','https://www.geeksforgeeks.org/problems/maximum-of-minimum-for-every-window-size3453/1',3,2),(4253,'Print N-bit binary numbers having more 1s than 0s','https://www.geeksforgeeks.org/problems/print-n-bit-binary-numbers-having-more-1s-than-0s0252/1',2,2),(4254,'Number Of Islands','https://www.geeksforgeeks.org/problems/number-of-islands/1',2,2),(4255,'Generalised Fibonacci numbers','https://www.geeksforgeeks.org/problems/generalised-fibonacci-numbers1820/1',3,2),(4256,'Find Maximum Equal sum of Three Stacks','https://www.geeksforgeeks.org/problems/find-maximum-equal-sum-of-three-stacks/1',2,2),(4257,'Primes sum','https://www.geeksforgeeks.org/problems/primes-sum5827/1',1,2),(4258,'Check if two Nodes are Cousins','https://www.geeksforgeeks.org/problems/check-if-two-nodes-are-cousins/1',2,2),(4259,'X Total Shapes','https://www.geeksforgeeks.org/problems/x-total-shapes3617/1',2,2),(4260,'Print all LCS sequences','https://www.geeksforgeeks.org/problems/print-all-lcs-sequences3413/1',3,2),(4261,'Sum Of Digits','https://www.geeksforgeeks.org/problems/sum-of-digits1742/1',4,2),(4262,'Buy Maximum Stocks','https://www.geeksforgeeks.org/problems/buy-maximum-stocks-if-i-stocks-can-be-bought-on-i-th-day/1',2,2),(4263,'Word Wrap','https://www.geeksforgeeks.org/problems/word-wrap1646/1',3,2),(4264,'Foldable Binary Tree','https://www.geeksforgeeks.org/problems/foldable-binary-tree/1',2,2),(4265,'Sum of elements between k1\'th and k2\'th smallest elements','https://www.geeksforgeeks.org/problems/sum-of-elements-between-k1th-and-k2th-smallest-elements3133/1',1,2),(4266,'Closest Strings','https://www.geeksforgeeks.org/problems/closest-strings0611/1',1,2),(4267,'Triplet Family','https://www.geeksforgeeks.org/problems/triplet-family/1',4,2),(4268,'Strictly Increasing Array','https://www.geeksforgeeks.org/problems/convert-to-strictly-increasing-array3351/1',3,2),(4269,'Pattern 7','https://www.geeksforgeeks.org/problems/triangle-pattern-1661492263/1',4,2),(4270,'Insert an Element at the Bottom of a Stack','https://www.geeksforgeeks.org/problems/insert-an-element-at-the-bottom-of-a-stack/1',1,2),(4271,'Data Types - Java','https://www.geeksforgeeks.org/problems/data-types-java/1',1,2),(4272,'Count all triplets with given sum in sorted array','https://www.geeksforgeeks.org/problems/count-all-triplets-with-given-sum-in-sorted-array/1',2,2),(4273,'Min sum formed by digits','https://www.geeksforgeeks.org/problems/min-sum-formed-by-digits3551/1',1,2),(4274,'Sort by Absolute Difference','https://www.geeksforgeeks.org/problems/sort-by-absolute-difference-1587115621/1',1,2),(4275,'Longest repeating and non-overlapping substring','https://www.geeksforgeeks.org/problems/longest-repeating-and-non-overlapping-substring3421/1',3,2),(4276,'Replace all 0\'s with 5','https://www.geeksforgeeks.org/problems/replace-all-0-with-5-in-an-input-integer/1',4,2),(4277,'Closest Palindrome','https://www.geeksforgeeks.org/problems/closest-palindrome4519/1',3,2),(4278,'Remove duplicates from a sorted doubly linked list','https://www.geeksforgeeks.org/problems/remove-duplicates-from-a-sorted-doubly-linked-list/1',1,2),(4279,'Bit Difference','https://www.geeksforgeeks.org/problems/find-sum-of-different-corresponding-bits-for-all-pairs4652/1',3,2),(4280,'Find the left over element','https://www.geeksforgeeks.org/problems/print-the-left-element2009/1',1,2),(4281,'Fraction pairs with sum 1','https://www.geeksforgeeks.org/problems/fraction-pairs-with-sum-1/1',2,2),(4282,'Lemonade Change','https://www.geeksforgeeks.org/problems/lemonade-change/1',2,2),(4283,'Maximum product of two numbers','https://www.geeksforgeeks.org/problems/maximum-product-of-two-numbers2730/1',4,2),(4284,'Smith Number','https://www.geeksforgeeks.org/problems/smith-number4132/1',2,2),(4285,'AVL Tree Insertion','https://www.geeksforgeeks.org/problems/avl-tree-insertion/1',3,2),(4286,'Vowel or Not','https://www.geeksforgeeks.org/problems/vowel-or-not0831/1',4,2),(4287,'Binary Search Trees','https://www.geeksforgeeks.org/problems/binary-search-trees/1',1,2),(4288,'Overlapping rectangles','https://www.geeksforgeeks.org/problems/overlapping-rectangles1924/1',1,2),(4289,'Fighting the darkness','https://www.geeksforgeeks.org/problems/fighting-the-darkness3949/1',4,2),(4290,'3 Divisors','https://www.geeksforgeeks.org/problems/3-divisors3942/1',2,2),(4291,'Greater on right side','https://www.geeksforgeeks.org/problems/greater-on-right-side4305/1',1,2),(4292,'Surround the 1\'s','https://www.geeksforgeeks.org/problems/surround-the-1s2505/1',1,2),(4293,'Unique Subsets','https://www.geeksforgeeks.org/problems/subsets-1587115621/1',2,2),(4294,'Recamans sequence','https://www.geeksforgeeks.org/problems/recamans-sequence4856/1',1,2),(4295,'Sum of Binary Tree','https://www.geeksforgeeks.org/problems/sum-of-binary-tree/1',4,2),(4296,'Minimum steps to destination','https://www.geeksforgeeks.org/problems/minimum-number-of-steps-to-reach-a-given-number5234/1',2,2),(4297,'Swap two nibbles in a byte','https://www.geeksforgeeks.org/problems/swap-two-nibbles-in-a-byte0446/1',1,2),(4298,'Minimum Points To Reach Destination','https://www.geeksforgeeks.org/problems/minimum-points-to-reach-destination0540/1',3,2),(4299,'Alternative Sorting','https://www.geeksforgeeks.org/problems/alternative-sorting1311/1',4,2),(4300,'Maximum no of 1\'s row','https://www.geeksforgeeks.org/problems/maximum-no-of-1s-row3027/1',1,2),(4301,'Geek and its Game of Coins','https://www.geeksforgeeks.org/problems/geek-and-its-game-of-coins4043/1',2,2),(4302,'Pattern 10','https://www.geeksforgeeks.org/problems/triangle-pattern-1661718013/1',4,2),(4303,'GCD of Array','https://www.geeksforgeeks.org/problems/gcd-of-array0614/1',4,2),(4304,'Phone directory','https://www.geeksforgeeks.org/problems/phone-directory4628/1',3,2),(4305,'Transform String','https://www.geeksforgeeks.org/problems/transform-string5648/1',2,2),(4306,'Step by Step Condition - Java','https://www.geeksforgeeks.org/problems/step-by-step-condition-java/1',1,2),(4307,'How Many X\'s?','https://www.geeksforgeeks.org/problems/how-many-xs4514/1',2,2),(4308,'Smallest Positive Integer that can not be represented as Sum','https://www.geeksforgeeks.org/problems/smallest-positive-integer-that-can-not-be-represented-as-sum--141631/1',3,2),(4309,'All divisors of a Number','https://www.geeksforgeeks.org/problems/all-divisors-of-a-number/1',1,2),(4310,'Odd Even Problem','https://www.geeksforgeeks.org/problems/help-nobita0532/1',1,2),(4311,'Hamiltonian Path','https://www.geeksforgeeks.org/problems/hamiltonian-path2522/1',2,2),(4312,'Sum Palindrome','https://www.geeksforgeeks.org/problems/sum-palindrome3857/1',4,2),(4313,'Binary representation of next number','https://www.geeksforgeeks.org/problems/binary-representation-of-next-number3648/1',1,2),(4314,'Merge Sort on Doubly Linked List','https://www.geeksforgeeks.org/problems/merge-sort-on-doubly-linked-list/1',3,2),(4315,'Missing element of AP','https://www.geeksforgeeks.org/problems/missing-element-of-ap2228/1',2,2),(4316,'All Unique Permutations of an array','https://www.geeksforgeeks.org/problems/all-unique-permutations-of-an-array/1',2,2),(4317,'Sort in specific order','https://www.geeksforgeeks.org/problems/sort-in-specific-order2422/1',1,2),(4318,'Frequency Game','https://www.geeksforgeeks.org/problems/frequency-game/1',1,2),(4319,'Juggler Sequence','https://www.geeksforgeeks.org/problems/juggler-sequence3930/1',1,2),(4320,'Maximum Connected group','https://www.geeksforgeeks.org/problems/maximum-connected-group/1',3,2),(4321,'Flatten binary tree to linked list','https://www.geeksforgeeks.org/problems/flatten-binary-tree-to-linked-list/1',2,2),(4322,'Twice Counter','https://www.geeksforgeeks.org/problems/twice-counter4236/1',1,2),(4323,'Partition array to k subsets','https://www.geeksforgeeks.org/problems/partition-array-to-k-subsets/1',3,2),(4324,'Kth distance','https://www.geeksforgeeks.org/problems/kth-distance3757/1',1,2),(4325,'Remove Half Nodes','https://www.geeksforgeeks.org/problems/remove-half-nodes/1',1,2),(4326,'String Subsequence','https://www.geeksforgeeks.org/problems/find-number-of-times-a-string-occurs-as-a-subsequence3020/1',2,2),(4327,'Adding Array Elements','https://www.geeksforgeeks.org/problems/adding-array-element4756/1',1,2),(4328,'Determinant of a Matrix','https://www.geeksforgeeks.org/problems/determinant-of-a-matrix-1587115620/1',2,2),(4329,'Check for Power','https://www.geeksforgeeks.org/problems/check-if-a-number-is-power-of-another-number5442/1',4,2),(4330,'Smallest factorial number','https://www.geeksforgeeks.org/problems/smallest-factorial-number5929/1',2,2),(4331,'Pass by Reference and Value','https://www.geeksforgeeks.org/problems/pass-by-reference-and-value/1',1,2),(4332,'Iterative Postorder','https://www.geeksforgeeks.org/problems/postorder-traversal-iterative/1',2,2),(4333,'Count Special Numbers','https://www.geeksforgeeks.org/problems/count-special-numbers--170647/1',2,2),(4334,'K-Palindrome','https://www.geeksforgeeks.org/problems/find-if-string-is-k-palindrome-or-not1923/1',2,2),(4335,'Operating an array','https://www.geeksforgeeks.org/problems/operating-an-array/1',1,2),(4336,'Remove all occurences of duplicates in a linked list','https://www.geeksforgeeks.org/problems/remove-all-occurences-of-duplicates-in-a-linked-list/1',2,2),(4337,'Positive Negative Pair','https://www.geeksforgeeks.org/problems/positive-negative-pair5209/1',1,2),(4338,'Making A Large Island','https://www.geeksforgeeks.org/problems/making-a-large-island/1',3,2),(4339,'You and your books','https://www.geeksforgeeks.org/problems/you-and-your-books/1',1,2),(4340,'Longest Palindromic Substring','https://www.geeksforgeeks.org/problems/longest-palindrome-in-a-string1956/1',2,2),(4341,'Maximum difference of zeros and ones in binary string','https://www.geeksforgeeks.org/problems/maximum-difference-of-zeros-and-ones-in-binary-string4111/1',2,2),(4342,'Fascinating Number','https://www.geeksforgeeks.org/problems/fascinating-number3751/1',1,2),(4343,'AVL Tree Deletion','https://www.geeksforgeeks.org/problems/avl-tree-deletion/1',3,2),(4344,'Sum of Products','https://www.geeksforgeeks.org/problems/sum-of-products5049/1',2,2),(4345,'Toeplitz matrix','https://www.geeksforgeeks.org/problems/toeplitz-matrix/1',1,2),(4346,'Longest Arithmetic Subsequence','https://www.geeksforgeeks.org/problems/longest-arithmetic-progression1019/1',2,2),(4347,'Two Swaps','https://www.geeksforgeeks.org/problems/two-swaps--155623/1',1,2),(4348,'Quick Sort on Linked List','https://www.geeksforgeeks.org/problems/quick-sort-on-linked-list/1',2,2),(4349,'Arrange Consonants and Vowels','https://www.geeksforgeeks.org/problems/arrange-consonants-and-vowels/1',2,2),(4350,'Combination Sum II','https://www.geeksforgeeks.org/problems/combination-sum-ii-1664263832/1',2,2),(4351,'Rotate Each Row of Matrix K Times','https://www.geeksforgeeks.org/problems/left-rotate-matrix-k-times2351/1',2,2),(4352,'Account Merge','https://www.geeksforgeeks.org/problems/account-merge/1',3,2),(4353,'Generate IP Addresses','https://www.geeksforgeeks.org/problems/generate-ip-addresses/1',2,2),(4354,'Count distinct pairs with difference k','https://www.geeksforgeeks.org/problems/count-distinct-pairs-with-difference-k1233/1',2,2),(4355,'Game of XOR','https://www.geeksforgeeks.org/problems/game-of-xor1541/1',2,2),(4356,'Check if a string is repetition of its substring of k-length','https://www.geeksforgeeks.org/problems/check-if-a-string-is-repetition-of-its-substring-of-k-length3302/1',2,2),(4357,'Remainder on dividing by 11','https://www.geeksforgeeks.org/problems/remainder-on-dividing-by-11--170647/1',1,2),(4358,'Queue Operations','https://www.geeksforgeeks.org/problems/queue-operations/1',1,2),(4359,'Smaller on Left','https://www.geeksforgeeks.org/problems/smaller-on-left20360700/1',2,2),(4360,'Two Mirror Trees','https://www.geeksforgeeks.org/problems/two-mirror-trees/1',1,2),(4361,'Anagram Palindrome','https://www.geeksforgeeks.org/problems/anagram-palindrome4720/1',4,2),(4362,'Maximum sum Rectangle','https://www.geeksforgeeks.org/problems/maximum-sum-rectangle2948/1',2,2),(4363,'Move Last Element to Front of a Linked List','https://www.geeksforgeeks.org/problems/move-last-element-to-front-of-a-linked-list/1',1,2),(4364,'Prefix match with other strings','https://www.geeksforgeeks.org/problems/prefix-match-with-other-strings/1',2,2),(4365,'Euler circuit and Path','https://www.geeksforgeeks.org/problems/euler-circuit-and-path/1',2,2),(4366,'Print Diagonally','https://www.geeksforgeeks.org/problems/print-diagonally4331/1',1,2),(4367,'Matchsticks game','https://www.geeksforgeeks.org/problems/-matchsticks-game4906/1',2,2),(4368,'Paths from root with a specified sum','https://www.geeksforgeeks.org/problems/paths-from-root-with-a-specified-sum/1',2,2),(4369,'Restrictive Candy Crush','https://www.geeksforgeeks.org/problems/restrictive-candy-crush--141631/1',2,2),(4370,'Decode the string','https://www.geeksforgeeks.org/problems/decode-the-string2444/1',2,2),(4371,'Introduction to Trees','https://www.geeksforgeeks.org/problems/introduction-to-trees/1',1,2),(4372,'Learning to be precise','https://www.geeksforgeeks.org/problems/learning-to-be-precise/1',1,2),(4373,'Rohan\'s Love for Matrix','https://www.geeksforgeeks.org/problems/rohans-love-for-matrix4723/1',2,2),(4374,'Huffman Encoding','https://www.geeksforgeeks.org/problems/huffman-encoding3345/1',3,2),(4375,'Count Odd Even - Java','https://www.geeksforgeeks.org/problems/count-odd-even-java/1',1,2),(4376,'Generate Parentheses','https://www.geeksforgeeks.org/problems/generate-all-possible-parentheses/1',2,2),(4377,'Preorder Traversal and BST','https://www.geeksforgeeks.org/problems/preorder-traversal-and-bst4006/1',2,2),(4378,'Xoring and Clearing','https://www.geeksforgeeks.org/problems/xoring-and-clearing/1',1,2),(4379,'Modular Node','https://www.geeksforgeeks.org/problems/modular-node/1',4,2),(4380,'G.F Series','https://www.geeksforgeeks.org/problems/gf-series3535/1',4,2),(4381,'Minimum Swaps for Bracket Balancing','https://www.geeksforgeeks.org/problems/minimum-swaps-for-bracket-balancing2704/1',2,2),(4382,'Merge two strings','https://www.geeksforgeeks.org/problems/merge-two-strings2736/1',4,2),(4383,'nPr','https://www.geeksforgeeks.org/problems/npr4253/1',4,2),(4384,'Get Minimum Squares','https://www.geeksforgeeks.org/problems/get-minimum-squares0538/1',2,2),(4385,'Maximum Pairwise Computed Value','https://www.geeksforgeeks.org/problems/maximum-in-struct-array/1',1,2),(4386,'Count Non-Leaf Nodes in Tree','https://www.geeksforgeeks.org/problems/count-non-leaf-nodes-in-tree/1',4,2),(4387,'Candy','https://www.geeksforgeeks.org/problems/candy/1',3,2),(4388,'Check String','https://www.geeksforgeeks.org/problems/check-string1818/1',4,2),(4389,'Not a subset sum','https://www.geeksforgeeks.org/problems/smallest-number-subset1220/1',2,2),(4390,'Exit Point in a Matrix','https://www.geeksforgeeks.org/problems/exit-point-in-a-matrix0905/1',2,2),(4391,'Print the Kth Digit','https://www.geeksforgeeks.org/problems/print-the-kth-digit3520/1',4,2),(4392,'Techfest and the Queue','https://www.geeksforgeeks.org/problems/techfest-and-the-queue1044/1',2,2),(4393,'Graph is Tree or Not','https://www.geeksforgeeks.org/problems/is-it-a-tree/1',2,2),(4394,'Convert to Roman No','https://www.geeksforgeeks.org/problems/convert-to-roman-no/1',1,2),(4395,'Largest subsquare surrounded by X','https://www.geeksforgeeks.org/problems/largest-subsquare-surrounded-by-x0558/1',2,2),(4396,'Step by Step Condition','https://www.geeksforgeeks.org/problems/step-by-step-condition/1',1,2),(4397,'Average of Prefix','https://www.geeksforgeeks.org/problems/average4856/1',1,2),(4398,'Cheapest Flights Within K Stops','https://www.geeksforgeeks.org/problems/cheapest-flights-within-k-stops/1',2,2),(4399,'Insertion Sort for Singly Linked List','https://www.geeksforgeeks.org/problems/insertion-sort-for-singly-linked-list/1',2,2),(4400,'Keypad typing','https://www.geeksforgeeks.org/problems/keypad-typing0119/1',4,2),(4401,'Help Classmates','https://www.geeksforgeeks.org/problems/help-classmates--141631/1',2,2),(4402,'Sum of Leaf Nodes','https://www.geeksforgeeks.org/problems/sum-of-leaf-nodes/1',1,2),(4403,'Count pairs with given sum','https://www.geeksforgeeks.org/problems/count-pairs-with-given-sum--150253/1',1,2),(4404,'Deque Implementations','https://www.geeksforgeeks.org/problems/deque-implementations/1',1,2),(4405,'Pattern 8','https://www.geeksforgeeks.org/problems/triangle-pattern-1661493231/1',4,2),(4406,'Delete all occurrences of a given key in a doubly linked list','https://www.geeksforgeeks.org/problems/delete-all-occurrences-of-a-given-key-in-a-doubly-linked-list/1',2,2),(4407,'Largest rectangular sub-matrix whose sum is 0','https://www.geeksforgeeks.org/problems/largest-rectangular-sub-matrix-whose-sum-is-0/1',3,2),(4408,'Preorder traversal (Iterative)','https://www.geeksforgeeks.org/problems/preorder-traversal-iterative/1',2,2),(4409,'Find shortest safe route in a matrix','https://www.geeksforgeeks.org/problems/find-shortest-safe-route-in-a-matrix/1',2,2),(4410,'Construct list using given q XOR queries','https://www.geeksforgeeks.org/problems/construct-list-using-given-q-xor-queries/1',2,2),(4411,'Stock Buy and Sell – Max K Transactions Allowed','https://www.geeksforgeeks.org/problems/maximum-profit4657/1',3,2),(4412,'Delete alternate characters','https://www.geeksforgeeks.org/problems/java-delete-alternate-characters4036/1',4,2),(4413,'Iterative Inorder','https://www.geeksforgeeks.org/problems/inorder-traversal-iterative/1',2,2),(4414,'Find duplicate rows in a binary matrix','https://www.geeksforgeeks.org/problems/find-duplicate-rows-in-a-binary-matrix/1',2,2),(4415,'Search in a row-wise sorted matrix','https://www.geeksforgeeks.org/problems/search-in-a-row-wise-sorted-matrix/1',1,2),(4416,'Postfix to Infix Conversion','https://www.geeksforgeeks.org/problems/postfix-to-infix-conversion/1',2,2),(4417,'Unique Paths in a Grid','https://www.geeksforgeeks.org/problems/unique-paths-in-a-grid--170647/1',2,2),(4418,'Least Prime Factor','https://www.geeksforgeeks.org/problems/least-prime-factor5216/1',1,2),(4419,'Pairs with certain difference','https://www.geeksforgeeks.org/problems/pairs-with-specific-difference1533/1',1,2),(4420,'Extract Maximum','https://www.geeksforgeeks.org/problems/extract-maximum2943/1',4,2),(4421,'Additive sequence','https://www.geeksforgeeks.org/problems/additive-sequence/1',2,2),(4422,'Minimize the Difference','https://www.geeksforgeeks.org/problems/minimize-the-difference/1',2,2),(4423,'The dice problem','https://www.geeksforgeeks.org/problems/the-dice-problem2316/1',4,2),(4424,'Even Odd','https://www.geeksforgeeks.org/problems/even-odd/1',1,2),(4425,'Print matrix in diagonal pattern','https://www.geeksforgeeks.org/problems/print-matrix-in-diagonal-pattern/1',2,2),(4426,'Asteroid Collision','https://www.geeksforgeeks.org/problems/asteroid-collision/1',2,2),(4427,'Water the plants','https://www.geeksforgeeks.org/problems/water-the-plants--170646/1',2,2),(4428,'Count number of words','https://www.geeksforgeeks.org/problems/count-number-of-words1500/1',1,2),(4429,'Subsets','https://www.geeksforgeeks.org/problems/subsets-1613027340/1',2,2),(4430,'Java Strings | Set 1','https://www.geeksforgeeks.org/problems/java-strings-set-15112/1',4,2),(4431,'Make Array Elements Equal','https://www.geeksforgeeks.org/problems/make-array-elements-equal--170647/1',1,2),(4432,'Next Happy Number','https://www.geeksforgeeks.org/problems/next-happy-number4538/1',3,2),(4433,'Dominant Pairs','https://www.geeksforgeeks.org/problems/dominant-pairs/1',1,2),(4434,'Add Minimum Characters','https://www.geeksforgeeks.org/problems/add-minimum-characters--170648/1',2,2),(4435,'Rearrange characters','https://www.geeksforgeeks.org/problems/rearrange-characters4649/1',2,2),(4436,'Convert a sentence into its equivalent mobile numeric keypad sequence','https://www.geeksforgeeks.org/problems/convert-a-sentence-into-its-equivalent-mobile-numeric-keypad-sequence0547/1',1,2),(4437,'Array Operations','https://www.geeksforgeeks.org/problems/array-operations--170648/1',1,2),(4438,'Absolute List Sorting','https://www.geeksforgeeks.org/problems/absolute-list-sorting/1',2,2),(4439,'logical Operators - Java','https://www.geeksforgeeks.org/problems/logical-operators-java/1',1,2),(4440,'Find unique element','https://www.geeksforgeeks.org/problems/find-unique-element2632/1',4,2),(4441,'Find all Critical Connections in the Graph','https://www.geeksforgeeks.org/problems/critical-connections/1',3,2),(4442,'Number of subarrays with maximum values in given range','https://www.geeksforgeeks.org/problems/number-of-subarrays-with-maximum-values-in-given-range5949/1',2,2),(4443,'Count the paths','https://www.geeksforgeeks.org/problems/count-the-paths4332/1',1,2),(4444,'Count subsequences of type a^i, b^j, c^k','https://www.geeksforgeeks.org/problems/count-subsequences-of-type-ai-bj-ck4425/1',2,2),(4445,'Split Linked List Alternatingly','https://www.geeksforgeeks.org/problems/split-singly-linked-list-alternatingly/1',1,2),(4446,'Next Greater Element in Circular Array','https://www.geeksforgeeks.org/problems/next-greater-element/1',2,2),(4447,'Add all greater values to every node in a BST','https://www.geeksforgeeks.org/problems/add-all-greater-values-to-every-node-in-a-bst/1',2,2),(4448,'Minimum Absolute Difference In BST','https://www.geeksforgeeks.org/problems/minimum-absolute-difference-in-bst-1665139652/1',2,2),(4449,'Equal Left and Right Subarray Sum','https://www.geeksforgeeks.org/problems/equal-left-and-right-subarray-sum--170647/1',1,2),(4450,'Sort a String','https://www.geeksforgeeks.org/problems/sort-a-string2943/1',4,2),(4451,'Maximum sum of hour glass','https://www.geeksforgeeks.org/problems/maximum-sum-of-hour-glass3842/1',2,2),(4452,'Dice throw','https://www.geeksforgeeks.org/problems/dice-throw5349/1',2,2),(4453,'Tom and Jerry','https://www.geeksforgeeks.org/problems/tom-and-jerry1325/1',1,2),(4454,'Euler Circuit in an Undirected Graph','https://www.geeksforgeeks.org/problems/euler-circuit-in-a-directed-graph/1',2,2),(4455,'Learning Macros','https://www.geeksforgeeks.org/problems/learning-macros/1',1,2),(4456,'Java Input/Output','https://www.geeksforgeeks.org/problems/java-inputoutput0118/1',4,2),(4457,'Make Palindrome','https://www.geeksforgeeks.org/problems/make-palindrome--170647/1',1,2),(4458,'New Year Resolution','https://www.geeksforgeeks.org/problems/good-by-2023/1',2,2),(4459,'Graph and Vertices','https://www.geeksforgeeks.org/problems/graph-and-vertices/1',1,2),(4460,'Brackets in Matrix Chain Multiplication','https://www.geeksforgeeks.org/problems/brackets-in-matrix-chain-multiplication1024/1',3,2),(4461,'Minimum Cost To Make Two Strings Identical','https://www.geeksforgeeks.org/problems/minimum-cost-to-make-two-strings-identical1107/1',2,2),(4462,'Word Ladder II','https://www.geeksforgeeks.org/problems/word-ladder-ii/1',3,2),(4463,'Sequence of Sequence','https://www.geeksforgeeks.org/problems/sequence-of-sequence1155/1',2,2),(4464,'Check Mirror in N-ary tree','https://www.geeksforgeeks.org/problems/check-mirror-in-n-ary-tree1528/1',2,2),(4465,'Binary Modulo','https://www.geeksforgeeks.org/problems/binary-modulo--170648/1',1,2),(4466,'C++ Strings','https://www.geeksforgeeks.org/problems/c-strings4609/1',4,2),(4467,'Sum of elements in a matrix','https://www.geeksforgeeks.org/problems/sum-of-elements-in-a-matrix2000/1',4,2),(4468,'Max and min element in Binary Tree','https://www.geeksforgeeks.org/problems/max-and-min-element-in-binary-tree/1',1,2),(4469,'Count digit groupings of a number','https://www.geeksforgeeks.org/problems/count-digit-groupings-of-a-number1520/1',2,2),(4470,'Large Factorial','https://www.geeksforgeeks.org/problems/large-factorial4721/1',2,2),(4471,'Return two prime numbers','https://www.geeksforgeeks.org/problems/return-two-prime-numbers2509/1',3,2),(4472,'Trail of ones','https://www.geeksforgeeks.org/problems/trail-of-ones3242/1',2,2),(4473,'Wifi Range','https://www.geeksforgeeks.org/problems/wifi-range--170647/1',1,2),(4474,'Sum of Left Leaf Nodes','https://www.geeksforgeeks.org/problems/sum-of-left-leaf-nodes/1',1,2),(4475,'Split an array into two equal Sum subarrays','https://www.geeksforgeeks.org/problems/split-an-array-into-two-equal-sum-subarrays/1',1,2),(4476,'Sum-string','https://www.geeksforgeeks.org/problems/sum-string3151/1',3,2),(4477,'Letters Collection','https://www.geeksforgeeks.org/problems/c-letters-collection4552/1',1,2),(4478,'String rp or pr','https://www.geeksforgeeks.org/problems/string-rp-or-pr--170647/1',2,2),(4479,'Insert Interval','https://www.geeksforgeeks.org/problems/insert-interval-1666733333/1',2,2),(4480,'Minimum Sum of Absolute Differences of Pairs','https://www.geeksforgeeks.org/problems/minimum-sum-of-absolute-differences-of-pairs/1',1,2),(4481,'Reversing the equation','https://www.geeksforgeeks.org/problems/reversing-the-equation2205/1',1,2),(4482,'Word Break - 2','https://www.geeksforgeeks.org/problems/word-break-part-23249/1',3,2),(4483,'Good or Bad string','https://www.geeksforgeeks.org/problems/good-or-bad-string1417/1',4,2),(4484,'Pattern','https://www.geeksforgeeks.org/problems/pattern/1',2,2),(4485,'Count of Subarrays','https://www.geeksforgeeks.org/problems/count-of-subarrays5922/1',2,2),(4486,'Linked List Matrix','https://www.geeksforgeeks.org/problems/linked-list-matrix/1',1,2),(4487,'Total Traversal Time','https://www.geeksforgeeks.org/problems/total-traversal-time/1',1,2),(4488,'Ticket Counter','https://www.geeksforgeeks.org/problems/ticket-counter-2731/1',1,2),(4489,'Chocolates Pickup','https://www.geeksforgeeks.org/problems/chocolates-pickup/1',3,2),(4490,'Compete the skills','https://www.geeksforgeeks.org/problems/compete-the-skills5807/1',1,2),(4491,'Box Stacking','https://www.geeksforgeeks.org/problems/box-stacking/1',3,2),(4492,'Valid Compressed String','https://www.geeksforgeeks.org/problems/valid-compressed-string--170647/1',2,2),(4493,'Greatest of three numbers','https://www.geeksforgeeks.org/problems/greatest-of-three-numbers2520/1',4,2),(4494,'Maximum XOR subarray','https://www.geeksforgeeks.org/problems/maximum-xor-subarray--141631/1',3,2),(4495,'Express as sum of power of natural numbers','https://www.geeksforgeeks.org/problems/express-as-sum-of-power-of-natural-numbers5647/1',2,2),(4496,'Modified Game of Nim','https://www.geeksforgeeks.org/problems/variation-in-nim-game4317/1',2,2),(4497,'Maximum Depth Of Binary Tree','https://www.geeksforgeeks.org/problems/maximum-depth-of-binary-tree/1',1,2),(4498,'Jumping through While - Python','https://www.geeksforgeeks.org/problems/jumping-through-while-python/1',1,2),(4499,'Odd even level difference','https://www.geeksforgeeks.org/problems/odd-even-level-difference/1',1,2),(4500,'Pairs violating the BST property','https://www.geeksforgeeks.org/problems/pairs-violating-bst-property--212515/1',2,2),(4501,'Non-overlapping Intervals','https://www.geeksforgeeks.org/problems/non-overlapping-intervals/1',2,2),(4502,'GetLine and Ignore','https://www.geeksforgeeks.org/problems/getline-and-ignore/1',1,2),(4503,'Pairs with Positive Negative values','https://www.geeksforgeeks.org/problems/pairs-with-positive-negative-values3719/1',1,2),(4504,'Count the characters','https://www.geeksforgeeks.org/problems/count-the-characters1821/1',4,2),(4505,'Segregate Even and Odd numbers','https://www.geeksforgeeks.org/problems/segregate-even-and-odd-numbers4629/1',4,2),(4506,'Number of divisors','https://www.geeksforgeeks.org/problems/number-of-divisors1631/1',4,2),(4507,'Look and Say Pattern','https://www.geeksforgeeks.org/problems/decode-the-pattern1138/1',2,2),(4508,'Kth common ancestor in BST','https://www.geeksforgeeks.org/problems/kth-common-ancestor-in-bst/1',2,2),(4509,'Doubling the value','https://www.geeksforgeeks.org/problems/doubling-the-value4859/1',4,2),(4510,'Lower case to upper case','https://www.geeksforgeeks.org/problems/lower-case-to-upper-case3410/1',4,2),(4511,'Min Coin','https://www.geeksforgeeks.org/problems/min-coin5549/1',2,2),(4512,'Find H-Index','https://www.geeksforgeeks.org/problems/find-h-index--165609/1',2,2),(4513,'Set Matrix Zeroes','https://www.geeksforgeeks.org/problems/set-matrix-zeroes/1',2,2),(4514,'Remove consonants from a string','https://www.geeksforgeeks.org/problems/c-program-to-remove-consonants-from-a-string1945/1',4,2),(4515,'Finding Position','https://www.geeksforgeeks.org/problems/finding-position2223/1',4,2),(4516,'Bitwise Operators','https://www.geeksforgeeks.org/problems/bitwise-operators/1',1,2),(4517,'Squares in  N*N Chessboard','https://www.geeksforgeeks.org/problems/squares-in-nn-chessboard1801/1',1,2),(4518,'Count of camel case characters','https://www.geeksforgeeks.org/problems/find-the-camel3348/1',4,2),(4519,'Minimum Product of k Integers','https://www.geeksforgeeks.org/problems/minimum-product-of-k-integers2553/1',4,2),(4520,'Traverse All Edges And Vertices','https://www.geeksforgeeks.org/problems/castle-run3644/1',2,2),(4521,'Kth Missing Positive Number in a Sorted Array','https://www.geeksforgeeks.org/problems/kth-missing-positive-number-in-a-sorted-array/1',2,2),(4522,'Permutation with Spaces','https://www.geeksforgeeks.org/problems/permutation-with-spaces3627/1',2,2),(4523,'Equal Sum','https://www.geeksforgeeks.org/problems/equal-sum0810/1',2,2),(4524,'Maximum subset XOR','https://www.geeksforgeeks.org/problems/maximum-subset-xor/1',3,2),(4525,'Fitting The Array','https://www.geeksforgeeks.org/problems/fitting-the-array1514/1',1,2),(4526,'Stack designer','https://www.geeksforgeeks.org/problems/stack-designer/1',4,2),(4527,'Smallest divisible number','https://www.geeksforgeeks.org/problems/smallest-divisible-number/1',4,2),(4528,'Find k-th smallest element in given n ranges','https://www.geeksforgeeks.org/problems/find-k-th-smallest-element-in-given-n-ranges/1',2,2),(4529,'Possible paths between 2 vertices','https://www.geeksforgeeks.org/problems/possible-paths-between-2-vertices-1587115620/1',2,2),(4530,'Check set bits','https://www.geeksforgeeks.org/problems/check-set-bits5408/1',4,2),(4531,'Clone an Undirected Graph','https://www.geeksforgeeks.org/problems/clone-graph/1',2,2),(4532,'Count Pairs whose sum is less than target','https://www.geeksforgeeks.org/problems/count-pairs-whose-sum-is-less-than-target/1',1,2),(4533,'Geek collects the balls','https://www.geeksforgeeks.org/problems/geek-collects-the-balls5515/1',3,2),(4534,'Divisor Game','https://www.geeksforgeeks.org/problems/divisor-game-1664432414/1',1,2),(4535,'Trace Path','https://www.geeksforgeeks.org/problems/trace-path3840/1',1,2),(4536,'String Mirror','https://www.geeksforgeeks.org/problems/string-mirror--170647/1',1,2),(4537,'Remove and Reverse','https://www.geeksforgeeks.org/problems/remove-and-reverse--170634/1',2,2),(4538,'K-th missing element','https://www.geeksforgeeks.org/problems/k-th-missing-element3635/1',1,2),(4539,'Target Sum','https://www.geeksforgeeks.org/problems/target-sum-1626326450/1',2,2),(4540,'Flatten BST to sorted list','https://www.geeksforgeeks.org/problems/flatten-bst-to-sorted-list--111950/1',2,2),(4541,'Maximum repeating number','https://www.geeksforgeeks.org/problems/maximum-repeating-number4858/1',1,2),(4542,'Change the string','https://www.geeksforgeeks.org/problems/change-the-string3541/1',4,2),(4543,'Cutting Binary String','https://www.geeksforgeeks.org/problems/cutting-binary-string1342/1',2,2),(4544,'Red OR Green','https://www.geeksforgeeks.org/problems/red-or-green5711/1',4,2),(4545,'Pattern Searching','https://www.geeksforgeeks.org/problems/pattern-searching4145/1',1,2),(4546,'Count Occurrence of digit k','https://www.geeksforgeeks.org/problems/find-number-of-numbers/1',1,2),(4547,'C++ Functions (Sum of numbers) | Set 1','https://www.geeksforgeeks.org/problems/c-functions-set-1introduction/1',4,2),(4548,'Distribute candies in a binary tree','https://www.geeksforgeeks.org/problems/distribute-candies-in-a-binary-tree/1',3,2),(4549,'Binary Tree Representation','https://www.geeksforgeeks.org/problems/binary-tree-representation/1',1,2),(4550,'Count zeros in a sorted matrix','https://www.geeksforgeeks.org/problems/count-zeros-in-a-sorted-matrix/1',4,2),(4551,'Smaller Sum','https://www.geeksforgeeks.org/problems/smaller-sum--170647/1',2,2),(4552,'XOR Linked List','https://www.geeksforgeeks.org/problems/xor-linked-list/1',2,2),(4553,'C++ Switch Case Statement','https://www.geeksforgeeks.org/problems/c-switch-case-statement5900/1',4,2),(4554,'Alternate Vowel and Consonant String','https://www.geeksforgeeks.org/problems/alternate-vowel-and-consonant-string2939/1',2,2),(4555,'The Modified String','https://www.geeksforgeeks.org/problems/the-modified-string-1587115621/1',1,2),(4556,'Replace elements by its rank in the array','https://www.geeksforgeeks.org/problems/replace-elements-by-its-rank-in-the-array/1',2,2),(4557,'Delete keys in a Linked list','https://www.geeksforgeeks.org/problems/delete-keys-in-a-linked-list/1',2,2),(4558,'Anti Diagonal Traversal of Matrix','https://www.geeksforgeeks.org/problems/print-diagonally1623/1',2,2),(4559,'While loop- printTable','https://www.geeksforgeeks.org/problems/while-loop-printtable/1',1,2),(4560,'Simple Interest','https://www.geeksforgeeks.org/problems/simple-interest3457/1',4,2),(4561,'Product of Primes','https://www.geeksforgeeks.org/problems/product-of-primes5328/1',2,2),(4562,'Maximum Triplet product','https://www.geeksforgeeks.org/problems/maximum-triplet-product--170647/1',2,2),(4563,'Convert a list of characters into a String','https://www.geeksforgeeks.org/problems/convert-a-list-of-characters-into-a-string5142/1',4,2),(4564,'Largest Pair Sum','https://www.geeksforgeeks.org/problems/pair-sum--120604/1',1,2),(4565,'Special Matrix','https://www.geeksforgeeks.org/problems/special-matrix4201/1',2,2),(4566,'String with numbers at its end','https://www.geeksforgeeks.org/problems/string-with-numbers-at-its-end5749/1',4,2),(4567,'Task Scheduler','https://www.geeksforgeeks.org/problems/task-scheduler/1',2,2),(4568,'Santa Banta','https://www.geeksforgeeks.org/problems/santa-banta2814/1',2,2),(4569,'Smallest range in K lists','https://www.geeksforgeeks.org/problems/find-smallest-range-containing-elements-from-k-lists/1',3,2),(4570,'Two Smallests in Every Subarray','https://www.geeksforgeeks.org/problems/maximum-sum-of-smallest-and-second-smallest-in-an-array/1',1,2),(4571,'Maximum Identical Bowls','https://www.geeksforgeeks.org/problems/maximum-identical-bowls--170647/1',1,2),(4572,'Remove Duplicates from unsorted array','https://www.geeksforgeeks.org/problems/remove-duplicates-from-unsorted-array4141/1',4,2),(4573,'Special Digits','https://www.geeksforgeeks.org/problems/special-digits--170647/1',3,2),(4574,'Maximum subset sum','https://www.geeksforgeeks.org/problems/maximum-subset-sum--170648/1',2,2),(4575,'Minimum difference pair','https://www.geeksforgeeks.org/problems/minimum-difference-pair5444/1',4,2),(4576,'Bit Magic','https://www.geeksforgeeks.org/problems/bit-magic--170648/1',1,2),(4577,'Compare two fractions','https://www.geeksforgeeks.org/problems/compare-two-fractions4438/1',1,2),(4578,'Composite and  Prime','https://www.geeksforgeeks.org/problems/composite-and-prime0359/1',2,2),(4579,'Number of greater elements to the right','https://www.geeksforgeeks.org/problems/number-of-nges-to-the-right/1',2,2),(4580,'For loop - Python','https://www.geeksforgeeks.org/problems/for-loop-python/1',1,2),(4581,'Reverse sub array','https://www.geeksforgeeks.org/problems/reverse-sub-array5620/1',4,2),(4582,'Strongly connected component (Tarjans\'s Algo)','https://www.geeksforgeeks.org/problems/strongly-connected-component-tarjanss-algo-1587115621/1',3,2),(4583,'Remainder Evaluation','https://www.geeksforgeeks.org/problems/remainder-evaluation3755/1',4,2),(4584,'Replace every element with the least greater element on its right','https://www.geeksforgeeks.org/problems/replace-every-element-with-the-least-greater-element-on-its-right/1',2,2),(4585,'Binary Search in forest','https://www.geeksforgeeks.org/problems/binary-search-in-forest--141631/1',1,2),(4586,'Coverage of all Zeros in a Binary Matrix','https://www.geeksforgeeks.org/problems/coverage-of-all-zeros-in-a-binary-matrix4024/1',1,2),(4587,'Maximum Weight Node','https://www.geeksforgeeks.org/problems/maximum-weight-node--170645/1',1,2),(4588,'Largest Sum Cycle','https://www.geeksforgeeks.org/problems/largest-sum-cycle--170645/1',3,2),(4589,'Complete Binary Tree','https://www.geeksforgeeks.org/problems/complete-binary-tree/1',2,2),(4590,'Maximum Length','https://www.geeksforgeeks.org/problems/maximum-length--170647/1',2,2),(4591,'Intersection Point in Y Shaped Linked Lists','https://www.geeksforgeeks.org/problems/intersection-point-in-y-shaped-linked-lists--170645/1',2,2),(4592,'Palindrome SubStrings','https://www.geeksforgeeks.org/problems/count-palindrome-sub-strings-of-a-string0652/1',2,2),(4593,'Sum of k smallest elements in BST','https://www.geeksforgeeks.org/problems/sum-of-k-smallest-elements-in-bst3029/1',1,2),(4594,'Shortest Prime Path','https://www.geeksforgeeks.org/problems/shortest-prime-path--141631/1',2,2),(4595,'License Key Formatting','https://www.geeksforgeeks.org/problems/license-key-formatting/1',1,2),(4596,'String formation from substring','https://www.geeksforgeeks.org/problems/string-formation-from-substring2734/1',2,2),(4597,'Total Cuts','https://www.geeksforgeeks.org/problems/total-cuts--170648/1',1,2),(4598,'Split array in three equal sum subarrays','https://www.geeksforgeeks.org/problems/split-array-in-three-equal-sum-subarrays/1',2,2),(4599,'Nearest smaller tower','https://www.geeksforgeeks.org/problems/nearest-smaller-tower--170647/1',2,2),(4600,'Minimum Number','https://www.geeksforgeeks.org/problems/minimum-number--170647/1',1,2),(4601,'Permutations in array','https://www.geeksforgeeks.org/problems/permutations-in-array1747/1',1,2),(4602,'Type of array','https://www.geeksforgeeks.org/problems/type-of-array4605/1',4,2),(4603,'Count Subarrays with given XOR','https://www.geeksforgeeks.org/problems/count-subarray-with-given-xor/1',2,2),(4604,'Consonants and Vowels check - Java','https://www.geeksforgeeks.org/problems/consonants-and-vowels-check-java/1',1,2),(4605,'The Palindrome Pattern','https://www.geeksforgeeks.org/problems/the-palindrome-pattern3900/1',1,2),(4606,'Smallest sum contiguous subarray','https://www.geeksforgeeks.org/problems/smallest-sum-contiguous-subarray/1',2,2),(4607,'Unique Binary Tree Requirements','https://www.geeksforgeeks.org/problems/unique-binary-tree-requirements/1',1,2),(4608,'Print an array in Pendulum Arrangement','https://www.geeksforgeeks.org/problems/print-an-array-in-pendulum-arrangement4004/1',1,2),(4609,'Count type of Characters','https://www.geeksforgeeks.org/problems/count-type-of-characters3635/1',4,2),(4610,'Remove the balls','https://www.geeksforgeeks.org/problems/remove-the-balls--170647/1',2,2),(4611,'Print Longest Increasing Subsequence','https://www.geeksforgeeks.org/problems/printing-longest-increasing-subsequence/1',2,2),(4612,'Find n-th term of series 1, 3, 6, 10, 15, 21','https://www.geeksforgeeks.org/problems/find-n-th-term-of-series-1-3-6-10-15-215506/1',4,2),(4613,'Integer to Words','https://www.geeksforgeeks.org/problems/number-to-words0335/1',2,2),(4614,'Possible Paths in a Tree','https://www.geeksforgeeks.org/problems/possible-paths--141628/1',3,2),(4615,'Cat and Hat','https://www.geeksforgeeks.org/problems/cat-and-hat-python/1',2,2),(4616,'Finding Profession','https://www.geeksforgeeks.org/problems/finding-profession3834/1',2,2),(4617,'Sort Unsorted Subarray','https://www.geeksforgeeks.org/problems/length-unsorted-subarray3022/1',1,2),(4618,'Is it Fibonacci','https://www.geeksforgeeks.org/problems/is-it-fibonacci--170647/1',1,2),(4619,'Array Removals','https://www.geeksforgeeks.org/problems/array-removals/1',2,2),(4620,'Find number of closed islands','https://www.geeksforgeeks.org/problems/find-number-of-closed-islands/1',3,2),(4621,'Number of ways','https://www.geeksforgeeks.org/problems/number-of-ways2552/1',2,2),(4622,'Vertex Cover','https://www.geeksforgeeks.org/problems/vertex-cover/1',3,2),(4623,'Queue using stack','https://www.geeksforgeeks.org/problems/queue-using-stack/1',1,2),(4624,'Powerfull Integer','https://www.geeksforgeeks.org/problems/powerfull-integer--170647/1',1,2),(4625,'Black and White','https://www.geeksforgeeks.org/problems/black-and-white-1587115620/1',2,2),(4626,'Expression contains redundant bracket or not','https://www.geeksforgeeks.org/problems/expression-contains-redundant-bracket-or-not/1',2,2),(4627,'Polynomial Addition','https://www.geeksforgeeks.org/problems/polynomial-addition/1',2,2),(4628,'The Pattern Matcher - Java','https://www.geeksforgeeks.org/problems/the-pattern-matcher-java/1',1,2),(4629,'Sequence Fun','https://www.geeksforgeeks.org/problems/sequence-fun5018/1',1,2),(4630,'Level of a Node in Binary Tree','https://www.geeksforgeeks.org/problems/level-of-a-node-in-binary-tree/1',1,2),(4631,'BBT counter','https://www.geeksforgeeks.org/problems/bbt-counter4914/1',1,2),(4632,'Split the binary string into substrings with equal number of 0s and 1s','https://www.geeksforgeeks.org/problems/split-the-binary-string-into-substrings-with-equal-number-of-0s-and-1s/1',1,2),(4633,'Buildings receiving sunlight','https://www.geeksforgeeks.org/problems/buildings-receiving-sunlight3032/1',1,2),(4634,'Find maximum volume of a cuboid','https://www.geeksforgeeks.org/problems/magical-box5306/1',1,2),(4635,'Second smallest number','https://www.geeksforgeeks.org/problems/second-smallest-number--170647/1',2,2),(4636,'Leaves to DLL','https://www.geeksforgeeks.org/problems/leaves-to-dll/1',2,2),(4637,'Find the String','https://www.geeksforgeeks.org/problems/find-the-string/1',3,2),(4638,'C++ 2-D Arrays | Set-1','https://www.geeksforgeeks.org/problems/c-2-d-arrays0708/1',4,2),(4639,'Intersection of Two arrays with Duplicate Elements','https://www.geeksforgeeks.org/problems/intersection-of-two-arrays-with-duplicate-elements/1',1,2),(4640,'Sum of two numbers without using arithmetic operators','https://www.geeksforgeeks.org/problems/sum-of-two-numbers-without-using-arithmetic-operators/1',1,2),(4641,'Count pairs in array divisible by K','https://www.geeksforgeeks.org/problems/count-pairs-in-array-divisible-by-k/1',2,2),(4642,'Subsets with XOR value','https://www.geeksforgeeks.org/problems/subsets-with-xor-value2023/1',2,2),(4643,'Maximum sum leaf to root path','https://www.geeksforgeeks.org/problems/maximum-sum-leaf-to-root-path/1',2,2),(4644,'Sum of two numbers represented as arrays','https://www.geeksforgeeks.org/problems/sum-of-two-numbers-represented-as-arrays3110/1',1,2),(4645,'Geekina Hate 1s','https://www.geeksforgeeks.org/problems/geekina-hate-1s/1',3,2),(4646,'Fibonacci Sum','https://www.geeksforgeeks.org/problems/fibonacci-sum1423/1',2,2),(4647,'C++ Pointers ( Incrementing a variable) | Set 1','https://www.geeksforgeeks.org/problems/c-pointers-set-1introduction/1',4,2),(4648,'Counts Zeros Xor Pairs','https://www.geeksforgeeks.org/problems/counts-zeros-xor-pairs0349/1',1,2),(4649,'Mean of an Array','https://www.geeksforgeeks.org/problems/mean0021/1',4,2),(4650,'Maximum number of zeroes','https://www.geeksforgeeks.org/problems/maximum-number-of-zeroes4048/1',1,2),(4651,'Shy Geek','https://www.geeksforgeeks.org/problems/shy-geek--170647/1',2,2),(4652,'Compare two linked lists','https://www.geeksforgeeks.org/problems/compare-two-linked-lists/1',1,2),(4653,'Largest subtree sum in a tree','https://www.geeksforgeeks.org/problems/largest-subtree-sum-in-a-tree/1',2,2),(4654,'Union of Two Sorted Arrays with Distinct Elements','https://www.geeksforgeeks.org/problems/union-of-two-sorted-arrays-with-distinct-elements/1',1,2),(4655,'C++ Operators | Set 1 (Arithmetic)','https://www.geeksforgeeks.org/problems/c-operators4602/1',4,2),(4656,'Stack Permutations','https://www.geeksforgeeks.org/problems/stack-permutations/1',2,2),(4657,'Number of Subarrays of 0\'s','https://www.geeksforgeeks.org/problems/number-of-subarrays-of-0s--170647/1',1,2),(4658,'Redundant Parenthesis','https://www.geeksforgeeks.org/problems/redundant-parenthesis--170647/1',3,2),(4659,'While loop in Python','https://www.geeksforgeeks.org/problems/while-loop-in-python/1',1,2),(4660,'Prime List','https://www.geeksforgeeks.org/problems/prime-list--170646/1',2,2),(4661,'Minimum number of deletions.','https://www.geeksforgeeks.org/problems/minimum-number-of-deletions4610/1',2,2),(4662,'Pattern 11','https://www.geeksforgeeks.org/problems/triangle-pattern-1661718455/1',4,2),(4663,'Professor and Parties','https://www.geeksforgeeks.org/problems/professor-and-parties2000/1',1,2),(4664,'Walls Coloring II','https://www.geeksforgeeks.org/problems/walls-coloring-ii--170647/1',3,2),(4665,'Next greater number set digits','https://www.geeksforgeeks.org/problems/next-greater-number-set-digits3503/1',1,2),(4666,'Delete nodes greater than k','https://www.geeksforgeeks.org/problems/delete-nodes-greater-than-k/1',2,2),(4667,'Magic Triplets','https://www.geeksforgeeks.org/problems/magic-triplets4003/1',2,2),(4668,'Is Sudoku Valid','https://www.geeksforgeeks.org/problems/is-sudoku-valid4820/1',2,2),(4669,'Maximum Intersecting Lines','https://www.geeksforgeeks.org/problems/maximum-intersecting-lines--170647/1',2,2),(4670,'Number of Rectangles in a Circle','https://www.geeksforgeeks.org/problems/rectangles-in-a-circle0457/1',2,2),(4671,'Multiply Matrices','https://www.geeksforgeeks.org/problems/multiply-matrices/1',4,2),(4672,'Distinct palindromic substrings','https://www.geeksforgeeks.org/problems/distinct-palindromic-substrings5141/1',3,2),(4673,'Find Kth permutation','https://www.geeksforgeeks.org/problems/find-kth-permutation-0932/1',2,2),(4674,'Hands of Straights','https://www.geeksforgeeks.org/problems/hands-of-straights/1',2,2),(4675,'Minimum indexed character','https://www.geeksforgeeks.org/problems/minimum-indexed-character0221/1',1,2),(4676,'Minimum Steps Required','https://www.geeksforgeeks.org/problems/minimum-steps-required--170647/1',2,2),(4677,'Paint N House','https://www.geeksforgeeks.org/problems/distinct-coloring--170645/1',2,2),(4678,'Chicks in a Zoo','https://www.geeksforgeeks.org/problems/chicks-in-a-zoo1159/1',1,2),(4679,'Length of the longest subarray with positive product','https://www.geeksforgeeks.org/problems/length-of-the-longest-subarray-with-positive-product--170646/1',2,2),(4680,'Sorted Linked List to BST','https://www.geeksforgeeks.org/problems/sorted-list-to-bst/1',3,2),(4681,'Police and Thieves','https://www.geeksforgeeks.org/problems/police-and-thieves--141631/1',2,2),(4682,'Decimal to binary','https://www.geeksforgeeks.org/problems/decimal-to-binary-1587115620/1',4,2),(4683,'Geek and Number String','https://www.geeksforgeeks.org/problems/geek-and-number-string--141631/1',2,2),(4684,'Count pair sum','https://www.geeksforgeeks.org/problems/count-pair-sum5956/1',4,2),(4685,'Play with an array','https://www.geeksforgeeks.org/problems/play-with-an-array/1',4,2),(4686,'Break a number','https://www.geeksforgeeks.org/problems/break-a-number5913/1',1,2),(4687,'Max Sum without Adjacents','https://www.geeksforgeeks.org/problems/max-sum-without-adjacents--170645/1',2,2),(4688,'Taxi Booking','https://www.geeksforgeeks.org/problems/taxi-booking--170647/1',1,2),(4689,'Matrix Interchange','https://www.geeksforgeeks.org/problems/matrix-interchange/1',1,2),(4690,'Division without using multiplication, division and mod operator','https://www.geeksforgeeks.org/problems/division-without-using-multiplication-division-and-mod-operator/1',2,2),(4691,'Smallest greater elements in whole array','https://www.geeksforgeeks.org/problems/smallest-greater-elements-in-whole-array2751/1',1,2),(4692,'Count the Specials','https://www.geeksforgeeks.org/problems/count-the-specials/1',1,2),(4693,'Sort a k sorted doubly linked list','https://www.geeksforgeeks.org/problems/sort-a-k-sorted-doubly-linked-list/1',2,2),(4694,'BST Maximum Difference','https://www.geeksforgeeks.org/problems/bst-maximum-difference--170647/1',2,2),(4695,'Even and Odd','https://www.geeksforgeeks.org/problems/even-and-odd/1',1,2),(4696,'Another Coin Change Problem','https://www.geeksforgeeks.org/problems/another-coin-change-problem--170647/1',2,2),(4697,'Count even length','https://www.geeksforgeeks.org/problems/count-even-length1907/1',2,2),(4698,'Queue Push & Pop','https://www.geeksforgeeks.org/problems/queue-designer/1',4,2),(4699,'Find distinct elements','https://www.geeksforgeeks.org/problems/find-distinct-elements2054/1',2,2),(4700,'The Size of','https://www.geeksforgeeks.org/problems/the-size-of/1',4,2),(4701,'C++ Basic Data types','https://www.geeksforgeeks.org/problems/c-basic-data-types3128/1',4,2),(4702,'Count Binary Strings With No Consecutive 1s','https://www.geeksforgeeks.org/problems/count-binary-strings-with-no-consecutive-1s/1',3,2),(4703,'Almost Equal -Java','https://www.geeksforgeeks.org/problems/almost-equal-java/1',1,2),(4704,'Balloon Everywhere','https://www.geeksforgeeks.org/problems/balloon-everywhere--170646/1',1,2),(4705,'Geeks And The String','https://www.geeksforgeeks.org/problems/geeks-and-the-string--170645/1',2,2),(4706,'Count Total Setbits','https://www.geeksforgeeks.org/problems/count-total-setbits/1',2,2),(4707,'Spiral Matrix','https://www.geeksforgeeks.org/problems/spiral-matrix--141631/1',2,2),(4708,'Min Time','https://www.geeksforgeeks.org/problems/min-time--170648/1',3,2),(4709,'Equilibrium index of an array','https://www.geeksforgeeks.org/problems/equilibrium-index-of-an-array/1',1,2),(4710,'Max Coins','https://www.geeksforgeeks.org/problems/max-coins--170647/1',2,2),(4711,'Find patterns','https://www.geeksforgeeks.org/problems/find-patterns0606/1',2,2),(4712,'Matrix Interchange - Java','https://www.geeksforgeeks.org/problems/matrix-interchange-java/1',1,2),(4713,'Prefix Suffix String','https://www.geeksforgeeks.org/problems/prefix-suffix-string--170647/1',2,2),(4714,'Pattern 13','https://www.geeksforgeeks.org/problems/triangle-pattern-1661718712/1',4,2),(4715,'Make Zeroes','https://www.geeksforgeeks.org/problems/make-zeroes4042/1',1,2),(4716,'Check if array contains contiguous integers','https://www.geeksforgeeks.org/problems/check-if-array-contains-contiguous-integers-with-duplicates-allowed2046/1',1,2),(4717,'Travelling Salesman Problem','https://www.geeksforgeeks.org/problems/travelling-salesman-problem2732/1',3,2),(4718,'Maximum Possible Value','https://www.geeksforgeeks.org/problems/maximum-possible-value--170647/1',2,2),(4719,'Cutting Rectangles','https://www.geeksforgeeks.org/problems/cutting-rectangles--170647/1',1,2),(4720,'Power of Pow | Even Number','https://www.geeksforgeeks.org/problems/power-of-pow-even-number5440/1',4,2),(4721,'Easy Task','https://www.geeksforgeeks.org/problems/easy-task--170647/1',2,2),(4722,'Welcome aboard - Python','https://www.geeksforgeeks.org/problems/welcome-aboard-python/1',4,2),(4723,'Height of Heap','https://www.geeksforgeeks.org/problems/height-of-heap5025/1',4,2),(4724,'Binary matrix having maximum number of 1s','https://www.geeksforgeeks.org/problems/binary-matrix-having-maximum-number-of-1s--170647/1',1,2),(4725,'Carpet into Box','https://www.geeksforgeeks.org/problems/carpet-into-box--170645/1',2,2),(4726,'Minimize number of Students to be removed','https://www.geeksforgeeks.org/problems/minimize-number-of-students-to-be-removed--170645/1',2,2),(4727,'Positive and negative elements','https://www.geeksforgeeks.org/problems/positive-and-negative-elements4613/1',4,2),(4728,'Next Right Node','https://www.geeksforgeeks.org/problems/next-right-node/1',1,2),(4729,'Sort and Reverse Vector','https://www.geeksforgeeks.org/problems/sort-and-reverse-vector/1',4,2),(4730,'Full Binary Tree','https://www.geeksforgeeks.org/problems/full-binary-tree/1',1,2),(4731,'Shortest XY distance in Grid','https://www.geeksforgeeks.org/problems/shortest-xy-distance-in-grid--170647/1',2,2),(4732,'Binary representation','https://www.geeksforgeeks.org/problems/binary-representation5003/1',4,2),(4733,'Pattern 14','https://www.geeksforgeeks.org/problems/triangle-pattern-1662284916/1',1,2),(4734,'Maximum Node Level','https://www.geeksforgeeks.org/problems/maximum-node-level/1',1,2),(4735,'Help Ishaan','https://www.geeksforgeeks.org/problems/help-ishaan5837/1',1,2),(4736,'Split the Array','https://www.geeksforgeeks.org/problems/split-the-array0238/1',2,2),(4737,'Substrings of length k with k-1 distinct elements','https://www.geeksforgeeks.org/problems/substrings-of-length-k-with-k-1-distinct-elements/1',2,2),(4738,'Absolute difference divisible by K','https://www.geeksforgeeks.org/problems/absolute-difference-divisible-by-k/1',2,2),(4739,'Tree Transformation','https://www.geeksforgeeks.org/problems/tree-transformation--170648/1',2,2),(4740,'Apple Sequences','https://www.geeksforgeeks.org/problems/apple-sequences--170646/1',2,2),(4741,'For Loop 2- Python','https://www.geeksforgeeks.org/problems/for-loop-2-python/1',1,2),(4742,'Rectangles in  N*N Board','https://www.geeksforgeeks.org/problems/rectangles-in-nn-board5930/1',1,2),(4743,'Type it!','https://www.geeksforgeeks.org/problems/type-it--170645/1',1,2),(4744,'Sort the string in descending order','https://www.geeksforgeeks.org/problems/sort-the-string-in-descending-order3542/1',4,2),(4745,'Divisibility tree','https://www.geeksforgeeks.org/problems/divisibility-tree1902/1',2,2),(4746,'Union-Find','https://www.geeksforgeeks.org/problems/union-find/1',1,2),(4747,'Pattern 18','https://www.geeksforgeeks.org/problems/triangle-pattern-1662286302/1',1,2),(4748,'Form a palindrome','https://www.geeksforgeeks.org/problems/form-a-palindrome2544/1',2,2),(4749,'Minimize the sum','https://www.geeksforgeeks.org/problems/minimize-the-sum--170645/1',1,2),(4750,'Pattern Printing','https://www.geeksforgeeks.org/problems/pattern-printing1347/1',4,2),(4751,'Unequal Arrays','https://www.geeksforgeeks.org/problems/unequal-arrays--170647/1',2,2),(4752,'Water Overflow','https://www.geeksforgeeks.org/problems/champagne-overflow2636/1',2,2),(4753,'Save Your Life','https://www.geeksforgeeks.org/problems/save-your-life4601/1',2,2),(4754,'Java 1-d and 2-d Array','https://www.geeksforgeeks.org/problems/java-1-d-and-2-d-array2952/1',4,2),(4755,'Shortest Job first','https://www.geeksforgeeks.org/problems/shortest-job-first/1',2,2),(4756,'Match specific pattern','https://www.geeksforgeeks.org/problems/match-specific-pattern/1',1,2),(4757,'Circular Linked List Traversal','https://www.geeksforgeeks.org/problems/circular-linked-list-traversal/1',4,2),(4758,'Matching Pair','https://www.geeksforgeeks.org/problems/matching-pair5320/1',4,2),(4759,'Add two fractions','https://www.geeksforgeeks.org/problems/add-two-fractions/1',4,2),(4760,'Add two numbers represented by two arrays','https://www.geeksforgeeks.org/problems/add-two-numbers-represented-by-two-arrays2408/1',1,2),(4761,'Possible paths','https://www.geeksforgeeks.org/problems/possible-paths3834/1',2,2),(4762,'Max sum subarray by removing at most one element','https://www.geeksforgeeks.org/problems/max-sum-subarray-by-removing-at-most-one-element/1',2,2),(4763,'Repetitive Addition Of Digits','https://www.geeksforgeeks.org/problems/repetitive-addition-of-digits2221/1',4,2),(4764,'Prime Factorization using Sieve','https://www.geeksforgeeks.org/problems/prime-factorization-using-sieve/1',2,2),(4765,'BST to max heap','https://www.geeksforgeeks.org/problems/bst-to-max-heap/1',2,2),(4766,'Count the Substrings','https://www.geeksforgeeks.org/problems/count-the-substrings--141634/1',1,2),(4767,'Sum of AP series','https://www.geeksforgeeks.org/problems/sum-of-ap-series4512/1',4,2),(4768,'Even Swap','https://www.geeksforgeeks.org/problems/even-swap/1',2,2),(4769,'Capacity To Ship Packages Within D Days','https://www.geeksforgeeks.org/problems/capacity-to-ship-packages-within-d-days/1',2,2),(4770,'Find Number','https://www.geeksforgeeks.org/problems/find-number--170647/1',2,2),(4771,'Print leaf nodes from preorder traversal of BST','https://www.geeksforgeeks.org/problems/print-leaf-nodes-from-preorder-traversal-of-bst2657/1',2,2),(4772,'Count Cyclic Paths','https://www.geeksforgeeks.org/problems/count-cyclic-paths--170647/1',2,2),(4773,'Sum of Subarrays','https://www.geeksforgeeks.org/problems/sum-of-subarrays2229/1',2,2),(4774,'BST Downward Traversal','https://www.geeksforgeeks.org/problems/bst-downward-traversal--170646/1',2,2),(4775,'Sum of primes','https://www.geeksforgeeks.org/problems/sum-of-primes0042/1',4,2),(4776,'Swap values using References','https://www.geeksforgeeks.org/problems/magic-in-cpp/1',1,2),(4777,'Stepping Numbers','https://www.geeksforgeeks.org/problems/stepping-numberswrong-output1813/1',2,2),(4778,'Coin Piles','https://www.geeksforgeeks.org/problems/coin-piles5152/1',2,2),(4779,'Absolute Difference of 1','https://www.geeksforgeeks.org/problems/absolute-difference-11156/1',4,2),(4780,'Check if the number is balanced','https://www.geeksforgeeks.org/problems/check-if-the-number-is-balanced3014/1',1,2),(4781,'Rotate doubly Linked List','https://www.geeksforgeeks.org/problems/rotate-doubly-linked-list-by-p-nodes/1',1,2),(4782,'longest substring containing \'1\'','https://www.geeksforgeeks.org/problems/longest-substring-containing-1/1',4,2),(4783,'Geek\'s Village and Wells','https://www.geeksforgeeks.org/problems/geeks-village-and-wells--170647/1',2,2),(4784,'Kth largest element','https://www.geeksforgeeks.org/problems/kth-largest-element5034/1',2,2),(4785,'Job Sequencing Problem','https://www.geeksforgeeks.org/problems/job-sequencing-problem--170647/1',2,2),(4786,'Maximum Number of Toys','https://www.geeksforgeeks.org/problems/maximum-number-of-toys/1',3,2),(4787,'Remove b and ac from a given string','https://www.geeksforgeeks.org/problems/remove-b-and-ac-from-a-given-string4336/1',1,2),(4788,'Minimum Days','https://www.geeksforgeeks.org/problems/minimum-days--170646/1',2,2),(4789,'Minimum steps to make product equal to one','https://www.geeksforgeeks.org/problems/minimum-steps-to-make-product-equal-to-one/1',1,2),(4790,'Cake Distribution Problem','https://www.geeksforgeeks.org/problems/cake-distribution-problem--170647/1',3,2),(4791,'Java Inheritance','https://www.geeksforgeeks.org/problems/java-inheritance/1',4,2),(4792,'Modify Linked List-1','https://www.geeksforgeeks.org/problems/modify-linked-list-1-0546/1',2,2),(4793,'Bus Conductor','https://www.geeksforgeeks.org/problems/bus-conductor--170647/1',1,2),(4794,'Sub-arrays with equal number of occurences','https://www.geeksforgeeks.org/problems/sub-arrays-with-equal-number-of-occurences3901/1',3,2),(4795,'Valid Expression','https://www.geeksforgeeks.org/problems/valid-expression1025/1',2,2),(4796,'Bitwise Operators - Java','https://www.geeksforgeeks.org/problems/bitwise-operators-java/1',1,2),(4797,'Pattern 21','https://www.geeksforgeeks.org/problems/square-pattern-1662287714/1',1,2),(4798,'Flattening a Linked List','https://www.geeksforgeeks.org/problems/flattening-a-linked-list--170645/1',2,2),(4799,'Logical Operators','https://www.geeksforgeeks.org/problems/logical-operators/1',4,2),(4800,'Search in Rotated Array 2','https://www.geeksforgeeks.org/problems/search-in-rotated-array-2/1',2,2),(4801,'Java Substring','https://www.geeksforgeeks.org/problems/java-substring5058/1',4,2),(4802,'Count Substrings','https://www.geeksforgeeks.org/problems/count-substrings0427/1',1,2),(4803,'Meeting Rooms','https://www.geeksforgeeks.org/problems/attend-all-meetings/1',1,2),(4804,'Number of Turns in Binary Tree','https://www.geeksforgeeks.org/problems/number-of-turns-in-binary-tree/1',3,2),(4805,'Maximum Intervals Overlap','https://www.geeksforgeeks.org/problems/maximum-intervals-overlap5708/1',2,2),(4806,'Pattern 15','https://www.geeksforgeeks.org/problems/triangle-pattern-1662285196/1',1,2),(4807,'Ways to write n as sum','https://www.geeksforgeeks.org/problems/ways-to-write-n-as-sum-1587115621/1',2,2),(4808,'Construct Binary Tree from String with bracket representation','https://www.geeksforgeeks.org/problems/construct-binary-tree-from-string-with-bracket-representation/1',2,2),(4809,'Count number of free cell','https://www.geeksforgeeks.org/problems/count-number-of-free-cell--170646/1',2,2),(4810,'Deletion in a Binary Tree','https://www.geeksforgeeks.org/problems/deletion-in-a-binary-tree/1',1,2),(4811,'Remove characters from alphanumeric string','https://www.geeksforgeeks.org/problems/remove-characters-from-alphanumeric-string0648/1',4,2),(4812,'Shortest Path by Removing K walls','https://www.geeksforgeeks.org/problems/shortest-path-by-removing-k-walls/1',3,2),(4813,'Find minimum number of Laptops required','https://www.geeksforgeeks.org/problems/find-minimum-number-of-laptops-required--170645/1',2,2),(4814,'Check if all levels of two trees are anagrams or not','https://www.geeksforgeeks.org/problems/check-if-all-levels-of-two-trees-are-anagrams-or-not/1',2,2),(4815,'Palindrome with minimum sum','https://www.geeksforgeeks.org/problems/palindrome-with-minimum-sum--170648/1',2,2),(4816,'Expression Add Operators','https://www.geeksforgeeks.org/problems/expression-add-operators/1',3,2),(4817,'Toggle bits in the given range','https://www.geeksforgeeks.org/problems/toggle-bits-given-range0952/1',4,2),(4818,'1[0]1 Pattern Count','https://www.geeksforgeeks.org/problems/101-pattern-count1341/1',1,2),(4819,'Pair cube count','https://www.geeksforgeeks.org/problems/pair-cube-count4132/1',1,2),(4820,'Convert Level Order Traversal to BST','https://www.geeksforgeeks.org/problems/convert-level-order-traversal-to-bst/1',2,2),(4821,'Max Level Sum in Binary Tree','https://www.geeksforgeeks.org/problems/max-level-sum-in-binary-tree--170647/1',1,2),(4822,'C++ STL | Set 1 (vector)','https://www.geeksforgeeks.org/problems/c-stl-set-1-vector/1',4,2),(4823,'Update Queries','https://www.geeksforgeeks.org/problems/update-queries--170647/1',2,2),(4824,'Maximize the sum of selected numbers from a sorted array to make it empty','https://www.geeksforgeeks.org/problems/maximize-the-sum-of-selected-numbers-from-an-array-to-make-it-empty0836/1',2,2),(4825,'The Nth Fibonnaci','https://www.geeksforgeeks.org/problems/the-nth-fibonnaci3150/1',1,2),(4826,'Kth Smallest Factor','https://www.geeksforgeeks.org/problems/kth-smallest-factor2345/1',2,2),(4827,'Equal point in a string of brackets','https://www.geeksforgeeks.org/problems/find-equal-point-in-string-of-brackets2542/1',1,2),(4828,'Half N by M','https://www.geeksforgeeks.org/problems/geek-and-coffee-shop5721/1',4,2),(4829,'Good Stones','https://www.geeksforgeeks.org/problems/good-stones--170647/1',2,2),(4830,'Find all distinct subset (or subsequence) sums','https://www.geeksforgeeks.org/problems/find-all-distinct-subset-or-subsequence-sums4424/1',2,2),(4831,'Clone a Binary Tree','https://www.geeksforgeeks.org/problems/clone-a-binary-tree/1',2,2),(4832,'Distinct Difference','https://www.geeksforgeeks.org/problems/distinct-difference--170647/1',2,2),(4833,'Minimum BST Sum Subtree','https://www.geeksforgeeks.org/problems/minimum-bst-sum-subtree--170647/1',3,2),(4834,'A difference of values and indexes','https://www.geeksforgeeks.org/problems/a-difference-of-values-and-indexes0302/1',2,2),(4835,'Prefix to Infix Conversion','https://www.geeksforgeeks.org/problems/prefix-to-infix-conversion/1',2,2),(4836,'Find k-th character in string','https://www.geeksforgeeks.org/problems/find-k-th-character-in-string3841/1',2,2),(4837,'Rearrange a string','https://www.geeksforgeeks.org/problems/rearrange-a-string4100/1',1,2),(4838,'Thief trying to escape','https://www.geeksforgeeks.org/problems/thief-try-to-excape0710/1',4,2),(4839,'Transfiguration','https://www.geeksforgeeks.org/problems/transfiguration--141631/1',2,2),(4840,'Cube root of a number','https://www.geeksforgeeks.org/problems/cube-root-of-a-number0915/1',4,2),(4841,'Check if it is possible to convert one string into another with given constraints','https://www.geeksforgeeks.org/problems/check-if-it-is-possible-to-convert-one-string-into-another-with-given-constraints4116/1',1,2),(4842,'Product is even or odd?','https://www.geeksforgeeks.org/problems/product-is-even-or-odd3020/1',4,2),(4843,'Sum of distinct elements','https://www.geeksforgeeks.org/problems/sum-of-distinct-elements4801/1',4,2),(4844,'Java ArrayList Operation','https://www.geeksforgeeks.org/problems/arraylist-operation/1',1,2),(4845,'Star elements','https://www.geeksforgeeks.org/problems/start-elements3447/1',1,2),(4846,'Sum equals to Sum','https://www.geeksforgeeks.org/problems/sum-equals-to-sum4006/1',1,2),(4847,'Find largest word in dictionary','https://www.geeksforgeeks.org/problems/find-largest-word-in-dictionary2430/1',2,2),(4848,'Even Odd - Java','https://www.geeksforgeeks.org/problems/even-odd-java/1',1,2),(4849,'Connecting the graph','https://www.geeksforgeeks.org/problems/connecting-the-graph/1',2,2),(4850,'Divisible by 7','https://www.geeksforgeeks.org/problems/divisible-by-73224/1',1,2),(4851,'Construct Tree from Preorder Traversal','https://www.geeksforgeeks.org/problems/construct-tree-from-preorder-traversal/1',2,2),(4852,'Integral Points Inside Triangle','https://www.geeksforgeeks.org/problems/integral-points-in-triangle5026/1',2,2),(4853,'Maximum height of the staircase','https://www.geeksforgeeks.org/problems/maximum-height-of-the-staircase5755/1',1,2),(4854,'Longest Palindrome in Linked List','https://www.geeksforgeeks.org/problems/length-of-longest-palindrome-in-linked-list/1',2,2),(4855,'Pattern 12','https://www.geeksforgeeks.org/problems/double-triangle-pattern-1662664259/1',1,2),(4856,'Partition the Array','https://www.geeksforgeeks.org/problems/partition-the-array--170647/1',3,2),(4857,'Bheem Wants Ladoos','https://www.geeksforgeeks.org/problems/bheem-wants-ladoos--170647/1',2,2),(4858,'Count of sum of consecutives','https://www.geeksforgeeks.org/problems/count-of-sum-of-consecutives3741/1',2,2),(4859,'Pattern 16','https://www.geeksforgeeks.org/problems/triangle-pattern-1662285334/1',1,2),(4860,'Maximum Sum LCM','https://www.geeksforgeeks.org/problems/maximum-sum-lcm3025/1',1,2),(4861,'Scrambled String','https://www.geeksforgeeks.org/problems/scrambled-string/1',3,2),(4862,'Special array reversal','https://www.geeksforgeeks.org/problems/special-array-reversal2328/1',1,2),(4863,'Super Primes','https://www.geeksforgeeks.org/problems/super-primes2443/1',2,2),(4864,'Min operations','https://www.geeksforgeeks.org/problems/min-operations--170645/1',1,2),(4865,'Anshuman\'s Favourite Number','https://www.geeksforgeeks.org/problems/anshumans-favourite-number2029/1',4,2),(4866,'Reverse both parts','https://www.geeksforgeeks.org/problems/reverse-both-parts--170647/1',1,2),(4867,'Sum of Beauty of All Substrings','https://www.geeksforgeeks.org/problems/sum-of-beauty-of-all-substrings-1662962118/1',2,2),(4868,'K-th Largest Sum Contiguous Subarray','https://www.geeksforgeeks.org/problems/k-th-largest-sum-contiguous-subarray/1',2,2),(4869,'Perfect Number','https://www.geeksforgeeks.org/problems/perfect-number3759/1',4,2),(4870,'Linked List in Zig-Zag fashion','https://www.geeksforgeeks.org/problems/linked-list-in-zig-zag-fashion/1',2,2),(4871,'Slicing in String - Python','https://www.geeksforgeeks.org/problems/slicing-in-string-python/1',1,2),(4872,'Valid Pair Sum','https://www.geeksforgeeks.org/problems/valid-pair-sum--141631/1',2,2),(4873,'Geek hates too many 1s','https://www.geeksforgeeks.org/problems/geek-hates-too-many-1s--170647/1',2,2),(4874,'String Manipulation','https://www.geeksforgeeks.org/problems/string-manipulation3706/1',1,2),(4875,'Connect Nodes at Same Level','https://www.geeksforgeeks.org/problems/connect-nodes-at-same-level--170647/1',2,2),(4876,'Transform to Sum Tree','https://www.geeksforgeeks.org/problems/transform-to-sum-tree--170645/1',1,2),(4877,'Nth number made of prime digits','https://www.geeksforgeeks.org/problems/nth-number-made-of-prime-digits4319/1',1,2),(4878,'Fill the Matrix','https://www.geeksforgeeks.org/problems/fill-the-matrix--170647/1',2,2),(4879,'Magical Number','https://www.geeksforgeeks.org/problems/magical-number-1587115620/1',1,2),(4880,'Easy string','https://www.geeksforgeeks.org/problems/easy-string2212/1',1,2),(4881,'Pots of Gold Game','https://www.geeksforgeeks.org/problems/pots-of-gold-game/1',2,2),(4882,'Need Some Change - Java','https://www.geeksforgeeks.org/problems/need-some-change-java/1',1,2),(4883,'132 Geeky Buildings','https://www.geeksforgeeks.org/problems/132-geeky-buildings--141631/1',3,2),(4884,'Last cell in a Matrix','https://www.geeksforgeeks.org/problems/last-cell-in-a-matrix/1',1,2),(4885,'Two Dimensional World','https://www.geeksforgeeks.org/problems/two-dimensional-world/1',1,2),(4886,'Find the longest string','https://www.geeksforgeeks.org/problems/find-the-longest-string--170645/1',2,2),(4887,'Jumping Caterpillars','https://www.geeksforgeeks.org/problems/jumping-caterpillars4412/1',1,2),(4888,'Find the minimum time','https://www.geeksforgeeks.org/problems/find-the-minimum-time0253/1',1,2),(4889,'Divide in Incremental Groups','https://www.geeksforgeeks.org/problems/divide-in-incremental-groups--170647/1',3,2),(4890,'Missing number in matrix','https://www.geeksforgeeks.org/problems/missing-number-in-matrix5316/1',2,2),(4891,'Walls Coloring','https://www.geeksforgeeks.org/problems/walls-coloring--170646/1',2,2),(4892,'Find all possible palindromic partitions of a String','https://www.geeksforgeeks.org/problems/find-all-possible-palindromic-partitions-of-a-string/1',2,2),(4893,'Remove repeated digits in a given number','https://www.geeksforgeeks.org/problems/remove-repeated-digits-in-a-given-number4014/1',4,2),(4894,'Full Prime','https://www.geeksforgeeks.org/problems/full-prime2659/1',4,2),(4895,'Tic Tac Toe','https://www.geeksforgeeks.org/problems/tic-tac-toe2412/1',2,2),(4896,'Greater tower sum','https://www.geeksforgeeks.org/problems/save-gotham1222/1',2,2),(4897,'Median of the Subarrays','https://www.geeksforgeeks.org/problems/median-of-the-subarrays--170647/1',3,2),(4898,'Akku and Binary Numbers','https://www.geeksforgeeks.org/problems/akku-and-binary-numbers0902/1',2,2),(4899,'Construct a Full Binary Tree','https://www.geeksforgeeks.org/problems/construct-a-full-binary-tree--170648/1',2,2),(4900,'Longest Perfect Piece','https://www.geeksforgeeks.org/problems/close-to-perfection1525/1',2,2),(4901,'Odd to Even','https://www.geeksforgeeks.org/problems/odd-to-even0537/1',4,2),(4902,'Pattern of Strings','https://www.geeksforgeeks.org/problems/pattern-of-strings3829/1',4,2),(4903,'Multiply Array','https://www.geeksforgeeks.org/problems/multiply-array-1658312632/1',4,2),(4904,'Good Subtrees','https://www.geeksforgeeks.org/problems/good-subtrees--170647/1',2,2),(4905,'Maximum Number of coins','https://www.geeksforgeeks.org/problems/maximum-number-of-coins--170647/1',3,2),(4906,'String Functions - II  - Python','https://www.geeksforgeeks.org/problems/string-functions-ii/1',1,2),(4907,'Palindrome Sentence','https://www.geeksforgeeks.org/problems/string-palindromic-ignoring-spaces4723/1',1,2),(4908,'Fixing Two swapped nodes of a BST','https://www.geeksforgeeks.org/problems/fixing-two-swapped-nodes-of-a-bst--170646/1',3,2),(4909,'Palindrome Pairs','https://www.geeksforgeeks.org/problems/palindrome-pairs/1',3,2),(4910,'Delete Array','https://www.geeksforgeeks.org/problems/delete-array/1',1,2),(4911,'LCM Triplet','https://www.geeksforgeeks.org/problems/lcm-triplet1501/1',2,2),(4912,'Complement','https://www.geeksforgeeks.org/problems/complement3911/1',2,2),(4913,'Single valued subtree','https://www.geeksforgeeks.org/problems/single-valued-subtree/1',2,2),(4914,'Lexicographically smallest string','https://www.geeksforgeeks.org/problems/mila-and-strings0435/1',2,2),(4915,'Largest value in each level','https://www.geeksforgeeks.org/problems/largest-value-in-each-level/1',1,2),(4916,'Handshakes','https://www.geeksforgeeks.org/problems/handshakes1303/1',2,2),(4917,'Merging Details','https://www.geeksforgeeks.org/problems/merging-details/1',2,2),(4918,'Minimum X (xor) A','https://www.geeksforgeeks.org/problems/minimum-x-xor-a--170645/1',2,2),(4919,'Help the Old Man!!!','https://www.geeksforgeeks.org/problems/help-the-old-man3848/1',1,2),(4920,'Largest Fibonacci Subsequence','https://www.geeksforgeeks.org/problems/largest-fibonacci-subsequence2206/1',1,2),(4921,'Water Connection Problem','https://www.geeksforgeeks.org/problems/water-connection-problem5822/1',3,2),(4922,'Special Palindrome Substrings','https://www.geeksforgeeks.org/problems/special-palindrome-substrings--170647/1',2,2),(4923,'Front to Back','https://www.geeksforgeeks.org/problems/front-to-back/1',4,2),(4924,'Is Square','https://www.geeksforgeeks.org/problems/is-square1846/1',1,2),(4925,'3 Sum Closest','https://www.geeksforgeeks.org/problems/3-sum-closest/1',2,2),(4926,'Sum of odd and even elements','https://www.geeksforgeeks.org/problems/sum-of-odd-and-even-elements3033/1',4,2),(4927,'Java Basic Data Types','https://www.geeksforgeeks.org/problems/java-basic-data-types0041/1',4,2),(4928,'Fill up buckets','https://www.geeksforgeeks.org/problems/fill-up-buckets3500/1',2,2),(4929,'Longest consecutive sequence in Binary tree','https://www.geeksforgeeks.org/problems/longest-consecutive-sequence-in-binary-tree/1',1,2),(4930,'Pairwise Consecutive Elements','https://www.geeksforgeeks.org/problems/pairwise-consecutive-elements/1',4,2),(4931,'Move all zeros to the front of the linked list','https://www.geeksforgeeks.org/problems/move-all-zeros-to-the-front-of-the-linked-list/1',1,2),(4932,'Yet another query problem','https://www.geeksforgeeks.org/problems/yet-another-query-problem--170647/1',2,2),(4933,'Shortest Path Using Atmost One Curved Edge','https://www.geeksforgeeks.org/problems/shortest-path-using-atmost-one-curved-edge--170647/1',3,2),(4934,'Small Factorial','https://www.geeksforgeeks.org/problems/small-factorial0854/1',4,2),(4935,'Build the smallest','https://www.geeksforgeeks.org/problems/build-the-smallest2841/1',2,2),(4936,'Right most non zero digit','https://www.geeksforgeeks.org/problems/right-most-non-zero-digit1834/1',1,2),(4937,'k sorted array','https://www.geeksforgeeks.org/problems/k-sorted-array1610/1',1,2),(4938,'Check if the door is open or closed','https://www.geeksforgeeks.org/problems/check-if-the-door-is-open-or-closed2013/1',4,2),(4939,'Maximum Gap','https://www.geeksforgeeks.org/problems/maximum-gap3845/1',1,2),(4940,'Koko Eating Bananas','https://www.geeksforgeeks.org/problems/koko-eating-bananas/1',2,2),(4941,'Distance between 2 points','https://www.geeksforgeeks.org/problems/distance-between-2-points3200/1',4,2),(4942,'Remove all characters other than alphabets','https://www.geeksforgeeks.org/problems/remove-all-characters-other-than-alphabets4923/1',4,2),(4943,'Triplets with sum with given range','https://www.geeksforgeeks.org/problems/triplets-with-sum-with-given-range/1',2,2),(4944,'Minimum Cost to cut a board into squares','https://www.geeksforgeeks.org/problems/minimum-cost-to-cut-a-board-into-squares/1',2,2),(4945,'Find duplicates under given constraints','https://www.geeksforgeeks.org/problems/find-duplicates-under-given-constraints0856/1',1,2),(4946,'C++ Data Types','https://www.geeksforgeeks.org/problems/c-data-types1523/1',4,2),(4947,'Check if divisible by 4','https://www.geeksforgeeks.org/problems/check-if-divisible-by-43813/1',4,2),(4948,'Meta Strings','https://www.geeksforgeeks.org/problems/meta-strings5713/1',1,2),(4949,'Minimize Difference in Task Priorities','https://www.geeksforgeeks.org/problems/minimum-difference-among-k5805/1',1,2),(4950,'Design a tiny URL or URL shortener','https://www.geeksforgeeks.org/problems/design-a-tiny-url-or-url-shortener2031/1',2,2),(4951,'Predict the Column - Java','https://www.geeksforgeeks.org/problems/predict-the-column-java/1',1,2),(4952,'Optimal Array','https://www.geeksforgeeks.org/problems/optimal-array--170647/1',2,2),(4953,'Balanced string','https://www.geeksforgeeks.org/problems/balanced-string1627/1',1,2),(4954,'Rank The Permutations','https://www.geeksforgeeks.org/problems/rank-the-permutations2323/1',2,2),(4955,'Number Formation','https://www.geeksforgeeks.org/problems/number-formation3506/1',3,2),(4956,'Disarrangement of balls','https://www.geeksforgeeks.org/problems/dearrangement-of-balls0918/1',2,2),(4957,'IPL 2021 - Final','https://www.geeksforgeeks.org/problems/ipl-2021-final--141634/1',3,2),(4958,'Maximum Value','https://www.geeksforgeeks.org/problems/maximum-value--170645/1',2,2),(4959,'Exponentiation (Set 2)','https://www.geeksforgeeks.org/problems/abset-25327/1',1,2),(4960,'Subset with sum divisible by k','https://www.geeksforgeeks.org/problems/subset-with-sum-divisible-by-m2546/1',2,2),(4961,'Last modified ball','https://www.geeksforgeeks.org/problems/last-modified-ball--170645/1',1,2),(4962,'Knight in Geekland','https://www.geeksforgeeks.org/problems/knight-in-geekland--170647/1',2,2),(4963,'Maximize The Array','https://www.geeksforgeeks.org/problems/maximize-the-array3340/1',2,2),(4964,'C++ Operators (Relational) | Set 2','https://www.geeksforgeeks.org/problems/c-operators-relational-set-21407/1',4,2),(4965,'Prefix to Postfix Conversion','https://www.geeksforgeeks.org/problems/prefix-to-postfix-conversion/1',2,2),(4966,'Anagrams in Linked List','https://www.geeksforgeeks.org/problems/find-anagrams-in-linked-list--170647/1',2,2),(4967,'Subtree In N-ary Tree','https://www.geeksforgeeks.org/problems/subtree-in-n-ary-tree--170647/1',2,2),(4968,'Smallest number with sum of digits as N and divisible by 10^N','https://www.geeksforgeeks.org/problems/smallest-number-with-sum-of-digits-as-n-and-divisible-by-10n4032/1',1,2),(4969,'Nodes at Odd Levels','https://www.geeksforgeeks.org/problems/nodes-at-odd-levels/1',1,2),(4970,'Sum of GP','https://www.geeksforgeeks.org/problems/sum-of-gp2120/1',4,2),(4971,'Next higher palindromic number using the same set of digits','https://www.geeksforgeeks.org/problems/next-higher-palindromic-number-using-the-same-set-of-digits5859/1',2,2),(4972,'Surface Area and Volume of Cuboid','https://www.geeksforgeeks.org/problems/surface-area-and-volume-of-cuboid0522/1',4,2),(4973,'Subarrays with given sum','https://www.geeksforgeeks.org/problems/subarray-range-with-given-sum2804/1',1,2),(4974,'Count the Specials - Java','https://www.geeksforgeeks.org/problems/count-the-specials-java/1',1,2),(4975,'Pattern 20','https://www.geeksforgeeks.org/problems/double-triangle-pattern-1662287416/1',1,2),(4976,'Count number of elements between two given elements in array','https://www.geeksforgeeks.org/problems/count-number-of-elements-between-two-given-elements-in-array4044/1',4,2),(4977,'The Penalty Shootout','https://www.geeksforgeeks.org/problems/the-penalty-shootout3810/1',4,2),(4978,'Remainder with 7','https://www.geeksforgeeks.org/problems/remainder-with-7/1',4,2),(4979,'Back to Front','https://www.geeksforgeeks.org/problems/back-to-front/1',1,2),(4980,'Max min Height','https://www.geeksforgeeks.org/problems/max-min-height--170647/1',3,2),(4981,'Covid Spread','https://www.geeksforgeeks.org/problems/covid-spread--141631/1',2,2),(4982,'Java Operators(Relational) | Set - 2','https://www.geeksforgeeks.org/problems/java-operatorsrelational-set-22338/1',4,2),(4983,'Avoid Explosion','https://www.geeksforgeeks.org/problems/avoid-explosion--170647/1',3,2),(4984,'Extreme nodes in alternate order','https://www.geeksforgeeks.org/problems/extreme-nodes-in-alternate-order/1',2,2),(4985,'Last index of a character in the string','https://www.geeksforgeeks.org/problems/last-index-of-a-character-in-the-string4516/1',4,2),(4986,'Stack Operations','https://www.geeksforgeeks.org/problems/stacks-operations/1',1,2),(4987,'Java loops | Set 1','https://www.geeksforgeeks.org/problems/java-loops-set-11726/1',4,2),(4988,'Pairs which are Divisible by 4','https://www.geeksforgeeks.org/problems/pairs-which-are-divisible-by-41920/1',1,2),(4989,'Sums of i-th row and i-th column','https://www.geeksforgeeks.org/problems/sums-of-i-th-row-and-i-th-column3054/1',4,2),(4990,'Postfix to Prefix Conversion','https://www.geeksforgeeks.org/problems/postfix-to-prefix-conversion/1',2,2),(4991,'Perfect Binary Tree','https://www.geeksforgeeks.org/problems/perfect-binary-tree/1',1,2),(4992,'Geeks Island','https://www.geeksforgeeks.org/problems/geeks-island--170646/1',2,2),(4993,'Sum of Leaf Nodes at Min Level','https://www.geeksforgeeks.org/problems/sum-of-leaf-nodes-at-min-level/1',1,2),(4994,'Minimum operations to convert array A to B','https://www.geeksforgeeks.org/problems/minimum-insertions-to-make-two-arrays-equal/1',3,2),(4995,'Maximum Stone Removal','https://www.geeksforgeeks.org/problems/maximum-stone-removal-1662179442/1',2,2),(4996,'Wine Buying and Selling','https://www.geeksforgeeks.org/problems/wine-buying-and-selling/1',2,2),(4997,'Encrypt the string - 1','https://www.geeksforgeeks.org/problems/encrypt-the-string-10337/1',4,2),(4998,'Maximum Bipartite Matching','https://www.geeksforgeeks.org/problems/maximum-bipartite-matching--170646/1',2,2),(4999,'Count occurrences of a given word in a 2-d array','https://www.geeksforgeeks.org/problems/count-occurences-of-a-given-word-in-a-2-d-array/1',3,2),(5000,'Partition a Linked List around a given value','https://www.geeksforgeeks.org/problems/partition-a-linked-list-around-a-given-value/1',2,2),(5001,'Power Of 2 and Subsequences','https://www.geeksforgeeks.org/problems/power-of-2-and-subsequences0759/1',2,2),(5002,'Split Strings','https://www.geeksforgeeks.org/problems/split-strings5211/1',4,2),(5003,'Repeated String Match','https://www.geeksforgeeks.org/problems/repeated-string-match--141631/1',2,2),(5004,'Smallest Absolute Difference','https://www.geeksforgeeks.org/problems/smallest-absolute-difference4320/1',2,2),(5005,'Maximum number of 2X2 squares','https://www.geeksforgeeks.org/problems/maximum-number-of-22-squares/1',1,2),(5006,'Middle Pattern','https://www.geeksforgeeks.org/problems/middle-pattern/1',4,2),(5007,'Maximum GCD of siblings of a binary tree','https://www.geeksforgeeks.org/problems/maximum-gcd-of-siblings-of-a-binary-tree/1',2,2),(5008,'Encrypt the string - 2','https://www.geeksforgeeks.org/problems/encrypt-the-string-21117/1',1,2),(5009,'Nth Even Fibonacci Number','https://www.geeksforgeeks.org/problems/nth-even-fibonacci-number1119/1',4,2),(5010,'Sum of Right Leaf Nodes','https://www.geeksforgeeks.org/problems/sum-of-right-leaf-nodes/1',1,2),(5011,'Even and odd elements at even and odd positions','https://www.geeksforgeeks.org/problems/even-and-odd-elements-at-even-and-odd-positions1342/1',1,2),(5012,'Consonants and Vowels check','https://www.geeksforgeeks.org/problems/consonants-and-vowels-check/1',1,2),(5013,'Reverse a sublist of a linked list','https://www.geeksforgeeks.org/problems/reverse-a-sublist-of-a-linked-list/1',3,2),(5014,'Learning Structs','https://www.geeksforgeeks.org/problems/learning-structs/1',1,2),(5015,'Pattern 17','https://www.geeksforgeeks.org/problems/triangle-pattern-1662285911/1',1,2),(5016,'Select Nodes','https://www.geeksforgeeks.org/problems/select-nodes--170645/1',3,2),(5017,'Power of Pow | Odd Numbers','https://www.geeksforgeeks.org/problems/power-of-pow-odd-numbers1103/1',4,2),(5018,'Shortest Unique prefix for every word','https://www.geeksforgeeks.org/problems/shortest-unique-prefix-for-every-word/1',3,2),(5019,'Sum of f(a[i], a[j]) over all pairs in an array of n integers','https://www.geeksforgeeks.org/problems/sum-of-fai-aj-over-all-pairs-in-an-array-of-n-integers4057/1',1,2),(5020,'Squares in a Matrix','https://www.geeksforgeeks.org/problems/squares-in-a-matrix5716/1',4,2),(5021,'Final Destination','https://www.geeksforgeeks.org/problems/final-destination4628/1',1,2),(5022,'The Bit Game','https://www.geeksforgeeks.org/problems/the-bit-game2313/1',1,2),(5023,'Best Node','https://www.geeksforgeeks.org/problems/best-node--170647/1',2,2),(5024,'Merging two unsorted arrays in sorted order','https://www.geeksforgeeks.org/problems/merging-two-unsorted-arrays-in-sorted-order1020/1',1,2),(5025,'Pattern 19','https://www.geeksforgeeks.org/problems/double-triangle-pattern/1',1,2),(5026,'Nth item through sum','https://www.geeksforgeeks.org/problems/nth-item-through-sum3544/1',1,2),(5027,'Convert Min Heap to Max Heap','https://www.geeksforgeeks.org/problems/convert-min-heap-to-max-heap-1666385109/1',2,2),(5028,'Count the Substring','https://www.geeksforgeeks.org/problems/count-the-substring--170645/1',3,2),(5029,'Transform the array','https://www.geeksforgeeks.org/problems/transform-the-array4344/1',1,2),(5030,'Reverse Spiral Form of Matrix','https://www.geeksforgeeks.org/problems/reverse-spiral-form-of-matrix4033/1',2,2),(5031,'Minimum times A has to be repeated such that B is a substring of it','https://www.geeksforgeeks.org/problems/minimum-times-a-has-to-be-repeated-such-that-b-is-a-substring-of-it--170631/1',2,2),(5032,'Maximum Sub-String after at most K changes','https://www.geeksforgeeks.org/problems/maximum-sub-string-after-at-most-k-changes3220/1',2,2),(5033,'Water Collection','https://www.geeksforgeeks.org/problems/amount-of-water1348/1',2,2),(5034,'Fact Digit Sum','https://www.geeksforgeeks.org/problems/fact-digit-sum4125/1',2,2),(5035,'Almost Equal','https://www.geeksforgeeks.org/problems/almost-equal/1',1,2),(5036,'Arya\'s Long String','https://www.geeksforgeeks.org/problems/aryas-long-string5840/1',1,2),(5037,'The problem of identical arrays','https://www.geeksforgeeks.org/problems/the-problem-of-identical-arrays3229/1',4,2),(5038,'Geek and Strings','https://www.geeksforgeeks.org/problems/geek-and-strings3030/1',2,2),(5039,'Addition of submatrix','https://www.geeksforgeeks.org/problems/addition-of-submatrix5835/1',1,2),(5040,'Java Override','https://www.geeksforgeeks.org/problems/java-override/1',4,2),(5041,'Rat Maze With Multiple Jumps','https://www.geeksforgeeks.org/problems/rat-maze-with-multiple-jumps3852/1',2,2),(5042,'Length of longest subarray','https://www.geeksforgeeks.org/problems/length-of-longest-subarray0440/1',1,2),(5043,'Check if the number is Fibonacci','https://www.geeksforgeeks.org/problems/check-if-the-number-is-fibonacci4654/1',4,2),(5044,'String Functions I - Python','https://www.geeksforgeeks.org/problems/string-functions-i/1',1,2),(5045,'Minimize string value','https://www.geeksforgeeks.org/problems/minimize-string-value1010/1',4,2),(5046,'Maximum Profit By Choosing A Subset Of Intervals','https://www.geeksforgeeks.org/problems/maximum-profit-by-choosing-a-subset-of-intervals--170645/1',2,2),(5047,'Largest odd number in string','https://www.geeksforgeeks.org/problems/largest-odd-number-in-string/1',1,2),(5048,'C++ Generic sort','https://www.geeksforgeeks.org/problems/c-generic-sort/1',2,2),(5049,'Length of Last word','https://www.geeksforgeeks.org/problems/length-of-last-word5721/1',4,2),(5050,'Extract the integers','https://www.geeksforgeeks.org/problems/extract-the-integers4428/1',4,2),(5051,'Power of Four','https://www.geeksforgeeks.org/problems/power-of-four/1',4,2),(5052,'Rearrange the array','https://www.geeksforgeeks.org/problems/rearrange-the-array5802/1',1,2),(5053,'Satisfy the equation','https://www.geeksforgeeks.org/problems/satisfy-the-equation5847/1',2,2),(5054,'Reverse alternate levels of a perfect binary tree','https://www.geeksforgeeks.org/problems/reverse-alternate-levels-of-a-perfect-binary-tree/1',2,2),(5055,'Print Nodes having K leaves','https://www.geeksforgeeks.org/problems/print-nodes-having-k-leaves/1',2,2),(5056,'Minimum days to make M bouquets','https://www.geeksforgeeks.org/problems/minimum-days-to-make-m-bouquets/1',2,2),(5057,'Sum of Query II','https://www.geeksforgeeks.org/problems/sum-of-query-ii5310/1',2,2),(5058,'Help a Thief!!!','https://www.geeksforgeeks.org/problems/help-a-thief5938/1',2,2),(5059,'Unique Numbers','https://www.geeksforgeeks.org/problems/unique-numbers3019/1',4,2),(5060,'1s Complement','https://www.geeksforgeeks.org/problems/1s-complement2819/1',4,2),(5061,'Burst Balloons','https://www.geeksforgeeks.org/problems/burst-balloons/1',3,2),(5062,'Max value','https://www.geeksforgeeks.org/problems/max-value1205/1',1,2),(5063,'Filling Bucket','https://www.geeksforgeeks.org/problems/filling-bucket0529/1',2,2),(5064,'Merge Lists Alternatingly','https://www.geeksforgeeks.org/problems/merge-list-alternatingly/1',1,2),(5065,'Concatenation of Zig-Zag String in n Rows','https://www.geeksforgeeks.org/problems/concatenation-of-zig-zag-string-in-n-rows0308/1',2,2),(5066,'A Game of LCM','https://www.geeksforgeeks.org/problems/a-game-of-lcm2531/1',2,2),(5067,'Enemy','https://www.geeksforgeeks.org/problems/enemy/1',2,2),(5068,'Three distinct factors','https://www.geeksforgeeks.org/problems/three-distinct-factors5613/1',4,2),(5069,'Nine Divisors','https://www.geeksforgeeks.org/problems/nine-divisors3751/1',2,2),(5070,'Maximum number of events that can be attended','https://www.geeksforgeeks.org/problems/maximum-number-of-events-that-can-be-attended--170636/1',2,2),(5071,'GCD Array','https://www.geeksforgeeks.org/problems/gcd-array--170645/1',2,2),(5072,'Pattern searching','https://www.geeksforgeeks.org/problems/pattern-searching5231/1',1,2),(5073,'Inverse Permutation','https://www.geeksforgeeks.org/problems/inverse-permutation0344/1',1,2),(5074,'Modified Numbers and Queries','https://www.geeksforgeeks.org/problems/modified-numbers-and-queries0904/1',1,2),(5075,'The Smurfs','https://www.geeksforgeeks.org/problems/the-smurfs4201/1',2,2),(5076,'QuickSort on Doubly Linked List','https://www.geeksforgeeks.org/problems/quicksort-on-doubly-linked-list/1',2,2),(5077,'Construct BST from Postorder','https://www.geeksforgeeks.org/problems/construct-bst-from-post-order/1',1,2),(5078,'Midori and chocolates','https://www.geeksforgeeks.org/problems/midori-and-chocolates2438/1',1,2),(5079,'The Pattern Matcher','https://www.geeksforgeeks.org/problems/the-pattern-matcher/1',1,2),(5080,'Java Operators(Arithmetic) | Set 1','https://www.geeksforgeeks.org/problems/java-operatorsarithmetic-set-12417/1',4,2),(5081,'Word with maximum frequency','https://www.geeksforgeeks.org/problems/word-with-maximum-frequency0120/1',1,2),(5082,'Count Lucky Permutations','https://www.geeksforgeeks.org/problems/count-lucky-permutations--170645/1',3,2),(5083,'Minimum steps to minimize n as per given condition','https://www.geeksforgeeks.org/problems/minimum-steps-to-minimize-n-as-per-given-condition0618/1',1,2),(5084,'Form largest number from digits','https://www.geeksforgeeks.org/problems/form-largest-number-from-digits5430/1',1,2),(5085,'Pair Sum in Vector','https://www.geeksforgeeks.org/problems/pair-sum-in-vector/1',1,2),(5086,'BST to greater sum tree','https://www.geeksforgeeks.org/problems/bst-to-greater-sum-tree/1',2,2),(5087,'Shreyansh and his bits','https://www.geeksforgeeks.org/problems/shreyansh-and-his-bits1420/1',2,2),(5088,'Floyd\'s triangle','https://www.geeksforgeeks.org/problems/floyds-triangle1222/1',4,2),(5089,'Grid Path 2','https://www.geeksforgeeks.org/problems/grid-path-2/1',2,2),(5090,'Maximum average subarray','https://www.geeksforgeeks.org/problems/maximum-average-subarray5859/1',1,2),(5091,'BigInteger Multiply','https://www.geeksforgeeks.org/problems/biginteger-multiply/1',1,2),(5092,'Reaching the heights','https://www.geeksforgeeks.org/problems/reaching-the-heights1921/1',2,2),(5093,'Sum of product of x and y with floor(n/x) = y','https://www.geeksforgeeks.org/problems/sum-of-product-of-x-and-y-with-floornx-y3711/1',4,2),(5094,'Matrix Exponentiation','https://www.geeksforgeeks.org/problems/matrix-exponentiation2711/1',2,2),(5095,'Longest Increasing Subarray','https://www.geeksforgeeks.org/problems/longest-increasing-subarray3811/1',4,2),(5096,'Shortest Prime Path','https://www.geeksforgeeks.org/problems/shortest-prime-path--170645/1',2,2),(5097,'Check Arithmetic Progression','https://www.geeksforgeeks.org/problems/check-arithmetic-progression1842/1',4,2),(5098,'Index of the First Occurrence of pattern in a text','https://www.geeksforgeeks.org/problems/index-of-the-first-occurrence-of-pattern-in-a-text/1',2,2),(5099,'Rearrange Geek and his Classmates','https://www.geeksforgeeks.org/problems/rearrange-geek-and-his-classmates--141630/1',1,2),(5100,'Grouping Of Numbers','https://www.geeksforgeeks.org/problems/grouping-of-numbers0015/1',2,2),(5101,'Automorphic Number','https://www.geeksforgeeks.org/problems/automorphic-number4721/1',4,2),(5102,'Longest Possible Route in a Matrix with Hurdles','https://www.geeksforgeeks.org/problems/longest-possible-route-in-a-matrix-with-hurdles/1',2,2),(5103,'Count Full Binary Trees','https://www.geeksforgeeks.org/problems/count-the-number-of-full-binary-trees2525/1',2,2),(5104,'Mega Sale','https://www.geeksforgeeks.org/problems/mega-sale1431/1',4,2),(5105,'Sum of Big Integers','https://www.geeksforgeeks.org/problems/sum-of-big-integers/1',1,2),(5106,'Ball coloring','https://www.geeksforgeeks.org/problems/ball-coloring3450/1',1,2),(5107,'Number of factors','https://www.geeksforgeeks.org/problems/number-of-factors1435/1',1,2),(5108,'Closing bracket index','https://www.geeksforgeeks.org/problems/closing-bracket-index5900/1',1,2),(5109,'Nodes at even distance','https://www.geeksforgeeks.org/problems/nodes-at-even-distance0532/1',2,2),(5110,'Delete array elements which are smaller than next or become smaller','https://www.geeksforgeeks.org/problems/delete-array-elements-which-are-smaller-than-next-or-become-smaller3115/1',1,2),(5111,'Unique partitions','https://www.geeksforgeeks.org/problems/unique-partitions1041/1',2,2),(5112,'Longest common prefix','https://www.geeksforgeeks.org/problems/minimum-shift-for-longest-common-prefix0759/1',1,2),(5113,'String Reversal','https://www.geeksforgeeks.org/problems/string-reversalunpublished-for-now5324/1',4,2),(5114,'Alex Travelling','https://www.geeksforgeeks.org/problems/alex-travelling/1',2,2),(5115,'Check if there exists a subsequence with sum K','https://www.geeksforgeeks.org/problems/check-if-there-exists-a-subsequence-with-sum-k/1',2,2),(5116,'Generate all binary strings','https://www.geeksforgeeks.org/problems/generate-all-binary-strings/1',2,2),(5117,'Triangular Number','https://www.geeksforgeeks.org/problems/triangular-number2850/1',1,2),(5118,'Repeat the Strings - Python','https://www.geeksforgeeks.org/problems/repeat-the-strings/1',1,2),(5119,'Ways to sum to N','https://www.geeksforgeeks.org/problems/ways-to-sum-to-n5759/1',2,2),(5120,'K-Palindrome','https://www.geeksforgeeks.org/problems/k-palindrome/1',1,2),(5121,'Count of distinct substrings','https://www.geeksforgeeks.org/problems/count-of-distinct-substrings/1',2,2),(5122,'Fibonacci to N','https://www.geeksforgeeks.org/problems/fibonacci-to-n0811/1',4,2),(5123,'Sum Array Puzzle','https://www.geeksforgeeks.org/problems/sum-array-puzzle/1',4,2),(5124,'String comparison','https://www.geeksforgeeks.org/problems/string-comparison5858/1',1,2),(5125,'Find the Number which contain the digit d','https://www.geeksforgeeks.org/problems/find-the-number-which-contain-the-digit-d4144/1',4,2),(5126,'Make a Distinct Digit Array','https://www.geeksforgeeks.org/problems/make-a-distinct-digit-array2007/1',4,2),(5127,'Duplicate Elements','https://www.geeksforgeeks.org/problems/duplicate-elements/1',1,2),(5128,'Drive the car','https://www.geeksforgeeks.org/problems/drive-the-car2541/1',1,2),(5129,'Minimum Exchange','https://www.geeksforgeeks.org/problems/distributing-question-papers2513/1',1,2),(5130,'Dam of Candies','https://www.geeksforgeeks.org/problems/dam-of-candies--141631/1',2,2),(5131,'Cousins of a given node','https://www.geeksforgeeks.org/problems/cousins-of-a-given-node/1',2,2),(5132,'Pattern Jumping','https://www.geeksforgeeks.org/problems/pattern-jumping4855/1',4,2),(5133,'Find N-th term in the series','https://www.geeksforgeeks.org/problems/find-n-th-term-in-the-series3926/1',4,2),(5134,'Triangle shrinking downwards','https://www.geeksforgeeks.org/problems/triangle-shrinking-downwards0459/1',4,2),(5135,'Maximum length Bitonic Subarray','https://www.geeksforgeeks.org/problems/maximum-length-bitonic-subarray5730/1',2,2),(5136,'Sum of an AP','https://www.geeksforgeeks.org/problems/sum-of-an-ap1025/1',4,2),(5137,'Pangram Strings','https://www.geeksforgeeks.org/problems/pangram-strings3155/1',1,2),(5138,'Even Odd Sum','https://www.geeksforgeeks.org/problems/even-odd-sum5450/1',4,2),(5139,'Distinct absolute array elements','https://www.geeksforgeeks.org/problems/distinct-absolute-array-elements4529/1',1,2),(5140,'Punish the Students','https://www.geeksforgeeks.org/problems/punish-the-students5726/1',1,2),(5141,'Count numbers with given sum','https://www.geeksforgeeks.org/problems/count-of-n-digit-numbers-whose-sum-of-digits-equals-to-given-sum0733/1',2,2),(5142,'Pairs of prime number','https://www.geeksforgeeks.org/problems/pairs-of-prime-number2612/1',4,2),(5143,'Assignment Problem','https://www.geeksforgeeks.org/problems/assignment-problem3016/1',3,2),(5144,'Identical Matrices','https://www.geeksforgeeks.org/problems/identical-matrices1042/1',4,2),(5145,'Excel Sheet | Part - 2','https://www.geeksforgeeks.org/problems/excel-sheet-part-21138/1',1,2),(5146,'Base Equivalence','https://www.geeksforgeeks.org/problems/base-equivalence1022/1',2,2),(5147,'Anagram Strings','https://www.geeksforgeeks.org/problems/java-anagram-strings3549/1',4,2),(5148,'Substrings with same first and last characters','https://www.geeksforgeeks.org/problems/substrings-with-similar-first-and-last-characters3644/1',4,2),(5149,'Killing Spree','https://www.geeksforgeeks.org/problems/killing-spree3020/1',2,2),(5150,'Searching an element in a sorted array (Ternary Search)','https://www.geeksforgeeks.org/problems/searching-an-element-in-a-sorted-array-ternary-search--141631/1',2,2),(5151,'Diagonal sum','https://www.geeksforgeeks.org/problems/diagonal-sum0158/1',4,2),(5152,'Difference between highest and lowest occurrence','https://www.geeksforgeeks.org/problems/difference-between-highest-and-lowest-occurrence4613/1',4,2),(5153,'Change Bits','https://www.geeksforgeeks.org/problems/change-bits1538/1',1,2),(5154,'C++ Call by reference','https://www.geeksforgeeks.org/problems/c-call-by-reference/1',4,2),(5155,'Count Alphabets','https://www.geeksforgeeks.org/problems/count-alphabets3649/1',1,2),(5156,'Check perfect square','https://www.geeksforgeeks.org/problems/check-perfect-square5253/1',4,2),(5157,'Min Cost Climbing Stairs','https://www.geeksforgeeks.org/problems/min-cost-climbing-stairs/1',1,2),(5158,'Player with max score','https://www.geeksforgeeks.org/problems/player-with-max-score/1',2,2),(5159,'Dictionary in Python - II','https://www.geeksforgeeks.org/problems/dictionary-in-python-ii/1',1,2),(5160,'Check if divisible by 11','https://www.geeksforgeeks.org/problems/check-if-divisible-by-114724/1',4,2),(5161,'Difference series','https://www.geeksforgeeks.org/problems/difference-series4345/1',4,2),(5162,'Last duplicate element in a sorted array','https://www.geeksforgeeks.org/problems/last-duplicate-element-in-a-sorted-array5539/1',4,2),(5163,'Maximum triplet sum in array','https://www.geeksforgeeks.org/problems/maximum-triplet-sum-in-array0129/1',4,2),(5164,'Minimum changes to make all substrings distinct','https://www.geeksforgeeks.org/problems/minimum-changes-to-make-all-substrings-distinct4722/1',1,2),(5165,'Doctors Clinic','https://www.geeksforgeeks.org/problems/doctors-clinic0431/1',4,2),(5166,'Jay\'s Apples','https://www.geeksforgeeks.org/problems/jays-apples2724/1',4,2),(5167,'Count the number of subarrays','https://www.geeksforgeeks.org/problems/count-the-number-of-subarrays/1',3,2),(5168,'Possible groups','https://www.geeksforgeeks.org/problems/possible-groups2013/1',2,2),(5169,'Regular Expressions 2 - Python','https://www.geeksforgeeks.org/problems/regular-expressions-2-python/1',1,2),(5170,'Count Primes In Range','https://www.geeksforgeeks.org/problems/count-primes-in-range1604/1',1,2),(5171,'Area of Rectangle,  Right Angled Triangle and Circle','https://www.geeksforgeeks.org/problems/area-of-rectange-right-angled-triangle-and-circle2600/1',4,2),(5172,'Sum of Lengths of Non-Overlapping SubArrays','https://www.geeksforgeeks.org/problems/sum-of-lengths-of-non-overlapping-subarrays2237/1',1,2),(5173,'Queries on a Matrix','https://www.geeksforgeeks.org/problems/queries-on-a-matrix0443/1',2,2),(5174,'Rotate String','https://www.geeksforgeeks.org/problems/lazy-pasha1646/1',2,2),(5175,'Occurences of 2 as a digit','https://www.geeksforgeeks.org/problems/occurences-of-2-as-a-digit/1',2,2),(5176,'Count the number of ways to tile the floor of size n x m using 1 x m size tiles','https://www.geeksforgeeks.org/problems/count-the-number-of-ways-to-tile-the-floor-of-size-n-x-m-using-1-x-m-size-tiles0509/1',2,2),(5177,'Equal 0, 1 and 2','https://www.geeksforgeeks.org/problems/equal-0-1-and-23208/1',2,2),(5178,'Word Break (Trie)','https://www.geeksforgeeks.org/problems/word-break-trie--141631/1',3,2),(5179,'N Digit numbers with digits in increasing order','https://www.geeksforgeeks.org/problems/n-digit-numbers-with-digits-in-increasing-order5903/1',2,2),(5180,'Longest Span in two Binary Arrays','https://www.geeksforgeeks.org/problems/longest-span-with-same-sum-in-two-binary-arrays5142/1',2,2),(5181,'Addition of two square matrices','https://www.geeksforgeeks.org/problems/addition-of-two-square-matrices4916/1',4,2),(5182,'Twisted Prime Number','https://www.geeksforgeeks.org/problems/twisted-prime-number0500/1',1,2),(5183,'Minimum X (xor) A','https://www.geeksforgeeks.org/problems/x-xor-a-is-minimum-and-set-bits-in-x-b/1',3,2),(5184,'Sorting Employees','https://www.geeksforgeeks.org/problems/sorting-employees5907/1',1,2),(5185,'Equivalent Sub-Arrays','https://www.geeksforgeeks.org/problems/equivalent-sub-arrays3731/1',2,2),(5186,'Levels Of Game','https://www.geeksforgeeks.org/problems/levels-of-game/1',2,2),(5187,'Skip the work','https://www.geeksforgeeks.org/problems/skip-the-work5752/1',2,2),(5188,'Number Game','https://www.geeksforgeeks.org/problems/number-game0303/1',1,2),(5189,'Sub-Array sum divisible by K','https://www.geeksforgeeks.org/problems/sub-array-sum-divisible-by-k2617/1',2,2),(5190,'Binary Tree K level sum','https://www.geeksforgeeks.org/problems/binary-tree-k-level-sum3857/1',1,2),(5191,'Min Subsets with Consecutive Numbers','https://www.geeksforgeeks.org/problems/min-subsets-with-consecutive-numbers0601/1',1,2),(5192,'Brain Game','https://www.geeksforgeeks.org/problems/brain-game1742/1',2,2),(5193,'Palindrome numbers','https://www.geeksforgeeks.org/problems/palindrome-numbers0942/1',1,2),(5194,'Replace the Bit','https://www.geeksforgeeks.org/problems/replace-the-bit3212/1',4,2),(5195,'Even Fibonacci Numbers Sum','https://www.geeksforgeeks.org/problems/even-fibonacci-numbers-sum1455/1',1,2),(5196,'Tricky Subset Problem','https://www.geeksforgeeks.org/problems/tricky-subset-problem1557/1',2,2),(5197,'Pattern 22','https://www.geeksforgeeks.org/problems/square-pattern-1662666141/1',1,2),(5198,'Huffman Decoding','https://www.geeksforgeeks.org/problems/huffman-decoding/1',3,2),(5199,'Check Tree Traversal','https://www.geeksforgeeks.org/problems/check-tree-traversal--141628/1',3,2),(5200,'BigInteger mod','https://www.geeksforgeeks.org/problems/biginteger-mod/1',1,2),(5201,'Maximum Sum Bitonic Subsequence','https://www.geeksforgeeks.org/problems/maximum-sum-bitonic-subsequence1857/1',1,2),(5202,'Previous number in one swap','https://www.geeksforgeeks.org/problems/previous-number-in-one-swap5707/1',2,2),(5203,'Swap the objects','https://www.geeksforgeeks.org/problems/swap-the-objects/1',1,2),(5204,'Number of subsets with product less than k','https://www.geeksforgeeks.org/problems/number-of-subsets-with-product-less-than-k/1',3,2),(5205,'Firing employees','https://www.geeksforgeeks.org/problems/firing-employees5306/1',2,2),(5206,'Closest Similar Elements','https://www.geeksforgeeks.org/problems/water-the-plants--141631/1',2,2),(5207,'Maximum sum of subarray less than or equal to x','https://www.geeksforgeeks.org/problems/maximum-sum-of-subarray-less-than-or-equal-to-x4033/1',1,2),(5208,'Roll the characters of a String','https://www.geeksforgeeks.org/problems/roll-the-characters-of-a-string2127/1',2,2),(5209,'The Lazy Caterer\'s Problem','https://www.geeksforgeeks.org/problems/the-lazy-caterers-problem2527/1',4,2),(5210,'Perfect Squares in a Range','https://www.geeksforgeeks.org/problems/perfect-squares-in-a-range2253/1',4,2),(5211,'Tilt of Binary Tree','https://www.geeksforgeeks.org/problems/tilt-of-binary-tree/1',1,2),(5212,'Farthest number','https://www.geeksforgeeks.org/problems/farthest-number--170636/1',2,2),(5213,'Find difference between sum of diagonals','https://www.geeksforgeeks.org/problems/find-difference-between-sum-of-diagonals1554/1',4,2),(5214,'Magnet Array Problem','https://www.geeksforgeeks.org/problems/magnet-array-problem3743/1',2,2),(5215,'Check if a number can be expressed as x^y','https://www.geeksforgeeks.org/problems/check-if-a-number-can-be-expressed-as-xy1606/1',4,2),(5216,'Regex - Python','https://www.geeksforgeeks.org/problems/regex-python/1',4,2),(5217,'Convex Hull','https://www.geeksforgeeks.org/problems/convex-hull2138/1',3,2),(5218,'Triplets in Sorted Linked List','https://www.geeksforgeeks.org/problems/count-triplets--141631/1',2,2),(5219,'nCr mod M | Part 1','https://www.geeksforgeeks.org/problems/ncr-mod-m-part-10038/1',3,2),(5220,'Maximum Area Rectangle','https://www.geeksforgeeks.org/problems/maximum-area-rectangle/1',1,2),(5221,'Height of Spiral Tree','https://www.geeksforgeeks.org/problems/height-of-spiral-tree/1',1,2),(5222,'Divisible by 8','https://www.geeksforgeeks.org/problems/divisible-by-82732/1',1,2),(5223,'Rotate a Matrix by 180 Counterclockwise','https://www.geeksforgeeks.org/problems/c-matrix-rotation-by-180-degree0745/1',1,2),(5224,'Generate binary string','https://www.geeksforgeeks.org/problems/generate-binary-string3642/1',1,2),(5225,'Subarray with least average','https://www.geeksforgeeks.org/problems/subarray-with-least-average5031/1',1,2),(5226,'C++ STL | Set 5 (queue)','https://www.geeksforgeeks.org/problems/c-stl-set-5-queue/1',4,2),(5227,'Check if  given four points form a square','https://www.geeksforgeeks.org/problems/check-if-given-four-points-form-a-square3026/1',4,2),(5228,'Snake Case','https://www.geeksforgeeks.org/problems/snake-case0219/1',4,2),(5229,'Java Collection | Set 1 (ArrayList) Part-1','https://www.geeksforgeeks.org/problems/java-arraylist5312/1',4,2),(5230,'Probability of Knight','https://www.geeksforgeeks.org/problems/probability-of-knight5529/1',2,2),(5231,'Prime String','https://www.geeksforgeeks.org/problems/prime-string3953/1',1,2),(5232,'Toppers Of Class','https://www.geeksforgeeks.org/problems/toppers-of-class3826/1',1,2),(5233,'Smallest number repeating K times','https://www.geeksforgeeks.org/problems/smallest-number-repeating-k-times3239/1',4,2),(5234,'Implementation of Priority Queue using Binary Heap','https://www.geeksforgeeks.org/problems/implementation-of-priority-queue-using-binary-heap/1',1,2),(5235,'Amend The Sentence','https://www.geeksforgeeks.org/problems/amend-the-sentence3235/1',1,2),(5236,'Day of the week','https://www.geeksforgeeks.org/problems/day-of-the-week1637/1',1,2),(5237,'Adventure in a Maze','https://www.geeksforgeeks.org/problems/adventure-in-a-maze2051/1',3,2),(5238,'C++ STL | Set 3 (map)','https://www.geeksforgeeks.org/problems/c-stl-set-3-map/1',4,2),(5239,'Minimum product pair','https://www.geeksforgeeks.org/problems/minimum-product-pair3608/1',1,2),(5240,'Clone a stack without using extra space','https://www.geeksforgeeks.org/problems/clone-a-stack-without-usinig-extra-space/1',2,2),(5241,'Common Subsequence','https://www.geeksforgeeks.org/problems/common-subsequence4049/1',1,2),(5242,'Front-Back Transformation - copy','https://www.geeksforgeeks.org/problems/front-back-transformation1659/1',4,2),(5243,'Remove leading zeros from an IP address','https://www.geeksforgeeks.org/problems/remove-leading-zeros-from-an-ip-address3530/1',2,2),(5244,'Map Operations','https://www.geeksforgeeks.org/problems/map-operations/1',4,2),(5245,'Earthquake and the Paint Shop','https://www.geeksforgeeks.org/problems/earthquake-and-the-paint-shop4518/1',1,2),(5246,'Longest Path in a matrix','https://www.geeksforgeeks.org/problems/longest-path-in-a-matrix3019/1',3,2),(5247,'Digits in a set','https://www.geeksforgeeks.org/problems/count-the-numbers2359/1',1,2),(5248,'Search Pattern (Z-algorithm)','https://www.geeksforgeeks.org/problems/search-pattern-z-algorithm--141631/1',2,2),(5249,'Dictionary in Python - III','https://www.geeksforgeeks.org/problems/dictionary-in-python-iii/1',1,2),(5250,'Rock Paper Scissors!','https://www.geeksforgeeks.org/problems/rock-paper-scissors2830/1',4,2),(5251,'2D Hopscotch','https://www.geeksforgeeks.org/problems/hopscotch4857/1',2,2),(5252,'Operations on PriorityQueue','https://www.geeksforgeeks.org/problems/operations-on-priorityqueue/1',1,2),(5253,'Sort the given array after applying the given equation','https://www.geeksforgeeks.org/problems/sort-the-given-array-after-applying-the-given-equation0304/1',1,2),(5254,'Even Greater than Odd','https://www.geeksforgeeks.org/problems/rearrange-array-such-that-even-positioned-are-greater-than-odd4804/1',1,2),(5255,'First Come First Serve','https://www.geeksforgeeks.org/problems/first-come-first-serve1328/1',1,2),(5256,'Last two digit Fibonacci','https://www.geeksforgeeks.org/problems/last-two-digit-fibonacci3353/1',1,2),(5257,'Eulerian Path in an Undirected Graph','https://www.geeksforgeeks.org/problems/eulerian-path-in-an-undirected-graph5052/1',2,2),(5258,'Change all even bits in a number to 0','https://www.geeksforgeeks.org/problems/change-all-even-bits-in-a-number-to-03253/1',4,2),(5259,'Print Binary Tree levels in sorted order','https://www.geeksforgeeks.org/problems/print-binary-tree-levels-in-sorted-order3241/1',2,2),(5260,'12 hour clock subtraction','https://www.geeksforgeeks.org/problems/12-hour-clock-subtraction1708/1',4,2),(5261,'Min Swaps to Group 1s','https://www.geeksforgeeks.org/problems/minimum-swaps-required-to-group-all-1s-together2451/1',2,2),(5262,'Merge and Sort','https://www.geeksforgeeks.org/problems/merge-and-sort5821/1',4,2),(5263,'Average Count Array','https://www.geeksforgeeks.org/problems/average-count-array2215/1',4,2),(5264,'Message Spreading','https://www.geeksforgeeks.org/problems/message-spreading4258/1',4,2),(5265,'Difficulty of sentence','https://www.geeksforgeeks.org/problems/difficulty-of-sentence5856/1',1,2),(5266,'Adding One','https://www.geeksforgeeks.org/problems/adding-one2529/1',1,2),(5267,'Mind Game','https://www.geeksforgeeks.org/problems/mind-game3637/1',4,2),(5268,'Rank The Permutations','https://www.geeksforgeeks.org/problems/rank-the-permutations2229/1',2,2),(5269,'Java Classes Introduction','https://www.geeksforgeeks.org/problems/java-classes-introduction/1',4,2),(5270,'Count digits in a factorial','https://www.geeksforgeeks.org/problems/count-digits-in-a-factorial3957/1',1,2),(5271,'The amazing number','https://www.geeksforgeeks.org/problems/the-amazing-number0459/1',4,2),(5272,'Number of Diagonals','https://www.geeksforgeeks.org/problems/number-of-diagonals1020/1',4,2),(5273,'Same characters in two strings','https://www.geeksforgeeks.org/problems/c-corresponding-position-in-the-two-strings-that-hold-exactly-the-same-characters5013/1',1,2),(5274,'Interleave the First Half of the Queue with Second Half','https://www.geeksforgeeks.org/problems/interleave-the-first-half-of-the-queue-with-second-half/1',2,2),(5275,'Bike Racing','https://www.geeksforgeeks.org/problems/bike-racing0543/1',3,2),(5276,'Karatsuba Algorithm','https://www.geeksforgeeks.org/problems/karatsuba-algorithm0135/1',1,2),(5277,'Magic numbers','https://www.geeksforgeeks.org/problems/magic-numbers3143/1',1,2),(5278,'Subset II','https://www.geeksforgeeks.org/problems/subset-sum-ii/1',2,2),(5279,'Path of greater than equal to k length','https://www.geeksforgeeks.org/problems/path-of-greater-than-equal-to-k-length1034/1',2,2),(5280,'Missing number in shuffled array','https://www.geeksforgeeks.org/problems/missing-number-in-shuffled-array0938/1',4,2),(5281,'Maximum distinct elements after removing K elements','https://www.geeksforgeeks.org/problems/maximum-distinct-elements-after-removing-k-elements5906/1',2,2),(5282,'Set Operations','https://www.geeksforgeeks.org/problems/set-operations/1',4,2),(5283,'Mountain Subarray Problem','https://www.geeksforgeeks.org/problems/mountain-subarray-problem/1',2,2),(5284,'Strong Numbers','https://www.geeksforgeeks.org/problems/strong-numbers4336/1',4,2),(5285,'Duck Number','https://www.geeksforgeeks.org/problems/zero-number2158/1',4,2),(5286,'Minimum Energy','https://www.geeksforgeeks.org/problems/minimum-energy1107/1',1,2),(5287,'Remove minimum elements','https://www.geeksforgeeks.org/problems/remove-minimum-elements4612/1',2,2),(5288,'Fill array with 1\'s','https://www.geeksforgeeks.org/problems/fill-array-by-1s0920/1',2,2),(5289,'Strong Numbers','https://www.geeksforgeeks.org/problems/strong-numbers3315/1',4,2),(5290,'Part Sort','https://www.geeksforgeeks.org/problems/part-sort2851/1',1,2),(5291,'Articulation Point - II','https://www.geeksforgeeks.org/problems/articulation-point2616/1',3,2),(5292,'Open the gates','https://www.geeksforgeeks.org/problems/word-boggle-ii--141631/1',2,2),(5293,'Rearranging array','https://www.geeksforgeeks.org/problems/rearranging-array1648/1',4,2),(5294,'Deficient Number','https://www.geeksforgeeks.org/problems/deficient-number1612/1',1,2),(5295,'Adjacents are not allowed','https://www.geeksforgeeks.org/problems/adjacents-are-not-allowed3528/1',1,2),(5296,'Surpasser Count','https://www.geeksforgeeks.org/problems/surpasser-count0615/1',2,2),(5297,'Check perfect square','https://www.geeksforgeeks.org/problems/check-perfect-square2503/1',4,2),(5298,'Max Diff Elements and Indexes','https://www.geeksforgeeks.org/problems/maximum-value-of-difference-of-a-pair-of-elements-and-their-index/1',2,2),(5299,'Love For The Twins','https://www.geeksforgeeks.org/problems/love-for-the-twins2623/1',1,2),(5300,'Minimum number of deletions to make a sorted sequence','https://www.geeksforgeeks.org/problems/minimum-number-of-deletions-to-make-a-sorted-sequence3248/1',1,2),(5301,'Pair with greatest product in array','https://www.geeksforgeeks.org/problems/pair-with-greatest-product-in-array3342/1',1,2),(5302,'C++ Exception Handling','https://www.geeksforgeeks.org/problems/c-exception-handling3103/1',1,2),(5303,'Sum of distinct elements for a limited range','https://www.geeksforgeeks.org/problems/sum-of-distinct-elements-15115/1',1,2),(5304,'Max value after m range operation','https://www.geeksforgeeks.org/problems/max-value-after-m-range-operation4300/1',2,2),(5305,'Reverse a string with spaces intact','https://www.geeksforgeeks.org/problems/reverse-a-string-with-spaces-intact5213/1',4,2),(5306,'Does robot moves circular','https://www.geeksforgeeks.org/problems/does-robot-moves-circular0414/1',1,2),(5307,'Partition a number into two divisible parts','https://www.geeksforgeeks.org/problems/partition-a-number-into-two-divisible-parts3605/1',1,2),(5308,'Count divisors of product of array elements','https://www.geeksforgeeks.org/problems/count-divisors-of-product-of-array-elements0244/1',2,2),(5309,'Multiply two polynomials','https://www.geeksforgeeks.org/problems/multiply-two-polynomals0721/1',1,2),(5310,'Reducing Walls','https://www.geeksforgeeks.org/problems/reducing-walls4443/1',4,2),(5311,'Minimum steps to get desired array','https://www.geeksforgeeks.org/problems/minimum-steps-to-get-desired-array5519/1',2,2),(5312,'Optimal binary search tree','https://www.geeksforgeeks.org/problems/optimal-binary-search-tree2214/1',3,2),(5313,'Chocolate Station','https://www.geeksforgeeks.org/problems/chocolate-station2951/1',1,2),(5314,'Compare two Large Numbers','https://www.geeksforgeeks.org/problems/compare-two-large-numbers3413/1',4,2),(5315,'Binary Shift to Divide','https://www.geeksforgeeks.org/problems/find-out-the-team0025/1',4,2),(5316,'12 hour clock addition','https://www.geeksforgeeks.org/problems/12-hour-clock-addition1206/1',4,2),(5317,'LCP','https://www.geeksforgeeks.org/problems/lcp--170637/1',2,2),(5318,'Longest Common Increasing Subsequence','https://www.geeksforgeeks.org/problems/longest-common-increasing-subsequence1437/1',2,2),(5319,'Longest Zig-Zag Sub Sequence','https://www.geeksforgeeks.org/problems/longest-zig-zag-sub-sequence2656/1',3,2),(5320,'Find all possible paths from top to bottom','https://www.geeksforgeeks.org/problems/find-all-possible-paths-from-top-to-bottom/1',1,2),(5321,'Max Sum without Adjacents 2','https://www.geeksforgeeks.org/problems/max-sum-without-adjacents-2/1',2,2),(5322,'Fraction Trouble','https://www.geeksforgeeks.org/problems/fraction-trouble3803/1',2,2),(5323,'Find the highest occurring digit in prime numbers in a range','https://www.geeksforgeeks.org/problems/find-the-highest-occurring-digit-in-prime-numbers-in-a-range3634/1',1,2),(5324,'C++ | A Speed Breaker','https://www.geeksforgeeks.org/problems/c-a-speed-breaker5249/1',4,2),(5325,'Sort first half in ascending and second half in descending','https://www.geeksforgeeks.org/problems/sort-first-half-in-ascending-and-second-half-in-descending1714/1',4,2),(5326,'Minimum Distinct Ids','https://www.geeksforgeeks.org/problems/minimum-distinct-ids3251/1',1,2),(5327,'Sum of alternate product','https://www.geeksforgeeks.org/problems/minimize-sum-of-alternate-product2033/1',4,2),(5328,'Find maximum number','https://www.geeksforgeeks.org/problems/find-maximum-number2152/1',1,2),(5329,'Smallest Divisor','https://www.geeksforgeeks.org/problems/smallest-divisor/1',2,2),(5330,'Confused pappu','https://www.geeksforgeeks.org/problems/confused-pappu5749/1',4,2),(5331,'Check an Integer is power of 3 or not','https://www.geeksforgeeks.org/problems/check-a-integer-is-power-of-3-or-not3850/1',4,2),(5332,'Crack the series','https://www.geeksforgeeks.org/problems/crack-the-series0304/1',1,2),(5333,'Digit multiplier','https://www.geeksforgeeks.org/problems/digit-multiplier3000/1',2,2),(5334,'Sandwiched_Vowels','https://www.geeksforgeeks.org/problems/sandwiched-vowels5158/1',4,2),(5335,'K-Ary Tree','https://www.geeksforgeeks.org/problems/k-ary-tree1235/1',1,2),(5336,'Number that are not divisible','https://www.geeksforgeeks.org/problems/number-that-are-not-divisible4541/1',1,2),(5337,'Java Abstract keyword','https://www.geeksforgeeks.org/problems/java-abstract-keyword/1',4,2),(5338,'Maximum sum of increasing order elements from n arrays','https://www.geeksforgeeks.org/problems/maximum-sum-of-increasing-order-elements-from-n-arrays4848/1',1,2),(5339,'Sort the Half Sorted','https://www.geeksforgeeks.org/problems/sort-the-half-sorted2157/1',4,2),(5340,'K Smallests in the Original Order','https://www.geeksforgeeks.org/problems/print-k-smallest-elements-in-their-original-order5407/1',1,2),(5341,'C++ STL | Set 2 (pair)','https://www.geeksforgeeks.org/problems/c-stl-set-2-pair/1',1,2),(5342,'Program to print reciprocal of letters','https://www.geeksforgeeks.org/problems/program-to-print-reciprocal-of-letters36233623/1',4,2),(5343,'Max possible amount','https://www.geeksforgeeks.org/problems/max-possible-amount2717/1',2,2),(5344,'Geek and knots','https://www.geeksforgeeks.org/problems/little-murph-and-knots0402/1',2,2),(5345,'Combinational Logic','https://www.geeksforgeeks.org/problems/combinational-logic1908/1',4,2),(5346,'Maximum Possible Sum of Products','https://www.geeksforgeeks.org/problems/maximum-possible-sum-of-products3637/1',1,2),(5347,'Pair Sum Existence','https://www.geeksforgeeks.org/problems/pair-sum-existence/1',1,2),(5348,'Largest Even Number','https://www.geeksforgeeks.org/problems/largest-even-number3821/1',1,2),(5349,'Check if two given circles touch each other','https://www.geeksforgeeks.org/problems/checcheck-if-two-given-circles-touch-each-other5038/1',4,2),(5350,'Game of Chocolates','https://www.geeksforgeeks.org/problems/game-of-chocolates3554/1',2,2),(5351,'Points in Straight Line','https://www.geeksforgeeks.org/problems/points-in-straight-line/1',3,2),(5352,'C++ Template','https://www.geeksforgeeks.org/problems/c-template/1',1,2),(5353,'Minimum time to fulfil all orders','https://www.geeksforgeeks.org/problems/minimum-time-to-fulfil-all-orders/1',3,2),(5354,'Fill the Tank','https://www.geeksforgeeks.org/problems/fill-the-tank3026/1',2,2),(5355,'Prime number of set bits','https://www.geeksforgeeks.org/problems/prime-number-of-set-bits4632/1',1,2),(5356,'Number of minimum picks to get \'k\' pairs of socks from a drawer','https://www.geeksforgeeks.org/problems/number-of-minimum-picks-to-get-k-pairs-of-socks-from-a-drawer--141631/1',2,2),(5357,'Parties and seats','https://www.geeksforgeeks.org/problems/parties-and-seats/1',4,2),(5358,'Good String','https://www.geeksforgeeks.org/problems/good-string5712/1',4,2),(5359,'Find and Replace in String','https://www.geeksforgeeks.org/problems/find-an-replace-in-string/1',2,2),(5360,'Sum of Digits Divisibility','https://www.geeksforgeeks.org/problems/sum-of-digits-divisibility5311/1',4,2),(5361,'Count Sorted Rows','https://www.geeksforgeeks.org/problems/count-sorted-rows2702/1',4,2),(5362,'Compound Interest','https://www.geeksforgeeks.org/problems/compound-interest0235/1',4,2),(5363,'Shortest un-ordered subarray','https://www.geeksforgeeks.org/problems/shortest-un-ordered-subarray3634/1',4,2),(5364,'Two water Jug problem','https://www.geeksforgeeks.org/problems/two-water-jug-problem3402/1',2,2),(5365,'Rearrange to Make arr[i] = i','https://www.geeksforgeeks.org/problems/rearrange-an-array-such-that-arri-i3618/1',1,2),(5366,'Minimum Window Substring','https://www.geeksforgeeks.org/problems/minimum-window-subsequence/1',2,2),(5367,'Maximum XOR of two numbers in an array','https://www.geeksforgeeks.org/problems/maximum-xor-of-two-numbers-in-an-array/1',2,2),(5368,'Find the Maximum Flow','https://www.geeksforgeeks.org/problems/find-the-maximum-flow2126/1',3,2),(5369,'Largest product','https://www.geeksforgeeks.org/problems/largest-product/1',4,2),(5370,'Multiply by 11','https://www.geeksforgeeks.org/problems/multiply-by-111820/1',1,2),(5371,'nCr mod M | Part 2','https://www.geeksforgeeks.org/problems/ncr-mod-m-part-20611/1',2,2),(5372,'Print the pattern','https://www.geeksforgeeks.org/problems/print-the-pattern1025/1',1,2),(5373,'Java Collection | Set 1 (ArrayList) Part-2','https://www.geeksforgeeks.org/problems/java-collection-set-1-arraylist/1',1,2),(5374,'Longest Palindromic Substring in Linear Time','https://www.geeksforgeeks.org/problems/longest-palindromic-substring-in-linear-time/1',3,2),(5375,'Min Manipulations to make Strings Anagram','https://www.geeksforgeeks.org/problems/min-manipulations-to-make-strings-anagram1421/1',1,2),(5376,'Exchange the Leaf Nodes','https://www.geeksforgeeks.org/problems/exchange-the-leaf-nodes/1',1,2),(5377,'Left out candies','https://www.geeksforgeeks.org/problems/left-out-candies5652/1',1,2),(5378,'Trie | (Delete)','https://www.geeksforgeeks.org/problems/trie-delete/1',2,2),(5379,'Shortest Uncommon Subsequence','https://www.geeksforgeeks.org/problems/shortest-uncommon-subsequence5746/1',2,2),(5380,'Krishnamurthy number','https://www.geeksforgeeks.org/problems/krishnamurthy-number1323/1',4,2),(5381,'Coins of Geekland','https://www.geeksforgeeks.org/problems/coins-of-geekland--141631/1',2,2),(5382,'Same frequency in two halves','https://www.geeksforgeeks.org/problems/riyas-test1450/1',4,2),(5383,'HashMap Operations','https://www.geeksforgeeks.org/problems/java-collection-set-3-hashmap/1',4,2),(5384,'Intro to Dictionary - Python','https://www.geeksforgeeks.org/problems/intro-to-dictionary-python/1',1,2),(5385,'Search Query Auto Complete','https://www.geeksforgeeks.org/problems/search-query-auto-complete/1',3,2),(5386,'Count Number of Nodes in a Binary Tree','https://www.geeksforgeeks.org/problems/count-number-of-nodes-in-a-binary-tree/1',2,2),(5387,'Check if a Integer is power of 8 or not','https://www.geeksforgeeks.org/problems/check-if-a-integer-is-power-of-8-or-not2537/1',1,2),(5388,'Student of the Year','https://www.geeksforgeeks.org/problems/student-of-the-year/1',1,2),(5389,'Fake Profile','https://www.geeksforgeeks.org/problems/fake-profile3906/1',4,2),(5390,'Factors Sum','https://www.geeksforgeeks.org/problems/factors-sum2016/1',4,2),(5391,'Numbers with same first and last digit','https://www.geeksforgeeks.org/problems/numbers-with-same-first-and-last-digit4228/1',1,2),(5392,'Smallest power of 2 greater than or equal to n','https://www.geeksforgeeks.org/problems/smallest-power-of-2-greater-than-or-equal-to-n2630/1',4,2),(5393,'Increasing Sub Sequence','https://www.geeksforgeeks.org/problems/increasing-sub-sequence1712/1',1,2),(5394,'XOR of a given range','https://www.geeksforgeeks.org/problems/xor-of-a-given-range/1',1,2),(5395,'Hungry Pizza Lovers','https://www.geeksforgeeks.org/problems/hungry-pizza-lovers3148/1',1,2),(5396,'Carry counter','https://www.geeksforgeeks.org/problems/carry-counter0937/1',1,2),(5397,'Shortest direction','https://www.geeksforgeeks.org/problems/shortest-direction4201/1',4,2),(5398,'Bitonic Generator Sort','https://www.geeksforgeeks.org/problems/bitonic-generator-sort3343/1',1,2),(5399,'Shortest Path between Cities','https://www.geeksforgeeks.org/problems/shortest-path-between-cities/1',2,2),(5400,'Determine focal length of a spherical mirror','https://www.geeksforgeeks.org/problems/determine-focal-length-of-a-spherical-mirror5415/1',4,2),(5401,'Minimum Swaps','https://www.geeksforgeeks.org/problems/minimum-swaps-1649134975/1',2,2),(5402,'C++ Inheritance introduction','https://www.geeksforgeeks.org/problems/c-inheritance-introduction/1',4,2),(5403,'Special Numbers','https://www.geeksforgeeks.org/problems/special-numbers4116/1',2,2),(5404,'Maximum Area','https://www.geeksforgeeks.org/problems/maximum-area2642/1',4,2),(5405,'Count numbers divisible by M','https://www.geeksforgeeks.org/problems/count-numbers-divisible-by-m1524/1',4,2),(5406,'Count Total Setbits','https://www.geeksforgeeks.org/problems/sherlock-and-his-enemies2304/1',2,2),(5407,'XOR Game','https://www.geeksforgeeks.org/problems/xor-game2143/1',2,2),(5408,'Repeated IDs','https://www.geeksforgeeks.org/problems/repeated-ids0116/1',4,2),(5409,'Remove BST keys outside given range','https://www.geeksforgeeks.org/problems/remove-bst-keys-outside-given-range/1',2,2),(5410,'Generate Grey Code Sequences','https://www.geeksforgeeks.org/problems/generate-grey-code-sequences/1',1,2),(5411,'Countries at war','https://www.geeksforgeeks.org/problems/countries-at-war2936/1',4,2),(5412,'Queries for counts of multiples in an array','https://www.geeksforgeeks.org/problems/queries-for-counts-of-multiples-in-an-array4028/1',2,2),(5413,'Good Pairs','https://www.geeksforgeeks.org/problems/good-pairs4519/1',1,2),(5414,'Check if a given string is a rotation of a palindrome','https://www.geeksforgeeks.org/problems/check-if-a-given-string-is-a-rotation-of-a-palindrome0317/1',1,2),(5415,'Assign Mice Holes','https://www.geeksforgeeks.org/problems/assign-mice-holes3053/1',1,2),(5416,'Area of a triangle','https://www.geeksforgeeks.org/problems/area-of-a-triangle5739/1',4,2),(5417,'Assign Cookies','https://www.geeksforgeeks.org/problems/assign-cookies/1',1,2),(5418,'Multiset Operations','https://www.geeksforgeeks.org/problems/multiset-operations/1',1,2),(5419,'Celsius to Fahrenheit Conversion','https://www.geeksforgeeks.org/problems/celsius-to-fahrenheit-conversion5212/1',4,2),(5420,'Maximum Product of Increasing Subsequence of Size 3','https://www.geeksforgeeks.org/problems/maximum-product-of-increasing-subsequence-of-size-32027/1',2,2),(5421,'Outermost Parentheses','https://www.geeksforgeeks.org/problems/outermost-parentheses/1',1,2),(5422,'Count Odd Factors','https://www.geeksforgeeks.org/problems/count-odd-factors0844/1',1,2),(5423,'Rearrange linked list in-place','https://www.geeksforgeeks.org/problems/rearrange-linked-list-in-place/1',2,2),(5424,'C++ Function overloading','https://www.geeksforgeeks.org/problems/c-function-overloading-1587115620/1',1,2),(5425,'Count Numbers in Range','https://www.geeksforgeeks.org/problems/count-numbers-in-range5305/1',2,2),(5426,'Why is Melody so chocolaty?','https://www.geeksforgeeks.org/problems/why-is-melody-so-chocolaty0446/1',4,2),(5427,'Geek and his Tricky Series','https://www.geeksforgeeks.org/problems/geek-and-his-tricky-series2207/1',1,2),(5428,'C++ Classes Introduction','https://www.geeksforgeeks.org/problems/c-classes-introduction/1',4,2),(5429,'Product Sum','https://www.geeksforgeeks.org/problems/product-sum3012/1',4,2),(5430,'Gray Code','https://www.geeksforgeeks.org/problems/gray-code-1611215248/1',2,2),(5431,'Sum of subarray minimum','https://www.geeksforgeeks.org/problems/sum-of-subarray-minimum/1',2,2),(5432,'Interesting Queries','https://www.geeksforgeeks.org/problems/interesting-queries4742/1',3,2),(5433,'Combination Sum II','https://www.geeksforgeeks.org/problems/combination-sum-ii/1',2,2),(5434,'Number of root to leaf paths','https://www.geeksforgeeks.org/problems/number-of-root-to-leaf-paths/1',2,2),(5435,'Depth of node','https://www.geeksforgeeks.org/problems/depth-of-node/1',1,2),(5436,'Faithful Numbers','https://www.geeksforgeeks.org/problems/faithful-numbers0014/1',1,2),(5437,'Next Greater Even Number','https://www.geeksforgeeks.org/problems/next-greater-even-number0828/1',1,2),(5438,'Rope Cutting','https://www.geeksforgeeks.org/problems/rope-cutting3334/1',1,2),(5439,'Mean of range in array','https://www.geeksforgeeks.org/problems/mean-of-range-in-array2123/1',1,2),(5440,'Rotate matrix elements clockwise','https://www.geeksforgeeks.org/problems/rotate-matrix-elements-clockwise2336/1',1,2),(5441,'Construct expression tree','https://www.geeksforgeeks.org/problems/construct-an-expression-tree/1',2,2),(5442,'Hit most Balloons','https://www.geeksforgeeks.org/problems/hit-most-balloons--170637/1',2,2),(5443,'Inverted triangle of stars','https://www.geeksforgeeks.org/problems/inverted-triangle-of-stars0110/1',1,2),(5444,'Maximum number of characters between any two same character','https://www.geeksforgeeks.org/problems/maximum-number-of-characters-between-any-two-same-character4552/1',1,2),(5445,'Happy Number','https://www.geeksforgeeks.org/problems/happy-number1408/1',1,2),(5446,'Maximum Perimeter of Triangle from array','https://www.geeksforgeeks.org/problems/maximum-perimeter-of-triangle-from-array4322/1',4,2),(5447,'Minimum sum of two elements from two arrays','https://www.geeksforgeeks.org/problems/minimum-sum-of-two-elements-from-two-arrays0253/1',4,2),(5448,'Magical String[Duplicate Problem]','https://www.geeksforgeeks.org/problems/magical-string3653/1',4,2),(5449,'Amicable Pair','https://www.geeksforgeeks.org/problems/amicable-pair0804/1',1,2),(5450,'Sum of fifth powers of the first n natural numbers','https://www.geeksforgeeks.org/problems/sum-of-fifth-powers-of-the-first-n-natural-numbers3415/1',4,2),(5451,'Huffman Decoding-1','https://www.geeksforgeeks.org/problems/huffman-decoding-1/1',1,2),(5452,'Series X1','https://www.geeksforgeeks.org/problems/series-x14741/1',4,2),(5453,'Biconnected Graph','https://www.geeksforgeeks.org/problems/biconnected-graph2528/1',2,2),(5454,'Longest substring to form a Palindrome','https://www.geeksforgeeks.org/problems/longest-substring-whose-character-rearranged-can-form-a-palindrome/1',3,2),(5455,'Number of distinct words with K maximum contiguous vowels','https://www.geeksforgeeks.org/problems/number-of-distinct-words-with-k-maximum-contiguous-vowels--141631/1',3,2),(5456,'Consecutive Array Elements','https://www.geeksforgeeks.org/problems/consecutive-array-elements2711/1',1,2),(5457,'Boundary Elements of Matrix','https://www.geeksforgeeks.org/problems/boundary-elements-of-matrix1102/1',1,2),(5458,'Minimum increment/decrement to make array non-Increasing','https://www.geeksforgeeks.org/problems/minimum-incrementdecrement-to-make-array-non-increasing--170637/1',2,2),(5459,'Geek and his Binary Strings','https://www.geeksforgeeks.org/problems/geek-and-his-binary-strings1951/1',1,2),(5460,'Missing ranges of numbers','https://www.geeksforgeeks.org/problems/missing-ranges-of-numbers1019/1',1,2),(5461,'String Subsequence Game','https://www.geeksforgeeks.org/problems/string-subsequence-game5515/1',2,2),(5462,'Gadgets of Doraland','https://www.geeksforgeeks.org/problems/gadgets-of-doraland--141631/1',1,2),(5463,'Villain Con','https://www.geeksforgeeks.org/problems/villain-con0511/1',2,2),(5464,'Subarrays with K Distinct Integers','https://www.geeksforgeeks.org/problems/subarrays-with-k-different-integers/1',2,2),(5465,'Exactly one swap','https://www.geeksforgeeks.org/problems/exactly-one-swap--170637/1',2,2),(5466,'Making elements distinct','https://www.geeksforgeeks.org/problems/making-elements-distinct3139/1',4,2),(5467,'Postorder from Inorder and Preorder','https://www.geeksforgeeks.org/problems/postorder-traversal-from-given-inorder-and-preorder-traversals/1',1,2),(5468,'Construct tree from Inorder and LevelOrder','https://www.geeksforgeeks.org/problems/construct-tree-from-inorder-and-levelorder/1',2,2),(5469,'Finger Game','https://www.geeksforgeeks.org/problems/finger-game1755/1',4,2),(5470,'Pairs of Non Coinciding Points','https://www.geeksforgeeks.org/problems/pairs-of-non-coinciding-points4141/1',2,2),(5471,'Binary Matrix with at most K 1s','https://www.geeksforgeeks.org/problems/largest-square-in-a-binary-matrix-with-at-most-k-1s-for-multiple-queries/1',2,2),(5472,'Fibonacci in the array','https://www.geeksforgeeks.org/problems/fibonacci-in-the-array5817/1',4,2),(5473,'String Modification','https://www.geeksforgeeks.org/problems/string-modification-1587115621/1',1,2),(5474,'Cross character','https://www.geeksforgeeks.org/problems/cross-character2630/1',1,2),(5475,'How many pizzas ?','https://www.geeksforgeeks.org/problems/how-many-pizzas4832/1',2,2),(5476,'Binary subarray with sum','https://www.geeksforgeeks.org/problems/binary-subarray-with-sum/1',2,2),(5477,'Unique Substrings','https://www.geeksforgeeks.org/problems/unique-substrings0524/1',1,2),(5478,'Ordering of strings','https://www.geeksforgeeks.org/problems/ordering-of-strings5527/1',1,2),(5479,'Tough Competitors','https://www.geeksforgeeks.org/problems/tough-competitors0540/1',4,2),(5480,'Decimal to any base conversion','https://www.geeksforgeeks.org/problems/decimal-to-any-base-conversion2440/1',4,2),(5481,'The Spider Steps','https://www.geeksforgeeks.org/problems/the-spider-steps3600/1',4,2),(5482,'Special Series Sum','https://www.geeksforgeeks.org/problems/special-series-sum0903/1',4,2),(5483,'Multimap Operations','https://www.geeksforgeeks.org/problems/multimap-operations/1',1,2),(5484,'Find sum of divisors ','https://www.geeksforgeeks.org/problems/find-sum-of-divisors5636/1',1,2),(5485,'Magic Number','https://www.geeksforgeeks.org/problems/magic-number4431/1',1,2),(5486,'Special Keyboard 2','https://www.geeksforgeeks.org/problems/special-keyboard-2/1',2,2),(5487,'Sort a 2D vector diagonally','https://www.geeksforgeeks.org/problems/diagonal-morning-assembly0028/1',2,2),(5488,'Even occurring elements','https://www.geeksforgeeks.org/problems/even-occurring-elements4332/1',4,2),(5489,'Find the number of subarrays having even sum','https://www.geeksforgeeks.org/problems/find-the-number-of-sub-arrays-having-even-sum1533/1',2,2),(5490,'Longest Repeating Character Replacement','https://www.geeksforgeeks.org/problems/longest-repeating-character-replacement/1',2,2),(5491,'Product of factors of number','https://www.geeksforgeeks.org/problems/product-of-factors-of-number4757/1',4,2),(5492,'Parallel or Perpendicular?','https://www.geeksforgeeks.org/problems/parallel-or-perpendicular4257/1',4,2),(5493,'Distribute N candies among K people','https://www.geeksforgeeks.org/problems/distribute-n-candies/1',2,2),(5494,'Cut rope to maximise product','https://www.geeksforgeeks.org/problems/max-rope-cutting1312/1',1,2),(5495,'Ishaan\'s Internship','https://www.geeksforgeeks.org/problems/ishaans-internship4400/1',4,2),(5496,'Minimum XOR value pair','https://www.geeksforgeeks.org/problems/minimum-xor-value-pair/1',2,2),(5497,'Temple Offerings','https://www.geeksforgeeks.org/problems/temple-offerings2831/1',2,2),(5498,'XOR of all elements','https://www.geeksforgeeks.org/problems/xor-of-all-elements0736/1',4,2),(5499,'Perfect Square String','https://www.geeksforgeeks.org/problems/perfect-square-string5914/1',4,2),(5500,'Queries on Strings','https://www.geeksforgeeks.org/problems/queries-on-strings5636/1',2,2),(5501,'Lucky Number','https://www.geeksforgeeks.org/problems/lucky-number0707/1',1,2),(5502,'Set in Python - II','https://www.geeksforgeeks.org/problems/set-in-python-ii/1',1,2),(5503,'Concatenate Equal to Target','https://www.geeksforgeeks.org/problems/concatenate-equal-to-target/1',2,2),(5504,'Sum of divisors','https://www.geeksforgeeks.org/problems/sum-of-divisors3601/1',4,2),(5505,'Squares Difference','https://www.geeksforgeeks.org/problems/squares-difference0939/1',4,2),(5506,'Longest Increasing Path in a Matrix','https://www.geeksforgeeks.org/problems/longest-increasing-path-in-a-matrix/1',3,2),(5507,'Student record','https://www.geeksforgeeks.org/problems/student-record1752/1',4,2),(5508,'Multiply 2 matrices','https://www.geeksforgeeks.org/problems/multiply-2-matrices4144/1',4,2),(5509,'Last Match','https://www.geeksforgeeks.org/problems/last-match1928/1',1,2),(5510,'Theft at World Bank','https://www.geeksforgeeks.org/problems/theft-at-the-world-bank2156/1',2,2),(5511,'Maximum Integer Value ','https://www.geeksforgeeks.org/problems/maximum-integer-value1434/1',4,2),(5512,'Number Pattern','https://www.geeksforgeeks.org/problems/number-pattern0517/1',4,2),(5513,'Perfect Array','https://www.geeksforgeeks.org/problems/perfect-array2344/1',4,2),(5514,'Common Divisors','https://www.geeksforgeeks.org/problems/common-divisors4712/1',4,2),(5515,'Dudeney\'s Cow Problem','https://www.geeksforgeeks.org/problems/cows-of-fooland5818/1',2,2),(5516,'Find the most frequent digit','https://www.geeksforgeeks.org/problems/find-the-most-frequent-digit4432/1',1,2),(5517,'Number of positive integral solutions','https://www.geeksforgeeks.org/problems/number-of-positive-integral-solutions2115/1',2,2),(5518,'A guy with a mental problem','https://www.geeksforgeeks.org/problems/a-guy-with-a-mental-problem1604/1',4,2),(5519,'LCM of given array elements','https://www.geeksforgeeks.org/problems/lcm-of-given-array-elements3919/1',4,2),(5520,'Kth Prime Factor','https://www.geeksforgeeks.org/problems/kth-prime-factor-of-a-number0132/1',1,2),(5521,'Check if actual binary representation of a number is palindrome','https://www.geeksforgeeks.org/problems/check-if-actual-binary-representation-of-a-number-is-palindrome0624/1',1,2),(5522,'Minimal moves to form a string','https://www.geeksforgeeks.org/problems/minimal-moves-to-form-a-string4331/1',1,2),(5523,'Maximum trains for which stoppage can be provided','https://www.geeksforgeeks.org/problems/maximum-trains-for-which-stoppage-can-be-provided/1',2,2),(5524,'Time to Words','https://www.geeksforgeeks.org/problems/time-to-words3728/1',4,2),(5525,'Mr Modulo and Pairs','https://www.geeksforgeeks.org/problems/mr-modulo-and-pairs5610/1',2,2),(5526,'Elements before which no element is bigger','https://www.geeksforgeeks.org/problems/elements-before-which-no-element-is-bigger0602/1',4,2),(5527,'Java Iterator','https://www.geeksforgeeks.org/problems/java-iterator2702/1',4,2),(5528,'Implement Set in Python','https://www.geeksforgeeks.org/problems/implement-set-in-python--141631/1',1,2),(5529,'Triangle Path Sum','https://www.geeksforgeeks.org/problems/triangle-path-sum/1',2,2),(5530,'Range Minimum Query','https://www.geeksforgeeks.org/problems/range-minimum-query/1',2,2),(5531,'Find Maximum value','https://www.geeksforgeeks.org/problems/find-maximum-value/1',1,2),(5532,'Natural Sum','https://www.geeksforgeeks.org/problems/stuti-and-her-problem5846/1',1,2),(5533,'Maximum point you can obtain from cards','https://www.geeksforgeeks.org/problems/maximum-point-you-can-obtain-from-cards/1',2,2),(5534,'Lucy\'s Neighbours','https://www.geeksforgeeks.org/problems/lucys-neighbours--141631/1',2,2),(5535,'Next element with greater frequency','https://www.geeksforgeeks.org/problems/next-element-with-greater-frequency--170637/1',2,2),(5536,'Find rectangle with corners as 1','https://www.geeksforgeeks.org/problems/find-rectangle-with-corners-as-1--141631/1',2,2),(5537,'Pair array product sum','https://www.geeksforgeeks.org/problems/pair-array-product-sum4912/1',2,2),(5538,'Product of Prime Factors','https://www.geeksforgeeks.org/problems/product-of-prime-factors5121/1',1,2),(5539,'Array Partition','https://www.geeksforgeeks.org/problems/array-partition/1',3,2),(5540,'12 hour clock Multiplication ','https://www.geeksforgeeks.org/problems/12-hour-clock-multiplication4709/1',4,2),(5541,'Subtraction and two numbers','https://www.geeksforgeeks.org/problems/subtraction-and-two-numbers0816/1',1,2),(5542,'Largest zigzag sequence','https://www.geeksforgeeks.org/problems/largest-zigzag-sequence5416/1',1,2),(5543,'Repeated sum of digits','https://www.geeksforgeeks.org/problems/repeated-sum-of-digits3955/1',4,2),(5544,'Friendly Array','https://www.geeksforgeeks.org/problems/friendly-array2009/1',4,2),(5545,'Assembly Line Scheduling','https://www.geeksforgeeks.org/problems/assembly-line-scheduling/1',2,2),(5546,'Count Reverse Pairs','https://www.geeksforgeeks.org/problems/count-reverse-pairs/1',3,2),(5547,'Stock Buy and Sell – with Cooldown','https://www.geeksforgeeks.org/problems/buy-stock-with-cooldown/1',2,2),(5548,'Corona Vaccine','https://www.geeksforgeeks.org/problems/corona-vaccine--141631/1',3,2),(5549,'C++ Multi-level inheritance','https://www.geeksforgeeks.org/problems/c-multi-level-inheritance/1',1,2),(5550,'Check if divisible by 5','https://www.geeksforgeeks.org/problems/check-if-divisible-by-52730/1',4,2),(5551,'Java Collection | Set 3 (HashMap) Part-1','https://www.geeksforgeeks.org/problems/java-hashmap1033/1',4,2),(5552,'Print this pattern!','https://www.geeksforgeeks.org/problems/print-this-pattern0709/1',1,2),(5553,'Maximum bitonic subarray sum','https://www.geeksforgeeks.org/problems/maximum-bitonic-subarray-sum5616/1',2,2),(5554,'Even Subsets','https://www.geeksforgeeks.org/problems/even-subsets/1',1,2),(5555,'Number of Palindromic paths in a Matrix','https://www.geeksforgeeks.org/problems/number-of-palindromic-paths-in-a-matrix0819/1',2,2),(5556,'C++ STL Priority Queue','https://www.geeksforgeeks.org/problems/c-stl-priority-queue/1',1,2),(5557,'Bell Numbers','https://www.geeksforgeeks.org/problems/bell-numbers2108/1',2,2),(5558,'Structs and Objects','https://www.geeksforgeeks.org/problems/structs-and-objects/1',1,2),(5559,'Perfect Reversible String','https://www.geeksforgeeks.org/problems/perfect-reversible-string4828/1',4,2),(5560,'Maximum AND Value','https://www.geeksforgeeks.org/problems/maximum-and-value2637/1',1,2),(5561,'Bird and maximum fruit gathering','https://www.geeksforgeeks.org/problems/bird-and-maximum-fruit-gathering0509/1',1,2),(5562,'Count increasing Subarrays','https://www.geeksforgeeks.org/problems/count-increasing-subarrays5301/1',1,2),(5563,'Parity of unsigned integer','https://www.geeksforgeeks.org/problems/parity-of-unsigned-integer4247/1',4,2),(5564,'Geek in a Maze','https://www.geeksforgeeks.org/problems/geek-in-a-maze--170637/1',3,2),(5565,'Distinct Substrings','https://www.geeksforgeeks.org/problems/distinct-substrings2516/1',1,2),(5566,'Sorting all array elements except one','https://www.geeksforgeeks.org/problems/sorting-all-array-elements-except-one4653/1',1,2),(5567,'Triangle and Square','https://www.geeksforgeeks.org/problems/triangle-and-square--170637/1',1,2),(5568,'Swap bits','https://www.geeksforgeeks.org/problems/swap-bits5726/1',1,2),(5569,'Playing with mobile numbers','https://www.geeksforgeeks.org/problems/playing-with-mobile-numbers0732/1',1,2),(5570,'Count zero','https://www.geeksforgeeks.org/problems/count-zero3710/1',4,2),(5571,'Compute (a*b)%c','https://www.geeksforgeeks.org/problems/compute-abc5320/1',1,2),(5572,'Shortest distance in infinite tree','https://www.geeksforgeeks.org/problems/find-the-distance-between-two-nodes4402/1',1,2),(5573,'Nearest Perfect Square','https://www.geeksforgeeks.org/problems/are-you-perfect4926/1',1,2),(5574,'Maximum difference Indexes','https://www.geeksforgeeks.org/problems/maximum-difference-10429/1',1,2),(5575,'Robots','https://www.geeksforgeeks.org/problems/robots--170637/1',2,2),(5576,'Find the largest number','https://www.geeksforgeeks.org/problems/find-the-largest-number4953/1',2,2),(5577,'Ruling Pair','https://www.geeksforgeeks.org/problems/ruling-pair--141631/1',2,2),(5578,'Disarium Number','https://www.geeksforgeeks.org/problems/disarium-number1045/1',4,2),(5579,'Yes XOR No','https://www.geeksforgeeks.org/problems/yes-xor-no2901/1',2,2),(5580,'Kill Captain America','https://www.geeksforgeeks.org/problems/kill-captain-america0228/1',3,2),(5581,'Count ways to express N as the sum of 1,3 and 4','https://www.geeksforgeeks.org/problems/count-ways-to-express-n-as-the-sum-of-13-and-44024/1',1,2),(5582,'Remove Invalid Parentheses','https://www.geeksforgeeks.org/problems/remove-invalid-parentheses/1',3,2),(5583,'Maximum Volume of a Rectangular Box','https://www.geeksforgeeks.org/problems/maximum-volume-of-a-rectangular-box1500/1',1,2),(5584,'Can Make Triangle','https://www.geeksforgeeks.org/problems/can-make-triangle--170637/1',1,2),(5585,'Lucky alive person in a circle','https://www.geeksforgeeks.org/problems/lucky-alive-person-in-a-circle1229/1',2,2),(5586,'Largest rectangle of 1s with swapping of columns allowed','https://www.geeksforgeeks.org/problems/find-the-largest-rectangle-of-1s-with-swapping-of-columns-allowed0243/1',3,2),(5587,'Number and the Digit Sum','https://www.geeksforgeeks.org/problems/number-and-the-digit-sum4021/1',1,2),(5588,'Maximum prefix sum for a given range','https://www.geeksforgeeks.org/problems/maximum-prefix-sum-for-a-given-range0227/1',1,2),(5589,'Maximum Sum Subsequence of length k','https://www.geeksforgeeks.org/problems/maximum-sum-subsequence-of-length-k3053/1',2,2),(5590,'Set in Python - I','https://www.geeksforgeeks.org/problems/set-in-python-i/1',1,2),(5591,'Sum of Digits Prime/Non-Prime','https://www.geeksforgeeks.org/problems/sum-of-digits-prime-non-prime1935/1',4,2),(5592,'Minimum swap required to convert binary tree to binary search tree','https://www.geeksforgeeks.org/problems/minimum-swap-required-to-convert-binary-tree-to-binary-search-tree/1',3,2),(5593,'Numbers with one absolute difference','https://www.geeksforgeeks.org/problems/numbers-with-one-absolute-difference2416/1',2,2),(5594,'Replace a word','https://www.geeksforgeeks.org/problems/replace-a-word5553/1',1,2),(5595,'Min cut Square','https://www.geeksforgeeks.org/problems/min-cut-square3303/1',2,2),(5596,'Multiples Power','https://www.geeksforgeeks.org/problems/multiples-power2816/1',4,2),(5597,'Floating point number even or odd','https://www.geeksforgeeks.org/problems/floating-point-number-even-or-odd0146/1',4,2),(5598,'Total number of Strings','https://www.geeksforgeeks.org/problems/total-number-of-strings5726/1',1,2),(5599,'Longest String Chain','https://www.geeksforgeeks.org/problems/longest-string-chain/1',2,2),(5600,'The OR Gate','https://www.geeksforgeeks.org/problems/the-or-gate3122/1',4,2),(5601,'Height Using Parent Array','https://www.geeksforgeeks.org/problems/height-using-parent-array4103/1',2,2),(5602,'Maximum Winning score','https://www.geeksforgeeks.org/problems/maximum-winning-score--170637/1',2,2),(5603,'Check if divisible by 36','https://www.geeksforgeeks.org/problems/check-if-divisible-by-363149/1',4,2),(5604,'Find k-th missing element','https://www.geeksforgeeks.org/problems/find-k-th-missing-element2556/1',1,2),(5605,'Count the characters in each word in a given sentence','https://www.geeksforgeeks.org/problems/count-the-characters-in-each-word-in-a-given-sentence3451/1',4,2),(5606,'Buying Vegetables','https://www.geeksforgeeks.org/problems/buying-vegetables0016/1',2,2),(5607,'Broken blocks','https://www.geeksforgeeks.org/problems/broken-blocks0022/1',2,2),(5608,'Find the position of M-th item','https://www.geeksforgeeks.org/problems/find-the-position-of-m-th-item1723/1',4,2),(5609,'Escape the Forbidden Forest','https://www.geeksforgeeks.org/problems/escape-the-forbidden-forest--141631/1',2,2),(5610,'Find Substring from last of the Given String','https://www.geeksforgeeks.org/problems/find-substring-from-last-of-the-given-string3440/1',4,2),(5611,'Change of Key in BST','https://www.geeksforgeeks.org/problems/implement-change-key-in-bst/1',1,2),(5612,'Equal Sum and XOR','https://www.geeksforgeeks.org/problems/equal-sum-and-xor/1',4,2),(5613,'C++ STL | Set 6 (set)','https://www.geeksforgeeks.org/problems/c-stl-set-6-set/1',4,2),(5614,'Minimum insertions to sort an array','https://www.geeksforgeeks.org/problems/minimum-insertions-to-sort-an-array0535/1',1,2),(5615,'Count Pairs Odd Xor','https://www.geeksforgeeks.org/problems/count-pairs-odd-xor0308/1',4,2),(5616,'Largest Divisible Subset','https://www.geeksforgeeks.org/problems/largest-divisible-subset--170643/1',2,2),(5617,'Charul and vessels','https://www.geeksforgeeks.org/problems/charul-and-vessels0209/1',1,2),(5618,'Let\'s Play!!!','https://www.geeksforgeeks.org/problems/lets-play0201/1',3,2),(5619,'C++ Visible Numbers','https://www.geeksforgeeks.org/problems/c-visible-numbers5542/1',1,2),(5620,'Circular Prime Number','https://www.geeksforgeeks.org/problems/circular-prime-number0230/1',1,2),(5621,'Missing Intervals','https://www.geeksforgeeks.org/problems/missing-intervals3058/1',2,2),(5622,'Find length of longest subsequence','https://www.geeksforgeeks.org/problems/find-length-of-longest-subsequence4905/1',2,2),(5623,'Prime factorization and geek number','https://www.geeksforgeeks.org/problems/prime-factorization-and-geek-number1915/1',2,2),(5624,'Pattern-1','https://www.geeksforgeeks.org/problems/pattern-13116/1',4,2),(5625,'Count of Palindromic substrings in an Index range','https://www.geeksforgeeks.org/problems/count-of-palindromic-substrings-in-an-index-range3752/1',2,2),(5626,'Optimal walk','https://www.geeksforgeeks.org/problems/optimal-walk3752/1',1,2),(5627,'Cumulative frequency of count of each element in an unsorted array','https://www.geeksforgeeks.org/problems/frequency-of-each-element-in-an-unsorted-array0759/1',1,2),(5628,'Find sum of even factors of a number','https://www.geeksforgeeks.org/problems/find-sum-of-even-factors-of-a-number1725/1',4,2),(5629,'Check Binary String','https://www.geeksforgeeks.org/problems/check-binary-string0402/1',4,2),(5630,'Find The Sequence','https://www.geeksforgeeks.org/problems/find-the-sequence1346/1',4,2),(5631,'C++ STL | Set 8 (unordered set)','https://www.geeksforgeeks.org/problems/c-stl-set-8-unordered-set/1',4,2),(5632,'RegEx  matching','https://www.geeksforgeeks.org/problems/-regex-matching1145/1',3,2),(5633,'The Tiny Miny','https://www.geeksforgeeks.org/problems/the-tiny-miny2541/1',2,2),(5634,'Mirror of a given node','https://www.geeksforgeeks.org/problems/mirror-of-a-given-node/1',2,2),(5635,'Find the number of tabs opened','https://www.geeksforgeeks.org/problems/tiger-zinda-hai5531/1',1,2),(5636,'Sum of diagonals','https://www.geeksforgeeks.org/problems/sum-of-diagonals-1587115621/1',4,2),(5637,'String Conversion','https://www.geeksforgeeks.org/problems/string-conversion4603/1',2,2),(5638,'C++ Friend function','https://www.geeksforgeeks.org/problems/c-friend-function/1',2,2),(5639,'Find number of days between two given dates','https://www.geeksforgeeks.org/problems/find-number-of-days-between-two-given-dates5400/1',4,2),(5640,'Calculate the coefficient','https://www.geeksforgeeks.org/problems/calculate-the-coefficient/1',2,2),(5641,'Minimum time taken by each job to be completed given by a Directed Acyclic Graph','https://www.geeksforgeeks.org/problems/minimum-time-taken-by-each-job-to-be-completed-given-by-a-directed-acyclic-graph/1',2,2),(5642,'Colorful Strings','https://www.geeksforgeeks.org/problems/geek-and-its-colored-strings1355/1',1,2),(5643,'Matrix Operations','https://www.geeksforgeeks.org/problems/matrix-operations/1',1,2),(5644,'C++ STL | Set 4 (stack)','https://www.geeksforgeeks.org/problems/c-stl-set-4-stack/1',4,2),(5645,'Factorial Number','https://www.geeksforgeeks.org/problems/factorial-number2446/1',4,2),(5646,'Smallest number by rearranging digits of a given number','https://www.geeksforgeeks.org/problems/smallest-number-by-rearranging-digits-of-a-given-number0820/1',1,2),(5647,'Equal Sum and Product','https://www.geeksforgeeks.org/problems/equal-sum-and-product2057/1',1,2),(5648,'Sisters and coins','https://www.geeksforgeeks.org/problems/sisters-and-coins2253/1',2,2),(5649,'Count Divisors','https://www.geeksforgeeks.org/problems/james-bond-and-divisors5539/1',2,2),(5650,'7 Segment Display','https://www.geeksforgeeks.org/problems/7-segment-display0752/1',2,2),(5651,'TreeMap Operations','https://www.geeksforgeeks.org/problems/java-collection-set-4-treemap/1',4,2),(5652,'Triangle growing downwards','https://www.geeksforgeeks.org/problems/triangle-growing-downwards2344/1',4,2),(5653,'Special Odd Series Sum','https://www.geeksforgeeks.org/problems/special-odd-series-sum1235/1',4,2),(5654,'Sum the common elements','https://www.geeksforgeeks.org/problems/sum-the-common-elements/1',4,2),(5655,'Divide and Subtract Game','https://www.geeksforgeeks.org/problems/divide-and-subtract-game2253/1',2,2),(5656,'Wrong Ball','https://www.geeksforgeeks.org/problems/wrong-ball5239/1',4,2),(5657,'Spidey Sense','https://www.geeksforgeeks.org/problems/spidey-sense5556/1',2,2),(5658,'High Effort vs Low Effort','https://www.geeksforgeeks.org/problems/high-effort-vs-low-effort0213/1',1,2),(5659,'Count Increasing Subsequences','https://www.geeksforgeeks.org/problems/count-increasing-subsequences3134/1',2,2),(5660,'One\'s Complement','https://www.geeksforgeeks.org/problems/ones-complement5928/1',4,2),(5661,'Pronic Number','https://www.geeksforgeeks.org/problems/pronic-number0729/1',4,2),(5662,'Restricted Pacman','https://www.geeksforgeeks.org/problems/restricted-pacman--141631/1',2,2),(5663,'Penalty Shooters','https://www.geeksforgeeks.org/problems/penalty-shooters4238/1',1,2),(5664,'Farthest Index','https://www.geeksforgeeks.org/problems/longest-equal-prefix3139/1',4,2),(5665,'Next Prime Palindrome','https://www.geeksforgeeks.org/problems/next-prime-palindrome4153/1',1,2),(5666,'Maximum XOR subset','https://www.geeksforgeeks.org/problems/maximum-xor-subset0715/1',3,2),(5667,'Number of subsets and mean','https://www.geeksforgeeks.org/problems/number-of-subsets-and-mean1225/1',1,2),(5668,'Radix Sort','https://www.geeksforgeeks.org/problems/radix-sort/1',2,2),(5669,'Longest Path in a Directed Acyclic Graph','https://www.geeksforgeeks.org/problems/longest-path-in-a-directed-acyclic-graph/1',3,2),(5670,'Number of Longest Increasing Subsequence','https://www.geeksforgeeks.org/problems/number-of-longest-increasing-subsequence/1',2,2),(5671,'Smallest number in one swap','https://www.geeksforgeeks.org/problems/smallest-number-in-one-swap0010/1',1,2),(5672,'The AND Gate','https://www.geeksforgeeks.org/problems/the-and-gate1231/1',4,2),(5673,'Good Numbers','https://www.geeksforgeeks.org/problems/good-numbers4629/1',1,2),(5674,'Smallest subarray with all occurrences of a most frequent element','https://www.geeksforgeeks.org/problems/smallest-subarray-with-all-occurrences-of-a-most-frequent-element2258/1',2,2),(5675,'Ticket sellers','https://www.geeksforgeeks.org/problems/ticket-sellers3241/1',1,2),(5676,'Max-Min conversion','https://www.geeksforgeeks.org/problems/max-min-conversion5257/1',4,2),(5677,'Crazy String','https://www.geeksforgeeks.org/problems/crazy-string1157/1',4,2),(5678,'Divisible by 5 or not','https://www.geeksforgeeks.org/problems/divisible-by-5-or-not-14509/1',1,2),(5679,'The Inverting Factor','https://www.geeksforgeeks.org/problems/the-inverting-factor3932/1',1,2),(5680,'Secret Cipher','https://www.geeksforgeeks.org/problems/secret-cipher--141631/1',3,2),(5681,'Face off Tournament','https://www.geeksforgeeks.org/problems/multiple-in-table-tennis3310/1',4,2),(5682,'Find the remainder ','https://www.geeksforgeeks.org/problems/find-the-remainder1439/1',4,2),(5683,'Sum of nodes within k distance from target','https://www.geeksforgeeks.org/problems/sum-of-nodes-within-k-distance-from-target--170637/1',2,2),(5684,'Cutting Rectangles','https://www.geeksforgeeks.org/problems/cutting-rectangles3659/1',1,2),(5685,'Kth LSB','https://www.geeksforgeeks.org/problems/kth-lsb3427/1',1,2),(5686,'Set all the bits in given range of a number','https://www.geeksforgeeks.org/problems/set-all-the-bits-in-given-range-of-a-number4538/1',1,2),(5687,'Count Subarray with k odds','https://www.geeksforgeeks.org/problems/count-subarray-with-k-odds/1',2,2),(5688,'Common Divisor','https://www.geeksforgeeks.org/problems/common-divisor0847/1',1,2),(5689,'Last seen array element','https://www.geeksforgeeks.org/problems/last-seen-array-element1501/1',1,2),(5690,'The Even Array','https://www.geeksforgeeks.org/problems/the-even-array3825/1',1,2),(5691,'Mysterious Series','https://www.geeksforgeeks.org/problems/mysterious-series5049/1',1,2),(5692,'Euler Totient Function','https://www.geeksforgeeks.org/problems/euler-totient-function4604/1',1,2),(5693,'Jumpy Ball','https://www.geeksforgeeks.org/problems/jumpy-ball1449/1',4,2),(5694,'Sum of large numbers','https://www.geeksforgeeks.org/problems/sum-of-large-numbers5827/1',4,2),(5695,'The Muskteers','https://www.geeksforgeeks.org/problems/the-muskteers3519/1',4,2),(5696,'Square Divisors','https://www.geeksforgeeks.org/problems/square-divisors4319/1',4,2),(5697,'Tywin\'s War Strategy','https://www.geeksforgeeks.org/problems/tywins-war-strategy0527/1',4,2),(5698,'nCr','https://www.geeksforgeeks.org/problems/ncr2132/1',1,2),(5699,'Prime number validation-JAVA regex','https://www.geeksforgeeks.org/problems/prime-number-validation-java-regex0450/1',4,2),(5700,'Count even substrings','https://www.geeksforgeeks.org/problems/count-even-substrings3857/1',1,2),(5701,'Number of digits','https://www.geeksforgeeks.org/problems/number-of-digits2559/1',1,2),(5702,'Corner Digits Sum','https://www.geeksforgeeks.org/problems/corner-digits1317/1',4,2),(5703,'Reverse Bits','https://www.geeksforgeeks.org/problems/reverse-bits-1611130171/1',1,2),(5704,'Party in Town','https://www.geeksforgeeks.org/problems/party-in-town3951/1',2,2),(5705,'Number of Groups','https://www.geeksforgeeks.org/problems/number-of-groups3920/1',1,2),(5706,'The Optimal Selection','https://www.geeksforgeeks.org/problems/the-optimal-selection5413/1',1,2),(5707,'2\'s Complement','https://www.geeksforgeeks.org/problems/2s-complement3124/1',4,2),(5708,'Total distance travelled in an array','https://www.geeksforgeeks.org/problems/total-distance-travelled-in-an-array3628/1',1,2),(5709,'Composite Series','https://www.geeksforgeeks.org/problems/composite-series1258/1',4,2),(5710,'Bit\'s basic operations','https://www.geeksforgeeks.org/problems/bits-basic-operations/1',2,2),(5711,'Xoring and Clearing - Java','https://www.geeksforgeeks.org/problems/xoring-and-clearing-java/1',1,2),(5712,'Efficiently sorting numbers in range from 0 to n^2 - 1','https://www.geeksforgeeks.org/problems/efficiently-sorting-number-from-0-to-n2-15444/1',2,2),(5713,'Java Collections | Set 7 (LinkedList)','https://www.geeksforgeeks.org/problems/java-collections-set-7-linkedlist/1',1,2),(5714,'Geek\'s Weight','https://www.geeksforgeeks.org/problems/ishaans-weight0106/1',4,2),(5715,'Maximum Nesting Depth of the Parentheses','https://www.geeksforgeeks.org/problems/maximum-nesting-depth-of-the-parentheses/1',1,2),(5716,'Minimum four sum subsequence','https://www.geeksforgeeks.org/problems/minimum-four-sum-subsequence/1',2,2),(5717,'Count Multiples of Square Numbers','https://www.geeksforgeeks.org/problems/square-numbers1954/1',2,2),(5718,'Collection of pens','https://www.geeksforgeeks.org/problems/collection-of-pens1843/1',1,2),(5719,'Message decoding','https://www.geeksforgeeks.org/problems/message-decoding4305/1',4,2),(5720,'Buy Stock with Transaction Fee','https://www.geeksforgeeks.org/problems/buy-stock-with-transaction-fee/1',2,2),(5721,'Happiest Triplet','https://www.geeksforgeeks.org/problems/happiest-triplet2921/1',2,2),(5722,'Lucas Number','https://www.geeksforgeeks.org/problems/lucas-number4515/1',1,2),(5723,'Card Rotation','https://www.geeksforgeeks.org/problems/card-rotation5834/1',2,2),(5724,'Sort the fest','https://www.geeksforgeeks.org/problems/sort-the-fest0016/1',4,2),(5725,'Marks of PCM','https://www.geeksforgeeks.org/problems/marks-of-pcm2529/1',2,2),(5726,'Number of pairs with maximum sum','https://www.geeksforgeeks.org/problems/number-of-pairs-with-maximum-sum2924/1',1,2),(5727,'Difference between sums of odd and even digits','https://www.geeksforgeeks.org/problems/difference-between-sums-of-odd-and-even-digits2837/1',4,2),(5728,'Find (a^b)%m','https://www.geeksforgeeks.org/problems/find-abm3912/1',1,2),(5729,'Java Interface','https://www.geeksforgeeks.org/problems/java-interface/1',4,2),(5730,'Tracks','https://www.geeksforgeeks.org/problems/tracks0436/1',1,2),(5731,'Common Subsequence OldP','https://www.geeksforgeeks.org/problems/common-subsequence-oldp3752/1',1,2),(5732,'Taking 1 out of 3 consecutives','https://www.geeksforgeeks.org/problems/taking-1-out-of-3-consecutives4606/1',2,2),(5733,'Factor OR Multiple','https://www.geeksforgeeks.org/problems/factor-or-multiple1128/1',4,2),(5734,'K closest point to origin','https://www.geeksforgeeks.org/problems/product-array-puzzle4634/1',2,2),(5735,'Maximum weight difference','https://www.geeksforgeeks.org/problems/maximum-weight-difference5036/1',1,2),(5736,'Check if divisible by 10','https://www.geeksforgeeks.org/problems/check-if-divisible-by-103743/1',1,2),(5737,'The XOR Gate','https://www.geeksforgeeks.org/problems/the-xor-gate0918/1',4,2),(5738,'King\'s War','https://www.geeksforgeeks.org/problems/kings-war2448/1',1,2),(5739,'Large number division','https://www.geeksforgeeks.org/problems/large-number-division0207/1',1,2),(5740,'Pairs with Difference less than K','https://www.geeksforgeeks.org/problems/pairs-with-difference-less-than-k1348/1',1,2),(5741,'Maximum selections','https://www.geeksforgeeks.org/problems/maximum-selections--170637/1',2,2),(5742,'K-th distinct element','https://www.geeksforgeeks.org/problems/k-th-distinct-element4510/1',4,2),(5743,'Perfect Cubes in a Range','https://www.geeksforgeeks.org/problems/perfect-cubes-in-a-range3933/1',4,2),(5744,'XOR play','https://www.geeksforgeeks.org/problems/xor-play1544/1',4,2),(5745,'Compute Before Matrix','https://www.geeksforgeeks.org/problems/compute-before-matrix--170637/1',2,2),(5746,'Distinct Adjacent Element','https://www.geeksforgeeks.org/problems/distinct-adjacent-element2121/1',4,2),(5747,'The Modulo Task','https://www.geeksforgeeks.org/problems/the-modulo-task1736/1',4,2),(5748,'Kth Smallest Number in Multiplication Table','https://www.geeksforgeeks.org/problems/kth-smallest-number-in-multiplication-table/1',3,2),(5749,'Gray Code ','https://www.geeksforgeeks.org/problems/gray-code4907/1',4,2),(5750,'Part of it.','https://www.geeksforgeeks.org/problems/part-of-it1016/1',2,2),(5751,'Maximum sum difference','https://www.geeksforgeeks.org/problems/maximum-sum-difference2545/1',1,2),(5752,'Evaluate the expression','https://www.geeksforgeeks.org/problems/evaluate-the-expression0307/1',4,2),(5753,'Combine the strings','https://www.geeksforgeeks.org/problems/combine-the-strings3459/1',2,2),(5754,'Fraction Trouble','https://www.geeksforgeeks.org/problems/fraction-trouble1410/1',1,2),(5755,'Distinct Elements in a Stream','https://www.geeksforgeeks.org/problems/distinct-elements-in-a-stream1557/1',4,2),(5756,'Check whether two numbers differ at one bit position only','https://www.geeksforgeeks.org/problems/check-whether-two-numbers-differ-at-one-bit-position-only3415/1',4,2),(5757,'Stuffs Division','https://www.geeksforgeeks.org/problems/stuffs-division5735/1',1,2),(5758,'Right angled  triangles','https://www.geeksforgeeks.org/problems/right-angled-triangles4729/1',1,2),(5759,'Damon Prime','https://www.geeksforgeeks.org/problems/damon-prime4930/1',1,2),(5760,'Sum of permutations','https://www.geeksforgeeks.org/problems/sum-of-permutations/1',2,2),(5761,'Remove minimum number of elements','https://www.geeksforgeeks.org/problems/remove-minimum-number-of-elements4032/1',1,2),(5762,'Java Collection | Set 2 (Set)','https://www.geeksforgeeks.org/problems/java-collection-set-2-set/1',1,2),(5763,'Power of Largest Prime','https://www.geeksforgeeks.org/problems/power-of-largest-prime3452/1',2,2),(5764,'C++ complex number addition (operator overloading)','https://www.geeksforgeeks.org/problems/c-complex-number-addition-operator-overloading/1',1,2),(5765,'Bitwise AND of the Array','https://www.geeksforgeeks.org/problems/bitwise-and-of-the-array--170633/1',2,2),(5766,'Count numbers','https://www.geeksforgeeks.org/problems/count-numbers2004/1',1,2),(5767,'Reading books','https://www.geeksforgeeks.org/problems/reading-books3803/1',4,2),(5768,'Modified Fibonacci ','https://www.geeksforgeeks.org/problems/modified-fibonacci4449/1',1,2),(5769,'Partition Point in the Array','https://www.geeksforgeeks.org/problems/partition-point-in-the-array0004/1',1,2),(5770,'Discovering Atlantis','https://www.geeksforgeeks.org/problems/cycle-race3338/1',1,2),(5771,'Number of pairs','https://www.geeksforgeeks.org/problems/number-of-pairs-1645358985/1',3,2),(5772,'Java Exception Handling','https://www.geeksforgeeks.org/problems/java-exception-handling/1',1,2),(5773,'First Digit','https://www.geeksforgeeks.org/problems/first-digit1751/1',2,2),(5774,'Moving on grid','https://www.geeksforgeeks.org/problems/moving-on-grid1135/1',2,2),(5775,'Sum Terms Nth Row','https://www.geeksforgeeks.org/problems/sum-terms-nth-row3128/1',4,2),(5776,'Strange Sort','https://www.geeksforgeeks.org/problems/strange-sort4316/1',1,2),(5777,'Form coils in a matrix','https://www.geeksforgeeks.org/problems/form-coils-in-a-matrix4726/1',2,2),(5778,'Reverse alternate words','https://www.geeksforgeeks.org/problems/c-alternate-words-in-reverse-order0653/1',1,2),(5779,'Product of two digit numbers','https://www.geeksforgeeks.org/problems/product-of-two-digit-numbers1658/1',1,2),(5780,'Extraction of secret message','https://www.geeksforgeeks.org/problems/extraction-of-secret-message0616/1',4,2),(5781,'Learning Output','https://www.geeksforgeeks.org/problems/learning-output4058/1',4,2),(5782,'Max Odd Sum','https://www.geeksforgeeks.org/problems/max-odd-sum0651/1',4,2),(5783,'Maximum Sum Path in Two Arrays','https://www.geeksforgeeks.org/problems/maximum-sum-path-in-two-arrays5314/1',2,2),(5784,'Y shaped pattern','https://www.geeksforgeeks.org/problems/y-shaped-pattern4351/1',1,2),(5785,'Count Divisors of Factorial','https://www.geeksforgeeks.org/problems/count-divisors-of-factorial4508/1',2,2),(5786,'Decode It','https://www.geeksforgeeks.org/problems/decode-it1646/1',1,2),(5787,'Is digital root of N a prime?','https://www.geeksforgeeks.org/problems/is-digital-root-of-n-a-prime2522/1',4,2),(5788,'Large Factorials','https://www.geeksforgeeks.org/problems/large-factorials2539/1',2,2),(5789,'set-bits and number','https://www.geeksforgeeks.org/problems/got-tv-series3124/1',4,2),(5790,'Pair in Java','https://www.geeksforgeeks.org/problems/pair-in-java/1',1,2),(5791,'Trimorphic Number','https://www.geeksforgeeks.org/problems/trimorphic-number3553/1',4,2),(5792,'String of Commons','https://www.geeksforgeeks.org/problems/string-of-commons4503/1',4,2),(5793,'Pair the minimum','https://www.geeksforgeeks.org/problems/pair-the-minimum5535/1',1,2),(5794,'Sum of Consecutives','https://www.geeksforgeeks.org/problems/sum-of-consecutives1030/1',4,2),(5795,'Modulus of two double numbers','https://www.geeksforgeeks.org/problems/modulus-of-two-double-numbers5159/1',4,2),(5796,'Sum Triangle for given array','https://www.geeksforgeeks.org/problems/sum-triangle-for-given-array1159/1',4,2),(5797,'Interesting Patterns','https://www.geeksforgeeks.org/problems/interesting-patterns1430/1',4,2),(5798,'Tidy Number','https://www.geeksforgeeks.org/problems/tidy-number0519/1',4,2),(5799,'Maximum Bipartite Matching','https://www.geeksforgeeks.org/problems/maximum-bipartite-matching/1',2,2),(5800,'Greater and Smaller Ones','https://www.geeksforgeeks.org/problems/greater-and-smaller-ones/1',1,2),(5801,'Numbers with 0 as a digit','https://www.geeksforgeeks.org/problems/numbers-with-0-as-a-digit1336/1',2,2),(5802,'Fizz Buzz','https://www.geeksforgeeks.org/problems/fizz-buzz/1',1,2),(5803,'Sum of product of all pairs','https://www.geeksforgeeks.org/problems/sum-of-product-of-all-pairs0927/1',1,2),(5804,'Balance with respect to an array','https://www.geeksforgeeks.org/problems/balance-with-respect-to-an-array5443/1',1,2),(5805,'Raju and coins','https://www.geeksforgeeks.org/problems/raju-and-coins1932/1',1,2),(5806,'Maximum Product Cutting','https://www.geeksforgeeks.org/problems/maximum-product-cutting4522/1',1,2),(5807,'XOR Count Zero and One','https://www.geeksforgeeks.org/problems/xor-count-zero-and-one2724/1',4,2),(5808,'Just One Mismatch','https://www.geeksforgeeks.org/problems/just-one-mismatch1714/1',4,2),(5809,'Sum of all sub-sequences of a number','https://www.geeksforgeeks.org/problems/sum-of-all-sub-sequences-of-a-number3437/1',4,2),(5810,'C++ STL | Set 7 (unordered map)','https://www.geeksforgeeks.org/problems/c-stl-set-7-unordered-map/1',4,2),(5811,'Elixir of Life','https://www.geeksforgeeks.org/problems/elixir-of-life--141631/1',3,2),(5812,'Minimum steps to delete a string','https://www.geeksforgeeks.org/problems/minimum-steps-to-delete-a-string2956/1',2,2),(5813,'Nth digit of pi','https://www.geeksforgeeks.org/problems/nth-digit-of-pie5851/1',3,2),(5814,'The Non-repetitive String','https://www.geeksforgeeks.org/problems/the-non-repetitive-string5955/1',1,2),(5815,'Find the missing no in string','https://www.geeksforgeeks.org/problems/find-the-missing-no-in-string/1',2,2),(5816,'Sum of length','https://www.geeksforgeeks.org/problems/sum-of-length3345/1',1,2),(5817,'Recursively find sum of digits','https://www.geeksforgeeks.org/problems/recursively-find-sum-of-digits3558/1',1,2),(5818,'Empty The Tank','https://www.geeksforgeeks.org/problems/empty-the-tank3831/1',1,2),(5819,'Check if any valid sequence is divisible by M','https://www.geeksforgeeks.org/problems/check-if-any-valid-sequence-is-divisible-by-m1114/1',2,2),(5820,'Find Unique pair in an array with pairs of numbers','https://www.geeksforgeeks.org/problems/find-unique-pair-in-an-array-with-pairs-of-numbers2425/1',1,2),(5821,'Palindromic Series','https://www.geeksforgeeks.org/problems/palindromic-series5346/1',1,2),(5822,'Number of ways to find two numbers','https://www.geeksforgeeks.org/problems/number-of-ways-to-find-two-numbers2840/1',1,2),(5823,'Money Distributions','https://www.geeksforgeeks.org/problems/money-distributions5924/1',2,2),(5824,'Unusual String Sort','https://www.geeksforgeeks.org/problems/unusual-string-sort0405/1',1,2),(5825,'Number of divisors in a given range ','https://www.geeksforgeeks.org/problems/number-of-divisors-in-a-given-range3738/1',1,2),(5826,'Ladoo problem','https://www.geeksforgeeks.org/problems/ladoo-problem2929/1',4,2),(5827,'Choose and Swap','https://www.geeksforgeeks.org/problems/choose-and-swap5932/1',1,2),(5828,'Count Substring','https://www.geeksforgeeks.org/problems/count-substring/1',2,2),(5829,'Compute sum of digits in all numbers from 1 to n','https://www.geeksforgeeks.org/problems/compute-sum-of-digits-in-all-numbers-from-1-to-n2855/1',1,2),(5830,'Rearrange the array','https://www.geeksforgeeks.org/problems/rearrange-the-array-1639032648/1',3,2),(5831,'Minimum edges','https://www.geeksforgeeks.org/problems/minimum-edges/1',2,2),(5832,'Sum of subarray ranges','https://www.geeksforgeeks.org/problems/sum-of-subarray-ranges/1',2,2),(5833,'Largest Permutation','https://www.geeksforgeeks.org/problems/largest-permutation1351/1',1,2),(5834,'No of Carry Operations ','https://www.geeksforgeeks.org/problems/no-of-carry-operations0456/1',4,2),(5835,'Sonam Bewafa asks questions','https://www.geeksforgeeks.org/problems/sonam-bewafa-asks-questions3815/1',2,2),(5836,'C++ STL Deque','https://www.geeksforgeeks.org/problems/c-stl-deque/1',4,2),(5837,'Swapping Triangles','https://www.geeksforgeeks.org/problems/swapping-triangles5209/1',4,2),(5838,'nth digit of Fibonacci ','https://www.geeksforgeeks.org/problems/nth-digit-of-fibonacci1449/1',4,2),(5839,'Stable Sort and Position','https://www.geeksforgeeks.org/problems/stable-sort-and-position1359/1',4,2),(5840,'Minimum move to front operations','https://www.geeksforgeeks.org/problems/minimum-move-to-front-operations2232/1',4,2),(5841,'Neeman\'s Shoes','https://www.geeksforgeeks.org/problems/neemans-shoes/1',2,2),(5842,'Minimum Time','https://www.geeksforgeeks.org/problems/minimum-time1238/1',2,2),(5843,'Jumbled Strings','https://www.geeksforgeeks.org/problems/jumbled-strings0431/1',2,2),(5844,'Count minimum right flips to set all values in an array','https://www.geeksforgeeks.org/problems/faulty-wiring-and-bulbs2939/1',1,2),(5845,'Primorial of a number','https://www.geeksforgeeks.org/problems/primorial-of-a-number3830/1',1,2),(5846,'Java Collections | Set 6 (Stack)','https://www.geeksforgeeks.org/problems/java-collections-set-1-stack5707/1',1,2),(5847,'Divisor Product','https://www.geeksforgeeks.org/problems/divisor-product2236/1',1,2),(5848,'GCD and Fibonacci Numbers','https://www.geeksforgeeks.org/problems/gcd-and-fibonacci-numbers4351/1',1,2),(5849,'Maximum Product of Increasing Subsequence of Size 3','https://www.geeksforgeeks.org/problems/maximum-product-of-increasing-subsequence-of-size-3-1587115620/1',2,2),(5850,'Sixy Primes','https://www.geeksforgeeks.org/problems/sexy-primes3341/1',1,2),(5851,'Maximum number of partitions that can be sorted individually to make sorted','https://www.geeksforgeeks.org/problems/maximum-number-of-partitions-that-can-be-sorted-individually-to-make-sorted2926/1',1,2),(5852,'Valentine Sum','https://www.geeksforgeeks.org/problems/valentine-sum--141631/1',2,2),(5853,'Number of palindromic strings','https://www.geeksforgeeks.org/problems/number-of-palindromic-strings2706/1',2,2),(5854,'Prime Palindrome Sum','https://www.geeksforgeeks.org/problems/prime-palindrome-sum3700/1',4,2),(5855,'All numbers with specific difference','https://www.geeksforgeeks.org/problems/all-numbers-with-specific-difference3558/1',3,2),(5856,'Mansi and her series','https://www.geeksforgeeks.org/problems/mansi-and-her-series4249/1',1,2),(5857,'Sophie Germain Prime','https://www.geeksforgeeks.org/problems/sophie-germain-prime2014/1',4,2),(5858,'Break Numbers[Duplicate problem]','https://www.geeksforgeeks.org/problems/break-numbers0435/1',1,2),(5859,'Equal Point in Sorted Array','https://www.geeksforgeeks.org/problems/equal-point-in-sorted-array0040/1',1,2),(5860,'Divisible Numbers','https://www.geeksforgeeks.org/problems/divisible-numbers1521/1',1,2),(5861,'Count of substrings containing K ones','https://www.geeksforgeeks.org/problems/count-of-substrings-containing-k-ones2304/1',2,2),(5862,'Ishwar and his proposals','https://www.geeksforgeeks.org/problems/ishwar-and-his-proposals1140/1',4,2),(5863,'Maximum sum of elements not part of LIS','https://www.geeksforgeeks.org/problems/maximum-sum-of-elements-not-part-of-lis/1',2,2),(5864,'N-divisors','https://www.geeksforgeeks.org/problems/n-divisors5123/1',1,2),(5865,'Minimum rotations to unlock a circular lock','https://www.geeksforgeeks.org/problems/minimum-rotations-to-unlock-a-circular-lock1001/1',1,2),(5866,'Incomplete Array','https://www.geeksforgeeks.org/problems/incomplete-array3859/1',1,2),(5867,'Semi Prime','https://www.geeksforgeeks.org/problems/semi-prime4736/1',1,2),(5868,'Convert from any base to decimal','https://www.geeksforgeeks.org/problems/convert-from-any-base-to-decimal3736/1',4,2),(5869,'Narcissistic number','https://www.geeksforgeeks.org/problems/narcissistic-number4852/1',4,2),(5870,'Maximum calorie','https://www.geeksforgeeks.org/problems/maximum-calorie0056/1',2,2),(5871,'Number of Integer solutions','https://www.geeksforgeeks.org/problems/number-of-integer-solutions2458/1',4,2),(5872,'Number of subsequences in a string divisible by n','https://www.geeksforgeeks.org/problems/number-of-subsequences-in-a-string-divisible-by-n5947/1',2,2),(5873,'Longest common substring value of two numbers','https://www.geeksforgeeks.org/problems/longest-common-substring-value-of-two-numbers3806/1',2,2),(5874,'Dull Jack','https://www.geeksforgeeks.org/problems/dull-jack1909/1',4,2),(5875,'Next sparse binary number','https://www.geeksforgeeks.org/problems/next-sparse-binary-number0029/1',1,2),(5876,'Project Manager','https://www.geeksforgeeks.org/problems/project-manager--141631/1',2,2),(5877,'Sphenic Number','https://www.geeksforgeeks.org/problems/sphenic-number5922/1',1,2),(5878,'Longest Increasing subarray','https://www.geeksforgeeks.org/problems/sachins-love-for-runs2217/1',1,2),(5879,'Repeated Sum and then Multiply','https://www.geeksforgeeks.org/problems/repated-sum-and-then-multiply1046/1',4,2),(5880,'Numbers with alternative 1\'s','https://www.geeksforgeeks.org/problems/numbers-with-alternative-1s4819/1',2,2),(5881,'N trailing zeroes in factorials','https://www.geeksforgeeks.org/problems/n-trailing-zeroes-in-factorials5345/1',2,2),(5882,'Minimum Steps','https://www.geeksforgeeks.org/problems/minimum-steps1159/1',1,2),(5883,'Palindromic  Strings','https://www.geeksforgeeks.org/problems/palindromic-strings2555/1',2,2),(5884,'Split the string','https://www.geeksforgeeks.org/problems/split-the-string2424/1',1,2),(5885,'Modify array to maximize sum of adjacent differences','https://www.geeksforgeeks.org/problems/modify-array-to-maximize-sum-of-adjacent-differences1729/1',2,2),(5886,'Total digits','https://www.geeksforgeeks.org/problems/total-digits4030/1',4,2),(5887,'Circle and Lattice Points','https://www.geeksforgeeks.org/problems/circle-and-lattice-points4257/1',1,2),(5888,'Positive distinct count','https://www.geeksforgeeks.org/problems/absolute-distinct-count5118/1',1,2),(5889,'Nitika and her queries','https://www.geeksforgeeks.org/problems/nitika-and-her-queries4804/1',2,2),(5890,'First and last Bit','https://www.geeksforgeeks.org/problems/first-and-last-bit2357/1',4,2),(5891,'Divisibility by 999','https://www.geeksforgeeks.org/problems/divisibility-by-9990149/1',1,2),(5892,'Integral Root','https://www.geeksforgeeks.org/problems/akaashs-assignment0828/1',1,2),(5893,'Minimum number of swaps needed ','https://www.geeksforgeeks.org/problems/minimum-number-of-swaps-needed2136/1',1,2),(5894,'Tricky Sorting Cost','https://www.geeksforgeeks.org/problems/morning-assembly3038/1',1,2),(5895,'Substring - Subsequence problem','https://www.geeksforgeeks.org/problems/substring-subsequence-problem1631/1',2,2),(5896,'Pair Sum Existence- Revisited','https://www.geeksforgeeks.org/problems/pair-sum-existence-revisited/1',1,2),(5897,'AND operation','https://www.geeksforgeeks.org/problems/and-operation5726/1',1,2),(5898,'Minimum sum of factors','https://www.geeksforgeeks.org/problems/minimum-sum-of-factors5829/1',4,2),(5899,'Cereals Box','https://www.geeksforgeeks.org/problems/cereals-box0644/1',1,2),(5900,'Element in a Sequence','https://www.geeksforgeeks.org/problems/element-in-a-series0807/1',1,2),(5901,'Required Rooms','https://www.geeksforgeeks.org/problems/required-rooms3939/1',1,2),(5902,'Find the element at given index','https://www.geeksforgeeks.org/problems/find-the-element-at-given-index4630/1',2,2),(5903,'Maximum Height Tree','https://www.geeksforgeeks.org/problems/maximum-height-tree4803/1',1,2),(5904,'Partition Array for Maximum Sum','https://www.geeksforgeeks.org/problems/partition-array-for-maximum-sum/1',2,2),(5905,'Swap the closest and farthest digits','https://www.geeksforgeeks.org/problems/swap-the-closest-and-farthest-digits1654/1',1,2),(5906,'Max and Min Products','https://www.geeksforgeeks.org/problems/max-and-min-products3347/1',2,2),(5907,'Smallest number with maximum and minimum divisor in an array','https://www.geeksforgeeks.org/problems/weak-maths0559/1',4,2),(5908,'Prime Adjacent','https://www.geeksforgeeks.org/problems/gambling-stark3304/1',1,2),(5909,'Construct binary palindrome by repeated appending and trimming','https://www.geeksforgeeks.org/problems/construct-binary-palindrome-by-repeated-appending-and-trimming1005/1',2,2),(5910,'Geek in a Maze','https://www.geeksforgeeks.org/problems/geek-in-a-maze--141631/1',2,2),(5911,'Unique DigitSum','https://www.geeksforgeeks.org/problems/lucky-ishaan0443/1',1,2),(5912,'Find pairs with given relation','https://www.geeksforgeeks.org/problems/find-pairs-with-given-relation1540/1',1,2),(5913,'Sum of digits in factorial of a number','https://www.geeksforgeeks.org/problems/sum-of-digits-in-factorial-of-a-number/1',1,2),(5914,'Pizza Mania','https://www.geeksforgeeks.org/problems/pizza-mania0155/1',2,2),(5915,'Largest power of prime','https://www.geeksforgeeks.org/problems/largest-power-of-prime4416/1',1,2),(5916,'Bitwise OR in a given Range','https://www.geeksforgeeks.org/problems/ishaans-curiosity0853/1',1,2),(5917,'Maximum Handshakes','https://www.geeksforgeeks.org/problems/find-the-maximum-number-of-handshakes2349/1',4,2),(5918,'Form a Triangle','https://www.geeksforgeeks.org/problems/form-a-triangle5935/1',1,2),(5919,'Implement Lower Bound','https://www.geeksforgeeks.org/problems/implement-lower-bound/1',1,2),(5920,'Beautiful SubSequence','https://www.geeksforgeeks.org/problems/beautiful-subsequence5222/1',2,2),(5921,'Check if date is valid','https://www.geeksforgeeks.org/problems/check-if-date-is-valid0050/1',4,2),(5922,'Odd Divisors','https://www.geeksforgeeks.org/problems/odd-divisors5347/1',4,2),(5923,'Smallest Subarray GCD','https://www.geeksforgeeks.org/problems/smallest-sub-array4107/1',2,2),(5924,'Kaprekar Number','https://www.geeksforgeeks.org/problems/kaprekar-number1051/1',1,2),(5925,'Maximum value','https://www.geeksforgeeks.org/problems/maximum-value5946/1',1,2),(5926,'Even Subsets - Java','https://www.geeksforgeeks.org/problems/even-subsets-java/1',1,2),(5927,'Linked List Insertion At Beginning','https://www.geeksforgeeks.org/problems/linked-list-insertion-at-beginning/1',1,2),(5928,'Candy Packets','https://www.geeksforgeeks.org/problems/candy-packetssample-test-case-file-to-be-added1632/1',1,2),(5929,'Letter Writer ','https://www.geeksforgeeks.org/problems/letter-writer0420/1',1,2),(5930,'Mr. Modulo and Arrays','https://www.geeksforgeeks.org/problems/mr-modulo-and-arrays2827/1',2,2),(5931,'Java Collections | Set 9 (Queue)','https://www.geeksforgeeks.org/problems/java-collections-set-9-queue/1',4,2),(5932,'Euler Totient','https://www.geeksforgeeks.org/problems/euler-totient2036/1',1,2),(5933,'Number of 1\'s in smallest repunits','https://www.geeksforgeeks.org/problems/number-of-1s-in-smallest-repunits3114/1',1,2),(5934,'Race in Fooland','https://www.geeksforgeeks.org/problems/race-in-fooland4522/1',1,2),(5935,'Equalization of an array','https://www.geeksforgeeks.org/problems/equalization-of-an-array1656/1',1,2),(5936,'Powers game','https://www.geeksforgeeks.org/problems/powers-game3701/1',1,2),(5937,'Maximum product','https://www.geeksforgeeks.org/problems/maximum-product4633/1',1,2),(5938,'Maximum number of overlapping Intervals','https://www.geeksforgeeks.org/problems/intersecting-intervals/1',3,2),(5939,'Almost Prime Numbers','https://www.geeksforgeeks.org/problems/almost-prime-numbers/1',1,2),(5940,'Adam Number','https://www.geeksforgeeks.org/problems/adam-number2650/1',4,2),(5941,'Three consecutive duplicates','https://www.geeksforgeeks.org/problems/three-consecutive-duplicates2434/1',1,2),(5942,'Demonitisation','https://www.geeksforgeeks.org/problems/demonitisation0013/1',4,2),(5943,'Next higher number in one swap','https://www.geeksforgeeks.org/problems/next-higher-number-in-one-swap1703/1',2,2),(5944,'Make Co-prime Array','https://www.geeksforgeeks.org/problems/make-coprime-array3058/1',4,2),(5945,'Cut woods','https://www.geeksforgeeks.org/problems/cut-woods/1',3,2),(5946,'Sum of Digit Modified','https://www.geeksforgeeks.org/problems/sum-of-digit-modified1409/1',4,2),(5947,'Odd Game','https://www.geeksforgeeks.org/problems/odd-game5040/1',1,2),(5948,'Shortest Range In BST','https://www.geeksforgeeks.org/problems/shortest-range-in-bst--141631/1',3,2),(5949,'Coins and Game','https://www.geeksforgeeks.org/problems/coins-and-game4529/1',2,2),(5950,'Bitwise AND of the Array','https://www.geeksforgeeks.org/problems/bitwise-and-of-the-array--170634/1',2,2),(5951,'Number of Triangles','https://www.geeksforgeeks.org/problems/number-of-triangles/1',1,2),(5952,'Pick Values','https://www.geeksforgeeks.org/problems/pick-values4112/1',2,2),(5953,'Pallindrome Patterns','https://www.geeksforgeeks.org/problems/pallindrome-patterns0809/1',2,2),(5954,'Finding-Pairs','https://www.geeksforgeeks.org/problems/finding-pairs2835/1',1,2),(5955,'Printing Maximum Sum Increasing Subsequence','https://www.geeksforgeeks.org/problems/printing-maximum-sum-increasing-subsequence4903/1',2,2),(5956,'Remainder of array multiplication','https://www.geeksforgeeks.org/problems/remainder-of-array-multiplication0140/1',1,2),(5957,'Binary Searchable elements','https://www.geeksforgeeks.org/problems/binary-searchable-elements/1',2,2),(5958,'Save Knights','https://www.geeksforgeeks.org/problems/save-knights2718/1',1,2),(5959,'Count the pairs with maximum difference','https://www.geeksforgeeks.org/problems/count-the-pairs-with-maximum-difference4807/1',1,2),(5960,'Find the last digit when factorial of A divides factorial of B','https://www.geeksforgeeks.org/problems/find-the-last-digit-when-factorial-of-a-divides-factorial-of-b5438/1',2,2),(5961,'Completing tasks','https://www.geeksforgeeks.org/problems/completing-tasks0454/1',1,2),(5962,'Equalize the Towers','https://www.geeksforgeeks.org/problems/equalize-the-towers2804/1',2,2),(5963,'Greedy Fox','https://www.geeksforgeeks.org/problems/greedy-fox1555/1',1,2),(5964,'Java Collection | Set 5 (LinkedHash Set)','https://www.geeksforgeeks.org/problems/java-collection-set-5-linkedhash-set/1',4,2),(5965,'Convert the string','https://www.geeksforgeeks.org/problems/convert-the-string1022/1',1,2),(5966,'Even-Odd turn game','https://www.geeksforgeeks.org/problems/even-odd-turn-game1832/1',4,2),(5967,'Java Date and Day','https://www.geeksforgeeks.org/problems/java-date-and-day5024/1',4,2),(5968,'Summing the Sum','https://www.geeksforgeeks.org/problems/summing-the-sum2105/1',1,2),(5969,'Construct a Full Binary Tree','https://www.geeksforgeeks.org/problems/construct-a-full-binary-tree/1',2,2),(5970,'Count digits in given number N which divide N','https://www.geeksforgeeks.org/problems/count-digits-in-given-number-n-which-divide-n3331/1',4,2),(5971,'Rearrange string as alternate x and y occurences','https://www.geeksforgeeks.org/problems/rearrange-string-as-alternate-x-and-y-occurences3835/1',1,2),(5972,'Connected Components in an Undirected Graph','https://www.geeksforgeeks.org/problems/connected-components-in-an-undirected-graph/1',2,2),(5973,'Find the nth number in the sequence ','https://www.geeksforgeeks.org/problems/find-the-nth-number-in-the-sequence2245/1',4,2),(5974,'Divisibility','https://www.geeksforgeeks.org/problems/divisibility3832/1',2,2),(5975,'Missing Point of a Parallelogram','https://www.geeksforgeeks.org/problems/missing-point-of-a-parallelogram0146/1',2,2),(5976,'Shortest Prime Path','https://www.geeksforgeeks.org/problems/shortest-prime-path--141632/1',2,2),(5977,'Grouping values','https://www.geeksforgeeks.org/problems/ana-and-sweets5331/1',1,2),(5978,'Sum of GCDs','https://www.geeksforgeeks.org/problems/sum-of-gcds1050/1',1,2),(5979,'Your Social Network','https://www.geeksforgeeks.org/problems/your-social-network0328/1',2,2),(5980,'Pass the semester','https://www.geeksforgeeks.org/problems/pass-the-semester2515/1',2,2),(5981,'Buy chocolates and save N rupees','https://www.geeksforgeeks.org/problems/azad-and-chocolates4845/1',4,2),(5982,'The Light Problem','https://www.geeksforgeeks.org/problems/the-light-problem4217/1',1,2),(5983,'Maximum distance in a string','https://www.geeksforgeeks.org/problems/sonam-gupta-and-her-boyfriend5310/1',1,2),(5984,'Minimize Cash Flow','https://www.geeksforgeeks.org/problems/minimize-cash-flow/1',2,2),(5985,'Maximum Collatz sequence length','https://www.geeksforgeeks.org/problems/maximum-collatz-sequence-length5849/1',1,2),(5986,'Game of cells','https://www.geeksforgeeks.org/problems/game-of-cells3700/1',1,2),(5987,'Print the Sequence','https://www.geeksforgeeks.org/problems/arithmetic-progression3351/1',2,2),(5988,'Count number of equal pairs in a string','https://www.geeksforgeeks.org/problems/count-number-of-equal-pairs-in-a-string0520/1',4,2),(5989,'Binary Addition of 1','https://www.geeksforgeeks.org/problems/dr-stranges-powers3333/1',4,2),(5990,'Generate all palindromic numbers less than n','https://www.geeksforgeeks.org/problems/generate-all-palindromic-numbers-less-than-n3251/1',1,2),(5991,'Ordered Prime Signature','https://www.geeksforgeeks.org/problems/ordered-prime-signature3247/1',1,2),(5992,'Numbers having alternate bits','https://www.geeksforgeeks.org/problems/product-of-digits4348/1',4,2),(5993,'Java Generic Class','https://www.geeksforgeeks.org/problems/java-generic-class/1',4,2),(5994,'Arrange Balls','https://www.geeksforgeeks.org/problems/arrange-balls0052/1',2,2),(5995,'Non Fibonacci Number','https://www.geeksforgeeks.org/problems/non-fibonacci-number2258/1',1,2),(5996,'Find n-th Fortunate Number','https://www.geeksforgeeks.org/problems/find-n-th-fortunate-number5740/1',1,2),(5997,'Mathematical manipulation','https://www.geeksforgeeks.org/problems/mathematical-manipulation2005/1',2,2),(5998,'Non-decreasing subsequence','https://www.geeksforgeeks.org/problems/non-decreasing-subsequence5737/1',2,2),(5999,'Set all odd bits','https://www.geeksforgeeks.org/problems/set-all-odd-bits1900/1',4,2),(6000,'Dimensions of Rectangle','https://www.geeksforgeeks.org/problems/dimensions-of-rectangle5440/1',2,2),(6001,'Numbers containing 0\'s from 1 to N','https://www.geeksforgeeks.org/problems/numbers-containing-0s-from-1-to-n4704/1',4,2),(6002,'Pair with largest sum which is less than K in the array','https://www.geeksforgeeks.org/problems/pair-with-largest-sum-which-is-less-than-k-in-the-array/1',1,2),(6003,'Perfect XOR','https://www.geeksforgeeks.org/problems/anands-maths-question3540/1',1,2),(6004,'Find X and Y in Linear Equation','https://www.geeksforgeeks.org/problems/find-x-and-y-in-linear-equation1334/1',4,2),(6005,'Minimum element whose N-th power is greater than product of an array','https://www.geeksforgeeks.org/problems/minimum-element-whose-n-th-power-is-greater-than-product-of-an-array4640/1',1,2),(6006,'Money Division','https://www.geeksforgeeks.org/problems/money-division3219/1',1,2),(6007,'Lexicographically Previous Permutation','https://www.geeksforgeeks.org/problems/lexicographically-previous-permutation3620/1',1,2),(6008,'Mr. Binary','https://www.geeksforgeeks.org/problems/mr-binary1141/1',1,2),(6009,'Weird Number','https://www.geeksforgeeks.org/problems/weird-number0933/1',4,2),(6010,'Pell Number','https://www.geeksforgeeks.org/problems/pell-number1424/1',1,2),(6011,'Ishaan\'s Sum Problem','https://www.geeksforgeeks.org/problems/ishaans-sum-problem0934/1',4,2),(6012,'Long Long Decimal','https://www.geeksforgeeks.org/problems/long-long-decimal4552/1',4,2),(6013,'Binary representation of previous number','https://www.geeksforgeeks.org/problems/binary-representation-of-previous-number0638/1',4,2),(6014,'Last Moment Before All Ants Fall Out of a Plank','https://www.geeksforgeeks.org/problems/last-moment-before-all-ants-fall-out-of-a-plank/1',2,2),(6015,'Maximum distance','https://www.geeksforgeeks.org/problems/maximum-distance3248/1',4,2),(6016,'An Easy problem','https://www.geeksforgeeks.org/problems/an-easy-problem0811/1',4,2),(6017,'Palindromic Subsequences','https://www.geeksforgeeks.org/problems/palindromic-subsequences1335/1',1,2),(6018,'Make Number Odd','https://www.geeksforgeeks.org/problems/make-number-odd4328/1',1,2),(6019,'Cricket Average','https://www.geeksforgeeks.org/problems/cricket-average2031/1',4,2),(6020,'Max sum submatrix','https://www.geeksforgeeks.org/problems/max-sum-submatrix2725/1',1,2),(6021,'Equal Sums','https://www.geeksforgeeks.org/problems/equal-sums4801/1',1,2),(6022,'Recursively print all sentences that can be formed from list of word lists','https://www.geeksforgeeks.org/problems/recursively-print-all-sentences-that-can-be-formed-from-list-of-word-lists/1',1,2),(6023,'Challenge by Nikitasha','https://www.geeksforgeeks.org/problems/challenge-by-nikitasha3208/1',2,2),(6024,'Flying Jet','https://www.geeksforgeeks.org/problems/flying-jet4644/1',4,2),(6025,'IPL 2021 - Match Day 4','https://www.geeksforgeeks.org/problems/ipl-2021-match-day-4--141634/1',2,2),(6026,'Count Good numbers','https://www.geeksforgeeks.org/problems/count-good-numbers/1',2,2),(6027,'Fibonacci Expression','https://www.geeksforgeeks.org/problems/fibonacci-expression3939/1',1,2),(6028,'Area of intersection of two circles','https://www.geeksforgeeks.org/problems/area-of-intersection-of-two-circles0653/1',1,2),(6029,'Value of polynomial','https://www.geeksforgeeks.org/problems/value-of-polynomial2413/1',1,2),(6030,'Jumping Geek','https://www.geeksforgeeks.org/problems/jumping-geek3420/1',4,2),(6031,'Count subsets having distinct even numbers','https://www.geeksforgeeks.org/problems/count-subsets-having-distinct-even-numbers5726/1',1,2),(6032,'Point lies or not','https://www.geeksforgeeks.org/problems/point-lies-or-not0417/1',4,2),(6033,'Rahul lucky-unlucky','https://www.geeksforgeeks.org/problems/rahul-lucky-unlucky5101/1',1,2),(6034,'Mrs. S- JAVA Bits Set 1','https://www.geeksforgeeks.org/problems/mrs-s-java-bits-set-1/1',4,2),(6035,'Sum Indexes','https://www.geeksforgeeks.org/problems/sum-indexes5459/1',1,2),(6036,'Minimize connections','https://www.geeksforgeeks.org/problems/minimize-connections/1',2,2),(6037,'Divide the number','https://www.geeksforgeeks.org/problems/divide-the-number5320/1',4,2),(6038,'Number of Days','https://www.geeksforgeeks.org/problems/number-of-days4543/1',1,2),(6039,'Count Integral Points','https://www.geeksforgeeks.org/problems/count-integral-points5445/1',2,2),(6040,'Largest number in one swap','https://www.geeksforgeeks.org/problems/largest-number-in-one-swap1520/1',1,2),(6041,'Count Square Submatrices with All Ones','https://www.geeksforgeeks.org/problems/count-square-submatrices-with-all-ones/1',2,2),(6042,'Woodall Number','https://www.geeksforgeeks.org/problems/woodall-number2349/1',1,2),(6043,'The Cycle Game','https://www.geeksforgeeks.org/problems/the-cycle-game4441/1',4,2),(6044,'Evaluate the x + a = b statement','https://www.geeksforgeeks.org/problems/evaluate-the-x-a-b-statement0744/1',4,2),(6045,'Maximum GCD Pair','https://www.geeksforgeeks.org/problems/maximum-gcd-pair3534/1',2,2),(6046,'Convert floating point to natural number','https://www.geeksforgeeks.org/problems/convert-floating-point-to-natural-number3049/1',1,2),(6047,'Largest Divisibility Test','https://www.geeksforgeeks.org/problems/largest-divisibility-test3444/1',2,2),(6048,'The Remaining Cake','https://www.geeksforgeeks.org/problems/the-remaining-cake1349/1',4,2),(6049,'Max Length Removal','https://www.geeksforgeeks.org/problems/max-length-removal0452/1',1,2),(6050,'Carmichael Numbers','https://www.geeksforgeeks.org/problems/carmichael-numbers3703/1',2,2),(6051,'Find smallest values of x and y','https://www.geeksforgeeks.org/problems/find-smallest-values-of-x-and-y-such-that-ax-by-01433/1',1,2),(6052,'Maximum possible sum','https://www.geeksforgeeks.org/problems/maximum-possible-sum4134/1',2,2),(6053,'Count Number','https://www.geeksforgeeks.org/problems/count-number4832/1',2,2),(6054,'Dyck Path','https://www.geeksforgeeks.org/problems/dyck-path1028/1',2,2),(6055,'Count numbers with unit digit K in given range','https://www.geeksforgeeks.org/problems/count-numbers-with-unit-digit-k-in-given-range4025/1',1,2),(6056,'Check for three consecutive numbers','https://www.geeksforgeeks.org/problems/check-for-three-consecutive-numbers5729/1',4,2),(6057,'Convertible string','https://www.geeksforgeeks.org/problems/convertible-string2643/1',1,2),(6058,'Very Tough Problem','https://www.geeksforgeeks.org/problems/very-tough-problem2653/1',3,2),(6059,'Count of AP Subsequences','https://www.geeksforgeeks.org/problems/count-of-ap-subsequences0016/1',2,2),(6060,'Carol Number','https://www.geeksforgeeks.org/problems/carol-number4645/1',4,2),(6061,'C++ Sets','https://www.geeksforgeeks.org/problems/c-sets5648/1',4,2),(6062,'Starting Point','https://www.geeksforgeeks.org/problems/starting-point0909/1',4,2),(6063,'Sum of Query I','https://www.geeksforgeeks.org/problems/sum-of-query-i1920/1',2,2),(6064,'Permutation divisibility','https://www.geeksforgeeks.org/problems/permutation-divisibility0447/1',1,2),(6065,'Decimal to Base K conversion','https://www.geeksforgeeks.org/problems/the-number-system4241/1',4,2),(6066,'Three Number Even Sum','https://www.geeksforgeeks.org/problems/three-number-even-sum2803/1',1,2),(6067,'Big Numbers Series','https://www.geeksforgeeks.org/problems/big-numbers-series1913/1',2,2),(6068,'Maximum Number of 1s','https://www.geeksforgeeks.org/problems/maximum-number-of-1s1304/1',1,2),(6069,'Withdrawing Money','https://www.geeksforgeeks.org/problems/withdrawing-money5323/1',1,2),(6070,'Number Series','https://www.geeksforgeeks.org/problems/number-series3015/1',4,2),(6071,'Repeating GCD','https://www.geeksforgeeks.org/problems/repeating-gcd4659/1',1,2),(6072,'Find Maximum Sum Strictly Increasing Subarray','https://www.geeksforgeeks.org/problems/find-maximum-sum-strictly-increasing-subarray4443/1',1,2),(6073,'Doubly Linked List Traversal','https://www.geeksforgeeks.org/problems/display-doubly-linked-list--154650/1',4,2),(6074,'Count ways to increase LCS length of two strings by one','https://www.geeksforgeeks.org/problems/count-ways-to-increase-lcs-length-of-two-strings-by-one2236/1',2,2),(6075,'Permutations and Sum','https://www.geeksforgeeks.org/problems/permutations-and-sum3001/1',1,2),(6076,'Maximum value K','https://www.geeksforgeeks.org/problems/maximum-value-k2745/1',1,2),(6077,'Smallest Non-Zero Number','https://www.geeksforgeeks.org/problems/find-smallest-non-zero-number4510/1',2,2),(6078,'Rectangle Number','https://www.geeksforgeeks.org/problems/rectangle-number4650/1',4,2),(6079,'Sort the way !','https://www.geeksforgeeks.org/problems/sort-the-way3158/1',1,2),(6080,'Invert the Bits','https://www.geeksforgeeks.org/problems/invert-the-bits2942/1',4,2),(6081,'GCD, LCM and Distributive Property','https://www.geeksforgeeks.org/problems/gcd-lcm-and-distributive-property4419/1',4,2),(6082,'Create your own Calculator','https://www.geeksforgeeks.org/problems/create-your-own-calculator4308/1',3,2),(6083,'Left or Right Positioned Array','https://www.geeksforgeeks.org/problems/left-or-right-positioned-array5757/1',1,2),(6084,'Help Joey','https://www.geeksforgeeks.org/problems/help-joey5246/1',4,2),(6085,'Mighty Divisor','https://www.geeksforgeeks.org/problems/the-mighty-divisible-number22312231/1',1,2),(6086,'Pasha and Primes','https://www.geeksforgeeks.org/problems/pasha-and-primes0438/1',2,2),(6087,'Primitive Typing','https://www.geeksforgeeks.org/problems/primitive-typing5427/1',1,2),(6088,'Smallest K digit number divisible by X','https://www.geeksforgeeks.org/problems/smallest-k-digit-number-divisible-by-x2351/1',4,2),(6089,'Sid and his prime money','https://www.geeksforgeeks.org/problems/sid-and-his-prime-money5736/1',3,2),(6090,'Sum of subset differences','https://www.geeksforgeeks.org/problems/sum-of-subset-differences/1',2,2),(6091,'Chocolate lengths','https://www.geeksforgeeks.org/problems/chocolate-lengths0332/1',4,2),(6092,'Sort the pile of cards','https://www.geeksforgeeks.org/problems/sort-the-pile-of-cards3733/1',1,2),(6093,'Sum of K Primes','https://www.geeksforgeeks.org/problems/sum-of-k-primes0056/1',1,2),(6094,'Different Kinds of Objects','https://www.geeksforgeeks.org/problems/johns-haircut3556/1',1,2),(6095,'Count Subarrays with Same Min and Max','https://www.geeksforgeeks.org/problems/number-of-subarrays-whose-minimum-and-maximum-are-same5259/1',1,2),(6096,'Largest three distinct elements','https://www.geeksforgeeks.org/problems/largest-three-distinct-elements/1',1,2),(6097,'Maximum difference between pair in a matrix','https://www.geeksforgeeks.org/problems/maximum-difference-between-pair-in-a-matrix/1',3,2),(6098,'Minimum number of elements','https://www.geeksforgeeks.org/problems/minimum-number-of-elements-which-are-not-part-of-increasing-or-decreasing-subsequence2617/1',3,2),(6099,'Equalize an array in minimum operations','https://www.geeksforgeeks.org/problems/equalize-an-array3405/1',1,2),(6100,'Print all bitwise subsets of a number N','https://www.geeksforgeeks.org/problems/print-all-bitwise-subsets-of-a-number-n3301/1',1,2),(6101,'Element left after performing alternate OR & XOR operation','https://www.geeksforgeeks.org/problems/element-left-after-performing-alternate-or-xor-operation5106/1',2,2),(6102,'Decreasing Sequence','https://www.geeksforgeeks.org/problems/decreasing-sequence2722/1',1,2),(6103,'Count binary strings','https://www.geeksforgeeks.org/problems/count-binary-strings1944/1',1,2),(6104,'Squares in Rectangle','https://www.geeksforgeeks.org/problems/squares-in-reactangle3340/1',2,2),(6105,'Factorial and numbers','https://www.geeksforgeeks.org/problems/factorial-and-numbers0905/1',2,2),(6106,'Comment Removal','https://www.geeksforgeeks.org/problems/comment-removal2017/1',2,2),(6107,'Palindrome in both Decimal and Binary','https://www.geeksforgeeks.org/problems/palindrome-in-both-decimal-and-binary4517/1',4,2),(6108,'Choice','https://www.geeksforgeeks.org/problems/choice/1',1,2),(6109,'Tom and String','https://www.geeksforgeeks.org/problems/tom-and-string1211/1',1,2),(6110,'Unoccupied Computers','https://www.geeksforgeeks.org/problems/unoccupied-computers-1646661078/1',1,2),(6111,'Sort string','https://www.geeksforgeeks.org/problems/jon-and-string5412/1',1,2),(6112,'Extended Euclidean Algorithm','https://www.geeksforgeeks.org/problems/extended-euclidean-algorithm3848/1',4,2),(6113,'Optimum location of point to minimize total distance','https://www.geeksforgeeks.org/problems/optimum-location-of-point-to-minimize-total-distance/1',3,2),(6114,'Easy Query','https://www.geeksforgeeks.org/problems/easy-query3301/1',2,2),(6115,'LFU cache','https://www.geeksforgeeks.org/problems/lfu-cache-1665050355/1',3,2),(6116,'Ways to split string such that each partition starts with distinct letter','https://www.geeksforgeeks.org/problems/ways-to-split-string-such-that-each-partition-starts-with-distinct-letter5723/1',1,2),(6117,'Check squares','https://www.geeksforgeeks.org/problems/check-squares2421/1',4,2),(6118,'Largest subarray with GCD one','https://www.geeksforgeeks.org/problems/largest-subarray-with-gcd-one4535/1',4,2),(6119,'Maximize OR','https://www.geeksforgeeks.org/problems/maximize-or0509/1',4,2),(6120,'Spell a Number','https://www.geeksforgeeks.org/problems/different-ways-to-spell-a-number4014/1',4,2),(6121,'Matrix Game - 1','https://www.geeksforgeeks.org/problems/matrix-game-10229/1',1,2),(6122,'Finding Dory','https://www.geeksforgeeks.org/problems/finding-dory3455/1',4,2),(6123,'Repetition of k length substring','https://www.geeksforgeeks.org/problems/repetition-of-k-length-substring/1',1,2),(6124,'Sick Pasha','https://www.geeksforgeeks.org/problems/sick-pasha0323/1',2,2),(6125,'Pairs of Adjacent elements','https://www.geeksforgeeks.org/problems/pairs-of-adjacent-elements4814/1',1,2),(6126,'Large Product-2','https://www.geeksforgeeks.org/problems/large-product-23711/1',2,2),(6127,'LCS of \'0\' K Repeated String','https://www.geeksforgeeks.org/problems/lcs-of-0-k-repeated-string5642/1',1,2),(6128,'Arrange the Balls','https://www.geeksforgeeks.org/problems/arrange-the-balls4234/1',1,2),(6129,'Connell Sequence','https://www.geeksforgeeks.org/problems/connell-sequence0728/1',1,2),(6130,'Print kth character','https://www.geeksforgeeks.org/problems/print-kth-character-in-sorted-concatenated-substrings-of-a-string0302/1',3,2),(6131,'Subset with no pair sum divisible by K','https://www.geeksforgeeks.org/problems/subset-with-no-pair-sum-divisible-by-k1105/1',2,2),(6132,'The invariable units digit','https://www.geeksforgeeks.org/problems/the-invariable-units-digit3855/1',1,2),(6133,'Biggest integer having maximum digit sum','https://www.geeksforgeeks.org/problems/biggest-integer-having-maximum-digit-sum1704/1',4,2),(6134,'Min value of x','https://www.geeksforgeeks.org/problems/min-value-of-x2252/1',4,2),(6135,'Find unit digit in a Product','https://www.geeksforgeeks.org/problems/find-unit-digit-in-a-product2059/1',1,2),(6136,'XOR Cipher','https://www.geeksforgeeks.org/problems/xor-cipher3009/1',2,2),(6137,'Cost of Sweets','https://www.geeksforgeeks.org/problems/cost-of-sweets0042/1',2,2),(6138,'Sort last M elements','https://www.geeksforgeeks.org/problems/sort-last-m-elements--155156/1',2,2),(6139,'Find minimum s-t cut in a flow network','https://www.geeksforgeeks.org/problems/find-minimum-s-t-cut-in-a-flow-network2902/1',3,2),(6140,'count special palindromic','https://www.geeksforgeeks.org/problems/count-special-palindromic0421/1',2,2),(6141,'Number of permutation with K inversions','https://www.geeksforgeeks.org/problems/number-of-permutation-with-k-inversions5304/1',2,2),(6142,'Difficult Problems','https://www.geeksforgeeks.org/problems/difficult-problems1303/1',4,2),(6143,'Sum of average of all subsets','https://www.geeksforgeeks.org/problems/sum-of-average-of-all-subsets3209/1',1,2),(6144,'Two Swaps','https://www.geeksforgeeks.org/problems/two-swaps--113428/1',1,2),(6145,'Water Balloons','https://www.geeksforgeeks.org/problems/holi-balloons0351/1',1,2),(6146,'Total number of non-decreasing numbers with n digits','https://www.geeksforgeeks.org/problems/total-number-of-non-decreasing-numbers-with-n-digits5548/1',2,2),(6147,'India\'s unique railway tracks','https://www.geeksforgeeks.org/problems/indias-unique-railway-track0906/1',4,2),(6148,'Akash and Friend','https://www.geeksforgeeks.org/problems/akash-and-friend5145/1',4,2),(6149,'Largest Product Pallindrome','https://www.geeksforgeeks.org/problems/largest-product-pallindrome3753/1',1,2),(6150,'The Infinite String','https://www.geeksforgeeks.org/problems/the-infinite-string1049/1',2,2),(6151,'C++ Nega Bit','https://www.geeksforgeeks.org/problems/c-nega-bit2019/1',4,2),(6152,'Check if possible to move from given coordinate to desired coordinate','https://www.geeksforgeeks.org/problems/check-if-possible-to-move-from-given-coordinate-to-desired-coordinate5944/1',2,2),(6153,'Base Conversion','https://www.geeksforgeeks.org/problems/base-conversion0924/1',4,2),(6154,'Nearest Power','https://www.geeksforgeeks.org/problems/nearest-power0840/1',1,2),(6155,'Multiple of N closest to X','https://www.geeksforgeeks.org/problems/multiple-of-x-closest-to-n1719/1',4,2),(6156,'Class Average','https://www.geeksforgeeks.org/problems/class-average4642/1',1,2),(6157,'Reverse Delete Algorithm for Minimum Spanning Tree','https://www.geeksforgeeks.org/problems/reverse-delete-algorithm-for-minimum-spanning-tree1158/1',2,2),(6158,'Geometric Progression','https://www.geeksforgeeks.org/problems/geometric-progression3042/1',1,2),(6159,'Minimum Notes Required','https://www.geeksforgeeks.org/problems/minimum-notes-required2535/1',1,2),(6160,'Days of Our Lives','https://www.geeksforgeeks.org/problems/days-of-our-lives3300/1',1,2),(6161,'Find the pattern','https://www.geeksforgeeks.org/problems/find-the-pattern4155/1',3,2),(6162,'Longest sub-sequence such that difference between adjacents is one','https://www.geeksforgeeks.org/problems/longest-sub-sequence-such-that-difference-between-adjacents-is-one2558/1',2,2),(6163,'Find the position','https://www.geeksforgeeks.org/problems/find-the-position4424/1',2,2),(6164,'Carol Numbers','https://www.geeksforgeeks.org/problems/carol-numbers0308/1',1,2),(6165,'The Prime Twins','https://www.geeksforgeeks.org/problems/the-prime-twins2419/1',1,2),(6166,'Faulty Keyboard','https://www.geeksforgeeks.org/problems/faulty-keyboard2842/1',1,2),(6167,'Seeds of a number','https://www.geeksforgeeks.org/problems/seeds-of-a-number5156/1',1,2),(6168,'Save Winterfell','https://www.geeksforgeeks.org/problems/save-winterfell1447/1',2,2),(6169,'Maximize XOR','https://www.geeksforgeeks.org/problems/maximize-xor0829/1',1,2),(6170,'Design HashMap','https://www.geeksforgeeks.org/problems/design-hashmap/1',1,2),(6171,'Leftmost Divisor','https://www.geeksforgeeks.org/problems/leftmost-divisor3822/1',2,2),(6172,'Java Collections | Set 8 (TreeSet)','https://www.geeksforgeeks.org/problems/java-collections-set-8-treeset/1',4,2),(6173,'Pattern for Reverse Character Bridge','https://www.geeksforgeeks.org/problems/pattern-for-reverse-character-bridge5738/1',4,2),(6174,'Shoot, Reload, Repeat','https://www.geeksforgeeks.org/problems/shoot-reload-repeat2415/1',1,2),(6175,'Geeky Year','https://www.geeksforgeeks.org/problems/geeky-year4720/1',1,2),(6176,'Design Twitter','https://www.geeksforgeeks.org/problems/design-twitter/1',2,2),(6177,'Subset sums between the given range','https://www.geeksforgeeks.org/problems/subset-sums-between-the-given-range/1',3,2),(6178,'Find perimeter of shapes','https://www.geeksforgeeks.org/problems/find-perimeter-of-shapes/1',1,2),(6179,'Maximum XOR With an Element From Array','https://www.geeksforgeeks.org/problems/maximum-xor-with-an-element-from-array/1',3,2),(6180,'Compatible friends','https://www.geeksforgeeks.org/problems/compatible-friends3459/1',1,2),(6181,'Encoding names','https://www.geeksforgeeks.org/problems/encoding-names1310/1',4,2),(6182,'Word Search','https://www.geeksforgeeks.org/problems/word-search-1664453028/1',2,2),(6183,'Lottery Money','https://www.geeksforgeeks.org/problems/lottery-money0853/1',1,2),(6184,'Minimum Number Of Sprinkler','https://www.geeksforgeeks.org/problems/minimum-number-of-sprinkler--170645/1',3,2),(6185,'Quick Exponents','https://www.geeksforgeeks.org/problems/quick-exponents4539/1',1,2),(6186,'Number of compositions of a natural number','https://www.geeksforgeeks.org/problems/number-of-compositions-of-a-natural-number4627/1',1,2),(6187,'Pyramid form','https://www.geeksforgeeks.org/problems/pyramid-form3044/1',2,2),(6188,'Array\'s Game','https://www.geeksforgeeks.org/problems/arrays-game0327/1',1,2),(6189,'4 Sum – Count quadruplets with given sum','https://www.geeksforgeeks.org/problems/count-quadruplets-with-given-sum/1',2,2),(6190,'Keith Number','https://www.geeksforgeeks.org/problems/keith-number2745/1',1,2),(6191,'Make the hit in power game !','https://www.geeksforgeeks.org/problems/make-the-hit-in-power-game3729/1',4,2),(6192,'Possible Pairs','https://www.geeksforgeeks.org/problems/possible-pairs1550/1',1,2),(6193,'Count number of digits after decimal','https://www.geeksforgeeks.org/problems/count-number-of-digits-after-decimal1516/1',4,2),(6194,'Dr. Zora\'s Algorithm','https://www.geeksforgeeks.org/problems/dr-zoras-algorithm5401/1',1,2),(6195,'Human and the tower','https://www.geeksforgeeks.org/problems/human-and-the-tower5254/1',4,2),(6196,'Save The Nation','https://www.geeksforgeeks.org/problems/save-the-nation3110/1',1,2),(6197,'Sum of Divisors in an array','https://www.geeksforgeeks.org/problems/sum-of-divisors-in-an-array2954/1',1,2),(6198,'The Fastest Method','https://www.geeksforgeeks.org/problems/the-fastest-method4009/1',1,2),(6199,'Maximum Triple Product','https://www.geeksforgeeks.org/problems/maximum-triple-product/1',3,2),(6200,'Forming Rectangle','https://www.geeksforgeeks.org/problems/forming-rectangle0218/1',1,2),(6201,'Count unset bits in a given Range','https://www.geeksforgeeks.org/problems/count-unset-bits-in-a-given-range1216/1',1,2),(6202,'Largest sum of digits in all Divisors','https://www.geeksforgeeks.org/problems/largest-sum-of-digits-in-all-divisors5230/1',1,2),(6203,'Find the maximum area','https://www.geeksforgeeks.org/problems/rahul-and-his-villa2019/1',1,2),(6204,'Query and Array','https://www.geeksforgeeks.org/problems/query-and-array4947/1',1,2),(6205,'Find X','https://www.geeksforgeeks.org/problems/find-x5215/1',1,2),(6206,'Count in array','https://www.geeksforgeeks.org/problems/count-in-array2138/1',2,2),(6207,'Consecutive numbers for sum','https://www.geeksforgeeks.org/problems/consecutive-numbers-for-sum3132/1',1,2),(6208,'Partition a set into two subsets such that the difference of subset sums is minimum (Set-2)','https://www.geeksforgeeks.org/problems/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum-set-2/1',3,2),(6209,'Gift distribution according to preference','https://www.geeksforgeeks.org/problems/gifts-gifts-gifts1524/1',1,2),(6210,'Numbers having two adjacent set bits','https://www.geeksforgeeks.org/problems/count-the-number-of-elements-in-array-1-for-each-element-of-the-array-22903/1',4,2),(6211,'Linear Diophantine Equations','https://www.geeksforgeeks.org/problems/linear-diophantine-equations5649/1',1,2),(6212,'Greater power','https://www.geeksforgeeks.org/problems/greater-power4651/1',1,2),(6213,'CBA Subsequence','https://www.geeksforgeeks.org/problems/cba-subsequence--170645/1',1,2),(6214,'Distributing Balls','https://www.geeksforgeeks.org/problems/distributing-balls1659/1',2,2),(6215,'Count rotations divisible by 4','https://www.geeksforgeeks.org/problems/count-rotations-divisible-by-43523/1',4,2),(6216,'K Centers Problem','https://www.geeksforgeeks.org/problems/k-centers-problem/1',3,2),(6217,'Smallest sub-array with all occurences of most frequent element','https://www.geeksforgeeks.org/problems/smallest-sub-array-with-all-occurences-of-most-frequent-element0020/1',1,2),(6218,'Maximum number of unique prime factors','https://www.geeksforgeeks.org/problems/maximum-number-of-unique-prime-factors3331/1',1,2),(6219,'Maximize permutations','https://www.geeksforgeeks.org/problems/maximize-permutations2915/1',1,2),(6220,'Archana and her tricky string','https://www.geeksforgeeks.org/problems/archana-and-her-tricky-string2910/1',2,2),(6221,'Maximum value of expression','https://www.geeksforgeeks.org/problems/maximum-value-of-expression2515/1',1,2),(6222,'Kth boom number','https://www.geeksforgeeks.org/problems/kth-boom-number5609/1',1,2),(6223,'Winter is Coming','https://www.geeksforgeeks.org/problems/winter-is-coming1535/1',1,2),(6224,'Find the safe position','https://www.geeksforgeeks.org/problems/search-for-traitor5950/1',4,2),(6225,'Poisioned Sweet','https://www.geeksforgeeks.org/problems/poisioned-sweet2651/1',1,2),(6226,'Akku and Arrays','https://www.geeksforgeeks.org/problems/akku-and-arrays4452/1',3,2),(6227,'Examination Papers','https://www.geeksforgeeks.org/problems/examination-papers2459/1',1,2),(6228,'Minimum Cost to Merge Stones','https://www.geeksforgeeks.org/problems/minimum-cost-to-merge-stones/1',3,2),(6229,'Metro Problem','https://www.geeksforgeeks.org/problems/metro-problem3513/1',4,2),(6230,'Numbers having alternate bits in range 1 to n','https://www.geeksforgeeks.org/problems/numbers-having-alternate-bits-in-range-1-to-n2350/1',1,2),(6231,'Counting number of sentences and words in text','https://www.geeksforgeeks.org/problems/counting-number-of-sentences-and-words-in-text3226/1',1,2),(6232,'Number of unique rectangles','https://www.geeksforgeeks.org/problems/number-of-unique-rectangles1849/1',4,2),(6233,'Lucky number and a sum','https://www.geeksforgeeks.org/problems/lucky-number-and-a-sum0329/1',4,2),(6234,'Nth Pentagonal Number','https://www.geeksforgeeks.org/problems/nth-pentagonal-number3721/1',1,2),(6235,'Cross the Bridge','https://www.geeksforgeeks.org/problems/cross-the-bridge4916/1',1,2),(6236,'Sum of all subsets formed by first N natural numbers','https://www.geeksforgeeks.org/problems/sum-of-all-subsets-formed-by-first-n-natural-numbers0603/1',4,2),(6237,'Total Number Of Spanning Trees In A Graph','https://www.geeksforgeeks.org/problems/total-number-of-spanning-trees-in-a-graph/1',3,2),(6238,'Left Most Digit of a product','https://www.geeksforgeeks.org/problems/left-most-digit-of-a-product3240/1',1,2),(6239,'Gray to Binary and Binary to Gray ','https://www.geeksforgeeks.org/problems/gray-to-binary-and-binary-to-gray5518/1',4,2),(6240,'Number of solutions','https://www.geeksforgeeks.org/problems/number-of-solutions4523/1',1,2),(6241,'Find minimum adjustment cost of an array','https://www.geeksforgeeks.org/problems/find-minimum-adjustment-cost-of-an-array4628/1',1,2),(6242,'Generate all cyclic permutations of a number','https://www.geeksforgeeks.org/problems/generate-all-cyclic-permutations-of-a-number2921/1',4,2),(6243,'Calculate the average Waiting Time and Turnaround Time using Shortest Job First','https://www.geeksforgeeks.org/problems/calculate-the-average-waiting-time-and-turnaround-time-using-shortest-job-first/1',2,2),(6244,'Nikit\'s Problem','https://www.geeksforgeeks.org/problems/nikits-problem1028/1',1,2),(6245,'Diamond in a Bag','https://www.geeksforgeeks.org/problems/diamond-and-bags2240/1',1,2),(6246,'Line passing through 2 points','https://www.geeksforgeeks.org/problems/line-passing-through-2-points5031/1',4,2),(6247,'Cross the hurdles: The Game','https://www.geeksforgeeks.org/problems/cross-the-hurdles-the-game4734/1',1,2),(6248,'Second Binary Digit','https://www.geeksforgeeks.org/problems/second-binary-digit1425/1',1,2),(6249,'Fun With Expresions','https://www.geeksforgeeks.org/problems/fun-with-expresions2523/1',2,2),(6250,'k modulus array element','https://www.geeksforgeeks.org/problems/k-modulus-array-element0255/1',1,2),(6251,'Nth Multiple','https://www.geeksforgeeks.org/problems/nth-multiple/1',4,2),(6252,'Minimum value product','https://www.geeksforgeeks.org/problems/minimum-value-product1814/1',1,2),(6253,'Number of substrings divisible by 8 but not by 3','https://www.geeksforgeeks.org/problems/number-of-substrings-divisible-by-8-but-not-by-30002/1',2,2),(6254,'Maximum weight transformation of a given string','https://www.geeksforgeeks.org/problems/maximum-weight-transformation-of-a-given-string3551/1',1,2),(6255,'Design Browser History','https://www.geeksforgeeks.org/problems/design-browser-history/1',2,2),(6256,'Longest Geometric Progression','https://www.geeksforgeeks.org/problems/longest-geometric-progression0131/1',2,2),(6257,'Euler Totient Sum and Divisors','https://www.geeksforgeeks.org/problems/euler-totient-sum-and-divisors5501/1',4,2),(6258,'Count Pairs','https://www.geeksforgeeks.org/problems/count-pairs4732/1',1,2),(6259,'Kronecker Product','https://www.geeksforgeeks.org/problems/kronecker-product0918/1',1,2),(6260,'Type of input','https://www.geeksforgeeks.org/problems/type-of-input5910/1',1,2),(6261,'IPL 2021 - Match Day 6 - Semi Final','https://www.geeksforgeeks.org/problems/ipl-2021-match-day-6-semi-final--141634/1',3,2),(6262,'Maximize the volume of Cuboid','https://www.geeksforgeeks.org/problems/maximize-the-volume-of-cuboid5632/1',1,2),(6263,'Ritika\'s Money','https://www.geeksforgeeks.org/problems/ritikas-money4334/1',1,2),(6264,'Nth digit in sequence','https://www.geeksforgeeks.org/problems/nth-digit-in-sequence0420/1',2,2),(6265,'Next Optimal Move in Tic Tac Toe','https://www.geeksforgeeks.org/problems/next-optimal-move-in-tic-tac-toe2842/1',3,2),(6266,'Hexadecimal to decimal counter','https://www.geeksforgeeks.org/problems/hexadecimal-to-decimal-counter1627/1',3,2),(6267,'Time Difference','https://www.geeksforgeeks.org/problems/time-difference5528/1',1,2),(6268,'Crazy Equations','https://www.geeksforgeeks.org/problems/crazy-equations5311/1',1,2),(6269,'Product of Complex Numbers','https://www.geeksforgeeks.org/problems/product-of-complex-numbers1426/1',4,2),(6270,'Distance and Displacement','https://www.geeksforgeeks.org/problems/distance-and-displacement4145/1',4,2),(6271,'Another Matrix Game','https://www.geeksforgeeks.org/problems/matrix-game-20508/1',1,2),(6272,'Minimum travel time','https://www.geeksforgeeks.org/problems/minimum-travel-time/1',3,2),(6273,'Check if array contains duplicates','https://www.geeksforgeeks.org/problems/check-if-array-contains-duplicates/1',1,2),(6274,'Greater or Less','https://www.geeksforgeeks.org/problems/greater-or-less--170646/1',3,2),(6275,'Binary fraction to decimal','https://www.geeksforgeeks.org/problems/binary-fraction-to-decimal4656/1',4,2),(6276,'Learn Geometry','https://www.geeksforgeeks.org/problems/learn-geometry5429/1',1,2),(6277,'Minimum Value Assigned','https://www.geeksforgeeks.org/problems/minimum-value-assigned0918/1',1,2),(6278,'The Wedding Date','https://www.geeksforgeeks.org/problems/the-wedding-date5302/1',1,2),(6279,'Implement Upper Bound','https://www.geeksforgeeks.org/problems/implement-upper-bound/1',1,2),(6280,'Count the numbers satisfying (m + sum(m) + sum(sum(m))) equals to N','https://www.geeksforgeeks.org/problems/count-the-numbers-satisfying-m-summ-sumsumm-equals-to-n2537/1',2,2),(6281,'Meeting Rooms II','https://www.geeksforgeeks.org/problems/attend-all-meetings-ii/1',2,2),(6282,'2 Sum - Find a pair with given sum','https://www.geeksforgeeks.org/problems/2-sum-find-a-pair-with-given-sum/1',1,2),(6283,'K-Nearest Neighbours','https://www.geeksforgeeks.org/problems/k-nearest-neighbours/1',2,2),(6284,'Count numbers which can be constructed using two numbers','https://www.geeksforgeeks.org/problems/count-numbers-which-can-be-constructed-using-two-numbers0636/1',1,2),(6285,'Joey doesn\'t share food','https://www.geeksforgeeks.org/problems/joey-doesnt-share-food5712/1',3,2),(6286,'Unique substrings','https://www.geeksforgeeks.org/problems/unique-substrings1418/1',1,2),(6287,'Arrange the array','https://www.geeksforgeeks.org/problems/arrange-the-array/1',1,2),(6288,'Palindromic Primes','https://www.geeksforgeeks.org/problems/palindromic-primes0259/1',1,2),(6289,'Create a spiral matrix of N*M size from given array','https://www.geeksforgeeks.org/problems/create-a-spiral-matrix-of-nm-size-from-given-array/1',2,2),(6290,'Dictionary Usage - Java','https://www.geeksforgeeks.org/problems/dictionary-usage-java/1',1,2),(6291,'Regular polygon-1','https://www.geeksforgeeks.org/problems/regular-polygon-12611/1',1,2),(6292,'Bird and maximum fruit gathering','https://www.geeksforgeeks.org/problems/bird-and-maximum-fruit-gathering--170645/1',1,2),(6293,'English Words','https://www.geeksforgeeks.org/problems/english-words4137/1',1,2),(6294,'Frobenius coin problem','https://www.geeksforgeeks.org/problems/frobenius-coin-problem5532/1',4,2),(6295,'Interesting Prime Numbers','https://www.geeksforgeeks.org/problems/interesting-prime-numbers1757/1',1,2),(6296,'Rotate Page','https://www.geeksforgeeks.org/problems/rotate-page0923/1',4,2),(6297,'ADA Noise','https://www.geeksforgeeks.org/problems/ada-noise2029/1',1,2),(6298,'Maximum Frequency','https://www.geeksforgeeks.org/problems/maximum-frequency-1662528911/1',2,2),(6299,'k-th smallest number using digits of a given number','https://www.geeksforgeeks.org/problems/get-the-kth-smallest-number-using-the-digits-of-the-given-number5440/1',2,2),(6300,'Make a string from another string','https://www.geeksforgeeks.org/problems/make-a-string-from-another-string--141625/1',1,2),(6301,'Stacking Up Discs','https://www.geeksforgeeks.org/problems/stacking-up-discs1315/1',1,2),(6302,'Ugly Number II','https://www.geeksforgeeks.org/problems/ugly-number-ii/1',2,2),(6303,'Identify Complexity','https://www.geeksforgeeks.org/problems/identify-complexity/1',1,2),(6304,'ThrowBall at Fair','https://www.geeksforgeeks.org/problems/throwball-at-fair3939/1',2,2),(6305,'Number of Factors of N!','https://www.geeksforgeeks.org/problems/no-of-factors-of-n4833/1',1,2),(6306,'Beautiful Sequence','https://www.geeksforgeeks.org/problems/beautiful-sequence4203/1',1,2),(6307,'Dictionary Usage 2 - Java','https://www.geeksforgeeks.org/problems/dictionary-usage-2-java/1',1,2),(6308,'Find the Number','https://www.geeksforgeeks.org/problems/helping-meesa0000/1',1,2),(6309,'House Robber II','https://www.geeksforgeeks.org/problems/house-robber-ii/1',2,2),(6310,'Find the smallest root','https://www.geeksforgeeks.org/problems/find-the-smallest-root-of-the-equation-x2-sxx-n0-where-sx-is-the-sum-of-digits-of-root-x2219/1',1,2),(6311,'Generate a matrix with each row and column of given sum','https://www.geeksforgeeks.org/problems/generate-a-matrix-with-each-row-and-column-of-given-sum/1',1,2),(6312,'Ishaan\'s Birthday','https://www.geeksforgeeks.org/problems/ishaans-birthday4141/1',1,2),(6313,'Sharing is Caring','https://www.geeksforgeeks.org/problems/sharing3134/1',1,2),(6314,'Bits Counting','https://www.geeksforgeeks.org/problems/bits-counting/1',2,2),(6315,'Using Calendar - Java','https://www.geeksforgeeks.org/problems/using-calendar-java/1',1,2),(6316,'A New Year Game','https://www.geeksforgeeks.org/problems/a-new-year-game1648/1',1,2),(6317,'Number of matches','https://www.geeksforgeeks.org/problems/number-of-matches1120/1',1,2),(6318,'Recurrence Matrix','https://www.geeksforgeeks.org/problems/recurrence-matrix2315/1',2,2),(6319,'Subarray with Given Sum','https://www.geeksforgeeks.org/problems/subarray-with-given-sum--145933/1',1,2),(6320,'Even Decimal Binary String','https://www.geeksforgeeks.org/problems/even-decimal-binary-string4748/1',1,2),(6321,'Rahul and The Lift','https://www.geeksforgeeks.org/problems/rahul-and-the-lift1006/1',2,2),(6322,'Power of K in N! where K may be Non Prime','https://www.geeksforgeeks.org/problems/power-of-k-in-n-where-k-may-be-non-prime4206/1',2,2),(6323,'Increment','https://www.geeksforgeeks.org/problems/increment3807/1',1,2),(6324,'Mike and Chocolates','https://www.geeksforgeeks.org/problems/mike-and-chocolates1444/1',1,2),(6325,'Maximum size of consecutives','https://www.geeksforgeeks.org/problems/maximum-size-of-consecutives3154/1',1,2),(6326,'Prime factors of LCM of array elements','https://www.geeksforgeeks.org/problems/prime-factors-of-lcm-of-array-elements3940/1',1,2),(6327,'Total number of Equal Partition','https://www.geeksforgeeks.org/problems/total-number-of-equal-partition0022/1',2,2),(6328,'Closest Triplet','https://www.geeksforgeeks.org/problems/closest-triplet3807/1',1,2),(6329,'Subarray Inversions','https://www.geeksforgeeks.org/problems/subarray-inversions0512/1',2,2),(6330,'Telephone Number or Involution Number','https://www.geeksforgeeks.org/problems/telephone-number-or-involution-number4412/1',2,2),(6331,'Overlapping Substrings','https://www.geeksforgeeks.org/problems/overlapping-substrings2654/1',1,2),(6332,'Find distinct elements','https://www.geeksforgeeks.org/problems/find-distinct-elements--130928/1',1,2),(6333,'Sort an Array of 1 to n','https://www.geeksforgeeks.org/problems/sort-an-array-which-contains-1-to-n-values-using-mathematical-formula/1',1,2),(6334,'Interesting Series','https://www.geeksforgeeks.org/problems/interesting-series1030/1',1,2),(6335,'Make it Colorful','https://www.geeksforgeeks.org/problems/make-it-colorful3522/1',2,2),(6336,'Flipping bits in Binary Format','https://www.geeksforgeeks.org/problems/flipping-bits-no-and-binary-format-in-reverse-order0513/1',1,2),(6337,'Geek fight','https://www.geeksforgeeks.org/problems/geek-fight/1',2,2),(6338,'Division Problem','https://www.geeksforgeeks.org/problems/division-problem4236/1',1,2),(6339,'Minimum Cost Car','https://www.geeksforgeeks.org/problems/minimum-cost-car/1',2,2),(6340,'The Drunkard','https://www.geeksforgeeks.org/problems/the-drunkard3445/1',1,2),(6341,'Lots of Work','https://www.geeksforgeeks.org/problems/lots-of-work3233/1',2,2),(6342,'Mersenne Prime','https://www.geeksforgeeks.org/problems/mersenne-prime1438/1',1,2),(6343,'Siri and her new College','https://www.geeksforgeeks.org/problems/siri-and-her-new-college2303/1',1,2),(6344,'Nth character in Concatenated Decimal String','https://www.geeksforgeeks.org/problems/nth-character-in-concatenated-decimal-string0245/1',1,2),(6345,'Minimal Summing Up','https://www.geeksforgeeks.org/problems/minimal-summing-up4253/1',1,2),(6346,'Mapped String','https://www.geeksforgeeks.org/problems/mapped-string0501/1',2,2),(6347,'Minimum Platforms 2','https://www.geeksforgeeks.org/problems/minimum-platforms-2--170647/1',2,2),(6348,'Sub-Array Pairs','https://www.geeksforgeeks.org/problems/sub-array-pairs5530/1',2,2),(6349,'Find Only Repetitive Element from 1 to n-1','https://www.geeksforgeeks.org/problems/find-repetitive-element-from-1-to-n-1/1',1,2),(6350,'Group Shifted String','https://www.geeksforgeeks.org/problems/group-shifted-string/1',2,2),(6351,'Three Sum','https://www.geeksforgeeks.org/problems/three-sum/1',2,2),(6352,'Number of Heads','https://www.geeksforgeeks.org/problems/number-of-heads3629/1',1,2),(6353,'Intersection of Two Sorted Arrays with Duplicate Elements','https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-arrays-with-duplicate-elements/1',1,2),(6354,'Lucky Number-2','https://www.geeksforgeeks.org/problems/lucky-number-22638/1',4,2),(6355,'Search in an almost Sorted Array','https://www.geeksforgeeks.org/problems/search-in-an-almost-sorted-array/1',2,2),(6356,'IPL 2021 - Match Day 1','https://www.geeksforgeeks.org/problems/ipl-2021-match-day-1--141634/1',2,2),(6357,'Squares and divisibility','https://www.geeksforgeeks.org/problems/squares-and-divisibility1408/1',1,2),(6358,'First K Digits ','https://www.geeksforgeeks.org/problems/first-k-digits2512/1',1,2),(6359,'Generating All Subarrays','https://www.geeksforgeeks.org/problems/generating-all-subarrays/1',1,2),(6360,'Emirp numbers','https://www.geeksforgeeks.org/problems/emirp-numbers4337/1',1,2),(6361,'Convert Sentence to Camel Case','https://www.geeksforgeeks.org/problems/convert-sentence-to-camel-case/1',2,2),(6362,'Encode and Decode Strings','https://www.geeksforgeeks.org/problems/encode-and-decode-strings/1',2,2),(6363,'Tree Transformation','https://www.geeksforgeeks.org/problems/tree-transformation--170645/1',2,2),(6364,'Range of Composite numbers','https://www.geeksforgeeks.org/problems/range-of-composite-numbers/1',1,2),(6365,'Largest Proper fraction','https://www.geeksforgeeks.org/problems/largest-proper-fraction3533/1',1,2),(6366,'Make best team for World Cup 2023','https://www.geeksforgeeks.org/problems/make-best-team-for-world-cup-2023/1',2,2),(6367,'Shortest path to print','https://www.geeksforgeeks.org/problems/shortest-path-to-print4223/1',1,2),(6368,'Where Am I ?','https://www.geeksforgeeks.org/problems/where-am-i4410/1',1,2),(6369,'Possible Timings','https://www.geeksforgeeks.org/problems/possible-timings2437/1',1,2),(6370,'Sum of Max of Subarrays','https://www.geeksforgeeks.org/problems/sum-of-max-of-subarrays/1',3,2),(6371,'Nth Smart Number','https://www.geeksforgeeks.org/problems/nth-smart-number5909/1',1,2),(6372,'Minimum increment by k operations to make all equal','https://www.geeksforgeeks.org/problems/minimum-increment-by-k-operations-to-make-all-equal/1',1,2),(6373,'Tribonacci Number','https://www.geeksforgeeks.org/problems/tribonacci-number/1',1,2),(6374,'Min Cost to Make Size 1','https://www.geeksforgeeks.org/problems/min-cost-to-make-size-1/1',1,2),(6375,'All distinct pairs with given sum','https://www.geeksforgeeks.org/problems/all-distinct-pairs-with-given-sum/1',1,2),(6376,'Count Pairs in a sorted array whose sum is less than target','https://www.geeksforgeeks.org/problems/count-pairs-in-a-sorted-array-whose-sum-is-less-than-target/1',1,2),(6377,'Chinese Postman','https://www.geeksforgeeks.org/problems/chinese-postman/1',2,2),(6378,'Factorial Pairs','https://www.geeksforgeeks.org/problems/factorial-pairs5916/1',1,2),(6379,'Minimum Toogles to partition','https://www.geeksforgeeks.org/problems/minimum-toogles-to-partition0135/1',1,2),(6380,'Search in a  Matrix','https://www.geeksforgeeks.org/problems/search-in-a-matrix--021840/1',1,2),(6381,'Number of edges in a Planar Graph','https://www.geeksforgeeks.org/problems/number-of-edges-in-a-planar-graph4833/1',2,2),(6382,'Rubik\'s Cube','https://www.geeksforgeeks.org/problems/rubiks-cube4626/1',2,2),(6383,'Intersection of Two Sorted Arrays with Distinct Elements','https://www.geeksforgeeks.org/problems/intersection-of-two-sorted-arrays-with-distinct-elements/1',1,2),(6384,'Union of Two Arrays with Distinct Elements','https://www.geeksforgeeks.org/problems/union-of-two-arrays-with-distinct-elements/1',1,2),(6385,'Psuedobinary Numbers','https://www.geeksforgeeks.org/problems/pseudo2003/1',1,2),(6386,'Balancing Pan','https://www.geeksforgeeks.org/problems/balancing-pan5038/1',1,2),(6387,'Let\'s Go Shopping!','https://www.geeksforgeeks.org/problems/lets-go-shopping4621/1',2,2),(6388,'2 Sum – Count distinct pairs with given sum','https://www.geeksforgeeks.org/problems/2-sum-count-distinct-pairs-with-given-sum/1',1,2),(6389,'Special Number','https://www.geeksforgeeks.org/problems/special-number1914/1',2,2),(6390,'Find pair with sum target in an absolute sorted array','https://www.geeksforgeeks.org/problems/find-pair-with-sum-k-in-an-absolute-sorted-array/1',2,2),(6391,'Find all triplets with given sum','https://www.geeksforgeeks.org/problems/find-all-triplets-with-given-sum/1',1,2),(6392,'Find all triplets with given sum','https://www.geeksforgeeks.org/problems/print-all-triplets-with-given-sum/1',2,2),(6393,'Node in subtree or not','https://www.geeksforgeeks.org/problems/find-alice/1',2,2),(6394,'Corners of a Rectangle','https://www.geeksforgeeks.org/problems/corners-of-a-rectangle1848/1',1,2),(6395,'Pacific Atlantic Water Flow','https://www.geeksforgeeks.org/problems/pacific-atlantic-water-flow/1',3,2),(6396,'URLify a given string','https://www.geeksforgeeks.org/problems/urlify-a-given-string--141625/1',4,2),(6397,'Find all distinct triplets with given sum','https://www.geeksforgeeks.org/problems/find-all-distinct-triplets-with-given-sum/1',1,2),(6398,'Median of 2 Sorted Arrays of Same Size','https://www.geeksforgeeks.org/problems/median-of-2-sorted-arrays-of-same-size/1',3,2),(6399,'Print In Python','https://www.geeksforgeeks.org/problems/print-in-python/1',1,2),(6400,'Split array into minimum subsets','https://www.geeksforgeeks.org/problems/split-array-into-minimum-subsets/1',1,2),(6401,'Find All Pairs With Given Sum','https://www.geeksforgeeks.org/problems/find-all-pairs-with-given-sum/1',1,2),(6402,'For-Each Loop','https://www.geeksforgeeks.org/problems/for-each-loop/1',4,2),(6403,'Check for Disjoint','https://www.geeksforgeeks.org/problems/check-for-disjoint-sets-or-arrays/1',1,2),(6404,'Cluster all the 1 in a given string','https://www.geeksforgeeks.org/problems/cluster-all-the-1-in-a-given-string5323/1',2,2),(6405,'Search for Subarray','https://www.geeksforgeeks.org/problems/search-for-subarray/1',2,2),(6406,'Maximum score from at most K jumps','https://www.geeksforgeeks.org/problems/maximum-score-from-at-most-k-jumps/1',2,2),(6407,'Case Insensitive Search','https://www.geeksforgeeks.org/problems/case-insensitive-search/1',2,2),(6408,'Closest Pair Sum in an unsorted Array','https://www.geeksforgeeks.org/problems/closest-pair-sum-in-an-unsorted-array/1',1,2),(6409,'Longest subsequence with difference','https://www.geeksforgeeks.org/problems/longest-subsequence-with-difference/1',2,2),(6410,'Do - While Loop','https://www.geeksforgeeks.org/problems/do-while-loop/1',1,2),(6411,'Reverse Bits','https://www.geeksforgeeks.org/problems/reverse-bits--142401/1',1,2),(6412,'Word Search II','https://www.geeksforgeeks.org/problems/word-search-ii/1',3,2),(6413,'Find H-Index for sorted citations','https://www.geeksforgeeks.org/problems/find-h-index/1',2,2),(6414,'Combination Sum IV','https://www.geeksforgeeks.org/problems/4-combination-sum/1',2,2),(6415,'Longest Subarray with Majority Greater than K','https://www.geeksforgeeks.org/problems/longest-subarray-with-majority-greater-than-k/1',2,2),(6416,'Minimum Removals for Target Sum','https://www.geeksforgeeks.org/problems/minimum-removals-for-target-sum/1',2,2),(6417,'Design Add and Search Words Data Structure','https://www.geeksforgeeks.org/problems/design-add-and-search-words-data-structure--154618/1',2,2),(6418,'Count words in a Trie','https://www.geeksforgeeks.org/problems/count-words-in-a-trie/1',2,2),(6419,'Minimum cost to connect all houses in a city','https://www.geeksforgeeks.org/problems/minimum-cost-to-connect-all-houses-in-a-city/1',2,2),(6420,'Array Transformation with Repeated Steps and Modulo Operation','https://www.geeksforgeeks.org/problems/array-transformation-with-repeated-steps-and-modulo-operation/1',1,2),(6421,'Maximize partitions in a String','https://www.geeksforgeeks.org/problems/maximize-partitions-in-a-string/1',1,2),(6422,'Number of Palindromic Substrings','https://www.geeksforgeeks.org/problems/number-of-palindromic-substrings/1',2,2),(6423,'Print matrix in zig-zag fashion','https://www.geeksforgeeks.org/problems/print-matrix-in-zig-zag-fashion--122748/1',1,2),(6424,'Pair Sum in a Sorted and Rotated Array','https://www.geeksforgeeks.org/problems/pair-sum-in-a-sorted-and-rotated-array/1',2,2),(6425,'Number of times graph cuts X-axis','https://www.geeksforgeeks.org/problems/number-of-times-graph-cuts-x-axis/1',1,2),(6426,'Coffee Break','https://codeforces.com/problemset/problem/2057/H',6,3),(6427,'Secret Message','https://codeforces.com/problemset/problem/2057/G',6,3),(6428,'Formation','https://codeforces.com/problemset/problem/2057/F',6,3),(6429,'Another Exercise on Graphs (hard version)','https://codeforces.com/problemset/problem/2057/E2',6,3),(6430,'Another Exercise on Graphs (Easy Version)','https://codeforces.com/problemset/problem/2057/E1',6,3),(6431,'Gifts Order','https://codeforces.com/problemset/problem/2057/D',6,3),(6432,'Trip to the Olympiad','https://codeforces.com/problemset/problem/2057/C',6,3),(6433,'Gorilla and the Exam','https://codeforces.com/problemset/problem/2057/B',6,3),(6434,'MEX Table','https://codeforces.com/problemset/problem/2057/A',6,3),(6435,'Affectionate Arrays (Hard Version)','https://codeforces.com/problemset/problem/2053/I2',6,3),(6436,'Affectionate Arrays (Easy Version)','https://codeforces.com/problemset/problem/2053/I1',6,3),(6437,'Delicate Anti-monotonous Operations','https://codeforces.com/problemset/problem/2053/H',6,3),(6438,'Naive String Splits','https://codeforces.com/problemset/problem/2053/G',6,3),(6439,'Earnest Matrix Complement','https://codeforces.com/problemset/problem/2053/F',6,3),(6440,'Resourceful Caterpillar Sequence','https://codeforces.com/problemset/problem/2053/E',6,3),(6441,'Refined Product Optimality','https://codeforces.com/problemset/problem/2053/D',6,3),(6442,'Bewitching Stargazer','https://codeforces.com/problemset/problem/2053/C',6,3),(6443,'Outstanding Impressionist','https://codeforces.com/problemset/problem/2053/B',6,3),(6444,'Tender Carpenter','https://codeforces.com/problemset/problem/2053/A',6,3),(6445,'Managing Cluster','https://codeforces.com/problemset/problem/2052/M',3,3),(6446,'Legacy Screensaver','https://codeforces.com/problemset/problem/2052/L',3,3),(6447,'Knowns and Unknowns','https://codeforces.com/problemset/problem/2052/K',3,3),(6448,'Judicious Watching','https://codeforces.com/problemset/problem/2052/J',2,3),(6449,'Incompetent Delivery Guy','https://codeforces.com/problemset/problem/2052/I',3,3),(6450,'Hunting Hoglins in Hogwarts','https://codeforces.com/problemset/problem/2052/H',3,3),(6451,'Geometric Balance','https://codeforces.com/problemset/problem/2052/G',3,3),(6452,'Fix Flooded Floor','https://codeforces.com/problemset/problem/2052/F',2,3),(6453,'Expression Correction','https://codeforces.com/problemset/problem/2052/E',2,3),(6454,'DAG Serialization','https://codeforces.com/problemset/problem/2052/D',2,3),(6455,'Cactus without Bridges','https://codeforces.com/problemset/problem/2052/C',3,3),(6456,'BitBitJump','https://codeforces.com/problemset/problem/2052/B',2,3),(6457,'Adrenaline Rush','https://codeforces.com/problemset/problem/2052/A',2,3),(6458,'Snakes','https://codeforces.com/problemset/problem/2051/G',6,3),(6459,'Joker','https://codeforces.com/problemset/problem/2051/F',6,3),(6460,'Best Price','https://codeforces.com/problemset/problem/2051/E',6,3),(6461,'Counting Pairs','https://codeforces.com/problemset/problem/2051/D',6,3),(6462,'Preparing for the Exam','https://codeforces.com/problemset/problem/2051/C',6,3),(6463,'Journey','https://codeforces.com/problemset/problem/2051/B',6,3),(6464,'Preparing for the Olympiad','https://codeforces.com/problemset/problem/2051/A',6,3),(6465,'Tree Destruction','https://codeforces.com/problemset/problem/2050/G',2,3),(6466,'Maximum modulo equality','https://codeforces.com/problemset/problem/2050/F',2,3),(6467,'Three Strings','https://codeforces.com/problemset/problem/2050/E',1,3),(6468,'Digital string maximization','https://codeforces.com/problemset/problem/2050/D',1,3),(6469,'Uninteresting Number','https://codeforces.com/problemset/problem/2050/C',1,3),(6470,'Transfusion','https://codeforces.com/problemset/problem/2050/B',1,3),(6471,'Line Breaks','https://codeforces.com/problemset/problem/2050/A',1,3),(6472,'MEX OR Mania','https://codeforces.com/problemset/problem/2049/F',3,3),(6473,'Broken Queries','https://codeforces.com/problemset/problem/2049/E',2,3),(6474,'Shift + Esc','https://codeforces.com/problemset/problem/2049/D',2,3),(6475,'MEX Cycle','https://codeforces.com/problemset/problem/2049/C',1,3),(6476,'pspspsps','https://codeforces.com/problemset/problem/2049/B',1,3),(6477,'MEX Destruction','https://codeforces.com/problemset/problem/2049/A',1,3),(6478,'Kevin and Puzzle (Hard Version)','https://codeforces.com/problemset/problem/2048/I2',3,3),(6479,'Kevin and Puzzle (Easy Version)','https://codeforces.com/problemset/problem/2048/I1',3,3),(6480,'Kevin and Strange Operation','https://codeforces.com/problemset/problem/2048/H',3,3),(6481,'Kevin and Matrices','https://codeforces.com/problemset/problem/2048/G',3,3),(6482,'Kevin and Math Class','https://codeforces.com/problemset/problem/2048/F',2,3),(6483,'Kevin and Bipartite Graph','https://codeforces.com/problemset/problem/2048/E',2,3),(6484,'Kevin and Competition Memories','https://codeforces.com/problemset/problem/2048/D',2,3),(6485,'Kevin and Binary Strings','https://codeforces.com/problemset/problem/2048/C',1,3),(6486,'Kevin and Permutation','https://codeforces.com/problemset/problem/2048/B',1,3),(6487,'Kevin and Combination Lock','https://codeforces.com/problemset/problem/2048/A',1,3),(6488,'Replace Character','https://codeforces.com/problemset/problem/2047/B',1,3),(6489,'Alyona and a Square Jigsaw Puzzle','https://codeforces.com/problemset/problem/2047/A',1,3),(6490,'Yandex Cuneiform (Hard Version)','https://codeforces.com/problemset/problem/2046/F2',3,3),(6491,'Yandex Cuneiform (Easy Version)','https://codeforces.com/problemset/problem/2046/F1',3,3),(6492,'Cheops and a Contest (Hard Version)','https://codeforces.com/problemset/problem/2046/E2',3,3),(6493,'Cheops and a Contest (Easy Version)','https://codeforces.com/problemset/problem/2046/E1',3,3),(6494,'For the Emperor!','https://codeforces.com/problemset/problem/2046/D',3,3),(6495,'Adventurers','https://codeforces.com/problemset/problem/2046/C',2,3),(6496,'Move Back at a Cost','https://codeforces.com/problemset/problem/2046/B',2,3),(6497,'Swap Columns and Find a Path','https://codeforces.com/problemset/problem/2046/A',1,3),(6498,'Mirror Maze','https://codeforces.com/problemset/problem/2045/M',2,3),(6499,'Buggy DFS','https://codeforces.com/problemset/problem/2045/L',3,3),(6500,'GCDDCG','https://codeforces.com/problemset/problem/2045/K',3,3),(6501,'Xorderable Array','https://codeforces.com/problemset/problem/2045/J',3,3),(6502,'Microwavable Subsequence','https://codeforces.com/problemset/problem/2045/I',2,3),(6503,'Missing Separators','https://codeforces.com/problemset/problem/2045/H',2,3),(6504,'X Aura','https://codeforces.com/problemset/problem/2045/G',2,3),(6505,'Grid Game 3-angle','https://codeforces.com/problemset/problem/2045/F',3,3),(6506,'Narrower Passageway','https://codeforces.com/problemset/problem/2045/E',3,3),(6507,'Aquatic Dragon','https://codeforces.com/problemset/problem/2045/D',3,3),(6508,'Saraga','https://codeforces.com/problemset/problem/2045/C',1,3),(6509,'ICPC Square','https://codeforces.com/problemset/problem/2045/B',2,3),(6510,'Scrambled Scrabble','https://codeforces.com/problemset/problem/2045/A',2,3),(6511,'Hard Demon Problem','https://codeforces.com/problemset/problem/2044/H',2,3),(6512,'Medium Demon Problem (hard version)','https://codeforces.com/problemset/problem/2044/G2',2,3),(6513,'Medium Demon Problem (easy version)','https://codeforces.com/problemset/problem/2044/G1',2,3),(6514,'Easy Demon Problem','https://codeforces.com/problemset/problem/2044/F',2,3),(6515,'Insane Problem','https://codeforces.com/problemset/problem/2044/E',1,3),(6516,'Harder Problem','https://codeforces.com/problemset/problem/2044/D',1,3),(6517,'Hard Problem','https://codeforces.com/problemset/problem/2044/C',1,3),(6518,'Normal Problem','https://codeforces.com/problemset/problem/2044/B',1,3),(6519,'Easy Problem','https://codeforces.com/problemset/problem/2044/A',1,3),(6520,'Problem with Queries','https://codeforces.com/problemset/problem/2043/G',6,3),(6521,'Nim','https://codeforces.com/problemset/problem/2043/F',6,3),(6522,'Matrix Transformation','https://codeforces.com/problemset/problem/2043/E',6,3),(6523,'Problem about GCD','https://codeforces.com/problemset/problem/2043/D',6,3),(6524,'Sums on Segments','https://codeforces.com/problemset/problem/2043/C',6,3),(6525,'Digits','https://codeforces.com/problemset/problem/2043/B',6,3),(6526,'Coin Transformation','https://codeforces.com/problemset/problem/2043/A',6,3),(6527,'Two Subarrays','https://codeforces.com/problemset/problem/2042/F',3,3),(6528,'Vertex Pairs','https://codeforces.com/problemset/problem/2042/E',3,3),(6529,'Recommendations','https://codeforces.com/problemset/problem/2042/D',2,3),(6530,'Competitive Fishing','https://codeforces.com/problemset/problem/2042/C',2,3),(6531,'Game with Colored Marbles','https://codeforces.com/problemset/problem/2042/B',1,3),(6532,'Greedy Monocarp','https://codeforces.com/problemset/problem/2042/A',1,3),(6533,'Railway Construction','https://codeforces.com/problemset/problem/2041/N',3,3),(6534,'Selection Sort','https://codeforces.com/problemset/problem/2041/M',2,3),(6535,'Building Castle','https://codeforces.com/problemset/problem/2041/L',3,3),(6536,'Trophic Balance Species','https://codeforces.com/problemset/problem/2041/K',3,3),(6537,'Bottle Arrangement','https://codeforces.com/problemset/problem/2041/J',3,3),(6538,'Auto Complete','https://codeforces.com/problemset/problem/2041/I',2,3),(6539,'Sheet Music','https://codeforces.com/problemset/problem/2041/H',2,3),(6540,'Grid Game','https://codeforces.com/problemset/problem/2041/G',3,3),(6541,'Segmentation Folds','https://codeforces.com/problemset/problem/2041/F',2,3),(6542,'Beautiful Array','https://codeforces.com/problemset/problem/2041/E',1,3),(6543,'Drunken Maze','https://codeforces.com/problemset/problem/2041/D',2,3),(6544,'Cube','https://codeforces.com/problemset/problem/2041/C',2,3),(6545,'Bowling Frame','https://codeforces.com/problemset/problem/2041/B',1,3),(6546,'The Bento Box Adventure','https://codeforces.com/problemset/problem/2041/A',1,3),(6547,'Number of Cubes','https://codeforces.com/problemset/problem/2040/F',3,3),(6548,'Control of Randomness','https://codeforces.com/problemset/problem/2040/E',2,3),(6549,'Non Prime Tree','https://codeforces.com/problemset/problem/2040/D',2,3),(6550,'Ordered Permutations','https://codeforces.com/problemset/problem/2040/C',2,3),(6551,'Paint a Strip','https://codeforces.com/problemset/problem/2040/B',1,3),(6552,'Game of Division','https://codeforces.com/problemset/problem/2040/A',1,3),(6553,'Cool Swap Walk (Hard Version)','https://codeforces.com/problemset/problem/2039/H2',3,3),(6554,'Cool Swap Walk (Easy Version)','https://codeforces.com/problemset/problem/2039/H1',3,3),(6555,'Shohag Loves Pebae','https://codeforces.com/problemset/problem/2039/G',3,3),(6556,'Shohag Loves Counting (Hard Version)','https://codeforces.com/problemset/problem/2039/F2',3,3),(6557,'Shohag Loves Counting (Easy Version)','https://codeforces.com/problemset/problem/2039/F1',3,3),(6558,'Shohag Loves Inversions','https://codeforces.com/problemset/problem/2039/E',2,3),(6559,'Shohag Loves GCD','https://codeforces.com/problemset/problem/2039/D',2,3),(6560,'Shohag Loves XOR (Hard Version)','https://codeforces.com/problemset/problem/2039/C2',2,3),(6561,'Shohag Loves XOR (Easy Version)','https://codeforces.com/problemset/problem/2039/C1',1,3),(6562,'Shohag Loves Strings','https://codeforces.com/problemset/problem/2039/B',1,3),(6563,'Shohag Loves Mod','https://codeforces.com/problemset/problem/2039/A',1,3),(6564,'Fixing the Expression','https://codeforces.com/problemset/problem/2038/N',1,3),(6565,'Royal Flush','https://codeforces.com/problemset/problem/2038/M',3,3),(6566,'Bridge Renovation','https://codeforces.com/problemset/problem/2038/L',1,3),(6567,'Grid Walk','https://codeforces.com/problemset/problem/2038/K',2,3),(6568,'Waiting for...','https://codeforces.com/problemset/problem/2038/J',1,3),(6569,'Polyathlon','https://codeforces.com/problemset/problem/2038/I',2,3),(6570,'Galactic Council','https://codeforces.com/problemset/problem/2038/H',3,3),(6571,'Guess One Character','https://codeforces.com/problemset/problem/2038/G',2,3),(6572,'Alternative Platforms','https://codeforces.com/problemset/problem/2038/F',2,3),(6573,'Barrels','https://codeforces.com/problemset/problem/2038/E',3,3),(6574,'Divide OR Conquer','https://codeforces.com/problemset/problem/2038/D',2,3),(6575,'DIY','https://codeforces.com/problemset/problem/2038/C',1,3),(6576,'Make It Equal','https://codeforces.com/problemset/problem/2038/B',2,3),(6577,'Bonus Project','https://codeforces.com/problemset/problem/2038/A',1,3),(6578,'Natlan Exploring','https://codeforces.com/problemset/problem/2037/G',2,3),(6579,'Ardent Flames','https://codeforces.com/problemset/problem/2037/F',2,3),(6580,'Kachina\'s Favorite Binary String','https://codeforces.com/problemset/problem/2037/E',2,3),(6581,'Sharky Surfing','https://codeforces.com/problemset/problem/2037/D',1,3),(6582,'Superultra\'s Favorite Permutation','https://codeforces.com/problemset/problem/2037/C',1,3),(6583,'Intercepted Inputs','https://codeforces.com/problemset/problem/2037/B',1,3),(6584,'Twice','https://codeforces.com/problemset/problem/2037/A',1,3),(6585,'Library of Magic','https://codeforces.com/problemset/problem/2036/G',2,3),(6586,'XORificator 3000','https://codeforces.com/problemset/problem/2036/F',2,3),(6587,'Reverse the Rivers','https://codeforces.com/problemset/problem/2036/E',2,3),(6588,'I Love 1543','https://codeforces.com/problemset/problem/2036/D',1,3),(6589,'Anya and 1100','https://codeforces.com/problemset/problem/2036/C',1,3),(6590,'Startup','https://codeforces.com/problemset/problem/2036/B',1,3),(6591,'Quintomania','https://codeforces.com/problemset/problem/2036/A',1,3),(6592,'Peak Productivity Forces','https://codeforces.com/problemset/problem/2035/H',3,3),(6593,'Go Learn! (Hard Version)','https://codeforces.com/problemset/problem/2035/G2',3,3),(6594,'Go Learn! (Easy Version)','https://codeforces.com/problemset/problem/2035/G1',3,3),(6595,'Tree Operations','https://codeforces.com/problemset/problem/2035/F',2,3),(6596,'Monster','https://codeforces.com/problemset/problem/2035/E',2,3),(6597,'Yet Another Real Number Problem','https://codeforces.com/problemset/problem/2035/D',2,3),(6598,'Alya and Permutation','https://codeforces.com/problemset/problem/2035/C',1,3),(6599,'Everyone Loves Tres','https://codeforces.com/problemset/problem/2035/B',1,3),(6600,'Sliding','https://codeforces.com/problemset/problem/2035/A',1,3),(6601,'Rayan vs. Rayaneh','https://codeforces.com/problemset/problem/2034/H',3,3),(6602,'Simurgh\'s Watch (Hard Version)','https://codeforces.com/problemset/problem/2034/G2',3,3),(6603,'Simurgh\'s Watch (Easy Version)','https://codeforces.com/problemset/problem/2034/G1',3,3),(6604,'Khayyam\'s Royal Decree (Hard Version)','https://codeforces.com/problemset/problem/2034/F2',3,3),(6605,'Khayyam\'s Royal Decree (Easy Version)','https://codeforces.com/problemset/problem/2034/F1',2,3),(6606,'Permutations Harmony','https://codeforces.com/problemset/problem/2034/E',2,3),(6607,'Darius\' Wisdom','https://codeforces.com/problemset/problem/2034/D',2,3),(6608,'Trapped in the Witch\'s Labyrinth','https://codeforces.com/problemset/problem/2034/C',1,3),(6609,'Rakhsh\'s Revival','https://codeforces.com/problemset/problem/2034/B',1,3),(6610,'King Keykhosrow\'s Mystery','https://codeforces.com/problemset/problem/2034/A',1,3),(6611,'Sakurako and Chefir','https://codeforces.com/problemset/problem/2033/G',2,3),(6612,'Kosuke\'s Sloth','https://codeforces.com/problemset/problem/2033/F',2,3),(6613,'Sakurako, Kosuke, and the Permutation','https://codeforces.com/problemset/problem/2033/E',1,3),(6614,'Kousuke\'s Assignment','https://codeforces.com/problemset/problem/2033/D',1,3),(6615,'Sakurako\'s Field Trip','https://codeforces.com/problemset/problem/2033/C',1,3),(6616,'Sakurako and Water','https://codeforces.com/problemset/problem/2033/B',1,3),(6617,'Sakurako and Kosuke','https://codeforces.com/problemset/problem/2033/A',1,3),(6618,'Peanuts','https://codeforces.com/problemset/problem/2032/F',3,3),(6619,'Balanced','https://codeforces.com/problemset/problem/2032/E',2,3),(6620,'Genokraken','https://codeforces.com/problemset/problem/2032/D',2,3),(6621,'Trinity','https://codeforces.com/problemset/problem/2032/C',1,3),(6622,'Medians','https://codeforces.com/problemset/problem/2032/B',1,3),(6623,'Circuit','https://codeforces.com/problemset/problem/2032/A',1,3),(6624,'Penchick and Even Medians','https://codeforces.com/problemset/problem/2031/F',3,3),(6625,'Penchick and Chloe\'s Trees','https://codeforces.com/problemset/problem/2031/E',2,3),(6626,'Penchick and Desert Rabbit','https://codeforces.com/problemset/problem/2031/D',2,3),(6627,'Penchick and BBQ Buns','https://codeforces.com/problemset/problem/2031/C',1,3),(6628,'Penchick and Satay Sticks','https://codeforces.com/problemset/problem/2031/B',1,3),(6629,'Penchick and Modern Monument','https://codeforces.com/problemset/problem/2031/A',1,3),(6630,'The Destruction of the Universe (Hard Version)','https://codeforces.com/problemset/problem/2030/G2',3,3),(6631,'The Destruction of the Universe (Easy Version)','https://codeforces.com/problemset/problem/2030/G1',3,3),(6632,'Orangutan Approved Subarrays','https://codeforces.com/problemset/problem/2030/F',2,3),(6633,'MEXimize the Score','https://codeforces.com/problemset/problem/2030/E',2,3),(6634,'QED\'s Favorite Permutation','https://codeforces.com/problemset/problem/2030/D',2,3),(6635,'A TRUE Battle','https://codeforces.com/problemset/problem/2030/C',1,3),(6636,'Minimise Oneness','https://codeforces.com/problemset/problem/2030/B',1,3),(6637,'A Gift From Orangutan','https://codeforces.com/problemset/problem/2030/A',1,3),(6638,'Variance Challenge','https://codeforces.com/problemset/problem/2029/I',3,3),(6639,'Message Spread','https://codeforces.com/problemset/problem/2029/H',3,3),(6640,'Balanced Problem','https://codeforces.com/problemset/problem/2029/G',3,3),(6641,'Palindrome Everywhere','https://codeforces.com/problemset/problem/2029/F',2,3),(6642,'Common Generator','https://codeforces.com/problemset/problem/2029/E',2,3),(6643,'Cool Graph','https://codeforces.com/problemset/problem/2029/D',2,3),(6644,'New Rating','https://codeforces.com/problemset/problem/2029/C',2,3),(6645,'Replacement','https://codeforces.com/problemset/problem/2029/B',1,3),(6646,'Set','https://codeforces.com/problemset/problem/2029/A',1,3),(6647,'Alice\'s Adventures in Addition','https://codeforces.com/problemset/problem/2028/F',3,3),(6648,'Alice\'s Adventures in the Rabbit Hole','https://codeforces.com/problemset/problem/2028/E',2,3),(6649,'Alice\'s Adventures in Cards','https://codeforces.com/problemset/problem/2028/D',2,3),(6650,'Alice\'s Adventures in Cutting Cake','https://codeforces.com/problemset/problem/2028/C',2,3),(6651,'Alice\'s Adventures in Permuting','https://codeforces.com/problemset/problem/2028/B',1,3),(6652,'Alice\'s Adventures in \'\'Chess\'\'','https://codeforces.com/problemset/problem/2028/A',1,3),(6653,'Bit Game (Hard Version)','https://codeforces.com/problemset/problem/2027/E2',3,3),(6654,'Bit Game (Easy Version)','https://codeforces.com/problemset/problem/2027/E1',3,3),(6655,'The Endspeaker (Hard Version)','https://codeforces.com/problemset/problem/2027/D2',2,3),(6656,'The Endspeaker (Easy Version)','https://codeforces.com/problemset/problem/2027/D1',2,3),(6657,'Add Zeros','https://codeforces.com/problemset/problem/2027/C',1,3),(6658,'Stalin Sort','https://codeforces.com/problemset/problem/2027/B',1,3),(6659,'Rectangle Arrangement','https://codeforces.com/problemset/problem/2027/A',1,3),(6660,'Bermart Ice Cream','https://codeforces.com/problemset/problem/2026/F',3,3),(6661,'Best Subsequence','https://codeforces.com/problemset/problem/2026/E',2,3),(6662,'Sums of Segments','https://codeforces.com/problemset/problem/2026/D',2,3),(6663,'Action Figures','https://codeforces.com/problemset/problem/2026/C',1,3),(6664,'Black Cells','https://codeforces.com/problemset/problem/2026/B',1,3),(6665,'Perpendicular Segments','https://codeforces.com/problemset/problem/2026/A',1,3),(6666,'Variable Damage','https://codeforces.com/problemset/problem/2025/G',3,3),(6667,'Choose Your Queries','https://codeforces.com/problemset/problem/2025/F',3,3),(6668,'Card Game','https://codeforces.com/problemset/problem/2025/E',2,3),(6669,'Attribute Checks','https://codeforces.com/problemset/problem/2025/D',2,3),(6670,'New Game','https://codeforces.com/problemset/problem/2025/C',1,3),(6671,'Binomial Coefficients, Kind Of','https://codeforces.com/problemset/problem/2025/B',1,3),(6672,'Two Screens','https://codeforces.com/problemset/problem/2025/A',1,3),(6673,'Buying Lemonade','https://codeforces.com/problemset/problem/2024/B',1,3),(6674,'Profitable Interest Rate','https://codeforces.com/problemset/problem/2024/A',1,3),(6675,'Hills and Pits','https://codeforces.com/problemset/problem/2023/F',3,3),(6676,'Tree of Life','https://codeforces.com/problemset/problem/2023/E',3,3),(6677,'Many Games','https://codeforces.com/problemset/problem/2023/D',3,3),(6678,'C+K+S','https://codeforces.com/problemset/problem/2023/C',2,3),(6679,'Skipping','https://codeforces.com/problemset/problem/2023/B',2,3),(6680,'Concatenation of Arrays','https://codeforces.com/problemset/problem/2023/A',1,3),(6681,'Billetes MX (Hard Version)','https://codeforces.com/problemset/problem/2022/E2',3,3),(6682,'Billetes MX (Easy Version)','https://codeforces.com/problemset/problem/2022/E1',2,3),(6683,'Asesino (Hard Version)','https://codeforces.com/problemset/problem/2022/D2',3,3),(6684,'Asesino (Easy Version)','https://codeforces.com/problemset/problem/2022/D1',2,3),(6685,'Gerrymandering','https://codeforces.com/problemset/problem/2022/C',2,3),(6686,'Kar Salesman','https://codeforces.com/problemset/problem/2022/B',1,3),(6687,'Bus to Pénjamo','https://codeforces.com/problemset/problem/2022/A',1,3),(6688,'Digital Village (Extreme Version)','https://codeforces.com/problemset/problem/2021/E3',3,3),(6689,'Digital Village (Hard Version)','https://codeforces.com/problemset/problem/2021/E2',2,3),(6690,'Digital Village (Easy Version)','https://codeforces.com/problemset/problem/2021/E1',2,3),(6691,'Boss, Thirsty','https://codeforces.com/problemset/problem/2021/D',2,3),(6692,'Adjust The Presentation (Hard Version)','https://codeforces.com/problemset/problem/2021/C2',2,3),(6693,'Adjust The Presentation (Easy Version)','https://codeforces.com/problemset/problem/2021/C1',1,3),(6694,'Maximize Mex','https://codeforces.com/problemset/problem/2021/B',1,3),(6695,'Meaning Mean','https://codeforces.com/problemset/problem/2021/A',1,3),(6696,'Count Leaves','https://codeforces.com/problemset/problem/2020/F',3,3),(6697,'Expected Power','https://codeforces.com/problemset/problem/2020/E',2,3),(6698,'Connect the Dots','https://codeforces.com/problemset/problem/2020/D',2,3),(6699,'Bitwise Balancing','https://codeforces.com/problemset/problem/2020/C',1,3),(6700,'Brightness Begins','https://codeforces.com/problemset/problem/2020/B',1,3),(6701,'Find Minimum Operations','https://codeforces.com/problemset/problem/2020/A',1,3),(6702,'All Pairs Segments','https://codeforces.com/problemset/problem/2019/B',1,3),(6703,'Max Plus Size','https://codeforces.com/problemset/problem/2019/A',1,3),(6704,'Speedbreaker Counting (Hard Version)','https://codeforces.com/problemset/problem/2018/F3',3,3),(6705,'Speedbreaker Counting (Medium Version)','https://codeforces.com/problemset/problem/2018/F2',3,3),(6706,'Speedbreaker Counting (Easy Version)','https://codeforces.com/problemset/problem/2018/F1',3,3),(6707,'Complex Segments (Hard Version)','https://codeforces.com/problemset/problem/2018/E2',3,3),(6708,'Complex Segments (Easy Version)','https://codeforces.com/problemset/problem/2018/E1',3,3),(6709,'Max Plus Min Plus Size','https://codeforces.com/problemset/problem/2018/D',2,3),(6710,'Tree Pruning','https://codeforces.com/problemset/problem/2018/C',2,3),(6711,'Speedbreaker','https://codeforces.com/problemset/problem/2018/B',2,3),(6712,'Cards Partition','https://codeforces.com/problemset/problem/2018/A',2,3),(6713,'Robin Hood Archery','https://codeforces.com/problemset/problem/2014/H',2,3),(6714,'Milky Days','https://codeforces.com/problemset/problem/2014/G',2,3),(6715,'Sheriff\'s Defense','https://codeforces.com/problemset/problem/2014/F',2,3),(6716,'Rendez-vous de Marian et Robin','https://codeforces.com/problemset/problem/2014/E',2,3),(6717,'Robert Hood and Mrs Hood','https://codeforces.com/problemset/problem/2014/D',1,3),(6718,'Robin Hood in Town','https://codeforces.com/problemset/problem/2014/C',1,3),(6719,'Robin Hood and the Major Oak','https://codeforces.com/problemset/problem/2014/B',1,3),(6720,'Robin Helps','https://codeforces.com/problemset/problem/2014/A',1,3),(6721,'Game in Tree (Hard Version)','https://codeforces.com/problemset/problem/2013/F2',3,3),(6722,'Game in Tree (Easy Version)','https://codeforces.com/problemset/problem/2013/F1',3,3),(6723,'Prefix GCD','https://codeforces.com/problemset/problem/2013/E',2,3),(6724,'Minimize the Difference','https://codeforces.com/problemset/problem/2013/D',2,3),(6725,'Password Cracking','https://codeforces.com/problemset/problem/2013/C',1,3),(6726,'Battle for Survive','https://codeforces.com/problemset/problem/2013/B',1,3),(6727,'Zhan\'s Blender','https://codeforces.com/problemset/problem/2013/A',1,3),(6728,'Stack and Queue','https://codeforces.com/problemset/problem/2011/I',6,3),(6729,'Strange Matrix','https://codeforces.com/problemset/problem/2011/H',6,3),(6730,'Removal of a Permutation','https://codeforces.com/problemset/problem/2011/G',6,3),(6731,'Good Subarray','https://codeforces.com/problemset/problem/2011/F',6,3),(6732,'Rock-Paper-Scissors Bot','https://codeforces.com/problemset/problem/2011/E',6,3),(6733,'Among Wolves','https://codeforces.com/problemset/problem/2011/D',6,3),(6734,'Split the Expression','https://codeforces.com/problemset/problem/2011/C',6,3),(6735,'Shuffle','https://codeforces.com/problemset/problem/2011/B',6,3),(6736,'Problem Solving','https://codeforces.com/problemset/problem/2011/A',6,3),(6737,'Message Transmission Error (hard version)','https://codeforces.com/problemset/problem/2010/C2',2,3),(6738,'Message Transmission Error (easy version)','https://codeforces.com/problemset/problem/2010/C1',1,3),(6739,'Three Brothers','https://codeforces.com/problemset/problem/2010/B',1,3),(6740,'Alternating Sum of Numbers','https://codeforces.com/problemset/problem/2010/A',1,3),(6741,'Yunli\'s Subarray Queries (extreme version)','https://codeforces.com/problemset/problem/2009/G3',3,3),(6742,'Yunli\'s Subarray Queries (hard version)','https://codeforces.com/problemset/problem/2009/G2',2,3),(6743,'Yunli\'s Subarray Queries (easy version)','https://codeforces.com/problemset/problem/2009/G1',2,3),(6744,'Firefly\'s Queries','https://codeforces.com/problemset/problem/2009/F',2,3),(6745,'Klee\'s SUPER DUPER LARGE Array!!!','https://codeforces.com/problemset/problem/2009/E',1,3),(6746,'Satyam and Counting','https://codeforces.com/problemset/problem/2009/D',1,3),(6747,'The Legend of Freya the Frog','https://codeforces.com/problemset/problem/2009/C',1,3),(6748,'osu!mania','https://codeforces.com/problemset/problem/2009/B',1,3),(6749,'Minimize!','https://codeforces.com/problemset/problem/2009/A',1,3),(6750,'Sakurako\'s Test','https://codeforces.com/problemset/problem/2008/H',2,3),(6751,'Sakurako\'s Task','https://codeforces.com/problemset/problem/2008/G',2,3),(6752,'Sakurako\'s Box','https://codeforces.com/problemset/problem/2008/F',1,3),(6753,'Alternating String','https://codeforces.com/problemset/problem/2008/E',1,3),(6754,'Sakurako\'s Hobby','https://codeforces.com/problemset/problem/2008/D',1,3),(6755,'Longest Good Array','https://codeforces.com/problemset/problem/2008/C',1,3),(6756,'Square or Not','https://codeforces.com/problemset/problem/2008/B',1,3),(6757,'Sakurako\'s Exam','https://codeforces.com/problemset/problem/2008/A',1,3),(6758,'Dora and C++','https://codeforces.com/problemset/problem/2007/C',1,3),(6759,'Index and Maximum Value','https://codeforces.com/problemset/problem/2007/B',1,3),(6760,'Dora\'s Set','https://codeforces.com/problemset/problem/2007/A',1,3),(6761,'Dora\'s Paint','https://codeforces.com/problemset/problem/2006/F',3,3),(6762,'Iris\'s Full Binary Tree','https://codeforces.com/problemset/problem/2006/E',3,3),(6763,'Iris and Adjacent Products','https://codeforces.com/problemset/problem/2006/D',3,3),(6764,'Eri and Expanded Sets','https://codeforces.com/problemset/problem/2006/C',2,3),(6765,'Iris and the Tree','https://codeforces.com/problemset/problem/2006/B',2,3),(6766,'Iris and Game on the Tree','https://codeforces.com/problemset/problem/2006/A',2,3),(6767,'Subtangle Game (Hard Version)','https://codeforces.com/problemset/problem/2005/E2',2,3),(6768,'Subtangle Game (Easy Version)','https://codeforces.com/problemset/problem/2005/E1',2,3),(6769,'Alter the GCD','https://codeforces.com/problemset/problem/2005/D',2,3),(6770,'Lazy Narek','https://codeforces.com/problemset/problem/2005/C',2,3),(6771,'The Strict Teacher (Hard Version)','https://codeforces.com/problemset/problem/2005/B2',1,3),(6772,'The Strict Teacher (Easy Version)','https://codeforces.com/problemset/problem/2005/B1',1,3),(6773,'Simple Palindrome','https://codeforces.com/problemset/problem/2005/A',1,3),(6774,'Substring Compression','https://codeforces.com/problemset/problem/2004/G',3,3),(6775,'Make a Palindrome','https://codeforces.com/problemset/problem/2004/F',3,3),(6776,'Not a Nim Problem','https://codeforces.com/problemset/problem/2004/E',2,3),(6777,'Colored Portals','https://codeforces.com/problemset/problem/2004/D',2,3),(6778,'Splitting Items','https://codeforces.com/problemset/problem/2004/C',1,3),(6779,'Game with Doors','https://codeforces.com/problemset/problem/2004/B',1,3),(6780,'Closest Point','https://codeforces.com/problemset/problem/2004/A',1,3),(6781,'Turtle and Three Sequences','https://codeforces.com/problemset/problem/2003/F',3,3),(6782,'Turtle and Inversions (Hard Version)','https://codeforces.com/problemset/problem/2003/E2',3,3),(6783,'Turtle and Inversions (Easy Version)','https://codeforces.com/problemset/problem/2003/E1',3,3),(6784,'Turtle and a MEX Problem (Hard Version)','https://codeforces.com/problemset/problem/2003/D2',2,3),(6785,'Turtle and a MEX Problem (Easy Version)','https://codeforces.com/problemset/problem/2003/D1',1,3),(6786,'Turtle and Good Pairs','https://codeforces.com/problemset/problem/2003/C',1,3),(6787,'Turtle and Piggy Are Playing a Game 2','https://codeforces.com/problemset/problem/2003/B',1,3),(6788,'Turtle and Good Strings','https://codeforces.com/problemset/problem/2003/A',1,3),(6789,'Counting 101','https://codeforces.com/problemset/problem/2002/H',3,3),(6790,'Lattice Optimizing','https://codeforces.com/problemset/problem/2002/G',3,3),(6791,'Court Blue (Hard Version)','https://codeforces.com/problemset/problem/2002/F2',3,3),(6792,'Court Blue (Easy Version)','https://codeforces.com/problemset/problem/2002/F1',3,3),(6793,'Cosmic Rays','https://codeforces.com/problemset/problem/2002/E',2,3),(6794,'DFS Checker (Hard Version)','https://codeforces.com/problemset/problem/2002/D2',2,3),(6795,'DFS Checker (Easy Version)','https://codeforces.com/problemset/problem/2002/D1',2,3),(6796,'Black Circles','https://codeforces.com/problemset/problem/2002/C',1,3),(6797,'Removals Game','https://codeforces.com/problemset/problem/2002/B',1,3),(6798,'Distanced Coloring','https://codeforces.com/problemset/problem/2002/A',1,3),(6799,'Deterministic Heap (Hard Version)','https://codeforces.com/problemset/problem/2001/E2',3,3),(6800,'Deterministic Heap (Easy Version)','https://codeforces.com/problemset/problem/2001/E1',2,3),(6801,'Longest Max Min Subsequence','https://codeforces.com/problemset/problem/2001/D',2,3),(6802,'Guess The Tree','https://codeforces.com/problemset/problem/2001/C',1,3),(6803,'Generate Permutation','https://codeforces.com/problemset/problem/2001/B',1,3),(6804,'Make All Equal','https://codeforces.com/problemset/problem/2001/A',1,3),(6805,'Ksyusha and the Loaded Set','https://codeforces.com/problemset/problem/2000/H',2,3),(6806,'Call During the Journey','https://codeforces.com/problemset/problem/2000/G',2,3),(6807,'Color Rows and Columns','https://codeforces.com/problemset/problem/2000/F',2,3),(6808,'Photoshoot for Gorillas','https://codeforces.com/problemset/problem/2000/E',1,3),(6809,'Right Left Wrong','https://codeforces.com/problemset/problem/2000/D',1,3),(6810,'Numeric String Template','https://codeforces.com/problemset/problem/2000/C',1,3),(6811,'Seating in a Bus','https://codeforces.com/problemset/problem/2000/B',1,3),(6812,'Primary Task','https://codeforces.com/problemset/problem/2000/A',1,3),(6813,'Ruler (hard version)','https://codeforces.com/problemset/problem/1999/G2',2,3),(6814,'Ruler (easy version)','https://codeforces.com/problemset/problem/1999/G1',1,3),(6815,'Expected Median','https://codeforces.com/problemset/problem/1999/F',1,3),(6816,'Triple Operations','https://codeforces.com/problemset/problem/1999/E',1,3),(6817,'Slavic\'s Exam','https://codeforces.com/problemset/problem/1999/D',1,3),(6818,'Showering','https://codeforces.com/problemset/problem/1999/C',1,3),(6819,'Card Game','https://codeforces.com/problemset/problem/1999/B',1,3),(6820,'A+B Again?','https://codeforces.com/problemset/problem/1999/A',1,3),(6821,'Eliminating Balls With Merging (Hard Version)','https://codeforces.com/problemset/problem/1998/E2',2,3),(6822,'Eliminating Balls With Merging (Easy Version)','https://codeforces.com/problemset/problem/1998/E1',2,3),(6823,'Determine Winning Islands in Race','https://codeforces.com/problemset/problem/1998/D',2,3),(6824,'Perform Operations to Maximize Score','https://codeforces.com/problemset/problem/1998/C',2,3),(6825,'Minimize Equal Sum Subarrays','https://codeforces.com/problemset/problem/1998/B',1,3),(6826,'Find K Distinct Points with Fixed Center','https://codeforces.com/problemset/problem/1998/A',1,3),(6827,'Chips on a Line','https://codeforces.com/problemset/problem/1997/F',3,3),(6828,'Level Up','https://codeforces.com/problemset/problem/1997/E',2,3),(6829,'Maximize the Root','https://codeforces.com/problemset/problem/1997/D',1,3),(6830,'Even Positions','https://codeforces.com/problemset/problem/1997/C',1,3),(6831,'Make Three Regions','https://codeforces.com/problemset/problem/1997/B',1,3),(6832,'Strong Password','https://codeforces.com/problemset/problem/1997/A',1,3),(6833,'Penacony','https://codeforces.com/problemset/problem/1996/G',2,3),(6834,'Bomb','https://codeforces.com/problemset/problem/1996/F',2,3),(6835,'Decode','https://codeforces.com/problemset/problem/1996/E',2,3),(6836,'Fun','https://codeforces.com/problemset/problem/1996/D',1,3),(6837,'Sort','https://codeforces.com/problemset/problem/1996/C',1,3),(6838,'Scale','https://codeforces.com/problemset/problem/1996/B',1,3),(6839,'Legs','https://codeforces.com/problemset/problem/1996/A',1,3),(6840,'Let Me Teach You a Lesson (Hard Version)','https://codeforces.com/problemset/problem/1995/E2',3,3),(6841,'Let Me Teach You a Lesson (Easy Version)','https://codeforces.com/problemset/problem/1995/E1',3,3),(6842,'Cases','https://codeforces.com/problemset/problem/1995/D',2,3),(6843,'Squaring','https://codeforces.com/problemset/problem/1995/C',2,3),(6844,'Bouquet (Hard Version)','https://codeforces.com/problemset/problem/1995/B2',2,3),(6845,'Bouquet (Easy Version)','https://codeforces.com/problemset/problem/1995/B1',1,3),(6846,'Diagonals','https://codeforces.com/problemset/problem/1995/A',1,3),(6847,'Fortnite','https://codeforces.com/problemset/problem/1994/H',3,3),(6848,'Minecraft','https://codeforces.com/problemset/problem/1994/G',3,3),(6849,'Stardew Valley','https://codeforces.com/problemset/problem/1994/F',2,3),(6850,'Wooden Game','https://codeforces.com/problemset/problem/1994/E',2,3),(6851,'Funny Game','https://codeforces.com/problemset/problem/1994/D',2,3),(6852,'Hungry Games','https://codeforces.com/problemset/problem/1994/C',2,3),(6853,'Fun Game','https://codeforces.com/problemset/problem/1994/B',1,3),(6854,'Diverse Game','https://codeforces.com/problemset/problem/1994/A',1,3),(6855,'Dyn-scripted Robot (Hard Version)','https://codeforces.com/problemset/problem/1993/F2',3,3),(6856,'Dyn-scripted Robot (Easy Version)','https://codeforces.com/problemset/problem/1993/F1',2,3),(6857,'Xor-Grid Problem','https://codeforces.com/problemset/problem/1993/E',3,3),(6858,'Med-imize','https://codeforces.com/problemset/problem/1993/D',2,3),(6859,'Light Switches','https://codeforces.com/problemset/problem/1993/C',1,3),(6860,'Parity and Sum','https://codeforces.com/problemset/problem/1993/B',1,3),(6861,'Question Marks','https://codeforces.com/problemset/problem/1993/A',1,3),(6862,'Ultra-Meow','https://codeforces.com/problemset/problem/1992/G',2,3),(6863,'Valuable Cards','https://codeforces.com/problemset/problem/1992/F',2,3),(6864,'Novice\'s Mistake','https://codeforces.com/problemset/problem/1992/E',2,3),(6865,'Test of Love','https://codeforces.com/problemset/problem/1992/D',1,3),(6866,'Gorilla and Permutation','https://codeforces.com/problemset/problem/1992/C',1,3),(6867,'Angry Monk','https://codeforces.com/problemset/problem/1992/B',1,3),(6868,'Only Pluses','https://codeforces.com/problemset/problem/1992/A',1,3),(6869,'Grid Game','https://codeforces.com/problemset/problem/1991/I',3,3),(6870,'Prime Split Game','https://codeforces.com/problemset/problem/1991/H',3,3),(6871,'Grid Reset','https://codeforces.com/problemset/problem/1991/G',3,3),(6872,'Triangle Formation','https://codeforces.com/problemset/problem/1991/F',2,3),(6873,'Coloring Game','https://codeforces.com/problemset/problem/1991/E',2,3),(6874,'Prime XOR Coloring','https://codeforces.com/problemset/problem/1991/D',2,3),(6875,'Absolute Zero','https://codeforces.com/problemset/problem/1991/C',1,3),(6876,'AND Reconstruction','https://codeforces.com/problemset/problem/1991/B',1,3),(6877,'Maximize the Last Element','https://codeforces.com/problemset/problem/1991/A',1,3),(6878,'Polygonal Segments','https://codeforces.com/problemset/problem/1990/F',3,3),(6879,'Catch the Mole(Hard Version)','https://codeforces.com/problemset/problem/1990/E2',3,3),(6880,'Catch the Mole(Easy Version)','https://codeforces.com/problemset/problem/1990/E1',2,3),(6881,'Grid Puzzle','https://codeforces.com/problemset/problem/1990/D',2,3),(6882,'Mad MAD Sum','https://codeforces.com/problemset/problem/1990/C',1,3),(6883,'Array Craft','https://codeforces.com/problemset/problem/1990/B',1,3),(6884,'Submission Bait','https://codeforces.com/problemset/problem/1990/A',1,3),(6885,'Simultaneous Coloring','https://codeforces.com/problemset/problem/1989/F',3,3),(6886,'Distance to Different','https://codeforces.com/problemset/problem/1989/E',2,3),(6887,'Smithing Skill','https://codeforces.com/problemset/problem/1989/D',2,3),(6888,'Two Movies','https://codeforces.com/problemset/problem/1989/C',1,3),(6889,'Substring and Subsequence','https://codeforces.com/problemset/problem/1989/B',1,3),(6890,'Catch the Coin','https://codeforces.com/problemset/problem/1989/A',1,3),(6891,'Heartbeat','https://codeforces.com/problemset/problem/1988/F',3,3),(6892,'Range Minimum Sum','https://codeforces.com/problemset/problem/1988/E',2,3),(6893,'The Omnipotent Monster Killer','https://codeforces.com/problemset/problem/1988/D',2,3),(6894,'Increasing Sequence with Fixed OR','https://codeforces.com/problemset/problem/1988/C',1,3),(6895,'Make Majority','https://codeforces.com/problemset/problem/1988/B',1,3),(6896,'Split the Multiset','https://codeforces.com/problemset/problem/1988/A',1,3),(6897,'Fumo Temple','https://codeforces.com/problemset/problem/1987/H',3,3),(6898,'Spinning Round (Hard Version)','https://codeforces.com/problemset/problem/1987/G2',3,3),(6899,'Spinning Round (Easy Version)','https://codeforces.com/problemset/problem/1987/G1',3,3),(6900,'Interesting Problem (Hard Version)','https://codeforces.com/problemset/problem/1987/F2',3,3),(6901,'Interesting Problem (Easy Version)','https://codeforces.com/problemset/problem/1987/F1',2,3),(6902,'Wonderful Tree!','https://codeforces.com/problemset/problem/1987/E',2,3),(6903,'World is Mine','https://codeforces.com/problemset/problem/1987/D',2,3),(6904,'Basil\'s Garden','https://codeforces.com/problemset/problem/1987/C',1,3),(6905,'K-Sort','https://codeforces.com/problemset/problem/1987/B',1,3),(6906,'Upload More RAM','https://codeforces.com/problemset/problem/1987/A',1,3),(6907,'Permutation Problem (Hard Version)','https://codeforces.com/problemset/problem/1986/G2',2,3),(6908,'Permutation Problem (Simple Version)','https://codeforces.com/problemset/problem/1986/G1',2,3),(6909,'Non-academic Problem','https://codeforces.com/problemset/problem/1986/F',2,3),(6910,'Beautiful Array','https://codeforces.com/problemset/problem/1986/E',2,3),(6911,'Mathematical Problem','https://codeforces.com/problemset/problem/1986/D',1,3),(6912,'Update Queries','https://codeforces.com/problemset/problem/1986/C',1,3),(6913,'Matrix Stabilization','https://codeforces.com/problemset/problem/1986/B',1,3),(6914,'X Axis','https://codeforces.com/problemset/problem/1986/A',1,3),(6915,'Maximize the Largest Component (Hard Version)','https://codeforces.com/problemset/problem/1985/H2',2,3),(6916,'Maximize the Largest Component (Easy Version)','https://codeforces.com/problemset/problem/1985/H1',2,3),(6917,'D-Function','https://codeforces.com/problemset/problem/1985/G',2,3),(6918,'Final Boss','https://codeforces.com/problemset/problem/1985/F',1,3),(6919,'Secret Box','https://codeforces.com/problemset/problem/1985/E',1,3),(6920,'Manhattan Circle','https://codeforces.com/problemset/problem/1985/D',1,3),(6921,'Good Prefixes','https://codeforces.com/problemset/problem/1985/C',1,3),(6922,'Maximum Multiple Sum','https://codeforces.com/problemset/problem/1985/B',1,3),(6923,'Creating Words','https://codeforces.com/problemset/problem/1985/A',1,3),(6924,'Tower Capturing','https://codeforces.com/problemset/problem/1984/H',3,3),(6925,'Magic Trick II','https://codeforces.com/problemset/problem/1984/G',3,3),(6926,'Reconstruction','https://codeforces.com/problemset/problem/1984/F',2,3),(6927,'Shuffle','https://codeforces.com/problemset/problem/1984/E',2,3),(6928,'\'\'a\'\' String Problem','https://codeforces.com/problemset/problem/1984/D',2,3),(6929,'Magnitude (Hard Version)','https://codeforces.com/problemset/problem/1984/C2',2,3),(6930,'Magnitude (Easy Version)','https://codeforces.com/problemset/problem/1984/C1',1,3),(6931,'Large Addition','https://codeforces.com/problemset/problem/1984/B',1,3),(6932,'Strange Splitting','https://codeforces.com/problemset/problem/1984/A',1,3),(6933,'Your Loss','https://codeforces.com/problemset/problem/1983/G',3,3),(6934,'array-value','https://codeforces.com/problemset/problem/1983/F',2,3),(6935,'I Love Balls','https://codeforces.com/problemset/problem/1983/E',2,3),(6936,'Swap Dilemma','https://codeforces.com/problemset/problem/1983/D',2,3),(6937,'Have Your Cake and Eat It Too','https://codeforces.com/problemset/problem/1983/C',1,3),(6938,'Corner Twist','https://codeforces.com/problemset/problem/1983/B',1,3),(6939,'Array Divisibility','https://codeforces.com/problemset/problem/1983/A',1,3),(6940,'Sorting Problem Again','https://codeforces.com/problemset/problem/1982/F',3,3),(6941,'Number of k-good subarrays','https://codeforces.com/problemset/problem/1982/E',2,3),(6942,'Beauty of the mountains','https://codeforces.com/problemset/problem/1982/D',2,3),(6943,'Boring Day','https://codeforces.com/problemset/problem/1982/C',1,3),(6944,'Collatz Conjecture','https://codeforces.com/problemset/problem/1982/B',1,3),(6945,'Soccer','https://codeforces.com/problemset/problem/1982/A',1,3),(6946,'Turtle and Paths on a Tree','https://codeforces.com/problemset/problem/1981/F',3,3),(6947,'Turtle and Intersected Segments','https://codeforces.com/problemset/problem/1981/E',3,3),(6948,'Turtle and Multiplication','https://codeforces.com/problemset/problem/1981/D',2,3),(6949,'Turtle and an Incomplete Sequence','https://codeforces.com/problemset/problem/1981/C',2,3),(6950,'Turtle and an Infinite Sequence','https://codeforces.com/problemset/problem/1981/B',1,3),(6951,'Turtle and Piggy Are Playing a Game','https://codeforces.com/problemset/problem/1981/A',1,3),(6952,'Yasya and the Mysterious Tree','https://codeforces.com/problemset/problem/1980/G',2,3),(6953,'Field Division (hard version)','https://codeforces.com/problemset/problem/1980/F2',2,3),(6954,'Field Division (easy version)','https://codeforces.com/problemset/problem/1980/F1',2,3),(6955,'Permutation of Rows and Columns','https://codeforces.com/problemset/problem/1980/E',2,3),(6956,'GCD-sequence','https://codeforces.com/problemset/problem/1980/D',1,3),(6957,'Sofia and the Lost Operations','https://codeforces.com/problemset/problem/1980/C',1,3),(6958,'Choosing Cubes','https://codeforces.com/problemset/problem/1980/B',1,3),(6959,'Problem Generator','https://codeforces.com/problemset/problem/1980/A',1,3),(6960,'Kostyanych\'s Theorem','https://codeforces.com/problemset/problem/1979/F',3,3),(6961,'Manhattan Triangle','https://codeforces.com/problemset/problem/1979/E',2,3),(6962,'Fixing a Binary String','https://codeforces.com/problemset/problem/1979/D',2,3),(6963,'Earning on Bets','https://codeforces.com/problemset/problem/1979/C',1,3),(6964,'XOR Sequences','https://codeforces.com/problemset/problem/1979/B',1,3),(6965,'Guess the Maximum','https://codeforces.com/problemset/problem/1979/A',1,3),(6966,'Large Graph','https://codeforces.com/problemset/problem/1978/F',2,3),(6967,'Computing Machine','https://codeforces.com/problemset/problem/1978/E',2,3),(6968,'Elections','https://codeforces.com/problemset/problem/1978/D',2,3),(6969,'Manhattan Permutations','https://codeforces.com/problemset/problem/1978/C',1,3),(6970,'New Bakery','https://codeforces.com/problemset/problem/1978/B',1,3),(6971,'Alice and Books','https://codeforces.com/problemset/problem/1978/A',1,3),(6972,'Tensor','https://codeforces.com/problemset/problem/1977/E',3,3),(6973,'XORificator','https://codeforces.com/problemset/problem/1977/D',2,3),(6974,'Nikita and LCM','https://codeforces.com/problemset/problem/1977/C',2,3),(6975,'Binary Colouring','https://codeforces.com/problemset/problem/1977/B',1,3),(6976,'Little Nikita','https://codeforces.com/problemset/problem/1977/A',1,3),(6977,'Remove Bridges','https://codeforces.com/problemset/problem/1976/F',3,3),(6978,'Splittable Permutations','https://codeforces.com/problemset/problem/1976/E',2,3),(6979,'Invertible Bracket Sequences','https://codeforces.com/problemset/problem/1976/D',2,3),(6980,'Job Interview','https://codeforces.com/problemset/problem/1976/C',2,3),(6981,'Increase/Decrease/Copy','https://codeforces.com/problemset/problem/1976/B',1,3),(6982,'Verify Password','https://codeforces.com/problemset/problem/1976/A',1,3),(6983,'Mind Bloom','https://codeforces.com/problemset/problem/1975/I',3,3),(6984,'378QAQ and Core','https://codeforces.com/problemset/problem/1975/H',3,3),(6985,'Zimpha Fan Club','https://codeforces.com/problemset/problem/1975/G',3,3),(6986,'Set','https://codeforces.com/problemset/problem/1975/F',3,3),(6987,'Chain Queries','https://codeforces.com/problemset/problem/1975/E',2,3),(6988,'Paint the Tree','https://codeforces.com/problemset/problem/1975/D',2,3),(6989,'Chamo and Mocha\'s Array','https://codeforces.com/problemset/problem/1975/C',1,3),(6990,'378QAQ and Mocha\'s Array','https://codeforces.com/problemset/problem/1975/B',1,3),(6991,'Bazoka and Mocha\'s Array','https://codeforces.com/problemset/problem/1975/A',1,3),(6992,'Money Buys Less Happiness Now ','https://codeforces.com/problemset/problem/1974/G',2,3),(6993,'Cutting Game','https://codeforces.com/problemset/problem/1974/F',2,3),(6994,'Money Buys Happiness','https://codeforces.com/problemset/problem/1974/E',2,3),(6995,'Ingenuity-2','https://codeforces.com/problemset/problem/1974/D',1,3),(6996,'Beautiful Triple Pairs','https://codeforces.com/problemset/problem/1974/C',1,3),(6997,'Symmetric Encoding','https://codeforces.com/problemset/problem/1974/B',1,3),(6998,'Phone Desktop','https://codeforces.com/problemset/problem/1974/A',1,3),(6999,'Maximum GCD Sum Queries','https://codeforces.com/problemset/problem/1973/F',3,3),(7000,'Cat, Fox and Swaps ','https://codeforces.com/problemset/problem/1973/E',2,3),(7001,'Cat, Fox and Maximum Array Split','https://codeforces.com/problemset/problem/1973/D',2,3),(7002,'Cat, Fox and Double Maximum','https://codeforces.com/problemset/problem/1973/C',2,3),(7003,'Cat, Fox and the Lonely Array','https://codeforces.com/problemset/problem/1973/B',1,3),(7004,'Chess For Three','https://codeforces.com/problemset/problem/1973/A',1,3),(7005,'Coin Games','https://codeforces.com/problemset/problem/1972/B',1,3),(7006,'Contest Proposal','https://codeforces.com/problemset/problem/1972/A',1,3),(7007,'±1','https://codeforces.com/problemset/problem/1971/H',2,3),(7008,'XOUR','https://codeforces.com/problemset/problem/1971/G',2,3),(7009,'Circle Perimeter','https://codeforces.com/problemset/problem/1971/F',2,3),(7010,'Find the Car','https://codeforces.com/problemset/problem/1971/E',1,3),(7011,'Binary Cut','https://codeforces.com/problemset/problem/1971/D',1,3),(7012,'Clock and Strings','https://codeforces.com/problemset/problem/1971/C',1,3),(7013,'Different String','https://codeforces.com/problemset/problem/1971/B',1,3),(7014,'My First Sorting Problem','https://codeforces.com/problemset/problem/1971/A',1,3),(7015,'Min-Fund Prison (Hard)','https://codeforces.com/problemset/problem/1970/G3',2,3),(7016,'Min-Fund Prison (Medium)','https://codeforces.com/problemset/problem/1970/G2',2,3),(7017,'Min-Fund Prison (Easy)','https://codeforces.com/problemset/problem/1970/G1',2,3),(7018,'Playing Quidditch (Hard)','https://codeforces.com/problemset/problem/1970/F3',2,3),(7019,'Playing Quidditch (Medium)','https://codeforces.com/problemset/problem/1970/F2',2,3),(7020,'Playing Quidditch (Easy)','https://codeforces.com/problemset/problem/1970/F1',2,3),(7021,'Trails (Hard)','https://codeforces.com/problemset/problem/1970/E3',2,3),(7022,'Trails (Medium)','https://codeforces.com/problemset/problem/1970/E2',2,3),(7023,'Trails (Easy)','https://codeforces.com/problemset/problem/1970/E1',2,3),(7024,'Arithmancy (Hard)','https://codeforces.com/problemset/problem/1970/D3',3,3),(7025,'Arithmancy (Medium)','https://codeforces.com/problemset/problem/1970/D2',3,3),(7026,'Arithmancy (Easy)','https://codeforces.com/problemset/problem/1970/D1',2,3),(7027,'Game on Tree (Hard)','https://codeforces.com/problemset/problem/1970/C3',2,3),(7028,'Game on Tree (Medium)','https://codeforces.com/problemset/problem/1970/C2',2,3),(7029,'Game on Tree (Easy)','https://codeforces.com/problemset/problem/1970/C1',1,3),(7030,'Exact Neighbours (Hard)','https://codeforces.com/problemset/problem/1970/B3',2,3),(7031,'Exact Neighbours (Medium)','https://codeforces.com/problemset/problem/1970/B2',2,3),(7032,'Exact Neighbours (Easy)','https://codeforces.com/problemset/problem/1970/B1',2,3),(7033,'Balanced Unshuffle (Hard)','https://codeforces.com/problemset/problem/1970/A3',2,3),(7034,'Balanced Unshuffle (Medium)','https://codeforces.com/problemset/problem/1970/A2',2,3),(7035,'Balanced Shuffle (Easy)','https://codeforces.com/problemset/problem/1970/A1',1,3),(7036,'Card Pairing','https://codeforces.com/problemset/problem/1969/F',3,3),(7037,'Unique Array','https://codeforces.com/problemset/problem/1969/E',2,3),(7038,'Shop Game','https://codeforces.com/problemset/problem/1969/D',2,3),(7039,'Minimizing the Sum','https://codeforces.com/problemset/problem/1969/C',2,3),(7040,'Shifts and Sorting','https://codeforces.com/problemset/problem/1969/B',1,3),(7041,'Two Friends','https://codeforces.com/problemset/problem/1969/A',1,3),(7042,'Division + LCP (hard version)','https://codeforces.com/problemset/problem/1968/G2',2,3),(7043,'Division + LCP (easy version)','https://codeforces.com/problemset/problem/1968/G1',2,3),(7044,'Equal XOR Segments','https://codeforces.com/problemset/problem/1968/F',2,3),(7045,'Cells Arrangement','https://codeforces.com/problemset/problem/1968/E',2,3),(7046,'Permutation Game','https://codeforces.com/problemset/problem/1968/D',1,3),(7047,'Assembly via Remainders','https://codeforces.com/problemset/problem/1968/C',1,3),(7048,'Prefiquence','https://codeforces.com/problemset/problem/1968/B',1,3),(7049,'Maximize?','https://codeforces.com/problemset/problem/1968/A',1,3),(7050,'Next and Prev','https://codeforces.com/problemset/problem/1967/F',3,3),(7051,'Again Counting Arrays (Hard Version)','https://codeforces.com/problemset/problem/1967/E2',3,3),(7052,'Again Counting Arrays (Easy Version)','https://codeforces.com/problemset/problem/1967/E1',3,3),(7053,'Long Way to be Non-decreasing','https://codeforces.com/problemset/problem/1967/D',3,3),(7054,'Fenwick Tree','https://codeforces.com/problemset/problem/1967/C',2,3),(7055,'Reverse Card (Hard Version)','https://codeforces.com/problemset/problem/1967/B2',2,3),(7056,'Reverse Card (Easy Version)','https://codeforces.com/problemset/problem/1967/B1',1,3),(7057,'Permutation Counting','https://codeforces.com/problemset/problem/1967/A',1,3),(7058,'Rectangle Filling','https://codeforces.com/problemset/problem/1966/B',1,3),(7059,'Card Exchange','https://codeforces.com/problemset/problem/1966/A',1,3),(7060,'Conference','https://codeforces.com/problemset/problem/1965/F',3,3),(7061,'Connected Cubes','https://codeforces.com/problemset/problem/1965/E',3,3),(7062,'Missing Subarray Sum','https://codeforces.com/problemset/problem/1965/D',3,3),(7063,'Folding Strip','https://codeforces.com/problemset/problem/1965/C',2,3),(7064,'Missing Subsequence Sum','https://codeforces.com/problemset/problem/1965/B',2,3),(7065,'Everything Nim','https://codeforces.com/problemset/problem/1965/A',1,3),(7066,'Necromancer','https://codeforces.com/problemset/problem/1958/J',3,3),(7067,'Equal Trees','https://codeforces.com/problemset/problem/1958/I',3,3),(7068,'Composite Spells','https://codeforces.com/problemset/problem/1958/H',3,3),(7069,'Observation Towers','https://codeforces.com/problemset/problem/1958/G',2,3),(7070,'Narrow Paths','https://codeforces.com/problemset/problem/1958/F',2,3),(7071,'Yet Another Permutation Constructive','https://codeforces.com/problemset/problem/1958/E',2,3),(7072,'Staircase','https://codeforces.com/problemset/problem/1958/D',2,3),(7073,'Firewood','https://codeforces.com/problemset/problem/1958/C',1,3),(7074,'Clock in the Pool','https://codeforces.com/problemset/problem/1958/B',1,3),(7075,'1-3-5','https://codeforces.com/problemset/problem/1958/A',1,3),(7076,'Frequency Mismatch (Hard Version)','https://codeforces.com/problemset/problem/1957/F2',3,3),(7077,'Frequency Mismatch (Easy Version)','https://codeforces.com/problemset/problem/1957/F1',3,3),(7078,'Carousel of Combinations','https://codeforces.com/problemset/problem/1957/E',2,3),(7079,'A BIT of an Inequality','https://codeforces.com/problemset/problem/1957/D',2,3),(7080,'How Does the Rook Move?','https://codeforces.com/problemset/problem/1957/C',2,3),(7081,'A BIT of a Construction','https://codeforces.com/problemset/problem/1957/B',1,3),(7082,'Stickogon','https://codeforces.com/problemset/problem/1957/A',1,3),(7083,'Nene and the Passing Game','https://codeforces.com/problemset/problem/1956/F',3,3),(7084,'Nene vs. Monsters (Hard Version)','https://codeforces.com/problemset/problem/1956/E2',3,3),(7085,'Nene vs. Monsters (Easy Version)','https://codeforces.com/problemset/problem/1956/E1',2,3),(7086,'Nene and the Mex Operator','https://codeforces.com/problemset/problem/1956/D',2,3),(7087,'Nene\'s Magical Matrix','https://codeforces.com/problemset/problem/1956/C',2,3),(7088,'Nene and the Card Game','https://codeforces.com/problemset/problem/1956/B',1,3),(7089,'Nene\'s Game','https://codeforces.com/problemset/problem/1956/A',1,3),(7090,'The Most Reckless Defense','https://codeforces.com/problemset/problem/1955/H',2,3),(7091,'GCD on a grid','https://codeforces.com/problemset/problem/1955/G',2,3),(7092,'Unfair Game','https://codeforces.com/problemset/problem/1955/F',2,3),(7093,'Long Inversions','https://codeforces.com/problemset/problem/1955/E',2,3),(7094,'Inaccurate Subsequence Search','https://codeforces.com/problemset/problem/1955/D',1,3),(7095,'Inhabitant of the Deep Sea','https://codeforces.com/problemset/problem/1955/C',1,3),(7096,'Progressive Square','https://codeforces.com/problemset/problem/1955/B',1,3),(7097,'Yogurt Sale','https://codeforces.com/problemset/problem/1955/A',1,3),(7098,'Unique Strings','https://codeforces.com/problemset/problem/1954/F',3,3),(7099,'Chain Reaction','https://codeforces.com/problemset/problem/1954/E',2,3),(7100,'Colored Balls','https://codeforces.com/problemset/problem/1954/D',2,3),(7101,'Long Multiplication','https://codeforces.com/problemset/problem/1954/C',1,3),(7102,'Make It Ugly','https://codeforces.com/problemset/problem/1954/B',1,3),(7103,'Painting the Ribbon','https://codeforces.com/problemset/problem/1954/A',1,3),(7104,'Accuracy-Preserving Summation Algorithm','https://codeforces.com/problemset/problem/1953/A',6,3),(7105,'Help, what does it mean to be \"Based\"','https://codeforces.com/problemset/problem/1952/J',6,3),(7106,'Dark Matter','https://codeforces.com/problemset/problem/1952/I',6,3),(7107,'Palindrome','https://codeforces.com/problemset/problem/1952/H',6,3),(7108,'Mathematician Takeover','https://codeforces.com/problemset/problem/1952/G',6,3),(7109,'Grid','https://codeforces.com/problemset/problem/1952/F',6,3),(7110,'Sweep Line','https://codeforces.com/problemset/problem/1952/E',6,3),(7111,'Are You a Procrastinator?','https://codeforces.com/problemset/problem/1952/D',6,3),(7112,'They Have Fooled','https://codeforces.com/problemset/problem/1952/C',6,3),(7113,'Is it stated?','https://codeforces.com/problemset/problem/1952/B',6,3),(7114,'Are You a Robot, Again?','https://codeforces.com/problemset/problem/1952/A',6,3),(7115,'Growing Trees','https://codeforces.com/problemset/problem/1951/I',3,3),(7116,'Thanos Snap','https://codeforces.com/problemset/problem/1951/H',3,3),(7117,'Clacking Balls','https://codeforces.com/problemset/problem/1951/G',3,3),(7118,'Inversion Composition','https://codeforces.com/problemset/problem/1951/F',2,3),(7119,'No Palindromes','https://codeforces.com/problemset/problem/1951/E',2,3),(7120,'Buying Jewels','https://codeforces.com/problemset/problem/1951/D',2,3),(7121,'Ticket Hoarding','https://codeforces.com/problemset/problem/1951/C',1,3),(7122,'Battle Cows','https://codeforces.com/problemset/problem/1951/B',1,3),(7123,'Dual Trigger','https://codeforces.com/problemset/problem/1951/A',1,3),(7124,'Shuffling Songs','https://codeforces.com/problemset/problem/1950/G',2,3),(7125,'0, 1, 2, Tree!','https://codeforces.com/problemset/problem/1950/F',2,3),(7126,'Nearly Shortest Repeating Substring','https://codeforces.com/problemset/problem/1950/E',1,3),(7127,'Product of Binary Decimals','https://codeforces.com/problemset/problem/1950/D',1,3),(7128,'Clock Conversion','https://codeforces.com/problemset/problem/1950/C',1,3),(7129,'Upscaling','https://codeforces.com/problemset/problem/1950/B',1,3),(7130,'Stair, Peak, or Neither?','https://codeforces.com/problemset/problem/1950/A',1,3),(7131,'Make Triangle','https://codeforces.com/problemset/problem/1949/K',3,3),(7132,'Amanda the Amoeba','https://codeforces.com/problemset/problem/1949/J',3,3),(7133,'Disks','https://codeforces.com/problemset/problem/1949/I',2,3),(7134,'Division Avoidance','https://codeforces.com/problemset/problem/1949/H',3,3),(7135,'Scooter','https://codeforces.com/problemset/problem/1949/G',2,3),(7136,'Dating','https://codeforces.com/problemset/problem/1949/F',2,3),(7137,'Damage per Second','https://codeforces.com/problemset/problem/1949/E',3,3),(7138,'Funny or Scary?','https://codeforces.com/problemset/problem/1949/D',3,3),(7139,'Annual Ants\' Gathering','https://codeforces.com/problemset/problem/1949/C',2,3),(7140,'Charming Meals','https://codeforces.com/problemset/problem/1949/B',1,3),(7141,'Grove','https://codeforces.com/problemset/problem/1949/A',3,3),(7142,'MST with Matching','https://codeforces.com/problemset/problem/1948/G',3,3),(7143,'Rare Coins','https://codeforces.com/problemset/problem/1948/F',2,3),(7144,'Clique Partition','https://codeforces.com/problemset/problem/1948/E',2,3),(7145,'Tandem Repeats?','https://codeforces.com/problemset/problem/1948/D',2,3),(7146,'Arrow Path','https://codeforces.com/problemset/problem/1948/C',1,3),(7147,'Array Fix','https://codeforces.com/problemset/problem/1948/B',1,3),(7148,'Special Characters','https://codeforces.com/problemset/problem/1948/A',1,3),(7149,'Nobody is needed','https://codeforces.com/problemset/problem/1946/F',2,3),(7150,'Girl Permutation','https://codeforces.com/problemset/problem/1946/E',2,3),(7151,'Birthday Gift','https://codeforces.com/problemset/problem/1946/D',2,3),(7152,'Tree Cutting','https://codeforces.com/problemset/problem/1946/C',2,3),(7153,'Maximum Sum','https://codeforces.com/problemset/problem/1946/B',1,3),(7154,'Median of an Array','https://codeforces.com/problemset/problem/1946/A',1,3),(7155,'GCD is Greater','https://codeforces.com/problemset/problem/1945/H',3,3),(7156,'Cook and Porridge','https://codeforces.com/problemset/problem/1945/G',2,3),(7157,'Kirill and Mushrooms','https://codeforces.com/problemset/problem/1945/F',2,3),(7158,'Binary Search','https://codeforces.com/problemset/problem/1945/E',2,3),(7159,'Seraphim the Owl','https://codeforces.com/problemset/problem/1945/D',1,3),(7160,'Left and Right Houses','https://codeforces.com/problemset/problem/1945/C',1,3),(7161,'Fireworks','https://codeforces.com/problemset/problem/1945/B',1,3),(7162,'Setting up Camp','https://codeforces.com/problemset/problem/1945/A',1,3),(7163,'Equal XOR','https://codeforces.com/problemset/problem/1944/B',1,3),(7164,'Destroying Bridges','https://codeforces.com/problemset/problem/1944/A',1,3),(7165,'Minimum Hamming Distance','https://codeforces.com/problemset/problem/1943/F',3,3),(7166,'MEX Game 2 (Hard Version)','https://codeforces.com/problemset/problem/1943/E2',3,3),(7167,'MEX Game 2 (Easy Version)','https://codeforces.com/problemset/problem/1943/E1',3,3),(7168,'Counting Is Fun (Hard Version)','https://codeforces.com/problemset/problem/1943/D2',3,3),(7169,'Counting Is Fun (Easy Version)','https://codeforces.com/problemset/problem/1943/D1',2,3),(7170,'Tree Compass','https://codeforces.com/problemset/problem/1943/C',2,3),(7171,'Non-Palindromic Substring','https://codeforces.com/problemset/problem/1943/B',2,3),(7172,'MEX Game 1','https://codeforces.com/problemset/problem/1943/A',1,3),(7173,'Farmer John\'s Favorite Intern','https://codeforces.com/problemset/problem/1942/H',3,3),(7174,'Bessie and Cards','https://codeforces.com/problemset/problem/1942/G',3,3),(7175,'Farmer John\'s Favorite Function','https://codeforces.com/problemset/problem/1942/F',3,3),(7176,'Farm Game','https://codeforces.com/problemset/problem/1942/E',2,3),(7177,'Learning to Paint','https://codeforces.com/problemset/problem/1942/D',2,3),(7178,'Bessie\'s Birthday Cake (Hard Version)','https://codeforces.com/problemset/problem/1942/C2',2,3),(7179,'Bessie\'s Birthday Cake (Easy Version)','https://codeforces.com/problemset/problem/1942/C1',1,3),(7180,'Bessie and MEX','https://codeforces.com/problemset/problem/1942/B',1,3),(7181,'Farmer John\'s Challenge','https://codeforces.com/problemset/problem/1942/A',1,3),(7182,'Rudolf and Subway','https://codeforces.com/problemset/problem/1941/G',2,3),(7183,'Rudolf and Imbalance','https://codeforces.com/problemset/problem/1941/F',2,3),(7184,'Rudolf and k Bridges','https://codeforces.com/problemset/problem/1941/E',2,3),(7185,'Rudolf and the Ball Game','https://codeforces.com/problemset/problem/1941/D',1,3),(7186,'Rudolf and the Ugly String','https://codeforces.com/problemset/problem/1941/C',1,3),(7187,'Rudolf and 121','https://codeforces.com/problemset/problem/1941/B',1,3),(7188,'Rudolf and the Ticket','https://codeforces.com/problemset/problem/1941/A',1,3),(7189,'Almost Certainly','https://codeforces.com/problemset/problem/1940/D',6,3),(7190,'Burenka and Pether','https://codeforces.com/problemset/problem/1940/C',6,3),(7191,'Three Arrays','https://codeforces.com/problemset/problem/1940/B',6,3),(7192,'Parallel Universes','https://codeforces.com/problemset/problem/1940/A',6,3),(7193,'Big Persimmon','https://codeforces.com/problemset/problem/1939/D',6,3),(7194,'More Gifts','https://codeforces.com/problemset/problem/1939/C',6,3),(7195,'Evidence Board','https://codeforces.com/problemset/problem/1939/B',6,3),(7196,'Draw Polygon Lines','https://codeforces.com/problemset/problem/1939/A',6,3),(7197,'Zig-zag','https://codeforces.com/problemset/problem/1938/M',3,3),(7198,'XOR Operations','https://codeforces.com/problemset/problem/1938/L',3,3),(7199,'Tree Quiz','https://codeforces.com/problemset/problem/1938/K',2,3),(7200,'There and Back Again','https://codeforces.com/problemset/problem/1938/J',2,3),(7201,'Symmetric Boundary','https://codeforces.com/problemset/problem/1938/I',3,3),(7202,'Pho Restaurant','https://codeforces.com/problemset/problem/1938/H',2,3),(7203,'Personality Test','https://codeforces.com/problemset/problem/1938/G',2,3),(7204,'Forming Groups','https://codeforces.com/problemset/problem/1938/F',2,3),(7205,'Duplicates','https://codeforces.com/problemset/problem/1938/E',2,3),(7206,'Bánh Bò','https://codeforces.com/problemset/problem/1938/D',3,3),(7207,'Bit Counting Sequence','https://codeforces.com/problemset/problem/1938/C',2,3),(7208,'Attraction Score','https://codeforces.com/problemset/problem/1938/B',3,3),(7209,'Antiparticle Antiphysics','https://codeforces.com/problemset/problem/1938/A',3,3),(7210,'Binary Path','https://codeforces.com/problemset/problem/1937/B',1,3),(7211,'Shuffle Party','https://codeforces.com/problemset/problem/1937/A',1,3),(7212,'Grand Finale: Circles','https://codeforces.com/problemset/problem/1936/F',3,3),(7213,'Yet Yet Another Permutation Problem','https://codeforces.com/problemset/problem/1936/E',3,3),(7214,'Bitwise Paradox','https://codeforces.com/problemset/problem/1936/D',3,3),(7215,'Pokémon Arena','https://codeforces.com/problemset/problem/1936/C',2,3),(7216,'Pinball','https://codeforces.com/problemset/problem/1936/B',2,3),(7217,'Bitwise Operation Wizard','https://codeforces.com/problemset/problem/1936/A',2,3),(7218,'Andrey\'s Tree','https://codeforces.com/problemset/problem/1935/F',3,3),(7219,'Distance Learning Courses in MAC','https://codeforces.com/problemset/problem/1935/E',2,3),(7220,'Exam in MAC','https://codeforces.com/problemset/problem/1935/D',2,3),(7221,'Messenger in MAC','https://codeforces.com/problemset/problem/1935/C',2,3),(7222,'Informatics in MAC','https://codeforces.com/problemset/problem/1935/B',1,3),(7223,'Entertainment in MAC','https://codeforces.com/problemset/problem/1935/A',1,3),(7224,'Weird LCM Operations','https://codeforces.com/problemset/problem/1934/E',3,3),(7225,'XOR Break --- Game Version','https://codeforces.com/problemset/problem/1934/D2',2,3),(7226,'XOR Break --- Solo Version','https://codeforces.com/problemset/problem/1934/D1',2,3),(7227,'Find a Mine','https://codeforces.com/problemset/problem/1934/C',2,3),(7228,'Yet Another Coin Problem','https://codeforces.com/problemset/problem/1934/B',1,3),(7229,'Too Min Too Max','https://codeforces.com/problemset/problem/1934/A',1,3),(7230,'Turtle Magic: Royal Turtle Shell Pattern','https://codeforces.com/problemset/problem/1933/G',2,3),(7231,'Turtle Mission: Robot and the Earthquake','https://codeforces.com/problemset/problem/1933/F',2,3),(7232,'Turtle vs. Rabbit Race: Optimal Trainings','https://codeforces.com/problemset/problem/1933/E',1,3),(7233,'Turtle Tenacity: Continual Mods','https://codeforces.com/problemset/problem/1933/D',1,3),(7234,'Turtle Fingers: Count the Values of k','https://codeforces.com/problemset/problem/1933/C',1,3),(7235,'Turtle Math: Fast Three Task','https://codeforces.com/problemset/problem/1933/B',1,3),(7236,'Turtle Puzzle: Rearrange and Negate','https://codeforces.com/problemset/problem/1933/A',1,3),(7237,'Moving Platforms','https://codeforces.com/problemset/problem/1932/G',2,3),(7238,'Feed Cats','https://codeforces.com/problemset/problem/1932/F',2,3),(7239,'Final Countdown','https://codeforces.com/problemset/problem/1932/E',2,3),(7240,'Card Game','https://codeforces.com/problemset/problem/1932/D',1,3),(7241,'LR-remainders','https://codeforces.com/problemset/problem/1932/C',1,3),(7242,'Chaya Calendar','https://codeforces.com/problemset/problem/1932/B',1,3),(7243,'Thorns and Coins','https://codeforces.com/problemset/problem/1932/A',1,3),(7244,'One-Dimensional Puzzle','https://codeforces.com/problemset/problem/1931/G',2,3),(7245,'Chat Screenshots','https://codeforces.com/problemset/problem/1931/F',2,3),(7246,'Anna and the Valentine\'s Day Gift','https://codeforces.com/problemset/problem/1931/E',1,3),(7247,'Divisible Pairs','https://codeforces.com/problemset/problem/1931/D',1,3),(7248,'Make Equal Again','https://codeforces.com/problemset/problem/1931/C',1,3),(7249,'Make Equal','https://codeforces.com/problemset/problem/1931/B',1,3),(7250,'Recovering a Small String','https://codeforces.com/problemset/problem/1931/A',1,3),(7251,'Counting Is Fun','https://codeforces.com/problemset/problem/1930/I',3,3),(7252,'Interactive Mex Tree','https://codeforces.com/problemset/problem/1930/H',3,3),(7253,'Prefix Max Set Counting','https://codeforces.com/problemset/problem/1930/G',3,3),(7254,'Maximize the Difference','https://codeforces.com/problemset/problem/1930/F',3,3),(7255,'2..3...4.... Wonderful! Wonderful!','https://codeforces.com/problemset/problem/1930/E',2,3),(7256,'Sum over all Substrings (Hard Version)','https://codeforces.com/problemset/problem/1930/D2',2,3),(7257,'Sum over all Substrings (Easy Version)','https://codeforces.com/problemset/problem/1930/D1',2,3),(7258,'Lexicographically Largest','https://codeforces.com/problemset/problem/1930/C',2,3),(7259,'Permutation Printing','https://codeforces.com/problemset/problem/1930/B',1,3),(7260,'Maximise The Score','https://codeforces.com/problemset/problem/1930/A',1,3),(7261,'Sasha and the Wedding Binary Search Tree','https://codeforces.com/problemset/problem/1929/F',2,3),(7262,'Sasha and the Happy Tree Cutting','https://codeforces.com/problemset/problem/1929/E',2,3),(7263,'Sasha and a Walk in the City','https://codeforces.com/problemset/problem/1929/D',2,3),(7264,'Sasha and the Casino','https://codeforces.com/problemset/problem/1929/C',1,3),(7265,'Sasha and the Drawing','https://codeforces.com/problemset/problem/1929/B',1,3),(7266,'Sasha and the Beautiful Array','https://codeforces.com/problemset/problem/1929/A',1,3),(7267,'Digital Patterns','https://codeforces.com/problemset/problem/1928/F',3,3),(7268,'Modular Sequence','https://codeforces.com/problemset/problem/1928/E',2,3),(7269,'Lonely Mountain Dungeons','https://codeforces.com/problemset/problem/1928/D',2,3),(7270,'Physical Education Lesson','https://codeforces.com/problemset/problem/1928/C',2,3),(7271,'Equalize','https://codeforces.com/problemset/problem/1928/B',1,3),(7272,'Rectangle Cutting','https://codeforces.com/problemset/problem/1928/A',1,3),(7273,'Paint Charges','https://codeforces.com/problemset/problem/1927/G',2,3),(7274,'Microcycle','https://codeforces.com/problemset/problem/1927/F',2,3),(7275,'Klever Permutation','https://codeforces.com/problemset/problem/1927/E',1,3),(7276,'Find the Different Ones!','https://codeforces.com/problemset/problem/1927/D',1,3),(7277,'Choose the Different Ones!','https://codeforces.com/problemset/problem/1927/C',1,3),(7278,'Following the String','https://codeforces.com/problemset/problem/1927/B',1,3),(7279,'Make it White','https://codeforces.com/problemset/problem/1927/A',1,3),(7280,'Vlad and Trouble at MIT','https://codeforces.com/problemset/problem/1926/G',2,3),(7281,'Vlad and Avoiding X','https://codeforces.com/problemset/problem/1926/F',2,3),(7282,'Vlad and an Odd Ordering','https://codeforces.com/problemset/problem/1926/E',1,3),(7283,'Vlad and Division','https://codeforces.com/problemset/problem/1926/D',1,3),(7284,'Vlad and a Sum of Sum of Digits','https://codeforces.com/problemset/problem/1926/C',1,3),(7285,'Vlad and Shapes','https://codeforces.com/problemset/problem/1926/B',1,3),(7286,'Vlad and the Best of Five','https://codeforces.com/problemset/problem/1926/A',1,3),(7287,'Good Trip','https://codeforces.com/problemset/problem/1925/D',2,3),(7288,'A Balanced Problemset?','https://codeforces.com/problemset/problem/1925/B',1,3),(7289,'We Got Everything Covered!','https://codeforces.com/problemset/problem/1925/A',1,3),(7290,'Anti-Proxy Attendance','https://codeforces.com/problemset/problem/1924/F',3,3),(7291,'Paper Cutting Again','https://codeforces.com/problemset/problem/1924/E',3,3),(7292,'Balanced Subsequences','https://codeforces.com/problemset/problem/1924/D',3,3),(7293,'Fractal Origami','https://codeforces.com/problemset/problem/1924/C',2,3),(7294,'Space Harbour','https://codeforces.com/problemset/problem/1924/B',2,3),(7295,'Did We Get Everything Covered?','https://codeforces.com/problemset/problem/1924/A',1,3),(7296,'Shrink-Reverse','https://codeforces.com/problemset/problem/1923/F',3,3),(7297,'Count Paths','https://codeforces.com/problemset/problem/1923/E',2,3),(7298,'Slimes','https://codeforces.com/problemset/problem/1923/D',2,3),(7299,'Find B','https://codeforces.com/problemset/problem/1923/C',1,3),(7300,'Monsters Attack!','https://codeforces.com/problemset/problem/1923/B',1,3),(7301,'Moving Chips','https://codeforces.com/problemset/problem/1923/A',1,3),(7302,'Replace on Segment','https://codeforces.com/problemset/problem/1922/F',2,3),(7303,'Increasing Subsequences','https://codeforces.com/problemset/problem/1922/E',2,3),(7304,'Berserk Monsters','https://codeforces.com/problemset/problem/1922/D',2,3),(7305,'Closest Cities','https://codeforces.com/problemset/problem/1922/C',1,3),(7306,'Forming Triangles','https://codeforces.com/problemset/problem/1922/B',1,3),(7307,'Tricky Template','https://codeforces.com/problemset/problem/1922/A',1,3),(7308,'Mischievous Shooter','https://codeforces.com/problemset/problem/1921/G',2,3),(7309,'Sum of Progression','https://codeforces.com/problemset/problem/1921/F',2,3),(7310,'Eat the Chip','https://codeforces.com/problemset/problem/1921/E',2,3),(7311,'Very Different Array','https://codeforces.com/problemset/problem/1921/D',1,3),(7312,'Sending Messages','https://codeforces.com/problemset/problem/1921/C',1,3),(7313,'Arranging Cats','https://codeforces.com/problemset/problem/1921/B',1,3),(7314,'Square','https://codeforces.com/problemset/problem/1921/A',1,3),(7315,'Smooth Sailing (Hard Version)','https://codeforces.com/problemset/problem/1920/F2',3,3),(7316,'Smooth Sailing (Easy Version)','https://codeforces.com/problemset/problem/1920/F1',2,3),(7317,'Counting Binary Strings','https://codeforces.com/problemset/problem/1920/E',2,3),(7318,'Array Repetition','https://codeforces.com/problemset/problem/1920/D',2,3),(7319,'Partitioning the Array','https://codeforces.com/problemset/problem/1920/C',2,3),(7320,'Summation Game','https://codeforces.com/problemset/problem/1920/B',1,3),(7321,'Satisfying Constraints','https://codeforces.com/problemset/problem/1920/A',1,3),(7322,'Tree Diameter','https://codeforces.com/problemset/problem/1919/H',2,3),(7323,'Tree LGM','https://codeforces.com/problemset/problem/1919/G',3,3),(7324,'Wine Factory (Hard Version)','https://codeforces.com/problemset/problem/1919/F2',3,3),(7325,'Wine Factory (Easy Version)','https://codeforces.com/problemset/problem/1919/F1',2,3),(7326,'Counting Prefixes','https://codeforces.com/problemset/problem/1919/E',3,3),(7327,'01 Tree','https://codeforces.com/problemset/problem/1919/D',2,3),(7328,'Grouping Increases','https://codeforces.com/problemset/problem/1919/C',1,3),(7329,'Plus-Minus Split','https://codeforces.com/problemset/problem/1919/B',1,3),(7330,'Wallet Exchange','https://codeforces.com/problemset/problem/1919/A',1,3),(7331,'Permutation of Given','https://codeforces.com/problemset/problem/1918/G',3,3),(7332,'Caterpillar on a Tree','https://codeforces.com/problemset/problem/1918/F',2,3),(7333,'ace5 and Task Order','https://codeforces.com/problemset/problem/1918/E',2,3),(7334,'Blocking Elements','https://codeforces.com/problemset/problem/1918/D',2,3),(7335,'XOR-distance','https://codeforces.com/problemset/problem/1918/C',1,3),(7336,'Minimize Inversions','https://codeforces.com/problemset/problem/1918/B',1,3),(7337,'Brick Wall','https://codeforces.com/problemset/problem/1918/A',1,3),(7338,'Construct Tree','https://codeforces.com/problemset/problem/1917/F',2,3),(7339,'Construct Matrix','https://codeforces.com/problemset/problem/1917/E',2,3),(7340,'Yet Another Inversions Problem','https://codeforces.com/problemset/problem/1917/D',2,3),(7341,'Watering an Array','https://codeforces.com/problemset/problem/1917/C',2,3),(7342,'Erase First or Second Letter','https://codeforces.com/problemset/problem/1917/B',1,3),(7343,'Least Product','https://codeforces.com/problemset/problem/1917/A',1,3),(7344,'Matrix Rank (Hard Version)','https://codeforces.com/problemset/problem/1916/H2',3,3),(7345,'Matrix Rank (Easy Version)','https://codeforces.com/problemset/problem/1916/H1',3,3),(7346,'Optimizations From Chelsu','https://codeforces.com/problemset/problem/1916/G',3,3),(7347,'Group Division','https://codeforces.com/problemset/problem/1916/F',3,3),(7348,'Happy Life in University','https://codeforces.com/problemset/problem/1916/E',2,3),(7349,'Mathematical Problem','https://codeforces.com/problemset/problem/1916/D',2,3),(7350,'Training Before the Olympiad','https://codeforces.com/problemset/problem/1916/C',1,3),(7351,'Two Divisors','https://codeforces.com/problemset/problem/1916/B',1,3),(7352,'2023','https://codeforces.com/problemset/problem/1916/A',1,3),(7353,'Bicycles','https://codeforces.com/problemset/problem/1915/G',2,3),(7354,'Greetings','https://codeforces.com/problemset/problem/1915/F',1,3),(7355,'Romantic Glasses','https://codeforces.com/problemset/problem/1915/E',1,3),(7356,'Unnatural Language Processing','https://codeforces.com/problemset/problem/1915/D',1,3),(7357,'Can I Square?','https://codeforces.com/problemset/problem/1915/C',1,3),(7358,'Not Quite Latin Square','https://codeforces.com/problemset/problem/1915/B',1,3),(7359,'Odd One Out','https://codeforces.com/problemset/problem/1915/A',1,3),(7360,'Light Bulbs (Hard Version)','https://codeforces.com/problemset/problem/1914/G2',2,3),(7361,'Light Bulbs (Easy Version)','https://codeforces.com/problemset/problem/1914/G1',2,3),(7362,'Programming Competition','https://codeforces.com/problemset/problem/1914/F',2,3),(7363,'Game with Marbles (Hard Version)','https://codeforces.com/problemset/problem/1914/E2',1,3),(7364,'Game with Marbles (Easy Version)','https://codeforces.com/problemset/problem/1914/E1',1,3),(7365,'Three Activities','https://codeforces.com/problemset/problem/1914/D',1,3),(7366,'Quests','https://codeforces.com/problemset/problem/1914/C',1,3),(7367,'Preparing for the Contest','https://codeforces.com/problemset/problem/1914/B',1,3),(7368,'Problemsolving Log','https://codeforces.com/problemset/problem/1914/A',1,3),(7369,'Palindromic Problem','https://codeforces.com/problemset/problem/1913/F',3,3),(7370,'Matrix Problem','https://codeforces.com/problemset/problem/1913/E',2,3),(7371,'Array Collapse','https://codeforces.com/problemset/problem/1913/D',2,3),(7372,'Game with Multiset','https://codeforces.com/problemset/problem/1913/C',1,3),(7373,'Swap and Delete','https://codeforces.com/problemset/problem/1913/B',1,3),(7374,'Rating Increase','https://codeforces.com/problemset/problem/1913/A',1,3),(7375,'LOL Lovers','https://codeforces.com/problemset/problem/1912/L',1,3),(7376,'Kim\'s Quest','https://codeforces.com/problemset/problem/1912/K',2,3),(7377,'Joy of Pokémon Observation','https://codeforces.com/problemset/problem/1912/J',2,3),(7378,'Innovative Washing Machine','https://codeforces.com/problemset/problem/1912/I',3,3),(7379,'Hypercatapult Commute','https://codeforces.com/problemset/problem/1912/H',2,3),(7380,'Great City Saint Petersburg','https://codeforces.com/problemset/problem/1912/G',2,3),(7381,'Fugitive Frenzy','https://codeforces.com/problemset/problem/1912/F',3,3),(7382,'Evaluate It and Back Again','https://codeforces.com/problemset/problem/1912/E',2,3),(7383,'Divisibility Test','https://codeforces.com/problemset/problem/1912/D',2,3),(7384,'Cactus Transformation','https://codeforces.com/problemset/problem/1912/C',3,3),(7385,'Blueprint for Seating','https://codeforces.com/problemset/problem/1912/B',2,3),(7386,'Accumulator Apex','https://codeforces.com/problemset/problem/1912/A',2,3),(7387,'Two Colors','https://codeforces.com/problemset/problem/1910/J',3,3),(7388,'Inverse Problem','https://codeforces.com/problemset/problem/1910/I',3,3),(7389,'Sum of Digits of Sums','https://codeforces.com/problemset/problem/1910/H',2,3),(7390,'Pool Records','https://codeforces.com/problemset/problem/1910/G',3,3),(7391,'Build Railway Stations','https://codeforces.com/problemset/problem/1910/F',2,3),(7392,'Maximum Sum Subarrays','https://codeforces.com/problemset/problem/1910/E',2,3),(7393,'Remove and Add','https://codeforces.com/problemset/problem/1910/D',2,3),(7394,'Poisonous Swamp','https://codeforces.com/problemset/problem/1910/C',2,3),(7395,'Security Guard','https://codeforces.com/problemset/problem/1910/B',2,3),(7396,'Username','https://codeforces.com/problemset/problem/1910/A',1,3),(7397,'Short Permutation Problem','https://codeforces.com/problemset/problem/1909/I',2,3),(7398,'Parallel Swaps Sort','https://codeforces.com/problemset/problem/1909/H',3,3),(7399,'Pumping Lemma','https://codeforces.com/problemset/problem/1909/G',3,3),(7400,'Small Permutation Problem (Hard Version)','https://codeforces.com/problemset/problem/1909/F2',2,3),(7401,'Small Permutation Problem (Easy Version)','https://codeforces.com/problemset/problem/1909/F1',2,3),(7402,'Multiple Lamps','https://codeforces.com/problemset/problem/1909/E',2,3),(7403,'Split Plus K','https://codeforces.com/problemset/problem/1909/D',2,3),(7404,'Heavy Intervals','https://codeforces.com/problemset/problem/1909/C',1,3),(7405,'Make Almost Equal With Mod','https://codeforces.com/problemset/problem/1909/B',1,3),(7406,'Distinct Buttons','https://codeforces.com/problemset/problem/1909/A',1,3),(7407,'Lights','https://codeforces.com/problemset/problem/1907/G',2,3),(7408,'Shift and Reverse','https://codeforces.com/problemset/problem/1907/F',2,3),(7409,'Good Triples','https://codeforces.com/problemset/problem/1907/E',2,3),(7410,'Jumping Through Segments','https://codeforces.com/problemset/problem/1907/D',1,3),(7411,'Removal of Unattractive Pairs','https://codeforces.com/problemset/problem/1907/C',1,3),(7412,'YetnotherrokenKeoard','https://codeforces.com/problemset/problem/1907/B',1,3),(7413,'Rook','https://codeforces.com/problemset/problem/1907/A',1,3),(7414,'Triangle Construction','https://codeforces.com/problemset/problem/1906/M',2,3),(7415,'Palindromic Parentheses','https://codeforces.com/problemset/problem/1906/L',2,3),(7416,'Deck-Building Game','https://codeforces.com/problemset/problem/1906/K',2,3),(7417,'Count BFS Graph','https://codeforces.com/problemset/problem/1906/J',2,3),(7418,'Contingency Plan 2','https://codeforces.com/problemset/problem/1906/I',3,3),(7419,'Twin Friends','https://codeforces.com/problemset/problem/1906/H',2,3),(7420,'Grid Game 2','https://codeforces.com/problemset/problem/1906/G',3,3),(7421,'Maximize The Value','https://codeforces.com/problemset/problem/1906/F',2,3),(7422,'Merge Not Sort','https://codeforces.com/problemset/problem/1906/E',2,3),(7423,'Spaceship Exploration','https://codeforces.com/problemset/problem/1906/D',3,3),(7424,'Cursed Game','https://codeforces.com/problemset/problem/1906/C',3,3),(7425,'Button Pressing','https://codeforces.com/problemset/problem/1906/B',3,3),(7426,'Easy As ABC','https://codeforces.com/problemset/problem/1906/A',1,3),(7427,'Field Should Not Be Empty','https://codeforces.com/problemset/problem/1905/F',3,3),(7428,'One-X','https://codeforces.com/problemset/problem/1905/E',2,3),(7429,'Cyclic MEX','https://codeforces.com/problemset/problem/1905/D',2,3),(7430,'Largest Subsequence','https://codeforces.com/problemset/problem/1905/C',1,3),(7431,'Begginer\'s Zelda','https://codeforces.com/problemset/problem/1905/B',1,3),(7432,'Constructive Problems','https://codeforces.com/problemset/problem/1905/A',1,3),(7433,'Beautiful Tree','https://codeforces.com/problemset/problem/1904/F',3,3),(7434,'Tree Queries','https://codeforces.com/problemset/problem/1904/E',2,3),(7435,'Set To Max (Hard Version)','https://codeforces.com/problemset/problem/1904/D2',2,3),(7436,'Set To Max (Easy Version)','https://codeforces.com/problemset/problem/1904/D1',2,3),(7437,'Array Game','https://codeforces.com/problemset/problem/1904/C',1,3),(7438,'Collecting Game','https://codeforces.com/problemset/problem/1904/B',1,3),(7439,'Forked!','https://codeforces.com/problemset/problem/1904/A',1,3),(7440,'Babysitting','https://codeforces.com/problemset/problem/1903/F',2,3),(7441,'Geo Game','https://codeforces.com/problemset/problem/1903/E',2,3),(7442,'Maximum And Queries (hard version)','https://codeforces.com/problemset/problem/1903/D2',2,3),(7443,'Maximum And Queries (easy version)','https://codeforces.com/problemset/problem/1903/D1',2,3),(7444,'Theofanis\' Nightmare','https://codeforces.com/problemset/problem/1903/C',1,3),(7445,'StORage room','https://codeforces.com/problemset/problem/1903/B',1,3),(7446,'Halloumi Boxes','https://codeforces.com/problemset/problem/1903/A',1,3),(7447,'Trees and XOR Queries Again','https://codeforces.com/problemset/problem/1902/F',2,3),(7448,'Collapsing Strings','https://codeforces.com/problemset/problem/1902/E',2,3),(7449,'Robot Queries','https://codeforces.com/problemset/problem/1902/D',2,3),(7450,'Insert and Equalize','https://codeforces.com/problemset/problem/1902/C',1,3),(7451,'Getting Points','https://codeforces.com/problemset/problem/1902/B',1,3),(7452,'Binary Imbalance','https://codeforces.com/problemset/problem/1902/A',1,3),(7453,'Landscaping','https://codeforces.com/problemset/problem/1901/F',3,3),(7454,'Compressed Tree','https://codeforces.com/problemset/problem/1901/E',2,3),(7455,'Yet Another Monster Fight','https://codeforces.com/problemset/problem/1901/D',2,3),(7456,'Add, Divide and Floor','https://codeforces.com/problemset/problem/1901/C',1,3),(7457,'Chip and Ribbon','https://codeforces.com/problemset/problem/1901/B',1,3),(7458,'Line Trip','https://codeforces.com/problemset/problem/1901/A',1,3),(7459,'Local Deletions','https://codeforces.com/problemset/problem/1900/F',3,3),(7460,'Transitive Graph','https://codeforces.com/problemset/problem/1900/E',2,3),(7461,'Small GCD','https://codeforces.com/problemset/problem/1900/D',2,3),(7462,'Anji\'s Binary Tree','https://codeforces.com/problemset/problem/1900/C',1,3),(7463,'Laura and Operations','https://codeforces.com/problemset/problem/1900/B',1,3),(7464,'Cover in Water','https://codeforces.com/problemset/problem/1900/A',1,3),(7465,'Unusual Entertainment','https://codeforces.com/problemset/problem/1899/G',2,3),(7466,'Alex\'s whims','https://codeforces.com/problemset/problem/1899/F',2,3),(7467,'Queue Sort','https://codeforces.com/problemset/problem/1899/E',1,3),(7468,'Yarik and Musical Notes','https://codeforces.com/problemset/problem/1899/D',1,3),(7469,'Yarik and Array','https://codeforces.com/problemset/problem/1899/C',1,3),(7470,'250 Thousand Tons of TNT','https://codeforces.com/problemset/problem/1899/B',1,3),(7471,'Game with Integers','https://codeforces.com/problemset/problem/1899/A',1,3),(7472,'Vova Escapes the Matrix','https://codeforces.com/problemset/problem/1898/F',3,3),(7473,'Sofia and Strings','https://codeforces.com/problemset/problem/1898/E',2,3),(7474,'Absolute Beauty','https://codeforces.com/problemset/problem/1898/D',2,3),(7475,'Colorful Grid','https://codeforces.com/problemset/problem/1898/C',2,3),(7476,'Milena and Admirer','https://codeforces.com/problemset/problem/1898/B',1,3),(7477,'Milica and String','https://codeforces.com/problemset/problem/1898/A',1,3),(7478,'Cyclic Hamming (Hard Version)','https://codeforces.com/problemset/problem/1896/H2',3,3),(7479,'Cyclic Hamming (Easy Version)','https://codeforces.com/problemset/problem/1896/H1',3,3),(7480,'Pepe Racing','https://codeforces.com/problemset/problem/1896/G',3,3),(7481,'Bracket Xoring','https://codeforces.com/problemset/problem/1896/F',3,3),(7482,'Permutation Sorting','https://codeforces.com/problemset/problem/1896/E',2,3),(7483,'Ones and Twos','https://codeforces.com/problemset/problem/1896/D',2,3),(7484,'Matching Arrays','https://codeforces.com/problemset/problem/1896/C',1,3),(7485,'AB Flipping','https://codeforces.com/problemset/problem/1896/B',1,3),(7486,'Jagged Swaps','https://codeforces.com/problemset/problem/1896/A',1,3),(7487,'Two Characters, Two Colors','https://codeforces.com/problemset/problem/1895/G',3,3),(7488,'Fancy Arrays','https://codeforces.com/problemset/problem/1895/F',3,3),(7489,'Infinite Card Game','https://codeforces.com/problemset/problem/1895/E',2,3),(7490,'XOR Construction','https://codeforces.com/problemset/problem/1895/D',2,3),(7491,'Torn Lucky Ticket','https://codeforces.com/problemset/problem/1895/C',1,3),(7492,'Points and Minimum Distance','https://codeforces.com/problemset/problem/1895/B',1,3),(7493,'Treasure Chest','https://codeforces.com/problemset/problem/1895/A',1,3),(7494,'Two Out of Three','https://codeforces.com/problemset/problem/1894/B',1,3),(7495,'Secret Sport','https://codeforces.com/problemset/problem/1894/A',1,3),(7496,'Cacti Symphony','https://codeforces.com/problemset/problem/1893/E',3,3),(7497,'Colorful Constructive','https://codeforces.com/problemset/problem/1893/D',3,3),(7498,'Freedom of Choice','https://codeforces.com/problemset/problem/1893/C',2,3),(7499,'Neutral Tonality','https://codeforces.com/problemset/problem/1893/B',2,3),(7500,'Anonymous Informant','https://codeforces.com/problemset/problem/1893/A',1,3),(7501,'A Growing Tree','https://codeforces.com/problemset/problem/1891/F',2,3),(7502,'Brukhovich and Exams','https://codeforces.com/problemset/problem/1891/E',2,3),(7503,'Suspicious logarithms','https://codeforces.com/problemset/problem/1891/D',2,3),(7504,'Smilo and Monsters','https://codeforces.com/problemset/problem/1891/C',1,3),(7505,'Deja Vu','https://codeforces.com/problemset/problem/1891/B',1,3),(7506,'Sorting with Twos','https://codeforces.com/problemset/problem/1891/A',1,3),(7507,'Qingshan Loves Strings','https://codeforces.com/problemset/problem/1890/B',1,3),(7508,'Doremy\'s Paint 3','https://codeforces.com/problemset/problem/1890/A',1,3),(7509,'Doremy\'s Average Tree','https://codeforces.com/problemset/problem/1889/F',3,3),(7510,'Doremy\'s Swapping Trees','https://codeforces.com/problemset/problem/1889/E',3,3),(7511,'Game of Stacks','https://codeforces.com/problemset/problem/1889/D',3,3),(7512,'Doremy\'s Drying Plan (Hard Version)','https://codeforces.com/problemset/problem/1889/C2',3,3),(7513,'Doremy\'s Drying Plan (Easy Version)','https://codeforces.com/problemset/problem/1889/C1',2,3),(7514,'Doremy\'s Connecting Plan','https://codeforces.com/problemset/problem/1889/B',2,3),(7515,'Qingshan Loves Strings 2','https://codeforces.com/problemset/problem/1889/A',1,3),(7516,'Minimum Segments','https://codeforces.com/problemset/problem/1887/F',3,3),(7517,'Good Colorings','https://codeforces.com/problemset/problem/1887/E',3,3),(7518,'Split','https://codeforces.com/problemset/problem/1887/D',3,3),(7519,'Minimum Array','https://codeforces.com/problemset/problem/1887/C',2,3),(7520,'Time Travel','https://codeforces.com/problemset/problem/1887/B',2,3),(7521,'Diamond Theft','https://codeforces.com/problemset/problem/1886/F',3,3),(7522,'I Wanna be the Team Leader','https://codeforces.com/problemset/problem/1886/E',2,3),(7523,'Monocarp and the Set','https://codeforces.com/problemset/problem/1886/D',2,3),(7524,'Decreasing String','https://codeforces.com/problemset/problem/1886/C',2,3),(7525,'Fear of the Dark','https://codeforces.com/problemset/problem/1886/B',1,3),(7526,'Sum of Three','https://codeforces.com/problemset/problem/1886/A',1,3),(7527,'Deterministic Scheduling for Extended Reality over 5G and Beyond','https://codeforces.com/problemset/problem/1885/A',6,3),(7528,'Hard Design','https://codeforces.com/problemset/problem/1884/E',3,3),(7529,'Counting Rhyme','https://codeforces.com/problemset/problem/1884/D',2,3),(7530,'Medium Design','https://codeforces.com/problemset/problem/1884/C',2,3),(7531,'Haunted House','https://codeforces.com/problemset/problem/1884/B',1,3),(7532,'Simple Design','https://codeforces.com/problemset/problem/1884/A',1,3),(7533,'Dances (Hard Version)','https://codeforces.com/problemset/problem/1883/G2',2,3),(7534,'Dances (Easy version)','https://codeforces.com/problemset/problem/1883/G1',1,3),(7535,'You Are So Beautiful','https://codeforces.com/problemset/problem/1883/F',1,3),(7536,'Look Back','https://codeforces.com/problemset/problem/1883/E',2,3),(7537,'In Love','https://codeforces.com/problemset/problem/1883/D',1,3),(7538,'Raspberries','https://codeforces.com/problemset/problem/1883/C',1,3),(7539,'Chemistry','https://codeforces.com/problemset/problem/1883/B',1,3),(7540,'Morning','https://codeforces.com/problemset/problem/1883/A',1,3),(7541,'Two Permutations (Hard Version)','https://codeforces.com/problemset/problem/1882/E2',3,3),(7542,'Two Permutations (Easy Version)','https://codeforces.com/problemset/problem/1882/E1',2,3),(7543,'Tree XOR','https://codeforces.com/problemset/problem/1882/D',2,3),(7544,'Card Game','https://codeforces.com/problemset/problem/1882/C',1,3),(7545,'Sets and Union','https://codeforces.com/problemset/problem/1882/B',1,3),(7546,'Increasing Sequence','https://codeforces.com/problemset/problem/1882/A',1,3),(7547,'Anya and the Mysterious String','https://codeforces.com/problemset/problem/1881/G',2,3),(7548,'Minimum Maximum Distance','https://codeforces.com/problemset/problem/1881/F',2,3),(7549,'Block Sequence','https://codeforces.com/problemset/problem/1881/E',1,3),(7550,'Divide and Equalize','https://codeforces.com/problemset/problem/1881/D',1,3),(7551,'Perfect Square','https://codeforces.com/problemset/problem/1881/C',1,3),(7552,'Three Threadlets','https://codeforces.com/problemset/problem/1881/B',1,3),(7553,'Don\'t Try to Count','https://codeforces.com/problemset/problem/1881/A',1,3),(7554,'Last Man Standing','https://codeforces.com/problemset/problem/1879/F',3,3),(7555,'Interactive Game with Coloring','https://codeforces.com/problemset/problem/1879/E',2,3),(7556,'Sum of XOR Functions','https://codeforces.com/problemset/problem/1879/D',2,3),(7557,'Make it Alternating','https://codeforces.com/problemset/problem/1879/C',1,3),(7558,'Chips on the Board','https://codeforces.com/problemset/problem/1879/B',1,3),(7559,'Rigged!','https://codeforces.com/problemset/problem/1879/A',1,3),(7560,'wxhtzdy ORO Tree','https://codeforces.com/problemset/problem/1878/G',2,3),(7561,'Vasilije Loves Number Theory','https://codeforces.com/problemset/problem/1878/F',2,3),(7562,'Iva & Pav','https://codeforces.com/problemset/problem/1878/E',1,3),(7563,'Reverse Madness','https://codeforces.com/problemset/problem/1878/D',2,3),(7564,'Vasilije in Cacak','https://codeforces.com/problemset/problem/1878/C',1,3),(7565,'Aleksa and Stack','https://codeforces.com/problemset/problem/1878/B',1,3),(7566,'How Much Does Daytona Cost?','https://codeforces.com/problemset/problem/1878/A',1,3),(7567,'Joyboard','https://codeforces.com/problemset/problem/1877/C',1,3),(7568,'Goals of Victory','https://codeforces.com/problemset/problem/1877/A',1,3),(7569,'Clubstep','https://codeforces.com/problemset/problem/1876/G',3,3),(7570,'Indefinite Clownfish','https://codeforces.com/problemset/problem/1876/F',3,3),(7571,'Ball-Stackable','https://codeforces.com/problemset/problem/1876/E',3,3),(7572,'Lexichromatography','https://codeforces.com/problemset/problem/1876/D',2,3),(7573,'Autosynthesis','https://codeforces.com/problemset/problem/1876/C',2,3),(7574,'Effects of Anti Pimples','https://codeforces.com/problemset/problem/1876/B',1,3),(7575,'Helmets in Night Light','https://codeforces.com/problemset/problem/1876/A',1,3),(7576,'Jellyfish and Mex','https://codeforces.com/problemset/problem/1875/D',2,3),(7577,'Jellyfish and Green Apple','https://codeforces.com/problemset/problem/1875/C',1,3),(7578,'Jellyfish and Undertale','https://codeforces.com/problemset/problem/1875/A',1,3),(7579,'Jellyfish and Inscryption','https://codeforces.com/problemset/problem/1874/G',3,3),(7580,'Jellyfish and OEIS','https://codeforces.com/problemset/problem/1874/F',3,3),(7581,'Jellyfish and Hack','https://codeforces.com/problemset/problem/1874/E',3,3),(7582,'Jellyfish and Miku','https://codeforces.com/problemset/problem/1874/D',3,3),(7583,'Jellyfish and EVA','https://codeforces.com/problemset/problem/1874/C',2,3),(7584,'Jellyfish and Math','https://codeforces.com/problemset/problem/1874/B',2,3),(7585,'Jellyfish and Game','https://codeforces.com/problemset/problem/1874/A',1,3),(7586,'Mad City','https://codeforces.com/problemset/problem/1873/H',2,3),(7587,'ABBC or BACB','https://codeforces.com/problemset/problem/1873/G',1,3),(7588,'Money Trees','https://codeforces.com/problemset/problem/1873/F',1,3),(7589,'Building an Aquarium','https://codeforces.com/problemset/problem/1873/E',1,3),(7590,'1D Eraser','https://codeforces.com/problemset/problem/1873/D',1,3),(7591,'Target Practice','https://codeforces.com/problemset/problem/1873/C',1,3),(7592,'Good Kid','https://codeforces.com/problemset/problem/1873/B',1,3),(7593,'Short Sort','https://codeforces.com/problemset/problem/1873/A',1,3),(7594,'Replace With Product','https://codeforces.com/problemset/problem/1872/G',2,3),(7595,'Selling a Menagerie','https://codeforces.com/problemset/problem/1872/F',2,3),(7596,'Data Structures Fan','https://codeforces.com/problemset/problem/1872/E',1,3),(7597,'Plus Minus Permutation','https://codeforces.com/problemset/problem/1872/D',1,3),(7598,'Non-coprime Split','https://codeforces.com/problemset/problem/1872/C',1,3),(7599,'The Corridor or There and Back Again','https://codeforces.com/problemset/problem/1872/B',1,3),(7600,'Two Vessels','https://codeforces.com/problemset/problem/1872/A',1,3),(7601,'Standard Graph Problem','https://codeforces.com/problemset/problem/1870/H',3,3),(7602,'MEXanization','https://codeforces.com/problemset/problem/1870/G',3,3),(7603,'Lazy Numbers','https://codeforces.com/problemset/problem/1870/F',3,3),(7604,'Another MEX Problem','https://codeforces.com/problemset/problem/1870/E',2,3),(7605,'Prefix Purchase','https://codeforces.com/problemset/problem/1870/D',2,3),(7606,'Colorful Table','https://codeforces.com/problemset/problem/1870/C',1,3),(7607,'Friendly Arrays','https://codeforces.com/problemset/problem/1870/B',1,3),(7608,'MEXanized Array','https://codeforces.com/problemset/problem/1870/A',1,3),(7609,'2D Traveling','https://codeforces.com/problemset/problem/1869/B',1,3),(7610,'Make It Zero','https://codeforces.com/problemset/problem/1869/A',1,3),(7611,'LIS?','https://codeforces.com/problemset/problem/1868/F',3,3),(7612,'Min-Sum-Max','https://codeforces.com/problemset/problem/1868/E',3,3),(7613,'Flower-like Pseudotree','https://codeforces.com/problemset/problem/1868/D',3,3),(7614,'Travel Plan','https://codeforces.com/problemset/problem/1868/C',2,3),(7615,'Candy Party (Hard Version)','https://codeforces.com/problemset/problem/1868/B2',2,3),(7616,'Candy Party (Easy Version)','https://codeforces.com/problemset/problem/1868/B1',2,3),(7617,'Fill in the Matrix','https://codeforces.com/problemset/problem/1868/A',1,3),(7618,'Most Different Tree','https://codeforces.com/problemset/problem/1867/F',3,3),(7619,'Salyg1n and Array (hard version)','https://codeforces.com/problemset/problem/1867/E2',2,3),(7620,'Salyg1n and Array (simple version)','https://codeforces.com/problemset/problem/1867/E1',2,3),(7621,'Cyclic Operations','https://codeforces.com/problemset/problem/1867/D',2,3),(7622,'Salyg1n and the MEX Game','https://codeforces.com/problemset/problem/1867/C',1,3),(7623,'XOR Palindromes','https://codeforces.com/problemset/problem/1867/B',1,3),(7624,'green_gold_dog, array and permutation','https://codeforces.com/problemset/problem/1867/A',1,3),(7625,'Mighty Rock Tower','https://codeforces.com/problemset/problem/1866/M',2,3),(7626,'Lihmuf Balling','https://codeforces.com/problemset/problem/1866/L',2,3),(7627,'Keen Tree Calculation','https://codeforces.com/problemset/problem/1866/K',2,3),(7628,'Jackets and Packets','https://codeforces.com/problemset/problem/1866/J',3,3),(7629,'Imagination Castle','https://codeforces.com/problemset/problem/1866/I',2,3),(7630,'Happy Sets','https://codeforces.com/problemset/problem/1866/H',2,3),(7631,'Grouped Carriages','https://codeforces.com/problemset/problem/1866/G',2,3),(7632,'Freak Joker Process','https://codeforces.com/problemset/problem/1866/F',3,3),(7633,'Elevators of Tamem','https://codeforces.com/problemset/problem/1866/E',3,3),(7634,'Digital Wallet','https://codeforces.com/problemset/problem/1866/D',2,3),(7635,'Completely Searching for Inversions','https://codeforces.com/problemset/problem/1866/C',2,3),(7636,'Battling with Numbers','https://codeforces.com/problemset/problem/1866/B',1,3),(7637,'Ambitious Kid','https://codeforces.com/problemset/problem/1866/A',1,3),(7638,'Future Dominators','https://codeforces.com/problemset/problem/1864/I',3,3),(7639,'Asterism Stream','https://codeforces.com/problemset/problem/1864/H',3,3),(7640,'Magic Square','https://codeforces.com/problemset/problem/1864/G',3,3),(7641,'Exotic Queries','https://codeforces.com/problemset/problem/1864/F',2,3),(7642,'Guess Game','https://codeforces.com/problemset/problem/1864/E',2,3),(7643,'Matrix Cascade','https://codeforces.com/problemset/problem/1864/D',2,3),(7644,'Divisor Chain','https://codeforces.com/problemset/problem/1864/C',1,3),(7645,'Swap and Reverse','https://codeforces.com/problemset/problem/1864/B',1,3),(7646,'Increasing and Decreasing','https://codeforces.com/problemset/problem/1864/A',1,3),(7647,'Redundant Routes','https://codeforces.com/problemset/problem/1863/I',3,3),(7648,'Goldberg Machine 3','https://codeforces.com/problemset/problem/1863/H',3,3),(7649,'Swaps','https://codeforces.com/problemset/problem/1863/G',3,3),(7650,'Divide, XOR, and Conquer','https://codeforces.com/problemset/problem/1863/F',3,3),(7651,'Speedrun','https://codeforces.com/problemset/problem/1863/E',2,3),(7652,'Two-Colored Dominoes','https://codeforces.com/problemset/problem/1863/D',1,3),(7653,'MEX Repetition','https://codeforces.com/problemset/problem/1863/C',1,3),(7654,'Split Sort','https://codeforces.com/problemset/problem/1863/B',1,3),(7655,'Channel','https://codeforces.com/problemset/problem/1863/A',1,3),(7656,'The Great Equalizer','https://codeforces.com/problemset/problem/1862/G',2,3),(7657,'Magic Will Save the World','https://codeforces.com/problemset/problem/1862/F',2,3),(7658,'Kolya and Movie Theatre','https://codeforces.com/problemset/problem/1862/E',2,3),(7659,'Ice Cream Balls','https://codeforces.com/problemset/problem/1862/D',1,3),(7660,'Flower City Fence','https://codeforces.com/problemset/problem/1862/C',1,3),(7661,'Sequence Game','https://codeforces.com/problemset/problem/1862/B',1,3),(7662,'Gift Carpet','https://codeforces.com/problemset/problem/1862/A',1,3),(7663,'Four Suits','https://codeforces.com/problemset/problem/1861/F',3,3),(7664,'Non-Intersecting Subpermutations','https://codeforces.com/problemset/problem/1861/E',2,3),(7665,'Sorting By Multiplication','https://codeforces.com/problemset/problem/1861/D',2,3),(7666,'Queries for the Array','https://codeforces.com/problemset/problem/1861/C',2,3),(7667,'Two Binary Strings','https://codeforces.com/problemset/problem/1861/B',1,3),(7668,'Prime Deletion','https://codeforces.com/problemset/problem/1861/A',1,3),(7669,'Evaluate RBS','https://codeforces.com/problemset/problem/1860/F',3,3),(7670,'Fast Travel Text Editor','https://codeforces.com/problemset/problem/1860/E',2,3),(7671,'Balanced String','https://codeforces.com/problemset/problem/1860/D',2,3),(7672,'Game on Permutation','https://codeforces.com/problemset/problem/1860/C',1,3),(7673,'Fancy Coins','https://codeforces.com/problemset/problem/1860/B',1,3),(7674,'Not a Substring','https://codeforces.com/problemset/problem/1860/A',1,3),(7675,'Teleportation in Byteland','https://codeforces.com/problemset/problem/1859/F',3,3),(7676,'Maximum Monogonosity','https://codeforces.com/problemset/problem/1859/E',2,3),(7677,'Andrey and Escape from Capygrad','https://codeforces.com/problemset/problem/1859/D',2,3),(7678,'Another Permutation Problem','https://codeforces.com/problemset/problem/1859/C',1,3),(7679,'Olya and Game with Arrays','https://codeforces.com/problemset/problem/1859/B',1,3),(7680,'United We Stand','https://codeforces.com/problemset/problem/1859/A',1,3),(7681,'Rollbacks (Hard Version)','https://codeforces.com/problemset/problem/1858/E2',3,3),(7682,'Rollbacks (Easy Version)','https://codeforces.com/problemset/problem/1858/E1',2,3),(7683,'Trees and Segments','https://codeforces.com/problemset/problem/1858/D',2,3),(7684,'Yet Another Permutation Problem','https://codeforces.com/problemset/problem/1858/C',1,3),(7685,'The Walkway','https://codeforces.com/problemset/problem/1858/B',1,3),(7686,'Buttons','https://codeforces.com/problemset/problem/1858/A',1,3),(7687,'Counting Graphs','https://codeforces.com/problemset/problem/1857/G',2,3),(7688,'Sum and Product','https://codeforces.com/problemset/problem/1857/F',2,3),(7689,'Power of Points','https://codeforces.com/problemset/problem/1857/E',1,3),(7690,'Strong Vertices','https://codeforces.com/problemset/problem/1857/D',1,3),(7691,'Assembly via Minimums','https://codeforces.com/problemset/problem/1857/C',1,3),(7692,'Maximum Rounding','https://codeforces.com/problemset/problem/1857/B',1,3),(7693,'Array Coloring','https://codeforces.com/problemset/problem/1857/A',1,3),(7694,'PermuTree (hard version)','https://codeforces.com/problemset/problem/1856/E2',3,3),(7695,'PermuTree (easy version)','https://codeforces.com/problemset/problem/1856/E1',2,3),(7696,'More Wrong','https://codeforces.com/problemset/problem/1856/D',2,3),(7697,'To Become Max','https://codeforces.com/problemset/problem/1856/C',2,3),(7698,'Good Arrays','https://codeforces.com/problemset/problem/1856/B',1,3),(7699,'Tales of a Sort','https://codeforces.com/problemset/problem/1856/A',1,3),(7700,'Longest Divisors Interval','https://codeforces.com/problemset/problem/1855/B',1,3),(7701,'Dalton the Teacher','https://codeforces.com/problemset/problem/1855/A',1,3),(7702,'Mark and Spaceship','https://codeforces.com/problemset/problem/1854/F',3,3),(7703,'Game Bundles','https://codeforces.com/problemset/problem/1854/E',3,3),(7704,'Michael and Hotel','https://codeforces.com/problemset/problem/1854/D',3,3),(7705,'Expected Destruction','https://codeforces.com/problemset/problem/1854/C',2,3),(7706,'Earn or Unlock','https://codeforces.com/problemset/problem/1854/B',2,3),(7707,'Dual (Hard Version)','https://codeforces.com/problemset/problem/1854/A2',2,3),(7708,'Dual (Easy Version)','https://codeforces.com/problemset/problem/1854/A1',1,3),(7709,'Fibonaccharsis','https://codeforces.com/problemset/problem/1853/B',1,3),(7710,'Desorting','https://codeforces.com/problemset/problem/1853/A',1,3),(7711,'Panda Meetups','https://codeforces.com/problemset/problem/1852/F',3,3),(7712,'Rivalries','https://codeforces.com/problemset/problem/1852/E',3,3),(7713,'Miriany and Matchstick','https://codeforces.com/problemset/problem/1852/D',3,3),(7714,'Ina of the Mountain','https://codeforces.com/problemset/problem/1852/C',2,3),(7715,'Imbalanced Arrays','https://codeforces.com/problemset/problem/1852/B',2,3),(7716,'Ntarsis\' Set','https://codeforces.com/problemset/problem/1852/A',2,3),(7717,'Vlad and the Mountains','https://codeforces.com/problemset/problem/1851/G',2,3),(7718,'Lisa and the Martians','https://codeforces.com/problemset/problem/1851/F',2,3),(7719,'Nastya and Potions','https://codeforces.com/problemset/problem/1851/E',1,3),(7720,'Prefix Permutation Sums','https://codeforces.com/problemset/problem/1851/D',1,3),(7721,'Tiles Comeback','https://codeforces.com/problemset/problem/1851/C',1,3),(7722,'Parity Sort','https://codeforces.com/problemset/problem/1851/B',1,3),(7723,'Escalator Conversations','https://codeforces.com/problemset/problem/1851/A',1,3),(7724,'The Third Letter','https://codeforces.com/problemset/problem/1850/H',2,3),(7725,'The Morning Star','https://codeforces.com/problemset/problem/1850/G',1,3),(7726,'We Were Both Children','https://codeforces.com/problemset/problem/1850/F',1,3),(7727,'Cardboard for Pictures','https://codeforces.com/problemset/problem/1850/E',1,3),(7728,'Balanced Round','https://codeforces.com/problemset/problem/1850/D',1,3),(7729,'Word on the Paper','https://codeforces.com/problemset/problem/1850/C',1,3),(7730,'Ten Words of Wisdom','https://codeforces.com/problemset/problem/1850/B',1,3),(7731,'To My Critics','https://codeforces.com/problemset/problem/1850/A',1,3),(7732,'XOR Partition','https://codeforces.com/problemset/problem/1849/F',3,3),(7733,'Max to the Right of Min','https://codeforces.com/problemset/problem/1849/E',2,3),(7734,'Array Painting','https://codeforces.com/problemset/problem/1849/D',2,3),(7735,'Binary String Copying','https://codeforces.com/problemset/problem/1849/C',2,3),(7736,'Monsters','https://codeforces.com/problemset/problem/1849/B',1,3),(7737,'Morning Sandwich','https://codeforces.com/problemset/problem/1849/A',1,3),(7738,'Vika and Wiki','https://codeforces.com/problemset/problem/1848/F',2,3),(7739,'Vika and Stone Skipping','https://codeforces.com/problemset/problem/1848/E',3,3),(7740,'Vika and Bonuses','https://codeforces.com/problemset/problem/1848/D',2,3),(7741,'Vika and Price Tags','https://codeforces.com/problemset/problem/1848/C',2,3),(7742,'Vika and the Bridge','https://codeforces.com/problemset/problem/1848/B',1,3),(7743,'Vika and Her Friends','https://codeforces.com/problemset/problem/1848/A',1,3),(7744,'The Boss\'s Identity','https://codeforces.com/problemset/problem/1847/F',2,3),(7745,'Triangle Platinum?','https://codeforces.com/problemset/problem/1847/E',3,3),(7746,'Professor Higashikata','https://codeforces.com/problemset/problem/1847/D',2,3),(7747,'Vampiric Powers, anyone?','https://codeforces.com/problemset/problem/1847/C',1,3),(7748,'Hamon Odyssey','https://codeforces.com/problemset/problem/1847/B',1,3),(7749,'The Man who became a God ','https://codeforces.com/problemset/problem/1847/A',1,3),(7750,'Rudolf and CodeVid-23','https://codeforces.com/problemset/problem/1846/G',2,3),(7751,'Rudolph and Mimic','https://codeforces.com/problemset/problem/1846/F',2,3),(7752,'Rudolf and Snowflakes (hard version)','https://codeforces.com/problemset/problem/1846/E2',2,3),(7753,'Rudolf and Snowflakes (simple version)','https://codeforces.com/problemset/problem/1846/E1',1,3),(7754,'Rudolph and Christmas Tree','https://codeforces.com/problemset/problem/1846/D',1,3),(7755,'Rudolf and the Another Competition','https://codeforces.com/problemset/problem/1846/C',1,3),(7756,'Rudolph and Tic-Tac-Toe','https://codeforces.com/problemset/problem/1846/B',1,3),(7757,'Rudolph and Cut the Rope ','https://codeforces.com/problemset/problem/1846/A',1,3),(7758,'Swimmers in the Pool','https://codeforces.com/problemset/problem/1845/F',3,3),(7759,'Boxes and Balls','https://codeforces.com/problemset/problem/1845/E',2,3),(7760,'Rating System','https://codeforces.com/problemset/problem/1845/D',2,3),(7761,'Strong Password','https://codeforces.com/problemset/problem/1845/C',1,3),(7762,'Come Together','https://codeforces.com/problemset/problem/1845/B',1,3),(7763,'Forbidden Integer','https://codeforces.com/problemset/problem/1845/A',1,3),(7764,'Multiple of Three Cycles','https://codeforces.com/problemset/problem/1844/H',3,3),(7765,'Tree Weights','https://codeforces.com/problemset/problem/1844/G',3,3),(7766,'Min Cost Permutation (Hard Version)','https://codeforces.com/problemset/problem/1844/F2',3,3),(7767,'Min Cost Permutation (Easy Version)','https://codeforces.com/problemset/problem/1844/F1',3,3),(7768,'Great Grids','https://codeforces.com/problemset/problem/1844/E',2,3),(7769,'Row Major','https://codeforces.com/problemset/problem/1844/D',1,3),(7770,'Particles','https://codeforces.com/problemset/problem/1844/C',1,3),(7771,'Permutations & Primes','https://codeforces.com/problemset/problem/1844/B',1,3),(7772,'Subtraction Game','https://codeforces.com/problemset/problem/1844/A',1,3),(7773,'Omsk Metro (hard version)','https://codeforces.com/problemset/problem/1843/F2',2,3),(7774,'Omsk Metro (simple version)','https://codeforces.com/problemset/problem/1843/F1',2,3),(7775,'Tracking Segments','https://codeforces.com/problemset/problem/1843/E',2,3),(7776,'Apple Tree','https://codeforces.com/problemset/problem/1843/D',1,3),(7777,'Sum in Binary Tree','https://codeforces.com/problemset/problem/1843/C',1,3),(7778,'Long Long','https://codeforces.com/problemset/problem/1843/B',1,3),(7779,'Sasha and Array Coloring','https://codeforces.com/problemset/problem/1843/A',1,3),(7780,'Tenzing and Necklace','https://codeforces.com/problemset/problem/1842/I',3,3),(7781,'Tenzing and Random Real Numbers','https://codeforces.com/problemset/problem/1842/H',3,3),(7782,'Tenzing and Random Operations','https://codeforces.com/problemset/problem/1842/G',3,3),(7783,'Tenzing and Tree','https://codeforces.com/problemset/problem/1842/F',2,3),(7784,'Tenzing and Triangle','https://codeforces.com/problemset/problem/1842/E',2,3),(7785,'Tenzing and His Animal Friends ','https://codeforces.com/problemset/problem/1842/D',2,3),(7786,'Tenzing and Balls','https://codeforces.com/problemset/problem/1842/C',1,3),(7787,'Tenzing and Books','https://codeforces.com/problemset/problem/1842/B',1,3),(7788,'Tenzing and Tsondu','https://codeforces.com/problemset/problem/1842/A',1,3),(7789,'Monocarp and a Strategic Game','https://codeforces.com/problemset/problem/1841/F',3,3),(7790,'Fill the Matrix','https://codeforces.com/problemset/problem/1841/E',2,3),(7791,'Pairs of Segments','https://codeforces.com/problemset/problem/1841/D',2,3),(7792,'Ranom Numbers','https://codeforces.com/problemset/problem/1841/C',2,3),(7793,'Keep it Beautiful','https://codeforces.com/problemset/problem/1841/B',1,3),(7794,'Game with Board','https://codeforces.com/problemset/problem/1841/A',1,3),(7795,'In Search of Truth (Hard Version)','https://codeforces.com/problemset/problem/1840/G2',2,3),(7796,'In Search of Truth (Easy Version)','https://codeforces.com/problemset/problem/1840/G1',2,3),(7797,'Railguns','https://codeforces.com/problemset/problem/1840/F',2,3),(7798,'Character Blocking','https://codeforces.com/problemset/problem/1840/E',2,3),(7799,'Wooden Toy Festival','https://codeforces.com/problemset/problem/1840/D',1,3),(7800,'Ski Resort','https://codeforces.com/problemset/problem/1840/C',1,3),(7801,'Binary Cafe','https://codeforces.com/problemset/problem/1840/B',1,3),(7802,'Cipher Shifer','https://codeforces.com/problemset/problem/1840/A',1,3),(7803,'Decreasing Game','https://codeforces.com/problemset/problem/1839/E',2,3),(7804,'Ball Sorting','https://codeforces.com/problemset/problem/1839/D',2,3),(7805,'Insert Zero and Invert Prefix','https://codeforces.com/problemset/problem/1839/C',1,3),(7806,'Lamps','https://codeforces.com/problemset/problem/1839/B',1,3),(7807,'The Good Array','https://codeforces.com/problemset/problem/1839/A',1,3),(7808,'Stuck Conveyor','https://codeforces.com/problemset/problem/1838/F',3,3),(7809,'Count Supersequences','https://codeforces.com/problemset/problem/1838/E',2,3),(7810,'Bracket Walk','https://codeforces.com/problemset/problem/1838/D',2,3),(7811,'No Prime Differences','https://codeforces.com/problemset/problem/1838/C',1,3),(7812,'Minimize Permutation Subarrays','https://codeforces.com/problemset/problem/1838/B',1,3),(7813,'Blackboard List','https://codeforces.com/problemset/problem/1838/A',1,3),(7814,'Editorial for Two','https://codeforces.com/problemset/problem/1837/F',2,3),(7815,'Playoff Fixing','https://codeforces.com/problemset/problem/1837/E',2,3),(7816,'Bracket Coloring','https://codeforces.com/problemset/problem/1837/D',1,3),(7817,'Best Binary String','https://codeforces.com/problemset/problem/1837/C',1,3),(7818,'Comparison String','https://codeforces.com/problemset/problem/1837/B',1,3),(7819,'Grasshopper on a Line','https://codeforces.com/problemset/problem/1837/A',1,3),(7820,'Astrophysicists','https://codeforces.com/problemset/problem/1836/B',1,3),(7821,'Destroyer','https://codeforces.com/problemset/problem/1836/A',1,3),(7822,'Good Graph','https://codeforces.com/problemset/problem/1835/F',3,3),(7823,'Old Mobile','https://codeforces.com/problemset/problem/1835/E',3,3),(7824,'Doctor\'s Brown Hypothesis','https://codeforces.com/problemset/problem/1835/D',3,3),(7825,'Twin Clusters','https://codeforces.com/problemset/problem/1835/C',3,3),(7826,'Lottery','https://codeforces.com/problemset/problem/1835/B',2,3),(7827,'k-th equality','https://codeforces.com/problemset/problem/1835/A',2,3),(7828,'Typewriter','https://codeforces.com/problemset/problem/1834/F',2,3),(7829,'MEX of LCM','https://codeforces.com/problemset/problem/1834/E',2,3),(7830,'Survey in Class','https://codeforces.com/problemset/problem/1834/D',2,3),(7831,'Game with Reversing','https://codeforces.com/problemset/problem/1834/C',1,3),(7832,'Maximum Strength','https://codeforces.com/problemset/problem/1834/B',1,3),(7833,'Unit Array','https://codeforces.com/problemset/problem/1834/A',1,3),(7834,'Ksyusha and Chinchilla','https://codeforces.com/problemset/problem/1833/G',2,3),(7835,'Ira and Flamenco','https://codeforces.com/problemset/problem/1833/F',2,3),(7836,'Round Dance','https://codeforces.com/problemset/problem/1833/E',2,3),(7837,'Flipper','https://codeforces.com/problemset/problem/1833/D',1,3),(7838,'Vlad Building Beautiful Array','https://codeforces.com/problemset/problem/1833/C',1,3),(7839,'Restore the Weather','https://codeforces.com/problemset/problem/1833/B',1,3),(7840,'Musical Puzzle','https://codeforces.com/problemset/problem/1833/A',1,3),(7841,'Zombies','https://codeforces.com/problemset/problem/1832/F',3,3),(7842,'Combinatorics Problem','https://codeforces.com/problemset/problem/1832/E',2,3),(7843,'Red-Blue Operations (Hard Version)','https://codeforces.com/problemset/problem/1832/D2',2,3),(7844,'Red-Blue Operations (Easy Version)','https://codeforces.com/problemset/problem/1832/D1',2,3),(7845,'Contrast Value','https://codeforces.com/problemset/problem/1832/C',1,3),(7846,'Maximum Sum','https://codeforces.com/problemset/problem/1832/B',1,3),(7847,'New Palindrome','https://codeforces.com/problemset/problem/1832/A',1,3),(7848,'Array merging','https://codeforces.com/problemset/problem/1831/B',1,3),(7849,'Twin Permutations','https://codeforces.com/problemset/problem/1831/A',1,3),(7850,'The Third Grace','https://codeforces.com/problemset/problem/1830/F',3,3),(7851,'Bully Sort','https://codeforces.com/problemset/problem/1830/E',3,3),(7852,'Mex Tree','https://codeforces.com/problemset/problem/1830/D',3,3),(7853,'Hyperregular Bracket Strings','https://codeforces.com/problemset/problem/1830/C',2,3),(7854,'The BOSS Can Count Pairs','https://codeforces.com/problemset/problem/1830/B',2,3),(7855,'Copil Copac Draws Trees','https://codeforces.com/problemset/problem/1830/A',1,3),(7856,'Don\'t Blame Me','https://codeforces.com/problemset/problem/1829/H',2,3),(7857,'Hits Different','https://codeforces.com/problemset/problem/1829/G',2,3),(7858,'Forever Winter','https://codeforces.com/problemset/problem/1829/F',1,3),(7859,'The Lakes','https://codeforces.com/problemset/problem/1829/E',1,3),(7860,'Gold Rush','https://codeforces.com/problemset/problem/1829/D',1,3),(7861,'Mr. Perfectly Fine','https://codeforces.com/problemset/problem/1829/C',1,3),(7862,'Blank Space','https://codeforces.com/problemset/problem/1829/B',1,3),(7863,'Love Story','https://codeforces.com/problemset/problem/1829/A',1,3),(7864,'Permutation Swap','https://codeforces.com/problemset/problem/1828/B',1,3),(7865,'Divisible Array','https://codeforces.com/problemset/problem/1828/A',1,3),(7866,'Copium Permutation','https://codeforces.com/problemset/problem/1827/F',3,3),(7867,'Bus Routes','https://codeforces.com/problemset/problem/1827/E',3,3),(7868,'Two Centroids','https://codeforces.com/problemset/problem/1827/D',3,3),(7869,'Palindrome Partition','https://codeforces.com/problemset/problem/1827/C',3,3),(7870,'Range Sorting (Hard Version)','https://codeforces.com/problemset/problem/1827/B2',2,3),(7871,'Range Sorting (Easy Version)','https://codeforces.com/problemset/problem/1827/B1',2,3),(7872,'Counting Orders','https://codeforces.com/problemset/problem/1827/A',1,3),(7873,'Fading into Fog','https://codeforces.com/problemset/problem/1826/F',3,3),(7874,'Walk the Runway','https://codeforces.com/problemset/problem/1826/E',2,3),(7875,'Running Miles','https://codeforces.com/problemset/problem/1826/D',2,3),(7876,'Dreaming of Freedom','https://codeforces.com/problemset/problem/1826/C',1,3),(7877,'Lunatic Never Content','https://codeforces.com/problemset/problem/1826/B',1,3),(7878,'Trust Nobody','https://codeforces.com/problemset/problem/1826/A',1,3),(7879,'LuoTianyi and the Table','https://codeforces.com/problemset/problem/1825/B',1,3),(7880,'LuoTianyi and the Palindrome String','https://codeforces.com/problemset/problem/1825/A',1,3),(7881,'LuoTianyi and Cartridge','https://codeforces.com/problemset/problem/1824/E',3,3),(7882,'LuoTianyi and the Function','https://codeforces.com/problemset/problem/1824/D',3,3),(7883,'LuoTianyi and XOR-Tree','https://codeforces.com/problemset/problem/1824/C',2,3),(7884,'LuoTianyi and the Floating Islands (Hard Version)','https://codeforces.com/problemset/problem/1824/B2',2,3),(7885,'LuoTianyi and the Floating Islands (Easy Version)','https://codeforces.com/problemset/problem/1824/B1',2,3),(7886,'LuoTianyi and the Show','https://codeforces.com/problemset/problem/1824/A',1,3),(7887,'Random Walk','https://codeforces.com/problemset/problem/1823/F',3,3),(7888,'Removing Graph','https://codeforces.com/problemset/problem/1823/E',2,3),(7889,'Unique Palindromes','https://codeforces.com/problemset/problem/1823/D',2,3),(7890,'Strongly Composite','https://codeforces.com/problemset/problem/1823/C',1,3),(7891,'Sort with Step','https://codeforces.com/problemset/problem/1823/B',1,3),(7892,'A-characteristic','https://codeforces.com/problemset/problem/1823/A',1,3),(7893,'Magic Triples (Hard Version)','https://codeforces.com/problemset/problem/1822/G2',2,3),(7894,'Magic Triples (Easy Version)','https://codeforces.com/problemset/problem/1822/G1',2,3),(7895,'Gardening Friends','https://codeforces.com/problemset/problem/1822/F',2,3),(7896,'Making Anti-Palindromes','https://codeforces.com/problemset/problem/1822/E',2,3),(7897,'Super-Permutation','https://codeforces.com/problemset/problem/1822/D',1,3),(7898,'Bun Lover','https://codeforces.com/problemset/problem/1822/C',1,3),(7899,'Karina and Array','https://codeforces.com/problemset/problem/1822/B',1,3),(7900,'TubeTube Feed','https://codeforces.com/problemset/problem/1822/A',1,3),(7901,'Timber','https://codeforces.com/problemset/problem/1821/F',3,3),(7902,'Rearrange Brackets','https://codeforces.com/problemset/problem/1821/E',2,3),(7903,'Black Cells','https://codeforces.com/problemset/problem/1821/D',2,3),(7904,'Tear It Apart','https://codeforces.com/problemset/problem/1821/C',1,3),(7905,'Sort the Subarray','https://codeforces.com/problemset/problem/1821/B',1,3),(7906,'Matching','https://codeforces.com/problemset/problem/1821/A',1,3),(7907,'JoJo\'s Incredible Adventures','https://codeforces.com/problemset/problem/1820/B',1,3),(7908,'Yura\'s New Name','https://codeforces.com/problemset/problem/1820/A',1,3),(7909,'Willy-nilly, Crack, Into Release!','https://codeforces.com/problemset/problem/1819/F',3,3),(7910,'Roads in E City','https://codeforces.com/problemset/problem/1819/E',3,3),(7911,'Misha and Apples','https://codeforces.com/problemset/problem/1819/D',3,3),(7912,'The Fox and the Complete Tree Traversal','https://codeforces.com/problemset/problem/1819/C',2,3),(7913,'The Butcher','https://codeforces.com/problemset/problem/1819/B',2,3),(7914,'Constructive Problem','https://codeforces.com/problemset/problem/1819/A',1,3),(7915,'Indivisible','https://codeforces.com/problemset/problem/1818/B',1,3),(7916,'Politics','https://codeforces.com/problemset/problem/1818/A',1,3),(7917,'Entangled Substrings','https://codeforces.com/problemset/problem/1817/F',3,3),(7918,'Half-sum','https://codeforces.com/problemset/problem/1817/E',3,3),(7919,'Toy Machine','https://codeforces.com/problemset/problem/1817/D',3,3),(7920,'Similar Polynomials','https://codeforces.com/problemset/problem/1817/C',2,3),(7921,'Fish Graph','https://codeforces.com/problemset/problem/1817/B',2,3),(7922,'Almost Increasing Subsequence','https://codeforces.com/problemset/problem/1817/A',1,3),(7923,'Grid Reconstruction','https://codeforces.com/problemset/problem/1816/B',1,3),(7924,'Ian Visits Mary','https://codeforces.com/problemset/problem/1816/A',1,3),(7925,'OH NO1 (-2-3-4)','https://codeforces.com/problemset/problem/1815/F',3,3),(7926,'Bosco and Particle','https://codeforces.com/problemset/problem/1815/E',3,3),(7927,'XOR Counting','https://codeforces.com/problemset/problem/1815/D',3,3),(7928,'Between','https://codeforces.com/problemset/problem/1815/C',2,3),(7929,'Sum Graph','https://codeforces.com/problemset/problem/1815/B',2,3),(7930,'Ian and Array Sorting','https://codeforces.com/problemset/problem/1815/A',1,3),(7931,'Communication Towers','https://codeforces.com/problemset/problem/1814/F',3,3),(7932,'Chain Chips','https://codeforces.com/problemset/problem/1814/E',2,3),(7933,'Balancing Weapons','https://codeforces.com/problemset/problem/1814/D',2,3),(7934,'Search in Parallel','https://codeforces.com/problemset/problem/1814/C',1,3),(7935,'Long Legs','https://codeforces.com/problemset/problem/1814/B',2,3),(7936,'Coins','https://codeforces.com/problemset/problem/1814/A',1,3),(7937,'Unmysterious Language','https://codeforces.com/problemset/problem/1812/J',6,3),(7938,'Mountain Climber','https://codeforces.com/problemset/problem/1812/I',6,3),(7939,'Expected Twist','https://codeforces.com/problemset/problem/1812/H',6,3),(7940,'Colour Vision','https://codeforces.com/problemset/problem/1812/G',6,3),(7941,'Factorization','https://codeforces.com/problemset/problem/1812/F',6,3),(7942,'Not a Geometry Problem','https://codeforces.com/problemset/problem/1812/E',6,3),(7943,'Trivial Conjecture','https://codeforces.com/problemset/problem/1812/D',6,3),(7944,'Digits','https://codeforces.com/problemset/problem/1812/C',6,3),(7945,'Was it Rated?','https://codeforces.com/problemset/problem/1812/B',6,3),(7946,'Are You a Robot?','https://codeforces.com/problemset/problem/1812/A',6,3),(7947,'Vlad and the Nice Paths (hard version)','https://codeforces.com/problemset/problem/1811/G2',2,3),(7948,'Vlad and the Nice Paths (easy version)','https://codeforces.com/problemset/problem/1811/G1',2,3),(7949,'Is It Flower?','https://codeforces.com/problemset/problem/1811/F',2,3),(7950,'Living Sequence','https://codeforces.com/problemset/problem/1811/E',1,3),(7951,'Umka and a Long Flight','https://codeforces.com/problemset/problem/1811/D',2,3),(7952,'Restore the Array','https://codeforces.com/problemset/problem/1811/C',1,3),(7953,'Conveyor Belts','https://codeforces.com/problemset/problem/1811/B',1,3),(7954,'Insert Digit','https://codeforces.com/problemset/problem/1811/A',1,3),(7955,'Last Number','https://codeforces.com/problemset/problem/1810/H',3,3),(7956,'The Maximum Prefix','https://codeforces.com/problemset/problem/1810/G',3,3),(7957,'M-tree','https://codeforces.com/problemset/problem/1810/F',3,3),(7958,'Monsters','https://codeforces.com/problemset/problem/1810/E',2,3),(7959,'Climbing the Tree','https://codeforces.com/problemset/problem/1810/D',2,3),(7960,'Make It Permutation','https://codeforces.com/problemset/problem/1810/C',1,3),(7961,'Candies','https://codeforces.com/problemset/problem/1810/B',1,3),(7962,'Beautiful Sequence','https://codeforces.com/problemset/problem/1810/A',1,3),(7963,'Prediction','https://codeforces.com/problemset/problem/1809/G',3,3),(7964,'Traveling in Berland','https://codeforces.com/problemset/problem/1809/F',2,3),(7965,'Two Tanks','https://codeforces.com/problemset/problem/1809/E',2,3),(7966,'Binary String Sorting','https://codeforces.com/problemset/problem/1809/D',2,3),(7967,'Sum on Subarrays','https://codeforces.com/problemset/problem/1809/C',1,3),(7968,'Points on Plane','https://codeforces.com/problemset/problem/1809/B',1,3),(7969,'Garland','https://codeforces.com/problemset/problem/1809/A',1,3),(7970,'Minibuses on Venus (hard version)','https://codeforces.com/problemset/problem/1808/E3',3,3),(7971,'Minibuses on Venus (medium version)','https://codeforces.com/problemset/problem/1808/E2',2,3),(7972,'Minibuses on Venus (easy version)','https://codeforces.com/problemset/problem/1808/E1',2,3),(7973,'Petya, Petya, Petr, and Palindromes','https://codeforces.com/problemset/problem/1808/D',2,3),(7974,'Unlucky Numbers','https://codeforces.com/problemset/problem/1808/C',2,3),(7975,'Playing in a Casino','https://codeforces.com/problemset/problem/1808/B',1,3),(7976,'Lucky Numbers','https://codeforces.com/problemset/problem/1808/A',1,3),(7977,'Subsequence Addition (Hard Version)','https://codeforces.com/problemset/problem/1807/G2',1,3),(7978,'Subsequence Addition (Easy Version)','https://codeforces.com/problemset/problem/1807/G1',1,3),(7979,'Bouncy Ball','https://codeforces.com/problemset/problem/1807/F',2,3),(7980,'Interview','https://codeforces.com/problemset/problem/1807/E',1,3),(7981,'Odd Queries','https://codeforces.com/problemset/problem/1807/D',1,3),(7982,'Find and Replace','https://codeforces.com/problemset/problem/1807/C',1,3),(7983,'Grab the Candies','https://codeforces.com/problemset/problem/1807/B',1,3),(7984,'Plus or Minus','https://codeforces.com/problemset/problem/1807/A',1,3),(7985,'GCD Master (hard version)','https://codeforces.com/problemset/problem/1806/F2',3,3),(7986,'GCD Master (easy version)','https://codeforces.com/problemset/problem/1806/F1',3,3),(7987,'Tree Master','https://codeforces.com/problemset/problem/1806/E',2,3),(7988,'DSU Master','https://codeforces.com/problemset/problem/1806/D',2,3),(7989,'Sequence Master','https://codeforces.com/problemset/problem/1806/C',2,3),(7990,'Mex Master','https://codeforces.com/problemset/problem/1806/B',1,3),(7991,'Walking Master','https://codeforces.com/problemset/problem/1806/A',1,3),(7992,'Survival of the Weakest (hard version)','https://codeforces.com/problemset/problem/1805/F2',3,3),(7993,'Survival of the Weakest (easy version)','https://codeforces.com/problemset/problem/1805/F1',3,3),(7994,'There Should Be a Lot of Maximums','https://codeforces.com/problemset/problem/1805/E',2,3),(7995,'A Wide, Wide Graph','https://codeforces.com/problemset/problem/1805/D',2,3),(7996,'Place for a Selfie','https://codeforces.com/problemset/problem/1805/C',1,3),(7997,'The String Has a Target','https://codeforces.com/problemset/problem/1805/B',1,3),(7998,'We Need the Zero','https://codeforces.com/problemset/problem/1805/A',1,3),(7999,'Code Lock','https://codeforces.com/problemset/problem/1804/H',3,3),(8000,'Flow Control','https://codeforces.com/problemset/problem/1804/G',3,3),(8001,'Approximate Diameter','https://codeforces.com/problemset/problem/1804/F',3,3),(8002,'Routing','https://codeforces.com/problemset/problem/1804/E',2,3),(8003,'Accommodation','https://codeforces.com/problemset/problem/1804/D',2,3),(8004,'Pull Your Luck','https://codeforces.com/problemset/problem/1804/C',1,3),(8005,'Vaccination','https://codeforces.com/problemset/problem/1804/B',1,3),(8006,'Lame King','https://codeforces.com/problemset/problem/1804/A',1,3),(8007,'Settlement of Guinea Pigs','https://codeforces.com/problemset/problem/1802/B',1,3),(8008,'Likes','https://codeforces.com/problemset/problem/1802/A',1,3),(8009,'A task for substrings','https://codeforces.com/problemset/problem/1801/G',3,3),(8010,'Another n-dimensional chocolate bar','https://codeforces.com/problemset/problem/1801/F',3,3),(8011,'Gasoline prices','https://codeforces.com/problemset/problem/1801/E',3,3),(8012,'The way home','https://codeforces.com/problemset/problem/1801/D',2,3),(8013,'Music Festival','https://codeforces.com/problemset/problem/1801/C',2,3),(8014,'Buying gifts','https://codeforces.com/problemset/problem/1801/B',2,3),(8015,'The Very Beautiful Blanket','https://codeforces.com/problemset/problem/1801/A',2,3),(8016,'Symmetree','https://codeforces.com/problemset/problem/1800/G',2,3),(8017,'Dasha and Nightmares','https://codeforces.com/problemset/problem/1800/F',2,3),(8018,'Unforgivable Curse (hard version)','https://codeforces.com/problemset/problem/1800/E2',1,3),(8019,'Unforgivable Curse (easy version)','https://codeforces.com/problemset/problem/1800/E1',1,3),(8020,'Remove Two Letters','https://codeforces.com/problemset/problem/1800/D',1,3),(8021,'Powering the Hero (hard version)','https://codeforces.com/problemset/problem/1800/C2',1,3),(8022,'Powering the Hero (easy version)','https://codeforces.com/problemset/problem/1800/C1',1,3),(8023,'Count the Number of Pairs','https://codeforces.com/problemset/problem/1800/B',1,3),(8024,'Is It a Cat?','https://codeforces.com/problemset/problem/1800/A',1,3),(8025,'Tree Cutting','https://codeforces.com/problemset/problem/1799/H',3,3),(8026,'Count Voting','https://codeforces.com/problemset/problem/1799/G',3,3),(8027,'Halve or Subtract','https://codeforces.com/problemset/problem/1799/F',3,3),(8028,'City Union','https://codeforces.com/problemset/problem/1799/E',2,3),(8029,'Hot Start Up (hard version)','https://codeforces.com/problemset/problem/1799/D2',2,3),(8030,'Hot Start Up (easy version)','https://codeforces.com/problemset/problem/1799/D1',2,3),(8031,'Double Lexicographically Minimum','https://codeforces.com/problemset/problem/1799/C',2,3),(8032,'Equalize by Divide','https://codeforces.com/problemset/problem/1799/B',1,3),(8033,'Recent Actions','https://codeforces.com/problemset/problem/1799/A',1,3),(8034,'Gifts from Grandfather Ahmed','https://codeforces.com/problemset/problem/1798/F',2,3),(8035,'Multitest Generator','https://codeforces.com/problemset/problem/1798/E',2,3),(8036,'Shocking Arrangement','https://codeforces.com/problemset/problem/1798/D',2,3),(8037,'Candy Store','https://codeforces.com/problemset/problem/1798/C',2,3),(8038,'Three Sevens','https://codeforces.com/problemset/problem/1798/B',1,3),(8039,'Showstopper','https://codeforces.com/problemset/problem/1798/A',1,3),(8040,'Li Hua and Path','https://codeforces.com/problemset/problem/1797/F',3,3),(8041,'Li Hua and Array','https://codeforces.com/problemset/problem/1797/E',2,3),(8042,'Li Hua and Tree','https://codeforces.com/problemset/problem/1797/D',2,3),(8043,'Li Hua and Chess','https://codeforces.com/problemset/problem/1797/C',2,3),(8044,'Li Hua and Pattern','https://codeforces.com/problemset/problem/1797/B',1,3),(8045,'Li Hua and Maze','https://codeforces.com/problemset/problem/1797/A',1,3),(8046,'Strange Triples','https://codeforces.com/problemset/problem/1796/F',3,3),(8047,'Colored Subgraphs','https://codeforces.com/problemset/problem/1796/E',2,3),(8048,'Maximum Subarray','https://codeforces.com/problemset/problem/1796/D',2,3),(8049,'Maximum Set','https://codeforces.com/problemset/problem/1796/C',2,3),(8050,'Asterisk-Minor Template','https://codeforces.com/problemset/problem/1796/B',1,3),(8051,'Typical Interview Problem','https://codeforces.com/problemset/problem/1796/A',1,3),(8052,'Removal Sequences','https://codeforces.com/problemset/problem/1795/G',3,3),(8053,'Blocking Chips','https://codeforces.com/problemset/problem/1795/F',2,3),(8054,'Explosions?','https://codeforces.com/problemset/problem/1795/E',2,3),(8055,'Triangle Coloring','https://codeforces.com/problemset/problem/1795/D',2,3),(8056,'Tea Tasting','https://codeforces.com/problemset/problem/1795/C',1,3),(8057,'Ideal Point','https://codeforces.com/problemset/problem/1795/B',1,3),(8058,'Two Towers','https://codeforces.com/problemset/problem/1795/A',1,3),(8059,'Labeling the Tree with Distances','https://codeforces.com/problemset/problem/1794/E',2,3),(8060,'Counting Factorizations','https://codeforces.com/problemset/problem/1794/D',2,3),(8061,'Scoring Subsequences','https://codeforces.com/problemset/problem/1794/C',1,3),(8062,'Not Dividing','https://codeforces.com/problemset/problem/1794/B',1,3),(8063,'Prefix and Suffix Array','https://codeforces.com/problemset/problem/1794/A',1,3),(8064,'Rebrending','https://codeforces.com/problemset/problem/1793/F',3,3),(8065,'Velepin and Marketing','https://codeforces.com/problemset/problem/1793/E',3,3),(8066,'Moscow Gorillas','https://codeforces.com/problemset/problem/1793/D',2,3),(8067,'Dora and Search','https://codeforces.com/problemset/problem/1793/C',1,3),(8068,'Fedya and Array','https://codeforces.com/problemset/problem/1793/B',1,3),(8069,'Yet Another Promotion','https://codeforces.com/problemset/problem/1793/A',1,3),(8070,'Graph Coloring (hard version)','https://codeforces.com/problemset/problem/1792/F2',3,3),(8071,'Graph Coloring (easy version)','https://codeforces.com/problemset/problem/1792/F1',3,3),(8072,'Divisors and Table','https://codeforces.com/problemset/problem/1792/E',2,3),(8073,'Fixed Prefix Permutations','https://codeforces.com/problemset/problem/1792/D',2,3),(8074,'Min Max Sort','https://codeforces.com/problemset/problem/1792/C',1,3),(8075,'Stand-up Comedian','https://codeforces.com/problemset/problem/1792/B',1,3),(8076,'GamingForces','https://codeforces.com/problemset/problem/1792/A',1,3),(8077,'Teleporters (Hard Version)','https://codeforces.com/problemset/problem/1791/G2',2,3),(8078,'Teleporters (Easy Version)','https://codeforces.com/problemset/problem/1791/G1',1,3),(8079,'Range Update Point Query','https://codeforces.com/problemset/problem/1791/F',1,3),(8080,'Negatives and Positives','https://codeforces.com/problemset/problem/1791/E',1,3),(8081,'Distinct Split','https://codeforces.com/problemset/problem/1791/D',1,3),(8082,'Prepend and Append','https://codeforces.com/problemset/problem/1791/C',1,3),(8083,'Following Directions','https://codeforces.com/problemset/problem/1791/B',1,3),(8084,'Codeforces Checking','https://codeforces.com/problemset/problem/1791/A',1,3),(8085,'Tokens on Graph','https://codeforces.com/problemset/problem/1790/G',2,3),(8086,'Timofey and Black-White Tree','https://codeforces.com/problemset/problem/1790/F',2,3),(8087,'Vlad and a Pair of Numbers','https://codeforces.com/problemset/problem/1790/E',1,3),(8088,'Matryoshkas','https://codeforces.com/problemset/problem/1790/D',1,3),(8089,'Premutation','https://codeforces.com/problemset/problem/1790/C',1,3),(8090,'Taisia and Dice','https://codeforces.com/problemset/problem/1790/B',1,3),(8091,'Polycarp and the Day of Pi','https://codeforces.com/problemset/problem/1790/A',1,3),(8092,'Serval and Brain Power','https://codeforces.com/problemset/problem/1789/F',3,3),(8093,'Serval and Music Game','https://codeforces.com/problemset/problem/1789/E',2,3),(8094,'Serval and Shift-Shift-Shift','https://codeforces.com/problemset/problem/1789/D',2,3),(8095,'Serval and Toxel\'s Arrays','https://codeforces.com/problemset/problem/1789/C',1,3),(8096,'Serval and Inversion Magic','https://codeforces.com/problemset/problem/1789/B',1,3),(8097,'Serval and Mocha\'s Array','https://codeforces.com/problemset/problem/1789/A',1,3),(8098,'XOR, Tree, and Queries','https://codeforces.com/problemset/problem/1788/F',2,3),(8099,'Sum Over Zero','https://codeforces.com/problemset/problem/1788/E',2,3),(8100,'Moving Dots','https://codeforces.com/problemset/problem/1788/D',2,3),(8101,'Matching Numbers','https://codeforces.com/problemset/problem/1788/C',1,3),(8102,'Sum of Two Numbers','https://codeforces.com/problemset/problem/1788/B',1,3),(8103,'One and Two','https://codeforces.com/problemset/problem/1788/A',1,3),(8104,'Treasure Hunt','https://codeforces.com/problemset/problem/1787/I',3,3),(8105,'Codeforces Scoreboard','https://codeforces.com/problemset/problem/1787/H',3,3),(8106,'Colorful Tree Again','https://codeforces.com/problemset/problem/1787/G',3,3),(8107,'Inverse Transformation','https://codeforces.com/problemset/problem/1787/F',2,3),(8108,'The Harmonization of XOR','https://codeforces.com/problemset/problem/1787/E',2,3),(8109,'Game on Axis','https://codeforces.com/problemset/problem/1787/D',2,3),(8110,'Remove the Bracket','https://codeforces.com/problemset/problem/1787/C',2,3),(8111,'Number Factorization','https://codeforces.com/problemset/problem/1787/B',1,3),(8112,'Exponential Equation','https://codeforces.com/problemset/problem/1787/A',1,3),(8113,'Cake Assembly Line','https://codeforces.com/problemset/problem/1786/B',1,3),(8114,'Alternating Deck (hard version)','https://codeforces.com/problemset/problem/1786/A2',1,3),(8115,'Non-alternating Deck (easy version)','https://codeforces.com/problemset/problem/1786/A1',1,3),(8116,'Minimums or Medians','https://codeforces.com/problemset/problem/1784/F',3,3),(8117,'Infinite Game','https://codeforces.com/problemset/problem/1784/E',3,3),(8118,'Wooden Spoon','https://codeforces.com/problemset/problem/1784/D',2,3),(8119,'Monsters (hard version)','https://codeforces.com/problemset/problem/1784/C',2,3),(8120,'Letter Exchange','https://codeforces.com/problemset/problem/1784/B',2,3),(8121,'Monsters (easy version)','https://codeforces.com/problemset/problem/1784/A',1,3),(8122,'Weighed Tree Radius','https://codeforces.com/problemset/problem/1783/G',3,3),(8123,'Double Sort II','https://codeforces.com/problemset/problem/1783/F',2,3),(8124,'Game of the Year','https://codeforces.com/problemset/problem/1783/E',2,3),(8125,'Different Arrays','https://codeforces.com/problemset/problem/1783/D',2,3),(8126,'Yet Another Tournament','https://codeforces.com/problemset/problem/1783/C',2,3),(8127,'Matrix of Differences','https://codeforces.com/problemset/problem/1783/B',1,3),(8128,'Make it Beautiful','https://codeforces.com/problemset/problem/1783/A',1,3),(8129,'Window Signals (hard version)','https://codeforces.com/problemset/problem/1781/H2',3,3),(8130,'Window Signals (easy version)','https://codeforces.com/problemset/problem/1781/H1',3,3),(8131,'Diverse Coloring','https://codeforces.com/problemset/problem/1781/G',3,3),(8132,'Bracket Insertion','https://codeforces.com/problemset/problem/1781/F',3,3),(8133,'Rectangle Shrinking','https://codeforces.com/problemset/problem/1781/E',2,3),(8134,'Many Perfect Squares','https://codeforces.com/problemset/problem/1781/D',2,3),(8135,'Equal Frequencies','https://codeforces.com/problemset/problem/1781/C',2,3),(8136,'Going to the Cinema','https://codeforces.com/problemset/problem/1781/B',1,3),(8137,'Parallel Projection','https://codeforces.com/problemset/problem/1781/A',1,3),(8138,'Delicious Dessert','https://codeforces.com/problemset/problem/1780/G',2,3),(8139,'Three Chairs','https://codeforces.com/problemset/problem/1780/F',2,3),(8140,'Josuke and Complete Graph','https://codeforces.com/problemset/problem/1780/E',2,3),(8141,'Bit Guessing Game','https://codeforces.com/problemset/problem/1780/D',2,3),(8142,'GCD Partition','https://codeforces.com/problemset/problem/1780/B',1,3),(8143,'Hayato and School','https://codeforces.com/problemset/problem/1780/A',1,3),(8144,'Olympic Team Building','https://codeforces.com/problemset/problem/1779/H',3,3),(8145,'The Game of the Century','https://codeforces.com/problemset/problem/1779/G',3,3),(8146,'Xorcerer\'s Stones','https://codeforces.com/problemset/problem/1779/F',2,3),(8147,'Anya\'s Simultaneous Exhibition','https://codeforces.com/problemset/problem/1779/E',2,3),(8148,'Boris and His Amazing Haircut','https://codeforces.com/problemset/problem/1779/D',2,3),(8149,'Least Prefix Sum','https://codeforces.com/problemset/problem/1779/C',2,3),(8150,'MKnez\'s ConstructiveForces Task','https://codeforces.com/problemset/problem/1779/B',1,3),(8151,'Hall of Fame','https://codeforces.com/problemset/problem/1779/A',1,3),(8152,'Maximizing Root','https://codeforces.com/problemset/problem/1778/F',3,3),(8153,'The Tree Has Fallen!','https://codeforces.com/problemset/problem/1778/E',2,3),(8154,'Flexible String Revisit','https://codeforces.com/problemset/problem/1778/D',2,3),(8155,'Flexible String','https://codeforces.com/problemset/problem/1778/C',2,3),(8156,'The Forbidden Permutation','https://codeforces.com/problemset/problem/1778/B',1,3),(8157,'Flip Flop Sum','https://codeforces.com/problemset/problem/1778/A',1,3),(8158,'Comfortably Numb','https://codeforces.com/problemset/problem/1777/F',2,3),(8159,'Edge Reverse','https://codeforces.com/problemset/problem/1777/E',2,3),(8160,'Score of a Tree','https://codeforces.com/problemset/problem/1777/D',2,3),(8161,'Quiz Master','https://codeforces.com/problemset/problem/1777/C',2,3),(8162,'Emordnilap','https://codeforces.com/problemset/problem/1777/B',1,3),(8163,'Everybody Likes Good Arrays!','https://codeforces.com/problemset/problem/1777/A',1,3),(8164,'Count Permutations','https://codeforces.com/problemset/problem/1776/N',3,3),(8165,'Parmigiana With Seafood','https://codeforces.com/problemset/problem/1776/M',3,3),(8166,'Controllers','https://codeforces.com/problemset/problem/1776/L',1,3),(8167,'Uniform Chemistry','https://codeforces.com/problemset/problem/1776/K',3,3),(8168,'Italian Data Centers','https://codeforces.com/problemset/problem/1776/J',2,3),(8169,'Spinach Pizza','https://codeforces.com/problemset/problem/1776/I',2,3),(8170,'Beppa and SwerChat','https://codeforces.com/problemset/problem/1776/H',1,3),(8171,'Another Wine Tasting Event','https://codeforces.com/problemset/problem/1776/G',2,3),(8172,'Train Splitting','https://codeforces.com/problemset/problem/1776/F',2,3),(8173,'Crossing the Railways','https://codeforces.com/problemset/problem/1776/E',3,3),(8174,'Teamwork','https://codeforces.com/problemset/problem/1776/D',3,3),(8175,'Library game','https://codeforces.com/problemset/problem/1776/C',2,3),(8176,'Vittorio Plays with LEGO Bricks','https://codeforces.com/problemset/problem/1776/B',2,3),(8177,'Walking Boy','https://codeforces.com/problemset/problem/1776/A',1,3),(8178,'Laboratory on Pluto','https://codeforces.com/problemset/problem/1775/F',2,3),(8179,'The Human Equation','https://codeforces.com/problemset/problem/1775/E',2,3),(8180,'Friendly Spiders','https://codeforces.com/problemset/problem/1775/D',2,3),(8181,'Interesting Sequence','https://codeforces.com/problemset/problem/1775/C',2,3),(8182,'Gardener and the Array','https://codeforces.com/problemset/problem/1775/B',1,3),(8183,'Gardener and the Capybaras (hard version)','https://codeforces.com/problemset/problem/1775/A2',1,3),(8184,'Gardener and the Capybaras (easy version)','https://codeforces.com/problemset/problem/1775/A1',1,3),(8185,'Maximum Permutation','https://codeforces.com/problemset/problem/1774/H',3,3),(8186,'Segment Covering','https://codeforces.com/problemset/problem/1774/G',3,3),(8187,'Magician and Pigs (Hard Version)','https://codeforces.com/problemset/problem/1774/F2',3,3),(8188,'Magician and Pigs (Easy Version)','https://codeforces.com/problemset/problem/1774/F1',2,3),(8189,'Two Chess Pieces','https://codeforces.com/problemset/problem/1774/E',2,3),(8190,'Same Count One','https://codeforces.com/problemset/problem/1774/D',2,3),(8191,'Ice and Fire','https://codeforces.com/problemset/problem/1774/C',1,3),(8192,'Coloring','https://codeforces.com/problemset/problem/1774/B',1,3),(8193,'Add Plus Minus Sign','https://codeforces.com/problemset/problem/1774/A',1,3),(8194,'Lisa\'s Sequences','https://codeforces.com/problemset/problem/1773/L',3,3),(8195,'King\'s Puzzle','https://codeforces.com/problemset/problem/1773/K',2,3),(8196,'Jumbled Trees','https://codeforces.com/problemset/problem/1773/J',3,3),(8197,'Interactive Factorial Guessing','https://codeforces.com/problemset/problem/1773/I',2,3),(8198,'Hot and Cold','https://codeforces.com/problemset/problem/1773/H',3,3),(8199,'Game of Questions','https://codeforces.com/problemset/problem/1773/G',3,3),(8200,'Football','https://codeforces.com/problemset/problem/1773/F',1,3),(8201,'Easy Assembly','https://codeforces.com/problemset/problem/1773/E',1,3),(8202,'Dominoes','https://codeforces.com/problemset/problem/1773/D',3,3),(8203,'Cactus Meets Torus','https://codeforces.com/problemset/problem/1773/C',3,3),(8204,'BinCoin','https://codeforces.com/problemset/problem/1773/B',2,3),(8205,'Amazing Trick','https://codeforces.com/problemset/problem/1773/A',2,3),(8206,'Gaining Rating','https://codeforces.com/problemset/problem/1772/G',2,3),(8207,'Copy of a Copy of a Copy','https://codeforces.com/problemset/problem/1772/F',2,3),(8208,'Permutation Game','https://codeforces.com/problemset/problem/1772/E',2,3),(8209,'Absolute Sorting','https://codeforces.com/problemset/problem/1772/D',1,3),(8210,'Different Differences','https://codeforces.com/problemset/problem/1772/C',1,3),(8211,'Matrix Rotation','https://codeforces.com/problemset/problem/1772/B',1,3),(8212,'A+B?','https://codeforces.com/problemset/problem/1772/A',1,3),(8213,'Hossam and Range Minimum Query','https://codeforces.com/problemset/problem/1771/F',2,3),(8214,'Hossam and a Letter','https://codeforces.com/problemset/problem/1771/E',2,3),(8215,'Hossam and (sub-)palindromic tree','https://codeforces.com/problemset/problem/1771/D',2,3),(8216,'Hossam and Trainees','https://codeforces.com/problemset/problem/1771/C',2,3),(8217,'Hossam and Friends','https://codeforces.com/problemset/problem/1771/B',1,3),(8218,'Hossam and Combinatorics','https://codeforces.com/problemset/problem/1771/A',1,3),(8219,'Koxia, Mahiru and Winter Festival','https://codeforces.com/problemset/problem/1770/H',3,3),(8220,'Koxia and Bracket','https://codeforces.com/problemset/problem/1770/G',3,3),(8221,'Koxia and Sequence','https://codeforces.com/problemset/problem/1770/F',3,3),(8222,'Koxia and Tree','https://codeforces.com/problemset/problem/1770/E',2,3),(8223,'Koxia and Game','https://codeforces.com/problemset/problem/1770/D',2,3),(8224,'Koxia and Number Theory','https://codeforces.com/problemset/problem/1770/C',2,3),(8225,'Koxia and Permutation','https://codeforces.com/problemset/problem/1770/B',1,3),(8226,'Koxia and Whiteboards','https://codeforces.com/problemset/problem/1770/A',1,3),(8227,'Игра в Девятку III','https://codeforces.com/problemset/problem/1769/D3',2,3),(8228,'Игра в Девятку II','https://codeforces.com/problemset/problem/1769/D2',2,3),(8229,'Игра в Девятку I','https://codeforces.com/problemset/problem/1769/D1',2,3),(8230,'Подкрутка II','https://codeforces.com/problemset/problem/1769/C2',1,3),(8231,'Подкрутка I','https://codeforces.com/problemset/problem/1769/C1',1,3),(8232,'Копирование файлов II','https://codeforces.com/problemset/problem/1769/B2',1,3),(8233,'Копирование файлов I','https://codeforces.com/problemset/problem/1769/B1',1,3),(8234,'Узкая дорога','https://codeforces.com/problemset/problem/1769/A',1,3),(8235,'Wonderful Jump','https://codeforces.com/problemset/problem/1768/F',3,3),(8236,'Partial Sorting','https://codeforces.com/problemset/problem/1768/E',2,3),(8237,'Lucky Permutation','https://codeforces.com/problemset/problem/1768/D',2,3),(8238,'Elemental Decompress','https://codeforces.com/problemset/problem/1768/C',1,3),(8239,'Quick Sort','https://codeforces.com/problemset/problem/1768/B',1,3),(8240,'Greatest Convex','https://codeforces.com/problemset/problem/1768/A',1,3),(8241,'Two Subtrees','https://codeforces.com/problemset/problem/1767/F',3,3),(8242,'Algebra Flash','https://codeforces.com/problemset/problem/1767/E',2,3),(8243,'Playoff','https://codeforces.com/problemset/problem/1767/D',1,3),(8244,'Count Binary Strings','https://codeforces.com/problemset/problem/1767/C',2,3),(8245,'Block Towers','https://codeforces.com/problemset/problem/1767/B',1,3),(8246,'Cut the Triangle','https://codeforces.com/problemset/problem/1767/A',1,3),(8247,'MCF','https://codeforces.com/problemset/problem/1766/F',3,3),(8248,'Decomposition','https://codeforces.com/problemset/problem/1766/E',2,3),(8249,'Lucky Chains','https://codeforces.com/problemset/problem/1766/D',2,3),(8250,'Hamiltonian Wall','https://codeforces.com/problemset/problem/1766/C',1,3),(8251,'Notepad#','https://codeforces.com/problemset/problem/1766/B',1,3),(8252,'Extremely Round','https://codeforces.com/problemset/problem/1766/A',1,3),(8253,'Number Reduction','https://codeforces.com/problemset/problem/1765/N',1,3),(8254,'Minimum LCM','https://codeforces.com/problemset/problem/1765/M',1,3),(8255,'Project Manager','https://codeforces.com/problemset/problem/1765/L',2,3),(8256,'Torus Path','https://codeforces.com/problemset/problem/1765/K',1,3),(8257,'Hero to Zero','https://codeforces.com/problemset/problem/1765/J',3,3),(8258,'Infinite Chess','https://codeforces.com/problemset/problem/1765/I',3,3),(8259,'Hospital Queue','https://codeforces.com/problemset/problem/1765/H',2,3),(8260,'Guess the String','https://codeforces.com/problemset/problem/1765/G',3,3),(8261,'Chemistry Lab','https://codeforces.com/problemset/problem/1765/F',2,3),(8262,'Exchange','https://codeforces.com/problemset/problem/1765/E',1,3),(8263,'Watch the Videos','https://codeforces.com/problemset/problem/1765/D',2,3),(8264,'Card Guessing','https://codeforces.com/problemset/problem/1765/C',3,3),(8265,'Broken Keyboard','https://codeforces.com/problemset/problem/1765/B',1,3),(8266,'Access Levels','https://codeforces.com/problemset/problem/1765/A',2,3),(8267,'Doremy\'s Paint 2','https://codeforces.com/problemset/problem/1764/H',3,3),(8268,'Doremy\'s Perfect DS Class (Hard Version)','https://codeforces.com/problemset/problem/1764/G3',3,3),(8269,'Doremy\'s Perfect DS Class (Medium Version)','https://codeforces.com/problemset/problem/1764/G2',3,3),(8270,'Doremy\'s Perfect DS Class (Easy Version)','https://codeforces.com/problemset/problem/1764/G1',3,3),(8271,'Doremy\'s Experimental Tree','https://codeforces.com/problemset/problem/1764/F',2,3),(8272,'Doremy\'s Number Line','https://codeforces.com/problemset/problem/1764/E',2,3),(8273,'Doremy\'s Pegging Game','https://codeforces.com/problemset/problem/1764/D',2,3),(8274,'Doremy\'s City Construction','https://codeforces.com/problemset/problem/1764/C',1,3),(8275,'Doremy\'s Perfect Math Class','https://codeforces.com/problemset/problem/1764/B',1,3),(8276,'Doremy\'s Paint','https://codeforces.com/problemset/problem/1764/A',1,3),(8277,'Edge Queries','https://codeforces.com/problemset/problem/1763/F',3,3),(8278,'Node Pairs','https://codeforces.com/problemset/problem/1763/E',2,3),(8279,'Valid Bitonic Permutations','https://codeforces.com/problemset/problem/1763/D',2,3),(8280,'Another Array Problem','https://codeforces.com/problemset/problem/1763/C',2,3),(8281,'Incinerate','https://codeforces.com/problemset/problem/1763/B',1,3),(8282,'Absolute Maximization','https://codeforces.com/problemset/problem/1763/A',1,3),(8283,'Unequal Adjacent Elements','https://codeforces.com/problemset/problem/1762/G',3,3),(8284,'Good Pairs ','https://codeforces.com/problemset/problem/1762/F',3,3),(8285,'Tree Sum','https://codeforces.com/problemset/problem/1762/E',3,3),(8286,'GCD Queries ','https://codeforces.com/problemset/problem/1762/D',2,3),(8287,'Binary Strings are Fun','https://codeforces.com/problemset/problem/1762/C',1,3),(8288,'Make Array Good','https://codeforces.com/problemset/problem/1762/B',1,3),(8289,'Divide and Conquer','https://codeforces.com/problemset/problem/1762/A',1,3),(8290,'Centroid Guess','https://codeforces.com/problemset/problem/1761/G',3,3),(8291,'Anti-median (Hard Version)','https://codeforces.com/problemset/problem/1761/F2',3,3),(8292,'Anti-median (Easy Version)','https://codeforces.com/problemset/problem/1761/F1',3,3),(8293,'Make It Connected','https://codeforces.com/problemset/problem/1761/E',2,3),(8294,'Carry Bit','https://codeforces.com/problemset/problem/1761/D',2,3),(8295,'Set Construction','https://codeforces.com/problemset/problem/1761/C',1,3),(8296,'Elimination of a Ring','https://codeforces.com/problemset/problem/1761/B',1,3),(8297,'Two Permutations','https://codeforces.com/problemset/problem/1761/A',1,3),(8298,'SlavicG\'s Favorite Problem','https://codeforces.com/problemset/problem/1760/G',2,3),(8299,'Quests','https://codeforces.com/problemset/problem/1760/F',1,3),(8300,'Binary Inversions','https://codeforces.com/problemset/problem/1760/E',1,3),(8301,'Challenging Valleys','https://codeforces.com/problemset/problem/1760/D',1,3),(8302,'Advantage','https://codeforces.com/problemset/problem/1760/C',1,3),(8303,'Atilla\'s Favorite Problem','https://codeforces.com/problemset/problem/1760/B',1,3),(8304,'Medium Number','https://codeforces.com/problemset/problem/1760/A',1,3),(8305,'Restore the Permutation','https://codeforces.com/problemset/problem/1759/G',2,3),(8306,'All Possible Digits','https://codeforces.com/problemset/problem/1759/F',2,3),(8307,'The Humanoid','https://codeforces.com/problemset/problem/1759/E',1,3),(8308,'Make It Round','https://codeforces.com/problemset/problem/1759/D',1,3),(8309,'Thermostat','https://codeforces.com/problemset/problem/1759/C',1,3),(8310,'Lost Permutation','https://codeforces.com/problemset/problem/1759/B',1,3),(8311,'Yes-Yes?','https://codeforces.com/problemset/problem/1759/A',1,3),(8312,'Decent Division','https://codeforces.com/problemset/problem/1758/F',3,3),(8313,'Tick, Tock','https://codeforces.com/problemset/problem/1758/E',2,3),(8314,'Range = √Sum','https://codeforces.com/problemset/problem/1758/D',2,3),(8315,'Almost All Multiples','https://codeforces.com/problemset/problem/1758/C',1,3),(8316,'XOR = Average','https://codeforces.com/problemset/problem/1758/B',1,3),(8317,'SSeeeeiinngg DDoouubbllee','https://codeforces.com/problemset/problem/1758/A',1,3),(8318,'Kevin and Permutation','https://codeforces.com/problemset/problem/1754/B',1,3),(8319,'Technical Support','https://codeforces.com/problemset/problem/1754/A',1,3),(8320,'Minecraft Series','https://codeforces.com/problemset/problem/1753/F',3,3),(8321,'N Machines','https://codeforces.com/problemset/problem/1753/E',3,3),(8322,'The Beach','https://codeforces.com/problemset/problem/1753/D',2,3),(8323,'Wish I Knew How to Sort','https://codeforces.com/problemset/problem/1753/C',2,3),(8324,'Factorial Divisibility','https://codeforces.com/problemset/problem/1753/B',2,3),(8325,'Make Nonzero Sum (hard version)','https://codeforces.com/problemset/problem/1753/A2',1,3),(8326,'Make Nonzero Sum (easy version)','https://codeforces.com/problemset/problem/1753/A1',1,3),(8327,'BinaryStringForces','https://codeforces.com/problemset/problem/1750/H',3,3),(8328,'Doping','https://codeforces.com/problemset/problem/1750/G',3,3),(8329,'Majority','https://codeforces.com/problemset/problem/1750/F',3,3),(8330,'Bracket Cost','https://codeforces.com/problemset/problem/1750/E',2,3),(8331,'Count GCD','https://codeforces.com/problemset/problem/1750/D',2,3),(8332,'Complementary XOR','https://codeforces.com/problemset/problem/1750/C',1,3),(8333,'Maximum Substring','https://codeforces.com/problemset/problem/1750/B',1,3),(8334,'Indirect Sort','https://codeforces.com/problemset/problem/1750/A',1,3),(8335,'Distance to the Path','https://codeforces.com/problemset/problem/1749/F',3,3),(8336,'Cactus Wall','https://codeforces.com/problemset/problem/1749/E',2,3),(8337,'Counting Arrays','https://codeforces.com/problemset/problem/1749/D',2,3),(8338,'Number Game','https://codeforces.com/problemset/problem/1749/C',1,3),(8339,'Death\'s Blessing','https://codeforces.com/problemset/problem/1749/B',1,3),(8340,'Cowardly Rooks','https://codeforces.com/problemset/problem/1749/A',1,3),(8341,'Circular Xor Reversal','https://codeforces.com/problemset/problem/1748/F',3,3),(8342,'Yet Another Array Counting Problem','https://codeforces.com/problemset/problem/1748/E',2,3),(8343,'ConstructOR ','https://codeforces.com/problemset/problem/1748/D',2,3),(8344,'Zero-Sum Prefixes','https://codeforces.com/problemset/problem/1748/C',2,3),(8345,'Diverse Substrings','https://codeforces.com/problemset/problem/1748/B',1,3),(8346,'The Ultimate Square','https://codeforces.com/problemset/problem/1748/A',1,3),(8347,'List Generation','https://codeforces.com/problemset/problem/1747/E',3,3),(8348,'Yet Another Problem','https://codeforces.com/problemset/problem/1747/D',2,3),(8349,'Swap Game','https://codeforces.com/problemset/problem/1747/C',1,3),(8350,'BAN BAN','https://codeforces.com/problemset/problem/1747/B',1,3),(8351,'Two Groups','https://codeforces.com/problemset/problem/1747/A',1,3),(8352,'Olympiad Training','https://codeforces.com/problemset/problem/1746/G',3,3),(8353,'Kazaee','https://codeforces.com/problemset/problem/1746/F',3,3),(8354,'Joking (Hard Version)','https://codeforces.com/problemset/problem/1746/E2',3,3),(8355,'Joking (Easy Version)','https://codeforces.com/problemset/problem/1746/E1',2,3),(8356,'Paths on the Tree','https://codeforces.com/problemset/problem/1746/D',2,3),(8357,'Permutation Operations','https://codeforces.com/problemset/problem/1746/C',1,3),(8358,'Rebellion','https://codeforces.com/problemset/problem/1746/B',1,3),(8359,'Maxmina','https://codeforces.com/problemset/problem/1746/A',1,3),(8360,'MEX vs MED','https://codeforces.com/problemset/problem/1744/F',2,3),(8361,'Divisible Numbers (hard version)','https://codeforces.com/problemset/problem/1744/E2',2,3),(8362,'Divisible Numbers (easy version)','https://codeforces.com/problemset/problem/1744/E1',1,3),(8363,'Divisibility by 2^n','https://codeforces.com/problemset/problem/1744/D',1,3),(8364,'Traffic Light','https://codeforces.com/problemset/problem/1744/C',1,3),(8365,'Even-Odd Increments ','https://codeforces.com/problemset/problem/1744/B',1,3),(8366,'Number Replacement','https://codeforces.com/problemset/problem/1744/A',1,3),(8367,'Antifibonacci Cut','https://codeforces.com/problemset/problem/1743/G',3,3),(8368,'Intersection and Union','https://codeforces.com/problemset/problem/1743/F',2,3),(8369,'FTL','https://codeforces.com/problemset/problem/1743/E',2,3),(8370,'Problem with Random Tests','https://codeforces.com/problemset/problem/1743/D',2,3),(8371,'Save the Magazines','https://codeforces.com/problemset/problem/1743/C',1,3),(8372,'Permutation Value','https://codeforces.com/problemset/problem/1743/B',1,3),(8373,'Password','https://codeforces.com/problemset/problem/1743/A',1,3),(8374,'Orray','https://codeforces.com/problemset/problem/1742/G',1,3),(8375,'Smaller','https://codeforces.com/problemset/problem/1742/F',1,3),(8376,'Scuza','https://codeforces.com/problemset/problem/1742/E',1,3),(8377,'Coprime','https://codeforces.com/problemset/problem/1742/D',1,3),(8378,'Stripes','https://codeforces.com/problemset/problem/1742/C',1,3),(8379,'Increasing','https://codeforces.com/problemset/problem/1742/B',1,3),(8380,'Sum','https://codeforces.com/problemset/problem/1742/A',1,3),(8381,'Kirill and Company','https://codeforces.com/problemset/problem/1741/G',2,3),(8382,'Multi-Colored Segments','https://codeforces.com/problemset/problem/1741/F',2,3),(8383,'Sending a Sequence Over the Network','https://codeforces.com/problemset/problem/1741/E',2,3),(8384,'Masha and a Beautiful Tree','https://codeforces.com/problemset/problem/1741/D',1,3),(8385,'Minimize the Thickness','https://codeforces.com/problemset/problem/1741/C',1,3),(8386,'Funny Permutation','https://codeforces.com/problemset/problem/1741/B',1,3),(8387,'Compare T-Shirt Sizes','https://codeforces.com/problemset/problem/1741/A',1,3),(8388,'Arranging Crystal Balls','https://codeforces.com/problemset/problem/1740/I',3,3),(8389,'MEX Tree Manipulation','https://codeforces.com/problemset/problem/1740/H',3,3),(8390,'Dangerous Laser Power','https://codeforces.com/problemset/problem/1740/G',3,3),(8391,'Conditional Mix','https://codeforces.com/problemset/problem/1740/F',3,3),(8392,'Hanging Hearts','https://codeforces.com/problemset/problem/1740/E',2,3),(8393,'Knowledge Cards','https://codeforces.com/problemset/problem/1740/D',1,3),(8394,'Bricks and Bags','https://codeforces.com/problemset/problem/1740/C',1,3),(8395,'Jumbo Extra Cheese 2','https://codeforces.com/problemset/problem/1740/B',1,3),(8396,'Factorise N+M','https://codeforces.com/problemset/problem/1740/A',1,3),(8397,'Keyboard Design','https://codeforces.com/problemset/problem/1739/F',3,3),(8398,'Cleaning Robot','https://codeforces.com/problemset/problem/1739/E',2,3),(8399,'Reset K Edges','https://codeforces.com/problemset/problem/1739/D',2,3),(8400,'Card Game','https://codeforces.com/problemset/problem/1739/C',1,3),(8401,'Array Recovery','https://codeforces.com/problemset/problem/1739/B',1,3),(8402,'Immobile Knight','https://codeforces.com/problemset/problem/1739/A',1,3),(8403,'Palindrome Addicts','https://codeforces.com/problemset/problem/1738/H',3,3),(8404,'Anti-Increasing Addicts','https://codeforces.com/problemset/problem/1738/G',3,3),(8405,'Connectivity Addicts','https://codeforces.com/problemset/problem/1738/F',2,3),(8406,'Balance Addicts','https://codeforces.com/problemset/problem/1738/E',2,3),(8407,'Permutation Addicts','https://codeforces.com/problemset/problem/1738/D',2,3),(8408,'Even Number Addicts','https://codeforces.com/problemset/problem/1738/C',1,3),(8409,'Prefix Sum Addicts','https://codeforces.com/problemset/problem/1738/B',1,3),(8410,'Glory Addicts','https://codeforces.com/problemset/problem/1738/A',1,3),(8411,'Ela Takes Dancing Class','https://codeforces.com/problemset/problem/1737/G',3,3),(8412,'Ela and Prime GCD','https://codeforces.com/problemset/problem/1737/F',3,3),(8413,'Ela Goes Hiking','https://codeforces.com/problemset/problem/1737/E',2,3),(8414,'Ela and the Wiring Wizard','https://codeforces.com/problemset/problem/1737/D',2,3),(8415,'Ela and Crickets','https://codeforces.com/problemset/problem/1737/C',1,3),(8416,'Ela\'s Fitness and the Luxury Number','https://codeforces.com/problemset/problem/1737/B',1,3),(8417,'Ela Sorting Books','https://codeforces.com/problemset/problem/1737/A',1,3),(8418,'Swap and Take','https://codeforces.com/problemset/problem/1736/E',3,3),(8419,'Equal Binary Subsequences','https://codeforces.com/problemset/problem/1736/D',2,3),(8420,'Good Subarrays (Hard Version)','https://codeforces.com/problemset/problem/1736/C2',2,3),(8421,'Good Subarrays (Easy Version)','https://codeforces.com/problemset/problem/1736/C1',1,3),(8422,'Playing with GCD','https://codeforces.com/problemset/problem/1736/B',1,3),(8423,'Make A Equal to B','https://codeforces.com/problemset/problem/1736/A',1,3),(8424,'Pebbles and Beads','https://codeforces.com/problemset/problem/1735/F',3,3),(8425,'House Planning','https://codeforces.com/problemset/problem/1735/E',2,3),(8426,'Meta-set','https://codeforces.com/problemset/problem/1735/D',2,3),(8427,'Phase Shift','https://codeforces.com/problemset/problem/1735/C',1,3),(8428,'Tea with Tangerines','https://codeforces.com/problemset/problem/1735/B',1,3),(8429,'Working Week','https://codeforces.com/problemset/problem/1735/A',1,3),(8430,'Zeros and Ones','https://codeforces.com/problemset/problem/1734/F',2,3),(8431,'Rectangular Congruence','https://codeforces.com/problemset/problem/1734/E',2,3),(8432,'Slime Escape','https://codeforces.com/problemset/problem/1734/D',2,3),(8433,'Removing Smallest Multiples','https://codeforces.com/problemset/problem/1734/C',1,3),(8434,'Bright, Nice, Brilliant','https://codeforces.com/problemset/problem/1734/B',1,3),(8435,'Select Three Sticks','https://codeforces.com/problemset/problem/1734/A',1,3),(8436,'Conveyor','https://codeforces.com/problemset/problem/1733/E',3,3),(8437,'Zero-One (Hard Version)','https://codeforces.com/problemset/problem/1733/D2',2,3),(8438,'Zero-One (Easy Version)','https://codeforces.com/problemset/problem/1733/D1',1,3),(8439,'Parity Shuffle Sorting','https://codeforces.com/problemset/problem/1733/C',1,3),(8440,'Rule of League','https://codeforces.com/problemset/problem/1733/B',1,3),(8441,'Consecutive Sum','https://codeforces.com/problemset/problem/1733/A',1,3),(8442,'Location','https://codeforces.com/problemset/problem/1732/E',3,3),(8443,'Balance (Hard version)','https://codeforces.com/problemset/problem/1732/D2',2,3),(8444,'Balance (Easy version)','https://codeforces.com/problemset/problem/1732/D1',1,3),(8445,'Sheikh (Hard Version)','https://codeforces.com/problemset/problem/1732/C2',2,3),(8446,'Sheikh (Easy version)','https://codeforces.com/problemset/problem/1732/C1',2,3),(8447,'Ugu','https://codeforces.com/problemset/problem/1732/B',1,3),(8448,'Bestie','https://codeforces.com/problemset/problem/1732/A',1,3),(8449,'Function Sum','https://codeforces.com/problemset/problem/1731/F',2,3),(8450,'Graph Cost','https://codeforces.com/problemset/problem/1731/E',2,3),(8451,'Valiant\'s New Map','https://codeforces.com/problemset/problem/1731/D',2,3),(8452,'Even Subarrays','https://codeforces.com/problemset/problem/1731/C',2,3),(8453,'Kill Demodogs','https://codeforces.com/problemset/problem/1731/B',1,3),(8454,'Joey Takes Money','https://codeforces.com/problemset/problem/1731/A',1,3),(8455,'Almost Sorted','https://codeforces.com/problemset/problem/1730/F',3,3),(8456,'Maximums and Minimums','https://codeforces.com/problemset/problem/1730/E',3,3),(8457,'Prefixes and Suffixes','https://codeforces.com/problemset/problem/1730/D',2,3),(8458,'Minimum Notation','https://codeforces.com/problemset/problem/1730/C',1,3),(8459,'Meeting on the Line','https://codeforces.com/problemset/problem/1730/B',2,3),(8460,'Planets','https://codeforces.com/problemset/problem/1730/A',1,3),(8461,'Cut Substrings','https://codeforces.com/problemset/problem/1729/G',2,3),(8462,'Kirei and the Linear Function','https://codeforces.com/problemset/problem/1729/F',2,3),(8463,'Guess the Cycle Size','https://codeforces.com/problemset/problem/1729/E',2,3),(8464,'Friends and the Restaurant','https://codeforces.com/problemset/problem/1729/D',1,3),(8465,'Jumping on Tiles','https://codeforces.com/problemset/problem/1729/C',1,3),(8466,'Decode String','https://codeforces.com/problemset/problem/1729/B',1,3),(8467,'Two Elevators','https://codeforces.com/problemset/problem/1729/A',1,3),(8468,'Illumination','https://codeforces.com/problemset/problem/1728/G',3,3),(8469,'Fishermen','https://codeforces.com/problemset/problem/1728/F',3,3),(8470,'Red-Black Pepper','https://codeforces.com/problemset/problem/1728/E',2,3),(8471,'Letter Picking','https://codeforces.com/problemset/problem/1728/D',2,3),(8472,'Digital Logarithm','https://codeforces.com/problemset/problem/1728/C',1,3),(8473,'Best Permutation','https://codeforces.com/problemset/problem/1728/B',1,3),(8474,'Colored Balls: Revisited','https://codeforces.com/problemset/problem/1728/A',1,3),(8475,'Mainak and the Bleeding Polygon','https://codeforces.com/problemset/problem/1726/H',3,3),(8476,'A Certain Magical Party','https://codeforces.com/problemset/problem/1726/G',3,3),(8477,'Late For Work (submissions are not allowed)','https://codeforces.com/problemset/problem/1726/F',3,3),(8478,'Almost Perfect','https://codeforces.com/problemset/problem/1726/E',2,3),(8479,'Edge Split','https://codeforces.com/problemset/problem/1726/D',2,3),(8480,'Jatayu\'s Balanced Bracket Sequence','https://codeforces.com/problemset/problem/1726/C',1,3),(8481,'Mainak and Interesting Sequence','https://codeforces.com/problemset/problem/1726/B',1,3),(8482,'Mainak and Array','https://codeforces.com/problemset/problem/1726/A',1,3),(8483,'Moving Both Hands','https://codeforces.com/problemset/problem/1725/M',2,3),(8484,'Lemper Cooking Competition','https://codeforces.com/problemset/problem/1725/L',2,3),(8485,'Kingdom of Criticism','https://codeforces.com/problemset/problem/1725/K',2,3),(8486,'Journey','https://codeforces.com/problemset/problem/1725/J',2,3),(8487,'Imitating the Key Tree','https://codeforces.com/problemset/problem/1725/I',3,3),(8488,'Hot Black Hot White','https://codeforces.com/problemset/problem/1725/H',2,3),(8489,'Garage','https://codeforces.com/problemset/problem/1725/G',1,3),(8490,'Field Photography','https://codeforces.com/problemset/problem/1725/F',2,3),(8491,'Electrical Efficiency','https://codeforces.com/problemset/problem/1725/E',2,3),(8492,'Deducing Sortability','https://codeforces.com/problemset/problem/1725/D',3,3),(8493,'Circular Mirror','https://codeforces.com/problemset/problem/1725/C',2,3),(8494,'Basketball Together','https://codeforces.com/problemset/problem/1725/B',1,3),(8495,'Accumulation of Dominoes','https://codeforces.com/problemset/problem/1725/A',1,3),(8496,'Even-Odd XOR','https://codeforces.com/problemset/problem/1722/G',1,3),(8497,'L-shapes','https://codeforces.com/problemset/problem/1722/F',2,3),(8498,'Counting Rectangles','https://codeforces.com/problemset/problem/1722/E',2,3),(8499,'Line','https://codeforces.com/problemset/problem/1722/D',1,3),(8500,'Word Game','https://codeforces.com/problemset/problem/1722/C',1,3),(8501,'Colourblindness','https://codeforces.com/problemset/problem/1722/B',1,3),(8502,'Spell Check','https://codeforces.com/problemset/problem/1722/A',1,3),(8503,'Matching Reduction','https://codeforces.com/problemset/problem/1721/F',3,3),(8504,'Prefix Function Queries','https://codeforces.com/problemset/problem/1721/E',2,3),(8505,'Maximum AND','https://codeforces.com/problemset/problem/1721/D',2,3),(8506,'Min-Max Array Transformation','https://codeforces.com/problemset/problem/1721/C',1,3),(8507,'Deadly Laser','https://codeforces.com/problemset/problem/1721/B',1,3),(8508,'Image','https://codeforces.com/problemset/problem/1721/A',1,3),(8509,'Misha and Paintings','https://codeforces.com/problemset/problem/1720/E',3,3),(8510,'Xor-Subsequence (hard version)','https://codeforces.com/problemset/problem/1720/D2',2,3),(8511,'Xor-Subsequence (easy version)','https://codeforces.com/problemset/problem/1720/D1',2,3),(8512,'Corners','https://codeforces.com/problemset/problem/1720/C',1,3),(8513,'Interesting Sum','https://codeforces.com/problemset/problem/1720/B',1,3),(8514,'Burenka Plays with Fractions','https://codeforces.com/problemset/problem/1720/A',1,3),(8515,'Fighting Tournament','https://codeforces.com/problemset/problem/1719/C',1,3),(8516,'Mathematical Circus','https://codeforces.com/problemset/problem/1719/B',1,3),(8517,'Chip Game','https://codeforces.com/problemset/problem/1719/A',1,3),(8518,'Burenka, an Array and Queries','https://codeforces.com/problemset/problem/1718/F',3,3),(8519,'Impressionism','https://codeforces.com/problemset/problem/1718/E',3,3),(8520,'Permutation for Burenka','https://codeforces.com/problemset/problem/1718/D',3,3),(8521,'Tonya and Burenka-179','https://codeforces.com/problemset/problem/1718/C',2,3),(8522,'Fibonacci Strings','https://codeforces.com/problemset/problem/1718/B',2,3),(8523,'Burenka and Traditions (hard version)','https://codeforces.com/problemset/problem/1718/A2',2,3),(8524,'Burenka and Traditions (easy version)','https://codeforces.com/problemset/problem/1718/A1',2,3),(8525,'Madoka and The First Session','https://codeforces.com/problemset/problem/1717/F',2,3),(8526,'Madoka and The Best University','https://codeforces.com/problemset/problem/1717/E',2,3),(8527,'Madoka and The Corruption Scheme','https://codeforces.com/problemset/problem/1717/D',2,3),(8528,'Madoka and Formal Statement','https://codeforces.com/problemset/problem/1717/C',1,3),(8529,'Madoka and Underground Competitions','https://codeforces.com/problemset/problem/1717/B',1,3),(8530,'Madoka and Strange Thoughts','https://codeforces.com/problemset/problem/1717/A',1,3),(8531,'Bags with Balls','https://codeforces.com/problemset/problem/1716/F',2,3),(8532,'Swap and Maximum Block','https://codeforces.com/problemset/problem/1716/E',2,3),(8533,'Chip Move','https://codeforces.com/problemset/problem/1716/D',2,3),(8534,'Robot in a Hallway','https://codeforces.com/problemset/problem/1716/C',2,3),(8535,'Permutation Chain','https://codeforces.com/problemset/problem/1716/B',1,3),(8536,'2-3 Moves','https://codeforces.com/problemset/problem/1716/A',1,3),(8537,'Crop Squares','https://codeforces.com/problemset/problem/1715/F',3,3),(8538,'Long Way Home','https://codeforces.com/problemset/problem/1715/E',2,3),(8539,'2+ doors','https://codeforces.com/problemset/problem/1715/D',2,3),(8540,'Monoblock','https://codeforces.com/problemset/problem/1715/C',2,3),(8541,'Beautiful Array','https://codeforces.com/problemset/problem/1715/B',1,3),(8542,'Crossmarket','https://codeforces.com/problemset/problem/1715/A',1,3),(8543,'Path Prefixes','https://codeforces.com/problemset/problem/1714/G',2,3),(8544,'Build a Tree and That Is It','https://codeforces.com/problemset/problem/1714/F',2,3),(8545,'Add Modulo 10','https://codeforces.com/problemset/problem/1714/E',1,3),(8546,'Color with Occurrences','https://codeforces.com/problemset/problem/1714/D',2,3),(8547,'Minimum  Varied Number','https://codeforces.com/problemset/problem/1714/C',1,3),(8548,'Remove Prefix','https://codeforces.com/problemset/problem/1714/B',1,3),(8549,'Everyone Loves to Sleep','https://codeforces.com/problemset/problem/1714/A',1,3),(8550,'Lost Array','https://codeforces.com/problemset/problem/1713/F',3,3),(8551,'Cross Swapping','https://codeforces.com/problemset/problem/1713/E',2,3),(8552,'Tournament Countdown','https://codeforces.com/problemset/problem/1713/D',2,3),(8553,'Build Permutation','https://codeforces.com/problemset/problem/1713/C',1,3),(8554,'Optimal Reduction','https://codeforces.com/problemset/problem/1713/B',1,3),(8555,'Traveling Salesman Problem','https://codeforces.com/problemset/problem/1713/A',1,3),(8556,'Triameter','https://codeforces.com/problemset/problem/1712/F',3,3),(8557,'LCM Sum (hard version)','https://codeforces.com/problemset/problem/1712/E2',2,3),(8558,'LCM Sum (easy version)','https://codeforces.com/problemset/problem/1712/E1',2,3),(8559,'Empty Graph','https://codeforces.com/problemset/problem/1712/D',2,3),(8560,'Sort Zero','https://codeforces.com/problemset/problem/1712/C',1,3),(8561,'Woeful Permutation','https://codeforces.com/problemset/problem/1712/B',1,3),(8562,'Wonderful Permutation','https://codeforces.com/problemset/problem/1712/A',1,3),(8563,'Party','https://codeforces.com/problemset/problem/1711/B',1,3),(8564,'Perfect Permutation','https://codeforces.com/problemset/problem/1711/A',1,3),(8565,'Two Arrays','https://codeforces.com/problemset/problem/1710/E',2,3),(8566,'Recover the Tree','https://codeforces.com/problemset/problem/1710/D',3,3),(8567,'XOR Triangle','https://codeforces.com/problemset/problem/1710/C',2,3),(8568,'Rain','https://codeforces.com/problemset/problem/1710/B',2,3),(8569,'Color the Picture','https://codeforces.com/problemset/problem/1710/A',1,3),(8570,'Multiset of Strings','https://codeforces.com/problemset/problem/1709/F',2,3),(8571,'XOR Tree','https://codeforces.com/problemset/problem/1709/E',2,3),(8572,'Rorororobot','https://codeforces.com/problemset/problem/1709/D',2,3),(8573,'Recover an RBS','https://codeforces.com/problemset/problem/1709/C',2,3),(8574,'Also Try Minecraft','https://codeforces.com/problemset/problem/1709/B',1,3),(8575,'Three Doors','https://codeforces.com/problemset/problem/1709/A',1,3),(8576,'Difference of GCDs','https://codeforces.com/problemset/problem/1708/B',1,3),(8577,'Difference Operations','https://codeforces.com/problemset/problem/1708/A',1,3),(8578,'Bugaboo','https://codeforces.com/problemset/problem/1707/F',3,3),(8579,'Replace','https://codeforces.com/problemset/problem/1707/E',3,3),(8580,'Partial Virtual Trees','https://codeforces.com/problemset/problem/1707/D',3,3),(8581,'DFS Trees','https://codeforces.com/problemset/problem/1707/C',2,3),(8582,'Difference Array','https://codeforces.com/problemset/problem/1707/B',2,3),(8583,'Doremy\'s IQ','https://codeforces.com/problemset/problem/1707/A',2,3),(8584,'Qpwoeirut and Vertices','https://codeforces.com/problemset/problem/1706/E',2,3),(8585,'Chopping Carrots (Hard Version)','https://codeforces.com/problemset/problem/1706/D2',2,3),(8586,'Chopping Carrots (Easy Version)','https://codeforces.com/problemset/problem/1706/D1',2,3),(8587,'Qpwoeirut And The City','https://codeforces.com/problemset/problem/1706/C',1,3),(8588,'Making Towers','https://codeforces.com/problemset/problem/1706/B',1,3),(8589,'Another String Minimization Problem','https://codeforces.com/problemset/problem/1706/A',1,3),(8590,'Mark and the Online Exam','https://codeforces.com/problemset/problem/1705/F',3,3),(8591,'Mark and Professor Koro','https://codeforces.com/problemset/problem/1705/E',2,3),(8592,'Mark and Lightbulbs','https://codeforces.com/problemset/problem/1705/D',2,3),(8593,'Mark and His Unfinished Essay','https://codeforces.com/problemset/problem/1705/C',1,3),(8594,'Mark the Dust Sweeper','https://codeforces.com/problemset/problem/1705/B',1,3),(8595,'Mark the Photographer','https://codeforces.com/problemset/problem/1705/A',1,3),(8596,'Game of AI (hard version)','https://codeforces.com/problemset/problem/1704/H2',3,3),(8597,'Game of AI (easy version)','https://codeforces.com/problemset/problem/1704/H1',3,3),(8598,'Mio and Lucky Array','https://codeforces.com/problemset/problem/1704/G',3,3),(8599,'Colouring Game','https://codeforces.com/problemset/problem/1704/F',3,3),(8600,'Count Seconds','https://codeforces.com/problemset/problem/1704/E',2,3),(8601,'Magical Array','https://codeforces.com/problemset/problem/1704/D',2,3),(8602,'Virus','https://codeforces.com/problemset/problem/1704/C',1,3),(8603,'Luke is a Foodie','https://codeforces.com/problemset/problem/1704/B',1,3),(8604,'Two 0-1 Sequences','https://codeforces.com/problemset/problem/1704/A',1,3),(8605,'Good Key, Bad Key','https://codeforces.com/problemset/problem/1703/G',2,3),(8606,'Yet Another Problem About Pairs Satisfying an Inequality','https://codeforces.com/problemset/problem/1703/F',1,3),(8607,'Mirror Grid','https://codeforces.com/problemset/problem/1703/E',1,3),(8608,'Double Strings','https://codeforces.com/problemset/problem/1703/D',1,3),(8609,'Cypher','https://codeforces.com/problemset/problem/1703/C',1,3),(8610,'ICPC Balloons','https://codeforces.com/problemset/problem/1703/B',1,3),(8611,'YES or YES?','https://codeforces.com/problemset/problem/1703/A',1,3),(8612,'Passable Paths (hard version)','https://codeforces.com/problemset/problem/1702/G2',2,3),(8613,'Passable Paths (easy version)','https://codeforces.com/problemset/problem/1702/G1',2,3),(8614,'Equate Multisets','https://codeforces.com/problemset/problem/1702/F',2,3),(8615,'Split Into Two Sets','https://codeforces.com/problemset/problem/1702/E',2,3),(8616,'Not a Cheap String','https://codeforces.com/problemset/problem/1702/D',1,3),(8617,'Train and Queries','https://codeforces.com/problemset/problem/1702/C',1,3),(8618,'Polycarp Writes a String from Memory','https://codeforces.com/problemset/problem/1702/B',1,3),(8619,'Round Down the Price','https://codeforces.com/problemset/problem/1702/A',1,3),(8620,'Points','https://codeforces.com/problemset/problem/1701/F',2,3),(8621,'Text Editor','https://codeforces.com/problemset/problem/1701/E',2,3),(8622,'Permutation Restoration','https://codeforces.com/problemset/problem/1701/D',2,3),(8623,'Schedule Management','https://codeforces.com/problemset/problem/1701/C',1,3),(8624,'Permutation','https://codeforces.com/problemset/problem/1701/B',1,3),(8625,'Grass Field','https://codeforces.com/problemset/problem/1701/A',1,3),(8626,'Puzzle','https://codeforces.com/problemset/problem/1700/F',3,3),(8627,'Serega the Pirate','https://codeforces.com/problemset/problem/1700/E',3,3),(8628,'River Locks','https://codeforces.com/problemset/problem/1700/D',2,3),(8629,'Helping the Nature','https://codeforces.com/problemset/problem/1700/C',2,3),(8630,'Palindromic Numbers ','https://codeforces.com/problemset/problem/1700/B',1,3),(8631,'Optimal Path','https://codeforces.com/problemset/problem/1700/A',1,3),(8632,'Three Days Grace','https://codeforces.com/problemset/problem/1699/E',3,3),(8633,'Almost Triple Deletions','https://codeforces.com/problemset/problem/1699/D',2,3),(8634,'The Third Problem','https://codeforces.com/problemset/problem/1699/C',2,3),(8635,'Almost Ternary Matrix','https://codeforces.com/problemset/problem/1699/B',1,3),(8636,'The Third Three Number Problem','https://codeforces.com/problemset/problem/1699/A',1,3),(8637,'Long Binary String','https://codeforces.com/problemset/problem/1698/G',3,3),(8638,'Equal Reversal','https://codeforces.com/problemset/problem/1698/F',3,3),(8639,'PermutationForces II','https://codeforces.com/problemset/problem/1698/E',2,3),(8640,'Fixed Point Guessing','https://codeforces.com/problemset/problem/1698/D',2,3),(8641,'3SUM Closure','https://codeforces.com/problemset/problem/1698/C',1,3),(8642,'Rising Sand','https://codeforces.com/problemset/problem/1698/B',1,3),(8643,'XOR Mixup','https://codeforces.com/problemset/problem/1698/A',1,3),(8644,'Too Many Constraints','https://codeforces.com/problemset/problem/1697/F',3,3),(8645,'Coloring','https://codeforces.com/problemset/problem/1697/E',2,3),(8646,'Guess The String','https://codeforces.com/problemset/problem/1697/D',2,3),(8647,'awoo\'s Favorite Problem','https://codeforces.com/problemset/problem/1697/C',1,3),(8648,'Promo','https://codeforces.com/problemset/problem/1697/B',1,3),(8649,'Parkway Walk','https://codeforces.com/problemset/problem/1697/A',1,3),(8650,'Maximum Product?','https://codeforces.com/problemset/problem/1696/H',3,3),(8651,'Fishingprince Plays With Array Again','https://codeforces.com/problemset/problem/1696/G',3,3),(8652,'Tree Recovery','https://codeforces.com/problemset/problem/1696/F',3,3),(8653,'Placing Jinas','https://codeforces.com/problemset/problem/1696/E',2,3),(8654,'Permutation Graph','https://codeforces.com/problemset/problem/1696/D',2,3),(8655,'Fishingprince Plays With Array','https://codeforces.com/problemset/problem/1696/C',1,3),(8656,'NIT Destroys the Universe','https://codeforces.com/problemset/problem/1696/B',1,3),(8657,'NIT orz!','https://codeforces.com/problemset/problem/1696/A',1,3),(8658,'Ambiguous Dominoes','https://codeforces.com/problemset/problem/1695/E',3,3),(8659,'Tree Queries (Hard Version)','https://codeforces.com/problemset/problem/1695/D2',2,3),(8660,'Tree Queries (Easy Version)','https://codeforces.com/problemset/problem/1695/D1',2,3),(8661,'Zero Path','https://codeforces.com/problemset/problem/1695/C',2,3),(8662,'Circle Game','https://codeforces.com/problemset/problem/1695/B',1,3),(8663,'Subrectangle Guess','https://codeforces.com/problemset/problem/1695/A',1,3),(8664,'Paranoid String','https://codeforces.com/problemset/problem/1694/B',1,3),(8665,'Creep','https://codeforces.com/problemset/problem/1694/A',1,3),(8666,'I Might Be Wrong','https://codeforces.com/problemset/problem/1693/F',3,3),(8667,'Outermost Maximums','https://codeforces.com/problemset/problem/1693/E',3,3),(8668,'Decinc Dividing','https://codeforces.com/problemset/problem/1693/D',3,3),(8669,'Keshi in Search of AmShZ','https://codeforces.com/problemset/problem/1693/C',2,3),(8670,'Fake Plastic Trees','https://codeforces.com/problemset/problem/1693/B',2,3),(8671,'Directional Increase','https://codeforces.com/problemset/problem/1693/A',1,3),(8672,'Gambling','https://codeforces.com/problemset/problem/1692/H',2,3),(8673,'2^Sort','https://codeforces.com/problemset/problem/1692/G',1,3),(8674,'3SUM','https://codeforces.com/problemset/problem/1692/F',1,3),(8675,'Binary Deque','https://codeforces.com/problemset/problem/1692/E',1,3),(8676,'The Clock','https://codeforces.com/problemset/problem/1692/D',1,3),(8677,'Where\'s the Bishop?','https://codeforces.com/problemset/problem/1692/C',1,3),(8678,'All Distinct','https://codeforces.com/problemset/problem/1692/B',1,3),(8679,'Marathon','https://codeforces.com/problemset/problem/1692/A',1,3),(8680,'K-Set Tree','https://codeforces.com/problemset/problem/1691/F',2,3),(8681,'Number of Groups','https://codeforces.com/problemset/problem/1691/E',2,3),(8682,'Max GEQ Sum','https://codeforces.com/problemset/problem/1691/D',2,3),(8683,'Sum of Substrings','https://codeforces.com/problemset/problem/1691/C',1,3),(8684,'Shoe Shuffling','https://codeforces.com/problemset/problem/1691/B',1,3),(8685,'Beat The Odds','https://codeforces.com/problemset/problem/1691/A',1,3),(8686,'Count the Trains','https://codeforces.com/problemset/problem/1690/G',2,3),(8687,'Shifting String','https://codeforces.com/problemset/problem/1690/F',2,3),(8688,'Price Maximization','https://codeforces.com/problemset/problem/1690/E',1,3),(8689,'Black and White Stripe','https://codeforces.com/problemset/problem/1690/D',1,3),(8690,'Restoring the Duration of Tasks','https://codeforces.com/problemset/problem/1690/C',1,3),(8691,'Array Decrements','https://codeforces.com/problemset/problem/1690/B',1,3),(8692,'Print a Pedestal (Codeforces logo?)','https://codeforces.com/problemset/problem/1690/A',1,3),(8693,'ANDfinity','https://codeforces.com/problemset/problem/1689/E',2,3),(8694,'Lena and Matrix','https://codeforces.com/problemset/problem/1689/D',2,3),(8695,'Infected Tree','https://codeforces.com/problemset/problem/1689/C',2,3),(8696,'Mystic Permutation','https://codeforces.com/problemset/problem/1689/B',1,3),(8697,'Lex String','https://codeforces.com/problemset/problem/1689/A',1,3),(8698,'Manipulating History','https://codeforces.com/problemset/problem/1688/C',2,3),(8699,'Patchouli\'s Magical Talisman','https://codeforces.com/problemset/problem/1688/B',1,3),(8700,'Cirno\'s Perfect Bitmasks Classroom','https://codeforces.com/problemset/problem/1688/A',1,3),(8701,'Koishi\'s Unconscious Permutation','https://codeforces.com/problemset/problem/1687/F',3,3),(8702,'Become Big For Me','https://codeforces.com/problemset/problem/1687/E',3,3),(8703,'Cute number','https://codeforces.com/problemset/problem/1687/D',3,3),(8704,'Sanae and Giant Robot','https://codeforces.com/problemset/problem/1687/C',2,3),(8705,'Railway System','https://codeforces.com/problemset/problem/1687/B',2,3),(8706,'The Enchanted Forest','https://codeforces.com/problemset/problem/1687/A',2,3),(8707,'Odd Subarrays','https://codeforces.com/problemset/problem/1686/B',1,3),(8708,'Everything Everywhere All But One','https://codeforces.com/problemset/problem/1686/A',1,3),(8709,'The Ultimate LIS Problem','https://codeforces.com/problemset/problem/1685/E',3,3),(8710,'Permutation Weight (Hard Version)','https://codeforces.com/problemset/problem/1685/D2',3,3),(8711,'Permutation Weight (Easy Version)','https://codeforces.com/problemset/problem/1685/D1',3,3),(8712,'Bring Balance','https://codeforces.com/problemset/problem/1685/C',3,3),(8713,'Linguistics','https://codeforces.com/problemset/problem/1685/B',2,3),(8714,'Circular Local MiniMax','https://codeforces.com/problemset/problem/1685/A',1,3),(8715,'Hard Cut','https://codeforces.com/problemset/problem/1684/H',3,3),(8716,'Euclid Guess','https://codeforces.com/problemset/problem/1684/G',3,3),(8717,'Diverse Segments','https://codeforces.com/problemset/problem/1684/F',3,3),(8718,'MEX vs DIFF','https://codeforces.com/problemset/problem/1684/E',2,3),(8719,'Traps','https://codeforces.com/problemset/problem/1684/D',2,3),(8720,'Column Swapping','https://codeforces.com/problemset/problem/1684/C',1,3),(8721,'Z mod X = C','https://codeforces.com/problemset/problem/1684/B',1,3),(8722,'Digit Minimization','https://codeforces.com/problemset/problem/1684/A',1,3),(8723,'MCMF?','https://codeforces.com/problemset/problem/1682/F',3,3),(8724,'Unordered Swaps','https://codeforces.com/problemset/problem/1682/E',3,3),(8725,'Circular Spanning Tree','https://codeforces.com/problemset/problem/1682/D',2,3),(8726,'LIS or Reverse LIS?','https://codeforces.com/problemset/problem/1682/C',1,3),(8727,'AND Sorting','https://codeforces.com/problemset/problem/1682/B',1,3),(8728,'Palindromic Indices','https://codeforces.com/problemset/problem/1682/A',1,3),(8729,'Unique Occurrences','https://codeforces.com/problemset/problem/1681/F',2,3),(8730,'Labyrinth Adventures','https://codeforces.com/problemset/problem/1681/E',3,3),(8731,'Required Length','https://codeforces.com/problemset/problem/1681/D',2,3),(8732,'Double Sort','https://codeforces.com/problemset/problem/1681/C',1,3),(8733,'Card Trick','https://codeforces.com/problemset/problem/1681/B',1,3),(8734,'Game with Cards','https://codeforces.com/problemset/problem/1681/A',1,3),(8735,'Lenient Vertex Cover','https://codeforces.com/problemset/problem/1680/F',3,3),(8736,'Moving Chips','https://codeforces.com/problemset/problem/1680/E',2,3),(8737,'Dog Walking','https://codeforces.com/problemset/problem/1680/D',2,3),(8738,'Binary String','https://codeforces.com/problemset/problem/1680/C',2,3),(8739,'Robots','https://codeforces.com/problemset/problem/1680/B',1,3),(8740,'Minimums and Maximums','https://codeforces.com/problemset/problem/1680/A',1,3),(8741,'Formalism for Formalism','https://codeforces.com/problemset/problem/1679/F',3,3),(8742,'Typical Party in Dorm','https://codeforces.com/problemset/problem/1679/E',2,3),(8743,'Toss a Coin to Your Graph...','https://codeforces.com/problemset/problem/1679/D',2,3),(8744,'Rooks Defenders','https://codeforces.com/problemset/problem/1679/C',1,3),(8745,'Stone Age Problem','https://codeforces.com/problemset/problem/1679/B',1,3),(8746,'AvtoBus','https://codeforces.com/problemset/problem/1679/A',1,3),(8747,'Tokitsukaze and Good 01-String (hard version)','https://codeforces.com/problemset/problem/1678/B2',2,3),(8748,'Tokitsukaze and Good 01-String (easy version)','https://codeforces.com/problemset/problem/1678/B1',1,3),(8749,'Tokitsukaze and All Zero Sequence','https://codeforces.com/problemset/problem/1678/A',1,3),(8750,'Tokitsukaze and Gems','https://codeforces.com/problemset/problem/1677/F',3,3),(8751,'Tokitsukaze and Beautiful Subsegments','https://codeforces.com/problemset/problem/1677/E',3,3),(8752,'Tokitsukaze and Permutations','https://codeforces.com/problemset/problem/1677/D',2,3),(8753,'Tokitsukaze and Two Colorful Tapes','https://codeforces.com/problemset/problem/1677/C',2,3),(8754,'Tokitsukaze and Meeting','https://codeforces.com/problemset/problem/1677/B',2,3),(8755,'Tokitsukaze and Strange Inequality','https://codeforces.com/problemset/problem/1677/A',2,3),(8756,'Maximum Crossings (Hard Version)','https://codeforces.com/problemset/problem/1676/H2',1,3),(8757,'Maximum Crossings (Easy Version)','https://codeforces.com/problemset/problem/1676/H1',1,3),(8758,'White-Black Balanced Subtrees','https://codeforces.com/problemset/problem/1676/G',1,3),(8759,'Longest Strike','https://codeforces.com/problemset/problem/1676/F',1,3),(8760,'Eating Queries','https://codeforces.com/problemset/problem/1676/E',1,3),(8761,'X-Sum','https://codeforces.com/problemset/problem/1676/D',1,3),(8762,'Most Similar Words','https://codeforces.com/problemset/problem/1676/C',1,3),(8763,'Equal Candies','https://codeforces.com/problemset/problem/1676/B',1,3),(8764,'Lucky?','https://codeforces.com/problemset/problem/1676/A',1,3),(8765,'Sorting Pancakes','https://codeforces.com/problemset/problem/1675/G',2,3),(8766,'Vlad and Unfinished Business','https://codeforces.com/problemset/problem/1675/F',2,3),(8767,'Replace With the Previous, Minimize','https://codeforces.com/problemset/problem/1675/E',1,3),(8768,'Vertical Paths','https://codeforces.com/problemset/problem/1675/D',1,3),(8769,'Detective Task','https://codeforces.com/problemset/problem/1675/C',1,3),(8770,'Make It Increasing','https://codeforces.com/problemset/problem/1675/B',1,3),(8771,'Food for Animals','https://codeforces.com/problemset/problem/1675/A',1,3),(8772,'Remove Directed Edges','https://codeforces.com/problemset/problem/1674/G',2,3),(8773,'Desktop Rearrangement','https://codeforces.com/problemset/problem/1674/F',2,3),(8774,'Breaking the Wall','https://codeforces.com/problemset/problem/1674/E',2,3),(8775,'A-B-C Sort','https://codeforces.com/problemset/problem/1674/D',1,3),(8776,'Infinite Replacement','https://codeforces.com/problemset/problem/1674/C',1,3),(8777,'Dictionary','https://codeforces.com/problemset/problem/1674/B',1,3),(8778,'Number Transformation','https://codeforces.com/problemset/problem/1674/A',1,3),(8779,'Anti-Theft Road Planning','https://codeforces.com/problemset/problem/1673/F',2,3),(8780,'Power or XOR?','https://codeforces.com/problemset/problem/1673/E',2,3),(8781,'Lost Arithmetic Progression','https://codeforces.com/problemset/problem/1673/D',2,3),(8782,'Palindrome Basis','https://codeforces.com/problemset/problem/1673/C',1,3),(8783,'A Perfectly Balanced String?','https://codeforces.com/problemset/problem/1673/B',1,3),(8784,'Subtle Substring Subtraction','https://codeforces.com/problemset/problem/1673/A',1,3),(8785,'PermutationForces','https://codeforces.com/problemset/problem/1672/I',3,3),(8786,'Zigu Zagu','https://codeforces.com/problemset/problem/1672/H',3,3),(8787,'Cross Xor','https://codeforces.com/problemset/problem/1672/G',3,3),(8788,'Checker for Array Shuffling','https://codeforces.com/problemset/problem/1672/F2',3,3),(8789,'Array Shuffling','https://codeforces.com/problemset/problem/1672/F1',2,3),(8790,'notepad.exe','https://codeforces.com/problemset/problem/1672/E',2,3),(8791,'Cyclic Rotation','https://codeforces.com/problemset/problem/1672/D',2,3),(8792,'Unequal Array','https://codeforces.com/problemset/problem/1672/C',1,3),(8793,'I love AAAB','https://codeforces.com/problemset/problem/1672/B',1,3),(8794,'Log Chopping','https://codeforces.com/problemset/problem/1672/A',1,3),(8795,'Permutation Counting','https://codeforces.com/problemset/problem/1671/F',3,3),(8796,'Preorder','https://codeforces.com/problemset/problem/1671/E',2,3),(8797,'Insert a Progression','https://codeforces.com/problemset/problem/1671/D',2,3),(8798,'Dolce Vita','https://codeforces.com/problemset/problem/1671/C',1,3),(8799,'Consecutive Points Segment','https://codeforces.com/problemset/problem/1671/B',1,3),(8800,'String Building','https://codeforces.com/problemset/problem/1671/A',1,3),(8801,'Jee, You See?','https://codeforces.com/problemset/problem/1670/F',2,3),(8802,'Hemose on the Tree','https://codeforces.com/problemset/problem/1670/E',2,3),(8803,'Very Suspicious','https://codeforces.com/problemset/problem/1670/D',2,3),(8804,'Where is the Pizza?','https://codeforces.com/problemset/problem/1670/C',1,3),(8805,'Dorms War','https://codeforces.com/problemset/problem/1670/B',1,3),(8806,'Prof. Slim','https://codeforces.com/problemset/problem/1670/A',1,3),(8807,'Maximal AND','https://codeforces.com/problemset/problem/1669/H',1,3),(8808,'Fall Down','https://codeforces.com/problemset/problem/1669/G',1,3),(8809,'Eating Candies','https://codeforces.com/problemset/problem/1669/F',1,3),(8810,'2-Letter Strings','https://codeforces.com/problemset/problem/1669/E',1,3),(8811,'Colorful Stamp','https://codeforces.com/problemset/problem/1669/D',1,3),(8812,'Odd/Even Increments','https://codeforces.com/problemset/problem/1669/C',1,3),(8813,'Triple','https://codeforces.com/problemset/problem/1669/B',1,3),(8814,'Division?','https://codeforces.com/problemset/problem/1669/A',1,3),(8815,'Social Distance','https://codeforces.com/problemset/problem/1668/B',1,3),(8816,'Direction Change','https://codeforces.com/problemset/problem/1668/A',1,3),(8817,'Yin Yang','https://codeforces.com/problemset/problem/1667/F',3,3),(8818,'Centroid Probabilities','https://codeforces.com/problemset/problem/1667/E',3,3),(8819,'Edge Elimination','https://codeforces.com/problemset/problem/1667/D',3,3),(8820,'Half Queen Cover','https://codeforces.com/problemset/problem/1667/C',2,3),(8821,'Optimal Partition','https://codeforces.com/problemset/problem/1667/B',2,3),(8822,'Make it Increasing','https://codeforces.com/problemset/problem/1667/A',1,3),(8823,'Labyrinth','https://codeforces.com/problemset/problem/1666/L',2,3),(8824,'Kingdom Partition','https://codeforces.com/problemset/problem/1666/K',3,3),(8825,'Job Lookup','https://codeforces.com/problemset/problem/1666/J',2,3),(8826,'Interactive Treasure Hunt','https://codeforces.com/problemset/problem/1666/I',2,3),(8827,'Heroes of Might','https://codeforces.com/problemset/problem/1666/H',3,3),(8828,'Global Warming','https://codeforces.com/problemset/problem/1666/G',3,3),(8829,'Fancy Stack','https://codeforces.com/problemset/problem/1666/F',2,3),(8830,'Even Split','https://codeforces.com/problemset/problem/1666/E',2,3),(8831,'Deletive Editing','https://codeforces.com/problemset/problem/1666/D',1,3),(8832,'Connect the Points','https://codeforces.com/problemset/problem/1666/C',2,3),(8833,'Budget Distribution','https://codeforces.com/problemset/problem/1666/B',3,3),(8834,'Admissible Map','https://codeforces.com/problemset/problem/1666/A',3,3),(8835,'MinimizOR','https://codeforces.com/problemset/problem/1665/E',2,3),(8836,'GCD Guess','https://codeforces.com/problemset/problem/1665/D',2,3),(8837,'Tree Infection','https://codeforces.com/problemset/problem/1665/C',2,3),(8838,'Array Cloning Technique','https://codeforces.com/problemset/problem/1665/B',1,3),(8839,'GCD vs LCM','https://codeforces.com/problemset/problem/1665/A',1,3),(8840,'Cross-Language Program','https://codeforces.com/problemset/problem/1663/H',6,3),(8841,'Six Characters','https://codeforces.com/problemset/problem/1663/G',6,3),(8842,'In Every Generation...','https://codeforces.com/problemset/problem/1663/F',6,3),(8843,'Are You Safe?','https://codeforces.com/problemset/problem/1663/E',6,3),(8844,'Is it rated - 3','https://codeforces.com/problemset/problem/1663/D',6,3),(8845,'Pōja Verdon','https://codeforces.com/problemset/problem/1663/C',6,3),(8846,'Mike\'s Sequence','https://codeforces.com/problemset/problem/1663/B',6,3),(8847,'Who Tested?','https://codeforces.com/problemset/problem/1663/A',6,3),(8848,'Circular Maze','https://codeforces.com/problemset/problem/1662/O',6,3),(8849,'Drone Photo','https://codeforces.com/problemset/problem/1662/N',6,3),(8850,'Bottle Arrangements','https://codeforces.com/problemset/problem/1662/M',6,3),(8851,'Il Derby della Madonnina','https://codeforces.com/problemset/problem/1662/L',6,3),(8852,'Pandemic Restrictions','https://codeforces.com/problemset/problem/1662/K',6,3),(8853,'Training Camp','https://codeforces.com/problemset/problem/1662/J',6,3),(8854,'Ice Cream Shop','https://codeforces.com/problemset/problem/1662/I',6,3),(8855,'Boundary','https://codeforces.com/problemset/problem/1662/H',6,3),(8856,'Gastronomic Event','https://codeforces.com/problemset/problem/1662/G',6,3),(8857,'Antennas','https://codeforces.com/problemset/problem/1662/F',6,3),(8858,'Round Table','https://codeforces.com/problemset/problem/1662/E',6,3),(8859,'Evolution of Weasels','https://codeforces.com/problemset/problem/1662/D',6,3),(8860,'European Trip','https://codeforces.com/problemset/problem/1662/C',6,3),(8861,'Toys','https://codeforces.com/problemset/problem/1662/B',6,3),(8862,'Organizing SWERC','https://codeforces.com/problemset/problem/1662/A',6,3),(8863,'Teleporters','https://codeforces.com/problemset/problem/1661/F',3,3),(8864,'Narrow Components','https://codeforces.com/problemset/problem/1661/E',2,3),(8865,'Progressions Covering','https://codeforces.com/problemset/problem/1661/D',2,3),(8866,'Water the Trees','https://codeforces.com/problemset/problem/1661/C',2,3),(8867,'Getting Zero','https://codeforces.com/problemset/problem/1661/B',1,3),(8868,'Array Balancing','https://codeforces.com/problemset/problem/1661/A',1,3),(8869,'Promising String (hard version)','https://codeforces.com/problemset/problem/1660/F2',2,3),(8870,'Promising String (easy version)','https://codeforces.com/problemset/problem/1660/F1',2,3),(8871,'Matrix and Shifts','https://codeforces.com/problemset/problem/1660/E',2,3),(8872,'Maximum Product Strikes Back','https://codeforces.com/problemset/problem/1660/D',2,3),(8873,'Get an Even String','https://codeforces.com/problemset/problem/1660/C',1,3),(8874,'Vlad and Candies','https://codeforces.com/problemset/problem/1660/B',1,3),(8875,'Vasya and Coins','https://codeforces.com/problemset/problem/1660/A',1,3),(8876,'Tree and Permutation Game','https://codeforces.com/problemset/problem/1659/F',3,3),(8877,'AND-MEX Walk','https://codeforces.com/problemset/problem/1659/E',2,3),(8878,'Reverse Sort Sum','https://codeforces.com/problemset/problem/1659/D',2,3),(8879,'Line Empire','https://codeforces.com/problemset/problem/1659/C',1,3),(8880,'Bit Flipping','https://codeforces.com/problemset/problem/1659/B',1,3),(8881,'Red Versus Blue','https://codeforces.com/problemset/problem/1659/A',1,3),(8882,'Juju and Binary String','https://codeforces.com/problemset/problem/1658/F',3,3),(8883,'Gojou and Matrix Game','https://codeforces.com/problemset/problem/1658/E',2,3),(8884,'388535 (Hard Version)','https://codeforces.com/problemset/problem/1658/D2',2,3),(8885,'388535 (Easy Version)','https://codeforces.com/problemset/problem/1658/D1',2,3),(8886,'Shinju and the Lost Permutation','https://codeforces.com/problemset/problem/1658/C',2,3),(8887,'Marin and Anti-coprime Permutation','https://codeforces.com/problemset/problem/1658/B',1,3),(8888,'Marin and Photoshoot','https://codeforces.com/problemset/problem/1658/A',1,3),(8889,'Words on Tree','https://codeforces.com/problemset/problem/1657/F',3,3),(8890,'Star MST','https://codeforces.com/problemset/problem/1657/E',2,3),(8891,'For Gamers. By Gamers.','https://codeforces.com/problemset/problem/1657/D',2,3),(8892,'Bracket Sequence Deletion','https://codeforces.com/problemset/problem/1657/C',1,3),(8893,'XY Sequence','https://codeforces.com/problemset/problem/1657/B',1,3),(8894,'Integer Moves','https://codeforces.com/problemset/problem/1657/A',1,3),(8895,'Neighbour Ordering','https://codeforces.com/problemset/problem/1656/I',3,3),(8896,'Equal LCM Subsets','https://codeforces.com/problemset/problem/1656/H',3,3),(8897,'Cycle Palindrome','https://codeforces.com/problemset/problem/1656/G',3,3),(8898,'Parametric MST','https://codeforces.com/problemset/problem/1656/F',3,3),(8899,'Equal Tree Sums','https://codeforces.com/problemset/problem/1656/E',2,3),(8900,'K-good','https://codeforces.com/problemset/problem/1656/D',2,3),(8901,'Make Equal With Mod','https://codeforces.com/problemset/problem/1656/C',1,3),(8902,'Subtract Operation','https://codeforces.com/problemset/problem/1656/B',1,3),(8903,'Good Pairs','https://codeforces.com/problemset/problem/1656/A',1,3),(8904,'Three Minimums','https://codeforces.com/problemset/problem/1654/H',3,3),(8905,'Snowy Mountain','https://codeforces.com/problemset/problem/1654/G',3,3),(8906,'Minimal String Xoration','https://codeforces.com/problemset/problem/1654/F',3,3),(8907,'Arithmetic Operations','https://codeforces.com/problemset/problem/1654/E',2,3),(8908,'Potion Brewing Class','https://codeforces.com/problemset/problem/1654/D',2,3),(8909,'Alice and the Cake','https://codeforces.com/problemset/problem/1654/C',1,3),(8910,'Prefix Removals','https://codeforces.com/problemset/problem/1654/B',1,3),(8911,'Maximum Cake Tastiness','https://codeforces.com/problemset/problem/1654/A',1,3),(8912,'Tower Defense','https://codeforces.com/problemset/problem/1651/F',3,3),(8913,'Sum of Matchings','https://codeforces.com/problemset/problem/1651/E',3,3),(8914,'Nearest Excluded Points','https://codeforces.com/problemset/problem/1651/D',2,3),(8915,'Fault-tolerant Network','https://codeforces.com/problemset/problem/1651/C',1,3),(8916,'Prove Him Wrong','https://codeforces.com/problemset/problem/1651/B',1,3),(8917,'Playoff','https://codeforces.com/problemset/problem/1651/A',1,3),(8918,'Counting Shortcuts','https://codeforces.com/problemset/problem/1650/G',2,3),(8919,'Vitaly and Advanced Useless Algorithms','https://codeforces.com/problemset/problem/1650/F',2,3),(8920,'Rescheduling the Exam','https://codeforces.com/problemset/problem/1650/E',2,3),(8921,'Twist the Permutation','https://codeforces.com/problemset/problem/1650/D',1,3),(8922,'Weight of the System of Nested Segments','https://codeforces.com/problemset/problem/1650/C',1,3),(8923,'DIV + MOD','https://codeforces.com/problemset/problem/1650/B',1,3),(8924,'Deletions of Two Adjacent Letters','https://codeforces.com/problemset/problem/1650/A',1,3),(8925,'Game of Ball Passing','https://codeforces.com/problemset/problem/1649/B',1,3),(8926,'Game','https://codeforces.com/problemset/problem/1649/A',1,3),(8927,'Two Avenues','https://codeforces.com/problemset/problem/1648/F',3,3),(8928,'Air Reform','https://codeforces.com/problemset/problem/1648/E',3,3),(8929,'Serious Business','https://codeforces.com/problemset/problem/1648/D',3,3),(8930,'Tyler and Strings','https://codeforces.com/problemset/problem/1648/C',2,3),(8931,'Integral Array','https://codeforces.com/problemset/problem/1648/B',2,3),(8932,'Weird Sum','https://codeforces.com/problemset/problem/1648/A',1,3),(8933,'Madoka and Laziness','https://codeforces.com/problemset/problem/1647/F',3,3),(8934,'Madoka and the Sixth-graders','https://codeforces.com/problemset/problem/1647/E',2,3),(8935,'Madoka and the Best School in Russia','https://codeforces.com/problemset/problem/1647/D',2,3),(8936,'Madoka and Childish Pranks','https://codeforces.com/problemset/problem/1647/C',1,3),(8937,'Madoka and the Elegant Gift','https://codeforces.com/problemset/problem/1647/B',1,3),(8938,'Madoka and Math Dad','https://codeforces.com/problemset/problem/1647/A',1,3),(8939,'Playing Around the Table','https://codeforces.com/problemset/problem/1646/F',3,3),(8940,'Power Board','https://codeforces.com/problemset/problem/1646/E',2,3),(8941,'Weight the Tree','https://codeforces.com/problemset/problem/1646/D',2,3),(8942,'Factorials and Powers of Two','https://codeforces.com/problemset/problem/1646/C',1,3),(8943,'Quality vs Quantity','https://codeforces.com/problemset/problem/1646/B',1,3),(8944,'Square Counting','https://codeforces.com/problemset/problem/1646/A',1,3),(8945,'Basis','https://codeforces.com/problemset/problem/1644/F',3,3),(8946,'Expand the Path','https://codeforces.com/problemset/problem/1644/E',2,3),(8947,'Cross Coloring','https://codeforces.com/problemset/problem/1644/D',2,3),(8948,'Increase Subarray Sums','https://codeforces.com/problemset/problem/1644/C',1,3),(8949,'Anti-Fibonacci Permutation','https://codeforces.com/problemset/problem/1644/B',1,3),(8950,'Doors and Keys','https://codeforces.com/problemset/problem/1644/A',1,3),(8951,'Power Walking','https://codeforces.com/problemset/problem/1642/B',1,3),(8952,'Hard Way','https://codeforces.com/problemset/problem/1642/A',1,3),(8953,'Covering Circle','https://codeforces.com/problemset/problem/1641/F',3,3),(8954,'Special Positions','https://codeforces.com/problemset/problem/1641/E',3,3),(8955,'Two Arrays','https://codeforces.com/problemset/problem/1641/D',3,3),(8956,'Anonymity Is Important','https://codeforces.com/problemset/problem/1641/C',2,3),(8957,'Repetitions Decoding','https://codeforces.com/problemset/problem/1641/B',2,3),(8958,'Great Sequence','https://codeforces.com/problemset/problem/1641/A',1,3),(8959,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/K',6,3),(8960,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/J',6,3),(8961,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/I',6,3),(8962,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/H',6,3),(8963,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/G',6,3),(8964,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/F',6,3),(8965,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/E',6,3),(8966,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/D',6,3),(8967,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/C',6,3),(8968,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/B',6,3),(8969,'Treasure Hunt','https://codeforces.com/problemset/problem/1639/A',6,3),(8970,'Two Posters','https://codeforces.com/problemset/problem/1638/F',3,3),(8971,'Colorful Operations','https://codeforces.com/problemset/problem/1638/E',2,3),(8972,'Big Brush','https://codeforces.com/problemset/problem/1638/D',2,3),(8973,'Inversion Graph','https://codeforces.com/problemset/problem/1638/C',1,3),(8974,'Odd Swap Sort','https://codeforces.com/problemset/problem/1638/B',1,3),(8975,'Reverse','https://codeforces.com/problemset/problem/1638/A',1,3),(8976,'Minimize Inversions Number','https://codeforces.com/problemset/problem/1637/H',3,3),(8977,'Birthday','https://codeforces.com/problemset/problem/1637/G',3,3),(8978,'Towers','https://codeforces.com/problemset/problem/1637/F',2,3),(8979,'Best Pair','https://codeforces.com/problemset/problem/1637/E',2,3),(8980,'Yet Another Minimization Problem','https://codeforces.com/problemset/problem/1637/D',2,3),(8981,'Andrew and Stones','https://codeforces.com/problemset/problem/1637/C',1,3),(8982,'MEX and Array','https://codeforces.com/problemset/problem/1637/B',1,3),(8983,'Sorting Parts','https://codeforces.com/problemset/problem/1637/A',1,3),(8984,'Closest Pair ','https://codeforces.com/problemset/problem/1635/F',3,3),(8985,'Cars ','https://codeforces.com/problemset/problem/1635/E',2,3),(8986,'Infinite Set','https://codeforces.com/problemset/problem/1635/D',2,3),(8987,'Differential Sorting','https://codeforces.com/problemset/problem/1635/C',1,3),(8988,'Avoid Local Maximums','https://codeforces.com/problemset/problem/1635/B',1,3),(8989,'Min Or Sum','https://codeforces.com/problemset/problem/1635/A',1,3),(8990,'Fibonacci Additions','https://codeforces.com/problemset/problem/1634/F',3,3),(8991,'Fair Share','https://codeforces.com/problemset/problem/1634/E',2,3),(8992,'Finding Zero','https://codeforces.com/problemset/problem/1634/D',2,3),(8993,'OKEA','https://codeforces.com/problemset/problem/1634/C',1,3),(8994,'Fortune Telling','https://codeforces.com/problemset/problem/1634/B',1,3),(8995,'Reverse and Concatenate','https://codeforces.com/problemset/problem/1634/A',1,3),(8996,'Perfect Matching','https://codeforces.com/problemset/problem/1633/F',3,3),(8997,'Spanning Tree Queries','https://codeforces.com/problemset/problem/1633/E',2,3),(8998,'Make Them Equal','https://codeforces.com/problemset/problem/1633/D',2,3),(8999,'Kill the Monster','https://codeforces.com/problemset/problem/1633/C',1,3),(9000,'Minority','https://codeforces.com/problemset/problem/1633/B',1,3),(9001,'Div. 7','https://codeforces.com/problemset/problem/1633/A',1,3),(9002,'Distance Tree (hard version)','https://codeforces.com/problemset/problem/1632/E2',3,3),(9003,'Distance Tree (easy version)','https://codeforces.com/problemset/problem/1632/E1',2,3),(9004,'New Year Concert','https://codeforces.com/problemset/problem/1632/D',2,3),(9005,'Strange Test','https://codeforces.com/problemset/problem/1632/C',2,3),(9006,'Roof Construction','https://codeforces.com/problemset/problem/1632/B',1,3),(9007,'ABC','https://codeforces.com/problemset/problem/1632/A',1,3),(9008,'Fun with Even Subarrays','https://codeforces.com/problemset/problem/1631/B',1,3),(9009,'Min Max Swap','https://codeforces.com/problemset/problem/1631/A',1,3),(9010,'Making It Bipartite','https://codeforces.com/problemset/problem/1630/F',3,3),(9011,'Expected Components','https://codeforces.com/problemset/problem/1630/E',3,3),(9012,'Flipping Range','https://codeforces.com/problemset/problem/1630/D',2,3),(9013,'Paint the Middle','https://codeforces.com/problemset/problem/1630/C',2,3),(9014,'Range and Partition','https://codeforces.com/problemset/problem/1630/B',2,3),(9015,'And Matching','https://codeforces.com/problemset/problem/1630/A',1,3),(9016,'GCD Arrays','https://codeforces.com/problemset/problem/1629/B',1,3),(9017,'Download More RAM','https://codeforces.com/problemset/problem/1629/A',1,3),(9018,'Spaceship Crisis Management','https://codeforces.com/problemset/problem/1628/F',3,3),(9019,'Groceries in Meteor Town','https://codeforces.com/problemset/problem/1628/E',3,3),(9020,'Game on Sum (Hard Version)','https://codeforces.com/problemset/problem/1628/D2',2,3),(9021,'Game on Sum (Easy Version)','https://codeforces.com/problemset/problem/1628/D1',2,3),(9022,'Grid Xor','https://codeforces.com/problemset/problem/1628/C',2,3),(9023,'Peculiar Movie Preferences','https://codeforces.com/problemset/problem/1628/B',2,3),(9024,'Meximum Array','https://codeforces.com/problemset/problem/1628/A',1,3),(9025,'Not Splitting','https://codeforces.com/problemset/problem/1627/F',3,3),(9026,'Not Escaping','https://codeforces.com/problemset/problem/1627/E',2,3),(9027,'Not Adding','https://codeforces.com/problemset/problem/1627/D',2,3),(9028,'Not Assigning','https://codeforces.com/problemset/problem/1627/C',1,3),(9029,'Not Sitting','https://codeforces.com/problemset/problem/1627/B',1,3),(9030,'Not Shading','https://codeforces.com/problemset/problem/1627/A',1,3),(9031,'A Random Code Problem','https://codeforces.com/problemset/problem/1626/F',3,3),(9032,'Black and White Tree','https://codeforces.com/problemset/problem/1626/E',2,3),(9033,'Martial Arts Tournament','https://codeforces.com/problemset/problem/1626/D',2,3),(9034,'Monsters And Spells','https://codeforces.com/problemset/problem/1626/C',2,3),(9035,'Minor Reduction','https://codeforces.com/problemset/problem/1626/B',1,3),(9036,'Equidistant Letters','https://codeforces.com/problemset/problem/1626/A',1,3),(9037,'Cats on the Upgrade (hard version)','https://codeforces.com/problemset/problem/1625/E2',3,3),(9038,'Cats on the Upgrade (easy version)','https://codeforces.com/problemset/problem/1625/E1',2,3),(9039,'Binary Spiders','https://codeforces.com/problemset/problem/1625/D',2,3),(9040,'Road Optimization','https://codeforces.com/problemset/problem/1625/C',2,3),(9041,'Elementary Particles','https://codeforces.com/problemset/problem/1625/B',1,3),(9042,'Ancient Civilization','https://codeforces.com/problemset/problem/1625/A',1,3),(9043,'MinOr Tree','https://codeforces.com/problemset/problem/1624/G',2,3),(9044,'Interacdive Problem','https://codeforces.com/problemset/problem/1624/F',2,3),(9045,'Masha-forgetful','https://codeforces.com/problemset/problem/1624/E',2,3),(9046,'Palindromes Coloring','https://codeforces.com/problemset/problem/1624/D',1,3),(9047,'Division by Two and Permutation','https://codeforces.com/problemset/problem/1624/C',1,3),(9048,'Make AP','https://codeforces.com/problemset/problem/1624/B',1,3),(9049,'Plus One on the Subset','https://codeforces.com/problemset/problem/1624/A',1,3),(9050,'Middle Duplication','https://codeforces.com/problemset/problem/1623/E',2,3),(9051,'Robot Cleaner Revisit','https://codeforces.com/problemset/problem/1623/D',2,3),(9052,'Balanced Stone Heaps','https://codeforces.com/problemset/problem/1623/C',2,3),(9053,'Game on Ranges','https://codeforces.com/problemset/problem/1623/B',1,3),(9054,'Robot Cleaner','https://codeforces.com/problemset/problem/1623/A',1,3),(9055,'Quadratic Set','https://codeforces.com/problemset/problem/1622/F',3,3),(9056,'Math Test','https://codeforces.com/problemset/problem/1622/E',2,3),(9057,'Shuffle','https://codeforces.com/problemset/problem/1622/D',2,3),(9058,'Set or Decrease','https://codeforces.com/problemset/problem/1622/C',2,3),(9059,'Berland Music','https://codeforces.com/problemset/problem/1622/B',1,3),(9060,'Construct a Rectangle','https://codeforces.com/problemset/problem/1622/A',1,3),(9061,'Two Sequences','https://codeforces.com/problemset/problem/1621/I',3,3),(9062,'Trains and Airplanes','https://codeforces.com/problemset/problem/1621/H',3,3),(9063,'Weighted Increasing Subsequences','https://codeforces.com/problemset/problem/1621/G',3,3),(9064,'Strange Instructions','https://codeforces.com/problemset/problem/1621/F',3,3),(9065,'New School','https://codeforces.com/problemset/problem/1621/E',2,3),(9066,'The Winter Hike','https://codeforces.com/problemset/problem/1621/D',2,3),(9067,'Hidden Permutations','https://codeforces.com/problemset/problem/1621/C',2,3),(9068,'Integers Shop','https://codeforces.com/problemset/problem/1621/B',1,3),(9069,'Stable Arrangement of Rooks','https://codeforces.com/problemset/problem/1621/A',1,3),(9070,'Subsequences Galore','https://codeforces.com/problemset/problem/1620/G',2,3),(9071,'Bipartite Array','https://codeforces.com/problemset/problem/1620/F',3,3),(9072,'Replace the Numbers','https://codeforces.com/problemset/problem/1620/E',2,3),(9073,'Exact Change','https://codeforces.com/problemset/problem/1620/D',2,3),(9074,'BA-String','https://codeforces.com/problemset/problem/1620/C',2,3),(9075,'Triangles on a Rectangle','https://codeforces.com/problemset/problem/1620/B',1,3),(9076,'Equal or Not Equal','https://codeforces.com/problemset/problem/1620/A',1,3),(9077,'Permutation and Queries','https://codeforces.com/problemset/problem/1619/H',2,3),(9078,'Unusual Minesweeper','https://codeforces.com/problemset/problem/1619/G',2,3),(9079,'Let\'s Play the Hat?','https://codeforces.com/problemset/problem/1619/F',2,3),(9080,'MEX and Increments','https://codeforces.com/problemset/problem/1619/E',2,3),(9081,'New Year\'s Problem','https://codeforces.com/problemset/problem/1619/D',2,3),(9082,'Wrong Addition','https://codeforces.com/problemset/problem/1619/C',1,3),(9083,'Squares and Cubes','https://codeforces.com/problemset/problem/1619/B',1,3),(9084,'Square String?','https://codeforces.com/problemset/problem/1619/A',1,3),(9085,'Trader Problem','https://codeforces.com/problemset/problem/1618/G',2,3),(9086,'Reverse','https://codeforces.com/problemset/problem/1618/F',2,3),(9087,'Singers\' Tour','https://codeforces.com/problemset/problem/1618/E',2,3),(9088,'Array and Operations','https://codeforces.com/problemset/problem/1618/D',1,3),(9089,'Paint the Array','https://codeforces.com/problemset/problem/1618/C',1,3),(9090,'Missing Bigram','https://codeforces.com/problemset/problem/1618/B',1,3),(9091,'Polycarp and Sums of Subsequences','https://codeforces.com/problemset/problem/1618/A',1,3),(9092,'Christmas Chocolates','https://codeforces.com/problemset/problem/1617/E',3,3),(9093,'Too Many Impostors (hard version)','https://codeforces.com/problemset/problem/1617/D2',2,3),(9094,'Too Many Impostors (easy version)','https://codeforces.com/problemset/problem/1617/D1',2,3),(9095,'Paprika and Permutation','https://codeforces.com/problemset/problem/1617/C',1,3),(9096,'GCD Problem','https://codeforces.com/problemset/problem/1617/B',1,3),(9097,'Forbidden Subsequence','https://codeforces.com/problemset/problem/1617/A',1,3),(9098,'Keep XOR Low','https://codeforces.com/problemset/problem/1616/H',3,3),(9099,'Just Add an Edge','https://codeforces.com/problemset/problem/1616/G',3,3),(9100,'Tricolor Triangles','https://codeforces.com/problemset/problem/1616/F',3,3),(9101,'Lexicographically Small Enough','https://codeforces.com/problemset/problem/1616/E',2,3),(9102,'Keep the Average High','https://codeforces.com/problemset/problem/1616/D',2,3),(9103,'Representative Edges','https://codeforces.com/problemset/problem/1616/C',1,3),(9104,'Mirror in the String','https://codeforces.com/problemset/problem/1616/B',1,3),(9105,'Integer Diversity','https://codeforces.com/problemset/problem/1616/A',1,3),(9106,'Reindeer Games','https://codeforces.com/problemset/problem/1615/H',3,3),(9107,'Maximum Adjacent Pairs','https://codeforces.com/problemset/problem/1615/G',3,3),(9108,'LEGOndary Grandmaster','https://codeforces.com/problemset/problem/1615/F',3,3),(9109,'Purple Crayon','https://codeforces.com/problemset/problem/1615/E',2,3),(9110,'X(or)-mas Tree','https://codeforces.com/problemset/problem/1615/D',2,3),(9111,'Menorah','https://codeforces.com/problemset/problem/1615/C',2,3),(9112,'And It\'s Non-Zero','https://codeforces.com/problemset/problem/1615/B',1,3),(9113,'Closing The Gap','https://codeforces.com/problemset/problem/1615/A',1,3),(9114,'Divan and a Cottage','https://codeforces.com/problemset/problem/1614/E',3,3),(9115,'Divan and Kostomuksha (hard version)','https://codeforces.com/problemset/problem/1614/D2',2,3),(9116,'Divan and Kostomuksha (easy version)','https://codeforces.com/problemset/problem/1614/D1',2,3),(9117,'Divan and bitwise operations','https://codeforces.com/problemset/problem/1614/C',1,3),(9118,'Divan and a New Project ','https://codeforces.com/problemset/problem/1614/B',1,3),(9119,'Divan and a Store','https://codeforces.com/problemset/problem/1614/A',1,3),(9120,'Tree Coloring','https://codeforces.com/problemset/problem/1613/F',3,3),(9121,'Crazy Robot','https://codeforces.com/problemset/problem/1613/E',2,3),(9122,'MEX Sequences','https://codeforces.com/problemset/problem/1613/D',2,3),(9123,'Poisoned Dagger','https://codeforces.com/problemset/problem/1613/C',1,3),(9124,'Absent Remainder','https://codeforces.com/problemset/problem/1613/B',1,3),(9125,'Long Comparison','https://codeforces.com/problemset/problem/1613/A',1,3),(9126,'Max Sum Array','https://codeforces.com/problemset/problem/1612/G',2,3),(9127,'Armor and Weapons','https://codeforces.com/problemset/problem/1612/F',3,3),(9128,'Messages','https://codeforces.com/problemset/problem/1612/E',2,3),(9129,'X-Magic Pair','https://codeforces.com/problemset/problem/1612/D',2,3),(9130,'Chat Ban','https://codeforces.com/problemset/problem/1612/C',1,3),(9131,'Special Permutation','https://codeforces.com/problemset/problem/1612/B',1,3),(9132,'Distance','https://codeforces.com/problemset/problem/1612/A',1,3),(9133,'Robot and Candies','https://codeforces.com/problemset/problem/1611/G',2,3),(9134,'ATM and Students','https://codeforces.com/problemset/problem/1611/F',2,3),(9135,'Escape The Maze (hard version)','https://codeforces.com/problemset/problem/1611/E2',2,3),(9136,'Escape The Maze (easy version)','https://codeforces.com/problemset/problem/1611/E1',2,3),(9137,'Weights Assignment For Tree Edges','https://codeforces.com/problemset/problem/1611/D',1,3),(9138,'Polycarp Recovers the Permutation','https://codeforces.com/problemset/problem/1611/C',1,3),(9139,'Team Composition: Programmers and Mathematicians','https://codeforces.com/problemset/problem/1611/B',1,3),(9140,'Make Even','https://codeforces.com/problemset/problem/1611/A',1,3),(9141,'Mashtali vs AtCoder','https://codeforces.com/problemset/problem/1610/I',3,3),(9142,'Squid Game','https://codeforces.com/problemset/problem/1610/H',3,3),(9143,'AmShZ Wins a Bet','https://codeforces.com/problemset/problem/1610/G',3,3),(9144,'Mashtali: a Space Oddysey','https://codeforces.com/problemset/problem/1610/F',3,3),(9145,'AmShZ and G.O.A.T.','https://codeforces.com/problemset/problem/1610/E',2,3),(9146,'Not Quite Lee','https://codeforces.com/problemset/problem/1610/D',2,3),(9147,'Keshi Is Throwing a Party','https://codeforces.com/problemset/problem/1610/C',2,3),(9148,'Kalindrome Array','https://codeforces.com/problemset/problem/1610/B',1,3),(9149,'Anti Light\'s Cell Guessing','https://codeforces.com/problemset/problem/1610/A',1,3),(9150,'Pushing Robots','https://codeforces.com/problemset/problem/1609/H',3,3),(9151,'A Stroll Around the Matrix','https://codeforces.com/problemset/problem/1609/G',3,3),(9152,'Interesting Sections','https://codeforces.com/problemset/problem/1609/F',3,3),(9153,'William The Oblivious ','https://codeforces.com/problemset/problem/1609/E',2,3),(9154,'Social Network','https://codeforces.com/problemset/problem/1609/D',2,3),(9155,'Complex Market Analysis','https://codeforces.com/problemset/problem/1609/C',1,3),(9156,'William the Vigilant','https://codeforces.com/problemset/problem/1609/B',1,3),(9157,'Divide and Multiply','https://codeforces.com/problemset/problem/1609/A',1,3),(9158,'Alphabetic Tree','https://codeforces.com/problemset/problem/1608/G',3,3),(9159,'MEX counting','https://codeforces.com/problemset/problem/1608/F',3,3),(9160,'The Cells on the Paper','https://codeforces.com/problemset/problem/1608/E',3,3),(9161,'Dominoes','https://codeforces.com/problemset/problem/1608/D',2,3),(9162,'Game Master','https://codeforces.com/problemset/problem/1608/C',2,3),(9163,'Build the Permutation','https://codeforces.com/problemset/problem/1608/B',1,3),(9164,'Find Array','https://codeforces.com/problemset/problem/1608/A',1,3),(9165,'Banquet Preparations 2','https://codeforces.com/problemset/problem/1607/H',2,3),(9166,'Banquet Preparations 1','https://codeforces.com/problemset/problem/1607/G',2,3),(9167,'Robot on the Board 2','https://codeforces.com/problemset/problem/1607/F',2,3),(9168,'Robot on the Board 1','https://codeforces.com/problemset/problem/1607/E',2,3),(9169,'Blue-Red Permutation','https://codeforces.com/problemset/problem/1607/D',1,3),(9170,'Minimum Extraction','https://codeforces.com/problemset/problem/1607/C',1,3),(9171,'Odd Grasshopper','https://codeforces.com/problemset/problem/1607/B',1,3),(9172,'Linear Keyboard','https://codeforces.com/problemset/problem/1607/A',1,3),(9173,'Tree Queries','https://codeforces.com/problemset/problem/1606/F',3,3),(9174,'Arena','https://codeforces.com/problemset/problem/1606/E',2,3),(9175,'Red-Blue Matrix','https://codeforces.com/problemset/problem/1606/D',2,3),(9176,'Banknotes','https://codeforces.com/problemset/problem/1606/C',1,3),(9177,'Update Files','https://codeforces.com/problemset/problem/1606/B',1,3),(9178,'AB Balance','https://codeforces.com/problemset/problem/1606/A',1,3),(9179,'PalindORme','https://codeforces.com/problemset/problem/1605/F',3,3),(9180,'Array Equalizer','https://codeforces.com/problemset/problem/1605/E',2,3),(9181,'Treelabeling','https://codeforces.com/problemset/problem/1605/D',2,3),(9182,'Dominant Character','https://codeforces.com/problemset/problem/1605/C',1,3),(9183,'Reverse Sort','https://codeforces.com/problemset/problem/1605/B',1,3),(9184,'A.M. Deviation','https://codeforces.com/problemset/problem/1605/A',1,3),(9185,'XOR Specia-LIS-t','https://codeforces.com/problemset/problem/1604/B',1,3),(9186,'Era','https://codeforces.com/problemset/problem/1604/A',1,3),(9187,'October 18, 2017','https://codeforces.com/problemset/problem/1603/F',3,3),(9188,'A Perfect Problem','https://codeforces.com/problemset/problem/1603/E',3,3),(9189,'Artistic Partition','https://codeforces.com/problemset/problem/1603/D',3,3),(9190,'Extreme Extension','https://codeforces.com/problemset/problem/1603/C',2,3),(9191,'Moderate Modular Mode','https://codeforces.com/problemset/problem/1603/B',2,3),(9192,'Di-visible Confusion','https://codeforces.com/problemset/problem/1603/A',1,3),(9193,'Divine Array','https://codeforces.com/problemset/problem/1602/B',1,3),(9194,'Two Subsequences','https://codeforces.com/problemset/problem/1602/A',1,3),(9195,'Two Sorts','https://codeforces.com/problemset/problem/1601/F',3,3),(9196,'Phys Ed Online','https://codeforces.com/problemset/problem/1601/E',3,3),(9197,'Difficult Mountain','https://codeforces.com/problemset/problem/1601/D',3,3),(9198,'Optimal Insertion','https://codeforces.com/problemset/problem/1601/C',2,3),(9199,'Frog Traveler','https://codeforces.com/problemset/problem/1601/B',2,3),(9200,'Array Elimination','https://codeforces.com/problemset/problem/1601/A',1,3),(9201,'Robot Factory','https://codeforces.com/problemset/problem/1600/J',1,3),(9202,'Party Organization','https://codeforces.com/problemset/problem/1600/F',2,3),(9203,'Array Game','https://codeforces.com/problemset/problem/1600/E',2,3),(9204,'Bob\'s Beautiful Array','https://codeforces.com/problemset/problem/1599/J',3,3),(9205,'Desert','https://codeforces.com/problemset/problem/1599/I',3,3),(9206,'Hidden Fortress','https://codeforces.com/problemset/problem/1599/H',2,3),(9207,'Shortest path','https://codeforces.com/problemset/problem/1599/G',3,3),(9208,'Mars','https://codeforces.com/problemset/problem/1599/F',3,3),(9209,'Two Arrays','https://codeforces.com/problemset/problem/1599/E',3,3),(9210,'Bubble Popping','https://codeforces.com/problemset/problem/1599/D',3,3),(9211,'Bubble Strike','https://codeforces.com/problemset/problem/1599/C',2,3),(9212,'Restaurant Game','https://codeforces.com/problemset/problem/1599/B',3,3),(9213,'Weights','https://codeforces.com/problemset/problem/1599/A',3,3),(9214,'The Sum of Good Numbers','https://codeforces.com/problemset/problem/1598/G',3,3),(9215,'RBS','https://codeforces.com/problemset/problem/1598/F',2,3),(9216,'Staircases','https://codeforces.com/problemset/problem/1598/E',2,3),(9217,'Training Session','https://codeforces.com/problemset/problem/1598/D',2,3),(9218,'Delete Two Elements','https://codeforces.com/problemset/problem/1598/C',1,3),(9219,'Groups','https://codeforces.com/problemset/problem/1598/B',1,3),(9220,'Computer Game','https://codeforces.com/problemset/problem/1598/A',1,3),(9221,'Ideal Farm','https://codeforces.com/problemset/problem/1594/F',2,3),(9222,'Rubik\'s Cube Coloring (hard version)','https://codeforces.com/problemset/problem/1594/E2',2,3),(9223,'Rubik\'s Cube Coloring (easy version)','https://codeforces.com/problemset/problem/1594/E1',1,3),(9224,'The Number of Imposters','https://codeforces.com/problemset/problem/1594/D',2,3),(9225,'Make Them Equal','https://codeforces.com/problemset/problem/1594/C',1,3),(9226,'Special Numbers','https://codeforces.com/problemset/problem/1594/B',1,3),(9227,'Consecutive Sum Riddle','https://codeforces.com/problemset/problem/1594/A',1,3),(9228,'Changing Brackets','https://codeforces.com/problemset/problem/1593/G',2,3),(9229,'Red-Black Number','https://codeforces.com/problemset/problem/1593/F',2,3),(9230,'Gardener and Tree','https://codeforces.com/problemset/problem/1593/E',2,3),(9231,'Half of Same','https://codeforces.com/problemset/problem/1593/D2',2,3),(9232,'All are Same','https://codeforces.com/problemset/problem/1593/D1',1,3),(9233,'Save More Mice','https://codeforces.com/problemset/problem/1593/C',1,3),(9234,'Make it Divisible by 25','https://codeforces.com/problemset/problem/1593/B',1,3),(9235,'Elections','https://codeforces.com/problemset/problem/1593/A',1,3),(9236,'Alice and Recoloring 2','https://codeforces.com/problemset/problem/1592/F2',3,3),(9237,'Alice and Recoloring 1','https://codeforces.com/problemset/problem/1592/F1',3,3),(9238,'Bored Bakry','https://codeforces.com/problemset/problem/1592/E',2,3),(9239,'Hemose in ICPC ?','https://codeforces.com/problemset/problem/1592/D',2,3),(9240,'Bakry and Partitioning','https://codeforces.com/problemset/problem/1592/C',2,3),(9241,'Hemose Shopping','https://codeforces.com/problemset/problem/1592/B',1,3),(9242,'Gamer Hemose','https://codeforces.com/problemset/problem/1592/A',1,3),(9243,'Jumping Through the Array','https://codeforces.com/problemset/problem/1588/F',3,3),(9244,'Omkar and Mosaic','https://codeforces.com/problemset/problem/1586/I',3,3),(9245,'Poachers','https://codeforces.com/problemset/problem/1585/G',2,3),(9246,'Non-equal Neighbours','https://codeforces.com/problemset/problem/1585/F',2,3),(9247,'Frequency Queries','https://codeforces.com/problemset/problem/1585/E',2,3),(9248,'Yet Another Sorting Problem','https://codeforces.com/problemset/problem/1585/D',2,3),(9249,'Minimize Distance','https://codeforces.com/problemset/problem/1585/C',1,3),(9250,'Array Eversion','https://codeforces.com/problemset/problem/1585/B',1,3),(9251,'Life of a Flower','https://codeforces.com/problemset/problem/1585/A',1,3),(9252,'Eligible Segments','https://codeforces.com/problemset/problem/1584/G',3,3),(9253,'Strange LCS','https://codeforces.com/problemset/problem/1584/F',3,3),(9254,'Game with Stones','https://codeforces.com/problemset/problem/1584/E',2,3),(9255,'Guess the Permutation','https://codeforces.com/problemset/problem/1584/D',2,3),(9256,'Two Arrays','https://codeforces.com/problemset/problem/1584/C',1,3),(9257,'Coloring Rectangles','https://codeforces.com/problemset/problem/1584/B',1,3),(9258,'Mathematical Addition','https://codeforces.com/problemset/problem/1584/A',1,3),(9259,'Omkar and Tours','https://codeforces.com/problemset/problem/1583/H',3,3),(9260,'Omkar and Time Travel','https://codeforces.com/problemset/problem/1583/G',3,3),(9261,'Defender of Childhood Dreams','https://codeforces.com/problemset/problem/1583/F',2,3),(9262,'Moment of Bloom','https://codeforces.com/problemset/problem/1583/E',2,3),(9263,'Omkar and the Meaning of Life','https://codeforces.com/problemset/problem/1583/D',2,3),(9264,'Omkar and Determination','https://codeforces.com/problemset/problem/1583/C',2,3),(9265,'Omkar and Heavenly Tree','https://codeforces.com/problemset/problem/1583/B',1,3),(9266,'Windblume Ode','https://codeforces.com/problemset/problem/1583/A',1,3),(9267,'Kuzya and Homework','https://codeforces.com/problemset/problem/1582/G',3,3),(9268,'Korney Korneevich and XOR (hard version)','https://codeforces.com/problemset/problem/1582/F2',2,3),(9269,'Korney Korneevich and XOR (easy version)','https://codeforces.com/problemset/problem/1582/F1',2,3),(9270,'Pchelyonok and Segments','https://codeforces.com/problemset/problem/1582/E',2,3),(9271,'Vupsen, Pupsen and 0','https://codeforces.com/problemset/problem/1582/D',2,3),(9272,'Grandma Capa Knits a Scarf','https://codeforces.com/problemset/problem/1582/C',1,3),(9273,'Luntik and Subsequences','https://codeforces.com/problemset/problem/1582/B',1,3),(9274,'Luntik and Concerts','https://codeforces.com/problemset/problem/1582/A',1,3),(9275,'Diameter of Graph','https://codeforces.com/problemset/problem/1581/B',1,3),(9276,'CQXYM Count Permutations','https://codeforces.com/problemset/problem/1581/A',1,3),(9277,'Problems for Codeforces','https://codeforces.com/problemset/problem/1580/F',3,3),(9278,'Railway Construction','https://codeforces.com/problemset/problem/1580/E',3,3),(9279,'Subsequence','https://codeforces.com/problemset/problem/1580/D',3,3),(9280,'Train Maintenance','https://codeforces.com/problemset/problem/1580/C',2,3),(9281,'Mathematics Curriculum','https://codeforces.com/problemset/problem/1580/B',3,3),(9282,'Portal','https://codeforces.com/problemset/problem/1580/A',2,3),(9283,'Minimal Coverage','https://codeforces.com/problemset/problem/1579/G',2,3),(9284,'Array Stabilization (AND version)','https://codeforces.com/problemset/problem/1579/F',2,3),(9285,'Array Optimization by Deque','https://codeforces.com/problemset/problem/1579/E2',2,3),(9286,'Permutation Minimization by Deque','https://codeforces.com/problemset/problem/1579/E1',1,3),(9287,'Productive Meeting','https://codeforces.com/problemset/problem/1579/D',1,3),(9288,'Ticks','https://codeforces.com/problemset/problem/1579/C',1,3),(9289,'Shifting Sort','https://codeforces.com/problemset/problem/1579/B',1,3),(9290,'Casimir\'s String Solitaire','https://codeforces.com/problemset/problem/1579/A',1,3),(9291,'The Mind','https://codeforces.com/problemset/problem/1578/M',3,3),(9292,'Labyrinth','https://codeforces.com/problemset/problem/1578/L',2,3),(9293,'Kingdom of Islands','https://codeforces.com/problemset/problem/1578/K',3,3),(9294,'Just Kingdom','https://codeforces.com/problemset/problem/1578/J',3,3),(9295,'Interactive Rays','https://codeforces.com/problemset/problem/1578/I',3,3),(9296,'Higher Order Functions','https://codeforces.com/problemset/problem/1578/H',2,3),(9297,'Game of Chance','https://codeforces.com/problemset/problem/1578/G',3,3),(9298,'Framing Pictures','https://codeforces.com/problemset/problem/1578/F',3,3),(9299,'Easy Scheduling','https://codeforces.com/problemset/problem/1578/E',1,3),(9300,'Dragon Curve','https://codeforces.com/problemset/problem/1578/D',3,3),(9301,'Cactus Lady and her Cing','https://codeforces.com/problemset/problem/1578/C',3,3),(9302,'Building Forest Trails','https://codeforces.com/problemset/problem/1578/B',3,3),(9303,'Anti-Tetris','https://codeforces.com/problemset/problem/1578/A',3,3),(9304,'Communication Routing Challenge','https://codeforces.com/problemset/problem/1576/A',6,3),(9305,'Managing Telephone Poles','https://codeforces.com/problemset/problem/1575/M',2,3),(9306,'Longest Array Deconstruction','https://codeforces.com/problemset/problem/1575/L',2,3),(9307,'Knitting Batik','https://codeforces.com/problemset/problem/1575/K',2,3),(9308,'Jeopardy of Dropped Balls','https://codeforces.com/problemset/problem/1575/J',1,3),(9309,'Illusions of the Desert','https://codeforces.com/problemset/problem/1575/I',2,3),(9310,'Holiday Wall Ornaments','https://codeforces.com/problemset/problem/1575/H',2,3),(9311,'GCD Festival','https://codeforces.com/problemset/problem/1575/G',2,3),(9312,'Finding Expected Value','https://codeforces.com/problemset/problem/1575/F',3,3),(9313,'Eye-Pleasing City Park Tour','https://codeforces.com/problemset/problem/1575/E',3,3),(9314,'Divisible by Twenty-Five','https://codeforces.com/problemset/problem/1575/D',2,3),(9315,'Cyclic Sum','https://codeforces.com/problemset/problem/1575/C',3,3),(9316,'Building an Amusement Park','https://codeforces.com/problemset/problem/1575/B',2,3),(9317,'Another Sorting Problem','https://codeforces.com/problemset/problem/1575/A',1,3),(9318,'Occurrences','https://codeforces.com/problemset/problem/1574/F',3,3),(9319,'Coloring','https://codeforces.com/problemset/problem/1574/E',2,3),(9320,'The Strongest Build','https://codeforces.com/problemset/problem/1574/D',2,3),(9321,'Slay the Dragon','https://codeforces.com/problemset/problem/1574/C',1,3),(9322,'Combinatorics Homework','https://codeforces.com/problemset/problem/1574/B',1,3),(9323,'Regular Bracket Sequences','https://codeforces.com/problemset/problem/1574/A',1,3),(9324,'Swaps','https://codeforces.com/problemset/problem/1573/B',1,3),(9325,'Countdown','https://codeforces.com/problemset/problem/1573/A',1,3),(9326,'Stations','https://codeforces.com/problemset/problem/1572/F',3,3),(9327,'Polygon','https://codeforces.com/problemset/problem/1572/E',3,3),(9328,'Bridge Club','https://codeforces.com/problemset/problem/1572/D',3,3),(9329,'Paint','https://codeforces.com/problemset/problem/1572/C',3,3),(9330,'Xor of 3','https://codeforces.com/problemset/problem/1572/B',2,3),(9331,'Book','https://codeforces.com/problemset/problem/1572/A',2,3),(9332,'Two Railroads','https://codeforces.com/problemset/problem/1571/J',3,3),(9333,'Physical Examination','https://codeforces.com/problemset/problem/1571/I',3,3),(9334,'Laser Beams','https://codeforces.com/problemset/problem/1571/H',3,3),(9335,'A Battle Against a Dragon','https://codeforces.com/problemset/problem/1571/G',2,3),(9336,'Kotlinforces','https://codeforces.com/problemset/problem/1571/F',2,3),(9337,'Fix the String','https://codeforces.com/problemset/problem/1571/E',2,3),(9338,'Sweepstake','https://codeforces.com/problemset/problem/1571/D',2,3),(9339,'Rhyme','https://codeforces.com/problemset/problem/1571/C',2,3),(9340,'Epic Novel','https://codeforces.com/problemset/problem/1571/B',1,3),(9341,'Sequence of Comparisons','https://codeforces.com/problemset/problem/1571/A',1,3),(9342,'Palindromic Hamiltonian Path','https://codeforces.com/problemset/problem/1569/F',3,3),(9343,'Playoff Restoration','https://codeforces.com/problemset/problem/1569/E',3,3),(9344,'Inconvenient Pairs','https://codeforces.com/problemset/problem/1569/D',2,3),(9345,'Jury Meeting','https://codeforces.com/problemset/problem/1569/C',1,3),(9346,'Chess Tournament','https://codeforces.com/problemset/problem/1569/B',1,3),(9347,'Balanced Substring','https://codeforces.com/problemset/problem/1569/A',1,3),(9348,'One-Four Overload','https://codeforces.com/problemset/problem/1567/F',3,3),(9349,'Non-Decreasing Dilemma','https://codeforces.com/problemset/problem/1567/E',2,3),(9350,'Expression Evaluation Error','https://codeforces.com/problemset/problem/1567/D',2,3),(9351,'Carrying Conundrum','https://codeforces.com/problemset/problem/1567/C',2,3),(9352,'MEXor Mixup','https://codeforces.com/problemset/problem/1567/B',1,3),(9353,'Domino Disaster','https://codeforces.com/problemset/problem/1567/A',1,3),(9354,'Xor-quiz','https://codeforces.com/problemset/problem/1566/H',3,3),(9355,'Four Vertices','https://codeforces.com/problemset/problem/1566/G',3,3),(9356,'Points Movement','https://codeforces.com/problemset/problem/1566/F',3,3),(9357,'Buds Re-hanging','https://codeforces.com/problemset/problem/1566/E',2,3),(9358,'Seating Arrangements (hard version) ','https://codeforces.com/problemset/problem/1566/D2',2,3),(9359,'Seating Arrangements (easy version) ','https://codeforces.com/problemset/problem/1566/D1',1,3),(9360,'MAX-MEX Cut','https://codeforces.com/problemset/problem/1566/C',1,3),(9361,'MIN-MEX Cut','https://codeforces.com/problemset/problem/1566/B',1,3),(9362,'Median Maximization','https://codeforces.com/problemset/problem/1566/A',1,3),(9363,'Tubular Bells','https://codeforces.com/problemset/problem/1562/F',3,3),(9364,'Rescue Niwen!','https://codeforces.com/problemset/problem/1562/E',2,3),(9365,'Two Hundred Twenty One (hard version)','https://codeforces.com/problemset/problem/1562/D2',2,3),(9366,'Two Hundred Twenty One (easy version)','https://codeforces.com/problemset/problem/1562/D1',2,3),(9367,'Rings','https://codeforces.com/problemset/problem/1562/C',1,3),(9368,'Scenes From a Memory','https://codeforces.com/problemset/problem/1562/B',1,3),(9369,'The Miracle and the Sleeper','https://codeforces.com/problemset/problem/1562/A',1,3),(9370,'Up the Strip (simplified version)','https://codeforces.com/problemset/problem/1561/D1',2,3),(9371,'Deep Down Below','https://codeforces.com/problemset/problem/1561/C',1,3),(9372,'Simply Strange Sort','https://codeforces.com/problemset/problem/1561/A',1,3),(9373,'Nearest Beautiful Number (hard version)','https://codeforces.com/problemset/problem/1560/F2',2,3),(9374,'Nearest Beautiful Number (easy version)','https://codeforces.com/problemset/problem/1560/F1',2,3),(9375,'Polycarp and String Transformation','https://codeforces.com/problemset/problem/1560/E',2,3),(9376,'Make a Power of Two','https://codeforces.com/problemset/problem/1560/D',1,3),(9377,'Infinity Table','https://codeforces.com/problemset/problem/1560/C',1,3),(9378,'Who\'s Opposite?','https://codeforces.com/problemset/problem/1560/B',1,3),(9379,'Dislike of Threes','https://codeforces.com/problemset/problem/1560/A',1,3),(9380,'Mocha and Stars','https://codeforces.com/problemset/problem/1559/E',2,3),(9381,'Mocha and Diana (Hard Version)','https://codeforces.com/problemset/problem/1559/D2',2,3),(9382,'Mocha and Diana (Easy Version)','https://codeforces.com/problemset/problem/1559/D1',1,3),(9383,'Mocha and Hiking','https://codeforces.com/problemset/problem/1559/C',1,3),(9384,'Mocha and Red and Blue','https://codeforces.com/problemset/problem/1559/B',1,3),(9385,'Mocha and Math','https://codeforces.com/problemset/problem/1559/A',1,3),(9386,'Strange Sort','https://codeforces.com/problemset/problem/1558/F',3,3),(9387,'Down Below','https://codeforces.com/problemset/problem/1558/E',3,3),(9388,'Top-Notch Insertions','https://codeforces.com/problemset/problem/1558/D',3,3),(9389,'Bottom-Tier Reversals','https://codeforces.com/problemset/problem/1558/C',2,3),(9390,'Up the Strip','https://codeforces.com/problemset/problem/1558/B',2,3),(9391,'Charmed by the Game','https://codeforces.com/problemset/problem/1558/A',1,3),(9392,'Assiut Chess','https://codeforces.com/problemset/problem/1557/E',3,3),(9393,'Ezzat and Grid','https://codeforces.com/problemset/problem/1557/D',2,3),(9394,'Moamen and XOR','https://codeforces.com/problemset/problem/1557/C',2,3),(9395,'Moamen and k-subarrays','https://codeforces.com/problemset/problem/1557/B',1,3),(9396,'Ezzat and Two Subsequences','https://codeforces.com/problemset/problem/1557/A',1,3),(9397,'DIY Tree','https://codeforces.com/problemset/problem/1556/H',3,3),(9398,'Gates to Another World','https://codeforces.com/problemset/problem/1556/G',3,3),(9399,'Sports Betting','https://codeforces.com/problemset/problem/1556/F',2,3),(9400,'Equilibrium','https://codeforces.com/problemset/problem/1556/E',2,3),(9401,'Take a Guess','https://codeforces.com/problemset/problem/1556/D',2,3),(9402,'Compressed Bracket Sequence','https://codeforces.com/problemset/problem/1556/C',2,3),(9403,'Take Your Places!','https://codeforces.com/problemset/problem/1556/B',1,3),(9404,'A Variety of Operations','https://codeforces.com/problemset/problem/1556/A',1,3),(9405,'Good Graph','https://codeforces.com/problemset/problem/1555/F',3,3),(9406,'Boring Segments','https://codeforces.com/problemset/problem/1555/E',2,3),(9407,'Say No to Palindromes','https://codeforces.com/problemset/problem/1555/D',2,3),(9408,'Coin Rows','https://codeforces.com/problemset/problem/1555/C',1,3),(9409,'Two Tables','https://codeforces.com/problemset/problem/1555/B',1,3),(9410,'PizzaForces','https://codeforces.com/problemset/problem/1555/A',1,3),(9411,'You','https://codeforces.com/problemset/problem/1554/E',3,3),(9412,'Diane','https://codeforces.com/problemset/problem/1554/D',2,3),(9413,'Mikasa','https://codeforces.com/problemset/problem/1554/C',2,3),(9414,'Cobb','https://codeforces.com/problemset/problem/1554/B',2,3),(9415,'Cherry','https://codeforces.com/problemset/problem/1554/A',1,3),(9416,'Stairs','https://codeforces.com/problemset/problem/1553/I',3,3),(9417,'XOR and Distance','https://codeforces.com/problemset/problem/1553/H',3,3),(9418,'Common Divisor Graph','https://codeforces.com/problemset/problem/1553/G',3,3),(9419,'Pairwise Modulo','https://codeforces.com/problemset/problem/1553/F',2,3),(9420,'Permutation Shift','https://codeforces.com/problemset/problem/1553/E',2,3),(9421,'Backspace','https://codeforces.com/problemset/problem/1553/D',1,3),(9422,'Penalty','https://codeforces.com/problemset/problem/1553/C',1,3),(9423,'Reverse String','https://codeforces.com/problemset/problem/1553/B',1,3),(9424,'Digits Sum','https://codeforces.com/problemset/problem/1553/A',1,3),(9425,'Organizing a Music Festival','https://codeforces.com/problemset/problem/1552/I',3,3),(9426,'Guess the Perimeter','https://codeforces.com/problemset/problem/1552/H',3,3),(9427,'A Serious Referee','https://codeforces.com/problemset/problem/1552/G',3,3),(9428,'Telepanting','https://codeforces.com/problemset/problem/1552/F',2,3),(9429,'Colors and Intervals','https://codeforces.com/problemset/problem/1552/E',2,3),(9430,'Array Differentiation','https://codeforces.com/problemset/problem/1552/D',2,3),(9431,'Maximize the Intersections','https://codeforces.com/problemset/problem/1552/C',2,3),(9432,'Running for Gold','https://codeforces.com/problemset/problem/1552/B',1,3),(9433,'Subsequence Permutation','https://codeforces.com/problemset/problem/1552/A',1,3),(9434,'Equidistant Vertices','https://codeforces.com/problemset/problem/1551/F',2,3),(9435,'Fixed Points','https://codeforces.com/problemset/problem/1551/E',2,3),(9436,'Domino (hard version)','https://codeforces.com/problemset/problem/1551/D2',2,3),(9437,'Domino (easy version)','https://codeforces.com/problemset/problem/1551/D1',2,3),(9438,'Interesting Story','https://codeforces.com/problemset/problem/1551/C',1,3),(9439,'Wonderful Coloring - 2','https://codeforces.com/problemset/problem/1551/B2',1,3),(9440,'Wonderful Coloring - 1','https://codeforces.com/problemset/problem/1551/B1',1,3),(9441,'Polycarp and Coins','https://codeforces.com/problemset/problem/1551/A',1,3),(9442,'Jumping Around','https://codeforces.com/problemset/problem/1550/F',3,3),(9443,'Stringforces','https://codeforces.com/problemset/problem/1550/E',2,3),(9444,'Excellent Arrays','https://codeforces.com/problemset/problem/1550/D',2,3),(9445,'Manhattan Subarrays','https://codeforces.com/problemset/problem/1550/C',2,3),(9446,'Maximum Cost Deletion','https://codeforces.com/problemset/problem/1550/B',1,3),(9447,'Find The Array','https://codeforces.com/problemset/problem/1550/A',1,3),(9448,'Gregor and the Pawn Game','https://codeforces.com/problemset/problem/1549/B',1,3),(9449,'Gregor and Cryptography','https://codeforces.com/problemset/problem/1549/A',1,3),(9450,'Gregor and the Two Painters','https://codeforces.com/problemset/problem/1548/E',3,3),(9451,'Gregor and the Odd Cows (Hard)','https://codeforces.com/problemset/problem/1548/D2',3,3),(9452,'Gregor and the Odd Cows (Easy)','https://codeforces.com/problemset/problem/1548/D1',2,3),(9453,'The Three Little Pigs','https://codeforces.com/problemset/problem/1548/C',2,3),(9454,'Integers Have Friends','https://codeforces.com/problemset/problem/1548/B',2,3),(9455,'Web of Lies','https://codeforces.com/problemset/problem/1548/A',1,3),(9456,'How Many Paths?','https://codeforces.com/problemset/problem/1547/G',2,3),(9457,'Array Stabilization (GCD version)','https://codeforces.com/problemset/problem/1547/F',2,3),(9458,'Air Conditioners','https://codeforces.com/problemset/problem/1547/E',1,3),(9459,'Co-growing Sequence','https://codeforces.com/problemset/problem/1547/D',1,3),(9460,'Pair Programming','https://codeforces.com/problemset/problem/1547/C',1,3),(9461,'Alphabetical Strings','https://codeforces.com/problemset/problem/1547/B',1,3),(9462,'Shortest Path with Obstacle','https://codeforces.com/problemset/problem/1547/A',1,3),(9463,'AquaMoon and Stolen String','https://codeforces.com/problemset/problem/1546/B',1,3),(9464,'AquaMoon and Two Arrays','https://codeforces.com/problemset/problem/1546/A',1,3),(9465,'AquaMoon and Potatoes','https://codeforces.com/problemset/problem/1545/F',3,3),(9466,'AquaMoon and Time Stop (hard version)','https://codeforces.com/problemset/problem/1545/E2',3,3),(9467,'AquaMoon and Time Stop (easy version)','https://codeforces.com/problemset/problem/1545/E1',3,3),(9468,'AquaMoon and Wrong Coordinate','https://codeforces.com/problemset/problem/1545/D',3,3),(9469,'AquaMoon and Permutations','https://codeforces.com/problemset/problem/1545/C',3,3),(9470,'AquaMoon and Chess','https://codeforces.com/problemset/problem/1545/B',2,3),(9471,'AquaMoon and Strange Sort','https://codeforces.com/problemset/problem/1545/A',1,3),(9472,'The Final Pursuit','https://codeforces.com/problemset/problem/1543/E',3,3),(9473,'RPD and Rap Sheet (Hard Version)','https://codeforces.com/problemset/problem/1543/D2',2,3),(9474,'RPD and Rap Sheet (Easy Version)','https://codeforces.com/problemset/problem/1543/D1',2,3),(9475,'Need for Pink Slips','https://codeforces.com/problemset/problem/1543/C',2,3),(9476,'Customising the Track','https://codeforces.com/problemset/problem/1543/B',1,3),(9477,'Exciting Bets','https://codeforces.com/problemset/problem/1543/A',1,3),(9478,'Abnormal Permutation Pairs (hard version)','https://codeforces.com/problemset/problem/1542/E2',3,3),(9479,'Abnormal Permutation Pairs (easy version)','https://codeforces.com/problemset/problem/1542/E1',2,3),(9480,'Priority Queue','https://codeforces.com/problemset/problem/1542/D',2,3),(9481,'Strange Function','https://codeforces.com/problemset/problem/1542/C',2,3),(9482,'Plus and Multiply','https://codeforces.com/problemset/problem/1542/B',1,3),(9483,'Odd Set','https://codeforces.com/problemset/problem/1542/A',1,3),(9484,'Pleasant Pairs','https://codeforces.com/problemset/problem/1541/B',1,3),(9485,'Pretty Permutations','https://codeforces.com/problemset/problem/1541/A',1,3),(9486,'Tasty Dishes','https://codeforces.com/problemset/problem/1540/E',3,3),(9487,'Inverse Inversions','https://codeforces.com/problemset/problem/1540/D',3,3),(9488,'Converging Array (Hard Version)','https://codeforces.com/problemset/problem/1540/C2',3,3),(9489,'Converging Array (Easy Version)','https://codeforces.com/problemset/problem/1540/C1',3,3),(9490,'Tree Array','https://codeforces.com/problemset/problem/1540/B',2,3),(9491,'Great Graphs','https://codeforces.com/problemset/problem/1540/A',1,3),(9492,'Strange Array','https://codeforces.com/problemset/problem/1539/F',3,3),(9493,'Game with Cards','https://codeforces.com/problemset/problem/1539/E',2,3),(9494,'PriceFixed','https://codeforces.com/problemset/problem/1539/D',2,3),(9495,'Stable Groups','https://codeforces.com/problemset/problem/1539/C',1,3),(9496,'Love Song','https://codeforces.com/problemset/problem/1539/B',1,3),(9497,'Contest Start','https://codeforces.com/problemset/problem/1539/A',1,3),(9498,'Gift Set','https://codeforces.com/problemset/problem/1538/G',2,3),(9499,'Interesting Function','https://codeforces.com/problemset/problem/1538/F',1,3),(9500,'Funny Substrings','https://codeforces.com/problemset/problem/1538/E',2,3),(9501,'Another Problem About Dividing Numbers','https://codeforces.com/problemset/problem/1538/D',2,3),(9502,'Number of Pairs','https://codeforces.com/problemset/problem/1538/C',1,3),(9503,'Friends and Candies','https://codeforces.com/problemset/problem/1538/B',1,3),(9504,'Stone Game','https://codeforces.com/problemset/problem/1538/A',1,3),(9505,'Figure Fixing','https://codeforces.com/problemset/problem/1537/F',2,3),(9506,'Erase and Extend (Hard Version)','https://codeforces.com/problemset/problem/1537/E2',2,3),(9507,'Erase and Extend (Easy Version)','https://codeforces.com/problemset/problem/1537/E1',2,3),(9508,'Deleting Divisors','https://codeforces.com/problemset/problem/1537/D',2,3),(9509,'Challenging Cliffs','https://codeforces.com/problemset/problem/1537/C',1,3),(9510,'Bad Boy','https://codeforces.com/problemset/problem/1537/B',1,3),(9511,'Arithmetic Array','https://codeforces.com/problemset/problem/1537/A',1,3),(9512,'Omkar and Akmar','https://codeforces.com/problemset/problem/1536/F',3,3),(9513,'Omkar and Forest','https://codeforces.com/problemset/problem/1536/E',2,3),(9514,'Omkar and Medians','https://codeforces.com/problemset/problem/1536/D',2,3),(9515,'Diluc and Kaeya','https://codeforces.com/problemset/problem/1536/C',1,3),(9516,'Prinzessin der Verurteilung','https://codeforces.com/problemset/problem/1536/B',1,3),(9517,'Omkar and Bad Story','https://codeforces.com/problemset/problem/1536/A',1,3),(9518,'String Distance','https://codeforces.com/problemset/problem/1535/F',3,3),(9519,'Gold Transfer','https://codeforces.com/problemset/problem/1535/E',2,3),(9520,'Playoff Tournament','https://codeforces.com/problemset/problem/1535/D',2,3),(9521,'Unstable String','https://codeforces.com/problemset/problem/1535/C',1,3),(9522,'Array Reodering','https://codeforces.com/problemset/problem/1535/B',1,3),(9523,'Fair Playoff','https://codeforces.com/problemset/problem/1535/A',1,3),(9524,'Lost Nodes','https://codeforces.com/problemset/problem/1534/H',3,3),(9525,'A New Beginning','https://codeforces.com/problemset/problem/1534/G',3,3),(9526,'Falling Sand (Hard Version)','https://codeforces.com/problemset/problem/1534/F2',3,3),(9527,'Falling Sand (Easy Version)','https://codeforces.com/problemset/problem/1534/F1',2,3),(9528,'Lost Array','https://codeforces.com/problemset/problem/1534/E',2,3),(9529,'Lost Tree','https://codeforces.com/problemset/problem/1534/D',2,3),(9530,'Little Alawn\'s Puzzle','https://codeforces.com/problemset/problem/1534/C',1,3),(9531,'Histogram Ugliness','https://codeforces.com/problemset/problem/1534/B',1,3),(9532,'Colour the Flag','https://codeforces.com/problemset/problem/1534/A',1,3),(9533,'Pawns','https://codeforces.com/problemset/problem/1533/J',6,3),(9534,'Excursions','https://codeforces.com/problemset/problem/1533/I',6,3),(9535,'Submatrices','https://codeforces.com/problemset/problem/1533/H',6,3),(9536,'Biome Map','https://codeforces.com/problemset/problem/1533/G',6,3),(9537,'Binary String Partition','https://codeforces.com/problemset/problem/1533/F',6,3),(9538,'Chess Team Forming','https://codeforces.com/problemset/problem/1533/E',6,3),(9539,'String Searching','https://codeforces.com/problemset/problem/1533/D',6,3),(9540,'Sweets','https://codeforces.com/problemset/problem/1533/C',6,3),(9541,'Nearest Point Function','https://codeforces.com/problemset/problem/1533/B',6,3),(9542,'Travel to Bertown','https://codeforces.com/problemset/problem/1533/A',6,3),(9543,'Prefixes and Suffixes','https://codeforces.com/problemset/problem/1532/F',6,3),(9544,'Good Array','https://codeforces.com/problemset/problem/1532/E',6,3),(9545,'Teams Forming','https://codeforces.com/problemset/problem/1532/D',6,3),(9546,'Uniform String','https://codeforces.com/problemset/problem/1532/C',6,3),(9547,'Frog Jumping','https://codeforces.com/problemset/problem/1532/B',6,3),(9548,'A+B (Trial Problem)','https://codeforces.com/problemset/problem/1532/A',6,3),(9549,'Сортировка слиянием','https://codeforces.com/problemset/problem/1531/E3',6,3),(9550,'Сортировка слиянием','https://codeforces.com/problemset/problem/1531/E2',6,3),(9551,'Сортировка слиянием','https://codeforces.com/problemset/problem/1531/E1',6,3),(9552,'Редактируем Зингер | color','https://codeforces.com/problemset/problem/1531/D',6,3),(9553,'Симметричный амфитеатр','https://codeforces.com/problemset/problem/1531/C',6,3),(9554,'Мониторинг','https://codeforces.com/problemset/problem/1531/B2',6,3),(9555,'Мониторинг','https://codeforces.com/problemset/problem/1531/B1',6,3),(9556,'Зингер | color','https://codeforces.com/problemset/problem/1531/A',6,3),(9557,'Turing\'s Award','https://codeforces.com/problemset/problem/1530/H',3,3),(9558,'What a Reversal','https://codeforces.com/problemset/problem/1530/G',3,3),(9559,'Bingo','https://codeforces.com/problemset/problem/1530/F',3,3),(9560,'Minimax','https://codeforces.com/problemset/problem/1530/E',2,3),(9561,'Secret Santa','https://codeforces.com/problemset/problem/1530/D',2,3),(9562,'Pursuit','https://codeforces.com/problemset/problem/1530/C',1,3),(9563,'Putting Plates','https://codeforces.com/problemset/problem/1530/B',1,3),(9564,'Binary Decimal','https://codeforces.com/problemset/problem/1530/A',1,3),(9565,'Sifid and Strange Subsequences','https://codeforces.com/problemset/problem/1529/B',1,3),(9566,'Eshag Loves Big Arrays','https://codeforces.com/problemset/problem/1529/A',1,3),(9567,'AmShZ Farm','https://codeforces.com/problemset/problem/1528/F',3,3),(9568,'Mashtali and Hagh Trees','https://codeforces.com/problemset/problem/1528/E',3,3),(9569,'It\'s a bird! No, it\'s a plane! No, it\'s AaParsa!','https://codeforces.com/problemset/problem/1528/D',2,3),(9570,'Trees of Tranquillity','https://codeforces.com/problemset/problem/1528/C',2,3),(9571,'Kavi on Pairing Duty','https://codeforces.com/problemset/problem/1528/B',2,3),(9572,'Parsa\'s Humongous Tree','https://codeforces.com/problemset/problem/1528/A',2,3),(9573,'Partition Game','https://codeforces.com/problemset/problem/1527/E',2,3),(9574,'MEX Tree','https://codeforces.com/problemset/problem/1527/D',2,3),(9575,'Sequence Pair Weight','https://codeforces.com/problemset/problem/1527/C',2,3),(9576,'Palindrome Game (hard version)','https://codeforces.com/problemset/problem/1527/B2',2,3),(9577,'Palindrome Game (easy version)','https://codeforces.com/problemset/problem/1527/B1',1,3),(9578,'And Then There Were K','https://codeforces.com/problemset/problem/1527/A',1,3),(9579,'Median Queries','https://codeforces.com/problemset/problem/1526/F',3,3),(9580,'Oolimry and Suffix Array','https://codeforces.com/problemset/problem/1526/E',2,3),(9581,'Kill Anton','https://codeforces.com/problemset/problem/1526/D',2,3),(9582,'Potions (Hard Version)','https://codeforces.com/problemset/problem/1526/C2',2,3),(9583,'Potions (Easy Version)','https://codeforces.com/problemset/problem/1526/C1',1,3),(9584,'I Hate 1111','https://codeforces.com/problemset/problem/1526/B',1,3),(9585,'Mean Inequality','https://codeforces.com/problemset/problem/1526/A',1,3),(9586,'Goblins And Gnomes','https://codeforces.com/problemset/problem/1525/F',3,3),(9587,'Assimilation IV','https://codeforces.com/problemset/problem/1525/E',2,3),(9588,'Armchairs','https://codeforces.com/problemset/problem/1525/D',2,3),(9589,'Robot Collisions','https://codeforces.com/problemset/problem/1525/C',2,3),(9590,'Permutation Sort','https://codeforces.com/problemset/problem/1525/B',1,3),(9591,'Potion-making','https://codeforces.com/problemset/problem/1525/A',1,3),(9592,'Hopping Around the Array ','https://codeforces.com/problemset/problem/1523/H',3,3),(9593,'Try Booking','https://codeforces.com/problemset/problem/1523/G',3,3),(9594,'Favorite Game','https://codeforces.com/problemset/problem/1523/F',3,3),(9595,'Crypto Lights','https://codeforces.com/problemset/problem/1523/E',3,3),(9596,'Love-Hate','https://codeforces.com/problemset/problem/1523/D',2,3),(9597,'Compression and Expansion','https://codeforces.com/problemset/problem/1523/C',2,3),(9598,'Lord of the Values','https://codeforces.com/problemset/problem/1523/B',1,3),(9599,'Game of Life','https://codeforces.com/problemset/problem/1523/A',1,3),(9600,'Nastia and a Beautiful Matrix','https://codeforces.com/problemset/problem/1521/E',3,3),(9601,'Nastia Plays with a Tree','https://codeforces.com/problemset/problem/1521/D',2,3),(9602,'Nastia and a Hidden Permutation','https://codeforces.com/problemset/problem/1521/C',2,3),(9603,'Nastia and a Good Array','https://codeforces.com/problemset/problem/1521/B',1,3),(9604,'Nastia and Nearly Good Numbers','https://codeforces.com/problemset/problem/1521/A',1,3),(9605,'To Go Or Not To Go?','https://codeforces.com/problemset/problem/1520/G',2,3),(9606,'Guess the K-th Zero (Hard version)','https://codeforces.com/problemset/problem/1520/F2',2,3),(9607,'Guess the K-th Zero (Easy version)','https://codeforces.com/problemset/problem/1520/F1',2,3),(9608,'Arranging The Sheep','https://codeforces.com/problemset/problem/1520/E',1,3),(9609,'Same Differences','https://codeforces.com/problemset/problem/1520/D',1,3),(9610,'Not Adjacent Matrix','https://codeforces.com/problemset/problem/1520/C',1,3),(9611,'Ordinary Numbers','https://codeforces.com/problemset/problem/1520/B',1,3),(9612,'Do Not Be Distracted!','https://codeforces.com/problemset/problem/1520/A',1,3),(9613,'Chests and Keys','https://codeforces.com/problemset/problem/1519/F',3,3),(9614,'Off by One','https://codeforces.com/problemset/problem/1519/E',3,3),(9615,'Maximum Sum of Products','https://codeforces.com/problemset/problem/1519/D',2,3),(9616,'Berland Regional','https://codeforces.com/problemset/problem/1519/C',1,3),(9617,'The Cake Is a Lie','https://codeforces.com/problemset/problem/1519/B',1,3),(9618,'Red and Blue Beans','https://codeforces.com/problemset/problem/1519/A',1,3),(9619,'Fly Around the World','https://codeforces.com/problemset/problem/1517/H',3,3),(9620,'Starry Night Camping','https://codeforces.com/problemset/problem/1517/G',3,3),(9621,'Reunion','https://codeforces.com/problemset/problem/1517/F',3,3),(9622,'Group Photo','https://codeforces.com/problemset/problem/1517/E',2,3),(9623,'Explorer Space','https://codeforces.com/problemset/problem/1517/D',2,3),(9624,'Fillomino 2','https://codeforces.com/problemset/problem/1517/C',1,3),(9625,'Morning Jogging','https://codeforces.com/problemset/problem/1517/B',1,3),(9626,'Sum of 2050','https://codeforces.com/problemset/problem/1517/A',1,3),(9627,'Baby Ehab Plays with Permutations','https://codeforces.com/problemset/problem/1516/E',2,3),(9628,'Cut','https://codeforces.com/problemset/problem/1516/D',2,3),(9629,'Baby Ehab Partitions Again','https://codeforces.com/problemset/problem/1516/C',2,3),(9630,'AGAGA XOOORRR','https://codeforces.com/problemset/problem/1516/B',1,3),(9631,'Tit for Tat','https://codeforces.com/problemset/problem/1516/A',1,3),(9632,'Phoenix and Diamonds','https://codeforces.com/problemset/problem/1515/I',3,3),(9633,'Phoenix and Bits','https://codeforces.com/problemset/problem/1515/H',3,3),(9634,'Phoenix and Odometers','https://codeforces.com/problemset/problem/1515/G',3,3),(9635,'Phoenix and Earthquake','https://codeforces.com/problemset/problem/1515/F',3,3),(9636,'Phoenix and Computers','https://codeforces.com/problemset/problem/1515/E',2,3),(9637,'Phoenix and Socks','https://codeforces.com/problemset/problem/1515/D',1,3),(9638,'Phoenix and Towers','https://codeforces.com/problemset/problem/1515/C',1,3),(9639,'Phoenix and Puzzle','https://codeforces.com/problemset/problem/1515/B',1,3),(9640,'Phoenix and Gold','https://codeforces.com/problemset/problem/1515/A',1,3),(9641,'Baby Ehab\'s Hyper Apartment','https://codeforces.com/problemset/problem/1514/E',3,3),(9642,'Cut and Stick','https://codeforces.com/problemset/problem/1514/D',2,3),(9643,'Product 1 Modulo N','https://codeforces.com/problemset/problem/1514/C',2,3),(9644,'AND 0, Sum Big','https://codeforces.com/problemset/problem/1514/B',1,3),(9645,'Perfectly Imperfect Array','https://codeforces.com/problemset/problem/1514/A',1,3),(9646,'Swapping Problem','https://codeforces.com/problemset/problem/1513/F',2,3),(9647,'Cost Equilibrium','https://codeforces.com/problemset/problem/1513/E',2,3),(9648,'GCD and MST','https://codeforces.com/problemset/problem/1513/D',2,3),(9649,'Add One','https://codeforces.com/problemset/problem/1513/C',2,3),(9650,'AND Sequences','https://codeforces.com/problemset/problem/1513/B',1,3),(9651,'Array and Peaks','https://codeforces.com/problemset/problem/1513/A',1,3),(9652,'Short Task','https://codeforces.com/problemset/problem/1512/G',2,3),(9653,'Education','https://codeforces.com/problemset/problem/1512/F',2,3),(9654,'Permutation by Sum','https://codeforces.com/problemset/problem/1512/E',2,3),(9655,'Corrupted Array','https://codeforces.com/problemset/problem/1512/D',1,3),(9656,'A-B Palindrome','https://codeforces.com/problemset/problem/1512/C',1,3),(9657,'Almost Rectangle','https://codeforces.com/problemset/problem/1512/B',1,3),(9658,'Spy Detected!','https://codeforces.com/problemset/problem/1512/A',1,3),(9659,'Chips on a Board','https://codeforces.com/problemset/problem/1511/G',3,3),(9660,'Chainword','https://codeforces.com/problemset/problem/1511/F',3,3),(9661,'Colorings and Dominoes','https://codeforces.com/problemset/problem/1511/E',2,3),(9662,'Min Cost String','https://codeforces.com/problemset/problem/1511/D',2,3),(9663,'Yet Another Card Deck','https://codeforces.com/problemset/problem/1511/C',1,3),(9664,'GCD Length','https://codeforces.com/problemset/problem/1511/B',1,3),(9665,'Review Site','https://codeforces.com/problemset/problem/1511/A',1,3),(9666,'King\'s Task','https://codeforces.com/problemset/problem/1510/K',1,3),(9667,'Japanese Game','https://codeforces.com/problemset/problem/1510/J',3,3),(9668,'Is It Rated?','https://codeforces.com/problemset/problem/1510/I',3,3),(9669,'Hard Optimization','https://codeforces.com/problemset/problem/1510/H',3,3),(9670,'Guide','https://codeforces.com/problemset/problem/1510/G',2,3),(9671,'Fiber Shape','https://codeforces.com/problemset/problem/1510/F',3,3),(9672,'Equilibrium Point /\\textbackslash/\\textbackslash','https://codeforces.com/problemset/problem/1510/E',3,3),(9673,'Digits','https://codeforces.com/problemset/problem/1510/D',2,3),(9674,'Cactus Not Enough','https://codeforces.com/problemset/problem/1510/C',3,3),(9675,'Button Lock','https://codeforces.com/problemset/problem/1510/B',3,3),(9676,'ASCII Automata Art','https://codeforces.com/problemset/problem/1510/A',3,3),(9677,'The Sports Festival','https://codeforces.com/problemset/problem/1509/C',2,3),(9678,'TMT Document','https://codeforces.com/problemset/problem/1509/B',1,3),(9679,'Average Height','https://codeforces.com/problemset/problem/1509/A',1,3),(9680,'Optimal Encoding','https://codeforces.com/problemset/problem/1508/F',3,3),(9681,'Tree Calendar','https://codeforces.com/problemset/problem/1508/E',3,3),(9682,'Swap Pass','https://codeforces.com/problemset/problem/1508/D',3,3),(9683,'Complete the MST','https://codeforces.com/problemset/problem/1508/C',2,3),(9684,'Almost Sorted','https://codeforces.com/problemset/problem/1508/B',2,3),(9685,'Binary Literature','https://codeforces.com/problemset/problem/1508/A',2,3),(9686,'Maximize the Remaining String','https://codeforces.com/problemset/problem/1506/G',2,3),(9687,'Triangular Paths','https://codeforces.com/problemset/problem/1506/F',2,3),(9688,'Restoring the Permutation','https://codeforces.com/problemset/problem/1506/E',1,3),(9689,'Epic Transformation','https://codeforces.com/problemset/problem/1506/D',1,3),(9690,'Double-ended Strings','https://codeforces.com/problemset/problem/1506/C',1,3),(9691,'Partial Replacement','https://codeforces.com/problemset/problem/1506/B',1,3),(9692,'Strange Table','https://codeforces.com/problemset/problem/1506/A',1,3),(9693,'Mysterious language again, seriously?','https://codeforces.com/problemset/problem/1505/I',2,3),(9694,'L BREAK into program','https://codeforces.com/problemset/problem/1505/H',2,3),(9695,'Encoded message','https://codeforces.com/problemset/problem/1505/G',3,3),(9696,'Math','https://codeforces.com/problemset/problem/1505/F',2,3),(9697,'Cakewalk','https://codeforces.com/problemset/problem/1505/E',2,3),(9698,'Xenolith? Hippodrome?','https://codeforces.com/problemset/problem/1505/D',2,3),(9699,'Fibonacci Words','https://codeforces.com/problemset/problem/1505/C',1,3),(9700,'DMCA','https://codeforces.com/problemset/problem/1505/B',2,3),(9701,'Is it rated - 2','https://codeforces.com/problemset/problem/1505/A',1,3),(9702,'Flip the Bits','https://codeforces.com/problemset/problem/1504/B',1,3),(9703,' Déjà Vu','https://codeforces.com/problemset/problem/1504/A',1,3),(9704,'Balance the Cards','https://codeforces.com/problemset/problem/1503/F',3,3),(9705,'2-Coloring','https://codeforces.com/problemset/problem/1503/E',3,3),(9706,'Flip the Cards','https://codeforces.com/problemset/problem/1503/D',3,3),(9707,'Travelling Salesman Problem','https://codeforces.com/problemset/problem/1503/C',2,3),(9708,'3-Coloring','https://codeforces.com/problemset/problem/1503/B',2,3),(9709,'Balance the Bits','https://codeforces.com/problemset/problem/1503/A',2,3),(9710,'Napoleon Cake','https://codeforces.com/problemset/problem/1501/B',1,3),(9711,'Alexey and Train','https://codeforces.com/problemset/problem/1501/A',1,3),(9712,'Cupboards Jumps','https://codeforces.com/problemset/problem/1500/F',3,3),(9713,'Subset Trick','https://codeforces.com/problemset/problem/1500/E',3,3),(9714,'Tiles for Bathroom','https://codeforces.com/problemset/problem/1500/D',3,3),(9715,'Matrix Sorting','https://codeforces.com/problemset/problem/1500/C',3,3),(9716,'Two chandeliers','https://codeforces.com/problemset/problem/1500/B',2,3),(9717,'Going Home','https://codeforces.com/problemset/problem/1500/A',2,3),(9718,'Graph Coloring','https://codeforces.com/problemset/problem/1499/G',3,3),(9719,'Diameter Cuts','https://codeforces.com/problemset/problem/1499/F',2,3),(9720,'Chaotic Merge','https://codeforces.com/problemset/problem/1499/E',2,3),(9721,'The Number of Pairs','https://codeforces.com/problemset/problem/1499/D',2,3),(9722,'Minimum Grid Path','https://codeforces.com/problemset/problem/1499/C',1,3),(9723,'Binary Removals','https://codeforces.com/problemset/problem/1499/B',1,3),(9724,'Domino on Windowsill','https://codeforces.com/problemset/problem/1499/A',1,3),(9725,'Christmas Game','https://codeforces.com/problemset/problem/1498/F',2,3),(9726,'Two Houses','https://codeforces.com/problemset/problem/1498/E',2,3),(9727,'Bananas in a Microwave','https://codeforces.com/problemset/problem/1498/D',2,3),(9728,'Planar Reflections','https://codeforces.com/problemset/problem/1498/C',2,3),(9729,'Box Fitting','https://codeforces.com/problemset/problem/1498/B',1,3),(9730,'GCD Sum','https://codeforces.com/problemset/problem/1498/A',1,3),(9731,'Square-Free Division (hard version)','https://codeforces.com/problemset/problem/1497/E2',2,3),(9732,'Square-Free Division (easy version)','https://codeforces.com/problemset/problem/1497/E1',2,3),(9733,'Genius','https://codeforces.com/problemset/problem/1497/D',2,3),(9734,'k-LCM (hard version)','https://codeforces.com/problemset/problem/1497/C2',2,3),(9735,'k-LCM (easy version)','https://codeforces.com/problemset/problem/1497/C1',1,3),(9736,'M-arrays','https://codeforces.com/problemset/problem/1497/B',1,3),(9737,'Meximization','https://codeforces.com/problemset/problem/1497/A',1,3),(9738,'Max and Mex','https://codeforces.com/problemset/problem/1496/B',1,3),(9739,'Split it!','https://codeforces.com/problemset/problem/1496/A',1,3),(9740,'Squares','https://codeforces.com/problemset/problem/1495/F',3,3),(9741,'Qingshan and Daniel','https://codeforces.com/problemset/problem/1495/E',3,3),(9742,'BFS Trees','https://codeforces.com/problemset/problem/1495/D',3,3),(9743,'Garden of the Sun','https://codeforces.com/problemset/problem/1495/C',2,3),(9744,'Let\'s Go Hiking','https://codeforces.com/problemset/problem/1495/B',2,3),(9745,'Diamond Miner','https://codeforces.com/problemset/problem/1495/A',1,3),(9746,'Delete The Edges','https://codeforces.com/problemset/problem/1494/F',3,3),(9747,'A-Z Graph','https://codeforces.com/problemset/problem/1494/E',2,3),(9748,'Dogeforces','https://codeforces.com/problemset/problem/1494/D',2,3),(9749,'1D Sokoban','https://codeforces.com/problemset/problem/1494/C',2,3),(9750,'Berland Crossword','https://codeforces.com/problemset/problem/1494/B',1,3),(9751,'ABC String','https://codeforces.com/problemset/problem/1494/A',1,3),(9752,'Enchanted Matrix','https://codeforces.com/problemset/problem/1493/F',3,3),(9753,'Enormous XOR','https://codeforces.com/problemset/problem/1493/E',3,3),(9754,'GCD of an Array','https://codeforces.com/problemset/problem/1493/D',2,3),(9755,'K-beautiful Strings','https://codeforces.com/problemset/problem/1493/C',2,3),(9756,'Planet Lapituletti','https://codeforces.com/problemset/problem/1493/B',1,3),(9757,'Anti-knapsack','https://codeforces.com/problemset/problem/1493/A',1,3),(9758,'Almost Fault-Tolerant Database','https://codeforces.com/problemset/problem/1492/E',2,3),(9759,'Genius\'s Gambit','https://codeforces.com/problemset/problem/1492/D',2,3),(9760,'Maximum width','https://codeforces.com/problemset/problem/1492/C',1,3),(9761,'Card Deck','https://codeforces.com/problemset/problem/1492/B',1,3),(9762,'Three swimmers','https://codeforces.com/problemset/problem/1492/A',1,3),(9763,'Ruler Of The Zoo','https://codeforces.com/problemset/problem/1491/I',3,3),(9764,'Yuezheng Ling and Dynamic Tree','https://codeforces.com/problemset/problem/1491/H',3,3),(9765,'Switch and Flip','https://codeforces.com/problemset/problem/1491/G',3,3),(9766,'Magnets','https://codeforces.com/problemset/problem/1491/F',3,3),(9767,'Fib-tree','https://codeforces.com/problemset/problem/1491/E',2,3),(9768,'Zookeeper and The Infinite Zoo','https://codeforces.com/problemset/problem/1491/D',2,3),(9769,'Pekora and Trampoline','https://codeforces.com/problemset/problem/1491/C',2,3),(9770,'Minimal Cost','https://codeforces.com/problemset/problem/1491/B',1,3),(9771,'K-th Largest Value','https://codeforces.com/problemset/problem/1491/A',1,3),(9772,'Old Floppy Drive ','https://codeforces.com/problemset/problem/1490/G',2,3),(9773,'Equalize the Array','https://codeforces.com/problemset/problem/1490/F',1,3),(9774,'Accidental Victory','https://codeforces.com/problemset/problem/1490/E',1,3),(9775,'Permutation Transformation','https://codeforces.com/problemset/problem/1490/D',1,3),(9776,'Sum of Cubes','https://codeforces.com/problemset/problem/1490/C',1,3),(9777,'Balanced Remainders','https://codeforces.com/problemset/problem/1490/B',1,3),(9778,'Dense Array','https://codeforces.com/problemset/problem/1490/A',1,3),(9779,'Flower Shop','https://codeforces.com/problemset/problem/1488/J',3,3),(9780,'Demonic Invasion','https://codeforces.com/problemset/problem/1488/I',3,3),(9781,'Build From Suffixes','https://codeforces.com/problemset/problem/1488/H',3,3),(9782,'Painting Numbers','https://codeforces.com/problemset/problem/1488/G',2,3),(9783,'Dogecoin','https://codeforces.com/problemset/problem/1488/F',2,3),(9784,'Palindromic Doubles','https://codeforces.com/problemset/problem/1488/E',2,3),(9785,'Problemsolving Marathon','https://codeforces.com/problemset/problem/1488/D',2,3),(9786,'Two Policemen','https://codeforces.com/problemset/problem/1488/C',2,3),(9787,'RBS Deletion','https://codeforces.com/problemset/problem/1488/B',2,3),(9788,'From Zero To Y','https://codeforces.com/problemset/problem/1488/A',1,3),(9789,'String Counting','https://codeforces.com/problemset/problem/1487/G',3,3),(9790,'Ones','https://codeforces.com/problemset/problem/1487/F',3,3),(9791,'Cheap Dinner','https://codeforces.com/problemset/problem/1487/E',2,3),(9792,'Pythagorean Triples','https://codeforces.com/problemset/problem/1487/D',1,3),(9793,'Minimum Ties','https://codeforces.com/problemset/problem/1487/C',1,3),(9794,'Cat Cycle','https://codeforces.com/problemset/problem/1487/B',1,3),(9795,'Arena','https://codeforces.com/problemset/problem/1487/A',1,3),(9796,'Pairs of Paths','https://codeforces.com/problemset/problem/1486/F',3,3),(9797,'Paired Payment','https://codeforces.com/problemset/problem/1486/E',2,3),(9798,'Max Median','https://codeforces.com/problemset/problem/1486/D',2,3),(9799,'Guessing the Greatest (hard version)','https://codeforces.com/problemset/problem/1486/C2',2,3),(9800,'Guessing the Greatest (easy version)','https://codeforces.com/problemset/problem/1486/C1',2,3),(9801,'Eastern Exhibition','https://codeforces.com/problemset/problem/1486/B',1,3),(9802,'Shifting Stacks','https://codeforces.com/problemset/problem/1486/A',1,3),(9803,'Copy or Prefix Sum','https://codeforces.com/problemset/problem/1485/F',2,3),(9804,'Move and Swap','https://codeforces.com/problemset/problem/1485/E',2,3),(9805,'Multiples and Power Differences','https://codeforces.com/problemset/problem/1485/D',2,3),(9806,'Floor and Mod','https://codeforces.com/problemset/problem/1485/C',2,3),(9807,'Replace and Keep Sorted','https://codeforces.com/problemset/problem/1485/B',1,3),(9808,'Add and Divide','https://codeforces.com/problemset/problem/1485/A',1,3),(9809,'Exam','https://codeforces.com/problemset/problem/1482/H',3,3),(9810,'Vabank','https://codeforces.com/problemset/problem/1482/G',3,3),(9811,'Useful Edges','https://codeforces.com/problemset/problem/1482/F',2,3),(9812,'Skyline Photo','https://codeforces.com/problemset/problem/1482/E',2,3),(9813,'Playlist','https://codeforces.com/problemset/problem/1482/D',2,3),(9814,'Basic Diplomacy','https://codeforces.com/problemset/problem/1482/C',2,3),(9815,'Restore Modulo','https://codeforces.com/problemset/problem/1482/B',1,3),(9816,'Prison Break','https://codeforces.com/problemset/problem/1482/A',1,3),(9817,'AB Tree','https://codeforces.com/problemset/problem/1481/F',3,3),(9818,'Sorting Books','https://codeforces.com/problemset/problem/1481/E',2,3),(9819,'AB Graph','https://codeforces.com/problemset/problem/1481/D',2,3),(9820,'Fence Painting','https://codeforces.com/problemset/problem/1481/C',2,3),(9821,'New Colony','https://codeforces.com/problemset/problem/1481/B',1,3),(9822,'Space Navigation ','https://codeforces.com/problemset/problem/1481/A',1,3),(9823,'The Great Hero','https://codeforces.com/problemset/problem/1480/B',1,3),(9824,'Yet Another String Game','https://codeforces.com/problemset/problem/1480/A',1,3),(9825,'School Clubs','https://codeforces.com/problemset/problem/1479/E',3,3),(9826,'Odd Mineral Resource','https://codeforces.com/problemset/problem/1479/D',3,3),(9827,'Continuous City','https://codeforces.com/problemset/problem/1479/C',2,3),(9828,'Painting the Array II','https://codeforces.com/problemset/problem/1479/B2',2,3),(9829,'Painting the Array I','https://codeforces.com/problemset/problem/1479/B1',2,3),(9830,'Searching Local Minimum','https://codeforces.com/problemset/problem/1479/A',2,3),(9831,'Nezzar and Symmetric Array','https://codeforces.com/problemset/problem/1478/C',2,3),(9832,'Nezzar and Lucky Number','https://codeforces.com/problemset/problem/1478/B',1,3),(9833,'Nezzar and Colorful Balls','https://codeforces.com/problemset/problem/1478/A',1,3),(9834,'Nezzar and Chocolate Bars','https://codeforces.com/problemset/problem/1477/F',3,3),(9835,'Nezzar and Tournaments','https://codeforces.com/problemset/problem/1477/E',3,3),(9836,'Nezzar and Hidden Permutations','https://codeforces.com/problemset/problem/1477/D',3,3),(9837,'Nezzar and Nice Beatmap','https://codeforces.com/problemset/problem/1477/C',2,3),(9838,'Nezzar and Binary String','https://codeforces.com/problemset/problem/1477/B',2,3),(9839,'Nezzar and Board','https://codeforces.com/problemset/problem/1477/A',2,3),(9840,'Minimum Difference','https://codeforces.com/problemset/problem/1476/G',3,3),(9841,'Lanterns','https://codeforces.com/problemset/problem/1476/F',3,3),(9842,'Pattern Matching','https://codeforces.com/problemset/problem/1476/E',2,3),(9843,'Journey','https://codeforces.com/problemset/problem/1476/D',2,3),(9844,'Longest Simple Cycle','https://codeforces.com/problemset/problem/1476/C',2,3),(9845,'Inflation','https://codeforces.com/problemset/problem/1476/B',1,3),(9846,'K-divisible Sum','https://codeforces.com/problemset/problem/1476/A',1,3),(9847,'Strange Beauty','https://codeforces.com/problemset/problem/1475/G',2,3),(9848,'Unusual Matrix','https://codeforces.com/problemset/problem/1475/F',2,3),(9849,'Advertising Agency','https://codeforces.com/problemset/problem/1475/E',2,3),(9850,'Cleaning the Phone','https://codeforces.com/problemset/problem/1475/D',2,3),(9851,'Ball in Berland','https://codeforces.com/problemset/problem/1475/C',1,3),(9852,'New Year\'s Number','https://codeforces.com/problemset/problem/1475/B',1,3),(9853,'Odd Divisor','https://codeforces.com/problemset/problem/1475/A',1,3),(9854,'1 2 3 4 ...','https://codeforces.com/problemset/problem/1474/F',3,3),(9855,'What Is It?','https://codeforces.com/problemset/problem/1474/E',2,3),(9856,'Cleaning','https://codeforces.com/problemset/problem/1474/D',2,3),(9857,'Array Destruction','https://codeforces.com/problemset/problem/1474/C',2,3),(9858,'Different Divisors','https://codeforces.com/problemset/problem/1474/B',1,3),(9859,'Puzzle From the Future','https://codeforces.com/problemset/problem/1474/A',1,3),(9860,'Tiles','https://codeforces.com/problemset/problem/1473/G',3,3),(9861,'Strange Set','https://codeforces.com/problemset/problem/1473/F',3,3),(9862,'Minimum Path','https://codeforces.com/problemset/problem/1473/E',2,3),(9863,'Program','https://codeforces.com/problemset/problem/1473/D',2,3),(9864,'No More Inversions','https://codeforces.com/problemset/problem/1473/C',1,3),(9865,'String LCM','https://codeforces.com/problemset/problem/1473/B',1,3),(9866,'Replacing Elements','https://codeforces.com/problemset/problem/1473/A',1,3),(9867,'Moving to the Capital','https://codeforces.com/problemset/problem/1472/G',2,3),(9868,'New Year\'s Puzzle','https://codeforces.com/problemset/problem/1472/F',2,3),(9869,'Correct Placement','https://codeforces.com/problemset/problem/1472/E',2,3),(9870,'Even-Odd Game','https://codeforces.com/problemset/problem/1472/D',1,3),(9871,'Long Jumps','https://codeforces.com/problemset/problem/1472/C',1,3),(9872,'Fair Division','https://codeforces.com/problemset/problem/1472/B',1,3),(9873,'Cards for Friends','https://codeforces.com/problemset/problem/1472/A',1,3),(9874,'Strange List','https://codeforces.com/problemset/problem/1471/B',1,3),(9875,'Strange Partition','https://codeforces.com/problemset/problem/1471/A',1,3),(9876,'Strange Covering','https://codeforces.com/problemset/problem/1470/F',3,3),(9877,'Strange Permutation','https://codeforces.com/problemset/problem/1470/E',3,3),(9878,'Strange Housing','https://codeforces.com/problemset/problem/1470/D',2,3),(9879,'Strange Shuffle','https://codeforces.com/problemset/problem/1470/C',2,3),(9880,'Strange Definition','https://codeforces.com/problemset/problem/1470/B',2,3),(9881,'Strange Birthday Party','https://codeforces.com/problemset/problem/1470/A',1,3),(9882,'Power Sockets','https://codeforces.com/problemset/problem/1469/F',3,3),(9883,'A Bit Similar','https://codeforces.com/problemset/problem/1469/E',2,3),(9884,'Ceil Divisions','https://codeforces.com/problemset/problem/1469/D',2,3),(9885,'Building a Fence','https://codeforces.com/problemset/problem/1469/C',2,3),(9886,'Red and Blue','https://codeforces.com/problemset/problem/1469/B',1,3),(9887,'Regular Bracket Sequence','https://codeforces.com/problemset/problem/1469/A',1,3),(9888,'Waste Sorting','https://codeforces.com/problemset/problem/1468/N',1,3),(9889,'Similar Sets','https://codeforces.com/problemset/problem/1468/M',2,3),(9890,'Prime Divisors Selection','https://codeforces.com/problemset/problem/1468/L',3,3),(9891,'The Robot','https://codeforces.com/problemset/problem/1468/K',2,3),(9892,'Road Reform','https://codeforces.com/problemset/problem/1468/J',2,3),(9893,'Plane Tiling','https://codeforces.com/problemset/problem/1468/I',2,3),(9894,'K and Medians','https://codeforces.com/problemset/problem/1468/H',2,3),(9895,'Hobbits','https://codeforces.com/problemset/problem/1468/G',2,3),(9896,'Full Turn','https://codeforces.com/problemset/problem/1468/F',2,3),(9897,'Four Segments','https://codeforces.com/problemset/problem/1468/E',1,3),(9898,'Firecrackers','https://codeforces.com/problemset/problem/1468/D',2,3),(9899,'Berpizza','https://codeforces.com/problemset/problem/1468/C',1,3),(9900,'Bakery','https://codeforces.com/problemset/problem/1468/B',3,3),(9901,'LaIS','https://codeforces.com/problemset/problem/1468/A',2,3),(9902,'Distinctive Roots in a Tree','https://codeforces.com/problemset/problem/1467/E',2,3),(9903,'Sum of Paths','https://codeforces.com/problemset/problem/1467/D',2,3),(9904,'Three Bags','https://codeforces.com/problemset/problem/1467/C',2,3),(9905,'Hills And Valleys','https://codeforces.com/problemset/problem/1467/B',2,3),(9906,'Wizard of Orz','https://codeforces.com/problemset/problem/1467/A',1,3),(9907,'The Riddle of the Sphinx','https://codeforces.com/problemset/problem/1466/I',3,3),(9908,'Finding satisfactory solutions','https://codeforces.com/problemset/problem/1466/H',3,3),(9909,'Song of the Sirens','https://codeforces.com/problemset/problem/1466/G',3,3),(9910,'Euclid\'s nightmare','https://codeforces.com/problemset/problem/1466/F',2,3),(9911,'Apollo versus Pan','https://codeforces.com/problemset/problem/1466/E',2,3),(9912,'13th Labour of Heracles','https://codeforces.com/problemset/problem/1466/D',1,3),(9913,'Canine poetry','https://codeforces.com/problemset/problem/1466/C',1,3),(9914,'Last minute enhancements','https://codeforces.com/problemset/problem/1466/B',1,3),(9915,'Bovine Dilemma','https://codeforces.com/problemset/problem/1466/A',1,3),(9916,'My Beautiful Madness','https://codeforces.com/problemset/problem/1464/F',3,3),(9917,'Max Correct Set','https://codeforces.com/problemset/problem/1463/F',3,3),(9918,'Plan of Lectures','https://codeforces.com/problemset/problem/1463/E',2,3),(9919,'Pairs','https://codeforces.com/problemset/problem/1463/D',2,3),(9920,'Busy Robot','https://codeforces.com/problemset/problem/1463/C',2,3),(9921,'Find The Array','https://codeforces.com/problemset/problem/1463/B',1,3),(9922,'Dungeon','https://codeforces.com/problemset/problem/1463/A',1,3),(9923,'The Treasure of The Segments','https://codeforces.com/problemset/problem/1462/F',2,3),(9924,'Close Tuples (hard version)','https://codeforces.com/problemset/problem/1462/E2',2,3),(9925,'Close Tuples (easy version)','https://codeforces.com/problemset/problem/1462/E1',1,3),(9926,'Add to Neighbour and Remove','https://codeforces.com/problemset/problem/1462/D',1,3),(9927,'Unique Number','https://codeforces.com/problemset/problem/1462/C',1,3),(9928,'Last Year\'s Substring','https://codeforces.com/problemset/problem/1462/B',1,3),(9929,'Favorite Sequence','https://codeforces.com/problemset/problem/1462/A',1,3),(9930,'Mathematical Expression','https://codeforces.com/problemset/problem/1461/F',3,3),(9931,'Water Level','https://codeforces.com/problemset/problem/1461/E',2,3),(9932,'Divide and Summarize','https://codeforces.com/problemset/problem/1461/D',2,3),(9933,'Random Events','https://codeforces.com/problemset/problem/1461/C',1,3),(9934,'Find the Spruce','https://codeforces.com/problemset/problem/1461/B',1,3),(9935,'String Generation','https://codeforces.com/problemset/problem/1461/A',1,3),(9936,'Move and Turn','https://codeforces.com/problemset/problem/1459/B',1,3),(9937,'Red-Blue Shuffle','https://codeforces.com/problemset/problem/1459/A',1,3),(9938,'Range Diameter Sum','https://codeforces.com/problemset/problem/1458/F',3,3),(9939,'Nim Shortcuts','https://codeforces.com/problemset/problem/1458/E',3,3),(9940,'Flip and Reverse','https://codeforces.com/problemset/problem/1458/D',3,3),(9941,'Latin Square','https://codeforces.com/problemset/problem/1458/C',3,3),(9942,'Glass Half Spilled','https://codeforces.com/problemset/problem/1458/B',2,3),(9943,'Row GCD','https://codeforces.com/problemset/problem/1458/A',2,3),(9944,'XOR-ranges','https://codeforces.com/problemset/problem/1456/E',3,3),(9945,'Forbidden Value','https://codeforces.com/problemset/problem/1455/G',3,3),(9946,'String and Operations','https://codeforces.com/problemset/problem/1455/F',3,3),(9947,'Four Points','https://codeforces.com/problemset/problem/1455/E',2,3),(9948,'Sequence and Swaps','https://codeforces.com/problemset/problem/1455/D',2,3),(9949,'Ping-pong','https://codeforces.com/problemset/problem/1455/C',1,3),(9950,'Jumps','https://codeforces.com/problemset/problem/1455/B',1,3),(9951,'Strange Functions','https://codeforces.com/problemset/problem/1455/A',1,3),(9952,'Array Partition','https://codeforces.com/problemset/problem/1454/F',2,3),(9953,'Number of Simple Paths','https://codeforces.com/problemset/problem/1454/E',2,3),(9954,'Number into Sequence','https://codeforces.com/problemset/problem/1454/D',1,3),(9955,'Sequence Transformation','https://codeforces.com/problemset/problem/1454/C',1,3),(9956,'Unique Bid Auction','https://codeforces.com/problemset/problem/1454/B',1,3),(9957,'Special Permutation','https://codeforces.com/problemset/problem/1454/A',1,3),(9958,'Even Harder','https://codeforces.com/problemset/problem/1453/F',3,3),(9959,'Dog Snacks','https://codeforces.com/problemset/problem/1453/E',2,3),(9960,'Checkpoints','https://codeforces.com/problemset/problem/1453/D',2,3),(9961,'Triangles','https://codeforces.com/problemset/problem/1453/C',2,3),(9962,'Suffix Operations','https://codeforces.com/problemset/problem/1453/B',1,3),(9963,'Cancel the Trains','https://codeforces.com/problemset/problem/1453/A',1,3),(9964,'Game On Tree','https://codeforces.com/problemset/problem/1452/G',3,3),(9965,'Divide Powers','https://codeforces.com/problemset/problem/1452/F',3,3),(9966,'Two Editorials','https://codeforces.com/problemset/problem/1452/E',2,3),(9967,'Radio Towers','https://codeforces.com/problemset/problem/1452/D',2,3),(9968,'Two Brackets','https://codeforces.com/problemset/problem/1452/C',1,3),(9969,'Toy Blocks','https://codeforces.com/problemset/problem/1452/B',1,3),(9970,'Robot Program','https://codeforces.com/problemset/problem/1452/A',1,3),(9971,'Nullify The Matrix','https://codeforces.com/problemset/problem/1451/F',3,3),(9972,'Bitwise Queries (Hard Version)','https://codeforces.com/problemset/problem/1451/E2',2,3),(9973,'Bitwise Queries (Easy Version)','https://codeforces.com/problemset/problem/1451/E1',2,3),(9974,'Circle Game','https://codeforces.com/problemset/problem/1451/D',2,3),(9975,'String Equality','https://codeforces.com/problemset/problem/1451/C',1,3),(9976,'Non-Substring Subsequence','https://codeforces.com/problemset/problem/1451/B',1,3),(9977,'Subtract or Divide','https://codeforces.com/problemset/problem/1451/A',1,3),(9978,'Multithreading (Hard Version)','https://codeforces.com/problemset/problem/1450/H2',3,3),(9979,'Multithreading (Easy Version)','https://codeforces.com/problemset/problem/1450/H1',3,3),(9980,'Communism','https://codeforces.com/problemset/problem/1450/G',3,3),(9981,'The Struggling Contestant','https://codeforces.com/problemset/problem/1450/F',2,3),(9982,'Capitalism','https://codeforces.com/problemset/problem/1450/E',3,3),(9983,'Rating Compression','https://codeforces.com/problemset/problem/1450/D',2,3),(9984,'Errich-Tac-Toe (Hard Version)','https://codeforces.com/problemset/problem/1450/C2',2,3),(9985,'Errich-Tac-Toe (Easy Version)','https://codeforces.com/problemset/problem/1450/C1',2,3),(9986,'Balls of Steel','https://codeforces.com/problemset/problem/1450/B',1,3),(9987,'Avoid Trygub','https://codeforces.com/problemset/problem/1450/A',1,3),(9988,'Numbers Box','https://codeforces.com/problemset/problem/1447/B',1,3),(9989,'Add Candies','https://codeforces.com/problemset/problem/1447/A',1,3),(9990,'Line Distance','https://codeforces.com/problemset/problem/1446/F',3,3),(9991,'Long Recovery','https://codeforces.com/problemset/problem/1446/E',3,3),(9992,'Frequency Problem (Hard Version)','https://codeforces.com/problemset/problem/1446/D2',3,3),(9993,'Frequency Problem (Easy Version)','https://codeforces.com/problemset/problem/1446/D1',3,3),(9994,'Xor Tree','https://codeforces.com/problemset/problem/1446/C',2,3),(9995,'Catching Cheaters','https://codeforces.com/problemset/problem/1446/B',2,3),(9996,'Knapsack','https://codeforces.com/problemset/problem/1446/A',1,3),(9997,'Elimination','https://codeforces.com/problemset/problem/1445/B',1,3),(9998,'Array Rearrangment','https://codeforces.com/problemset/problem/1445/A',1,3),(9999,'Finding the Vertex','https://codeforces.com/problemset/problem/1444/E',3,3),(10000,'Rectangular Polyline','https://codeforces.com/problemset/problem/1444/D',3,3),(10001,'Team-Building','https://codeforces.com/problemset/problem/1444/C',2,3),(10002,'Divide and Sum','https://codeforces.com/problemset/problem/1444/B',2,3),(10003,'Division','https://codeforces.com/problemset/problem/1444/A',1,3),(10004,'Long Permutation','https://codeforces.com/problemset/problem/1443/E',2,3),(10005,'The Delivery Dilemma','https://codeforces.com/problemset/problem/1443/C',1,3),(10006,'Saving the City','https://codeforces.com/problemset/problem/1443/B',1,3),(10007,'Kids Seating','https://codeforces.com/problemset/problem/1443/A',1,3),(10008,'Differentiating Games','https://codeforces.com/problemset/problem/1442/F',3,3),(10009,'Black, White and Grey Tree','https://codeforces.com/problemset/problem/1442/E',3,3),(10010,'Sum','https://codeforces.com/problemset/problem/1442/D',3,3),(10011,'Graph Transpositions','https://codeforces.com/problemset/problem/1442/C',2,3),(10012,'Identify the Operations','https://codeforces.com/problemset/problem/1442/B',2,3),(10013,'Extreme Subtraction','https://codeforces.com/problemset/problem/1442/A',2,3),(10014,'Sum of Medians','https://codeforces.com/problemset/problem/1440/B',1,3),(10015,'Buy the String','https://codeforces.com/problemset/problem/1440/A',1,3),(10016,'Cheat and Win','https://codeforces.com/problemset/problem/1439/E',3,3),(10017,'INOI Final Contests','https://codeforces.com/problemset/problem/1439/D',3,3),(10018,'Greedy Shopping','https://codeforces.com/problemset/problem/1439/C',3,3),(10019,'Graph Subset Problem','https://codeforces.com/problemset/problem/1439/B',3,3),(10020,'Binary Table (Hard Version)','https://codeforces.com/problemset/problem/1439/A2',2,3),(10021,'Binary Table (Easy Version)','https://codeforces.com/problemset/problem/1439/A1',1,3),(10022,'Olha and Igor','https://codeforces.com/problemset/problem/1438/F',3,3),(10023,'Yurii Can Do Everything','https://codeforces.com/problemset/problem/1438/E',2,3),(10024,'Powerful Ksenia','https://codeforces.com/problemset/problem/1438/D',2,3),(10025,'Engineer Artem','https://codeforces.com/problemset/problem/1438/C',2,3),(10026,'Valerii Against Everyone','https://codeforces.com/problemset/problem/1438/B',1,3),(10027,'Specific Tastes of Andre ','https://codeforces.com/problemset/problem/1438/A',1,3),(10028,'Death DBMS','https://codeforces.com/problemset/problem/1437/G',3,3),(10029,'Emotional Fishermen','https://codeforces.com/problemset/problem/1437/F',3,3),(10030,'Make It Increasing','https://codeforces.com/problemset/problem/1437/E',2,3),(10031,'Minimal Height Tree','https://codeforces.com/problemset/problem/1437/D',2,3),(10032,'Chef Monocarp','https://codeforces.com/problemset/problem/1437/C',2,3),(10033,'Reverse Binary Strings','https://codeforces.com/problemset/problem/1437/B',1,3),(10034,'Marketing Scheme','https://codeforces.com/problemset/problem/1437/A',1,3),(10035,'Sum Over Subsets','https://codeforces.com/problemset/problem/1436/F',3,3),(10036,'Complicated Computations','https://codeforces.com/problemset/problem/1436/E',2,3),(10037,'Bandit in a City','https://codeforces.com/problemset/problem/1436/D',2,3),(10038,'Binary Search','https://codeforces.com/problemset/problem/1436/C',1,3),(10039,'Prime Square','https://codeforces.com/problemset/problem/1436/B',1,3),(10040,'Reorder','https://codeforces.com/problemset/problem/1436/A',1,3),(10041,'A Convex Game','https://codeforces.com/problemset/problem/1434/E',3,3),(10042,'Reducing Delivery Cost','https://codeforces.com/problemset/problem/1433/G',2,3),(10043,'Zero Remainder Sum ','https://codeforces.com/problemset/problem/1433/F',2,3),(10044,'Two Round Dances','https://codeforces.com/problemset/problem/1433/E',1,3),(10045,'Districts Connection','https://codeforces.com/problemset/problem/1433/D',1,3),(10046,'Dominant Piranha','https://codeforces.com/problemset/problem/1433/C',1,3),(10047,'Yet Another Bookshelf','https://codeforces.com/problemset/problem/1433/B',1,3),(10048,'Boring Apartments','https://codeforces.com/problemset/problem/1433/A',1,3),(10049,'Zero-XOR Array','https://codeforces.com/problemset/problem/1431/J',3,3),(10050,'Cyclic Shifts','https://codeforces.com/problemset/problem/1431/I',3,3),(10051,'Rogue-like Game','https://codeforces.com/problemset/problem/1431/H',3,3),(10052,'Number Deletion Game','https://codeforces.com/problemset/problem/1431/G',2,3),(10053,'Neural Network Problem','https://codeforces.com/problemset/problem/1431/F',2,3),(10054,'Chess Match','https://codeforces.com/problemset/problem/1431/E',2,3),(10055,'Used Markers','https://codeforces.com/problemset/problem/1431/D',1,3),(10056,'Black Friday','https://codeforces.com/problemset/problem/1431/C',2,3),(10057,'Polycarp and the Language of Gods','https://codeforces.com/problemset/problem/1431/B',1,3),(10058,'Selling Hamburgers','https://codeforces.com/problemset/problem/1431/A',1,3),(10059,'Yet Another DAG Problem','https://codeforces.com/problemset/problem/1430/G',3,3),(10060,'Realistic Gameplay','https://codeforces.com/problemset/problem/1430/F',3,3),(10061,'String Reversal','https://codeforces.com/problemset/problem/1430/E',2,3),(10062,'String Deletion','https://codeforces.com/problemset/problem/1430/D',2,3),(10063,'Numbers on Whiteboard','https://codeforces.com/problemset/problem/1430/C',1,3),(10064,'Barrels','https://codeforces.com/problemset/problem/1430/B',1,3),(10065,'Number of Apartments','https://codeforces.com/problemset/problem/1430/A',1,3),(10066,'Rotary Laser Lock','https://codeforces.com/problemset/problem/1428/H',3,3),(10067,'Lucky Numbers (Hard Version)','https://codeforces.com/problemset/problem/1428/G2',3,3),(10068,'Lucky Numbers (Easy Version)','https://codeforces.com/problemset/problem/1428/G1',3,3),(10069,'Fruit Sequences','https://codeforces.com/problemset/problem/1428/F',2,3),(10070,'Carrots for Rabbits','https://codeforces.com/problemset/problem/1428/E',2,3),(10071,'Bouncing Boomerangs','https://codeforces.com/problemset/problem/1428/D',2,3),(10072,'ABBB','https://codeforces.com/problemset/problem/1428/C',1,3),(10073,'Belted Rooms','https://codeforces.com/problemset/problem/1428/B',1,3),(10074,'Box is Pull','https://codeforces.com/problemset/problem/1428/A',1,3),(10075,'Prison Break','https://codeforces.com/problemset/problem/1427/H',3,3),(10076,'One Billion Shades of Grey','https://codeforces.com/problemset/problem/1427/G',3,3),(10077,'Boring Card Game','https://codeforces.com/problemset/problem/1427/F',3,3),(10078,'Xum','https://codeforces.com/problemset/problem/1427/E',2,3),(10079,'Unshuffling a Deck','https://codeforces.com/problemset/problem/1427/D',2,3),(10080,'The Hard Work of Paparazzi','https://codeforces.com/problemset/problem/1427/C',2,3),(10081,'Chess Cheater','https://codeforces.com/problemset/problem/1427/B',1,3),(10082,'Avoiding Zero','https://codeforces.com/problemset/problem/1427/A',1,3),(10083,'Number of Subsequences','https://codeforces.com/problemset/problem/1426/F',2,3),(10084,'Rock, Paper, Scissors','https://codeforces.com/problemset/problem/1426/E',2,3),(10085,'Non-zero Segments','https://codeforces.com/problemset/problem/1426/D',1,3),(10086,'Increase and Copy','https://codeforces.com/problemset/problem/1426/C',1,3),(10087,'Symmetric Matrix','https://codeforces.com/problemset/problem/1426/B',1,3),(10088,'Floor Number','https://codeforces.com/problemset/problem/1426/A',1,3),(10089,'Impressive Harvesting of The Orchard','https://codeforces.com/problemset/problem/1425/I',3,3),(10090,'Huge Boxes of Animal Toys','https://codeforces.com/problemset/problem/1425/H',1,3),(10091,'Flamingoes of Mystery','https://codeforces.com/problemset/problem/1425/F',1,3),(10092,'Excitation of Atoms','https://codeforces.com/problemset/problem/1425/E',2,3),(10093,'Danger of Mad Snakes','https://codeforces.com/problemset/problem/1425/D',2,3),(10094,'Captain of Knights','https://codeforces.com/problemset/problem/1425/C',3,3),(10095,'Blue and Red of Our Faculty!','https://codeforces.com/problemset/problem/1425/B',3,3),(10096,'Arena of Greed','https://codeforces.com/problemset/problem/1425/A',1,3),(10097,'Ancient Language','https://codeforces.com/problemset/problem/1424/M',2,3),(10098,'Years','https://codeforces.com/problemset/problem/1424/G',1,3),(10099,'BubbleSquare Tokens','https://codeforces.com/problemset/problem/1423/N',3,3),(10100,'Milutin\'s Plums','https://codeforces.com/problemset/problem/1423/M',3,3),(10101,'Light switches','https://codeforces.com/problemset/problem/1423/L',3,3),(10102,'Lonely Numbers','https://codeforces.com/problemset/problem/1423/K',2,3),(10103,'Bubble Cup hypothesis','https://codeforces.com/problemset/problem/1423/J',2,3),(10104,'Lookup Tables','https://codeforces.com/problemset/problem/1423/I',3,3),(10105,'Virus','https://codeforces.com/problemset/problem/1423/H',2,3),(10106,'Growing flowers','https://codeforces.com/problemset/problem/1423/G',3,3),(10107,'Coins','https://codeforces.com/problemset/problem/1423/F',3,3),(10108,'5G Antenna Towers','https://codeforces.com/problemset/problem/1423/E',3,3),(10109,'Does anyone else hate the wind?','https://codeforces.com/problemset/problem/1423/D',3,3),(10110,'Dušan\'s Railway','https://codeforces.com/problemset/problem/1423/C',3,3),(10111,'Valuable Paper','https://codeforces.com/problemset/problem/1423/B',2,3),(10112,'Wakanda Forever','https://codeforces.com/problemset/problem/1423/A',3,3),(10113,'Boring Queries','https://codeforces.com/problemset/problem/1422/F',3,3),(10114,'Minlexes','https://codeforces.com/problemset/problem/1422/E',3,3),(10115,'Returning Home','https://codeforces.com/problemset/problem/1422/D',2,3),(10116,'Bargain','https://codeforces.com/problemset/problem/1422/C',2,3),(10117,'Nice Matrix','https://codeforces.com/problemset/problem/1422/B',1,3),(10118,'Fence','https://codeforces.com/problemset/problem/1422/A',1,3),(10119,'Swedish Heroes','https://codeforces.com/problemset/problem/1421/E',3,3),(10120,'Hexagons','https://codeforces.com/problemset/problem/1421/D',2,3),(10121,'Palindromifier','https://codeforces.com/problemset/problem/1421/C',1,3),(10122,'Putting Bricks in the Wall','https://codeforces.com/problemset/problem/1421/B',1,3),(10123,'XORwice','https://codeforces.com/problemset/problem/1421/A',1,3),(10124,'Battle Lemmings','https://codeforces.com/problemset/problem/1420/E',2,3),(10125,'Rescue Nibel!','https://codeforces.com/problemset/problem/1420/D',2,3),(10126,'Pokémon Army (hard version)','https://codeforces.com/problemset/problem/1420/C2',2,3),(10127,'Pokémon Army (easy version)','https://codeforces.com/problemset/problem/1420/C1',1,3),(10128,'Rock and Lever','https://codeforces.com/problemset/problem/1420/B',1,3),(10129,'Cubes Sorting','https://codeforces.com/problemset/problem/1420/A',1,3),(10130,'Rain of Fire','https://codeforces.com/problemset/problem/1419/F',3,3),(10131,'Decryption','https://codeforces.com/problemset/problem/1419/E',2,3),(10132,'Sage\'s Birthday (hard version)','https://codeforces.com/problemset/problem/1419/D2',1,3),(10133,'Sage\'s Birthday (easy version)','https://codeforces.com/problemset/problem/1419/D1',1,3),(10134,'Killjoy','https://codeforces.com/problemset/problem/1419/C',1,3),(10135,'Stairs','https://codeforces.com/problemset/problem/1419/B',1,3),(10136,'Digit Game','https://codeforces.com/problemset/problem/1419/A',1,3),(10137,'Three Occurrences','https://codeforces.com/problemset/problem/1418/G',2,3),(10138,'Equal Product','https://codeforces.com/problemset/problem/1418/F',3,3),(10139,'Expected Damage','https://codeforces.com/problemset/problem/1418/E',2,3),(10140,'Trash Problem','https://codeforces.com/problemset/problem/1418/D',2,3),(10141,'Mortal Kombat Tower','https://codeforces.com/problemset/problem/1418/C',1,3),(10142,'Negative Prefixes','https://codeforces.com/problemset/problem/1418/B',1,3),(10143,'Buying Torches','https://codeforces.com/problemset/problem/1418/A',1,3),(10144,'Two Arrays','https://codeforces.com/problemset/problem/1417/B',1,3),(10145,'Copy-paste','https://codeforces.com/problemset/problem/1417/A',1,3),(10146,'Showing Off','https://codeforces.com/problemset/problem/1416/F',3,3),(10147,'Split','https://codeforces.com/problemset/problem/1416/E',3,3),(10148,'Graph and Queries','https://codeforces.com/problemset/problem/1416/D',3,3),(10149,'XOR Inverse','https://codeforces.com/problemset/problem/1416/C',2,3),(10150,'Make Them Equal','https://codeforces.com/problemset/problem/1416/B',2,3),(10151,'k-Amazing Numbers','https://codeforces.com/problemset/problem/1416/A',1,3),(10152,'Cakes for Clones','https://codeforces.com/problemset/problem/1415/F',3,3),(10153,'New Game Plus!','https://codeforces.com/problemset/problem/1415/E',2,3),(10154,'XOR-gun','https://codeforces.com/problemset/problem/1415/D',2,3),(10155,'Bouncing Ball','https://codeforces.com/problemset/problem/1415/C',1,3),(10156,'Repainting Street','https://codeforces.com/problemset/problem/1415/B',1,3),(10157,'Prison Break','https://codeforces.com/problemset/problem/1415/A',1,3),(10158,'Roads and Ramen','https://codeforces.com/problemset/problem/1413/F',3,3),(10159,'Solo mid Oracle','https://codeforces.com/problemset/problem/1413/E',2,3),(10160,'Shurikens','https://codeforces.com/problemset/problem/1413/D',2,3),(10161,'Perform Easily','https://codeforces.com/problemset/problem/1413/C',2,3),(10162,'A New Technique','https://codeforces.com/problemset/problem/1413/B',1,3),(10163,'Finding Sasuke','https://codeforces.com/problemset/problem/1413/A',1,3),(10164,'No Game No Life','https://codeforces.com/problemset/problem/1411/G',3,3),(10165,'The Thorny Path','https://codeforces.com/problemset/problem/1411/F',3,3),(10166,'Poman Numbers','https://codeforces.com/problemset/problem/1411/E',2,3),(10167,'Grime Zoo','https://codeforces.com/problemset/problem/1411/D',2,3),(10168,'Peaceful Rooks','https://codeforces.com/problemset/problem/1411/C',2,3),(10169,'Fair Numbers','https://codeforces.com/problemset/problem/1411/B',1,3),(10170,'In-game Chat','https://codeforces.com/problemset/problem/1411/A',1,3),(10171,'Subsequences of Length Two','https://codeforces.com/problemset/problem/1409/F',2,3),(10172,'Two Platforms','https://codeforces.com/problemset/problem/1409/E',2,3),(10173,'Decrease the Sum of Digits','https://codeforces.com/problemset/problem/1409/D',1,3),(10174,'Yet Another Array Restoration','https://codeforces.com/problemset/problem/1409/C',1,3),(10175,'Minimum Product','https://codeforces.com/problemset/problem/1409/B',1,3),(10176,'Yet Another Two Integers Problem','https://codeforces.com/problemset/problem/1409/A',1,3),(10177,'Bitwise Magic','https://codeforces.com/problemset/problem/1408/I',3,3),(10178,'Rainbow Triples','https://codeforces.com/problemset/problem/1408/H',3,3),(10179,'Clusterization Counting','https://codeforces.com/problemset/problem/1408/G',3,3),(10180,'Two Different','https://codeforces.com/problemset/problem/1408/F',2,3),(10181,'Avoid Rainbow Cycles','https://codeforces.com/problemset/problem/1408/E',2,3),(10182,'Searchlights','https://codeforces.com/problemset/problem/1408/D',2,3),(10183,'Discrete Acceleration','https://codeforces.com/problemset/problem/1408/C',1,3),(10184,'Arrays Sum','https://codeforces.com/problemset/problem/1408/B',1,3),(10185,'Circle Coloring','https://codeforces.com/problemset/problem/1408/A',1,3),(10186,'Egor in the Republic of Dagestan','https://codeforces.com/problemset/problem/1407/E',2,3),(10187,'Discrete Centrifugal Jumps','https://codeforces.com/problemset/problem/1407/D',2,3),(10188,'Chocolate Bunny','https://codeforces.com/problemset/problem/1407/C',2,3),(10189,'Big Vova','https://codeforces.com/problemset/problem/1407/B',1,3),(10190,'Ahahahahahahahaha','https://codeforces.com/problemset/problem/1407/A',1,3),(10191,'Deleting Numbers','https://codeforces.com/problemset/problem/1406/E',3,3),(10192,'Three Sequences','https://codeforces.com/problemset/problem/1406/D',2,3),(10193,'Link Cut Centroids','https://codeforces.com/problemset/problem/1406/C',2,3),(10194,'Maximum Product','https://codeforces.com/problemset/problem/1406/B',1,3),(10195,'Subset Mex','https://codeforces.com/problemset/problem/1406/A',1,3),(10196,'Array Cancellation','https://codeforces.com/problemset/problem/1405/B',1,3),(10197,'Permutation Forgery','https://codeforces.com/problemset/problem/1405/A',1,3),(10198,'Bricks','https://codeforces.com/problemset/problem/1404/E',3,3),(10199,'Game of Pairs','https://codeforces.com/problemset/problem/1404/D',3,3),(10200,'Fixed Point Removal','https://codeforces.com/problemset/problem/1404/C',2,3),(10201,'Tree Tag','https://codeforces.com/problemset/problem/1404/B',2,3),(10202,'Balanced Bitstring','https://codeforces.com/problemset/problem/1404/A',1,3),(10203,'Chess Rush','https://codeforces.com/problemset/problem/1403/C',3,3),(10204,'Spring cleaning','https://codeforces.com/problemset/problem/1403/B',2,3),(10205,'The Potion of Great Power','https://codeforces.com/problemset/problem/1403/A',2,3),(10206,'Star Trek','https://codeforces.com/problemset/problem/1402/C',3,3),(10207,'Roads','https://codeforces.com/problemset/problem/1402/B',3,3),(10208,'Fancy Fence','https://codeforces.com/problemset/problem/1402/A',2,3),(10209,'Reverse and Swap','https://codeforces.com/problemset/problem/1401/F',2,3),(10210,'Divide Square','https://codeforces.com/problemset/problem/1401/E',2,3),(10211,'Maximum Distributed Tree','https://codeforces.com/problemset/problem/1401/D',2,3),(10212,'Mere Array','https://codeforces.com/problemset/problem/1401/C',1,3),(10213,'Ternary Sequence','https://codeforces.com/problemset/problem/1401/B',1,3),(10214,'Distance and Axis','https://codeforces.com/problemset/problem/1401/A',1,3),(10215,'Mercenaries','https://codeforces.com/problemset/problem/1400/G',3,3),(10216,'x-prime Substrings','https://codeforces.com/problemset/problem/1400/F',3,3),(10217,'Clear the Multiset','https://codeforces.com/problemset/problem/1400/E',2,3),(10218,'Zigzags','https://codeforces.com/problemset/problem/1400/D',2,3),(10219,'Binary String Reconstruction','https://codeforces.com/problemset/problem/1400/C',1,3),(10220,'RPG Protagonist','https://codeforces.com/problemset/problem/1400/B',2,3),(10221,'String Similarity','https://codeforces.com/problemset/problem/1400/A',1,3),(10222,'Yet Another Segments Subset','https://codeforces.com/problemset/problem/1399/F',2,3),(10223,'Weights Division (hard version)','https://codeforces.com/problemset/problem/1399/E2',2,3),(10224,'Weights Division (easy version)','https://codeforces.com/problemset/problem/1399/E1',2,3),(10225,'Binary String To Subsequences','https://codeforces.com/problemset/problem/1399/D',1,3),(10226,'Boats Competition','https://codeforces.com/problemset/problem/1399/C',1,3),(10227,'Gifts Fixing','https://codeforces.com/problemset/problem/1399/B',1,3),(10228,'Remove Smallest','https://codeforces.com/problemset/problem/1399/A',1,3),(10229,'Running Competition','https://codeforces.com/problemset/problem/1398/G',3,3),(10230,'Controversial Rounds','https://codeforces.com/problemset/problem/1398/F',2,3),(10231,'Two Types of Spells','https://codeforces.com/problemset/problem/1398/E',2,3),(10232,'Colored Rectangles','https://codeforces.com/problemset/problem/1398/D',2,3),(10233,'Good Subarrays','https://codeforces.com/problemset/problem/1398/C',2,3),(10234,'Substring Removal Game','https://codeforces.com/problemset/problem/1398/B',1,3),(10235,'Bad Triangle','https://codeforces.com/problemset/problem/1398/A',1,3),(10236,'Power Sequence','https://codeforces.com/problemset/problem/1397/B',1,3),(10237,'Juggling Letters','https://codeforces.com/problemset/problem/1397/A',1,3),(10238,'Distance Matching','https://codeforces.com/problemset/problem/1396/E',3,3),(10239,'Rainbow Rectangles','https://codeforces.com/problemset/problem/1396/D',3,3),(10240,'Monster Invaders','https://codeforces.com/problemset/problem/1396/C',2,3),(10241,'Stoned Game','https://codeforces.com/problemset/problem/1396/B',2,3),(10242,'Multiples of Length','https://codeforces.com/problemset/problem/1396/A',2,3),(10243,'Boboniu and Bit Operations','https://codeforces.com/problemset/problem/1395/C',2,3),(10244,'Boboniu Plays Chess','https://codeforces.com/problemset/problem/1395/B',1,3),(10245,'Boboniu Likes to Color Balls','https://codeforces.com/problemset/problem/1395/A',1,3),(10246,'Boboniu and Banknote Collection','https://codeforces.com/problemset/problem/1394/E',3,3),(10247,'Boboniu and Jianghu','https://codeforces.com/problemset/problem/1394/D',3,3),(10248,'Boboniu and String','https://codeforces.com/problemset/problem/1394/C',3,3),(10249,'Boboniu Walks on Graph','https://codeforces.com/problemset/problem/1394/B',2,3),(10250,'Boboniu Chats with Du','https://codeforces.com/problemset/problem/1394/A',2,3),(10251,'Twilight and Ancient Scroll (harder version)','https://codeforces.com/problemset/problem/1393/E2',3,3),(10252,'Twilight and Ancient Scroll (easier version)','https://codeforces.com/problemset/problem/1393/E1',3,3),(10253,'Rarity and New Dress','https://codeforces.com/problemset/problem/1393/D',2,3),(10254,'Pinkie Pie Eats Patty-cakes','https://codeforces.com/problemset/problem/1393/C',2,3),(10255,'Applejack and Storages','https://codeforces.com/problemset/problem/1393/B',1,3),(10256,'Rainbow Dash, Fluttershy and Chess Coloring','https://codeforces.com/problemset/problem/1393/A',1,3),(10257,'Kevin and Grid','https://codeforces.com/problemset/problem/1392/I',3,3),(10258,'ZS Shuffles Cards','https://codeforces.com/problemset/problem/1392/H',3,3),(10259,'Omkar and Pies','https://codeforces.com/problemset/problem/1392/G',3,3),(10260,'Omkar and Landslide','https://codeforces.com/problemset/problem/1392/F',2,3),(10261,'Omkar and Duck','https://codeforces.com/problemset/problem/1392/E',2,3),(10262,'Omkar and Bed Wars','https://codeforces.com/problemset/problem/1392/D',2,3),(10263,'Omkar and Waterslide','https://codeforces.com/problemset/problem/1392/C',1,3),(10264,'Omkar and Infinity Clock','https://codeforces.com/problemset/problem/1392/B',1,3),(10265,'Omkar and Password','https://codeforces.com/problemset/problem/1392/A',1,3),(10266,'Pairs of Pairs','https://codeforces.com/problemset/problem/1391/E',3,3),(10267,'505','https://codeforces.com/problemset/problem/1391/D',2,3),(10268,'Cyclic Permutations ','https://codeforces.com/problemset/problem/1391/C',1,3),(10269,'Fix You','https://codeforces.com/problemset/problem/1391/B',1,3),(10270,'Suborrays','https://codeforces.com/problemset/problem/1391/A',1,3),(10271,'Directing Edges','https://codeforces.com/problemset/problem/1389/G',3,3),(10272,'Bicolored Segments','https://codeforces.com/problemset/problem/1389/F',3,3),(10273,'Calendar Ambiguity','https://codeforces.com/problemset/problem/1389/E',2,3),(10274,'Segment Intersections','https://codeforces.com/problemset/problem/1389/D',2,3),(10275,'Good String','https://codeforces.com/problemset/problem/1389/C',1,3),(10276,'Array Walk','https://codeforces.com/problemset/problem/1389/B',2,3),(10277,'LCM Problem','https://codeforces.com/problemset/problem/1389/A',1,3),(10278,'Uncle Bogdan and Projections','https://codeforces.com/problemset/problem/1388/E',3,3),(10279,'Captain Flint and Treasure','https://codeforces.com/problemset/problem/1388/D',2,3),(10280,'Uncle Bogdan and Country Happiness','https://codeforces.com/problemset/problem/1388/C',2,3),(10281,'Captain Flint and a Long Voyage','https://codeforces.com/problemset/problem/1388/B',1,3),(10282,'Captain Flint and Crew Recruitment','https://codeforces.com/problemset/problem/1388/A',1,3),(10283,'Viruses','https://codeforces.com/problemset/problem/1387/C',3,3),(10284,'Village (Maximum)','https://codeforces.com/problemset/problem/1387/B2',2,3),(10285,'Village (Minimum)','https://codeforces.com/problemset/problem/1387/B1',2,3),(10286,'Graph','https://codeforces.com/problemset/problem/1387/A',2,3),(10287,'Joker','https://codeforces.com/problemset/problem/1386/C',3,3),(10288,'Mixture','https://codeforces.com/problemset/problem/1386/B',3,3),(10289,'Colors','https://codeforces.com/problemset/problem/1386/A',3,3),(10290,'Columns Swaps','https://codeforces.com/problemset/problem/1385/G',2,3),(10291,'Removing Leaves','https://codeforces.com/problemset/problem/1385/F',2,3),(10292,'Directing Edges','https://codeforces.com/problemset/problem/1385/E',2,3),(10293,'a-Good String','https://codeforces.com/problemset/problem/1385/D',1,3),(10294,'Make It Good','https://codeforces.com/problemset/problem/1385/C',1,3),(10295,'Restore the Permutation by Merger','https://codeforces.com/problemset/problem/1385/B',1,3),(10296,'Three Pairwise Maximums','https://codeforces.com/problemset/problem/1385/A',1,3),(10297,'Koa and the Beach (Hard Version)','https://codeforces.com/problemset/problem/1384/B2',2,3),(10298,'Koa and the Beach (Easy Version)','https://codeforces.com/problemset/problem/1384/B1',2,3),(10299,'Common Prefixes','https://codeforces.com/problemset/problem/1384/A',1,3),(10300,'Special Edges','https://codeforces.com/problemset/problem/1383/F',3,3),(10301,'Strange Operation','https://codeforces.com/problemset/problem/1383/E',3,3),(10302,'Rearrange','https://codeforces.com/problemset/problem/1383/D',3,3),(10303,'String Transformation 2','https://codeforces.com/problemset/problem/1383/C',3,3),(10304,'GameGame','https://codeforces.com/problemset/problem/1383/B',2,3),(10305,'String Transformation 1','https://codeforces.com/problemset/problem/1383/A',2,3),(10306,'Sequential Nim','https://codeforces.com/problemset/problem/1382/B',1,3),(10307,'Common Subsequence','https://codeforces.com/problemset/problem/1382/A',1,3),(10308,'Origami','https://codeforces.com/problemset/problem/1381/E',3,3),(10309,'The Majestic Brown Tree Snake','https://codeforces.com/problemset/problem/1381/D',3,3),(10310,'Mastermind','https://codeforces.com/problemset/problem/1381/C',2,3),(10311,'Unmerge','https://codeforces.com/problemset/problem/1381/B',2,3),(10312,'Prefix Flip (Hard Version)','https://codeforces.com/problemset/problem/1381/A2',2,3),(10313,'Prefix Flip (Easy Version)','https://codeforces.com/problemset/problem/1381/A1',1,3),(10314,'Circular Dungeon','https://codeforces.com/problemset/problem/1380/G',3,3),(10315,'Strange Addition','https://codeforces.com/problemset/problem/1380/F',3,3),(10316,'Merging Towers','https://codeforces.com/problemset/problem/1380/E',2,3),(10317,'Berserk And Fireball','https://codeforces.com/problemset/problem/1380/D',2,3),(10318,'Create The Teams','https://codeforces.com/problemset/problem/1380/C',1,3),(10319,'Universal Solution','https://codeforces.com/problemset/problem/1380/B',1,3),(10320,'Three Indices','https://codeforces.com/problemset/problem/1380/A',1,3),(10321,'Chess Strikes Back (hard version)','https://codeforces.com/problemset/problem/1379/F2',3,3),(10322,'Chess Strikes Back (easy version)','https://codeforces.com/problemset/problem/1379/F1',3,3),(10323,'Inverse Genealogy','https://codeforces.com/problemset/problem/1379/E',3,3),(10324,'New Passenger Trams','https://codeforces.com/problemset/problem/1379/D',2,3),(10325,'Choosing flowers','https://codeforces.com/problemset/problem/1379/C',2,3),(10326,'Dubious Cyrpto','https://codeforces.com/problemset/problem/1379/B',1,3),(10327,'Acacius and String','https://codeforces.com/problemset/problem/1379/A',1,3),(10328,'Cubic Lattice','https://codeforces.com/problemset/problem/1375/I',3,3),(10329,'Set Merging','https://codeforces.com/problemset/problem/1375/H',3,3),(10330,'Tree Modification','https://codeforces.com/problemset/problem/1375/G',3,3),(10331,'Integer Game','https://codeforces.com/problemset/problem/1375/F',3,3),(10332,'Inversion SwapSort','https://codeforces.com/problemset/problem/1375/E',2,3),(10333,'Replace by MEX','https://codeforces.com/problemset/problem/1375/D',2,3),(10334,'Element Extermination','https://codeforces.com/problemset/problem/1375/C',1,3),(10335,'Neighbor Grid','https://codeforces.com/problemset/problem/1375/B',1,3),(10336,'Sign Flipping','https://codeforces.com/problemset/problem/1375/A',1,3),(10337,'Cyclic Shifts Sorting','https://codeforces.com/problemset/problem/1374/F',2,3),(10338,'Reading Books (hard version)','https://codeforces.com/problemset/problem/1374/E2',2,3),(10339,'Reading Books (easy version)','https://codeforces.com/problemset/problem/1374/E1',2,3),(10340,'Zero Remainder Array','https://codeforces.com/problemset/problem/1374/D',1,3),(10341,'Move Brackets','https://codeforces.com/problemset/problem/1374/C',1,3),(10342,'Multiply by 2, divide by 6','https://codeforces.com/problemset/problem/1374/B',1,3),(10343,'Required Remainder','https://codeforces.com/problemset/problem/1374/A',1,3),(10344,'Pawns','https://codeforces.com/problemset/problem/1373/G',3,3),(10345,'Network Coverage','https://codeforces.com/problemset/problem/1373/F',2,3),(10346,'Sum of Digits','https://codeforces.com/problemset/problem/1373/E',2,3),(10347,'Maximum Sum on Even Positions','https://codeforces.com/problemset/problem/1373/D',2,3),(10348,'Pluses and Minuses','https://codeforces.com/problemset/problem/1373/C',1,3),(10349,'01 Game','https://codeforces.com/problemset/problem/1373/B',1,3),(10350,'Donut Shops','https://codeforces.com/problemset/problem/1373/A',1,3),(10351,'Omkar and Modes','https://codeforces.com/problemset/problem/1372/F',3,3),(10352,'Omkar and Last Floor','https://codeforces.com/problemset/problem/1372/E',3,3),(10353,'Omkar and Circle','https://codeforces.com/problemset/problem/1372/D',2,3),(10354,'Omkar and Baseball','https://codeforces.com/problemset/problem/1372/C',1,3),(10355,'Omkar and Last Class of Math','https://codeforces.com/problemset/problem/1372/B',1,3),(10356,'Omkar and Completion','https://codeforces.com/problemset/problem/1372/A',1,3),(10357,'Raging Thunder','https://codeforces.com/problemset/problem/1371/F',3,3),(10358,'Asterism (Hard Version)','https://codeforces.com/problemset/problem/1371/E2',2,3),(10359,'Asterism (Easy Version)','https://codeforces.com/problemset/problem/1371/E1',2,3),(10360,'Grid-00100','https://codeforces.com/problemset/problem/1371/D',2,3),(10361,'A Cookie for You','https://codeforces.com/problemset/problem/1371/C',1,3),(10362,'Magical Calendar','https://codeforces.com/problemset/problem/1371/B',1,3),(10363,'Magical Sticks','https://codeforces.com/problemset/problem/1371/A',1,3),(10364,'The Hidden Pair (Hard Version)','https://codeforces.com/problemset/problem/1370/F2',3,3),(10365,'The Hidden Pair (Easy Version)','https://codeforces.com/problemset/problem/1370/F1',2,3),(10366,'Binary Subsequence Rotation','https://codeforces.com/problemset/problem/1370/E',2,3),(10367,'Odd-Even Subsequence','https://codeforces.com/problemset/problem/1370/D',2,3),(10368,'Number Game','https://codeforces.com/problemset/problem/1370/C',1,3),(10369,'GCD Compression','https://codeforces.com/problemset/problem/1370/B',1,3),(10370,'Maximum GCD','https://codeforces.com/problemset/problem/1370/A',1,3),(10371,'BareLee','https://codeforces.com/problemset/problem/1369/F',3,3),(10372,'DeadLee','https://codeforces.com/problemset/problem/1369/E',2,3),(10373,'TediousLee','https://codeforces.com/problemset/problem/1369/D',2,3),(10374,'RationalLee','https://codeforces.com/problemset/problem/1369/C',1,3),(10375,'AccurateLee','https://codeforces.com/problemset/problem/1369/B',1,3),(10376,'FashionabLee','https://codeforces.com/problemset/problem/1369/A',1,3),(10377,'Breadboard Capacity (hard version)','https://codeforces.com/problemset/problem/1368/H2',3,3),(10378,'Breadboard Capacity (easy version)','https://codeforces.com/problemset/problem/1368/H1',3,3),(10379,'Shifting Dominoes','https://codeforces.com/problemset/problem/1368/G',3,3),(10380,'Lamps on a Circle','https://codeforces.com/problemset/problem/1368/F',3,3),(10381,'Ski Accidents','https://codeforces.com/problemset/problem/1368/E',2,3),(10382,'AND, OR and square sum','https://codeforces.com/problemset/problem/1368/D',2,3),(10383,'Even Picture','https://codeforces.com/problemset/problem/1368/C',1,3),(10384,'Codeforces Subsequences','https://codeforces.com/problemset/problem/1368/B',1,3),(10385,'C+=','https://codeforces.com/problemset/problem/1368/A',1,3),(10386,'Flying Sort (Hard Version)','https://codeforces.com/problemset/problem/1367/F2',2,3),(10387,'Flying Sort (Easy Version)','https://codeforces.com/problemset/problem/1367/F1',2,3),(10388,'Necklace Assembly','https://codeforces.com/problemset/problem/1367/E',2,3),(10389,'Task On The Board','https://codeforces.com/problemset/problem/1367/D',2,3),(10390,'Social Distance','https://codeforces.com/problemset/problem/1367/C',1,3),(10391,'Even Array','https://codeforces.com/problemset/problem/1367/B',1,3),(10392,'Short Substrings','https://codeforces.com/problemset/problem/1367/A',1,3),(10393,'Construct the String','https://codeforces.com/problemset/problem/1366/G',3,3),(10394,'Jog Around The Graph','https://codeforces.com/problemset/problem/1366/F',3,3),(10395,'Two Arrays','https://codeforces.com/problemset/problem/1366/E',2,3),(10396,'Two Divisors','https://codeforces.com/problemset/problem/1366/D',2,3),(10397,'Palindromic Paths','https://codeforces.com/problemset/problem/1366/C',1,3),(10398,'Shuffle','https://codeforces.com/problemset/problem/1366/B',1,3),(10399,'Shovels and Swords','https://codeforces.com/problemset/problem/1366/A',1,3),(10400,'Secure Password','https://codeforces.com/problemset/problem/1365/G',3,3),(10401,'Swaps Again','https://codeforces.com/problemset/problem/1365/F',2,3),(10402,'Maximum Subsequence Value','https://codeforces.com/problemset/problem/1365/E',2,3),(10403,'Solve The Maze','https://codeforces.com/problemset/problem/1365/D',2,3),(10404,'Rotation Matching','https://codeforces.com/problemset/problem/1365/C',1,3),(10405,'Trouble Sort','https://codeforces.com/problemset/problem/1365/B',1,3),(10406,'Matrix Game','https://codeforces.com/problemset/problem/1365/A',1,3),(10407,'X-OR','https://codeforces.com/problemset/problem/1364/E',3,3),(10408,'Ehab\'s Last Corollary','https://codeforces.com/problemset/problem/1364/D',2,3),(10409,'Ehab and Prefix MEXs','https://codeforces.com/problemset/problem/1364/C',2,3),(10410,'Most socially-distanced subsequence','https://codeforces.com/problemset/problem/1364/B',1,3),(10411,'XXXXX','https://codeforces.com/problemset/problem/1364/A',1,3),(10412,'Rotating Substrings','https://codeforces.com/problemset/problem/1363/F',3,3),(10413,'Tree Shuffling','https://codeforces.com/problemset/problem/1363/E',2,3),(10414,'Guess The Maximums','https://codeforces.com/problemset/problem/1363/D',2,3),(10415,'Game On Leaves','https://codeforces.com/problemset/problem/1363/C',2,3),(10416,'Subsequence Hate','https://codeforces.com/problemset/problem/1363/B',1,3),(10417,'Odd Selection','https://codeforces.com/problemset/problem/1363/A',1,3),(10418,'Johnny and Another Rating Drop','https://codeforces.com/problemset/problem/1362/C',1,3),(10419,'Johnny and His Hobbies','https://codeforces.com/problemset/problem/1362/B',1,3),(10420,'Johnny and Ancient Computer','https://codeforces.com/problemset/problem/1362/A',1,3),(10421,'Johnny and New Toy','https://codeforces.com/problemset/problem/1361/F',3,3),(10422,'James and the Chase','https://codeforces.com/problemset/problem/1361/E',3,3),(10423,'Johnny and James','https://codeforces.com/problemset/problem/1361/D',3,3),(10424,'Johnny and Megan\'s Necklace','https://codeforces.com/problemset/problem/1361/C',2,3),(10425,'Johnny and Grandmaster','https://codeforces.com/problemset/problem/1361/B',2,3),(10426,'Johnny and Contribution','https://codeforces.com/problemset/problem/1361/A',2,3),(10427,'Binary Median','https://codeforces.com/problemset/problem/1360/H',2,3),(10428,'A/B Matrix','https://codeforces.com/problemset/problem/1360/G',2,3),(10429,'Spy-string','https://codeforces.com/problemset/problem/1360/F',2,3),(10430,'Polygon','https://codeforces.com/problemset/problem/1360/E',1,3),(10431,'Buying Shovels','https://codeforces.com/problemset/problem/1360/D',1,3),(10432,'Similar Pairs','https://codeforces.com/problemset/problem/1360/C',1,3),(10433,'Honest Coach','https://codeforces.com/problemset/problem/1360/B',1,3),(10434,'Minimal Square','https://codeforces.com/problemset/problem/1360/A',1,3),(10435,'RC Kaboom Show','https://codeforces.com/problemset/problem/1359/F',3,3),(10436,'Modular Stability','https://codeforces.com/problemset/problem/1359/E',2,3),(10437,'Yet Another Yet Another Task','https://codeforces.com/problemset/problem/1359/D',2,3),(10438,'Mixing Water','https://codeforces.com/problemset/problem/1359/C',2,3),(10439,'New Theatre Square','https://codeforces.com/problemset/problem/1359/B',1,3),(10440,'Berland Poker','https://codeforces.com/problemset/problem/1359/A',1,3),(10441,'Tasty Cookie','https://codeforces.com/problemset/problem/1358/F',3,3),(10442,'Are You Fired?','https://codeforces.com/problemset/problem/1358/E',2,3),(10443,'The Best Vacation','https://codeforces.com/problemset/problem/1358/D',2,3),(10444,'Celex Update','https://codeforces.com/problemset/problem/1358/C',2,3),(10445,'Maria Breaks the Self-isolation','https://codeforces.com/problemset/problem/1358/B',1,3),(10446,'Park Lighting','https://codeforces.com/problemset/problem/1358/A',1,3),(10447,'Root of quantum Fourier transform','https://codeforces.com/problemset/problem/1357/E2',6,3),(10448,'Power of quantum Fourier transform','https://codeforces.com/problemset/problem/1357/E1',6,3),(10449,'Quantum Classification - Dataset 7','https://codeforces.com/problemset/problem/1357/D5',6,3),(10450,'Quantum Classification - Dataset 6','https://codeforces.com/problemset/problem/1357/D4',6,3),(10451,'Quantum Classification - Dataset 5','https://codeforces.com/problemset/problem/1357/D3',6,3),(10452,'Quantum Classification - Dataset 4','https://codeforces.com/problemset/problem/1357/D2',6,3),(10453,'Quantum Classification - Dataset 3','https://codeforces.com/problemset/problem/1357/D1',6,3),(10454,'Prepare superposition of basis states with the same parity','https://codeforces.com/problemset/problem/1357/C2',6,3),(10455,'Prepare superposition of basis states with 0s','https://codeforces.com/problemset/problem/1357/C1',6,3),(10456,'\"Is the number divisible by 3?\" oracle','https://codeforces.com/problemset/problem/1357/B2',6,3),(10457,'\"Is the bit string balanced?\" oracle','https://codeforces.com/problemset/problem/1357/B1',6,3),(10458,'Distinguish Y, XZ, -Y and -XZ','https://codeforces.com/problemset/problem/1357/A7',6,3),(10459,'Distinguish four Pauli gates','https://codeforces.com/problemset/problem/1357/A6',6,3),(10460,'Distinguish Rz(θ) from Ry(θ)','https://codeforces.com/problemset/problem/1357/A5',6,3),(10461,'Distinguish Rz from R1','https://codeforces.com/problemset/problem/1357/A4',6,3),(10462,'Distinguish H from X','https://codeforces.com/problemset/problem/1357/A3',6,3),(10463,'Distinguish I, CNOTs and SWAP','https://codeforces.com/problemset/problem/1357/A2',6,3),(10464,'Figure out direction of CNOT','https://codeforces.com/problemset/problem/1357/A1',6,3),(10465,'Quantum Classification - 2','https://codeforces.com/problemset/problem/1356/D2',6,3),(10466,'Quantum Classification - 1','https://codeforces.com/problemset/problem/1356/D1',6,3),(10467,'Prepare state |01⟩ + |10⟩ + |11⟩','https://codeforces.com/problemset/problem/1356/C',6,3),(10468,'Decrement','https://codeforces.com/problemset/problem/1356/B2',6,3),(10469,'Increment','https://codeforces.com/problemset/problem/1356/B1',6,3),(10470,'Distinguish Z from -Z','https://codeforces.com/problemset/problem/1356/A5',6,3),(10471,'Distinguish I ⊗ X from CNOT','https://codeforces.com/problemset/problem/1356/A4',6,3),(10472,'Distinguish Z from S','https://codeforces.com/problemset/problem/1356/A3',6,3),(10473,'Distinguish I from Z','https://codeforces.com/problemset/problem/1356/A2',6,3),(10474,'Distinguish I from X','https://codeforces.com/problemset/problem/1356/A1',6,3),(10475,'Guess Divisors Count','https://codeforces.com/problemset/problem/1355/F',3,3),(10476,'Restorer Distance','https://codeforces.com/problemset/problem/1355/E',2,3),(10477,'Game With Array','https://codeforces.com/problemset/problem/1355/D',1,3),(10478,'Count Triangles','https://codeforces.com/problemset/problem/1355/C',2,3),(10479,'Young Explorers','https://codeforces.com/problemset/problem/1355/B',1,3),(10480,'Sequence with Digits','https://codeforces.com/problemset/problem/1355/A',1,3),(10481,'Find a Gift','https://codeforces.com/problemset/problem/1354/G',3,3),(10482,'Summoning Minions','https://codeforces.com/problemset/problem/1354/F',2,3),(10483,'Graph Coloring','https://codeforces.com/problemset/problem/1354/E',2,3),(10484,'Multiset','https://codeforces.com/problemset/problem/1354/D',2,3),(10485,'Not So Simple Polygon Embedding','https://codeforces.com/problemset/problem/1354/C2',2,3),(10486,'Simple Polygon Embedding','https://codeforces.com/problemset/problem/1354/C1',1,3),(10487,'Ternary String','https://codeforces.com/problemset/problem/1354/B',1,3),(10488,'Alarm Clock','https://codeforces.com/problemset/problem/1354/A',1,3),(10489,'Decreasing Heights','https://codeforces.com/problemset/problem/1353/F',2,3),(10490,'K-periodic Garland','https://codeforces.com/problemset/problem/1353/E',2,3),(10491,'Constructing the Array','https://codeforces.com/problemset/problem/1353/D',2,3),(10492,'Board Moves','https://codeforces.com/problemset/problem/1353/C',1,3),(10493,'Two Arrays And Swaps','https://codeforces.com/problemset/problem/1353/B',1,3),(10494,'Most Unstable Array','https://codeforces.com/problemset/problem/1353/A',1,3),(10495,'Special Permutation','https://codeforces.com/problemset/problem/1352/G',2,3),(10496,'Binary String Reconstruction','https://codeforces.com/problemset/problem/1352/F',1,3),(10497,'Special Elements','https://codeforces.com/problemset/problem/1352/E',1,3),(10498,'Alice, Bob and Candies','https://codeforces.com/problemset/problem/1352/D',1,3),(10499,'K-th Not Divisible by n','https://codeforces.com/problemset/problem/1352/C',1,3),(10500,'Same Parity Summands','https://codeforces.com/problemset/problem/1352/B',1,3),(10501,'Sum of Round Numbers','https://codeforces.com/problemset/problem/1352/A',1,3),(10502,'Skier','https://codeforces.com/problemset/problem/1351/C',1,3),(10503,'Square?','https://codeforces.com/problemset/problem/1351/B',1,3),(10504,'A+B (Trial Problem)','https://codeforces.com/problemset/problem/1351/A',1,3),(10505,'Orac and Models','https://codeforces.com/problemset/problem/1350/B',1,3),(10506,'Orac and Factors','https://codeforces.com/problemset/problem/1350/A',1,3),(10507,'Slime and Sequences (Hard Version)','https://codeforces.com/problemset/problem/1349/F2',3,3),(10508,'Slime and Sequences (Easy Version)','https://codeforces.com/problemset/problem/1349/F1',3,3),(10509,'Slime and Hats','https://codeforces.com/problemset/problem/1349/E',3,3),(10510,'Slime and Biscuits','https://codeforces.com/problemset/problem/1349/D',3,3),(10511,'Orac and Game of Life','https://codeforces.com/problemset/problem/1349/C',2,3),(10512,'Orac and Medians','https://codeforces.com/problemset/problem/1349/B',2,3),(10513,'Orac and LCM','https://codeforces.com/problemset/problem/1349/A',2,3),(10514,'Phoenix and Memory','https://codeforces.com/problemset/problem/1348/F',3,3),(10515,'Phoenix and Berries','https://codeforces.com/problemset/problem/1348/E',2,3),(10516,'Phoenix and Science','https://codeforces.com/problemset/problem/1348/D',2,3),(10517,'Phoenix and Distribution','https://codeforces.com/problemset/problem/1348/C',2,3),(10518,'Phoenix and Beauty','https://codeforces.com/problemset/problem/1348/B',1,3),(10519,'Phoenix and Balance','https://codeforces.com/problemset/problem/1348/A',1,3),(10520,'Pac-Man 2.0','https://codeforces.com/problemset/problem/1346/I',3,3),(10521,'Game with Segments','https://codeforces.com/problemset/problem/1346/H',3,3),(10522,'Two IP Cameras','https://codeforces.com/problemset/problem/1346/G',2,3),(10523,'Dune II: Battle For Arrakis','https://codeforces.com/problemset/problem/1346/F',2,3),(10524,'Magic Tricks','https://codeforces.com/problemset/problem/1346/E',2,3),(10525,'Constructing the Dungeon','https://codeforces.com/problemset/problem/1346/D',2,3),(10526,'Spring Cleaning','https://codeforces.com/problemset/problem/1346/C',2,3),(10527,'Boot Camp','https://codeforces.com/problemset/problem/1346/B',1,3),(10528,'Color Revolution','https://codeforces.com/problemset/problem/1346/A',1,3),(10529,'Card Constructions','https://codeforces.com/problemset/problem/1345/B',1,3),(10530,'Puzzle Pieces','https://codeforces.com/problemset/problem/1345/A',1,3),(10531,'Piet\'s Palette','https://codeforces.com/problemset/problem/1344/F',3,3),(10532,'Train Tracks','https://codeforces.com/problemset/problem/1344/E',3,3),(10533,'Résumé Review','https://codeforces.com/problemset/problem/1344/D',3,3),(10534,'Quantifier Question','https://codeforces.com/problemset/problem/1344/C',3,3),(10535,'Monopole Magnets','https://codeforces.com/problemset/problem/1344/B',2,3),(10536,'Hilbert\'s Hotel','https://codeforces.com/problemset/problem/1344/A',2,3),(10537,'Restore the Permutation by Sorted Segments','https://codeforces.com/problemset/problem/1343/F',2,3),(10538,'Weights Distributing','https://codeforces.com/problemset/problem/1343/E',2,3),(10539,'Constant Palindrome Sum','https://codeforces.com/problemset/problem/1343/D',2,3),(10540,'Alternating Subsequence','https://codeforces.com/problemset/problem/1343/C',1,3),(10541,'Balanced Array','https://codeforces.com/problemset/problem/1343/B',1,3),(10542,'Candies','https://codeforces.com/problemset/problem/1343/A',1,3),(10543,'Make It Ascending','https://codeforces.com/problemset/problem/1342/F',3,3),(10544,'Placing Rooks','https://codeforces.com/problemset/problem/1342/E',2,3),(10545,'Multiple Testcases','https://codeforces.com/problemset/problem/1342/D',2,3),(10546,'Yet Another Counting Problem','https://codeforces.com/problemset/problem/1342/C',2,3),(10547,'Binary Period','https://codeforces.com/problemset/problem/1342/B',1,3),(10548,'Road To Zero','https://codeforces.com/problemset/problem/1342/A',1,3),(10549,'Nastya and Door','https://codeforces.com/problemset/problem/1341/B',1,3),(10550,'Nastya and Rice','https://codeforces.com/problemset/problem/1341/A',1,3),(10551,'Nastya and CBS','https://codeforces.com/problemset/problem/1340/F',3,3),(10552,'Nastya and Bees','https://codeforces.com/problemset/problem/1340/E',3,3),(10553,'Nastya and Time Machine','https://codeforces.com/problemset/problem/1340/D',3,3),(10554,'Nastya and Unexpected Guest','https://codeforces.com/problemset/problem/1340/C',2,3),(10555,'Nastya and Scoreboard','https://codeforces.com/problemset/problem/1340/B',2,3),(10556,'Nastya and Strange Generator','https://codeforces.com/problemset/problem/1340/A',1,3),(10557,'Sorted Adjacent Differences','https://codeforces.com/problemset/problem/1339/B',1,3),(10558,'Filling Diamonds','https://codeforces.com/problemset/problem/1339/A',1,3),(10559,'JYPnation','https://codeforces.com/problemset/problem/1338/E',3,3),(10560,'Nested Rubber Bands','https://codeforces.com/problemset/problem/1338/D',3,3),(10561,'Perfect Triples','https://codeforces.com/problemset/problem/1338/C',2,3),(10562,'Edge Weight Assignment','https://codeforces.com/problemset/problem/1338/B',2,3),(10563,'Powered Addition','https://codeforces.com/problemset/problem/1338/A',1,3),(10564,'Kana and Dragon Quest game','https://codeforces.com/problemset/problem/1337/B',1,3),(10565,'Ichihime and Triangle','https://codeforces.com/problemset/problem/1337/A',1,3),(10566,'Journey','https://codeforces.com/problemset/problem/1336/F',3,3),(10567,'Chiori and Doll Picking (hard version)','https://codeforces.com/problemset/problem/1336/E2',3,3),(10568,'Chiori and Doll Picking (easy version)','https://codeforces.com/problemset/problem/1336/E1',3,3),(10569,'Yui and Mahjong Set','https://codeforces.com/problemset/problem/1336/D',3,3),(10570,'Kaavi and Magic Spell','https://codeforces.com/problemset/problem/1336/C',2,3),(10571,'Xenia and Colorful Gems','https://codeforces.com/problemset/problem/1336/B',2,3),(10572,'Linova and Kingdom','https://codeforces.com/problemset/problem/1336/A',2,3),(10573,'Robots on a Grid','https://codeforces.com/problemset/problem/1335/F',2,3),(10574,'Three Blocks Palindrome (hard version)','https://codeforces.com/problemset/problem/1335/E2',2,3),(10575,'Three Blocks Palindrome (easy version)','https://codeforces.com/problemset/problem/1335/E1',2,3),(10576,'Anti-Sudoku','https://codeforces.com/problemset/problem/1335/D',1,3),(10577,'Two Teams Composing','https://codeforces.com/problemset/problem/1335/C',1,3),(10578,'Construct the String','https://codeforces.com/problemset/problem/1335/B',1,3),(10579,'Candies and Two Sisters','https://codeforces.com/problemset/problem/1335/A',1,3),(10580,'Substring Search','https://codeforces.com/problemset/problem/1334/G',3,3),(10581,'Strange Function','https://codeforces.com/problemset/problem/1334/F',2,3),(10582,'Divisor Paths','https://codeforces.com/problemset/problem/1334/E',2,3),(10583,'Minimum Euler Cycle','https://codeforces.com/problemset/problem/1334/D',2,3),(10584,'Circle of Monsters','https://codeforces.com/problemset/problem/1334/C',2,3),(10585,'Middle Class','https://codeforces.com/problemset/problem/1334/B',1,3),(10586,'Level Statistics','https://codeforces.com/problemset/problem/1334/A',1,3),(10587,'Kate and imperfection','https://codeforces.com/problemset/problem/1333/F',2,3),(10588,'Road to 1600','https://codeforces.com/problemset/problem/1333/E',2,3),(10589,'Challenges in school №41','https://codeforces.com/problemset/problem/1333/D',2,3),(10590,'Eugene and an array','https://codeforces.com/problemset/problem/1333/C',2,3),(10591,'Kind Anton','https://codeforces.com/problemset/problem/1333/B',1,3),(10592,'Little Artem','https://codeforces.com/problemset/problem/1333/A',1,3),(10593,'No Monotone Triples','https://codeforces.com/problemset/problem/1332/G',3,3),(10594,'Independent Set','https://codeforces.com/problemset/problem/1332/F',2,3),(10595,'Height All the Same','https://codeforces.com/problemset/problem/1332/E',2,3),(10596,'Walk on Matrix','https://codeforces.com/problemset/problem/1332/D',2,3),(10597,'K-Complete Word','https://codeforces.com/problemset/problem/1332/C',1,3),(10598,'Composite Coloring','https://codeforces.com/problemset/problem/1332/B',1,3),(10599,'Exercising Walk','https://codeforces.com/problemset/problem/1332/A',1,3),(10600,'It\'s showtime','https://codeforces.com/problemset/problem/1331/H',6,3),(10601,'Lingua Romana','https://codeforces.com/problemset/problem/1331/G',6,3),(10602,'Elementary!','https://codeforces.com/problemset/problem/1331/F',6,3),(10603,'Jordan Smiley','https://codeforces.com/problemset/problem/1331/E',6,3),(10604,'Again?','https://codeforces.com/problemset/problem/1331/D',6,3),(10605,'...And after happily lived ever they','https://codeforces.com/problemset/problem/1331/C',6,3),(10606,'Limericks','https://codeforces.com/problemset/problem/1331/B',6,3),(10607,'Is it rated?','https://codeforces.com/problemset/problem/1331/A',6,3),(10608,'Dreamoon Likes Permutations','https://codeforces.com/problemset/problem/1330/B',1,3),(10609,'Dreamoon and Ranking Collection','https://codeforces.com/problemset/problem/1330/A',1,3),(10610,'Dreamoon Loves AA','https://codeforces.com/problemset/problem/1329/E',3,3),(10611,'Dreamoon Likes Strings','https://codeforces.com/problemset/problem/1329/D',3,3),(10612,'Drazil Likes Heap','https://codeforces.com/problemset/problem/1329/C',2,3),(10613,'Dreamoon Likes Sequences','https://codeforces.com/problemset/problem/1329/B',2,3),(10614,'Dreamoon Likes Coloring','https://codeforces.com/problemset/problem/1329/A',2,3),(10615,'Make k Equal','https://codeforces.com/problemset/problem/1328/F',2,3),(10616,'Tree Queries','https://codeforces.com/problemset/problem/1328/E',2,3),(10617,'Carousel','https://codeforces.com/problemset/problem/1328/D',2,3),(10618,'Ternary XOR','https://codeforces.com/problemset/problem/1328/C',1,3),(10619,'K-th Beautiful String','https://codeforces.com/problemset/problem/1328/B',1,3),(10620,'Divisibility Problem','https://codeforces.com/problemset/problem/1328/A',1,3),(10621,'Letters and Question Marks','https://codeforces.com/problemset/problem/1327/G',3,3),(10622,'AND Segments','https://codeforces.com/problemset/problem/1327/F',2,3),(10623,'Count The Blocks','https://codeforces.com/problemset/problem/1327/E',2,3),(10624,'Infinite Path','https://codeforces.com/problemset/problem/1327/D',2,3),(10625,'Game with Chips','https://codeforces.com/problemset/problem/1327/C',2,3),(10626,'Princesses and Princes','https://codeforces.com/problemset/problem/1327/B',1,3),(10627,'Sum of Odd Integers','https://codeforces.com/problemset/problem/1327/A',1,3),(10628,'Spiderweb Trees','https://codeforces.com/problemset/problem/1326/G',3,3),(10629,'Wise Men (Hard Version)','https://codeforces.com/problemset/problem/1326/F2',3,3),(10630,'Wise Men (Easy Version)','https://codeforces.com/problemset/problem/1326/F1',3,3),(10631,'Bombs','https://codeforces.com/problemset/problem/1326/E',2,3),(10632,'Prefix-Suffix Palindrome (Hard version)','https://codeforces.com/problemset/problem/1326/D2',2,3),(10633,'Prefix-Suffix Palindrome (Easy version)','https://codeforces.com/problemset/problem/1326/D1',1,3),(10634,'Permutation Partitions','https://codeforces.com/problemset/problem/1326/C',1,3),(10635,'Maximums','https://codeforces.com/problemset/problem/1326/B',1,3),(10636,'Bad Ugly Numbers','https://codeforces.com/problemset/problem/1326/A',1,3),(10637,'Ehab\'s Last Theorem','https://codeforces.com/problemset/problem/1325/F',2,3),(10638,'Ehab\'s REAL Number Theory Problem','https://codeforces.com/problemset/problem/1325/E',3,3),(10639,'Ehab the Xorcist','https://codeforces.com/problemset/problem/1325/D',2,3),(10640,'Ehab and Path-etic MEXs','https://codeforces.com/problemset/problem/1325/C',1,3),(10641,'CopyCopyCopyCopyCopy','https://codeforces.com/problemset/problem/1325/B',1,3),(10642,'EhAb AnD gCd','https://codeforces.com/problemset/problem/1325/A',1,3),(10643,'Maximum White Subtree','https://codeforces.com/problemset/problem/1324/F',2,3),(10644,'Sleeping Schedule','https://codeforces.com/problemset/problem/1324/E',2,3),(10645,'Pair of Topics','https://codeforces.com/problemset/problem/1324/D',1,3),(10646,'Frog Jumps','https://codeforces.com/problemset/problem/1324/C',1,3),(10647,'Yet Another Palindrome Problem','https://codeforces.com/problemset/problem/1324/B',1,3),(10648,'Yet Another Tetris Problem','https://codeforces.com/problemset/problem/1324/A',1,3),(10649,'Count Subrectangles','https://codeforces.com/problemset/problem/1323/B',1,3),(10650,'Even Subset Sum Problem','https://codeforces.com/problemset/problem/1323/A',1,3),(10651,'Assigning Fares','https://codeforces.com/problemset/problem/1322/F',3,3),(10652,'Median Mountain Range','https://codeforces.com/problemset/problem/1322/E',3,3),(10653,'Reality Show','https://codeforces.com/problemset/problem/1322/D',3,3),(10654,'Instant Noodles','https://codeforces.com/problemset/problem/1322/C',2,3),(10655,'Present','https://codeforces.com/problemset/problem/1322/B',2,3),(10656,'Unusual Competitions','https://codeforces.com/problemset/problem/1322/A',1,3),(10657,'Remove Adjacent','https://codeforces.com/problemset/problem/1321/C',2,3),(10658,'Contest for Robots','https://codeforces.com/problemset/problem/1321/A',1,3),(10659,'Blocks and Sensors','https://codeforces.com/problemset/problem/1320/F',3,3),(10660,'Treeland and Viruses','https://codeforces.com/problemset/problem/1320/E',3,3),(10661,'Reachable Strings','https://codeforces.com/problemset/problem/1320/D',2,3),(10662,'World of Darkraft: Battle for Azathoth','https://codeforces.com/problemset/problem/1320/C',2,3),(10663,'Navigation System','https://codeforces.com/problemset/problem/1320/B',2,3),(10664,'Journey Planning','https://codeforces.com/problemset/problem/1320/A',1,3),(10665,'Battalion Strength','https://codeforces.com/problemset/problem/1316/F',3,3),(10666,'Team Building','https://codeforces.com/problemset/problem/1316/E',2,3),(10667,'Nash Matrix','https://codeforces.com/problemset/problem/1316/D',2,3),(10668,'Primitive Primes','https://codeforces.com/problemset/problem/1316/C',2,3),(10669,'String Modification','https://codeforces.com/problemset/problem/1316/B',1,3),(10670,'Grade Allocation','https://codeforces.com/problemset/problem/1316/A',1,3),(10671,'Restoring Permutation','https://codeforces.com/problemset/problem/1315/C',1,3),(10672,'Homecoming','https://codeforces.com/problemset/problem/1315/B',1,3),(10673,'Dead Pixel','https://codeforces.com/problemset/problem/1315/A',1,3),(10674,'Concatenation with intersection','https://codeforces.com/problemset/problem/1313/E',3,3),(10675,'Happy New Year','https://codeforces.com/problemset/problem/1313/D',2,3),(10676,'Skyscrapers (hard version)','https://codeforces.com/problemset/problem/1313/C2',2,3),(10677,'Skyscrapers (easy version)','https://codeforces.com/problemset/problem/1313/C1',1,3),(10678,'Different Rules','https://codeforces.com/problemset/problem/1313/B',2,3),(10679,'Fast Food Restaurant','https://codeforces.com/problemset/problem/1313/A',1,3),(10680,'Autocompletion','https://codeforces.com/problemset/problem/1312/G',3,3),(10681,'Attack on Red Kingdom','https://codeforces.com/problemset/problem/1312/F',2,3),(10682,'Array Shrinking','https://codeforces.com/problemset/problem/1312/E',2,3),(10683,'Count the Arrays','https://codeforces.com/problemset/problem/1312/D',2,3),(10684,'Adding Powers','https://codeforces.com/problemset/problem/1312/C',1,3),(10685,'Bogosort','https://codeforces.com/problemset/problem/1312/B',1,3),(10686,'Two Regular Polygons','https://codeforces.com/problemset/problem/1312/A',1,3),(10687,'Moving Points','https://codeforces.com/problemset/problem/1311/F',2,3),(10688,'Construct the Binary Tree','https://codeforces.com/problemset/problem/1311/E',2,3),(10689,'Three Integers','https://codeforces.com/problemset/problem/1311/D',2,3),(10690,'Perform the Combo','https://codeforces.com/problemset/problem/1311/C',1,3),(10691,'WeirdSort','https://codeforces.com/problemset/problem/1311/B',1,3),(10692,'Add Odd or Subtract Even','https://codeforces.com/problemset/problem/1311/A',1,3),(10693,'Bad Cryptography','https://codeforces.com/problemset/problem/1310/F',3,3),(10694,'Strange Function','https://codeforces.com/problemset/problem/1310/E',3,3),(10695,'Tourism','https://codeforces.com/problemset/problem/1310/D',2,3),(10696,'Au Pont Rouge','https://codeforces.com/problemset/problem/1310/C',3,3),(10697,'Double Elimination','https://codeforces.com/problemset/problem/1310/B',2,3),(10698,'Recommendations','https://codeforces.com/problemset/problem/1310/A',2,3),(10699,'Cow and Exercise','https://codeforces.com/problemset/problem/1307/G',3,3),(10700,'Cow and Vacation','https://codeforces.com/problemset/problem/1307/F',3,3),(10701,'Cow and Treats','https://codeforces.com/problemset/problem/1307/E',2,3),(10702,'Cow and Fields','https://codeforces.com/problemset/problem/1307/D',2,3),(10703,'Cow and Message','https://codeforces.com/problemset/problem/1307/C',1,3),(10704,'Cow and Friend','https://codeforces.com/problemset/problem/1307/B',1,3),(10705,'Cow and Haybales','https://codeforces.com/problemset/problem/1307/A',1,3),(10706,'Kuroni the Private Tutor','https://codeforces.com/problemset/problem/1305/H',3,3),(10707,'Kuroni and Antihype','https://codeforces.com/problemset/problem/1305/G',3,3),(10708,'Kuroni and the Punishment','https://codeforces.com/problemset/problem/1305/F',2,3),(10709,'Kuroni and the Score Distribution','https://codeforces.com/problemset/problem/1305/E',2,3),(10710,'Kuroni and the Celebration','https://codeforces.com/problemset/problem/1305/D',2,3),(10711,'Kuroni and Impossible Calculation','https://codeforces.com/problemset/problem/1305/C',2,3),(10712,'Kuroni and Simple Strings','https://codeforces.com/problemset/problem/1305/B',1,3),(10713,'Kuroni and the Gifts','https://codeforces.com/problemset/problem/1305/A',1,3),(10714,'Animal Observation (hard version)','https://codeforces.com/problemset/problem/1304/F2',2,3),(10715,'Animal Observation (easy version)','https://codeforces.com/problemset/problem/1304/F1',2,3),(10716,'1-Trees and Queries','https://codeforces.com/problemset/problem/1304/E',2,3),(10717,'Shortest and Longest LIS','https://codeforces.com/problemset/problem/1304/D',2,3),(10718,'Air Conditioner','https://codeforces.com/problemset/problem/1304/C',1,3),(10719,'Longest Palindrome','https://codeforces.com/problemset/problem/1304/B',1,3),(10720,'Two Rabbits','https://codeforces.com/problemset/problem/1304/A',1,3),(10721,'Sum of Prefix Sums','https://codeforces.com/problemset/problem/1303/G',3,3),(10722,'Number of Components','https://codeforces.com/problemset/problem/1303/F',3,3),(10723,'Erase Subsequences','https://codeforces.com/problemset/problem/1303/E',2,3),(10724,'Fill The Bag','https://codeforces.com/problemset/problem/1303/D',2,3),(10725,'Perfect Keyboard','https://codeforces.com/problemset/problem/1303/C',2,3),(10726,'National Project','https://codeforces.com/problemset/problem/1303/B',1,3),(10727,'Erasing Zeroes','https://codeforces.com/problemset/problem/1303/A',1,3),(10728,'Keep talking and nobody explodes -- hard','https://codeforces.com/problemset/problem/1302/J',6,3),(10729,'Deja vu','https://codeforces.com/problemset/problem/1302/I',6,3),(10730,'Who needs suffix structures?','https://codeforces.com/problemset/problem/1302/H',6,3),(10731,'Keep talking and nobody explodes -- medium','https://codeforces.com/problemset/problem/1302/G',6,3),(10732,'Keep talking and nobody explodes -- easy','https://codeforces.com/problemset/problem/1302/F',6,3),(10733,'Amazing bitset','https://codeforces.com/problemset/problem/1302/E',6,3),(10734,'Dijkstra','https://codeforces.com/problemset/problem/1302/D',6,3),(10735,'Segment tree or Fenwick?','https://codeforces.com/problemset/problem/1302/C',6,3),(10736,'DAG','https://codeforces.com/problemset/problem/1302/B',6,3),(10737,'Nash equilibrium','https://codeforces.com/problemset/problem/1302/A',6,3),(10738,'Super Jaber','https://codeforces.com/problemset/problem/1301/F',3,3),(10739,'Nanosoft','https://codeforces.com/problemset/problem/1301/E',2,3),(10740,'Time to Run','https://codeforces.com/problemset/problem/1301/D',2,3),(10741,'Ayoub\'s function','https://codeforces.com/problemset/problem/1301/C',2,3),(10742,'Motarack\'s Birthday','https://codeforces.com/problemset/problem/1301/B',1,3),(10743,'Three Strings','https://codeforces.com/problemset/problem/1301/A',1,3),(10744,'Assigning to Classes','https://codeforces.com/problemset/problem/1300/B',1,3),(10745,'Non-zero','https://codeforces.com/problemset/problem/1300/A',1,3),(10746,'So Mean','https://codeforces.com/problemset/problem/1299/E',3,3),(10747,'Around the World','https://codeforces.com/problemset/problem/1299/D',3,3),(10748,'Water Balance','https://codeforces.com/problemset/problem/1299/C',2,3),(10749,'Aerodynamic','https://codeforces.com/problemset/problem/1299/B',2,3),(10750,'Anu Has a Function','https://codeforces.com/problemset/problem/1299/A',1,3),(10751,'Falling Blocks','https://codeforces.com/problemset/problem/1297/I',6,3),(10752,'Paint the String','https://codeforces.com/problemset/problem/1297/H',6,3),(10753,'M-numbers','https://codeforces.com/problemset/problem/1297/G',6,3),(10754,'Movie Fan','https://codeforces.com/problemset/problem/1297/F',6,3),(10755,'Modernization of Treeland','https://codeforces.com/problemset/problem/1297/E',6,3),(10756,'Bonus Distribution ','https://codeforces.com/problemset/problem/1297/D',6,3),(10757,'Dream Team','https://codeforces.com/problemset/problem/1297/C',6,3),(10758,'Cartoons','https://codeforces.com/problemset/problem/1297/B',6,3),(10759,'Likes Display','https://codeforces.com/problemset/problem/1297/A',6,3),(10760,'Berland Beauty','https://codeforces.com/problemset/problem/1296/F',2,3),(10761,'String Coloring (hard version)','https://codeforces.com/problemset/problem/1296/E2',2,3),(10762,'String Coloring (easy version)','https://codeforces.com/problemset/problem/1296/E1',2,3),(10763,'Fight with Monsters','https://codeforces.com/problemset/problem/1296/D',1,3),(10764,'Yet Another Walking Robot','https://codeforces.com/problemset/problem/1296/C',1,3),(10765,'Food Buying','https://codeforces.com/problemset/problem/1296/B',1,3),(10766,'Array with Odd Sum','https://codeforces.com/problemset/problem/1296/A',1,3),(10767,'Good Contest','https://codeforces.com/problemset/problem/1295/F',3,3),(10768,'Permutation Separation','https://codeforces.com/problemset/problem/1295/E',2,3),(10769,'Same GCDs','https://codeforces.com/problemset/problem/1295/D',2,3),(10770,'Obtain The String','https://codeforces.com/problemset/problem/1295/C',2,3),(10771,'Infinite Prefixes','https://codeforces.com/problemset/problem/1295/B',2,3),(10772,'Display The Number','https://codeforces.com/problemset/problem/1295/A',1,3),(10773,'Three Paths on a Tree','https://codeforces.com/problemset/problem/1294/F',2,3),(10774,'Obtain a Permutation','https://codeforces.com/problemset/problem/1294/E',2,3),(10775,'MEX maximizing','https://codeforces.com/problemset/problem/1294/D',2,3),(10776,'Product of Three Numbers','https://codeforces.com/problemset/problem/1294/C',1,3),(10777,'Collecting Packages','https://codeforces.com/problemset/problem/1294/B',1,3),(10778,'Collecting Coins','https://codeforces.com/problemset/problem/1294/A',1,3),(10779,'JOE is on TV!','https://codeforces.com/problemset/problem/1293/B',1,3),(10780,'ConneR and the A.R.C. Markland-N','https://codeforces.com/problemset/problem/1293/A',1,3),(10781,'Nora\'s Toy Boxes','https://codeforces.com/problemset/problem/1292/F',3,3),(10782,'Rin and The Unknown Flower','https://codeforces.com/problemset/problem/1292/E',3,3),(10783,'Chaotic V.','https://codeforces.com/problemset/problem/1292/D',3,3),(10784,'Xenon\'s Attack on the Gangs','https://codeforces.com/problemset/problem/1292/C',2,3),(10785,'Aroma\'s Search','https://codeforces.com/problemset/problem/1292/B',2,3),(10786,'NEKO\'s Maze Game','https://codeforces.com/problemset/problem/1292/A',1,3),(10787,'Coffee Varieties (easy version)','https://codeforces.com/problemset/problem/1291/F',3,3),(10788,'Array Sharpening','https://codeforces.com/problemset/problem/1291/B',1,3),(10789,'Even But Not Even','https://codeforces.com/problemset/problem/1291/A',1,3),(10790,'Making Shapes','https://codeforces.com/problemset/problem/1290/F',3,3),(10791,'Cartesian Tree ','https://codeforces.com/problemset/problem/1290/E',3,3),(10792,'Coffee Varieties (hard version)','https://codeforces.com/problemset/problem/1290/D',3,3),(10793,'Prefix Enlightenment','https://codeforces.com/problemset/problem/1290/C',2,3),(10794,'Irreducible Anagrams','https://codeforces.com/problemset/problem/1290/B',2,3),(10795,'Mind Control','https://codeforces.com/problemset/problem/1290/A',2,3),(10796,'Red-Blue Graph','https://codeforces.com/problemset/problem/1288/F',3,3),(10797,'Messenger Simulator','https://codeforces.com/problemset/problem/1288/E',2,3),(10798,'Minimax Problem','https://codeforces.com/problemset/problem/1288/D',2,3),(10799,'Two Arrays','https://codeforces.com/problemset/problem/1288/C',2,3),(10800,'Yet Another Meme Problem','https://codeforces.com/problemset/problem/1288/B',1,3),(10801,'Deadline','https://codeforces.com/problemset/problem/1288/A',1,3),(10802,'Hyperset','https://codeforces.com/problemset/problem/1287/B',1,3),(10803,'Angry Students','https://codeforces.com/problemset/problem/1287/A',1,3),(10804,'Harry The Potter','https://codeforces.com/problemset/problem/1286/F',3,3),(10805,'Fedya the Potter Strikes Back','https://codeforces.com/problemset/problem/1286/E',3,3),(10806,'LCC','https://codeforces.com/problemset/problem/1286/D',3,3),(10807,'Madhouse (Hard version)','https://codeforces.com/problemset/problem/1286/C2',3,3),(10808,'Madhouse (Easy version)','https://codeforces.com/problemset/problem/1286/C1',2,3),(10809,'Numbers on Tree','https://codeforces.com/problemset/problem/1286/B',2,3),(10810,'Garland','https://codeforces.com/problemset/problem/1286/A',2,3),(10811,'Classical?','https://codeforces.com/problemset/problem/1285/F',3,3),(10812,'Delete a Segment','https://codeforces.com/problemset/problem/1285/E',2,3),(10813,'Dr. Evil Underscores','https://codeforces.com/problemset/problem/1285/D',2,3),(10814,'Fadi and LCM','https://codeforces.com/problemset/problem/1285/C',1,3),(10815,'Just Eat It!','https://codeforces.com/problemset/problem/1285/B',1,3),(10816,'Mezo Playing Zoma','https://codeforces.com/problemset/problem/1285/A',1,3),(10817,'Seollal','https://codeforces.com/problemset/problem/1284/G',3,3),(10818,'New Year and Social Network','https://codeforces.com/problemset/problem/1284/F',3,3),(10819,'New Year and Castle Construction','https://codeforces.com/problemset/problem/1284/E',2,3),(10820,'New Year and Conference','https://codeforces.com/problemset/problem/1284/D',2,3),(10821,'New Year and Permutation','https://codeforces.com/problemset/problem/1284/C',2,3),(10822,'New Year and Ascent Sequence','https://codeforces.com/problemset/problem/1284/B',1,3),(10823,'New Year and Naming','https://codeforces.com/problemset/problem/1284/A',1,3),(10824,'DIY Garland','https://codeforces.com/problemset/problem/1283/F',2,3),(10825,'New Year Parties','https://codeforces.com/problemset/problem/1283/E',2,3),(10826,'Christmas Trees','https://codeforces.com/problemset/problem/1283/D',2,3),(10827,'Friends and Gifts','https://codeforces.com/problemset/problem/1283/C',1,3),(10828,'Candies Division','https://codeforces.com/problemset/problem/1283/B',1,3),(10829,'Minutes Before the New Year','https://codeforces.com/problemset/problem/1283/A',1,3),(10830,'The Cake Is a Lie','https://codeforces.com/problemset/problem/1282/E',2,3),(10831,'Enchanted Artifact','https://codeforces.com/problemset/problem/1282/D',2,3),(10832,'Petya and Exam','https://codeforces.com/problemset/problem/1282/C',2,3),(10833,'K for the Price of One (Hard Version)','https://codeforces.com/problemset/problem/1282/B2',2,3),(10834,'K for the Price of One (Easy Version)','https://codeforces.com/problemset/problem/1282/B1',1,3),(10835,'Temporarily unavailable','https://codeforces.com/problemset/problem/1282/A',1,3),(10836,'Azamon Web Services','https://codeforces.com/problemset/problem/1281/B',2,3),(10837,'Suffix Three','https://codeforces.com/problemset/problem/1281/A',1,3),(10838,'Intergalactic Sliding Puzzle','https://codeforces.com/problemset/problem/1280/F',3,3),(10839,'Kirchhoff\'s Current Loss','https://codeforces.com/problemset/problem/1280/E',3,3),(10840,'Miss Punyverse','https://codeforces.com/problemset/problem/1280/D',2,3),(10841,'Jeremy Bearimy','https://codeforces.com/problemset/problem/1280/C',2,3),(10842,'Beingawesomeism','https://codeforces.com/problemset/problem/1280/B',2,3),(10843,'Cut and Paste','https://codeforces.com/problemset/problem/1280/A',2,3),(10844,'New Year and Handle Change','https://codeforces.com/problemset/problem/1279/F',3,3),(10845,'New Year Permutations','https://codeforces.com/problemset/problem/1279/E',3,3),(10846,'Santa\'s Bot','https://codeforces.com/problemset/problem/1279/D',2,3),(10847,'Stack of Presents','https://codeforces.com/problemset/problem/1279/C',1,3),(10848,'Verse For Santa','https://codeforces.com/problemset/problem/1279/B',1,3),(10849,'New Year Garland','https://codeforces.com/problemset/problem/1279/A',1,3),(10850,'Cards','https://codeforces.com/problemset/problem/1278/F',3,3),(10851,'Tests for problem D','https://codeforces.com/problemset/problem/1278/E',2,3),(10852,'Segment Tree','https://codeforces.com/problemset/problem/1278/D',2,3),(10853,'Berry Jam','https://codeforces.com/problemset/problem/1278/C',2,3),(10854,'A and B','https://codeforces.com/problemset/problem/1278/B',1,3),(10855,'Shuffle Hashing','https://codeforces.com/problemset/problem/1278/A',1,3),(10856,'Let\'s Play the Words?','https://codeforces.com/problemset/problem/1277/D',2,3),(10857,'Make Them Odd','https://codeforces.com/problemset/problem/1277/B',1,3),(10858,'Happy Birthday, Polycarp!','https://codeforces.com/problemset/problem/1277/A',1,3),(10859,'Asterisk Substrings','https://codeforces.com/problemset/problem/1276/F',3,3),(10860,'Four Stones','https://codeforces.com/problemset/problem/1276/E',3,3),(10861,'Tree Elimination','https://codeforces.com/problemset/problem/1276/D',3,3),(10862,'Beautiful Rectangle','https://codeforces.com/problemset/problem/1276/C',2,3),(10863,'Two Fairs','https://codeforces.com/problemset/problem/1276/B',2,3),(10864,'As Simple as One and Two','https://codeforces.com/problemset/problem/1276/A',1,3),(10865,'Шардирование постов','https://codeforces.com/problemset/problem/1275/F',6,3),(10866,'Контрольная сумма','https://codeforces.com/problemset/problem/1275/E3',6,3),(10867,'Контрольная сумма','https://codeforces.com/problemset/problem/1275/E2',6,3),(10868,'Контрольная сумма','https://codeforces.com/problemset/problem/1275/E1',6,3),(10869,'Storage2','https://codeforces.com/problemset/problem/1275/D',6,3),(10870,'#define Задача B ...','https://codeforces.com/problemset/problem/1275/C',6,3),(10871,'Code Review','https://codeforces.com/problemset/problem/1275/B',6,3),(10872,'Скрытый друг','https://codeforces.com/problemset/problem/1275/A',6,3),(10873,'Two Bracket Sequences','https://codeforces.com/problemset/problem/1272/F',2,3),(10874,'Nearest Opposite Parity','https://codeforces.com/problemset/problem/1272/E',2,3),(10875,'Remove One Element','https://codeforces.com/problemset/problem/1272/D',1,3),(10876,'Yet Another Broken Keyboard','https://codeforces.com/problemset/problem/1272/C',1,3),(10877,'Snow Walking Robot','https://codeforces.com/problemset/problem/1272/B',1,3),(10878,'Three Friends','https://codeforces.com/problemset/problem/1272/A',1,3),(10879,'Divide The Students','https://codeforces.com/problemset/problem/1271/F',3,3),(10880,'Common Number','https://codeforces.com/problemset/problem/1271/E',2,3),(10881,'Portals','https://codeforces.com/problemset/problem/1271/D',2,3),(10882,'Shawarma Tent','https://codeforces.com/problemset/problem/1271/C',1,3),(10883,'Blocks','https://codeforces.com/problemset/problem/1271/B',1,3),(10884,'Suits','https://codeforces.com/problemset/problem/1271/A',1,3),(10885,'Xor on Figures','https://codeforces.com/problemset/problem/1270/I',3,3),(10886,'Number of Components','https://codeforces.com/problemset/problem/1270/H',3,3),(10887,'Subset with Zero Sum','https://codeforces.com/problemset/problem/1270/G',3,3),(10888,'Awesome Substrings','https://codeforces.com/problemset/problem/1270/F',3,3),(10889,'Divide Points','https://codeforces.com/problemset/problem/1270/E',2,3),(10890,'Strange Device','https://codeforces.com/problemset/problem/1270/D',2,3),(10891,'Make Good','https://codeforces.com/problemset/problem/1270/C',1,3),(10892,'Interesting Subarray','https://codeforces.com/problemset/problem/1270/B',1,3),(10893,'Card Game','https://codeforces.com/problemset/problem/1270/A',1,3),(10894,'Modulo Equality','https://codeforces.com/problemset/problem/1269/B',1,3),(10895,'Equation','https://codeforces.com/problemset/problem/1269/A',1,3),(10896,'Happy Cactus','https://codeforces.com/problemset/problem/1268/E',3,3),(10897,'Invertation in Tournament','https://codeforces.com/problemset/problem/1268/D',3,3),(10898,'K Integers','https://codeforces.com/problemset/problem/1268/C',2,3),(10899,'Domino for Young','https://codeforces.com/problemset/problem/1268/B',2,3),(10900,'Long Beautiful Integer','https://codeforces.com/problemset/problem/1268/A',2,3),(10901,'Lexicography','https://codeforces.com/problemset/problem/1267/L',2,3),(10902,'Key Storage','https://codeforces.com/problemset/problem/1267/K',2,3),(10903,'Just Arrange the Icons','https://codeforces.com/problemset/problem/1267/J',2,3),(10904,'Intriguing Selection','https://codeforces.com/problemset/problem/1267/I',3,3),(10905,'Help BerLine','https://codeforces.com/problemset/problem/1267/H',3,3),(10906,'Game Relics','https://codeforces.com/problemset/problem/1267/G',3,3),(10907,'Foolprüf Security','https://codeforces.com/problemset/problem/1267/F',3,3),(10908,'Elections','https://codeforces.com/problemset/problem/1267/E',2,3),(10909,'DevOps Best Practices','https://codeforces.com/problemset/problem/1267/D',3,3),(10910,'Cactus Revenge','https://codeforces.com/problemset/problem/1267/C',3,3),(10911,'Balls of Buma','https://codeforces.com/problemset/problem/1267/B',1,3),(10912,'Apprentice Learning Trajectory','https://codeforces.com/problemset/problem/1267/A',2,3),(10913,'Red-Blue Graph','https://codeforces.com/problemset/problem/1266/H',3,3),(10914,'Permutation Concatenation','https://codeforces.com/problemset/problem/1266/G',3,3),(10915,'Almost Same Distance','https://codeforces.com/problemset/problem/1266/F',3,3),(10916,'Spaceship Solitaire','https://codeforces.com/problemset/problem/1266/E',2,3),(10917,'Decreasing Debts','https://codeforces.com/problemset/problem/1266/D',2,3),(10918,'Diverse Matrix','https://codeforces.com/problemset/problem/1266/C',1,3),(10919,'Dice Tower','https://codeforces.com/problemset/problem/1266/B',1,3),(10920,'Competitive Programmer','https://codeforces.com/problemset/problem/1266/A',1,3),(10921,'Beautiful Mirrors','https://codeforces.com/problemset/problem/1265/E',2,3),(10922,'Beautiful Numbers','https://codeforces.com/problemset/problem/1265/B',1,3),(10923,'Beautiful String','https://codeforces.com/problemset/problem/1265/A',1,3),(10924,'Beautiful Fibonacci Problem','https://codeforces.com/problemset/problem/1264/F',3,3),(10925,'Beautiful League','https://codeforces.com/problemset/problem/1264/E',3,3),(10926,'Beautiful Bracket Sequence (hard version)','https://codeforces.com/problemset/problem/1264/D2',3,3),(10927,'Beautiful Bracket Sequence (easy version)','https://codeforces.com/problemset/problem/1264/D1',3,3),(10928,'Beautiful Mirrors with queries','https://codeforces.com/problemset/problem/1264/C',2,3),(10929,'Beautiful Sequence','https://codeforces.com/problemset/problem/1264/B',2,3),(10930,'Beautiful Regional Contest','https://codeforces.com/problemset/problem/1264/A',1,3),(10931,'Economic Difficulties','https://codeforces.com/problemset/problem/1263/F',2,3),(10932,'Editor','https://codeforces.com/problemset/problem/1263/E',2,3),(10933,'Secret Passwords','https://codeforces.com/problemset/problem/1263/D',1,3),(10934,'Everyone is a Winner!','https://codeforces.com/problemset/problem/1263/C',1,3),(10935,'PIN Codes','https://codeforces.com/problemset/problem/1263/B',1,3),(10936,'Sweet Problem','https://codeforces.com/problemset/problem/1263/A',1,3),(10937,'Xor-Set','https://codeforces.com/problemset/problem/1261/F',3,3),(10938,'Colored Tree','https://codeforces.com/problemset/problem/1260/F',3,3),(10939,'Tournament','https://codeforces.com/problemset/problem/1260/E',2,3),(10940,'A Game with Traps','https://codeforces.com/problemset/problem/1260/D',2,3),(10941,'Infinite Fence','https://codeforces.com/problemset/problem/1260/C',2,3),(10942,'Obtain Two Zeroes','https://codeforces.com/problemset/problem/1260/B',1,3),(10943,'Heating','https://codeforces.com/problemset/problem/1260/A',1,3),(10944,'Divisor Set','https://codeforces.com/problemset/problem/1257/G',3,3),(10945,'Make Them Similar','https://codeforces.com/problemset/problem/1257/F',2,3),(10946,'The Contest','https://codeforces.com/problemset/problem/1257/E',2,3),(10947,'Yet Another Monster Killing Problem','https://codeforces.com/problemset/problem/1257/D',2,3),(10948,'Dominated Subarray','https://codeforces.com/problemset/problem/1257/C',1,3),(10949,'Magic Stick','https://codeforces.com/problemset/problem/1257/B',1,3),(10950,'Two Rival Students','https://codeforces.com/problemset/problem/1257/A',1,3),(10951,'Equalizing Two Strings','https://codeforces.com/problemset/problem/1256/F',2,3),(10952,'Yet Another Division Into Teams','https://codeforces.com/problemset/problem/1256/E',2,3),(10953,'Binary String Minimizing','https://codeforces.com/problemset/problem/1256/D',1,3),(10954,'Platforms Jumping','https://codeforces.com/problemset/problem/1256/C',2,3),(10955,'Minimize the Permutation','https://codeforces.com/problemset/problem/1256/B',1,3),(10956,'Payment Without Change','https://codeforces.com/problemset/problem/1256/A',1,3),(10957,'League of Leesins','https://codeforces.com/problemset/problem/1255/C',2,3),(10958,'Fridge Lockers','https://codeforces.com/problemset/problem/1255/B',1,3),(10959,'Changing Volume','https://codeforces.com/problemset/problem/1255/A',1,3),(10960,'Send Tree to Charlie','https://codeforces.com/problemset/problem/1254/E',3,3),(10961,'Tree Queries','https://codeforces.com/problemset/problem/1254/D',3,3),(10962,'Point Ordering','https://codeforces.com/problemset/problem/1254/C',2,3),(10963,'Send Boxes to Alice (Hard Version)','https://codeforces.com/problemset/problem/1254/B2',2,3),(10964,'Send Boxes to Alice (Easy Version)','https://codeforces.com/problemset/problem/1254/B1',2,3),(10965,'Feeding Chicken','https://codeforces.com/problemset/problem/1254/A',2,3),(10966,'Cheap Robot','https://codeforces.com/problemset/problem/1253/F',2,3),(10967,'Antenna Coverage','https://codeforces.com/problemset/problem/1253/E',2,3),(10968,'Harmonious Graph','https://codeforces.com/problemset/problem/1253/D',2,3),(10969,'Sweets Eating','https://codeforces.com/problemset/problem/1253/C',1,3),(10970,'Silly Mistake','https://codeforces.com/problemset/problem/1253/B',1,3),(10971,'Single Push','https://codeforces.com/problemset/problem/1253/A',1,3),(10972,'Road Construction','https://codeforces.com/problemset/problem/1252/L',2,3),(10973,'Addition Robot','https://codeforces.com/problemset/problem/1252/K',2,3),(10974,'Tiling Terrace','https://codeforces.com/problemset/problem/1252/J',2,3),(10975,'Mission Possible','https://codeforces.com/problemset/problem/1252/I',3,3),(10976,'Twin Buildings','https://codeforces.com/problemset/problem/1252/H',2,3),(10977,'Performance Review','https://codeforces.com/problemset/problem/1252/G',2,3),(10978,'Regular Forestation','https://codeforces.com/problemset/problem/1252/F',2,3),(10979,'Songwriter','https://codeforces.com/problemset/problem/1252/E',2,3),(10980,'Find String in a Grid','https://codeforces.com/problemset/problem/1252/D',3,3),(10981,'Even Path','https://codeforces.com/problemset/problem/1252/C',2,3),(10982,'Cleaning Robots','https://codeforces.com/problemset/problem/1252/B',2,3),(10983,'Copying Homework','https://codeforces.com/problemset/problem/1252/A',1,3),(10984,'Red-White Fence','https://codeforces.com/problemset/problem/1251/F',2,3),(10985,'Voting (Hard Version)','https://codeforces.com/problemset/problem/1251/E2',2,3),(10986,'Voting (Easy Version)','https://codeforces.com/problemset/problem/1251/E1',2,3),(10987,'Salary Changing','https://codeforces.com/problemset/problem/1251/D',2,3),(10988,'Minimize The Integer','https://codeforces.com/problemset/problem/1251/C',2,3),(10989,'Binary Palindromes','https://codeforces.com/problemset/problem/1251/B',1,3),(10990,'Broken Keyboard','https://codeforces.com/problemset/problem/1251/A',1,3),(10991,'Wires','https://codeforces.com/problemset/problem/1250/N',2,3),(10992,'SmartGarden','https://codeforces.com/problemset/problem/1250/M',2,3),(10993,'Divide The Students','https://codeforces.com/problemset/problem/1250/L',1,3),(10994,'Projectors','https://codeforces.com/problemset/problem/1250/K',3,3),(10995,'The Parade','https://codeforces.com/problemset/problem/1250/J',2,3),(10996,'Show Must Go On','https://codeforces.com/problemset/problem/1250/I',3,3),(10997,'Happy Birthday','https://codeforces.com/problemset/problem/1250/H',1,3),(10998,'Discarding Game','https://codeforces.com/problemset/problem/1250/G',2,3),(10999,'Data Center','https://codeforces.com/problemset/problem/1250/F',1,3),(11000,'The Coronation','https://codeforces.com/problemset/problem/1250/E',2,3),(11001,'Conference Problem','https://codeforces.com/problemset/problem/1250/D',3,3),(11002,'Trip to Saint Petersburg','https://codeforces.com/problemset/problem/1250/C',2,3),(11003,'The Feast and the Bus','https://codeforces.com/problemset/problem/1250/B',2,3),(11004,'Berstagram','https://codeforces.com/problemset/problem/1250/A',1,3),(11005,'Maximum Weight Subset','https://codeforces.com/problemset/problem/1249/F',2,3),(11006,'By Elevator or Stairs?','https://codeforces.com/problemset/problem/1249/E',2,3),(11007,'Too Many Segments (hard version)','https://codeforces.com/problemset/problem/1249/D2',2,3),(11008,'Too Many Segments (easy version)','https://codeforces.com/problemset/problem/1249/D1',2,3),(11009,'Good Numbers (hard version)','https://codeforces.com/problemset/problem/1249/C2',1,3),(11010,'Good Numbers (easy version)','https://codeforces.com/problemset/problem/1249/C1',1,3),(11011,'Books Exchange (hard version)','https://codeforces.com/problemset/problem/1249/B2',1,3),(11012,'Books Exchange (easy version)','https://codeforces.com/problemset/problem/1249/B1',1,3),(11013,'Yet Another Dividing into Teams','https://codeforces.com/problemset/problem/1249/A',1,3),(11014,'The World Is Just a Programming Task (Easy Version)','https://codeforces.com/problemset/problem/1248/D1',2,3),(11015,'Grow The Tree','https://codeforces.com/problemset/problem/1248/B',1,3),(11016,'Integer Points','https://codeforces.com/problemset/problem/1248/A',1,3),(11017,'Cursor Distance','https://codeforces.com/problemset/problem/1246/F',3,3),(11018,'Daniel and Spring Cleaning','https://codeforces.com/problemset/problem/1245/F',2,3),(11019,'Hyakugoku and Ladders','https://codeforces.com/problemset/problem/1245/E',2,3),(11020,'Shichikuji and Power Grid','https://codeforces.com/problemset/problem/1245/D',2,3),(11021,'Constanze\'s Machine','https://codeforces.com/problemset/problem/1245/C',1,3),(11022,'Restricted RPS','https://codeforces.com/problemset/problem/1245/B',1,3),(11023,'Good ol\' Numbers Coloring','https://codeforces.com/problemset/problem/1245/A',1,3),(11024,'Running in Pairs','https://codeforces.com/problemset/problem/1244/G',2,3),(11025,'Chips','https://codeforces.com/problemset/problem/1244/F',2,3),(11026,'Minimizing Difference','https://codeforces.com/problemset/problem/1244/E',2,3),(11027,'Paint the Tree','https://codeforces.com/problemset/problem/1244/D',2,3),(11028,'The Football Season','https://codeforces.com/problemset/problem/1244/C',2,3),(11029,'Rooms and Staircases','https://codeforces.com/problemset/problem/1244/B',1,3),(11030,'Pens and Pencils','https://codeforces.com/problemset/problem/1244/A',1,3),(11031,'Character Swap (Hard Version)','https://codeforces.com/problemset/problem/1243/B2',2,3),(11032,'Character Swap (Easy Version)','https://codeforces.com/problemset/problem/1243/B1',1,3),(11033,'Maximum Square','https://codeforces.com/problemset/problem/1243/A',1,3),(11034,'Planar Perimeter','https://codeforces.com/problemset/problem/1242/E',3,3),(11035,'Number Discovery','https://codeforces.com/problemset/problem/1242/D',3,3),(11036,'Sum Balance','https://codeforces.com/problemset/problem/1242/C',2,3),(11037,'0-1 MST','https://codeforces.com/problemset/problem/1242/B',2,3),(11038,'Tile Painting','https://codeforces.com/problemset/problem/1242/A',1,3),(11039,'Football','https://codeforces.com/problemset/problem/1240/F',3,3),(11040,'Swiper, no swiping!','https://codeforces.com/problemset/problem/1239/F',3,3),(11041,'Turtle','https://codeforces.com/problemset/problem/1239/E',3,3),(11042,'Catowice City','https://codeforces.com/problemset/problem/1239/D',2,3),(11043,'Queue in the Train','https://codeforces.com/problemset/problem/1239/C',2,3),(11044,'The World Is Just a Programming Task (Hard Version)','https://codeforces.com/problemset/problem/1239/B',2,3),(11045,'Ivan the Fool and the Probability Theory','https://codeforces.com/problemset/problem/1239/A',2,3),(11046,'Adilbek and the Watering System','https://codeforces.com/problemset/problem/1238/G',3,3),(11047,'The Maximum Subtree','https://codeforces.com/problemset/problem/1238/F',2,3),(11048,'Keyboard Purchase','https://codeforces.com/problemset/problem/1238/E',2,3),(11049,'AB-string','https://codeforces.com/problemset/problem/1238/D',2,3),(11050,'Standard Free2play','https://codeforces.com/problemset/problem/1238/C',2,3),(11051,'Kill `Em All','https://codeforces.com/problemset/problem/1238/B',1,3),(11052,'Prime Subtraction','https://codeforces.com/problemset/problem/1238/A',1,3),(11053,'Balanced Reversals','https://codeforces.com/problemset/problem/1237/H',3,3),(11054,'Balanced Distribution','https://codeforces.com/problemset/problem/1237/G',3,3),(11055,'Balanced Domino Placements','https://codeforces.com/problemset/problem/1237/F',3,3),(11056,'Balanced Binary Search Trees','https://codeforces.com/problemset/problem/1237/E',2,3),(11057,'Balanced Playlist','https://codeforces.com/problemset/problem/1237/D',2,3),(11058,'Balanced Removals (Harder)','https://codeforces.com/problemset/problem/1237/C2',2,3),(11059,'Balanced Removals (Easier)','https://codeforces.com/problemset/problem/1237/C1',2,3),(11060,'Balanced Tunnel','https://codeforces.com/problemset/problem/1237/B',1,3),(11061,'Balanced Rating Changes','https://codeforces.com/problemset/problem/1237/A',1,3),(11062,'Alice and the Cactus','https://codeforces.com/problemset/problem/1236/F',3,3),(11063,'Alice and the Unfair Game','https://codeforces.com/problemset/problem/1236/E',2,3),(11064,'Alice and the Doll','https://codeforces.com/problemset/problem/1236/D',2,3),(11065,'Labs','https://codeforces.com/problemset/problem/1236/C',1,3),(11066,'Alice and the List of Presents','https://codeforces.com/problemset/problem/1236/B',1,3),(11067,'Stones','https://codeforces.com/problemset/problem/1236/A',1,3),(11068,'Yet Another Substring Reverse','https://codeforces.com/problemset/problem/1234/F',2,3),(11069,'Special Permutations','https://codeforces.com/problemset/problem/1234/E',2,3),(11070,'Distinct Characters Queries','https://codeforces.com/problemset/problem/1234/D',2,3),(11071,'Pipes','https://codeforces.com/problemset/problem/1234/C',1,3),(11072,'Social Network (hard version)','https://codeforces.com/problemset/problem/1234/B2',1,3),(11073,'Social Network (easy version)','https://codeforces.com/problemset/problem/1234/B1',1,3),(11074,'Equalize Prices Again','https://codeforces.com/problemset/problem/1234/A',1,3),(11075,'Middle-Out','https://codeforces.com/problemset/problem/1231/E',2,3),(11076,'Increasing Matrix','https://codeforces.com/problemset/problem/1231/C',1,3),(11077,'Ania and Minimizing','https://codeforces.com/problemset/problem/1230/B',1,3),(11078,'Dawid and Bags of Candies','https://codeforces.com/problemset/problem/1230/A',1,3),(11079,'One Node is Gone','https://codeforces.com/problemset/problem/1228/F',2,3),(11080,'Another Filling the Grid','https://codeforces.com/problemset/problem/1228/E',2,3),(11081,'Complete Tripartite','https://codeforces.com/problemset/problem/1228/D',2,3),(11082,'Primes and Multiplication','https://codeforces.com/problemset/problem/1228/C',2,3),(11083,'Filling the Grid','https://codeforces.com/problemset/problem/1228/B',1,3),(11084,'Distinct Digits','https://codeforces.com/problemset/problem/1228/A',1,3),(11085,'Not Same','https://codeforces.com/problemset/problem/1227/G',3,3),(11086,'Wrong Answer on test 233 (Hard Version)','https://codeforces.com/problemset/problem/1227/F2',2,3),(11087,'Wrong Answer on test 233 (Easy Version)','https://codeforces.com/problemset/problem/1227/F1',2,3),(11088,'Arson In Berland Forest','https://codeforces.com/problemset/problem/1227/E',2,3),(11089,'Optimal Subsequences (Hard Version)','https://codeforces.com/problemset/problem/1227/D2',2,3),(11090,'Optimal Subsequences (Easy Version)','https://codeforces.com/problemset/problem/1227/D1',2,3),(11091,'Messy','https://codeforces.com/problemset/problem/1227/C',2,3),(11092,'Box','https://codeforces.com/problemset/problem/1227/B',1,3),(11093,'Math Problem','https://codeforces.com/problemset/problem/1227/A',1,3),(11094,'To Make 1','https://codeforces.com/problemset/problem/1225/G',3,3),(11095,'Tree Factory','https://codeforces.com/problemset/problem/1225/F',2,3),(11096,'Rock Is Push','https://codeforces.com/problemset/problem/1225/E',2,3),(11097,'Power Products','https://codeforces.com/problemset/problem/1225/D',2,3),(11098,'p-binary','https://codeforces.com/problemset/problem/1225/C',2,3),(11099,'TV Subscriptions (Hard Version)','https://codeforces.com/problemset/problem/1225/B2',1,3),(11100,'TV Subscriptions (Easy Version)','https://codeforces.com/problemset/problem/1225/B1',1,3),(11101,'Forgetting Things','https://codeforces.com/problemset/problem/1225/A',1,3),(11102,'Wooden Raft','https://codeforces.com/problemset/problem/1223/G',3,3),(11103,'Stack Exterminable Arrays','https://codeforces.com/problemset/problem/1223/F',3,3),(11104,'Paint the Tree','https://codeforces.com/problemset/problem/1223/E',2,3),(11105,'Sequence Sorting','https://codeforces.com/problemset/problem/1223/D',2,3),(11106,'Save the Nature','https://codeforces.com/problemset/problem/1223/C',2,3),(11107,'Strings Equalization','https://codeforces.com/problemset/problem/1223/B',1,3),(11108,'CME','https://codeforces.com/problemset/problem/1223/A',1,3),(11109,'Graph And Numbers','https://codeforces.com/problemset/problem/1221/G',3,3),(11110,'Choose a Square','https://codeforces.com/problemset/problem/1221/F',2,3),(11111,'Game With String','https://codeforces.com/problemset/problem/1221/E',2,3),(11112,'Make The Fence Great Again','https://codeforces.com/problemset/problem/1221/D',2,3),(11113,'Perfect Team','https://codeforces.com/problemset/problem/1221/C',1,3),(11114,'Knights','https://codeforces.com/problemset/problem/1221/B',1,3),(11115,'2048 Game','https://codeforces.com/problemset/problem/1221/A',1,3),(11116,'Geolocation','https://codeforces.com/problemset/problem/1220/G',3,3),(11117,'Gardener Alex','https://codeforces.com/problemset/problem/1220/F',3,3),(11118,'Tourism','https://codeforces.com/problemset/problem/1220/E',2,3),(11119,'Alex and Julian','https://codeforces.com/problemset/problem/1220/D',2,3),(11120,'Substring Game in the Lesson','https://codeforces.com/problemset/problem/1220/C',1,3),(11121,'Multiplication Table','https://codeforces.com/problemset/problem/1220/B',1,3),(11122,'Cards','https://codeforces.com/problemset/problem/1220/A',1,3),(11123,'Harvester','https://codeforces.com/problemset/problem/1219/G',2,3),(11124,'Periodic integer number','https://codeforces.com/problemset/problem/1219/C',2,3),(11125,'The Light Square','https://codeforces.com/problemset/problem/1218/I',2,3),(11126,'Function Composition','https://codeforces.com/problemset/problem/1218/H',3,3),(11127,'Alpha planetary system','https://codeforces.com/problemset/problem/1218/G',3,3),(11128,'Workout plan','https://codeforces.com/problemset/problem/1218/F',1,3),(11129,'Product Tuples','https://codeforces.com/problemset/problem/1218/E',2,3),(11130,'Xor Spanning Tree','https://codeforces.com/problemset/problem/1218/D',2,3),(11131,'Jumping Transformers','https://codeforces.com/problemset/problem/1218/C',3,3),(11132,'Guarding warehouses','https://codeforces.com/problemset/problem/1218/B',3,3),(11133,'BubbleReactor','https://codeforces.com/problemset/problem/1218/A',3,3),(11134,'Forced Online Queries Problem','https://codeforces.com/problemset/problem/1217/F',3,3),(11135,'Sum Queries?','https://codeforces.com/problemset/problem/1217/E',2,3),(11136,'Coloring Edges','https://codeforces.com/problemset/problem/1217/D',2,3),(11137,'The Number Of Good Substrings','https://codeforces.com/problemset/problem/1217/C',2,3),(11138,'Zmei Gorynich','https://codeforces.com/problemset/problem/1217/B',2,3),(11139,'Creating a Character','https://codeforces.com/problemset/problem/1217/A',1,3),(11140,'Wi-Fi','https://codeforces.com/problemset/problem/1216/F',2,3),(11141,'Numerical Sequence (hard version)','https://codeforces.com/problemset/problem/1216/E2',2,3),(11142,'Numerical Sequence (easy version)','https://codeforces.com/problemset/problem/1216/E1',2,3),(11143,'Swords','https://codeforces.com/problemset/problem/1216/D',1,3),(11144,'White Sheet','https://codeforces.com/problemset/problem/1216/C',2,3),(11145,'Shooting','https://codeforces.com/problemset/problem/1216/B',1,3),(11146,'Prefixes','https://codeforces.com/problemset/problem/1216/A',1,3),(11147,'Radio Stations','https://codeforces.com/problemset/problem/1215/F',3,3),(11148,'Marbles','https://codeforces.com/problemset/problem/1215/E',2,3),(11149,'Ticket Game','https://codeforces.com/problemset/problem/1215/D',2,3),(11150,'Swap Letters','https://codeforces.com/problemset/problem/1215/C',1,3),(11151,'The Number of Products','https://codeforces.com/problemset/problem/1215/B',1,3),(11152,'Yellow Cards','https://codeforces.com/problemset/problem/1215/A',1,3),(11153,'Tiles Placement','https://codeforces.com/problemset/problem/1214/H',3,3),(11154,'Feeling Good','https://codeforces.com/problemset/problem/1214/G',3,3),(11155,'Employment','https://codeforces.com/problemset/problem/1214/F',3,3),(11156,'Petya and Construction Set','https://codeforces.com/problemset/problem/1214/E',2,3),(11157,'Treasure Island','https://codeforces.com/problemset/problem/1214/D',2,3),(11158,'Bad Sequence','https://codeforces.com/problemset/problem/1214/C',1,3),(11159,'Badges','https://codeforces.com/problemset/problem/1214/B',1,3),(11160,'Optimal Currency Exchange','https://codeforces.com/problemset/problem/1214/A',1,3),(11161,'Path Queries','https://codeforces.com/problemset/problem/1213/G',2,3),(11162,'Unstable String Sort','https://codeforces.com/problemset/problem/1213/F',2,3),(11163,'Two Small Strings','https://codeforces.com/problemset/problem/1213/E',2,3),(11164,'Equalizing by Division (hard version)','https://codeforces.com/problemset/problem/1213/D2',2,3),(11165,'Equalizing by Division (easy version)','https://codeforces.com/problemset/problem/1213/D1',1,3),(11166,'Book Reading','https://codeforces.com/problemset/problem/1213/C',1,3),(11167,'Bad Prices','https://codeforces.com/problemset/problem/1213/B',1,3),(11168,'Chips Moving','https://codeforces.com/problemset/problem/1213/A',1,3),(11169,'Unusual Graph','https://codeforces.com/problemset/problem/1211/I',3,3),(11170,'Road Repair in Treeland','https://codeforces.com/problemset/problem/1211/H',3,3),(11171,'King\'s Path','https://codeforces.com/problemset/problem/1211/G',2,3),(11172,'kotlinkotlinkotlinkotlin...','https://codeforces.com/problemset/problem/1211/F',2,3),(11173,'Double Permutation Inc.','https://codeforces.com/problemset/problem/1211/E',2,3),(11174,'Teams','https://codeforces.com/problemset/problem/1211/D',2,3),(11175,'Ice Cream','https://codeforces.com/problemset/problem/1211/C',2,3),(11176,'Traveling Around the Golden Ring of Berland','https://codeforces.com/problemset/problem/1211/B',1,3),(11177,'Three Problems','https://codeforces.com/problemset/problem/1211/A',1,3),(11178,'Mateusz and Escape Room','https://codeforces.com/problemset/problem/1210/G',3,3),(11179,'Marek and Matching (hard version)','https://codeforces.com/problemset/problem/1210/F2',3,3),(11180,'Marek and Matching (easy version)','https://codeforces.com/problemset/problem/1210/F1',3,3),(11181,'Wojtek and Card Tricks','https://codeforces.com/problemset/problem/1210/E',3,3),(11182,'Konrad and Company Evaluation','https://codeforces.com/problemset/problem/1210/D',2,3),(11183,'Kamil and Making a Stream','https://codeforces.com/problemset/problem/1210/C',2,3),(11184,'Marcin and Training Camp','https://codeforces.com/problemset/problem/1210/B',2,3),(11185,'Anadi and Domino','https://codeforces.com/problemset/problem/1210/A',2,3),(11186,'Moving Walkways','https://codeforces.com/problemset/problem/1209/H',3,3),(11187,'Into Blocks (hard version)','https://codeforces.com/problemset/problem/1209/G2',3,3),(11188,'Into Blocks (easy version)','https://codeforces.com/problemset/problem/1209/G1',2,3),(11189,'Koala and Notebook','https://codeforces.com/problemset/problem/1209/F',3,3),(11190,'Rotate Columns (hard version)','https://codeforces.com/problemset/problem/1209/E2',2,3),(11191,'Rotate Columns (easy version)','https://codeforces.com/problemset/problem/1209/E1',2,3),(11192,'Cow and Snacks','https://codeforces.com/problemset/problem/1209/D',2,3),(11193,'Paint the Digits','https://codeforces.com/problemset/problem/1209/C',1,3),(11194,'Koala and Lights','https://codeforces.com/problemset/problem/1209/B',1,3),(11195,'Paint the Numbers','https://codeforces.com/problemset/problem/1209/A',1,3),(11196,'Red Blue Tree','https://codeforces.com/problemset/problem/1208/H',3,3),(11197,'Polygons','https://codeforces.com/problemset/problem/1208/G',3,3),(11198,'Bits And Pieces','https://codeforces.com/problemset/problem/1208/F',3,3),(11199,'Let Them Slide','https://codeforces.com/problemset/problem/1208/E',2,3),(11200,'Restore Permutation','https://codeforces.com/problemset/problem/1208/D',2,3),(11201,'Magic Grid','https://codeforces.com/problemset/problem/1208/C',2,3),(11202,'Uniqueness','https://codeforces.com/problemset/problem/1208/B',1,3),(11203,'XORinacci','https://codeforces.com/problemset/problem/1208/A',1,3),(11204,'Indie Album','https://codeforces.com/problemset/problem/1207/G',3,3),(11205,'Remainder Problem','https://codeforces.com/problemset/problem/1207/F',2,3),(11206,'XOR Guessing','https://codeforces.com/problemset/problem/1207/E',2,3),(11207,'Number Of Permutations','https://codeforces.com/problemset/problem/1207/D',2,3),(11208,'Gas Pipeline','https://codeforces.com/problemset/problem/1207/C',1,3),(11209,'Square Filling','https://codeforces.com/problemset/problem/1207/B',1,3),(11210,'There Are Two Types Of Burgers','https://codeforces.com/problemset/problem/1207/A',1,3),(11211,'Make Product Equal One','https://codeforces.com/problemset/problem/1206/B',1,3),(11212,'Choose Two Numbers','https://codeforces.com/problemset/problem/1206/A',1,3),(11213,'Beauty of a Permutation','https://codeforces.com/problemset/problem/1205/F',3,3),(11214,'Expected Value Again','https://codeforces.com/problemset/problem/1205/E',3,3),(11215,'Almost All','https://codeforces.com/problemset/problem/1205/D',3,3),(11216,'Palindromic Paths','https://codeforces.com/problemset/problem/1205/C',2,3),(11217,'Shortest Cycle','https://codeforces.com/problemset/problem/1205/B',2,3),(11218,'Almost Equal','https://codeforces.com/problemset/problem/1205/A',1,3),(11219,'Natasha, Sasha and the Prefix Sums','https://codeforces.com/problemset/problem/1204/E',2,3),(11220,'Kirk and a Binary String (hard version)','https://codeforces.com/problemset/problem/1204/D2',2,3),(11221,'Kirk and a Binary String (easy version)','https://codeforces.com/problemset/problem/1204/D1',2,3),(11222,'Anna, Svyatoslav and Maps','https://codeforces.com/problemset/problem/1204/C',2,3),(11223,'Mislove Has Lost an Array','https://codeforces.com/problemset/problem/1204/B',1,3),(11224,'BowWow and the Timetable','https://codeforces.com/problemset/problem/1204/A',1,3),(11225,'Complete the Projects (hard version)','https://codeforces.com/problemset/problem/1203/F2',2,3),(11226,'Complete the Projects (easy version)','https://codeforces.com/problemset/problem/1203/F1',2,3),(11227,'Boxers','https://codeforces.com/problemset/problem/1203/E',1,3),(11228,'Remove the Substring (hard version)','https://codeforces.com/problemset/problem/1203/D2',2,3),(11229,'Remove the Substring (easy version)','https://codeforces.com/problemset/problem/1203/D1',2,3),(11230,'Common Divisors','https://codeforces.com/problemset/problem/1203/C',1,3),(11231,'Equal Rectangles','https://codeforces.com/problemset/problem/1203/B',1,3),(11232,'Circle of Students','https://codeforces.com/problemset/problem/1203/A',1,3),(11233,'You Are Given Some Letters...','https://codeforces.com/problemset/problem/1202/F',3,3),(11234,'You Are Given Some Strings...','https://codeforces.com/problemset/problem/1202/E',2,3),(11235,'Print a 1337-string...','https://codeforces.com/problemset/problem/1202/D',2,3),(11236,'You Are Given a WASD-string...','https://codeforces.com/problemset/problem/1202/C',2,3),(11237,'You Are Given a Decimal String...','https://codeforces.com/problemset/problem/1202/B',2,3),(11238,'You Are Given Two Binary Strings...','https://codeforces.com/problemset/problem/1202/A',1,3),(11239,'Knightmare (hard)','https://codeforces.com/problemset/problem/1201/E2',3,3),(11240,'Knightmare (easy)','https://codeforces.com/problemset/problem/1201/E1',3,3),(11241,'Treasure Hunting','https://codeforces.com/problemset/problem/1201/D',2,3),(11242,'Maximum Median','https://codeforces.com/problemset/problem/1201/C',1,3),(11243,'Zero Array','https://codeforces.com/problemset/problem/1201/B',1,3),(11244,'Important Exam','https://codeforces.com/problemset/problem/1201/A',1,3),(11245,'Graph Traveler','https://codeforces.com/problemset/problem/1200/F',2,3),(11246,'Compress Words','https://codeforces.com/problemset/problem/1200/E',2,3),(11247,'White Lines','https://codeforces.com/problemset/problem/1200/D',2,3),(11248,'Round Corridor','https://codeforces.com/problemset/problem/1200/C',1,3),(11249,'Block Adventure','https://codeforces.com/problemset/problem/1200/B',1,3),(11250,'Hotelier','https://codeforces.com/problemset/problem/1200/A',1,3),(11251,'Water Lily','https://codeforces.com/problemset/problem/1199/B',1,3),(11252,'City Day','https://codeforces.com/problemset/problem/1199/A',1,3),(11253,'GCD Groups 2','https://codeforces.com/problemset/problem/1198/F',3,3),(11254,'Rectangle Painting 2','https://codeforces.com/problemset/problem/1198/E',2,3),(11255,'Rectangle Painting 1','https://codeforces.com/problemset/problem/1198/D',2,3),(11256,'Matching vs  Independent Set','https://codeforces.com/problemset/problem/1198/C',2,3),(11257,'Welfare State','https://codeforces.com/problemset/problem/1198/B',2,3),(11258,'MP3','https://codeforces.com/problemset/problem/1198/A',2,3),(11259,'Coloring Game','https://codeforces.com/problemset/problem/1197/F',3,3),(11260,'Culture Code','https://codeforces.com/problemset/problem/1197/E',2,3),(11261,'Yet Another Subarray Problem','https://codeforces.com/problemset/problem/1197/D',2,3),(11262,'Array Splitting','https://codeforces.com/problemset/problem/1197/C',1,3),(11263,'Pillars','https://codeforces.com/problemset/problem/1197/B',1,3),(11264,'DIY Wooden Ladder','https://codeforces.com/problemset/problem/1197/A',1,3),(11265,'K-th Path','https://codeforces.com/problemset/problem/1196/F',2,3),(11266,'Connected Component on a Chessboard','https://codeforces.com/problemset/problem/1196/E',2,3),(11267,'RGB Substring (hard version)','https://codeforces.com/problemset/problem/1196/D2',2,3),(11268,'RGB Substring (easy version)','https://codeforces.com/problemset/problem/1196/D1',1,3),(11269,'Robot Breakout','https://codeforces.com/problemset/problem/1196/C',1,3),(11270,'Odd Sum Segments','https://codeforces.com/problemset/problem/1196/B',1,3),(11271,'Three Piles of Candies','https://codeforces.com/problemset/problem/1196/A',1,3),(11272,'Geometers Anonymous Club','https://codeforces.com/problemset/problem/1195/F',2,3),(11273,'OpenStreetMap','https://codeforces.com/problemset/problem/1195/E',2,3),(11274,'Submarine in the Rybinsk Sea (hard edition)','https://codeforces.com/problemset/problem/1195/D2',2,3),(11275,'Submarine in the Rybinsk Sea (easy edition)','https://codeforces.com/problemset/problem/1195/D1',1,3),(11276,'Basketball Exercise','https://codeforces.com/problemset/problem/1195/C',1,3),(11277,'Sport Mafia','https://codeforces.com/problemset/problem/1195/B',1,3),(11278,'Drinks Choosing','https://codeforces.com/problemset/problem/1195/A',1,3),(11279,'Another Meme Problem','https://codeforces.com/problemset/problem/1194/G',3,3),(11280,'Crossword Expert','https://codeforces.com/problemset/problem/1194/F',2,3),(11281,'Count The Rectangles','https://codeforces.com/problemset/problem/1194/E',2,3),(11282,'1-2-K Game','https://codeforces.com/problemset/problem/1194/D',2,3),(11283,'From S To T','https://codeforces.com/problemset/problem/1194/C',1,3),(11284,'Yet Another Crosses Problem','https://codeforces.com/problemset/problem/1194/B',1,3),(11285,'Remove a Progression','https://codeforces.com/problemset/problem/1194/A',1,3),(11286,'Scissors and Tape','https://codeforces.com/problemset/problem/1193/C',6,3),(11287,'Magic Tree','https://codeforces.com/problemset/problem/1193/B',6,3),(11288,'Amusement Park','https://codeforces.com/problemset/problem/1193/A',6,3),(11289,'Cubeword','https://codeforces.com/problemset/problem/1192/C',6,3),(11290,'Dynamic Diameter','https://codeforces.com/problemset/problem/1192/B',6,3),(11291,'Building Skyscrapers','https://codeforces.com/problemset/problem/1192/A',6,3),(11292,'Tokitsukaze and Mahjong','https://codeforces.com/problemset/problem/1191/B',1,3),(11293,'Tokitsukaze and Enhancement','https://codeforces.com/problemset/problem/1191/A',1,3),(11294,'Tokitsukaze and Powers','https://codeforces.com/problemset/problem/1190/F',3,3),(11295,'Tokitsukaze and Explosion','https://codeforces.com/problemset/problem/1190/E',3,3),(11296,'Tokitsukaze and Strange Rectangle','https://codeforces.com/problemset/problem/1190/D',2,3),(11297,'Tokitsukaze and Duel','https://codeforces.com/problemset/problem/1190/C',2,3),(11298,'Tokitsukaze, CSL and Stone Game','https://codeforces.com/problemset/problem/1190/B',2,3),(11299,'Tokitsukaze and Discard Items','https://codeforces.com/problemset/problem/1190/A',1,3),(11300,'Candies!','https://codeforces.com/problemset/problem/1189/C',1,3),(11301,'Number Circle','https://codeforces.com/problemset/problem/1189/B',1,3),(11302,'Keanu Reeves','https://codeforces.com/problemset/problem/1189/A',1,3),(11303,'Problem from Red Panda','https://codeforces.com/problemset/problem/1188/E',3,3),(11304,'Make Equal','https://codeforces.com/problemset/problem/1188/D',3,3),(11305,'Array Beauty','https://codeforces.com/problemset/problem/1188/C',2,3),(11306,'Count Pairs','https://codeforces.com/problemset/problem/1188/B',2,3),(11307,'Add on a Tree: Revolution','https://codeforces.com/problemset/problem/1188/A2',2,3),(11308,'Add on a Tree','https://codeforces.com/problemset/problem/1188/A1',2,3),(11309,'Gang Up','https://codeforces.com/problemset/problem/1187/G',2,3),(11310,'Expected Square Beauty','https://codeforces.com/problemset/problem/1187/F',2,3),(11311,'Tree Painting','https://codeforces.com/problemset/problem/1187/E',2,3),(11312,'Subarray Sorting','https://codeforces.com/problemset/problem/1187/D',2,3),(11313,'Vasya And Array','https://codeforces.com/problemset/problem/1187/C',2,3),(11314,'Letters Shop','https://codeforces.com/problemset/problem/1187/B',1,3),(11315,'Stickers and Toys','https://codeforces.com/problemset/problem/1187/A',1,3),(11316,'Vus the Cossack and a Graph','https://codeforces.com/problemset/problem/1186/F',2,3),(11317,'Vus the Cossack and a Field','https://codeforces.com/problemset/problem/1186/E',2,3),(11318,'Vus the Cossack and Numbers','https://codeforces.com/problemset/problem/1186/D',1,3),(11319,'Vus the Cossack and Strings','https://codeforces.com/problemset/problem/1186/C',2,3),(11320,'Vus the Cossack and a Contest','https://codeforces.com/problemset/problem/1186/A',1,3),(11321,'Playlist for Polycarp (hard version)','https://codeforces.com/problemset/problem/1185/G2',3,3),(11322,'Playlist for Polycarp (easy version)','https://codeforces.com/problemset/problem/1185/G1',2,3),(11323,'Two Pizzas','https://codeforces.com/problemset/problem/1185/F',2,3),(11324,'Polycarp and Snakes','https://codeforces.com/problemset/problem/1185/E',2,3),(11325,'Extra Element','https://codeforces.com/problemset/problem/1185/D',2,3),(11326,'Exam in BerSU (hard version)','https://codeforces.com/problemset/problem/1185/C2',2,3),(11327,'Exam in BerSU (easy version)','https://codeforces.com/problemset/problem/1185/C1',1,3),(11328,'Email from Polycarp','https://codeforces.com/problemset/problem/1185/B',1,3),(11329,'Ropewalkers','https://codeforces.com/problemset/problem/1185/A',1,3),(11330,'Daleks\' Invasion (hard)','https://codeforces.com/problemset/problem/1184/E3',2,3),(11331,'Daleks\' Invasion (medium)','https://codeforces.com/problemset/problem/1184/E2',2,3),(11332,'Daleks\' Invasion (easy)','https://codeforces.com/problemset/problem/1184/E1',2,3),(11333,'Parallel Universes (Hard)','https://codeforces.com/problemset/problem/1184/D2',3,3),(11334,'Parallel Universes (Easy)','https://codeforces.com/problemset/problem/1184/D1',2,3),(11335,'Heidi and the Turing Test (Hard)','https://codeforces.com/problemset/problem/1184/C3',3,3),(11336,'Heidi and the Turing Test (Medium)','https://codeforces.com/problemset/problem/1184/C2',2,3),(11337,'Heidi and the Turing Test (Easy)','https://codeforces.com/problemset/problem/1184/C1',2,3),(11338,'The Doctor Meets Vader (Hard)','https://codeforces.com/problemset/problem/1184/B3',3,3),(11339,'The Doctor Meets Vader (Medium)','https://codeforces.com/problemset/problem/1184/B2',2,3),(11340,'The Doctor Meets Vader (Easy)','https://codeforces.com/problemset/problem/1184/B1',1,3),(11341,'Heidi Learns Hashing (Hard)','https://codeforces.com/problemset/problem/1184/A3',3,3),(11342,'Heidi Learns Hashing (Medium)','https://codeforces.com/problemset/problem/1184/A2',2,3),(11343,'Heidi Learns Hashing (Easy)','https://codeforces.com/problemset/problem/1184/A1',1,3),(11344,'Subsequences (hard version)','https://codeforces.com/problemset/problem/1183/H',2,3),(11345,'Candy Box (hard version)','https://codeforces.com/problemset/problem/1183/G',2,3),(11346,'Topforces Strikes Back','https://codeforces.com/problemset/problem/1183/F',2,3),(11347,'Subsequences (easy version)','https://codeforces.com/problemset/problem/1183/E',2,3),(11348,'Candy Box (easy version)','https://codeforces.com/problemset/problem/1183/D',1,3),(11349,'Computer Game','https://codeforces.com/problemset/problem/1183/C',1,3),(11350,'Equalize Prices','https://codeforces.com/problemset/problem/1183/B',1,3),(11351,'Nearest Interesting Number','https://codeforces.com/problemset/problem/1183/A',1,3),(11352,'Maximum Sine','https://codeforces.com/problemset/problem/1182/F',3,3),(11353,'Product Oriented Recurrence','https://codeforces.com/problemset/problem/1182/E',2,3),(11354,'Complete Mirror','https://codeforces.com/problemset/problem/1182/D',2,3),(11355,'Beautiful Lyrics','https://codeforces.com/problemset/problem/1182/C',2,3),(11356,'Plus from Picture','https://codeforces.com/problemset/problem/1182/B',1,3),(11357,'Filling Shapes','https://codeforces.com/problemset/problem/1182/A',1,3),(11358,'A Story of One Country (Hard)','https://codeforces.com/problemset/problem/1181/E2',3,3),(11359,'A Story of One Country (Easy)','https://codeforces.com/problemset/problem/1181/E1',2,3),(11360,'Irrigation','https://codeforces.com/problemset/problem/1181/D',2,3),(11361,'Flag','https://codeforces.com/problemset/problem/1181/C',2,3),(11362,'Split a Number','https://codeforces.com/problemset/problem/1181/B',1,3),(11363,'Chunga-Changa','https://codeforces.com/problemset/problem/1181/A',1,3),(11364,'Nick and Array','https://codeforces.com/problemset/problem/1180/B',1,3),(11365,'Alex and a Rhombus','https://codeforces.com/problemset/problem/1180/A',1,3),(11366,'Alesya and Discrete Math','https://codeforces.com/problemset/problem/1179/E',3,3),(11367,'Fedor Runs for President','https://codeforces.com/problemset/problem/1179/D',3,3),(11368,'Serge and Dining Room','https://codeforces.com/problemset/problem/1179/C',2,3),(11369,'Tolik and His Uncle','https://codeforces.com/problemset/problem/1179/B',2,3),(11370,'Valeriy and Deque','https://codeforces.com/problemset/problem/1179/A',1,3),(11371,'Stock Exchange','https://codeforces.com/problemset/problem/1178/H',3,3),(11372,'The Awesomest Vertex','https://codeforces.com/problemset/problem/1178/G',3,3),(11373,'Long Colorful Strip','https://codeforces.com/problemset/problem/1178/F2',3,3),(11374,'Short Colorful Strip','https://codeforces.com/problemset/problem/1178/F1',2,3),(11375,'Archaeology','https://codeforces.com/problemset/problem/1178/E',2,3),(11376,'Prime Graph','https://codeforces.com/problemset/problem/1178/D',1,3),(11377,'Tiles','https://codeforces.com/problemset/problem/1178/C',1,3),(11378,'WOW Factor','https://codeforces.com/problemset/problem/1178/B',1,3),(11379,'Prime Minister','https://codeforces.com/problemset/problem/1178/A',1,3),(11380,'Digits Sequence (Hard Edition)','https://codeforces.com/problemset/problem/1177/B',2,3),(11381,'Digits Sequence (Easy Edition)','https://codeforces.com/problemset/problem/1177/A',1,3),(11382,'Destroy it!','https://codeforces.com/problemset/problem/1176/F',2,3),(11383,'Cover it!','https://codeforces.com/problemset/problem/1176/E',2,3),(11384,'Recover it!','https://codeforces.com/problemset/problem/1176/D',2,3),(11385,'Lose it!','https://codeforces.com/problemset/problem/1176/C',1,3),(11386,'Merge it!','https://codeforces.com/problemset/problem/1176/B',1,3),(11387,'Divide it!','https://codeforces.com/problemset/problem/1176/A',1,3),(11388,'Yet Another Partiton Problem','https://codeforces.com/problemset/problem/1175/G',3,3),(11389,'The Number of Subpermutations','https://codeforces.com/problemset/problem/1175/F',2,3),(11390,'Minimal Segment Cover','https://codeforces.com/problemset/problem/1175/E',2,3),(11391,'Array Splitting','https://codeforces.com/problemset/problem/1175/D',2,3),(11392,'Electrification','https://codeforces.com/problemset/problem/1175/C',2,3),(11393,'Catch Overflow!','https://codeforces.com/problemset/problem/1175/B',2,3),(11394,'From Hero to Zero','https://codeforces.com/problemset/problem/1175/A',1,3),(11395,'Ehab and the Big Finale','https://codeforces.com/problemset/problem/1174/F',2,3),(11396,'Ehab and the Expected GCD Problem','https://codeforces.com/problemset/problem/1174/E',2,3),(11397,'Ehab and the Expected XOR Problem','https://codeforces.com/problemset/problem/1174/D',2,3),(11398,'Ehab and a Special Coloring Problem','https://codeforces.com/problemset/problem/1174/C',1,3),(11399,'Ehab Is an Odd Person','https://codeforces.com/problemset/problem/1174/B',1,3),(11400,'Ehab Fails to Be Thanos','https://codeforces.com/problemset/problem/1174/A',1,3),(11401,'Nauuo and Chess','https://codeforces.com/problemset/problem/1173/B',1,3),(11402,'Nauuo and Votes','https://codeforces.com/problemset/problem/1173/A',1,3),(11403,'Nauuo and Bug','https://codeforces.com/problemset/problem/1172/F',3,3),(11404,'Nauuo and ODT','https://codeforces.com/problemset/problem/1172/E',3,3),(11405,'Nauuo and Portals','https://codeforces.com/problemset/problem/1172/D',3,3),(11406,'Nauuo and Pictures (hard version)','https://codeforces.com/problemset/problem/1172/C2',3,3),(11407,'Nauuo and Pictures (easy version)','https://codeforces.com/problemset/problem/1172/C1',2,3),(11408,'Nauuo and Circle','https://codeforces.com/problemset/problem/1172/B',2,3),(11409,'Nauuo and Cards','https://codeforces.com/problemset/problem/1172/A',2,3),(11410,'Good Subsets','https://codeforces.com/problemset/problem/1170/I',6,3),(11411,'Longest Saw','https://codeforces.com/problemset/problem/1170/H',6,3),(11412,'Graph Decomposition','https://codeforces.com/problemset/problem/1170/G',6,3),(11413,'Wheels','https://codeforces.com/problemset/problem/1170/F',6,3),(11414,'Sliding Doors','https://codeforces.com/problemset/problem/1170/E',6,3),(11415,'Decoding of Integer Sequences','https://codeforces.com/problemset/problem/1170/D',6,3),(11416,'Minus and Minus Give Plus','https://codeforces.com/problemset/problem/1170/C',6,3),(11417,'Bad Days','https://codeforces.com/problemset/problem/1170/B',6,3),(11418,'Three Integers Again','https://codeforces.com/problemset/problem/1170/A',6,3),(11419,'Pairs','https://codeforces.com/problemset/problem/1169/B',1,3),(11420,'Circle Metro','https://codeforces.com/problemset/problem/1169/A',1,3),(11421,'Xor Permutations','https://codeforces.com/problemset/problem/1168/E',3,3),(11422,'Anagram Paths','https://codeforces.com/problemset/problem/1168/D',3,3),(11423,'And Reachability','https://codeforces.com/problemset/problem/1168/C',2,3),(11424,'Good Triple','https://codeforces.com/problemset/problem/1168/B',2,3),(11425,'Increasing by Modulo','https://codeforces.com/problemset/problem/1168/A',2,3),(11426,'Low Budget Inception','https://codeforces.com/problemset/problem/1167/G',3,3),(11427,'Scalar Queries','https://codeforces.com/problemset/problem/1167/F',2,3),(11428,'Range Deleting','https://codeforces.com/problemset/problem/1167/E',2,3),(11429,'Bicolored RBS','https://codeforces.com/problemset/problem/1167/D',1,3),(11430,'News Distribution','https://codeforces.com/problemset/problem/1167/C',1,3),(11431,'Lost Numbers','https://codeforces.com/problemset/problem/1167/B',1,3),(11432,'Telephone Number','https://codeforces.com/problemset/problem/1167/A',1,3),(11433,'Vicky\'s Delivery Service','https://codeforces.com/problemset/problem/1166/F',2,3),(11434,'The LCMs Must be Large','https://codeforces.com/problemset/problem/1166/E',2,3),(11435,'Cute Sequences','https://codeforces.com/problemset/problem/1166/D',2,3),(11436,'A Tale of Two Lands','https://codeforces.com/problemset/problem/1166/C',1,3),(11437,'All the Vowels Please','https://codeforces.com/problemset/problem/1166/B',1,3),(11438,'Silent Classroom','https://codeforces.com/problemset/problem/1166/A',1,3),(11439,'Microtransactions (hard version)','https://codeforces.com/problemset/problem/1165/F2',2,3),(11440,'Microtransactions (easy version)','https://codeforces.com/problemset/problem/1165/F1',2,3),(11441,'Two Arrays and Sum of Functions','https://codeforces.com/problemset/problem/1165/E',2,3),(11442,'Almost All Divisors','https://codeforces.com/problemset/problem/1165/D',2,3),(11443,'Good String','https://codeforces.com/problemset/problem/1165/C',1,3),(11444,'Polycarp Training','https://codeforces.com/problemset/problem/1165/B',1,3),(11445,'Remainder','https://codeforces.com/problemset/problem/1165/A',1,3),(11446,'Indecisive Taxi Fee','https://codeforces.com/problemset/problem/1163/F',3,3),(11447,'Magical Permutation','https://codeforces.com/problemset/problem/1163/E',2,3),(11448,'Mysterious Code','https://codeforces.com/problemset/problem/1163/D',2,3),(11449,'Power Transmission (Hard Edition)','https://codeforces.com/problemset/problem/1163/C2',2,3),(11450,'Power Transmission (Easy Edition)','https://codeforces.com/problemset/problem/1163/C1',2,3),(11451,'Cat Party (Hard Edition)','https://codeforces.com/problemset/problem/1163/B2',2,3),(11452,'Cat Party (Easy Edition)','https://codeforces.com/problemset/problem/1163/B1',1,3),(11453,'Eating Soup','https://codeforces.com/problemset/problem/1163/A',1,3),(11454,'Double Matrix','https://codeforces.com/problemset/problem/1162/B',1,3),(11455,'Zoning Restrictions Again','https://codeforces.com/problemset/problem/1162/A',1,3),(11456,'Collaboration','https://codeforces.com/problemset/problem/1160/A2',6,3),(11457,'Expansion coefficient of the array','https://codeforces.com/problemset/problem/1159/B',1,3),(11458,'A pile of stones','https://codeforces.com/problemset/problem/1159/A',1,3),(11459,'Density of subarrays','https://codeforces.com/problemset/problem/1158/F',3,3),(11460,'Strange device','https://codeforces.com/problemset/problem/1158/E',3,3),(11461,'Winding polygonal line','https://codeforces.com/problemset/problem/1158/D',3,3),(11462,'Permutation recovery','https://codeforces.com/problemset/problem/1158/C',2,3),(11463,'The minimal unique substring','https://codeforces.com/problemset/problem/1158/B',2,3),(11464,'The Party and Sweets','https://codeforces.com/problemset/problem/1158/A',1,3),(11465,'Inverse of Rows and Columns','https://codeforces.com/problemset/problem/1157/G',2,3),(11466,'Maximum Balanced Circle','https://codeforces.com/problemset/problem/1157/F',2,3),(11467,'Minimum Array','https://codeforces.com/problemset/problem/1157/E',2,3),(11468,'N Problems During K Days','https://codeforces.com/problemset/problem/1157/D',2,3),(11469,'Increasing Subsequence (hard version)','https://codeforces.com/problemset/problem/1157/C2',2,3),(11470,'Increasing Subsequence (easy version)','https://codeforces.com/problemset/problem/1157/C1',1,3),(11471,'Long Number','https://codeforces.com/problemset/problem/1157/B',1,3),(11472,'Reachable Numbers','https://codeforces.com/problemset/problem/1157/A',1,3),(11473,'Optimizer','https://codeforces.com/problemset/problem/1156/G',3,3),(11474,'Card Bag','https://codeforces.com/problemset/problem/1156/F',2,3),(11475,'Special Segments of Permutation','https://codeforces.com/problemset/problem/1156/E',2,3),(11476,'0-1-Tree','https://codeforces.com/problemset/problem/1156/D',2,3),(11477,'Match Points','https://codeforces.com/problemset/problem/1156/C',2,3),(11478,'Ugly Pairs','https://codeforces.com/problemset/problem/1156/B',2,3),(11479,'Inscribed Figures','https://codeforces.com/problemset/problem/1156/A',1,3),(11480,'Delivery Oligopoly','https://codeforces.com/problemset/problem/1155/F',3,3),(11481,'Guess the Root','https://codeforces.com/problemset/problem/1155/E',2,3),(11482,'Beautiful Array','https://codeforces.com/problemset/problem/1155/D',2,3),(11483,'Alarm Clocks Everywhere','https://codeforces.com/problemset/problem/1155/C',1,3),(11484,'Game with Telephone Numbers','https://codeforces.com/problemset/problem/1155/B',1,3),(11485,'Reverse a Substring','https://codeforces.com/problemset/problem/1155/A',1,3),(11486,'Minimum Possible LCM','https://codeforces.com/problemset/problem/1154/G',2,3),(11487,'Shovels Shop','https://codeforces.com/problemset/problem/1154/F',2,3),(11488,'Two Teams','https://codeforces.com/problemset/problem/1154/E',2,3),(11489,'Walking Robot','https://codeforces.com/problemset/problem/1154/D',1,3),(11490,'Gourmet Cat','https://codeforces.com/problemset/problem/1154/C',1,3),(11491,'Make Them Equal','https://codeforces.com/problemset/problem/1154/B',1,3),(11492,'Restoring Three Numbers','https://codeforces.com/problemset/problem/1154/A',1,3),(11493,'Serval and Bonus Problem','https://codeforces.com/problemset/problem/1153/F',3,3),(11494,'Serval and Snake','https://codeforces.com/problemset/problem/1153/E',2,3),(11495,'Serval and Rooted Tree','https://codeforces.com/problemset/problem/1153/D',2,3),(11496,'Serval and Parenthesis Sequence','https://codeforces.com/problemset/problem/1153/C',2,3),(11497,'Serval and Toy Bricks','https://codeforces.com/problemset/problem/1153/B',1,3),(11498,'Serval and Bus','https://codeforces.com/problemset/problem/1153/A',1,3),(11499,'Neko Rules the Catniverse (Large Version)','https://codeforces.com/problemset/problem/1152/F2',3,3),(11500,'Neko Rules the Catniverse (Small Version)','https://codeforces.com/problemset/problem/1152/F1',3,3),(11501,'Neko and Flashback','https://codeforces.com/problemset/problem/1152/E',2,3),(11502,'Neko and Aki\'s Prank','https://codeforces.com/problemset/problem/1152/D',2,3),(11503,'Neko does Maths','https://codeforces.com/problemset/problem/1152/C',2,3),(11504,'Neko Performs Cat Furrier Transform','https://codeforces.com/problemset/problem/1152/B',1,3),(11505,'Neko Finds Grapes','https://codeforces.com/problemset/problem/1152/A',1,3),(11506,'Sonya and Informatics','https://codeforces.com/problemset/problem/1151/F',2,3),(11507,'Number of Components','https://codeforces.com/problemset/problem/1151/E',2,3),(11508,'Stas and the Queue at the Buffet','https://codeforces.com/problemset/problem/1151/D',2,3),(11509,'Problem for Nazar','https://codeforces.com/problemset/problem/1151/C',2,3),(11510,'Dima and a Bad XOR','https://codeforces.com/problemset/problem/1151/B',2,3),(11511,'Maxim and Biology','https://codeforces.com/problemset/problem/1151/A',1,3),(11512,'Tiling Challenge','https://codeforces.com/problemset/problem/1150/B',1,3),(11513,'Stock Arbitraging','https://codeforces.com/problemset/problem/1150/A',1,3),(11514,'Election Promises','https://codeforces.com/problemset/problem/1149/E',3,3),(11515,'Abandoning Roads','https://codeforces.com/problemset/problem/1149/D',3,3),(11516,'Tree Generator™','https://codeforces.com/problemset/problem/1149/C',3,3),(11517,'Three Religions','https://codeforces.com/problemset/problem/1149/B',2,3),(11518,'Prefix Sum Primes','https://codeforces.com/problemset/problem/1149/A',1,3),(11519,'Holy Diver ','https://codeforces.com/problemset/problem/1148/H',3,3),(11520,'Gold Experience','https://codeforces.com/problemset/problem/1148/G',3,3),(11521,'Foo Fighters','https://codeforces.com/problemset/problem/1148/F',3,3),(11522,'Earth Wind and Fire','https://codeforces.com/problemset/problem/1148/E',2,3),(11523,'Dirty Deeds Done Dirt Cheap','https://codeforces.com/problemset/problem/1148/D',2,3),(11524,'Crazy Diamond','https://codeforces.com/problemset/problem/1148/C',2,3),(11525,'Born This Way','https://codeforces.com/problemset/problem/1148/B',2,3),(11526,'Another One Bites The Dust','https://codeforces.com/problemset/problem/1148/A',1,3),(11527,'Zigzag Game','https://codeforces.com/problemset/problem/1147/F',3,3),(11528,'Rainbow Coins','https://codeforces.com/problemset/problem/1147/E',3,3),(11529,'Palindrome XOR','https://codeforces.com/problemset/problem/1147/D',2,3),(11530,'Thanos Nim','https://codeforces.com/problemset/problem/1147/C',2,3),(11531,'Chladni Figure','https://codeforces.com/problemset/problem/1147/B',2,3),(11532,'Hide and Seek','https://codeforces.com/problemset/problem/1147/A',1,3),(11533,'Satanic Panic','https://codeforces.com/problemset/problem/1146/H',3,3),(11534,'Zoning Restrictions','https://codeforces.com/problemset/problem/1146/G',3,3),(11535,'Leaf Partition','https://codeforces.com/problemset/problem/1146/F',2,3),(11536,'Hot is Cold','https://codeforces.com/problemset/problem/1146/E',2,3),(11537,'Frog Jumping','https://codeforces.com/problemset/problem/1146/D',2,3),(11538,'Tree Diameter','https://codeforces.com/problemset/problem/1146/C',2,3),(11539,'Hate \"A\"','https://codeforces.com/problemset/problem/1146/B',1,3),(11540,'Love \"A\"','https://codeforces.com/problemset/problem/1146/A',1,3),(11541,'AI Takeover','https://codeforces.com/problemset/problem/1145/G',6,3),(11542,'Neat Words','https://codeforces.com/problemset/problem/1145/F',6,3),(11543,'Fourier Doodles','https://codeforces.com/problemset/problem/1145/E',6,3),(11544,'Pigeon d\'Or','https://codeforces.com/problemset/problem/1145/D',6,3),(11545,'Mystery Circuit','https://codeforces.com/problemset/problem/1145/C',6,3),(11546,'Kanban Numbers','https://codeforces.com/problemset/problem/1145/B',6,3),(11547,'Thanos Sort','https://codeforces.com/problemset/problem/1145/A',6,3),(11548,'Two Merged Sequences','https://codeforces.com/problemset/problem/1144/G',2,3),(11549,'Graph Without Long Directed Paths','https://codeforces.com/problemset/problem/1144/F',2,3),(11550,'Median String','https://codeforces.com/problemset/problem/1144/E',2,3),(11551,'Equalize Them All','https://codeforces.com/problemset/problem/1144/D',1,3),(11552,'Two Shuffled Sequences','https://codeforces.com/problemset/problem/1144/C',1,3),(11553,'Parity Alternated Deletions','https://codeforces.com/problemset/problem/1144/B',1,3),(11554,'Diverse Strings','https://codeforces.com/problemset/problem/1144/A',1,3),(11555,'Queen','https://codeforces.com/problemset/problem/1143/C',1,3),(11556,'Nirvana','https://codeforces.com/problemset/problem/1143/B',1,3),(11557,'The Doors','https://codeforces.com/problemset/problem/1143/A',1,3),(11558,'Pink Floyd','https://codeforces.com/problemset/problem/1142/E',3,3),(11559,'Foreigner','https://codeforces.com/problemset/problem/1142/D',3,3),(11560,'U2','https://codeforces.com/problemset/problem/1142/C',2,3),(11561,'Lynyrd Skynyrd','https://codeforces.com/problemset/problem/1142/B',2,3),(11562,'The Beatles','https://codeforces.com/problemset/problem/1142/A',2,3),(11563,'Privatization of Roads in Treeland','https://codeforces.com/problemset/problem/1141/G',2,3),(11564,'Same Sum Blocks (Hard)','https://codeforces.com/problemset/problem/1141/F2',2,3),(11565,'Same Sum Blocks (Easy)','https://codeforces.com/problemset/problem/1141/F1',2,3),(11566,'Superhero Battle','https://codeforces.com/problemset/problem/1141/E',2,3),(11567,'Colored Boots','https://codeforces.com/problemset/problem/1141/D',1,3),(11568,'Polycarp Restores Permutation','https://codeforces.com/problemset/problem/1141/C',1,3),(11569,'Maximal Continuous Rest','https://codeforces.com/problemset/problem/1141/B',1,3),(11570,'Game 23','https://codeforces.com/problemset/problem/1141/A',1,3),(11571,'Double Tree','https://codeforces.com/problemset/problem/1140/G',3,3),(11572,'Extending Set of Points','https://codeforces.com/problemset/problem/1140/F',3,3),(11573,'Palindrome-less Arrays','https://codeforces.com/problemset/problem/1140/E',2,3),(11574,'Minimum Triangulation','https://codeforces.com/problemset/problem/1140/D',1,3),(11575,'Playlist','https://codeforces.com/problemset/problem/1140/C',2,3),(11576,'Good String','https://codeforces.com/problemset/problem/1140/B',1,3),(11577,'Detective Book','https://codeforces.com/problemset/problem/1140/A',1,3),(11578,'Dish Shopping','https://codeforces.com/problemset/problem/1139/F',2,3),(11579,'Maximize Mex','https://codeforces.com/problemset/problem/1139/E',2,3),(11580,'Steps to One','https://codeforces.com/problemset/problem/1139/D',2,3),(11581,'Edgy Trees','https://codeforces.com/problemset/problem/1139/C',1,3),(11582,'Chocolates','https://codeforces.com/problemset/problem/1139/B',1,3),(11583,'Even Substrings','https://codeforces.com/problemset/problem/1139/A',1,3),(11584,'Circus','https://codeforces.com/problemset/problem/1138/B',2,3),(11585,'Sushi for Two','https://codeforces.com/problemset/problem/1138/A',1,3),(11586,'Matches Are Not a Child\'s Play ','https://codeforces.com/problemset/problem/1137/F',3,3),(11587,'Train Car Selection','https://codeforces.com/problemset/problem/1137/E',3,3),(11588,'Cooperative Game','https://codeforces.com/problemset/problem/1137/D',2,3),(11589,'Museums Tour','https://codeforces.com/problemset/problem/1137/C',2,3),(11590,'Camp Schedule','https://codeforces.com/problemset/problem/1137/B',2,3),(11591,'Skyscrapers','https://codeforces.com/problemset/problem/1137/A',2,3),(11592,'Nastya Hasn\'t Written a Legend','https://codeforces.com/problemset/problem/1136/E',2,3),(11593,'Nastya Is Buying Lunch','https://codeforces.com/problemset/problem/1136/D',2,3),(11594,'Nastya Is Transposing Matrices','https://codeforces.com/problemset/problem/1136/C',1,3),(11595,'Nastya Is Playing Computer Games','https://codeforces.com/problemset/problem/1136/B',1,3),(11596,'Nastya Is Reading a Book','https://codeforces.com/problemset/problem/1136/A',1,3),(11597,'Spanning Tree with One Fixed Degree','https://codeforces.com/problemset/problem/1133/F2',2,3),(11598,'Spanning Tree with Maximum Degree','https://codeforces.com/problemset/problem/1133/F1',2,3),(11599,'K Balanced Teams','https://codeforces.com/problemset/problem/1133/E',2,3),(11600,'Zero Quantity Maximization','https://codeforces.com/problemset/problem/1133/D',1,3),(11601,'Balanced Team','https://codeforces.com/problemset/problem/1133/C',1,3),(11602,'Preparation for International Women\'s Day','https://codeforces.com/problemset/problem/1133/B',1,3),(11603,'Middle of the Contest','https://codeforces.com/problemset/problem/1133/A',1,3),(11604,'Greedy Subsequences','https://codeforces.com/problemset/problem/1132/G',2,3),(11605,'Clear the String','https://codeforces.com/problemset/problem/1132/F',2,3),(11606,'Knapsack','https://codeforces.com/problemset/problem/1132/E',2,3),(11607,'Stressful Training','https://codeforces.com/problemset/problem/1132/D',2,3),(11608,'Painting the Fence','https://codeforces.com/problemset/problem/1132/C',2,3),(11609,'Discounts','https://codeforces.com/problemset/problem/1132/B',1,3),(11610,'Regular Bracket Sequence','https://codeforces.com/problemset/problem/1132/A',1,3),(11611,'Most Dangerous Shark','https://codeforces.com/problemset/problem/1131/G',3,3),(11612,'Asya And Kittens','https://codeforces.com/problemset/problem/1131/F',2,3),(11613,'String Multiplication','https://codeforces.com/problemset/problem/1131/E',2,3),(11614,'Gourmet choice','https://codeforces.com/problemset/problem/1131/D',2,3),(11615,'Birthday','https://codeforces.com/problemset/problem/1131/C',1,3),(11616,'Draw!','https://codeforces.com/problemset/problem/1131/B',1,3),(11617,'Sea Battle','https://codeforces.com/problemset/problem/1131/A',1,3),(11618,'Connect','https://codeforces.com/problemset/problem/1130/C',1,3),(11619,'Two Cakes','https://codeforces.com/problemset/problem/1130/B',1,3),(11620,'Be Positive','https://codeforces.com/problemset/problem/1130/A',1,3),(11621,'Legendary Tree','https://codeforces.com/problemset/problem/1129/E',3,3),(11622,'Isolation','https://codeforces.com/problemset/problem/1129/D',3,3),(11623,'Morse Code','https://codeforces.com/problemset/problem/1129/C',2,3),(11624,'Wrong Answer','https://codeforces.com/problemset/problem/1129/B',2,3),(11625,'Toy Train','https://codeforces.com/problemset/problem/1129/A2',2,3),(11626,'Toy Train (Simplified)','https://codeforces.com/problemset/problem/1129/A1',2,3),(11627,'System Testing','https://codeforces.com/problemset/problem/1121/C',2,3),(11628,'Mike and Children','https://codeforces.com/problemset/problem/1121/B',1,3),(11629,'Technogoblet of Fire','https://codeforces.com/problemset/problem/1121/A',1,3),(11630,'Secret Letters','https://codeforces.com/problemset/problem/1120/F',3,3),(11631,'The very same Munchhausen','https://codeforces.com/problemset/problem/1120/E',3,3),(11632,'Power Tree','https://codeforces.com/problemset/problem/1120/D',2,3),(11633,'Compress String','https://codeforces.com/problemset/problem/1120/C',2,3),(11634,'Once in a casino','https://codeforces.com/problemset/problem/1120/B',3,3),(11635,'Diana and Liana','https://codeforces.com/problemset/problem/1120/A',2,3),(11636,'Triple','https://codeforces.com/problemset/problem/1119/H',3,3),(11637,'Get Ready for the Battle','https://codeforces.com/problemset/problem/1119/G',3,3),(11638,'Niyaz and Small Degrees','https://codeforces.com/problemset/problem/1119/F',3,3),(11639,'Pavel and Triangles','https://codeforces.com/problemset/problem/1119/E',2,3),(11640,'Frets On Fire','https://codeforces.com/problemset/problem/1119/D',2,3),(11641,'Ramesses and Corner Inversion','https://codeforces.com/problemset/problem/1119/C',1,3),(11642,'Alyona and a Narrow Fridge','https://codeforces.com/problemset/problem/1119/B',1,3),(11643,'Ilya and a Colorful Walk','https://codeforces.com/problemset/problem/1119/A',1,3),(11644,'Tree Cutting (Hard Version)','https://codeforces.com/problemset/problem/1118/F2',3,3),(11645,'Tree Cutting (Easy Version)','https://codeforces.com/problemset/problem/1118/F1',2,3),(11646,'Yet Another Ball Problem','https://codeforces.com/problemset/problem/1118/E',2,3),(11647,'Coffee and Coursework (Hard Version)','https://codeforces.com/problemset/problem/1118/D2',2,3),(11648,'Coffee and Coursework (Easy version)','https://codeforces.com/problemset/problem/1118/D1',2,3),(11649,'Palindromic Matrix','https://codeforces.com/problemset/problem/1118/C',2,3),(11650,'Tanya and Candies','https://codeforces.com/problemset/problem/1118/B',1,3),(11651,'Water Buying','https://codeforces.com/problemset/problem/1118/A',1,3),(11652,'Recursive Queries','https://codeforces.com/problemset/problem/1117/G',2,3),(11653,'Crisp String','https://codeforces.com/problemset/problem/1117/F',2,3),(11654,'Decypher the String','https://codeforces.com/problemset/problem/1117/E',2,3),(11655,'Magic Gems','https://codeforces.com/problemset/problem/1117/D',2,3),(11656,'Magic Ship','https://codeforces.com/problemset/problem/1117/C',2,3),(11657,'Emotes','https://codeforces.com/problemset/problem/1117/B',1,3),(11658,'Best Subsegment','https://codeforces.com/problemset/problem/1117/A',1,3),(11659,'Hessenberg matrix','https://codeforces.com/problemset/problem/1116/D6',6,3),(11660,'Creeper','https://codeforces.com/problemset/problem/1116/D5',6,3),(11661,'TIE fighter','https://codeforces.com/problemset/problem/1116/D4',6,3),(11662,'X-wing fighter','https://codeforces.com/problemset/problem/1116/D3',6,3),(11663,'Pattern of increasing blocks','https://codeforces.com/problemset/problem/1116/D2',6,3),(11664,'Block diagonal matrix','https://codeforces.com/problemset/problem/1116/D1',6,3),(11665,'``Is the number of ones divisible by 3?\'\' oracle','https://codeforces.com/problemset/problem/1116/C3',6,3),(11666,'``Is the bit string periodic?\'\' oracle','https://codeforces.com/problemset/problem/1116/C2',6,3),(11667,'Alternating bits oracle','https://codeforces.com/problemset/problem/1116/C1',6,3),(11668,'Not A, not B or not C?','https://codeforces.com/problemset/problem/1116/B2',6,3),(11669,'Distinguish three-qubit states','https://codeforces.com/problemset/problem/1116/B1',6,3),(11670,'Generate equal superposition of four basis states','https://codeforces.com/problemset/problem/1116/A2',6,3),(11671,'Generate state |00⟩ + |01⟩ + |10⟩','https://codeforces.com/problemset/problem/1116/A1',6,3),(11672,'Block unitary','https://codeforces.com/problemset/problem/1115/U3',2,3),(11673,'Chessboard unitary','https://codeforces.com/problemset/problem/1115/U2',2,3),(11674,'Anti-diagonal unitary','https://codeforces.com/problemset/problem/1115/U1',1,3),(11675,'Palindrome checker oracle','https://codeforces.com/problemset/problem/1115/G3',2,3),(11676,'OR oracle','https://codeforces.com/problemset/problem/1115/G2',2,3),(11677,'AND oracle','https://codeforces.com/problemset/problem/1115/G1',1,3),(11678,'Please, another Queries on Array?','https://codeforces.com/problemset/problem/1114/F',2,3),(11679,'Arithmetic Progression','https://codeforces.com/problemset/problem/1114/E',2,3),(11680,'Flood Fill','https://codeforces.com/problemset/problem/1114/D',2,3),(11681,'Trailing Loves (or L\'oeufs?)','https://codeforces.com/problemset/problem/1114/C',2,3),(11682,'Yet Another Array Partitioning Task','https://codeforces.com/problemset/problem/1114/B',1,3),(11683,'Got Any Grapes?','https://codeforces.com/problemset/problem/1114/A',1,3);
INSERT INTO `track_problem` VALUES (11684,'Sasha and Magnetic Machines','https://codeforces.com/problemset/problem/1113/B',1,3),(11685,'Sasha and His Trip','https://codeforces.com/problemset/problem/1113/A',1,3),(11686,'Tree','https://codeforces.com/problemset/problem/1111/E',2,3),(11687,'Destroy the Colony','https://codeforces.com/problemset/problem/1111/D',3,3),(11688,'Creative Snap','https://codeforces.com/problemset/problem/1111/C',2,3),(11689,'Average Superhero Gang Power ','https://codeforces.com/problemset/problem/1111/B',2,3),(11690,'Superhero Transformation','https://codeforces.com/problemset/problem/1111/A',1,3),(11691,'Modest Substrings','https://codeforces.com/problemset/problem/1110/H',3,3),(11692,'Tree-Tac-Toe ','https://codeforces.com/problemset/problem/1110/G',3,3),(11693,'Nearest Leaf','https://codeforces.com/problemset/problem/1110/F',3,3),(11694,'Magic Stones','https://codeforces.com/problemset/problem/1110/E',2,3),(11695,'Jongmah','https://codeforces.com/problemset/problem/1110/D',2,3),(11696,'Meaningless Operations','https://codeforces.com/problemset/problem/1110/C',1,3),(11697,'Tape','https://codeforces.com/problemset/problem/1110/B',1,3),(11698,'Parity','https://codeforces.com/problemset/problem/1110/A',1,3),(11699,'Sasha and Algorithm of Silence\'s Sounds','https://codeforces.com/problemset/problem/1109/F',3,3),(11700,'Sasha and a Very Easy Test','https://codeforces.com/problemset/problem/1109/E',3,3),(11701,'Sasha and Interesting Fact from Graph Theory','https://codeforces.com/problemset/problem/1109/D',2,3),(11702,'Sasha and a Patient Friend','https://codeforces.com/problemset/problem/1109/C',3,3),(11703,'Sasha and One More Name','https://codeforces.com/problemset/problem/1109/B',2,3),(11704,'Sasha and a Bit of Relax','https://codeforces.com/problemset/problem/1109/A',2,3),(11705,'MST Unification','https://codeforces.com/problemset/problem/1108/F',2,3),(11706,'Array and Segments (Hard version)','https://codeforces.com/problemset/problem/1108/E2',2,3),(11707,'Array and Segments (Easy version)','https://codeforces.com/problemset/problem/1108/E1',2,3),(11708,'Diverse Garland','https://codeforces.com/problemset/problem/1108/D',1,3),(11709,'Nice Garland','https://codeforces.com/problemset/problem/1108/C',1,3),(11710,'Divisors of Two Integers','https://codeforces.com/problemset/problem/1108/B',1,3),(11711,'Two distinct points','https://codeforces.com/problemset/problem/1108/A',1,3),(11712,'Vasya and Maximum Profit','https://codeforces.com/problemset/problem/1107/G',2,3),(11713,'Vasya and Endless Credits','https://codeforces.com/problemset/problem/1107/F',3,3),(11714,'Vasya and Binary String','https://codeforces.com/problemset/problem/1107/E',2,3),(11715,'Compression','https://codeforces.com/problemset/problem/1107/D',2,3),(11716,'Brutality','https://codeforces.com/problemset/problem/1107/C',1,3),(11717,'Digital root','https://codeforces.com/problemset/problem/1107/B',1,3),(11718,'Digits Sequence Dividing','https://codeforces.com/problemset/problem/1107/A',1,3),(11719,'Lunar New Year and a Recursive Sequence','https://codeforces.com/problemset/problem/1106/F',2,3),(11720,'Lunar New Year and Red Envelopes','https://codeforces.com/problemset/problem/1106/E',2,3),(11721,'Lunar New Year and a Wander','https://codeforces.com/problemset/problem/1106/D',1,3),(11722,'Lunar New Year and Number Division','https://codeforces.com/problemset/problem/1106/C',1,3),(11723,'Lunar New Year and Food Ordering','https://codeforces.com/problemset/problem/1106/B',1,3),(11724,'Lunar New Year and Cross Counting','https://codeforces.com/problemset/problem/1106/A',1,3),(11725,'Helping Hiasat ','https://codeforces.com/problemset/problem/1105/E',2,3),(11726,'Kilani and the Game','https://codeforces.com/problemset/problem/1105/D',2,3),(11727,'Ayoub and Lost Array','https://codeforces.com/problemset/problem/1105/C',1,3),(11728,'Zuhair and Strings','https://codeforces.com/problemset/problem/1105/B',1,3),(11729,'Salem and Sticks ','https://codeforces.com/problemset/problem/1105/A',1,3),(11730,'Game with string','https://codeforces.com/problemset/problem/1104/B',1,3),(11731,'Splitting into digits','https://codeforces.com/problemset/problem/1104/A',1,3),(11732,'Radix sum','https://codeforces.com/problemset/problem/1103/E',3,3),(11733,'Professional layer','https://codeforces.com/problemset/problem/1103/D',3,3),(11734,'Johnny Solving','https://codeforces.com/problemset/problem/1103/C',3,3),(11735,'Game with modulo','https://codeforces.com/problemset/problem/1103/B',2,3),(11736,'Grid game','https://codeforces.com/problemset/problem/1103/A',1,3),(11737,'Elongated Matrix','https://codeforces.com/problemset/problem/1102/F',2,3),(11738,'Monotonic Renumeration','https://codeforces.com/problemset/problem/1102/E',2,3),(11739,'Balanced Ternary String','https://codeforces.com/problemset/problem/1102/D',1,3),(11740,'Doors Breaking and Repairing','https://codeforces.com/problemset/problem/1102/C',1,3),(11741,'Array K-Coloring','https://codeforces.com/problemset/problem/1102/B',1,3),(11742,'Integer Sequence Dividing','https://codeforces.com/problemset/problem/1102/A',1,3),(11743,'(Zero XOR Subset)-less','https://codeforces.com/problemset/problem/1101/G',2,3),(11744,'Trucks and Cities','https://codeforces.com/problemset/problem/1101/F',2,3),(11745,'Polycarp\'s New Job','https://codeforces.com/problemset/problem/1101/E',1,3),(11746,'GCD Counting','https://codeforces.com/problemset/problem/1101/D',2,3),(11747,'Division and Union','https://codeforces.com/problemset/problem/1101/C',1,3),(11748,'Accordion','https://codeforces.com/problemset/problem/1101/B',1,3),(11749,'Minimum Integer','https://codeforces.com/problemset/problem/1101/A',1,3),(11750,'Ivan and Burgers','https://codeforces.com/problemset/problem/1100/F',2,3),(11751,'Andrew and Taxi','https://codeforces.com/problemset/problem/1100/E',2,3),(11752,'Dasha and Chess','https://codeforces.com/problemset/problem/1100/D',2,3),(11753,'NN and the Optical Illusion','https://codeforces.com/problemset/problem/1100/C',1,3),(11754,'Build a Contest','https://codeforces.com/problemset/problem/1100/B',1,3),(11755,'Roman and Browser','https://codeforces.com/problemset/problem/1100/A',1,3),(11756,'Cookies','https://codeforces.com/problemset/problem/1099/F',2,3),(11757,'Postcard','https://codeforces.com/problemset/problem/1099/C',1,3),(11758,'Squares and Segments','https://codeforces.com/problemset/problem/1099/B',1,3),(11759,'Snowball','https://codeforces.com/problemset/problem/1099/A',1,3),(11760,'Ж-function','https://codeforces.com/problemset/problem/1098/F',3,3),(11761,'Fedya the Potter','https://codeforces.com/problemset/problem/1098/E',3,3),(11762,'Eels','https://codeforces.com/problemset/problem/1098/D',3,3),(11763,'Construct a tree','https://codeforces.com/problemset/problem/1098/C',2,3),(11764,'Nice table','https://codeforces.com/problemset/problem/1098/B',2,3),(11765,'Sum in the tree','https://codeforces.com/problemset/problem/1098/A',2,3),(11766,'Mateusz and an Infinite Sequence','https://codeforces.com/problemset/problem/1097/H',3,3),(11767,'Vladislav and a Great Legend','https://codeforces.com/problemset/problem/1097/G',3,3),(11768,'Alex and a TV Show','https://codeforces.com/problemset/problem/1097/F',2,3),(11769,'Egor and an RPG game','https://codeforces.com/problemset/problem/1097/E',3,3),(11770,'Makoto and a Blackboard','https://codeforces.com/problemset/problem/1097/D',2,3),(11771,'Yuhao and a Parenthesis','https://codeforces.com/problemset/problem/1097/C',1,3),(11772,'Petr and a Combination Lock','https://codeforces.com/problemset/problem/1097/B',1,3),(11773,'Gennady and a Card Game','https://codeforces.com/problemset/problem/1097/A',1,3),(11774,'Lucky Tickets','https://codeforces.com/problemset/problem/1096/G',2,3),(11775,'Inversion Expectation','https://codeforces.com/problemset/problem/1096/F',2,3),(11776,'The Top Scorer','https://codeforces.com/problemset/problem/1096/E',2,3),(11777,'Easy Problem','https://codeforces.com/problemset/problem/1096/D',2,3),(11778,'Polygon for the Angle','https://codeforces.com/problemset/problem/1096/C',2,3),(11779,'Substring Removal','https://codeforces.com/problemset/problem/1096/B',1,3),(11780,'Find Divisible','https://codeforces.com/problemset/problem/1096/A',1,3),(11781,'Make It Connected','https://codeforces.com/problemset/problem/1095/F',2,3),(11782,'Almost Regular Bracket Sequence','https://codeforces.com/problemset/problem/1095/E',2,3),(11783,'Circular Dance','https://codeforces.com/problemset/problem/1095/D',2,3),(11784,'Powers Of Two','https://codeforces.com/problemset/problem/1095/C',1,3),(11785,'Array Stabilization','https://codeforces.com/problemset/problem/1095/B',1,3),(11786,'Repeating Cipher','https://codeforces.com/problemset/problem/1095/A',1,3),(11787,'Multidimensional Queries','https://codeforces.com/problemset/problem/1093/G',2,3),(11788,'Vasya and Array','https://codeforces.com/problemset/problem/1093/F',2,3),(11789,'Intersection of Permutations','https://codeforces.com/problemset/problem/1093/E',2,3),(11790,'Beautiful Graph','https://codeforces.com/problemset/problem/1093/D',2,3),(11791,'Mishka and the Last Exam','https://codeforces.com/problemset/problem/1093/C',1,3),(11792,'Letters Rearranging','https://codeforces.com/problemset/problem/1093/B',1,3),(11793,'Dice Rolling','https://codeforces.com/problemset/problem/1093/A',1,3),(11794,'Tree with Maximum Cost','https://codeforces.com/problemset/problem/1092/F',2,3),(11795,'Minimal Diameter Forest','https://codeforces.com/problemset/problem/1092/E',2,3),(11796,'Great Vova Wall (Version 2)','https://codeforces.com/problemset/problem/1092/D2',2,3),(11797,'Great Vova Wall (Version 1)','https://codeforces.com/problemset/problem/1092/D1',2,3),(11798,'Prefixes and Suffixes','https://codeforces.com/problemset/problem/1092/C',2,3),(11799,'Teams Forming','https://codeforces.com/problemset/problem/1092/B',1,3),(11800,'Uniform String','https://codeforces.com/problemset/problem/1092/A',1,3),(11801,'New Year and the Tricolore Recreation','https://codeforces.com/problemset/problem/1091/H',3,3),(11802,'New Year and the Factorisation Collaboration','https://codeforces.com/problemset/problem/1091/G',3,3),(11803,'New Year and the Mallard Expedition','https://codeforces.com/problemset/problem/1091/F',3,3),(11804,'New Year and the Acquaintance Estimation','https://codeforces.com/problemset/problem/1091/E',2,3),(11805,'New Year and the Permutation Concatenation','https://codeforces.com/problemset/problem/1091/D',2,3),(11806,'New Year and the Sphere Transmission','https://codeforces.com/problemset/problem/1091/C',1,3),(11807,'New Year and the Treasure Geolocation','https://codeforces.com/problemset/problem/1091/B',1,3),(11808,'New Year and the Christmas Ornament','https://codeforces.com/problemset/problem/1091/A',1,3),(11809,'The Pleasant Walk','https://codeforces.com/problemset/problem/1090/M',1,3),(11810,'Berland University','https://codeforces.com/problemset/problem/1090/L',2,3),(11811,'Right Expansion Of The Mind','https://codeforces.com/problemset/problem/1090/K',2,3),(11812,'Two Prefixes','https://codeforces.com/problemset/problem/1090/J',3,3),(11813,'Minimal Product','https://codeforces.com/problemset/problem/1090/I',2,3),(11814,'Linearization','https://codeforces.com/problemset/problem/1090/H',3,3),(11815,'Combostone','https://codeforces.com/problemset/problem/1090/G',2,3),(11816,'How to Learn You Score','https://codeforces.com/problemset/problem/1090/F',3,3),(11817,'Horseback Riding','https://codeforces.com/problemset/problem/1090/E',2,3),(11818,'Similar Arrays','https://codeforces.com/problemset/problem/1090/D',2,3),(11819,'New Year Presents','https://codeforces.com/problemset/problem/1090/C',2,3),(11820,'LaTeX Expert','https://codeforces.com/problemset/problem/1090/B',2,3),(11821,'Company Merging','https://codeforces.com/problemset/problem/1090/A',1,3),(11822,'Minegraphed','https://codeforces.com/problemset/problem/1089/M',2,3),(11823,'Lazyland','https://codeforces.com/problemset/problem/1089/L',1,3),(11824,'King Kog\'s Reception','https://codeforces.com/problemset/problem/1089/K',2,3),(11825,'JS Minification','https://codeforces.com/problemset/problem/1089/J',3,3),(11826,'Interval-Free Permutations','https://codeforces.com/problemset/problem/1089/I',3,3),(11827,'Harder Satisfiability','https://codeforces.com/problemset/problem/1089/H',3,3),(11828,'Guest Student','https://codeforces.com/problemset/problem/1089/G',1,3),(11829,'Fractions','https://codeforces.com/problemset/problem/1089/F',2,3),(11830,'Easy Chess','https://codeforces.com/problemset/problem/1089/E',2,3),(11831,'Distance Sum','https://codeforces.com/problemset/problem/1089/D',3,3),(11832,'Cactus Search','https://codeforces.com/problemset/problem/1089/C',2,3),(11833,'Bimatching','https://codeforces.com/problemset/problem/1089/B',3,3),(11834,'Alice the Fan','https://codeforces.com/problemset/problem/1089/A',2,3),(11835,'Ehab and a weird weight formula','https://codeforces.com/problemset/problem/1088/F',3,3),(11836,'Ehab and a component choosing problem','https://codeforces.com/problemset/problem/1088/E',2,3),(11837,'Ehab and another another xor problem','https://codeforces.com/problemset/problem/1088/D',2,3),(11838,'Ehab and a 2-operation task','https://codeforces.com/problemset/problem/1088/C',1,3),(11839,'Ehab and subtraction','https://codeforces.com/problemset/problem/1088/B',1,3),(11840,'Ehab and another construction problem','https://codeforces.com/problemset/problem/1088/A',1,3),(11841,'Forest Fires','https://codeforces.com/problemset/problem/1086/F',3,3),(11842,'Beautiful Matrix','https://codeforces.com/problemset/problem/1085/G',3,3),(11843,'Rock-Paper-Scissors Champion','https://codeforces.com/problemset/problem/1085/F',2,3),(11844,'Vasya and Templates','https://codeforces.com/problemset/problem/1085/E',2,3),(11845,'Minimum Diameter Tree','https://codeforces.com/problemset/problem/1085/D',2,3),(11846,'Connect Three','https://codeforces.com/problemset/problem/1085/C',2,3),(11847,'Div Times Mod','https://codeforces.com/problemset/problem/1085/B',1,3),(11848,'Right-Left Cipher','https://codeforces.com/problemset/problem/1085/A',1,3),(11849,'The Fair Nut and String','https://codeforces.com/problemset/problem/1084/C',1,3),(11850,'Kvass and the Fair Nut','https://codeforces.com/problemset/problem/1084/B',1,3),(11851,'The Fair Nut and Elevator','https://codeforces.com/problemset/problem/1084/A',1,3),(11852,'The Fair Nut and Amusing Xor','https://codeforces.com/problemset/problem/1083/F',3,3),(11853,'The Fair Nut and Rectangles','https://codeforces.com/problemset/problem/1083/E',2,3),(11854,'The Fair Nut\'s getting crazy','https://codeforces.com/problemset/problem/1083/D',3,3),(11855,'Max Mex','https://codeforces.com/problemset/problem/1083/C',3,3),(11856,'The Fair Nut and Strings','https://codeforces.com/problemset/problem/1083/B',2,3),(11857,'The Fair Nut and the Best Path','https://codeforces.com/problemset/problem/1083/A',2,3),(11858,'Petya and Graph','https://codeforces.com/problemset/problem/1082/G',2,3),(11859,'Speed Dial','https://codeforces.com/problemset/problem/1082/F',3,3),(11860,'Increasing Frequency','https://codeforces.com/problemset/problem/1082/E',2,3),(11861,'Maximum Diameter Graph','https://codeforces.com/problemset/problem/1082/D',2,3),(11862,'Multi-Subject Competition','https://codeforces.com/problemset/problem/1082/C',2,3),(11863,'Vova and Trophies','https://codeforces.com/problemset/problem/1082/B',2,3),(11864,'Vasya and Book','https://codeforces.com/problemset/problem/1082/A',1,3),(11865,'Palindromic Magic','https://codeforces.com/problemset/problem/1081/H',3,3),(11866,'Mergesort Strikes Back','https://codeforces.com/problemset/problem/1081/G',3,3),(11867,'Tricky Interactor','https://codeforces.com/problemset/problem/1081/F',3,3),(11868,'Missing Numbers','https://codeforces.com/problemset/problem/1081/E',2,3),(11869,'Maximum Distance','https://codeforces.com/problemset/problem/1081/D',2,3),(11870,'Colorful Bricks','https://codeforces.com/problemset/problem/1081/C',1,3),(11871,'Farewell Party','https://codeforces.com/problemset/problem/1081/B',1,3),(11872,'Definite Game','https://codeforces.com/problemset/problem/1081/A',1,3),(11873,'Katya and Segments Sets','https://codeforces.com/problemset/problem/1080/F',2,3),(11874,'Sonya and Matrix Beauty','https://codeforces.com/problemset/problem/1080/E',2,3),(11875,'Olya and magical square','https://codeforces.com/problemset/problem/1080/D',2,3),(11876,'Masha and two friends','https://codeforces.com/problemset/problem/1080/C',1,3),(11877,'Margarite and the best present','https://codeforces.com/problemset/problem/1080/B',1,3),(11878,'Petya and Origami','https://codeforces.com/problemset/problem/1080/A',1,3),(11879,'Negative Time Summation','https://codeforces.com/problemset/problem/1078/E',3,3),(11880,'Pictures with Kittens (hard version)','https://codeforces.com/problemset/problem/1077/F2',2,3),(11881,'Pictures with Kittens (easy version)','https://codeforces.com/problemset/problem/1077/F1',2,3),(11882,'Thematic Contests','https://codeforces.com/problemset/problem/1077/E',2,3),(11883,'Cutting Out','https://codeforces.com/problemset/problem/1077/D',2,3),(11884,'Good Array','https://codeforces.com/problemset/problem/1077/C',1,3),(11885,'Disturbed People','https://codeforces.com/problemset/problem/1077/B',1,3),(11886,'Frog Jumping','https://codeforces.com/problemset/problem/1077/A',1,3),(11887,'Array Game','https://codeforces.com/problemset/problem/1076/G',3,3),(11888,'Summer Practice Report','https://codeforces.com/problemset/problem/1076/F',2,3),(11889,'Vasya and a Tree','https://codeforces.com/problemset/problem/1076/E',2,3),(11890,'Edge Deletion','https://codeforces.com/problemset/problem/1076/D',2,3),(11891,'Meme Problem','https://codeforces.com/problemset/problem/1076/C',1,3),(11892,'Divisor Subtraction','https://codeforces.com/problemset/problem/1076/B',1,3),(11893,'Minimizing the String','https://codeforces.com/problemset/problem/1076/A',1,3),(11894,'Taxi drivers and Lyft','https://codeforces.com/problemset/problem/1075/B',1,3),(11895,'The King\'s Race','https://codeforces.com/problemset/problem/1075/A',1,3),(11896,'Yet Another LCP Problem','https://codeforces.com/problemset/problem/1073/G',3,3),(11897,'Choosing Two Paths','https://codeforces.com/problemset/problem/1073/F',2,3),(11898,'Segment Sum','https://codeforces.com/problemset/problem/1073/E',2,3),(11899,'Berland Fair','https://codeforces.com/problemset/problem/1073/D',2,3),(11900,'Vasya and Robot','https://codeforces.com/problemset/problem/1073/C',2,3),(11901,'Vasya and Books','https://codeforces.com/problemset/problem/1073/B',1,3),(11902,'Diverse Substring','https://codeforces.com/problemset/problem/1073/A',1,3),(11903,'Rain Protection','https://codeforces.com/problemset/problem/1071/E',3,3),(11904,'Algoland and Berland','https://codeforces.com/problemset/problem/1070/M',3,3),(11905,'Odd Federalization','https://codeforces.com/problemset/problem/1070/L',3,3),(11906,'Video Posts','https://codeforces.com/problemset/problem/1070/K',1,3),(11907,'Streets and Avenues in Berhattan','https://codeforces.com/problemset/problem/1070/J',2,3),(11908,'Privatization of Roads in Berland','https://codeforces.com/problemset/problem/1070/I',2,3),(11909,'BerOS File Suggestion','https://codeforces.com/problemset/problem/1070/H',1,3),(11910,'Monsters and Potions','https://codeforces.com/problemset/problem/1070/G',2,3),(11911,'Debate','https://codeforces.com/problemset/problem/1070/F',1,3),(11912,'Getting Deals Done','https://codeforces.com/problemset/problem/1070/E',2,3),(11913,'Garbage Disposal','https://codeforces.com/problemset/problem/1070/D',1,3),(11914,'Cloud Computing','https://codeforces.com/problemset/problem/1070/C',2,3),(11915,'Berkomnadzor','https://codeforces.com/problemset/problem/1070/B',2,3),(11916,'Find a Number','https://codeforces.com/problemset/problem/1070/A',2,3),(11917,'Colored Rooks','https://codeforces.com/problemset/problem/1068/C',2,3),(11918,'LCM','https://codeforces.com/problemset/problem/1068/B',1,3),(11919,'Birthday','https://codeforces.com/problemset/problem/1068/A',1,3),(11920,'Random Forest Rank','https://codeforces.com/problemset/problem/1067/E',3,3),(11921,'Computer Game','https://codeforces.com/problemset/problem/1067/D',3,3),(11922,'Knights','https://codeforces.com/problemset/problem/1067/C',3,3),(11923,'Multihedgehog','https://codeforces.com/problemset/problem/1067/B',2,3),(11924,'Array Without Local Maximums ','https://codeforces.com/problemset/problem/1067/A',2,3),(11925,'Yet another 2D Walking','https://codeforces.com/problemset/problem/1066/F',2,3),(11926,'Binary Numbers AND Sum','https://codeforces.com/problemset/problem/1066/E',2,3),(11927,'Boxes Packing','https://codeforces.com/problemset/problem/1066/D',2,3),(11928,'Books Queries','https://codeforces.com/problemset/problem/1066/C',1,3),(11929,'Heaters','https://codeforces.com/problemset/problem/1066/B',1,3),(11930,'Vova and Train','https://codeforces.com/problemset/problem/1066/A',1,3),(11931,'Fibonacci Suffix','https://codeforces.com/problemset/problem/1065/G',3,3),(11932,'Up and Down the Tree','https://codeforces.com/problemset/problem/1065/F',2,3),(11933,'Side Transmutations','https://codeforces.com/problemset/problem/1065/E',2,3),(11934,'Three Pieces','https://codeforces.com/problemset/problem/1065/D',2,3),(11935,'Make It Equal','https://codeforces.com/problemset/problem/1065/C',2,3),(11936,'Vasya and Isolated Vertices','https://codeforces.com/problemset/problem/1065/B',1,3),(11937,'Vasya and Chocolate','https://codeforces.com/problemset/problem/1065/A',1,3),(11938,'Equations of Mathematical Magic','https://codeforces.com/problemset/problem/1064/B',1,3),(11939,'Make a triangle!','https://codeforces.com/problemset/problem/1064/A',1,3),(11940,'String Journey','https://codeforces.com/problemset/problem/1063/F',3,3),(11941,'Lasers and Mirrors','https://codeforces.com/problemset/problem/1063/E',3,3),(11942,'Candies for Children','https://codeforces.com/problemset/problem/1063/D',3,3),(11943,'Dwarves, Hats and Extrasensory Abilities','https://codeforces.com/problemset/problem/1063/C',2,3),(11944,'Labyrinth','https://codeforces.com/problemset/problem/1063/B',2,3),(11945,'Oh Those Palindromes','https://codeforces.com/problemset/problem/1063/A',1,3),(11946,'Upgrading Cities','https://codeforces.com/problemset/problem/1062/F',3,3),(11947,'Company','https://codeforces.com/problemset/problem/1062/E',2,3),(11948,'Fun with Integers','https://codeforces.com/problemset/problem/1062/D',2,3),(11949,'Banh-mi','https://codeforces.com/problemset/problem/1062/C',2,3),(11950,'Math','https://codeforces.com/problemset/problem/1062/B',1,3),(11951,'A Prank','https://codeforces.com/problemset/problem/1062/A',1,3),(11952,'Lost Root','https://codeforces.com/problemset/problem/1061/F',2,3),(11953,'Politics','https://codeforces.com/problemset/problem/1061/E',3,3),(11954,'TV Shows','https://codeforces.com/problemset/problem/1061/D',2,3),(11955,'Multiplicity','https://codeforces.com/problemset/problem/1061/C',2,3),(11956,'Views Matter','https://codeforces.com/problemset/problem/1061/B',1,3),(11957,'Coins','https://codeforces.com/problemset/problem/1061/A',1,3),(11958,'Sophisticated Device','https://codeforces.com/problemset/problem/1060/H',3,3),(11959,'Balls and Pockets','https://codeforces.com/problemset/problem/1060/G',3,3),(11960,'Shrinking Tree','https://codeforces.com/problemset/problem/1060/F',3,3),(11961,'Sergey and Subway','https://codeforces.com/problemset/problem/1060/E',2,3),(11962,'Social Circles','https://codeforces.com/problemset/problem/1060/D',2,3),(11963,'Maximum Subrectangle','https://codeforces.com/problemset/problem/1060/C',2,3),(11964,'Maximum Sum of Digits','https://codeforces.com/problemset/problem/1060/B',1,3),(11965,'Phone Numbers','https://codeforces.com/problemset/problem/1060/A',1,3),(11966,'Split the Tree','https://codeforces.com/problemset/problem/1059/E',2,3),(11967,'Nature Reserve','https://codeforces.com/problemset/problem/1059/D',2,3),(11968,'Sequence Transformation','https://codeforces.com/problemset/problem/1059/C',2,3),(11969,'Forgery','https://codeforces.com/problemset/problem/1059/B',1,3),(11970,'Cashier','https://codeforces.com/problemset/problem/1059/A',1,3),(11971,'Tanya and Colored Candies','https://codeforces.com/problemset/problem/1057/C',2,3),(11972,'DDoS','https://codeforces.com/problemset/problem/1057/B',1,3),(11973,'Bmail Computer Network','https://codeforces.com/problemset/problem/1057/A',1,3),(11974,'Detect Robots','https://codeforces.com/problemset/problem/1056/H',3,3),(11975,'Take Metro','https://codeforces.com/problemset/problem/1056/G',3,3),(11976,'Write The Contest','https://codeforces.com/problemset/problem/1056/F',2,3),(11977,'Check Transcription','https://codeforces.com/problemset/problem/1056/E',2,3),(11978,'Decorate Apple Tree','https://codeforces.com/problemset/problem/1056/D',2,3),(11979,'Pick Heroes','https://codeforces.com/problemset/problem/1056/C',2,3),(11980,'Divide Candies','https://codeforces.com/problemset/problem/1056/B',2,3),(11981,'Determine Line','https://codeforces.com/problemset/problem/1056/A',1,3),(11982,'Jellyfish Nightmare','https://codeforces.com/problemset/problem/1055/G',3,3),(11983,'Tree and XOR','https://codeforces.com/problemset/problem/1055/F',3,3),(11984,'Segments on the Line','https://codeforces.com/problemset/problem/1055/E',2,3),(11985,'Refactoring','https://codeforces.com/problemset/problem/1055/D',2,3),(11986,'Lucky Days','https://codeforces.com/problemset/problem/1055/C',2,3),(11987,'Alice and Hairdresser','https://codeforces.com/problemset/problem/1055/B',1,3),(11988,'Metro','https://codeforces.com/problemset/problem/1055/A',1,3),(11989,'Epic Convolution','https://codeforces.com/problemset/problem/1054/H',3,3),(11990,'New Road Network','https://codeforces.com/problemset/problem/1054/G',3,3),(11991,'Electric Scheme','https://codeforces.com/problemset/problem/1054/F',3,3),(11992,'Chips Puzzle','https://codeforces.com/problemset/problem/1054/E',2,3),(11993,'Changing Array','https://codeforces.com/problemset/problem/1054/D',2,3),(11994,'Candies Distribution','https://codeforces.com/problemset/problem/1054/C',1,3),(11995,'Appending Mex','https://codeforces.com/problemset/problem/1054/B',1,3),(11996,'Elevator or Stairs?','https://codeforces.com/problemset/problem/1054/A',1,3),(11997,'Euler tour','https://codeforces.com/problemset/problem/1053/E',3,3),(11998,'Distinctification','https://codeforces.com/problemset/problem/1051/G',3,3),(11999,'The Shortest Statement','https://codeforces.com/problemset/problem/1051/F',2,3),(12000,'Vasya and Big Integers','https://codeforces.com/problemset/problem/1051/E',3,3),(12001,'Bicolorings','https://codeforces.com/problemset/problem/1051/D',2,3),(12002,'Vasya and Multisets','https://codeforces.com/problemset/problem/1051/C',1,3),(12003,'Relatively Prime Pairs','https://codeforces.com/problemset/problem/1051/B',1,3),(12004,'Vasya And Password','https://codeforces.com/problemset/problem/1051/A',1,3),(12005,'Cover Points','https://codeforces.com/problemset/problem/1047/B',1,3),(12006,'Little C Loves 3 I','https://codeforces.com/problemset/problem/1047/A',1,3),(12007,'Say Hello','https://codeforces.com/problemset/problem/1046/I',2,3),(12008,'Splitting money','https://codeforces.com/problemset/problem/1046/F',1,3),(12009,'Space Formula','https://codeforces.com/problemset/problem/1046/C',1,3),(12010,'Moonwalk challenge','https://codeforces.com/problemset/problem/1045/J',3,3),(12011,'Palindrome Pairs','https://codeforces.com/problemset/problem/1045/I',2,3),(12012,'Self-exploration','https://codeforces.com/problemset/problem/1045/H',2,3),(12013,'AI robots','https://codeforces.com/problemset/problem/1045/G',2,3),(12014,'Shady Lady','https://codeforces.com/problemset/problem/1045/F',3,3),(12015,'Ancient civilizations','https://codeforces.com/problemset/problem/1045/E',3,3),(12016,'Interstellar battle','https://codeforces.com/problemset/problem/1045/D',2,3),(12017,'Hyperspace Highways','https://codeforces.com/problemset/problem/1045/C',2,3),(12018,'Space Isaac','https://codeforces.com/problemset/problem/1045/B',2,3),(12019,'Last chance','https://codeforces.com/problemset/problem/1045/A',2,3),(12020,'DFS','https://codeforces.com/problemset/problem/1044/F',3,3),(12021,'Grid Sort','https://codeforces.com/problemset/problem/1044/E',3,3),(12022,'Deduction Queries','https://codeforces.com/problemset/problem/1044/D',2,3),(12023,'Optimal Polygon Perimeter','https://codeforces.com/problemset/problem/1044/C',2,3),(12024,'Intersecting Subtrees','https://codeforces.com/problemset/problem/1044/B',2,3),(12025,'The Tower is Going Home','https://codeforces.com/problemset/problem/1044/A',2,3),(12026,'Speckled Band','https://codeforces.com/problemset/problem/1043/G',3,3),(12027,'Make It One','https://codeforces.com/problemset/problem/1043/F',2,3),(12028,'Train Hard, Win Easy','https://codeforces.com/problemset/problem/1043/E',2,3),(12029,'Mysterious Crime','https://codeforces.com/problemset/problem/1043/D',2,3),(12030,'Smallest Word','https://codeforces.com/problemset/problem/1043/C',1,3),(12031,'Lost Array','https://codeforces.com/problemset/problem/1043/B',1,3),(12032,'Elections','https://codeforces.com/problemset/problem/1043/A',1,3),(12033,'Leaf Sets','https://codeforces.com/problemset/problem/1042/F',2,3),(12034,'Vasya and Magic Matrix','https://codeforces.com/problemset/problem/1042/E',2,3),(12035,'Petya and Array','https://codeforces.com/problemset/problem/1042/D',2,3),(12036,'Array Product','https://codeforces.com/problemset/problem/1042/C',2,3),(12037,'Vitamins','https://codeforces.com/problemset/problem/1042/B',1,3),(12038,'Benches','https://codeforces.com/problemset/problem/1042/A',1,3),(12039,'Ray in the tube','https://codeforces.com/problemset/problem/1041/F',2,3),(12040,'Tree Reconstruction','https://codeforces.com/problemset/problem/1041/E',2,3),(12041,'Glider','https://codeforces.com/problemset/problem/1041/D',2,3),(12042,'Coffee Break','https://codeforces.com/problemset/problem/1041/C',2,3),(12043,'Buying a TV Set','https://codeforces.com/problemset/problem/1041/B',1,3),(12044,'Heist','https://codeforces.com/problemset/problem/1041/A',1,3),(12045,'Shashlik Cooking','https://codeforces.com/problemset/problem/1040/B',1,3),(12046,'Palindrome Dance','https://codeforces.com/problemset/problem/1040/A',1,3),(12047,'Summer Oenothera Exhibition','https://codeforces.com/problemset/problem/1039/E',3,3),(12048,'You Are Given a Tree','https://codeforces.com/problemset/problem/1039/D',3,3),(12049,'Network Safety','https://codeforces.com/problemset/problem/1039/C',2,3),(12050,'Subway Pursuit','https://codeforces.com/problemset/problem/1039/B',2,3),(12051,'Timetable','https://codeforces.com/problemset/problem/1039/A',2,3),(12052,'Wrap Around','https://codeforces.com/problemset/problem/1038/F',3,3),(12053,'Maximum Matching','https://codeforces.com/problemset/problem/1038/E',2,3),(12054,'Slime','https://codeforces.com/problemset/problem/1038/D',2,3),(12055,'Gambling','https://codeforces.com/problemset/problem/1038/C',1,3),(12056,'Non-Coprime Partition','https://codeforces.com/problemset/problem/1038/B',1,3),(12057,'Equality','https://codeforces.com/problemset/problem/1038/A',1,3),(12058,'Security','https://codeforces.com/problemset/problem/1037/H',3,3),(12059,'A Game on Strings','https://codeforces.com/problemset/problem/1037/G',3,3),(12060,'Maximum Reduction','https://codeforces.com/problemset/problem/1037/F',2,3),(12061,'Trips','https://codeforces.com/problemset/problem/1037/E',2,3),(12062,'Valid BFS?','https://codeforces.com/problemset/problem/1037/D',2,3),(12063,'Equalize','https://codeforces.com/problemset/problem/1037/C',1,3),(12064,'Reach Median','https://codeforces.com/problemset/problem/1037/B',1,3),(12065,'Packets','https://codeforces.com/problemset/problem/1037/A',1,3),(12066,'Sources and Sinks','https://codeforces.com/problemset/problem/1036/G',3,3),(12067,'Relatively Prime Powers','https://codeforces.com/problemset/problem/1036/F',2,3),(12068,'Covered Points','https://codeforces.com/problemset/problem/1036/E',2,3),(12069,'Vasya and Arrays','https://codeforces.com/problemset/problem/1036/D',2,3),(12070,'Classy Numbers','https://codeforces.com/problemset/problem/1036/C',2,3),(12071,'Diagonal Walking v.2','https://codeforces.com/problemset/problem/1036/B',2,3),(12072,'Function Height','https://codeforces.com/problemset/problem/1036/A',1,3),(12073,'Little C Loves 3 III','https://codeforces.com/problemset/problem/1034/E',3,3),(12074,'Intervals of Intervals','https://codeforces.com/problemset/problem/1034/D',3,3),(12075,'Region Separation','https://codeforces.com/problemset/problem/1034/C',3,3),(12076,'Little C Loves 3 II','https://codeforces.com/problemset/problem/1034/B',2,3),(12077,'Enlarge GCD','https://codeforces.com/problemset/problem/1034/A',2,3),(12078,'Chip Game','https://codeforces.com/problemset/problem/1033/G',3,3),(12079,'Boolean Computer','https://codeforces.com/problemset/problem/1033/F',3,3),(12080,'Hidden Bipartite Graph','https://codeforces.com/problemset/problem/1033/E',3,3),(12081,'Divisors','https://codeforces.com/problemset/problem/1033/D',2,3),(12082,'Permutation Game','https://codeforces.com/problemset/problem/1033/C',2,3),(12083,'Square Difference','https://codeforces.com/problemset/problem/1033/B',1,3),(12084,'King Escape','https://codeforces.com/problemset/problem/1033/A',1,3),(12085,'Chattering','https://codeforces.com/problemset/problem/1032/G',3,3),(12086,'Vasya and Maximum Matching','https://codeforces.com/problemset/problem/1032/F',2,3),(12087,'The Unbearable Lightness of Weights','https://codeforces.com/problemset/problem/1032/E',2,3),(12088,'Barcelonian Distance','https://codeforces.com/problemset/problem/1032/D',2,3),(12089,'Playing Piano','https://codeforces.com/problemset/problem/1032/C',2,3),(12090,'Personalized Cup','https://codeforces.com/problemset/problem/1032/B',1,3),(12091,'Kitchen Utensils','https://codeforces.com/problemset/problem/1032/A',1,3),(12092,'Familiar Operations','https://codeforces.com/problemset/problem/1031/F',3,3),(12093,'Triple Flips','https://codeforces.com/problemset/problem/1031/E',3,3),(12094,'Minimum path','https://codeforces.com/problemset/problem/1031/D',2,3),(12095,'Cram Time','https://codeforces.com/problemset/problem/1031/C',2,3),(12096,'Curiosity Has No Limits','https://codeforces.com/problemset/problem/1031/B',1,3),(12097,'Golden Plate','https://codeforces.com/problemset/problem/1031/A',1,3),(12098,'Linear Congruential Generator','https://codeforces.com/problemset/problem/1030/G',3,3),(12099,'Putting Boxes Together','https://codeforces.com/problemset/problem/1030/F',2,3),(12100,'Vasya and Good Sequences','https://codeforces.com/problemset/problem/1030/E',2,3),(12101,'Vasya and Triangle','https://codeforces.com/problemset/problem/1030/D',2,3),(12102,'Vasya and Golden Ticket','https://codeforces.com/problemset/problem/1030/C',1,3),(12103,'Vasya and Cornfield','https://codeforces.com/problemset/problem/1030/B',1,3),(12104,'In Search of an Easy Problem','https://codeforces.com/problemset/problem/1030/A',1,3),(12105,'Multicolored Markers','https://codeforces.com/problemset/problem/1029/F',2,3),(12106,'Tree with Small Distances','https://codeforces.com/problemset/problem/1029/E',2,3),(12107,'Concatenated Multiples','https://codeforces.com/problemset/problem/1029/D',2,3),(12108,'Maximal Intersection','https://codeforces.com/problemset/problem/1029/C',2,3),(12109,'Creating the Contest','https://codeforces.com/problemset/problem/1029/B',1,3),(12110,'Many Equal Substrings','https://codeforces.com/problemset/problem/1029/A',1,3),(12111,'Make Square','https://codeforces.com/problemset/problem/1028/H',3,3),(12112,'Guess the number','https://codeforces.com/problemset/problem/1028/G',3,3),(12113,'Make Symmetrical','https://codeforces.com/problemset/problem/1028/F',3,3),(12114,'Restore Array','https://codeforces.com/problemset/problem/1028/E',2,3),(12115,'Order book','https://codeforces.com/problemset/problem/1028/D',2,3),(12116,'Rectangles','https://codeforces.com/problemset/problem/1028/C',2,3),(12117,'Unnatural Conditions','https://codeforces.com/problemset/problem/1028/B',1,3),(12118,'Find Square','https://codeforces.com/problemset/problem/1028/A',1,3),(12119,'X-mouse in the Campus','https://codeforces.com/problemset/problem/1027/G',3,3),(12120,'Session in BSU','https://codeforces.com/problemset/problem/1027/F',2,3),(12121,'Inverse Coloring','https://codeforces.com/problemset/problem/1027/E',2,3),(12122,'Mouse Hunt','https://codeforces.com/problemset/problem/1027/D',2,3),(12123,'Minimum Value Rectangle','https://codeforces.com/problemset/problem/1027/C',2,3),(12124,'Numbers on the Chessboard','https://codeforces.com/problemset/problem/1027/B',1,3),(12125,'Palindromic Twist','https://codeforces.com/problemset/problem/1027/A',1,3),(12126,'Company Acquisitions','https://codeforces.com/problemset/problem/1025/G',3,3),(12127,'Disjoint Triangles','https://codeforces.com/problemset/problem/1025/F',3,3),(12128,'Colored Cubes','https://codeforces.com/problemset/problem/1025/E',3,3),(12129,'Recovering BST','https://codeforces.com/problemset/problem/1025/D',2,3),(12130,'Plasticine zebra','https://codeforces.com/problemset/problem/1025/C',2,3),(12131,'Weakened Common Divisor','https://codeforces.com/problemset/problem/1025/B',2,3),(12132,'Doggo Recoloring','https://codeforces.com/problemset/problem/1025/A',1,3),(12133,'Pisces','https://codeforces.com/problemset/problem/1023/G',3,3),(12134,'Mobile Phone Network','https://codeforces.com/problemset/problem/1023/F',3,3),(12135,'Down or Right','https://codeforces.com/problemset/problem/1023/E',2,3),(12136,'Array Restoration','https://codeforces.com/problemset/problem/1023/D',2,3),(12137,'Bracket Subsequence','https://codeforces.com/problemset/problem/1023/C',1,3),(12138,'Pair of Toys','https://codeforces.com/problemset/problem/1023/B',1,3),(12139,'Single Wildcard Pattern Matching','https://codeforces.com/problemset/problem/1023/A',1,3),(12140,'Badge','https://codeforces.com/problemset/problem/1020/B',1,3),(12141,'New Building for SIS','https://codeforces.com/problemset/problem/1020/A',1,3),(12142,'Raining season','https://codeforces.com/problemset/problem/1019/E',3,3),(12143,'Large Triangle','https://codeforces.com/problemset/problem/1019/D',3,3),(12144,'Sergey\'s problem','https://codeforces.com/problemset/problem/1019/C',3,3),(12145,'The hat','https://codeforces.com/problemset/problem/1019/B',2,3),(12146,'Elections','https://codeforces.com/problemset/problem/1019/A',2,3),(12147,'The Films','https://codeforces.com/problemset/problem/1017/H',3,3),(12148,'The Tree','https://codeforces.com/problemset/problem/1017/G',3,3),(12149,'The Neutral Zone','https://codeforces.com/problemset/problem/1017/F',2,3),(12150,'The Supersonic Rocket','https://codeforces.com/problemset/problem/1017/E',2,3),(12151,'The Wu','https://codeforces.com/problemset/problem/1017/D',2,3),(12152,'The Phone Number','https://codeforces.com/problemset/problem/1017/C',2,3),(12153,'The Bits','https://codeforces.com/problemset/problem/1017/B',1,3),(12154,'The Rank','https://codeforces.com/problemset/problem/1017/A',1,3),(12155,'Appropriate Team','https://codeforces.com/problemset/problem/1016/G',3,3),(12156,'Road Projects','https://codeforces.com/problemset/problem/1016/F',3,3),(12157,'Rest In The Shades','https://codeforces.com/problemset/problem/1016/E',2,3),(12158,'Vasya And The Matrix','https://codeforces.com/problemset/problem/1016/D',2,3),(12159,'Vasya And The Mushrooms','https://codeforces.com/problemset/problem/1016/C',2,3),(12160,'Segment Occurrences','https://codeforces.com/problemset/problem/1016/B',1,3),(12161,'Death Note','https://codeforces.com/problemset/problem/1016/A',1,3),(12162,'Bracket Substring','https://codeforces.com/problemset/problem/1015/F',2,3),(12163,'Stars Drawing (Hard Edition)','https://codeforces.com/problemset/problem/1015/E2',2,3),(12164,'Stars Drawing (Easy Edition)','https://codeforces.com/problemset/problem/1015/E1',2,3),(12165,'Walking Between Houses','https://codeforces.com/problemset/problem/1015/D',2,3),(12166,'Songs Compression','https://codeforces.com/problemset/problem/1015/C',1,3),(12167,'Obtaining the String','https://codeforces.com/problemset/problem/1015/B',1,3),(12168,'Points in Segments','https://codeforces.com/problemset/problem/1015/A',1,3),(12169,'And','https://codeforces.com/problemset/problem/1013/B',1,3),(12170,'Piles With Stones','https://codeforces.com/problemset/problem/1013/A',1,3),(12171,'Passports','https://codeforces.com/problemset/problem/1012/F',3,3),(12172,'Cycle sort','https://codeforces.com/problemset/problem/1012/E',3,3),(12173,'AB-Strings','https://codeforces.com/problemset/problem/1012/D',3,3),(12174,'Hills','https://codeforces.com/problemset/problem/1012/C',2,3),(12175,'Chemical table','https://codeforces.com/problemset/problem/1012/B',2,3),(12176,'Photo of The Sky','https://codeforces.com/problemset/problem/1012/A',1,3),(12177,'Planning The Expedition','https://codeforces.com/problemset/problem/1011/B',1,3),(12178,'Stages','https://codeforces.com/problemset/problem/1011/A',1,3),(12179,'Tree','https://codeforces.com/problemset/problem/1010/F',3,3),(12180,'Store','https://codeforces.com/problemset/problem/1010/E',3,3),(12181,'Mars rover','https://codeforces.com/problemset/problem/1010/D',2,3),(12182,'Border','https://codeforces.com/problemset/problem/1010/C',2,3),(12183,'Rocket','https://codeforces.com/problemset/problem/1010/B',2,3),(12184,'Fly','https://codeforces.com/problemset/problem/1010/A',1,3),(12185,'Allowed Letters','https://codeforces.com/problemset/problem/1009/G',2,3),(12186,'Dominant Indices','https://codeforces.com/problemset/problem/1009/F',2,3),(12187,'Intercity Travelling','https://codeforces.com/problemset/problem/1009/E',2,3),(12188,'Relatively Prime Graph','https://codeforces.com/problemset/problem/1009/D',2,3),(12189,'Annoying Present','https://codeforces.com/problemset/problem/1009/C',2,3),(12190,'Minimum Ternary String','https://codeforces.com/problemset/problem/1009/B',1,3),(12191,'Game Shopping','https://codeforces.com/problemset/problem/1009/A',1,3),(12192,'Turn the Rectangles','https://codeforces.com/problemset/problem/1008/B',1,3),(12193,'Romaji','https://codeforces.com/problemset/problem/1008/A',1,3),(12194,'Mini Metro','https://codeforces.com/problemset/problem/1007/E',3,3),(12195,'Ants','https://codeforces.com/problemset/problem/1007/D',3,3),(12196,'Guess two numbers','https://codeforces.com/problemset/problem/1007/C',3,3),(12197,'Pave the Parallelepiped','https://codeforces.com/problemset/problem/1007/B',2,3),(12198,'Reorder the Array','https://codeforces.com/problemset/problem/1007/A',1,3),(12199,'Xor-Paths','https://codeforces.com/problemset/problem/1006/F',2,3),(12200,'Military Problem','https://codeforces.com/problemset/problem/1006/E',2,3),(12201,'Two Strings Swaps','https://codeforces.com/problemset/problem/1006/D',2,3),(12202,'Three Parts of the Array','https://codeforces.com/problemset/problem/1006/C',1,3),(12203,'Polycarp\'s Practice','https://codeforces.com/problemset/problem/1006/B',1,3),(12204,'Adjacent Replacements','https://codeforces.com/problemset/problem/1006/A',1,3),(12205,'Berland and the Shortest Paths','https://codeforces.com/problemset/problem/1005/F',2,3),(12206,'Median on Segments (General Case Edition)','https://codeforces.com/problemset/problem/1005/E2',2,3),(12207,'Median on Segments (Permutations Edition)','https://codeforces.com/problemset/problem/1005/E1',2,3),(12208,'Polycarp and Div 3','https://codeforces.com/problemset/problem/1005/D',1,3),(12209,'Summarize to the Power of Two','https://codeforces.com/problemset/problem/1005/C',1,3),(12210,'Delete from the Left','https://codeforces.com/problemset/problem/1005/B',1,3),(12211,'Tanya and Stairways','https://codeforces.com/problemset/problem/1005/A',1,3),(12212,'Sonya and Bitwise OR','https://codeforces.com/problemset/problem/1004/F',3,3),(12213,'Sonya and Ice Cream','https://codeforces.com/problemset/problem/1004/E',2,3),(12214,'Sonya and Matrix','https://codeforces.com/problemset/problem/1004/D',2,3),(12215,'Sonya and Robots','https://codeforces.com/problemset/problem/1004/C',1,3),(12216,'Sonya and Exhibition','https://codeforces.com/problemset/problem/1004/B',1,3),(12217,'Sonya and Hotels','https://codeforces.com/problemset/problem/1004/A',1,3),(12218,'Abbreviation','https://codeforces.com/problemset/problem/1003/F',2,3),(12219,'Tree Constructing','https://codeforces.com/problemset/problem/1003/E',2,3),(12220,'Coins and Queries','https://codeforces.com/problemset/problem/1003/D',2,3),(12221,'Intense Heat','https://codeforces.com/problemset/problem/1003/C',1,3),(12222,'Binary String Constructing','https://codeforces.com/problemset/problem/1003/B',1,3),(12223,'Polycarp\'s Pockets','https://codeforces.com/problemset/problem/1003/A',1,3),(12224,'Another array reconstruction algorithm','https://codeforces.com/problemset/problem/1002/E2',2,3),(12225,'Bernstein-Vazirani algorithm','https://codeforces.com/problemset/problem/1002/E1',1,3),(12226,'Oracle for majority function','https://codeforces.com/problemset/problem/1002/D3',2,3),(12227,'Oracle for f(x) = b * x + (1 - b) * (1 - x) mod 2','https://codeforces.com/problemset/problem/1002/D2',1,3),(12228,'Oracle for f(x) = b * x mod 2','https://codeforces.com/problemset/problem/1002/D1',1,3),(12229,'Distinguish zero state and plus state without errors','https://codeforces.com/problemset/problem/1002/C2',2,3),(12230,'Distinguish zero state and plus state with minimum error','https://codeforces.com/problemset/problem/1002/C1',2,3),(12231,'Distinguish four 2-qubit states - 2','https://codeforces.com/problemset/problem/1002/B4',2,3),(12232,'Distinguish four 2-qubit states','https://codeforces.com/problemset/problem/1002/B3',2,3),(12233,'Distinguish GHZ state and W state','https://codeforces.com/problemset/problem/1002/B2',2,3),(12234,'Distinguish zero state and W state','https://codeforces.com/problemset/problem/1002/B1',1,3),(12235,'Generate W state','https://codeforces.com/problemset/problem/1002/A4',2,3),(12236,'Generate superposition of two basis states','https://codeforces.com/problemset/problem/1002/A3',1,3),(12237,'Generate superposition of zero state and a basis state','https://codeforces.com/problemset/problem/1002/A2',1,3),(12238,'Generate superposition of all basis states','https://codeforces.com/problemset/problem/1002/A1',1,3),(12239,'Deutsch-Jozsa algorithm','https://codeforces.com/problemset/problem/1001/I',2,3),(12240,'Oracle for f(x) = parity of the number of 1s in x','https://codeforces.com/problemset/problem/1001/H',1,3),(12241,'Oracle for f(x) = k-th element of x','https://codeforces.com/problemset/problem/1001/G',1,3),(12242,'Distinguish multi-qubit basis states','https://codeforces.com/problemset/problem/1001/F',1,3),(12243,'Distinguish Bell states','https://codeforces.com/problemset/problem/1001/E',2,3),(12244,'Distinguish plus state and minus state','https://codeforces.com/problemset/problem/1001/D',1,3),(12245,'Generate GHZ state','https://codeforces.com/problemset/problem/1001/C',1,3),(12246,'Generate Bell state','https://codeforces.com/problemset/problem/1001/B',1,3),(12247,'Generate plus state or minus state','https://codeforces.com/problemset/problem/1001/A',1,3),(12248,'Two-Paths','https://codeforces.com/problemset/problem/1000/G',3,3),(12249,'One Occurrence','https://codeforces.com/problemset/problem/1000/F',2,3),(12250,'We Need More Bosses','https://codeforces.com/problemset/problem/1000/E',2,3),(12251,'Yet Another Problem On a Subsequence','https://codeforces.com/problemset/problem/1000/D',2,3),(12252,'Covered Points Count','https://codeforces.com/problemset/problem/1000/C',2,3),(12253,'Light It Up','https://codeforces.com/problemset/problem/1000/B',1,3),(12254,'Codehorses T-shirts','https://codeforces.com/problemset/problem/1000/A',1,3),(12255,'Cards and Joy','https://codeforces.com/problemset/problem/999/F',2,3),(12256,'Reachability from the Capital','https://codeforces.com/problemset/problem/999/E',2,3),(12257,'Equalize the Remainders','https://codeforces.com/problemset/problem/999/D',2,3),(12258,'Alphabetic Removals','https://codeforces.com/problemset/problem/999/C',1,3),(12259,'Reversing Encryption','https://codeforces.com/problemset/problem/999/B',1,3),(12260,'Mishka and Contest','https://codeforces.com/problemset/problem/999/A',1,3),(12261,'Cutting','https://codeforces.com/problemset/problem/998/B',1,3),(12262,'Balloons','https://codeforces.com/problemset/problem/998/A',1,3),(12263,'Good Subsegments','https://codeforces.com/problemset/problem/997/E',3,3),(12264,'Cycles in product','https://codeforces.com/problemset/problem/997/D',3,3),(12265,'Sky Full of Stars','https://codeforces.com/problemset/problem/997/C',2,3),(12266,'Roman Digits','https://codeforces.com/problemset/problem/997/B',2,3),(12267,'Convert to Ones','https://codeforces.com/problemset/problem/997/A',1,3),(12268,'World Cup','https://codeforces.com/problemset/problem/996/B',1,3),(12269,'Hit the Lottery','https://codeforces.com/problemset/problem/996/A',1,3),(12270,'Cowmpany Cowmpensation','https://codeforces.com/problemset/problem/995/F',3,3),(12271,'Number Clicker','https://codeforces.com/problemset/problem/995/E',3,3),(12272,'Game','https://codeforces.com/problemset/problem/995/D',2,3),(12273,'Leaving the Bar','https://codeforces.com/problemset/problem/995/C',2,3),(12274,'Suit and Tie','https://codeforces.com/problemset/problem/995/B',1,3),(12275,'Tesla','https://codeforces.com/problemset/problem/995/A',2,3),(12276,'Knights of a Polygonal Table','https://codeforces.com/problemset/problem/994/B',1,3),(12277,'Fingerprints','https://codeforces.com/problemset/problem/994/A',1,3),(12278,'The Moral Dilemma','https://codeforces.com/problemset/problem/993/F',3,3),(12279,'Nikita and Order Statistics','https://codeforces.com/problemset/problem/993/E',2,3),(12280,'Compute Power','https://codeforces.com/problemset/problem/993/D',2,3),(12281,'Careful Maneuvering','https://codeforces.com/problemset/problem/993/C',2,3),(12282,'Open Communication','https://codeforces.com/problemset/problem/993/B',2,3),(12283,'Two Squares','https://codeforces.com/problemset/problem/993/A',2,3),(12284,'Nastya and King-Shamans','https://codeforces.com/problemset/problem/992/E',2,3),(12285,'Nastya and a Game','https://codeforces.com/problemset/problem/992/D',2,3),(12286,'Nastya and a Wardrobe','https://codeforces.com/problemset/problem/992/C',2,3),(12287,'Nastya Studies Informatics','https://codeforces.com/problemset/problem/992/B',2,3),(12288,'Nastya and an Array','https://codeforces.com/problemset/problem/992/A',1,3),(12289,'Concise and clear','https://codeforces.com/problemset/problem/991/F',3,3),(12290,'Bus Number','https://codeforces.com/problemset/problem/991/E',2,3),(12291,'Bishwock','https://codeforces.com/problemset/problem/991/D',1,3),(12292,'Candies','https://codeforces.com/problemset/problem/991/C',1,3),(12293,'Getting an A','https://codeforces.com/problemset/problem/991/B',1,3),(12294,'If at first you don\'t succeed...','https://codeforces.com/problemset/problem/991/A',1,3),(12295,'GCD Counting','https://codeforces.com/problemset/problem/990/G',2,3),(12296,'Flow Control','https://codeforces.com/problemset/problem/990/F',2,3),(12297,'Post Lamps','https://codeforces.com/problemset/problem/990/E',2,3),(12298,'Graph And Its Complement','https://codeforces.com/problemset/problem/990/D',2,3),(12299,'Bracket Sequences Concatenation Problem','https://codeforces.com/problemset/problem/990/C',1,3),(12300,'Micro-World','https://codeforces.com/problemset/problem/990/B',1,3),(12301,'Commentary Boxes','https://codeforces.com/problemset/problem/990/A',1,3),(12302,'A Trance of Nightfall','https://codeforces.com/problemset/problem/989/E',3,3),(12303,'A Shade of Moonlight','https://codeforces.com/problemset/problem/989/D',2,3),(12304,'A Mist of Florescence','https://codeforces.com/problemset/problem/989/C',2,3),(12305,'A Tide of Riverscape','https://codeforces.com/problemset/problem/989/B',1,3),(12306,'A Blend of Springtime','https://codeforces.com/problemset/problem/989/A',1,3),(12307,'Rain and Umbrellas','https://codeforces.com/problemset/problem/988/F',2,3),(12308,'Divisibility by 25','https://codeforces.com/problemset/problem/988/E',2,3),(12309,'Points and Powers of Two','https://codeforces.com/problemset/problem/988/D',2,3),(12310,'Equal Sums','https://codeforces.com/problemset/problem/988/C',1,3),(12311,'Substrings Sort','https://codeforces.com/problemset/problem/988/B',1,3),(12312,'Diverse Team','https://codeforces.com/problemset/problem/988/A',1,3),(12313,'Three displays','https://codeforces.com/problemset/problem/987/C',1,3),(12314,'High School: Become Human','https://codeforces.com/problemset/problem/987/B',1,3),(12315,'Infinity Gauntlet','https://codeforces.com/problemset/problem/987/A',1,3),(12316,'Oppa Funcan Style Remastered','https://codeforces.com/problemset/problem/986/F',3,3),(12317,'Prince\'s Problem','https://codeforces.com/problemset/problem/986/E',3,3),(12318,'Perfect Encoding','https://codeforces.com/problemset/problem/986/D',3,3),(12319,'AND Graph','https://codeforces.com/problemset/problem/986/C',2,3),(12320,'Petr and Permutations','https://codeforces.com/problemset/problem/986/B',2,3),(12321,'Fair','https://codeforces.com/problemset/problem/986/A',2,3),(12322,'Team Players','https://codeforces.com/problemset/problem/985/G',3,3),(12323,'Isomorphic Strings','https://codeforces.com/problemset/problem/985/F',2,3),(12324,'Pencils and Boxes','https://codeforces.com/problemset/problem/985/E',2,3),(12325,'Sand Fortress','https://codeforces.com/problemset/problem/985/D',2,3),(12326,'Liebig\'s Barrels','https://codeforces.com/problemset/problem/985/C',1,3),(12327,'Switches and Lamps','https://codeforces.com/problemset/problem/985/B',1,3),(12328,'Chess Placing','https://codeforces.com/problemset/problem/985/A',1,3),(12329,'Minesweeper','https://codeforces.com/problemset/problem/984/B',1,3),(12330,'Game','https://codeforces.com/problemset/problem/984/A',1,3),(12331,'NN country','https://codeforces.com/problemset/problem/983/E',3,3),(12332,'Arkady and Rectangles','https://codeforces.com/problemset/problem/983/D',3,3),(12333,'Elevator','https://codeforces.com/problemset/problem/983/C',2,3),(12334,'XOR-pyramid','https://codeforces.com/problemset/problem/983/B',2,3),(12335,'Finite or not?','https://codeforces.com/problemset/problem/983/A',2,3),(12336,'The Meeting Place Cannot Be Changed','https://codeforces.com/problemset/problem/982/F',3,3),(12337,'Billiard','https://codeforces.com/problemset/problem/982/E',3,3),(12338,'Shark','https://codeforces.com/problemset/problem/982/D',2,3),(12339,'Cut \'em all!','https://codeforces.com/problemset/problem/982/C',1,3),(12340,'Bus of Characters','https://codeforces.com/problemset/problem/982/B',1,3),(12341,'Row','https://codeforces.com/problemset/problem/982/A',1,3),(12342,'K Paths','https://codeforces.com/problemset/problem/981/H',3,3),(12343,'Magic multisets','https://codeforces.com/problemset/problem/981/G',2,3),(12344,'Round Marriage','https://codeforces.com/problemset/problem/981/F',2,3),(12345,'Addition on Segments','https://codeforces.com/problemset/problem/981/E',2,3),(12346,'Bookshelves','https://codeforces.com/problemset/problem/981/D',2,3),(12347,'Useful Decomposition','https://codeforces.com/problemset/problem/981/C',1,3),(12348,'Businessmen Problems','https://codeforces.com/problemset/problem/981/B',1,3),(12349,'Antipalindrome','https://codeforces.com/problemset/problem/981/A',1,3),(12350,'Cactus to Tree','https://codeforces.com/problemset/problem/980/F',3,3),(12351,'The Number Games','https://codeforces.com/problemset/problem/980/E',2,3),(12352,'Perfect Groups','https://codeforces.com/problemset/problem/980/D',2,3),(12353,'Posterized','https://codeforces.com/problemset/problem/980/C',2,3),(12354,'Marlin','https://codeforces.com/problemset/problem/980/B',2,3),(12355,'Links and Pearls','https://codeforces.com/problemset/problem/980/A',1,3),(12356,'Kuro and Topological Parity','https://codeforces.com/problemset/problem/979/E',2,3),(12357,'Kuro and GCD and XOR and SUM','https://codeforces.com/problemset/problem/979/D',2,3),(12358,'Kuro and Walking Route','https://codeforces.com/problemset/problem/979/C',2,3),(12359,'Treasure Hunt','https://codeforces.com/problemset/problem/979/B',2,3),(12360,'Pizza, Pizza, Pizza!!!','https://codeforces.com/problemset/problem/979/A',1,3),(12361,'Petya\'s Exams','https://codeforces.com/problemset/problem/978/G',2,3),(12362,'Mentors','https://codeforces.com/problemset/problem/978/F',1,3),(12363,'Bus Video System','https://codeforces.com/problemset/problem/978/E',1,3),(12364,'Almost Arithmetic Progression','https://codeforces.com/problemset/problem/978/D',1,3),(12365,'Letters','https://codeforces.com/problemset/problem/978/C',1,3),(12366,'File Name','https://codeforces.com/problemset/problem/978/B',1,3),(12367,'Remove Duplicates','https://codeforces.com/problemset/problem/978/A',1,3),(12368,'Consecutive Subsequence','https://codeforces.com/problemset/problem/977/F',2,3),(12369,'Cyclic Components','https://codeforces.com/problemset/problem/977/E',1,3),(12370,'Divide by three, multiply by two','https://codeforces.com/problemset/problem/977/D',1,3),(12371,'Less or Equal','https://codeforces.com/problemset/problem/977/C',1,3),(12372,'Two-gram','https://codeforces.com/problemset/problem/977/B',1,3),(12373,'Wrong Subtraction','https://codeforces.com/problemset/problem/977/A',1,3),(12374,'Minimal k-covering','https://codeforces.com/problemset/problem/976/F',2,3),(12375,'Well played!','https://codeforces.com/problemset/problem/976/E',2,3),(12376,'Degree Set','https://codeforces.com/problemset/problem/976/D',2,3),(12377,'Nested Segments','https://codeforces.com/problemset/problem/976/C',1,3),(12378,'Lara Croft and the New Game','https://codeforces.com/problemset/problem/976/B',1,3),(12379,'Minimum Binary Number','https://codeforces.com/problemset/problem/976/A',1,3),(12380,'Hag\'s Khashba','https://codeforces.com/problemset/problem/975/E',3,3),(12381,'Ghosts','https://codeforces.com/problemset/problem/975/D',2,3),(12382,'Valhalla Siege','https://codeforces.com/problemset/problem/975/C',1,3),(12383,'Mancala','https://codeforces.com/problemset/problem/975/B',1,3),(12384,'Aramic script','https://codeforces.com/problemset/problem/975/A',1,3),(12385,'Watering System','https://codeforces.com/problemset/problem/967/B',1,3),(12386,'Mind the Gap','https://codeforces.com/problemset/problem/967/A',1,3),(12387,'Short Code','https://codeforces.com/problemset/problem/965/E',2,3),(12388,'Single-use Stones','https://codeforces.com/problemset/problem/965/D',2,3),(12389,'Greedy Arkady','https://codeforces.com/problemset/problem/965/C',2,3),(12390,'Battleship','https://codeforces.com/problemset/problem/965/B',1,3),(12391,'Paper Airplanes','https://codeforces.com/problemset/problem/965/A',1,3),(12392,'Messages','https://codeforces.com/problemset/problem/964/B',1,3),(12393,'Splits','https://codeforces.com/problemset/problem/964/A',1,3),(12394,'Circles of Waiting','https://codeforces.com/problemset/problem/963/E',3,3),(12395,'Frequency of String','https://codeforces.com/problemset/problem/963/D',2,3),(12396,'Cutting Rectangle','https://codeforces.com/problemset/problem/963/C',3,3),(12397,'Destruction of a Tree','https://codeforces.com/problemset/problem/963/B',2,3),(12398,'Alternating Sum','https://codeforces.com/problemset/problem/963/A',2,3),(12399,'Visible Black Areas','https://codeforces.com/problemset/problem/962/G',3,3),(12400,'Simple Cycles Edges','https://codeforces.com/problemset/problem/962/F',2,3),(12401,'Byteland, Berland and Disputed Cities','https://codeforces.com/problemset/problem/962/E',2,3),(12402,'Merge Equals','https://codeforces.com/problemset/problem/962/D',2,3),(12403,'Make a Square','https://codeforces.com/problemset/problem/962/C',1,3),(12404,'Students in Railway Carriage','https://codeforces.com/problemset/problem/962/B',1,3),(12405,'Equator','https://codeforces.com/problemset/problem/962/A',1,3),(12406,'Partitions','https://codeforces.com/problemset/problem/961/G',3,3),(12407,'k-substrings','https://codeforces.com/problemset/problem/961/F',3,3),(12408,'Tufurama','https://codeforces.com/problemset/problem/961/E',2,3),(12409,'Pair Of Lines','https://codeforces.com/problemset/problem/961/D',2,3),(12410,'Chessboard','https://codeforces.com/problemset/problem/961/C',1,3),(12411,'Lecture Sleep','https://codeforces.com/problemset/problem/961/B',1,3),(12412,'Tetris','https://codeforces.com/problemset/problem/961/A',1,3),(12413,'Santa\'s Gift','https://codeforces.com/problemset/problem/960/H',3,3),(12414,'Bandit Blues','https://codeforces.com/problemset/problem/960/G',3,3),(12415,'Pathwalks','https://codeforces.com/problemset/problem/960/F',2,3),(12416,'Alternating Tree','https://codeforces.com/problemset/problem/960/E',2,3),(12417,'Full Binary Tree Queries','https://codeforces.com/problemset/problem/960/D',2,3),(12418,'Subsequence Counting','https://codeforces.com/problemset/problem/960/C',2,3),(12419,'Minimize the error','https://codeforces.com/problemset/problem/960/B',1,3),(12420,'Check the string','https://codeforces.com/problemset/problem/960/A',1,3),(12421,'Mahmoud and Ehab and yet another xor task','https://codeforces.com/problemset/problem/959/F',2,3),(12422,'Mahmoud and Ehab and the xor-MST','https://codeforces.com/problemset/problem/959/E',2,3),(12423,'Mahmoud and Ehab and another array construction task','https://codeforces.com/problemset/problem/959/D',2,3),(12424,'Mahmoud and Ehab and the wrong algorithm','https://codeforces.com/problemset/problem/959/C',1,3),(12425,'Mahmoud and Ehab and the message','https://codeforces.com/problemset/problem/959/B',1,3),(12426,'Mahmoud and Ehab and the even-odd game','https://codeforces.com/problemset/problem/959/A',1,3),(12427,'Lightsabers (hard)','https://codeforces.com/problemset/problem/958/F3',3,3),(12428,'Lightsabers (medium)','https://codeforces.com/problemset/problem/958/F2',2,3),(12429,'Lightsabers (easy)','https://codeforces.com/problemset/problem/958/F1',1,3),(12430,'Guard Duty (hard)','https://codeforces.com/problemset/problem/958/E3',3,3),(12431,'Guard Duty (medium)','https://codeforces.com/problemset/problem/958/E2',2,3),(12432,'Guard Duty (easy)','https://codeforces.com/problemset/problem/958/E1',2,3),(12433,'Hyperspace Jump (hard)','https://codeforces.com/problemset/problem/958/D2',3,3),(12434,'Hyperspace Jump (easy)','https://codeforces.com/problemset/problem/958/D1',1,3),(12435,'Encryption (hard)','https://codeforces.com/problemset/problem/958/C3',2,3),(12436,'Encryption (medium)','https://codeforces.com/problemset/problem/958/C2',2,3),(12437,'Encryption (easy)','https://codeforces.com/problemset/problem/958/C1',1,3),(12438,'Maximum Control (medium)','https://codeforces.com/problemset/problem/958/B2',2,3),(12439,'Maximum Control (easy)','https://codeforces.com/problemset/problem/958/B1',1,3),(12440,'Death Stars (hard)','https://codeforces.com/problemset/problem/958/A3',3,3),(12441,'Death Stars (medium)','https://codeforces.com/problemset/problem/958/A2',2,3),(12442,'Death Stars (easy)','https://codeforces.com/problemset/problem/958/A1',1,3),(12443,'Tritonic Iridescence','https://codeforces.com/problemset/problem/957/A',1,3),(12444,'Heaps','https://codeforces.com/problemset/problem/955/F',3,3),(12445,'Icicles','https://codeforces.com/problemset/problem/955/E',3,3),(12446,'Scissors','https://codeforces.com/problemset/problem/955/D',3,3),(12447,'Sad powers','https://codeforces.com/problemset/problem/955/C',2,3),(12448,'Not simply beatiful strings','https://codeforces.com/problemset/problem/955/B',1,3),(12449,'Feed the cat','https://codeforces.com/problemset/problem/955/A',1,3),(12450,'Yet Another String Matching Problem','https://codeforces.com/problemset/problem/954/I',2,3),(12451,'Path Counting','https://codeforces.com/problemset/problem/954/H',2,3),(12452,'Castle Defense','https://codeforces.com/problemset/problem/954/G',2,3),(12453,'Runner\'s Problem','https://codeforces.com/problemset/problem/954/F',2,3),(12454,'Water Taps','https://codeforces.com/problemset/problem/954/E',2,3),(12455,'Fight Against Traffic','https://codeforces.com/problemset/problem/954/D',2,3),(12456,'Matrix Walk','https://codeforces.com/problemset/problem/954/C',2,3),(12457,'String Typing','https://codeforces.com/problemset/problem/954/B',1,3),(12458,'Diagonal Walking','https://codeforces.com/problemset/problem/954/A',1,3),(12459,'Puzzling Language','https://codeforces.com/problemset/problem/952/G',2,3),(12460,'2 + 2 != 4','https://codeforces.com/problemset/problem/952/F',2,3),(12461,'Cheese Board','https://codeforces.com/problemset/problem/952/E',2,3),(12462,'I\'m Feeling Lucky!','https://codeforces.com/problemset/problem/952/D',2,3),(12463,'Ravioli Sort','https://codeforces.com/problemset/problem/952/C',2,3),(12464,'A Map of the Cat','https://codeforces.com/problemset/problem/952/B',2,3),(12465,'Quirky Quantifiers','https://codeforces.com/problemset/problem/952/A',1,3),(12466,'Intercepted Message','https://codeforces.com/problemset/problem/950/B',1,3),(12467,'Left-handers, Right-handers and Ambidexters','https://codeforces.com/problemset/problem/950/A',1,3),(12468,'Astronomy','https://codeforces.com/problemset/problem/949/F',3,3),(12469,'Binary Cards','https://codeforces.com/problemset/problem/949/E',3,3),(12470,'Curfew','https://codeforces.com/problemset/problem/949/D',2,3),(12471,'Data Center Maintenance','https://codeforces.com/problemset/problem/949/C',2,3),(12472,'A Leapfrog in the Array','https://codeforces.com/problemset/problem/949/B',2,3),(12473,'Zebras','https://codeforces.com/problemset/problem/949/A',2,3),(12474,'Protect Sheep','https://codeforces.com/problemset/problem/948/A',1,3),(12475,'Almost Increasing Array','https://codeforces.com/problemset/problem/946/G',2,3),(12476,'Fibonacci String Subsequences','https://codeforces.com/problemset/problem/946/F',2,3),(12477,'Largest Beautiful Number','https://codeforces.com/problemset/problem/946/E',2,3),(12478,'Timetable','https://codeforces.com/problemset/problem/946/D',2,3),(12479,'String Transformation','https://codeforces.com/problemset/problem/946/C',1,3),(12480,'Weird Subtraction Process','https://codeforces.com/problemset/problem/946/B',1,3),(12481,'Partition','https://codeforces.com/problemset/problem/946/A',1,3),(12482,'Machine Learning','https://codeforces.com/problemset/problem/940/F',3,3),(12483,'Cashback','https://codeforces.com/problemset/problem/940/E',2,3),(12484,'Alena And The Heater','https://codeforces.com/problemset/problem/940/D',2,3),(12485,'Phone Numbers','https://codeforces.com/problemset/problem/940/C',1,3),(12486,'Our Tanya is Crying Out Loud','https://codeforces.com/problemset/problem/940/B',1,3),(12487,'Points on the line','https://codeforces.com/problemset/problem/940/A',1,3),(12488,'Cutlet','https://codeforces.com/problemset/problem/939/F',2,3),(12489,'Maximize!','https://codeforces.com/problemset/problem/939/E',2,3),(12490,'Love Rescue','https://codeforces.com/problemset/problem/939/D',2,3),(12491,'Convenient For Everybody','https://codeforces.com/problemset/problem/939/C',2,3),(12492,'Hamster Farm','https://codeforces.com/problemset/problem/939/B',1,3),(12493,'Love Triangle','https://codeforces.com/problemset/problem/939/A',1,3),(12494,'Shortest Path Queries','https://codeforces.com/problemset/problem/938/G',3,3),(12495,'Erasing Substrings','https://codeforces.com/problemset/problem/938/F',3,3),(12496,'Max History','https://codeforces.com/problemset/problem/938/E',2,3),(12497,'Buy a Ticket','https://codeforces.com/problemset/problem/938/D',2,3),(12498,'Constructing Tests','https://codeforces.com/problemset/problem/938/C',2,3),(12499,'Run For Your Prize','https://codeforces.com/problemset/problem/938/B',1,3),(12500,'Word Correction','https://codeforces.com/problemset/problem/938/A',1,3),(12501,'Vile Grasshoppers','https://codeforces.com/problemset/problem/937/B',1,3),(12502,'Olympiad','https://codeforces.com/problemset/problem/937/A',1,3),(12503,'Iqea','https://codeforces.com/problemset/problem/936/E',3,3),(12504,'World of Tank','https://codeforces.com/problemset/problem/936/D',3,3),(12505,'Lock Puzzle','https://codeforces.com/problemset/problem/936/C',2,3),(12506,'Sleepy Game','https://codeforces.com/problemset/problem/936/B',2,3),(12507,'Save Energy!','https://codeforces.com/problemset/problem/936/A',2,3),(12508,'Fafa and Array','https://codeforces.com/problemset/problem/935/F',3,3),(12509,'Fafa and Ancient Mathematics','https://codeforces.com/problemset/problem/935/E',2,3),(12510,'Fafa and Ancient Alphabet','https://codeforces.com/problemset/problem/935/D',2,3),(12511,'Fifa and Fafa','https://codeforces.com/problemset/problem/935/C',2,3),(12512,'Fafa and the Gates','https://codeforces.com/problemset/problem/935/B',1,3),(12513,'Fafa and his Company','https://codeforces.com/problemset/problem/935/A',1,3),(12514,'A Prosperous Lot','https://codeforces.com/problemset/problem/934/B',1,3),(12515,'A Compatible Pair','https://codeforces.com/problemset/problem/934/A',1,3),(12516,'A Preponderant Reunion','https://codeforces.com/problemset/problem/933/E',3,3),(12517,'A Creative Cutout','https://codeforces.com/problemset/problem/933/D',3,3),(12518,'A Colourful Prospect','https://codeforces.com/problemset/problem/933/C',3,3),(12519,'A Determined Cleanup','https://codeforces.com/problemset/problem/933/B',2,3),(12520,'A Twisty Movement','https://codeforces.com/problemset/problem/933/A',2,3),(12521,'Palindrome Partition','https://codeforces.com/problemset/problem/932/G',3,3),(12522,'Escape Through Leaf','https://codeforces.com/problemset/problem/932/F',3,3),(12523,'Team Work','https://codeforces.com/problemset/problem/932/E',2,3),(12524,'Tree','https://codeforces.com/problemset/problem/932/D',2,3),(12525,'Permutation Cycle','https://codeforces.com/problemset/problem/932/C',2,3),(12526,'Recursive Queries','https://codeforces.com/problemset/problem/932/B',1,3),(12527,'Palindromic Supersequence','https://codeforces.com/problemset/problem/932/A',1,3),(12528,'Laboratory Work','https://codeforces.com/problemset/problem/931/C',2,3),(12529,'World Cup','https://codeforces.com/problemset/problem/931/B',1,3),(12530,'Friends Meeting','https://codeforces.com/problemset/problem/931/A',1,3),(12531,'Coins Exhibition','https://codeforces.com/problemset/problem/930/E',3,3),(12532,'Game with Tokens','https://codeforces.com/problemset/problem/930/D',2,3),(12533,'Teodor is not a liar!','https://codeforces.com/problemset/problem/930/C',2,3),(12534,'Game with String','https://codeforces.com/problemset/problem/930/B',2,3),(12535,'Peculiar apple-tree','https://codeforces.com/problemset/problem/930/A',1,3),(12536,'Пограничные врата','https://codeforces.com/problemset/problem/929/D',2,3),(12537,'Красивая команда','https://codeforces.com/problemset/problem/929/C',2,3),(12538,'Места в самолёте','https://codeforces.com/problemset/problem/929/B',1,3),(12539,'Прокат велосипедов','https://codeforces.com/problemset/problem/929/A',1,3),(12540,'Autocompletion','https://codeforces.com/problemset/problem/928/D',2,3),(12541,'Dependency management','https://codeforces.com/problemset/problem/928/C',2,3),(12542,'Chat','https://codeforces.com/problemset/problem/928/B',1,3),(12543,'Login Verification','https://codeforces.com/problemset/problem/928/A',1,3),(12544,'BuberPool Taxi Optimization','https://codeforces.com/problemset/problem/927/A',3,3),(12545,'Segments','https://codeforces.com/problemset/problem/926/J',2,3),(12546,'A Vital Problem','https://codeforces.com/problemset/problem/926/I',2,3),(12547,'Endless Roses Most Beautiful','https://codeforces.com/problemset/problem/926/H',2,3),(12548,'Large Bouquets','https://codeforces.com/problemset/problem/926/G',1,3),(12549,'Mobile Communications','https://codeforces.com/problemset/problem/926/F',2,3),(12550,'Merge Equal Elements','https://codeforces.com/problemset/problem/926/E',2,3),(12551,'Choose Place','https://codeforces.com/problemset/problem/926/D',2,3),(12552,'Is This a Zebra?','https://codeforces.com/problemset/problem/926/C',2,3),(12553,'Add Points','https://codeforces.com/problemset/problem/926/B',2,3),(12554,'2-3-numbers','https://codeforces.com/problemset/problem/926/A',1,3),(12555,'Parametric Circulation','https://codeforces.com/problemset/problem/925/F',3,3),(12556,'May Holidays','https://codeforces.com/problemset/problem/925/E',3,3),(12557,'Aztec Catacombs','https://codeforces.com/problemset/problem/925/D',3,3),(12558,'Big Secret','https://codeforces.com/problemset/problem/925/C',2,3),(12559,'Resource Distribution','https://codeforces.com/problemset/problem/925/B',2,3),(12560,'Stairs and Elevators','https://codeforces.com/problemset/problem/925/A',2,3),(12561,'Minimal Subset Difference','https://codeforces.com/problemset/problem/924/F',3,3),(12562,'Wardrobe','https://codeforces.com/problemset/problem/924/E',3,3),(12563,'Contact ATC','https://codeforces.com/problemset/problem/924/D',2,3),(12564,'Riverside Curio','https://codeforces.com/problemset/problem/924/C',2,3),(12565,'Three-level Laser','https://codeforces.com/problemset/problem/924/B',2,3),(12566,'Mystical Mosaic','https://codeforces.com/problemset/problem/924/A',1,3),(12567,'Public Service','https://codeforces.com/problemset/problem/923/F',3,3),(12568,'Perpetual Subtraction','https://codeforces.com/problemset/problem/923/E',3,3),(12569,'Picking Strings','https://codeforces.com/problemset/problem/923/D',2,3),(12570,'Perfect Security','https://codeforces.com/problemset/problem/923/C',2,3),(12571,'Producing Snow','https://codeforces.com/problemset/problem/923/B',2,3),(12572,'Primal Sport','https://codeforces.com/problemset/problem/923/A',2,3),(12573,'Divisibility','https://codeforces.com/problemset/problem/922/F',2,3),(12574,'Birds','https://codeforces.com/problemset/problem/922/E',2,3),(12575,'Robot Vacuum Cleaner','https://codeforces.com/problemset/problem/922/D',2,3),(12576,'Cave Painting','https://codeforces.com/problemset/problem/922/C',2,3),(12577,'Magic Forest','https://codeforces.com/problemset/problem/922/B',1,3),(12578,'Cloning Toys','https://codeforces.com/problemset/problem/922/A',1,3),(12579,'Labyrinth-14','https://codeforces.com/problemset/problem/921/14',3,3),(12580,'Labyrinth-13','https://codeforces.com/problemset/problem/921/13',3,3),(12581,'Labyrinth-12','https://codeforces.com/problemset/problem/921/12',3,3),(12582,'Labyrinth-11','https://codeforces.com/problemset/problem/921/11',3,3),(12583,'Labyrinth-10','https://codeforces.com/problemset/problem/921/10',3,3),(12584,'Labyrinth-9','https://codeforces.com/problemset/problem/921/09',3,3),(12585,'Labyrinth-8','https://codeforces.com/problemset/problem/921/08',3,3),(12586,'Labyrinth-7','https://codeforces.com/problemset/problem/921/07',3,3),(12587,'Labyrinth-6','https://codeforces.com/problemset/problem/921/06',3,3),(12588,'Labyrinth-5','https://codeforces.com/problemset/problem/921/05',3,3),(12589,'Labyrinth-4','https://codeforces.com/problemset/problem/921/04',3,3),(12590,'Labyrinth-3','https://codeforces.com/problemset/problem/921/03',3,3),(12591,'Labyrinth-2','https://codeforces.com/problemset/problem/921/02',3,3),(12592,'Labyrinth-1','https://codeforces.com/problemset/problem/921/01',3,3),(12593,'List Of Integers','https://codeforces.com/problemset/problem/920/G',2,3),(12594,'SUM and REPLACE','https://codeforces.com/problemset/problem/920/F',2,3),(12595,'Connected Components?','https://codeforces.com/problemset/problem/920/E',2,3),(12596,'Tanks','https://codeforces.com/problemset/problem/920/D',2,3),(12597,'Swap Adjacent Elements','https://codeforces.com/problemset/problem/920/C',1,3),(12598,'Tea Queue','https://codeforces.com/problemset/problem/920/B',1,3),(12599,'Water The Garden','https://codeforces.com/problemset/problem/920/A',1,3),(12600,'A Game With Numbers','https://codeforces.com/problemset/problem/919/F',3,3),(12601,'Congruence Equation','https://codeforces.com/problemset/problem/919/E',2,3),(12602,'Substring','https://codeforces.com/problemset/problem/919/D',2,3),(12603,'Seat Arrangements','https://codeforces.com/problemset/problem/919/C',1,3),(12604,'Perfect Number','https://codeforces.com/problemset/problem/919/B',1,3),(12605,'Supermarket','https://codeforces.com/problemset/problem/919/A',1,3),(12606,'Radio Station','https://codeforces.com/problemset/problem/918/B',1,3),(12607,'Eleven','https://codeforces.com/problemset/problem/918/A',1,3),(12608,'Upside Down','https://codeforces.com/problemset/problem/917/E',3,3),(12609,'Stranger Trees','https://codeforces.com/problemset/problem/917/D',3,3),(12610,'Pollywog','https://codeforces.com/problemset/problem/917/C',3,3),(12611,'MADMAX','https://codeforces.com/problemset/problem/917/B',2,3),(12612,'The Monster','https://codeforces.com/problemset/problem/917/A',2,3),(12613,'Jamie and Tree','https://codeforces.com/problemset/problem/916/E',2,3),(12614,'Jamie and To-do List','https://codeforces.com/problemset/problem/916/D',2,3),(12615,'Jamie and Interesting Graph','https://codeforces.com/problemset/problem/916/C',2,3),(12616,'Jamie and Binary Sequence (changed after round)','https://codeforces.com/problemset/problem/916/B',2,3),(12617,'Jamie and Alarm Snooze','https://codeforces.com/problemset/problem/916/A',1,3),(12618,'Coprime Arrays','https://codeforces.com/problemset/problem/915/G',2,3),(12619,'Imbalance Value of a Tree','https://codeforces.com/problemset/problem/915/F',2,3),(12620,'Physical Education Lessons','https://codeforces.com/problemset/problem/915/E',2,3),(12621,'Almost Acyclic Graph','https://codeforces.com/problemset/problem/915/D',2,3),(12622,'Permute Digits','https://codeforces.com/problemset/problem/915/C',2,3),(12623,'Browser','https://codeforces.com/problemset/problem/915/B',1,3),(12624,'Garden','https://codeforces.com/problemset/problem/915/A',1,3),(12625,'Ember and Storm\'s Tree Game','https://codeforces.com/problemset/problem/914/H',3,3),(12626,'Sum the Fibonacci','https://codeforces.com/problemset/problem/914/G',3,3),(12627,'Substrings in a String','https://codeforces.com/problemset/problem/914/F',3,3),(12628,'Palindromes in a Tree','https://codeforces.com/problemset/problem/914/E',2,3),(12629,'Bash and a Tough Math Puzzle','https://codeforces.com/problemset/problem/914/D',2,3),(12630,'Travelling Salesman and Special Numbers','https://codeforces.com/problemset/problem/914/C',2,3),(12631,'Conan and Agasa play a Card Game','https://codeforces.com/problemset/problem/914/B',1,3),(12632,'Perfect Squares','https://codeforces.com/problemset/problem/914/A',1,3),(12633,'Don\'t Exceed','https://codeforces.com/problemset/problem/913/H',3,3),(12634,'Power Substring','https://codeforces.com/problemset/problem/913/G',3,3),(12635,'Strongly Connected Tournament','https://codeforces.com/problemset/problem/913/F',3,3),(12636,'Logical Expression','https://codeforces.com/problemset/problem/913/E',2,3),(12637,'Too Easy Problems','https://codeforces.com/problemset/problem/913/D',2,3),(12638,'Party Lemonade','https://codeforces.com/problemset/problem/913/C',2,3),(12639,'Christmas Spruce','https://codeforces.com/problemset/problem/913/B',1,3),(12640,'Modular Exponentiation','https://codeforces.com/problemset/problem/913/A',1,3),(12641,'Prime Gift','https://codeforces.com/problemset/problem/912/E',2,3),(12642,'Fishes','https://codeforces.com/problemset/problem/912/D',2,3),(12643,'Perun, Ult!','https://codeforces.com/problemset/problem/912/C',2,3),(12644,'New Year\'s Eve','https://codeforces.com/problemset/problem/912/B',1,3),(12645,'Tricky Alchemy','https://codeforces.com/problemset/problem/912/A',1,3),(12646,'Mass Change Queries','https://codeforces.com/problemset/problem/911/G',2,3),(12647,'Tree Destruction','https://codeforces.com/problemset/problem/911/F',2,3),(12648,'Stack Sorting','https://codeforces.com/problemset/problem/911/E',2,3),(12649,'Inversion Counting','https://codeforces.com/problemset/problem/911/D',2,3),(12650,'Three Garlands','https://codeforces.com/problemset/problem/911/C',1,3),(12651,'Two Cakes','https://codeforces.com/problemset/problem/911/B',1,3),(12652,'Nearest Minimums','https://codeforces.com/problemset/problem/911/A',1,3),(12653,'Minimum Sum','https://codeforces.com/problemset/problem/910/C',2,3),(12654,'Door Frames','https://codeforces.com/problemset/problem/910/B',2,3),(12655,'The Way to Home','https://codeforces.com/problemset/problem/910/A',1,3),(12656,'AND-permutations','https://codeforces.com/problemset/problem/909/F',2,3),(12657,'Coprocessor','https://codeforces.com/problemset/problem/909/E',2,3),(12658,'Colorful Points','https://codeforces.com/problemset/problem/909/D',2,3),(12659,'Python Indentation','https://codeforces.com/problemset/problem/909/C',2,3),(12660,'Segments','https://codeforces.com/problemset/problem/909/B',1,3),(12661,'Generate Login','https://codeforces.com/problemset/problem/909/A',1,3),(12662,'New Year and Boolean Bridges','https://codeforces.com/problemset/problem/908/H',3,3),(12663,'New Year and Original Order','https://codeforces.com/problemset/problem/908/G',3,3),(12664,'New Year and Rainbow Roads','https://codeforces.com/problemset/problem/908/F',2,3),(12665,'New Year and Entity Enumeration','https://codeforces.com/problemset/problem/908/E',2,3),(12666,'New Year and Arbitrary Arrangement','https://codeforces.com/problemset/problem/908/D',2,3),(12667,'New Year and Curling','https://codeforces.com/problemset/problem/908/C',1,3),(12668,'New Year and Buggy Bot','https://codeforces.com/problemset/problem/908/B',1,3),(12669,'New Year and Counting Cards','https://codeforces.com/problemset/problem/908/A',1,3),(12670,'Tic-Tac-Toe','https://codeforces.com/problemset/problem/907/B',1,3),(12671,'Masha and Bears','https://codeforces.com/problemset/problem/907/A',1,3),(12672,'Reverses','https://codeforces.com/problemset/problem/906/E',3,3),(12673,'Power Tower','https://codeforces.com/problemset/problem/906/D',3,3),(12674,'Party','https://codeforces.com/problemset/problem/906/C',2,3),(12675,'Seating of Students','https://codeforces.com/problemset/problem/906/B',2,3),(12676,'Shockers','https://codeforces.com/problemset/problem/906/A',2,3),(12677,'Yet Another Maxflow Problem','https://codeforces.com/problemset/problem/903/G',3,3),(12678,'Clear The Matrix','https://codeforces.com/problemset/problem/903/F',2,3),(12679,'Swapping Characters','https://codeforces.com/problemset/problem/903/E',2,3),(12680,'Almost Difference','https://codeforces.com/problemset/problem/903/D',2,3),(12681,'Boxes Packing','https://codeforces.com/problemset/problem/903/C',1,3),(12682,'The Modcrab','https://codeforces.com/problemset/problem/903/B',1,3),(12683,'Hungry Student Problem','https://codeforces.com/problemset/problem/903/A',1,3),(12684,'Coloring a Tree','https://codeforces.com/problemset/problem/902/B',1,3),(12685,'Visiting a Friend','https://codeforces.com/problemset/problem/902/A',1,3),(12686,'Cyclic Cipher','https://codeforces.com/problemset/problem/901/E',3,3),(12687,'Weighting a Tree','https://codeforces.com/problemset/problem/901/D',3,3),(12688,'Bipartite Segments','https://codeforces.com/problemset/problem/901/C',2,3),(12689,'GCD of Polynomials','https://codeforces.com/problemset/problem/901/B',2,3),(12690,'Hashing Trees','https://codeforces.com/problemset/problem/901/A',1,3),(12691,'Maximum Questions','https://codeforces.com/problemset/problem/900/E',2,3),(12692,'Unusual Sequences','https://codeforces.com/problemset/problem/900/D',2,3),(12693,'Remove Extra One','https://codeforces.com/problemset/problem/900/C',2,3),(12694,'Position in Fraction','https://codeforces.com/problemset/problem/900/B',1,3),(12695,'Find Extra One','https://codeforces.com/problemset/problem/900/A',1,3),(12696,'Letters Removing','https://codeforces.com/problemset/problem/899/F',2,3),(12697,'Segments Removal','https://codeforces.com/problemset/problem/899/E',2,3),(12698,'Shovel Sale','https://codeforces.com/problemset/problem/899/D',2,3),(12699,'Dividing the numbers','https://codeforces.com/problemset/problem/899/C',1,3),(12700,'Months and Years','https://codeforces.com/problemset/problem/899/B',1,3),(12701,'Splitting in Teams','https://codeforces.com/problemset/problem/899/A',1,3),(12702,'Restoring the Expression','https://codeforces.com/problemset/problem/898/F',2,3),(12703,'Squares and not squares','https://codeforces.com/problemset/problem/898/E',2,3),(12704,'Alarm Clock','https://codeforces.com/problemset/problem/898/D',2,3),(12705,'Phone Numbers','https://codeforces.com/problemset/problem/898/C',1,3),(12706,'Proper Nutrition','https://codeforces.com/problemset/problem/898/B',1,3),(12707,'Rounding','https://codeforces.com/problemset/problem/898/A',1,3),(12708,'Chtholly\'s request','https://codeforces.com/problemset/problem/897/B',1,3),(12709,'Scarborough Fair','https://codeforces.com/problemset/problem/897/A',1,3),(12710,'Welcome home, Chtholly','https://codeforces.com/problemset/problem/896/E',3,3),(12711,'Nephren Runs a Cinema','https://codeforces.com/problemset/problem/896/D',3,3),(12712,'Willem, Chtholly and Seniorious','https://codeforces.com/problemset/problem/896/C',3,3),(12713,'Ithea Plays With Chtholly','https://codeforces.com/problemset/problem/896/B',2,3),(12714,'Nephren gives a riddle','https://codeforces.com/problemset/problem/896/A',2,3),(12715,'Eyes Closed','https://codeforces.com/problemset/problem/895/E',2,3),(12716,'String Mark','https://codeforces.com/problemset/problem/895/D',2,3),(12717,'Square Subsets','https://codeforces.com/problemset/problem/895/C',2,3),(12718,'XK Segments','https://codeforces.com/problemset/problem/895/B',2,3),(12719,'Pizza Separation','https://codeforces.com/problemset/problem/895/A',1,3),(12720,'Ralph and Mushrooms','https://codeforces.com/problemset/problem/894/E',2,3),(12721,'Ralph And His Tour in Binary Country','https://codeforces.com/problemset/problem/894/D',2,3),(12722,'Marco and GCD Sequence','https://codeforces.com/problemset/problem/894/C',2,3),(12723,'Ralph And His Magic Field','https://codeforces.com/problemset/problem/894/B',2,3),(12724,'QAQ','https://codeforces.com/problemset/problem/894/A',1,3),(12725,'Subtree Minimum Query','https://codeforces.com/problemset/problem/893/F',2,3),(12726,'Counting Arrays','https://codeforces.com/problemset/problem/893/E',2,3),(12727,'Credit Card','https://codeforces.com/problemset/problem/893/D',2,3),(12728,'Rumor','https://codeforces.com/problemset/problem/893/C',1,3),(12729,'Beautiful Divisors','https://codeforces.com/problemset/problem/893/B',1,3),(12730,'Chess For Three','https://codeforces.com/problemset/problem/893/A',1,3),(12731,'Wrath','https://codeforces.com/problemset/problem/892/B',1,3),(12732,'Greed','https://codeforces.com/problemset/problem/892/A',1,3),(12733,'Lust','https://codeforces.com/problemset/problem/891/E',3,3),(12734,'Sloth','https://codeforces.com/problemset/problem/891/D',3,3),(12735,'Envy','https://codeforces.com/problemset/problem/891/C',2,3),(12736,'Gluttony','https://codeforces.com/problemset/problem/891/B',2,3),(12737,'Pride','https://codeforces.com/problemset/problem/891/A',1,3),(12738,'Mod Mod Mod','https://codeforces.com/problemset/problem/889/E',3,3),(12739,'Xor-MST','https://codeforces.com/problemset/problem/888/G',2,3),(12740,'Connecting Vertices','https://codeforces.com/problemset/problem/888/F',2,3),(12741,'Maximum Subsequence','https://codeforces.com/problemset/problem/888/E',2,3),(12742,'Almost Identity Permutations','https://codeforces.com/problemset/problem/888/D',2,3),(12743,'K-Dominant Character','https://codeforces.com/problemset/problem/888/C',1,3),(12744,'Buggy Robot','https://codeforces.com/problemset/problem/888/B',1,3),(12745,'Local Extrema','https://codeforces.com/problemset/problem/888/A',1,3),(12746,'Row of Models','https://codeforces.com/problemset/problem/887/F',2,3),(12747,'Little Brother','https://codeforces.com/problemset/problem/887/E',3,3),(12748,'Ratings and Reality Shows','https://codeforces.com/problemset/problem/887/D',2,3),(12749,'Solution for Cube','https://codeforces.com/problemset/problem/887/C',1,3),(12750,'Cubes for Masha','https://codeforces.com/problemset/problem/887/B',1,3),(12751,'Div. 64','https://codeforces.com/problemset/problem/887/A',1,3),(12752,'Symmetric Projections','https://codeforces.com/problemset/problem/886/F',3,3),(12753,'Maximum Element','https://codeforces.com/problemset/problem/886/E',2,3),(12754,'Restoration of string','https://codeforces.com/problemset/problem/886/D',2,3),(12755,'Petya and Catacombs','https://codeforces.com/problemset/problem/886/C',1,3),(12756,'Vlad and Cafes','https://codeforces.com/problemset/problem/886/B',1,3),(12757,'ACM ICPC','https://codeforces.com/problemset/problem/886/A',1,3),(12758,'Anti-Palindromize','https://codeforces.com/problemset/problem/884/F',2,3),(12759,'Binary Matrix','https://codeforces.com/problemset/problem/884/E',2,3),(12760,'Boxes And Balls','https://codeforces.com/problemset/problem/884/D',2,3),(12761,'Bertown Subway','https://codeforces.com/problemset/problem/884/C',1,3),(12762,'Japanese Crosswords Strike Back','https://codeforces.com/problemset/problem/884/B',1,3),(12763,'Book Reading','https://codeforces.com/problemset/problem/884/A',1,3),(12764,'Quadcopter Competition','https://codeforces.com/problemset/problem/883/M',1,3),(12765,'Berland.Taxi','https://codeforces.com/problemset/problem/883/L',2,3),(12766,'Road Widening','https://codeforces.com/problemset/problem/883/K',2,3),(12767,'Renovation','https://codeforces.com/problemset/problem/883/J',2,3),(12768,'Photo Processing','https://codeforces.com/problemset/problem/883/I',2,3),(12769,'Palindromic Cut','https://codeforces.com/problemset/problem/883/H',2,3),(12770,'Orientation of Edges','https://codeforces.com/problemset/problem/883/G',2,3),(12771,'Lost in Transliteration','https://codeforces.com/problemset/problem/883/F',1,3),(12772,'Field of Wonders','https://codeforces.com/problemset/problem/883/E',1,3),(12773,'Packmen Strike Back','https://codeforces.com/problemset/problem/883/D',2,3),(12774,'Downloading B++','https://codeforces.com/problemset/problem/883/C',2,3),(12775,'Berland Army','https://codeforces.com/problemset/problem/883/B',3,3),(12776,'Automatic Door','https://codeforces.com/problemset/problem/883/A',2,3),(12777,'Table Tennis','https://codeforces.com/problemset/problem/879/B',1,3),(12778,'Borya\'s Diagnosis','https://codeforces.com/problemset/problem/879/A',1,3),(12779,'Numbers on the blackboard','https://codeforces.com/problemset/problem/878/E',3,3),(12780,'Magic Breeding','https://codeforces.com/problemset/problem/878/D',3,3),(12781,'Tournament','https://codeforces.com/problemset/problem/878/C',3,3),(12782,'Teams Formation','https://codeforces.com/problemset/problem/878/B',2,3),(12783,'Short Program','https://codeforces.com/problemset/problem/878/A',2,3),(12784,'Ann and Books','https://codeforces.com/problemset/problem/877/F',2,3),(12785,'Danil and a Part-time Job','https://codeforces.com/problemset/problem/877/E',2,3),(12786,'Olya and Energy Drinks','https://codeforces.com/problemset/problem/877/D',2,3),(12787,'Slava and tanks','https://codeforces.com/problemset/problem/877/C',2,3),(12788,'Nikita and string','https://codeforces.com/problemset/problem/877/B',1,3),(12789,'Alex and broken contest','https://codeforces.com/problemset/problem/877/A',1,3),(12790,'Divisiblity of Differences','https://codeforces.com/problemset/problem/876/B',1,3),(12791,'Trip For Meal','https://codeforces.com/problemset/problem/876/A',1,3),(12792,'Royal Questions','https://codeforces.com/problemset/problem/875/F',2,3),(12793,'Delivery Club','https://codeforces.com/problemset/problem/875/E',3,3),(12794,'High Cry','https://codeforces.com/problemset/problem/875/D',2,3),(12795,'National Property','https://codeforces.com/problemset/problem/875/C',2,3),(12796,'Sorting the Coins','https://codeforces.com/problemset/problem/875/B',1,3),(12797,'Classroom Watch','https://codeforces.com/problemset/problem/875/A',1,3),(12798,'Forbidden Indices','https://codeforces.com/problemset/problem/873/F',2,3),(12799,'Awards For Contestants','https://codeforces.com/problemset/problem/873/E',2,3),(12800,'Merge Sort','https://codeforces.com/problemset/problem/873/D',2,3),(12801,'Strange Game On Matrix','https://codeforces.com/problemset/problem/873/C',2,3),(12802,'Balanced Substring','https://codeforces.com/problemset/problem/873/B',1,3),(12803,'Chores','https://codeforces.com/problemset/problem/873/A',1,3),(12804,'Restore the Tree','https://codeforces.com/problemset/problem/871/E',3,3),(12805,'Paths','https://codeforces.com/problemset/problem/870/F',3,3),(12806,'Points, Lines and Ready-made Titles','https://codeforces.com/problemset/problem/870/E',2,3),(12807,'Something with XOR Queries','https://codeforces.com/problemset/problem/870/D',2,3),(12808,'Maximum splitting','https://codeforces.com/problemset/problem/870/C',1,3),(12809,'Maximum of Maximums of Minimums','https://codeforces.com/problemset/problem/870/B',1,3),(12810,'Search for Pretty Integers','https://codeforces.com/problemset/problem/870/A',1,3),(12811,'The Untended Antiquity','https://codeforces.com/problemset/problem/869/E',2,3),(12812,'The Overdosing Ubiquity','https://codeforces.com/problemset/problem/869/D',3,3),(12813,'The Intriguing Obsession','https://codeforces.com/problemset/problem/869/C',2,3),(12814,'The Eternal Immortality','https://codeforces.com/problemset/problem/869/B',1,3),(12815,'The Artful Expedient','https://codeforces.com/problemset/problem/869/A',1,3),(12816,'El Toll Caves','https://codeforces.com/problemset/problem/868/G',3,3),(12817,'Yet Another Minimization Problem','https://codeforces.com/problemset/problem/868/F',2,3),(12818,'Policeman and a Tree','https://codeforces.com/problemset/problem/868/E',3,3),(12819,'Huge Strings','https://codeforces.com/problemset/problem/868/D',2,3),(12820,'Qualification Rounds','https://codeforces.com/problemset/problem/868/C',1,3),(12821,'Race Against Time','https://codeforces.com/problemset/problem/868/B',1,3),(12822,'Bark to Unlock','https://codeforces.com/problemset/problem/868/A',1,3),(12823,'Between the Offices','https://codeforces.com/problemset/problem/867/A',1,3),(12824,'Flowers and Chocolate','https://codeforces.com/problemset/problem/865/G',3,3),(12825,'Egg Roulette','https://codeforces.com/problemset/problem/865/F',3,3),(12826,'Hex Dyslexia','https://codeforces.com/problemset/problem/865/E',3,3),(12827,'Buy Low Sell High','https://codeforces.com/problemset/problem/865/D',2,3),(12828,'Gotta Go Fast','https://codeforces.com/problemset/problem/865/C',2,3),(12829,'Ordering Pizza','https://codeforces.com/problemset/problem/865/B',2,3),(12830,'Save the problem!','https://codeforces.com/problemset/problem/865/A',1,3),(12831,'Cities Excursions','https://codeforces.com/problemset/problem/864/F',3,3),(12832,'Fire','https://codeforces.com/problemset/problem/864/E',2,3),(12833,'Make a Permutation!','https://codeforces.com/problemset/problem/864/D',1,3),(12834,'Bus','https://codeforces.com/problemset/problem/864/C',1,3),(12835,'Polycarp and Letters','https://codeforces.com/problemset/problem/864/B',1,3),(12836,'Fair Game','https://codeforces.com/problemset/problem/864/A',1,3),(12837,'Graphic Settings','https://codeforces.com/problemset/problem/863/G',3,3),(12838,'Almost Permutation','https://codeforces.com/problemset/problem/863/F',2,3),(12839,'Turn Off The TV','https://codeforces.com/problemset/problem/863/E',2,3),(12840,'Yet Another Array Queries Problem','https://codeforces.com/problemset/problem/863/D',2,3),(12841,'1-2-3','https://codeforces.com/problemset/problem/863/C',2,3),(12842,'Kayaking','https://codeforces.com/problemset/problem/863/B',1,3),(12843,'Quasi-palindrome','https://codeforces.com/problemset/problem/863/A',1,3),(12844,'Mahmoud and Ehab and the final stage','https://codeforces.com/problemset/problem/862/F',3,3),(12845,'Mahmoud and Ehab and the function','https://codeforces.com/problemset/problem/862/E',2,3),(12846,'Mahmoud and Ehab and the binary string','https://codeforces.com/problemset/problem/862/D',2,3),(12847,'Mahmoud and Ehab and the xor','https://codeforces.com/problemset/problem/862/C',2,3),(12848,'Mahmoud and Ehab and the bipartiteness','https://codeforces.com/problemset/problem/862/B',1,3),(12849,'Mahmoud and Ehab and the MEX','https://codeforces.com/problemset/problem/862/A',1,3),(12850,'Arkady and a Nobody-men','https://codeforces.com/problemset/problem/860/E',3,3),(12851,'Circle of Numbers','https://codeforces.com/problemset/problem/859/G',3,3),(12852,'Ordering T-Shirts','https://codeforces.com/problemset/problem/859/F',3,3),(12853,'Desk Disorder','https://codeforces.com/problemset/problem/859/E',2,3),(12854,'Third Month Insanity','https://codeforces.com/problemset/problem/859/D',2,3),(12855,'Pie Rules','https://codeforces.com/problemset/problem/859/C',1,3),(12856,'Lazy Security Guard','https://codeforces.com/problemset/problem/859/B',1,3),(12857,'Declined Finalists','https://codeforces.com/problemset/problem/859/A',1,3),(12858,'Wizard\'s Tour','https://codeforces.com/problemset/problem/858/F',2,3),(12859,'Tests Renumeration','https://codeforces.com/problemset/problem/858/E',2,3),(12860,'Polycarp\'s phone book','https://codeforces.com/problemset/problem/858/D',2,3),(12861,'Did you mean...','https://codeforces.com/problemset/problem/858/C',1,3),(12862,'Which floor?','https://codeforces.com/problemset/problem/858/B',1,3),(12863,'k-rounding','https://codeforces.com/problemset/problem/858/A',1,3),(12864,'To Play or not to Play','https://codeforces.com/problemset/problem/856/F',3,3),(12865,'Satellites','https://codeforces.com/problemset/problem/856/E',3,3),(12866,'Masha and Cactus','https://codeforces.com/problemset/problem/856/D',2,3),(12867,'Eleventh Birthday','https://codeforces.com/problemset/problem/856/C',2,3),(12868,'Similar Words','https://codeforces.com/problemset/problem/856/B',2,3),(12869,'Set Theory','https://codeforces.com/problemset/problem/856/A',2,3),(12870,'Harry Vs Voldemort','https://codeforces.com/problemset/problem/855/G',3,3),(12871,'Nagini','https://codeforces.com/problemset/problem/855/F',3,3),(12872,'Salazar Slytherin\'s Locket','https://codeforces.com/problemset/problem/855/E',2,3),(12873,'Rowena Ravenclaw\'s Diadem','https://codeforces.com/problemset/problem/855/D',2,3),(12874,'Helga Hufflepuff\'s Cup','https://codeforces.com/problemset/problem/855/C',2,3),(12875,'Marvolo Gaunt\'s Ring','https://codeforces.com/problemset/problem/855/B',1,3),(12876,'Tom Riddle\'s Diary','https://codeforces.com/problemset/problem/855/A',1,3),(12877,'Maxim Buys an Apartment','https://codeforces.com/problemset/problem/854/B',1,3),(12878,'Fraction','https://codeforces.com/problemset/problem/854/A',1,3),(12879,'Lada Malina','https://codeforces.com/problemset/problem/853/E',3,3),(12880,'Michael and Charging Stations','https://codeforces.com/problemset/problem/853/D',2,3),(12881,'Boredom','https://codeforces.com/problemset/problem/853/C',2,3),(12882,'Jury Meeting','https://codeforces.com/problemset/problem/853/B',2,3),(12883,'Planning','https://codeforces.com/problemset/problem/853/A',1,3),(12884,'Dating','https://codeforces.com/problemset/problem/852/I',2,3),(12885,'Bob and stages','https://codeforces.com/problemset/problem/852/H',3,3),(12886,'Bathroom terminal','https://codeforces.com/problemset/problem/852/G',2,3),(12887,'Product transformation','https://codeforces.com/problemset/problem/852/F',2,3),(12888,'Casinos and travel','https://codeforces.com/problemset/problem/852/E',2,3),(12889,'Exploration plan','https://codeforces.com/problemset/problem/852/D',2,3),(12890,'Property','https://codeforces.com/problemset/problem/852/C',2,3),(12891,'Neural Network country','https://codeforces.com/problemset/problem/852/B',2,3),(12892,'Digits','https://codeforces.com/problemset/problem/852/A',2,3),(12893,'Arpa and an exam about geometry','https://codeforces.com/problemset/problem/851/B',1,3),(12894,'Arpa and a research in Mexican wave','https://codeforces.com/problemset/problem/851/A',1,3),(12895,'Rainbow Balls','https://codeforces.com/problemset/problem/850/F',3,3),(12896,'Random Elections','https://codeforces.com/problemset/problem/850/E',3,3),(12897,'Tournament Construction','https://codeforces.com/problemset/problem/850/D',3,3),(12898,'Arpa and a game with Mojtaba','https://codeforces.com/problemset/problem/850/C',2,3),(12899,'Arpa and a list of numbers','https://codeforces.com/problemset/problem/850/B',2,3),(12900,'Five Dimensional Points','https://codeforces.com/problemset/problem/850/A',2,3),(12901,'Tell Your World','https://codeforces.com/problemset/problem/849/B',2,3),(12902,'Odds and Ends','https://codeforces.com/problemset/problem/849/A',1,3),(12903,'Days of Floral Colours','https://codeforces.com/problemset/problem/848/E',3,3),(12904,'Shake It!','https://codeforces.com/problemset/problem/848/D',3,3),(12905,'Goodbye Souvenir','https://codeforces.com/problemset/problem/848/C',3,3),(12906,'Rooter\'s Song','https://codeforces.com/problemset/problem/848/B',2,3),(12907,'From Y to Y','https://codeforces.com/problemset/problem/848/A',2,3),(12908,'Weather Tomorrow','https://codeforces.com/problemset/problem/847/M',1,3),(12909,'Berland SU Computer Network','https://codeforces.com/problemset/problem/847/L',2,3),(12910,'Travel Cards','https://codeforces.com/problemset/problem/847/K',2,3),(12911,'Students Initiation','https://codeforces.com/problemset/problem/847/J',2,3),(12912,'Noise Level','https://codeforces.com/problemset/problem/847/I',2,3),(12913,'Load Testing','https://codeforces.com/problemset/problem/847/H',2,3),(12914,'University Classes','https://codeforces.com/problemset/problem/847/G',1,3),(12915,'Berland Elections','https://codeforces.com/problemset/problem/847/F',2,3),(12916,'Packmen','https://codeforces.com/problemset/problem/847/E',2,3),(12917,'Dog Show','https://codeforces.com/problemset/problem/847/D',2,3),(12918,'Sum of Nestings','https://codeforces.com/problemset/problem/847/C',2,3),(12919,'Preparing for Merge Sort','https://codeforces.com/problemset/problem/847/B',2,3),(12920,'Union of Doubly Linked Lists','https://codeforces.com/problemset/problem/847/A',1,3),(12921,'Random Query','https://codeforces.com/problemset/problem/846/F',2,3),(12922,'Chemistry in Berland','https://codeforces.com/problemset/problem/846/E',2,3),(12923,'Monitor','https://codeforces.com/problemset/problem/846/D',2,3),(12924,'Four Segments','https://codeforces.com/problemset/problem/846/C',2,3),(12925,'Math Show','https://codeforces.com/problemset/problem/846/B',2,3),(12926,'Curriculum Vitae','https://codeforces.com/problemset/problem/846/A',1,3),(12927,'Shortest Path Problem?','https://codeforces.com/problemset/problem/845/G',2,3),(12928,'Guards In The Storehouse','https://codeforces.com/problemset/problem/845/F',2,3),(12929,'Fire in the City','https://codeforces.com/problemset/problem/845/E',2,3),(12930,'Driving Test','https://codeforces.com/problemset/problem/845/D',2,3),(12931,'Two TVs','https://codeforces.com/problemset/problem/845/C',1,3),(12932,'Luba And The Ticket','https://codeforces.com/problemset/problem/845/B',2,3),(12933,'Chess Tourney','https://codeforces.com/problemset/problem/845/A',1,3),(12934,'Rectangles','https://codeforces.com/problemset/problem/844/B',1,3),(12935,'Diversity','https://codeforces.com/problemset/problem/844/A',1,3),(12936,'Maximum Flow','https://codeforces.com/problemset/problem/843/E',3,3),(12937,'Dynamic Shortest Path','https://codeforces.com/problemset/problem/843/D',3,3),(12938,'Upgrading Tree','https://codeforces.com/problemset/problem/843/C',3,3),(12939,'Interactive LowerBound','https://codeforces.com/problemset/problem/843/B',2,3),(12940,'Sorting by Subsequences','https://codeforces.com/problemset/problem/843/A',1,3),(12941,'Nikita and game','https://codeforces.com/problemset/problem/842/E',3,3),(12942,'Vitya and Strange Lesson','https://codeforces.com/problemset/problem/842/D',2,3),(12943,'Ilya And The Tree','https://codeforces.com/problemset/problem/842/C',2,3),(12944,'Gleb And Pizza','https://codeforces.com/problemset/problem/842/B',1,3),(12945,'Kirill And The Game','https://codeforces.com/problemset/problem/842/A',1,3),(12946,'Godsend','https://codeforces.com/problemset/problem/841/B',1,3),(12947,'Generous Kefa','https://codeforces.com/problemset/problem/841/A',1,3),(12948,'In a Trap','https://codeforces.com/problemset/problem/840/E',3,3),(12949,'Destiny','https://codeforces.com/problemset/problem/840/D',2,3),(12950,'On the Bench','https://codeforces.com/problemset/problem/840/C',2,3),(12951,'Leha and another game about graph','https://codeforces.com/problemset/problem/840/B',2,3),(12952,'Leha and Function','https://codeforces.com/problemset/problem/840/A',1,3),(12953,'Mother of Dragons','https://codeforces.com/problemset/problem/839/E',3,3),(12954,'Winter is here','https://codeforces.com/problemset/problem/839/D',2,3),(12955,'Journey','https://codeforces.com/problemset/problem/839/C',1,3),(12956,'Game of the Rows','https://codeforces.com/problemset/problem/839/B',2,3),(12957,'Arya and Bran','https://codeforces.com/problemset/problem/839/A',1,3),(12958,'Expected Earnings','https://codeforces.com/problemset/problem/838/F',3,3),(12959,'Convex Countour','https://codeforces.com/problemset/problem/838/E',2,3),(12960,'Airplane Arrangements','https://codeforces.com/problemset/problem/838/D',3,3),(12961,'Future Failure','https://codeforces.com/problemset/problem/838/C',3,3),(12962,'Diverging Directions','https://codeforces.com/problemset/problem/838/B',2,3),(12963,'Binary Blocks','https://codeforces.com/problemset/problem/838/A',1,3),(12964,'Functions On The Segments','https://codeforces.com/problemset/problem/837/G',2,3),(12965,'Prefix Sums','https://codeforces.com/problemset/problem/837/F',2,3),(12966,'Vasya\'s Function','https://codeforces.com/problemset/problem/837/E',2,3),(12967,'Round Subset','https://codeforces.com/problemset/problem/837/D',2,3),(12968,'Two Seals','https://codeforces.com/problemset/problem/837/C',1,3),(12969,'Flag of Berland','https://codeforces.com/problemset/problem/837/B',2,3),(12970,'Text Volume','https://codeforces.com/problemset/problem/837/A',1,3),(12971,'Roads in the Kingdom','https://codeforces.com/problemset/problem/835/F',2,3),(12972,'The penguin\'s game','https://codeforces.com/problemset/problem/835/E',2,3),(12973,'Palindromic characteristics','https://codeforces.com/problemset/problem/835/D',2,3),(12974,'Star sky','https://codeforces.com/problemset/problem/835/C',2,3),(12975,'The number on the board','https://codeforces.com/problemset/problem/835/B',1,3),(12976,'Key races','https://codeforces.com/problemset/problem/835/A',1,3),(12977,'The Festive Evening','https://codeforces.com/problemset/problem/834/B',1,3),(12978,'The Useless Toy','https://codeforces.com/problemset/problem/834/A',1,3),(12979,'Caramel Clouds','https://codeforces.com/problemset/problem/833/E',3,3),(12980,'Red-Black Cobweb','https://codeforces.com/problemset/problem/833/D',3,3),(12981,'Ever-Hungry Krakozyabra','https://codeforces.com/problemset/problem/833/C',3,3),(12982,'The Bakery','https://codeforces.com/problemset/problem/833/B',2,3),(12983,'The Meaningless Game','https://codeforces.com/problemset/problem/833/A',2,3),(12984,'Vasya and Shifts','https://codeforces.com/problemset/problem/832/E',3,3),(12985,'Misha, Grisha and Underground','https://codeforces.com/problemset/problem/832/D',2,3),(12986,'Strange Radiation','https://codeforces.com/problemset/problem/832/C',2,3),(12987,'Petya and Exam','https://codeforces.com/problemset/problem/832/B',2,3),(12988,'Sasha and Sticks','https://codeforces.com/problemset/problem/832/A',1,3),(12989,'Jury Marks','https://codeforces.com/problemset/problem/831/C',2,3),(12990,'Keyboard Layouts','https://codeforces.com/problemset/problem/831/B',1,3),(12991,'Unimodal Array','https://codeforces.com/problemset/problem/831/A',1,3),(12992,'Perpetual Motion Machine','https://codeforces.com/problemset/problem/830/E',3,3),(12993,'Singer House','https://codeforces.com/problemset/problem/830/D',3,3),(12994,'Bamboo Partition','https://codeforces.com/problemset/problem/830/C',2,3),(12995,'Cards Sorting','https://codeforces.com/problemset/problem/830/B',2,3),(12996,'Office Keys','https://codeforces.com/problemset/problem/830/A',2,3),(12997,'Black Square','https://codeforces.com/problemset/problem/828/B',1,3),(12998,'Restaurant Tables','https://codeforces.com/problemset/problem/828/A',1,3),(12999,'Dirty Arkady\'s Kitchen','https://codeforces.com/problemset/problem/827/F',3,3),(13000,'Rusty String','https://codeforces.com/problemset/problem/827/E',3,3),(13001,'Best Edge Weight','https://codeforces.com/problemset/problem/827/D',3,3),(13002,'DNA Evolution','https://codeforces.com/problemset/problem/827/C',2,3),(13003,'High Load','https://codeforces.com/problemset/problem/827/B',2,3),(13004,'String Reconstruction','https://codeforces.com/problemset/problem/827/A',2,3),(13005,'Tree Queries','https://codeforces.com/problemset/problem/825/G',2,3),(13006,'String Compression','https://codeforces.com/problemset/problem/825/F',2,3),(13007,'Minimal Labels','https://codeforces.com/problemset/problem/825/E',2,3),(13008,'Suitable Replacement','https://codeforces.com/problemset/problem/825/D',1,3),(13009,'Multi-judge Solving','https://codeforces.com/problemset/problem/825/C',2,3),(13010,'Five-In-a-Row','https://codeforces.com/problemset/problem/825/B',2,3),(13011,'Binary Protocol','https://codeforces.com/problemset/problem/825/A',1,3),(13012,'Madness','https://codeforces.com/problemset/problem/822/F',2,3),(13013,'Liar','https://codeforces.com/problemset/problem/822/E',2,3),(13014,'My pretty girl Noora','https://codeforces.com/problemset/problem/822/D',2,3),(13015,'Hacker, pack your bags!','https://codeforces.com/problemset/problem/822/C',2,3),(13016,'Crossword solving','https://codeforces.com/problemset/problem/822/B',1,3),(13017,'I\'m bored with life','https://codeforces.com/problemset/problem/822/A',1,3),(13018,'Okabe and El Psy Kongroo','https://codeforces.com/problemset/problem/821/E',2,3),(13019,'Okabe and City','https://codeforces.com/problemset/problem/821/D',2,3),(13020,'Okabe and Boxes','https://codeforces.com/problemset/problem/821/C',1,3),(13021,'Okabe and Banana Trees','https://codeforces.com/problemset/problem/821/B',1,3),(13022,'Okabe and Future Gadget Laboratory','https://codeforces.com/problemset/problem/821/A',1,3),(13023,'Mister B and Angle in Polygon','https://codeforces.com/problemset/problem/820/B',1,3),(13024,'Mister B and Book Reading','https://codeforces.com/problemset/problem/820/A',1,3),(13025,'Mister B and Flight to the Moon','https://codeforces.com/problemset/problem/819/E',3,3),(13026,'Mister B and Astronomers','https://codeforces.com/problemset/problem/819/D',3,3),(13027,'Mister B and Beacons on Field','https://codeforces.com/problemset/problem/819/C',3,3),(13028,'Mister B and PR Shifts','https://codeforces.com/problemset/problem/819/B',2,3),(13029,'Mister B and Boring Game','https://codeforces.com/problemset/problem/819/A',2,3),(13030,'Four Melodies','https://codeforces.com/problemset/problem/818/G',3,3),(13031,'Level Generation','https://codeforces.com/problemset/problem/818/F',2,3),(13032,'Card Game Again','https://codeforces.com/problemset/problem/818/E',2,3),(13033,'Multicolored Cars','https://codeforces.com/problemset/problem/818/D',2,3),(13034,'Sofa Thief','https://codeforces.com/problemset/problem/818/C',2,3),(13035,'Permutation Game','https://codeforces.com/problemset/problem/818/B',2,3),(13036,'Diplomas and Certificates','https://codeforces.com/problemset/problem/818/A',1,3),(13037,'MEX Queries','https://codeforces.com/problemset/problem/817/F',2,3),(13038,'Choosing The Commander','https://codeforces.com/problemset/problem/817/E',2,3),(13039,'Imbalanced Array','https://codeforces.com/problemset/problem/817/D',2,3),(13040,'Really Big Numbers','https://codeforces.com/problemset/problem/817/C',2,3),(13041,'Makes And The Product','https://codeforces.com/problemset/problem/817/B',1,3),(13042,'Treasure Hunt','https://codeforces.com/problemset/problem/817/A',1,3),(13043,'Karen and Coffee','https://codeforces.com/problemset/problem/816/B',1,3),(13044,'Karen and Morning','https://codeforces.com/problemset/problem/816/A',1,3),(13045,'Karen and Neighborhood','https://codeforces.com/problemset/problem/815/E',3,3),(13046,'Karen and Cards','https://codeforces.com/problemset/problem/815/D',3,3),(13047,'Karen and Supermarket','https://codeforces.com/problemset/problem/815/C',2,3),(13048,'Karen and Test','https://codeforces.com/problemset/problem/815/B',2,3),(13049,'Karen and Game','https://codeforces.com/problemset/problem/815/A',2,3),(13050,'An unavoidable detour for home','https://codeforces.com/problemset/problem/814/E',3,3),(13051,'An overnight dance in discotheque','https://codeforces.com/problemset/problem/814/D',2,3),(13052,'An impassioned circulation of affection','https://codeforces.com/problemset/problem/814/C',2,3),(13053,'An express train to reveries','https://codeforces.com/problemset/problem/814/B',1,3),(13054,'An abandoned sentiment from past','https://codeforces.com/problemset/problem/814/A',1,3),(13055,'Bipartite Checking','https://codeforces.com/problemset/problem/813/F',2,3),(13056,'Army Creation','https://codeforces.com/problemset/problem/813/E',2,3),(13057,'Two Melodies','https://codeforces.com/problemset/problem/813/D',3,3),(13058,'The Tag Game','https://codeforces.com/problemset/problem/813/C',2,3),(13059,'The Golden Age','https://codeforces.com/problemset/problem/813/B',2,3),(13060,'The Contest','https://codeforces.com/problemset/problem/813/A',1,3),(13061,'Sagheer and Apple Tree','https://codeforces.com/problemset/problem/812/E',2,3),(13062,'Sagheer and Kindergarten','https://codeforces.com/problemset/problem/812/D',3,3),(13063,'Sagheer and Nubian Market','https://codeforces.com/problemset/problem/812/C',1,3),(13064,'Sagheer, the Hausmeister','https://codeforces.com/problemset/problem/812/B',2,3),(13065,'Sagheer and Crossroads','https://codeforces.com/problemset/problem/812/A',1,3),(13066,'Vladik and Entertaining Flags','https://codeforces.com/problemset/problem/811/E',3,3),(13067,'Vladik and Favorite Game','https://codeforces.com/problemset/problem/811/D',2,3),(13068,'Vladik and Memorable Trip','https://codeforces.com/problemset/problem/811/C',2,3),(13069,'Vladik and Complicated Book','https://codeforces.com/problemset/problem/811/B',1,3),(13070,'Vladik and Courtesy','https://codeforces.com/problemset/problem/811/A',1,3),(13071,'Summer sell-off','https://codeforces.com/problemset/problem/810/B',1,3),(13072,'Straight <<A>>','https://codeforces.com/problemset/problem/810/A',1,3),(13073,'Surprise me!','https://codeforces.com/problemset/problem/809/E',3,3),(13074,'Hitchhiking in the Baltic States','https://codeforces.com/problemset/problem/809/D',3,3),(13075,'Find a car','https://codeforces.com/problemset/problem/809/C',3,3),(13076,'Glad to see you!','https://codeforces.com/problemset/problem/809/B',2,3),(13077,'Do you want a date?','https://codeforces.com/problemset/problem/809/A',1,3),(13078,'Anthem of Berland','https://codeforces.com/problemset/problem/808/G',2,3),(13079,'Card Game','https://codeforces.com/problemset/problem/808/F',2,3),(13080,'Selling Souvenirs','https://codeforces.com/problemset/problem/808/E',2,3),(13081,'Array Division','https://codeforces.com/problemset/problem/808/D',2,3),(13082,'Tea Party','https://codeforces.com/problemset/problem/808/C',1,3),(13083,'Average Sleep Time','https://codeforces.com/problemset/problem/808/B',1,3),(13084,'Lucky Year','https://codeforces.com/problemset/problem/808/A',1,3),(13085,'T-Shirt Hunt','https://codeforces.com/problemset/problem/807/B',1,3),(13086,'Is it rated?','https://codeforces.com/problemset/problem/807/A',1,3),(13087,'3-palindrome','https://codeforces.com/problemset/problem/805/B',1,3),(13088,'Fake NP','https://codeforces.com/problemset/problem/805/A',1,3),(13089,'Fake bullions','https://codeforces.com/problemset/problem/804/F',3,3),(13090,'The same permutation ','https://codeforces.com/problemset/problem/804/E',3,3),(13091,'Expected diameter of a tree','https://codeforces.com/problemset/problem/804/D',2,3),(13092,'Ice cream coloring','https://codeforces.com/problemset/problem/804/C',2,3),(13093,'Minimum number of steps','https://codeforces.com/problemset/problem/804/B',1,3),(13094,'Find Amir','https://codeforces.com/problemset/problem/804/A',1,3),(13095,'Periodic RMQ Problem','https://codeforces.com/problemset/problem/803/G',2,3),(13096,'Coprime Subsequences','https://codeforces.com/problemset/problem/803/F',2,3),(13097,'Roma and Poker','https://codeforces.com/problemset/problem/803/E',2,3),(13098,'Magazine Ad','https://codeforces.com/problemset/problem/803/D',2,3),(13099,'Maximal GCD','https://codeforces.com/problemset/problem/803/C',2,3),(13100,'Distances to Zero','https://codeforces.com/problemset/problem/803/B',1,3),(13101,'Maximal Binary Matrix','https://codeforces.com/problemset/problem/803/A',1,3),(13102,'April Fools\' Problem (hard)','https://codeforces.com/problemset/problem/802/O',3,3),(13103,'April Fools\' Problem (medium)','https://codeforces.com/problemset/problem/802/N',2,3),(13104,'April Fools\' Problem (easy)','https://codeforces.com/problemset/problem/802/M',1,3),(13105,'Send the Fool Further! (hard)','https://codeforces.com/problemset/problem/802/L',2,3),(13106,'Send the Fool Further! (medium)','https://codeforces.com/problemset/problem/802/K',2,3),(13107,'Send the Fool Further! (easy)','https://codeforces.com/problemset/problem/802/J',1,3),(13108,'Fake News (hard)','https://codeforces.com/problemset/problem/802/I',2,3),(13109,'Fake News (medium)','https://codeforces.com/problemset/problem/802/H',2,3),(13110,'Fake News (easy)','https://codeforces.com/problemset/problem/802/G',1,3),(13111,'Marmots (hard)','https://codeforces.com/problemset/problem/802/F',3,3),(13112,'Marmots (medium)','https://codeforces.com/problemset/problem/802/E',2,3),(13113,'Marmots (easy)','https://codeforces.com/problemset/problem/802/D',2,3),(13114,'Heidi and Library (hard)','https://codeforces.com/problemset/problem/802/C',3,3),(13115,'Heidi and Library (medium)','https://codeforces.com/problemset/problem/802/B',2,3),(13116,'Heidi and Library (easy)','https://codeforces.com/problemset/problem/802/A',2,3),(13117,'Valued Keys','https://codeforces.com/problemset/problem/801/B',1,3),(13118,'Vicious Keyboard','https://codeforces.com/problemset/problem/801/A',1,3),(13119,'Cut the pie','https://codeforces.com/problemset/problem/799/G',3,3),(13120,'Beautiful fountains rows','https://codeforces.com/problemset/problem/799/F',3,3),(13121,'Aquarium decoration','https://codeforces.com/problemset/problem/799/E',2,3),(13122,'Field expansion','https://codeforces.com/problemset/problem/799/D',2,3),(13123,'Fountains','https://codeforces.com/problemset/problem/799/C',2,3),(13124,'T-shirt buying','https://codeforces.com/problemset/problem/799/B',1,3),(13125,'Carrot Cakes','https://codeforces.com/problemset/problem/799/A',1,3),(13126,'Mike and code of a permutation','https://codeforces.com/problemset/problem/798/E',3,3),(13127,'Mike and distribution','https://codeforces.com/problemset/problem/798/D',2,3),(13128,'Mike and gcd problem','https://codeforces.com/problemset/problem/798/C',2,3),(13129,'Mike and strings','https://codeforces.com/problemset/problem/798/B',1,3),(13130,'Mike and palindrome','https://codeforces.com/problemset/problem/798/A',1,3),(13131,'Mice and Holes','https://codeforces.com/problemset/problem/797/F',3,3),(13132,'Array Queries','https://codeforces.com/problemset/problem/797/E',2,3),(13133,'Broken BST','https://codeforces.com/problemset/problem/797/D',2,3),(13134,'Minimal string','https://codeforces.com/problemset/problem/797/C',2,3),(13135,'Odd sum','https://codeforces.com/problemset/problem/797/B',1,3),(13136,'k-Factorization','https://codeforces.com/problemset/problem/797/A',1,3),(13137,'Sequence Recovery','https://codeforces.com/problemset/problem/796/F',3,3),(13138,'Exam Cheating','https://codeforces.com/problemset/problem/796/E',2,3),(13139,'Police Stations','https://codeforces.com/problemset/problem/796/D',2,3),(13140,'Bank Hacking','https://codeforces.com/problemset/problem/796/C',2,3),(13141,'Find The Bone','https://codeforces.com/problemset/problem/796/B',1,3),(13142,'Buying A House','https://codeforces.com/problemset/problem/796/A',1,3),(13143,'Replace All','https://codeforces.com/problemset/problem/794/G',3,3),(13144,'Leha and security system','https://codeforces.com/problemset/problem/794/F',3,3),(13145,'Choosing Carrot','https://codeforces.com/problemset/problem/794/E',3,3),(13146,'Labelling Cities','https://codeforces.com/problemset/problem/794/D',2,3),(13147,'Naming Company','https://codeforces.com/problemset/problem/794/C',2,3),(13148,'Cutting Carrot','https://codeforces.com/problemset/problem/794/B',1,3),(13149,'Bank Robbery','https://codeforces.com/problemset/problem/794/A',1,3),(13150,'Oleg and chess','https://codeforces.com/problemset/problem/793/G',3,3),(13151,'Julia the snail','https://codeforces.com/problemset/problem/793/F',3,3),(13152,'Problem of offices','https://codeforces.com/problemset/problem/793/E',3,3),(13153,'Presents in Bankopolis','https://codeforces.com/problemset/problem/793/D',2,3),(13154,'Mice problem','https://codeforces.com/problemset/problem/793/C',2,3),(13155,'Igor and his way to work','https://codeforces.com/problemset/problem/793/B',2,3),(13156,'Oleg and shares','https://codeforces.com/problemset/problem/793/A',1,3),(13157,'Mages and Monsters','https://codeforces.com/problemset/problem/792/F',3,3),(13158,'Colored Balls','https://codeforces.com/problemset/problem/792/E',2,3),(13159,'Paths in a Complete Binary Tree','https://codeforces.com/problemset/problem/792/D',2,3),(13160,'Divide by Three','https://codeforces.com/problemset/problem/792/C',2,3),(13161,'Counting-out Rhyme','https://codeforces.com/problemset/problem/792/B',1,3),(13162,'New Bus Route','https://codeforces.com/problemset/problem/792/A',1,3),(13163,'Bear and Big Brother','https://codeforces.com/problemset/problem/791/A',1,3),(13164,'Masha and geometric depression','https://codeforces.com/problemset/problem/789/B',2,3),(13165,'Anastasia and pebbles','https://codeforces.com/problemset/problem/789/A',1,3),(13166,'New task','https://codeforces.com/problemset/problem/788/E',3,3),(13167,'Finding lines','https://codeforces.com/problemset/problem/788/D',3,3),(13168,'The Great Mixing','https://codeforces.com/problemset/problem/788/C',2,3),(13169,'Weird journey','https://codeforces.com/problemset/problem/788/B',2,3),(13170,'Functions again','https://codeforces.com/problemset/problem/788/A',2,3),(13171,'Not Afraid','https://codeforces.com/problemset/problem/787/B',1,3),(13172,'The Monster','https://codeforces.com/problemset/problem/787/A',1,3),(13173,'ALT','https://codeforces.com/problemset/problem/786/E',3,3),(13174,'Rap God','https://codeforces.com/problemset/problem/786/D',3,3),(13175,'Till I Collapse','https://codeforces.com/problemset/problem/786/C',2,3),(13176,'Legacy','https://codeforces.com/problemset/problem/786/B',2,3),(13177,'Berzerk','https://codeforces.com/problemset/problem/786/A',2,3),(13178,'Anton and Permutation','https://codeforces.com/problemset/problem/785/E',2,3),(13179,'Anton and School - 2','https://codeforces.com/problemset/problem/785/D',2,3),(13180,'Anton and Fairy Tale','https://codeforces.com/problemset/problem/785/C',2,3),(13181,'Anton and Classes','https://codeforces.com/problemset/problem/785/B',1,3),(13182,'Anton and Polyhedrons','https://codeforces.com/problemset/problem/785/A',1,3),(13183,'BF Calculator','https://codeforces.com/problemset/problem/784/G',2,3),(13184,'Crunching Numbers Just for You','https://codeforces.com/problemset/problem/784/F',2,3),(13185,'Twisted Circuit','https://codeforces.com/problemset/problem/784/E',2,3),(13186,'Touchy-Feely Palindromes','https://codeforces.com/problemset/problem/784/D',2,3),(13187,'INTERCALC','https://codeforces.com/problemset/problem/784/C',2,3),(13188,'Kids\' Riddle','https://codeforces.com/problemset/problem/784/B',2,3),(13189,'Numbers Joke','https://codeforces.com/problemset/problem/784/A',2,3),(13190,'Intranet of Buses','https://codeforces.com/problemset/problem/780/H',3,3),(13191,'Andryusha and Nervous Barriers','https://codeforces.com/problemset/problem/780/G',3,3),(13192,'Axel and Marston in Bitland','https://codeforces.com/problemset/problem/780/F',2,3),(13193,'Underground Lab','https://codeforces.com/problemset/problem/780/E',2,3),(13194,'Innokenty and a Football League','https://codeforces.com/problemset/problem/780/D',2,3),(13195,'Andryusha and Colored Balloons','https://codeforces.com/problemset/problem/780/C',2,3),(13196,'The Meeting Place Cannot Be Changed','https://codeforces.com/problemset/problem/780/B',2,3),(13197,'Andryusha and Socks','https://codeforces.com/problemset/problem/780/A',1,3),(13198,'Dishonest Sellers','https://codeforces.com/problemset/problem/779/C',1,3),(13199,'Weird Rounding','https://codeforces.com/problemset/problem/779/B',1,3),(13200,'Pupils Redistribution','https://codeforces.com/problemset/problem/779/A',1,3),(13201,'Selling Numbers','https://codeforces.com/problemset/problem/778/E',3,3),(13202,'Parquet Re-laying','https://codeforces.com/problemset/problem/778/D',3,3),(13203,'Peterson Polyglot','https://codeforces.com/problemset/problem/778/C',2,3),(13204,'Bitwise Formula','https://codeforces.com/problemset/problem/778/B',2,3),(13205,'String Game','https://codeforces.com/problemset/problem/778/A',2,3),(13206,'Hanoi Factory','https://codeforces.com/problemset/problem/777/E',2,3),(13207,'Cloud of Hashtags','https://codeforces.com/problemset/problem/777/D',2,3),(13208,'Alyona and Spreadsheet','https://codeforces.com/problemset/problem/777/C',2,3),(13209,'Game of Credit Cards','https://codeforces.com/problemset/problem/777/B',1,3),(13210,'Shell Game','https://codeforces.com/problemset/problem/777/A',1,3),(13211,'Sherlock and the Encrypted Data','https://codeforces.com/problemset/problem/776/G',3,3),(13212,'Sherlock\'s bet to Moriarty','https://codeforces.com/problemset/problem/776/F',3,3),(13213,'The Holmes Children','https://codeforces.com/problemset/problem/776/E',2,3),(13214,'The Door Problem','https://codeforces.com/problemset/problem/776/D',2,3),(13215,'Molly\'s Chemicals','https://codeforces.com/problemset/problem/776/C',2,3),(13216,'Sherlock and his girlfriend','https://codeforces.com/problemset/problem/776/B',1,3),(13217,'A Serial Killer','https://codeforces.com/problemset/problem/776/A',1,3),(13218,'University Schedule','https://codeforces.com/problemset/problem/775/A',3,3),(13219,'Bars','https://codeforces.com/problemset/problem/774/L',2,3),(13220,'Stepan and Vowels','https://codeforces.com/problemset/problem/774/K',2,3),(13221,'Stepan\'s Series','https://codeforces.com/problemset/problem/774/J',2,3),(13222,'Composing Of String','https://codeforces.com/problemset/problem/774/I',2,3),(13223,'Repairing Of String','https://codeforces.com/problemset/problem/774/H',2,3),(13224,'Perfectionist Arkadiy','https://codeforces.com/problemset/problem/774/G',3,3),(13225,'Pens And Days Of Week','https://codeforces.com/problemset/problem/774/F',3,3),(13226,'Big Number and Remainder','https://codeforces.com/problemset/problem/774/E',2,3),(13227,'Lie or Truth','https://codeforces.com/problemset/problem/774/D',1,3),(13228,'Maximum Number','https://codeforces.com/problemset/problem/774/C',1,3),(13229,'Significant Cups','https://codeforces.com/problemset/problem/774/B',2,3),(13230,'Amusement Park','https://codeforces.com/problemset/problem/774/A',2,3),(13231,'Test Data Generation','https://codeforces.com/problemset/problem/773/F',3,3),(13232,'Blog Post Rating','https://codeforces.com/problemset/problem/773/E',3,3),(13233,'Perishable Roads','https://codeforces.com/problemset/problem/773/D',3,3),(13234,'Prairie Partition','https://codeforces.com/problemset/problem/773/C',2,3),(13235,'Dynamic Problem Scoring','https://codeforces.com/problemset/problem/773/B',2,3),(13236,'Success Rate','https://codeforces.com/problemset/problem/773/A',2,3),(13237,'Verifying Kingdom','https://codeforces.com/problemset/problem/772/E',3,3),(13238,'Varying Kibibits','https://codeforces.com/problemset/problem/772/D',3,3),(13239,'Vulnerable Kerbals','https://codeforces.com/problemset/problem/772/C',2,3),(13240,'Volatile Kite','https://codeforces.com/problemset/problem/772/B',2,3),(13241,'Voltage Keepsake','https://codeforces.com/problemset/problem/772/A',2,3),(13242,'Bear and Isomorphic Points','https://codeforces.com/problemset/problem/771/F',3,3),(13243,'Bear and Rectangle Strips','https://codeforces.com/problemset/problem/771/E',3,3),(13244,'Bear and Company','https://codeforces.com/problemset/problem/771/D',2,3),(13245,'Bear and Tree Jumps','https://codeforces.com/problemset/problem/771/C',2,3),(13246,'Bear and Different Names','https://codeforces.com/problemset/problem/771/B',1,3),(13247,'Bear and Friendship Condition','https://codeforces.com/problemset/problem/771/A',1,3),(13248,'Draw Brackets!','https://codeforces.com/problemset/problem/770/D',1,3),(13249,'Online Courses In BSU','https://codeforces.com/problemset/problem/770/C',1,3),(13250,'Maximize Sum of Digits','https://codeforces.com/problemset/problem/770/B',1,3),(13251,'New Password','https://codeforces.com/problemset/problem/770/A',1,3),(13252,'k-Interesting Pairs Of Integers','https://codeforces.com/problemset/problem/769/D',2,3),(13253,'Cycle In Maze','https://codeforces.com/problemset/problem/769/C',2,3),(13254,'News About Credit','https://codeforces.com/problemset/problem/769/B',1,3),(13255,'Year of University Entrance','https://codeforces.com/problemset/problem/769/A',1,3),(13256,'The Winds of Winter','https://codeforces.com/problemset/problem/768/G',3,3),(13257,'Barrels and boxes','https://codeforces.com/problemset/problem/768/F',2,3),(13258,'Game of Stones','https://codeforces.com/problemset/problem/768/E',2,3),(13259,'Jon and Orbs','https://codeforces.com/problemset/problem/768/D',2,3),(13260,'Jon Snow and his Favourite Number','https://codeforces.com/problemset/problem/768/C',2,3),(13261,'Code For 1','https://codeforces.com/problemset/problem/768/B',2,3),(13262,'Oath of the Night\'s Watch','https://codeforces.com/problemset/problem/768/A',1,3),(13263,'Change-free','https://codeforces.com/problemset/problem/767/E',2,3),(13264,'Cartons of milk','https://codeforces.com/problemset/problem/767/D',2,3),(13265,'Garland','https://codeforces.com/problemset/problem/767/C',2,3),(13266,'The Queue','https://codeforces.com/problemset/problem/767/B',2,3),(13267,'Snacktower','https://codeforces.com/problemset/problem/767/A',1,3),(13268,'Mahmoud and a xor trip','https://codeforces.com/problemset/problem/766/E',2,3),(13269,'Mahmoud and a Dictionary','https://codeforces.com/problemset/problem/766/D',2,3),(13270,'Mahmoud and a Message','https://codeforces.com/problemset/problem/766/C',2,3),(13271,'Mahmoud and a Triangle','https://codeforces.com/problemset/problem/766/B',1,3),(13272,'Mahmoud and Longest Uncommon Subsequence','https://codeforces.com/problemset/problem/766/A',1,3),(13273,'Math, math everywhere','https://codeforces.com/problemset/problem/765/G',3,3),(13274,'Souvenirs','https://codeforces.com/problemset/problem/765/F',3,3),(13275,'Tree Folding','https://codeforces.com/problemset/problem/765/E',2,3),(13276,'Artsem and Saunders','https://codeforces.com/problemset/problem/765/D',2,3),(13277,'Table Tennis Game 2','https://codeforces.com/problemset/problem/765/C',1,3),(13278,'Code obfuscation','https://codeforces.com/problemset/problem/765/B',1,3),(13279,'Neverending competitions','https://codeforces.com/problemset/problem/765/A',1,3),(13280,'Timofey and cubes','https://codeforces.com/problemset/problem/764/B',1,3),(13281,'Taymyr is calling you','https://codeforces.com/problemset/problem/764/A',1,3),(13282,'Timofey and our friends animals','https://codeforces.com/problemset/problem/763/E',3,3),(13283,'Timofey and a flat tree','https://codeforces.com/problemset/problem/763/D',3,3),(13284,'Timofey and remoduling','https://codeforces.com/problemset/problem/763/C',3,3),(13285,'Timofey and rectangles','https://codeforces.com/problemset/problem/763/B',2,3),(13286,'Timofey and a tree','https://codeforces.com/problemset/problem/763/A',2,3),(13287,'Tree nesting','https://codeforces.com/problemset/problem/762/F',3,3),(13288,'Radio stations','https://codeforces.com/problemset/problem/762/E',2,3),(13289,'Maximum path','https://codeforces.com/problemset/problem/762/D',2,3),(13290,'Two strings','https://codeforces.com/problemset/problem/762/C',2,3),(13291,'USB vs. PS/2','https://codeforces.com/problemset/problem/762/B',1,3),(13292,'k-th divisor','https://codeforces.com/problemset/problem/762/A',1,3),(13293,'Dasha and Photos','https://codeforces.com/problemset/problem/761/F',3,3),(13294,'Dasha and Puzzle','https://codeforces.com/problemset/problem/761/E',2,3),(13295,'Dasha and Very Difficult Problem','https://codeforces.com/problemset/problem/761/D',2,3),(13296,'Dasha and Password','https://codeforces.com/problemset/problem/761/C',1,3),(13297,'Dasha and friends','https://codeforces.com/problemset/problem/761/B',1,3),(13298,'Dasha and Stairs','https://codeforces.com/problemset/problem/761/A',1,3),(13299,'Frodo and pillows','https://codeforces.com/problemset/problem/760/B',1,3),(13300,'Petr and a calendar','https://codeforces.com/problemset/problem/760/A',1,3),(13301,'Geometrical Progression','https://codeforces.com/problemset/problem/758/F',2,3),(13302,'Broken Tree','https://codeforces.com/problemset/problem/758/E',3,3),(13303,'Ability To Convert','https://codeforces.com/problemset/problem/758/D',2,3),(13304,'Unfair Poll','https://codeforces.com/problemset/problem/758/C',2,3),(13305,'Blown Garland','https://codeforces.com/problemset/problem/758/B',1,3),(13306,'Holiday Of Equality','https://codeforces.com/problemset/problem/758/A',1,3),(13307,'Can Bash Save the Day?','https://codeforces.com/problemset/problem/757/G',3,3),(13308,'Team Rocket Rises Again','https://codeforces.com/problemset/problem/757/F',3,3),(13309,'Bash Plays with Functions','https://codeforces.com/problemset/problem/757/E',2,3),(13310,'Felicity\'s Big Secret Revealed','https://codeforces.com/problemset/problem/757/D',2,3),(13311,'Felicity is Coming!','https://codeforces.com/problemset/problem/757/C',2,3),(13312,'Bash\'s Big Day','https://codeforces.com/problemset/problem/757/B',1,3),(13313,'Gotta Catch Em\' All!','https://codeforces.com/problemset/problem/757/A',1,3),(13314,'Long number','https://codeforces.com/problemset/problem/756/F',3,3),(13315,'Byteland coins','https://codeforces.com/problemset/problem/756/E',3,3),(13316,'Bacterial Melee','https://codeforces.com/problemset/problem/756/D',2,3),(13317,'Nikita and stack','https://codeforces.com/problemset/problem/756/C',2,3),(13318,'Travel Card','https://codeforces.com/problemset/problem/756/B',2,3),(13319,'Pavel and barbecue','https://codeforces.com/problemset/problem/756/A',2,3),(13320,'PolandBall and Many Other Balls','https://codeforces.com/problemset/problem/755/G',3,3),(13321,'PolandBall and Gifts','https://codeforces.com/problemset/problem/755/F',3,3),(13322,'PolandBall and White-Red graph','https://codeforces.com/problemset/problem/755/E',2,3),(13323,'PolandBall and Polygon','https://codeforces.com/problemset/problem/755/D',2,3),(13324,'PolandBall and Forest','https://codeforces.com/problemset/problem/755/C',1,3),(13325,'PolandBall and Game','https://codeforces.com/problemset/problem/755/B',1,3),(13326,'PolandBall and Hypothesis','https://codeforces.com/problemset/problem/755/A',1,3),(13327,'Dasha and cyclic table','https://codeforces.com/problemset/problem/754/E',3,3),(13328,'Fedor and coupons','https://codeforces.com/problemset/problem/754/D',2,3),(13329,'Vladik and chat','https://codeforces.com/problemset/problem/754/C',2,3),(13330,'Ilya and tic-tac-toe game','https://codeforces.com/problemset/problem/754/B',1,3),(13331,'Lesha and array splitting','https://codeforces.com/problemset/problem/754/A',1,3),(13332,'Interactive Bulls and Cows (Hard)','https://codeforces.com/problemset/problem/753/C',2,3),(13333,'Interactive Bulls and Cows (Easy)','https://codeforces.com/problemset/problem/753/B',2,3),(13334,'Santa Claus and Candies','https://codeforces.com/problemset/problem/753/A',1,3),(13335,'New Year and Snowy Grid','https://codeforces.com/problemset/problem/750/H',3,3),(13336,'New Year and Binary Tree Paths','https://codeforces.com/problemset/problem/750/G',3,3),(13337,'New Year and Finding Roots','https://codeforces.com/problemset/problem/750/F',3,3),(13338,'New Year and Old Subsequence','https://codeforces.com/problemset/problem/750/E',3,3),(13339,'New Year and Fireworks','https://codeforces.com/problemset/problem/750/D',2,3),(13340,'New Year and Rating','https://codeforces.com/problemset/problem/750/C',2,3),(13341,'New Year and North Pole','https://codeforces.com/problemset/problem/750/B',1,3),(13342,'New Year and Hurry','https://codeforces.com/problemset/problem/750/A',1,3),(13343,'Inversions After Shuffle','https://codeforces.com/problemset/problem/749/E',2,3),(13344,'Leaving Auction','https://codeforces.com/problemset/problem/749/D',2,3),(13345,'Voting','https://codeforces.com/problemset/problem/749/C',1,3),(13346,'Parallelogram is Back','https://codeforces.com/problemset/problem/749/B',1,3),(13347,'Bachgold Problem','https://codeforces.com/problemset/problem/749/A',1,3),(13348,'Santa Clauses and a Soccer Championship','https://codeforces.com/problemset/problem/748/F',2,3),(13349,'Santa Claus and Tangerines','https://codeforces.com/problemset/problem/748/E',2,3),(13350,'Santa Claus and a Palindrome','https://codeforces.com/problemset/problem/748/D',2,3),(13351,'Santa Claus and Robot','https://codeforces.com/problemset/problem/748/C',1,3),(13352,'Santa Claus and Keyboard Check','https://codeforces.com/problemset/problem/748/B',1,3),(13353,'Santa Claus and a Place in a Class','https://codeforces.com/problemset/problem/748/A',1,3),(13354,'Igor and Interesting Numbers','https://codeforces.com/problemset/problem/747/F',2,3),(13355,'Comments','https://codeforces.com/problemset/problem/747/E',2,3),(13356,'Winter Is Coming','https://codeforces.com/problemset/problem/747/D',2,3),(13357,'Servers','https://codeforces.com/problemset/problem/747/C',1,3),(13358,'Mammoth\'s Genome Decoding','https://codeforces.com/problemset/problem/747/B',1,3),(13359,'Display Size','https://codeforces.com/problemset/problem/747/A',1,3),(13360,'New Roads','https://codeforces.com/problemset/problem/746/G',2,3),(13361,'Music in Car','https://codeforces.com/problemset/problem/746/F',2,3),(13362,'Numbers Exchange','https://codeforces.com/problemset/problem/746/E',2,3),(13363,'Green and Black Tea','https://codeforces.com/problemset/problem/746/D',1,3),(13364,'Tram','https://codeforces.com/problemset/problem/746/C',2,3),(13365,'Decoding','https://codeforces.com/problemset/problem/746/B',1,3),(13366,'Compote','https://codeforces.com/problemset/problem/746/A',1,3),(13367,'Hongcow Solves A Puzzle','https://codeforces.com/problemset/problem/745/B',1,3),(13368,'Hongcow Learns the Cyclic Shift','https://codeforces.com/problemset/problem/745/A',1,3),(13369,'Hongcow Masters the Cyclic Shift','https://codeforces.com/problemset/problem/744/E',3,3),(13370,'Hongcow Draws a Circle','https://codeforces.com/problemset/problem/744/D',3,3),(13371,'Hongcow Buys a Deck of Cards','https://codeforces.com/problemset/problem/744/C',2,3),(13372,'Hongcow\'s Game','https://codeforces.com/problemset/problem/744/B',2,3),(13373,'Hongcow Builds A Nation','https://codeforces.com/problemset/problem/744/A',1,3),(13374,'Vladik and cards','https://codeforces.com/problemset/problem/743/E',2,3),(13375,'Chloe and pleasant prizes','https://codeforces.com/problemset/problem/743/D',2,3),(13376,'Vladik and fractions','https://codeforces.com/problemset/problem/743/C',1,3),(13377,'Chloe and the sequence ','https://codeforces.com/problemset/problem/743/B',1,3),(13378,'Vladik and flights','https://codeforces.com/problemset/problem/743/A',1,3),(13379,'Arpa’s obvious problem and Mehrdad’s terrible solution','https://codeforces.com/problemset/problem/742/B',1,3),(13380,'Arpa’s hard exam and Mehrdad’s naive cheat','https://codeforces.com/problemset/problem/742/A',1,3),(13381,'Arpa’s abnormal DNA and Mehrdad’s deep interest','https://codeforces.com/problemset/problem/741/E',3,3),(13382,'Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths','https://codeforces.com/problemset/problem/741/D',3,3),(13383,'Arpa’s overnight party and Mehrdad’s silent entering','https://codeforces.com/problemset/problem/741/C',3,3),(13384,'Arpa\'s weak amphitheater and Mehrdad\'s valuable Hoses','https://codeforces.com/problemset/problem/741/B',2,3),(13385,'Arpa\'s loud Owf and Mehrdad\'s evil plan','https://codeforces.com/problemset/problem/741/A',2,3),(13386,'Alyona and flowers','https://codeforces.com/problemset/problem/740/B',1,3),(13387,'Alyona and copybooks','https://codeforces.com/problemset/problem/740/A',1,3),(13388,'Gosha is hunting','https://codeforces.com/problemset/problem/739/E',3,3),(13389,'Recover a functional graph','https://codeforces.com/problemset/problem/739/D',3,3),(13390,'Alyona and towers','https://codeforces.com/problemset/problem/739/C',2,3),(13391,'Alyona and a tree','https://codeforces.com/problemset/problem/739/B',2,3),(13392,'Alyona and mex','https://codeforces.com/problemset/problem/739/A',2,3),(13393,'Dirty plates','https://codeforces.com/problemset/problem/737/F',3,3),(13394,'Tanya is 5!','https://codeforces.com/problemset/problem/737/E',3,3),(13395,'Chess Championship','https://codeforces.com/problemset/problem/736/E',3,3),(13396,'Permutations','https://codeforces.com/problemset/problem/736/D',3,3),(13397,'Ostap and Tree','https://codeforces.com/problemset/problem/735/E',2,3),(13398,'Taxes','https://codeforces.com/problemset/problem/735/D',2,3),(13399,'Tennis Championship','https://codeforces.com/problemset/problem/735/C',2,3),(13400,'Urbanization','https://codeforces.com/problemset/problem/735/B',1,3),(13401,'Ostap and Grasshopper','https://codeforces.com/problemset/problem/735/A',1,3),(13402,'Anton and School','https://codeforces.com/problemset/problem/734/F',2,3),(13403,'Anton and Tree','https://codeforces.com/problemset/problem/734/E',2,3),(13404,'Anton and Chess','https://codeforces.com/problemset/problem/734/D',2,3),(13405,'Anton and Making Potions','https://codeforces.com/problemset/problem/734/C',2,3),(13406,'Anton and Digits','https://codeforces.com/problemset/problem/734/B',1,3),(13407,'Anton and Danik','https://codeforces.com/problemset/problem/734/A',1,3),(13408,'Drivers Dissatisfaction','https://codeforces.com/problemset/problem/733/F',2,3),(13409,'Sleep in Class','https://codeforces.com/problemset/problem/733/E',2,3),(13410,'Kostya the Sculptor','https://codeforces.com/problemset/problem/733/D',2,3),(13411,'Epidemic in Monstropolis','https://codeforces.com/problemset/problem/733/C',2,3),(13412,'Parade','https://codeforces.com/problemset/problem/733/B',1,3),(13413,'Grasshopper And the String','https://codeforces.com/problemset/problem/733/A',1,3),(13414,'Tourist Reform','https://codeforces.com/problemset/problem/732/F',2,3),(13415,'Sockets','https://codeforces.com/problemset/problem/732/E',2,3),(13416,'Exams','https://codeforces.com/problemset/problem/732/D',2,3),(13417,'Sanatorium','https://codeforces.com/problemset/problem/732/C',1,3),(13418,'Cormen --- The Best Friend Of a Man','https://codeforces.com/problemset/problem/732/B',1,3),(13419,'Buy a Shovel','https://codeforces.com/problemset/problem/732/A',1,3),(13420,'Video Cards','https://codeforces.com/problemset/problem/731/F',2,3),(13421,'Funny Game','https://codeforces.com/problemset/problem/731/E',2,3),(13422,'80-th Level Archeology','https://codeforces.com/problemset/problem/731/D',2,3),(13423,'Socks','https://codeforces.com/problemset/problem/731/C',2,3),(13424,'Coupons and Discounts','https://codeforces.com/problemset/problem/731/B',1,3),(13425,'Night at the Museum','https://codeforces.com/problemset/problem/731/A',1,3),(13426,'Expression Queries','https://codeforces.com/problemset/problem/730/L',3,3),(13427,'Roads Orientation Problem','https://codeforces.com/problemset/problem/730/K',3,3),(13428,'Bottles','https://codeforces.com/problemset/problem/730/J',2,3),(13429,'Olympiad in Programming and Sports','https://codeforces.com/problemset/problem/730/I',2,3),(13430,'Delete Them','https://codeforces.com/problemset/problem/730/H',1,3),(13431,'Car Repair Shop','https://codeforces.com/problemset/problem/730/G',2,3),(13432,'Ber Patio','https://codeforces.com/problemset/problem/730/F',3,3),(13433,'Award Ceremony','https://codeforces.com/problemset/problem/730/E',2,3),(13434,'Running Over The Bridges','https://codeforces.com/problemset/problem/730/D',2,3),(13435,'Bulmart','https://codeforces.com/problemset/problem/730/C',2,3),(13436,'Minimum and Maximum','https://codeforces.com/problemset/problem/730/B',2,3),(13437,'Toda 2','https://codeforces.com/problemset/problem/730/A',2,3),(13438,'Financiers Game','https://codeforces.com/problemset/problem/729/F',2,3),(13439,'Subordinates','https://codeforces.com/problemset/problem/729/E',2,3),(13440,'Sea Battle','https://codeforces.com/problemset/problem/729/D',2,3),(13441,'Road to Cinema','https://codeforces.com/problemset/problem/729/C',2,3),(13442,'Spotlights','https://codeforces.com/problemset/problem/729/B',1,3),(13443,'Interview with Oleg','https://codeforces.com/problemset/problem/729/A',1,3),(13444,'Polycarp\'s problems','https://codeforces.com/problemset/problem/727/F',2,3),(13445,'Games on a CD','https://codeforces.com/problemset/problem/727/E',2,3),(13446,'T-shirts Distribution','https://codeforces.com/problemset/problem/727/D',2,3),(13447,'Guess the Array','https://codeforces.com/problemset/problem/727/C',1,3),(13448,'Bill Total Value','https://codeforces.com/problemset/problem/727/B',2,3),(13449,'Transformation: from A to B','https://codeforces.com/problemset/problem/727/A',1,3),(13450,'Messages on a Tree','https://codeforces.com/problemset/problem/725/G',3,3),(13451,'Family Photos','https://codeforces.com/problemset/problem/725/F',3,3),(13452,'Too Much Money','https://codeforces.com/problemset/problem/725/E',3,3),(13453,'Contest Balloons','https://codeforces.com/problemset/problem/725/D',2,3),(13454,'Hidden Word','https://codeforces.com/problemset/problem/725/C',2,3),(13455,'Food on the Plane','https://codeforces.com/problemset/problem/725/B',1,3),(13456,'Jumping Ball','https://codeforces.com/problemset/problem/725/A',1,3),(13457,'Xor-matic Number of the Graph','https://codeforces.com/problemset/problem/724/G',3,3),(13458,'Uniformly Branched Trees','https://codeforces.com/problemset/problem/724/F',3,3),(13459,'Goods transportation','https://codeforces.com/problemset/problem/724/E',3,3),(13460,'Dense Subsequence','https://codeforces.com/problemset/problem/724/D',2,3),(13461,'Ray Tracing','https://codeforces.com/problemset/problem/724/C',2,3),(13462,'Batch Sort','https://codeforces.com/problemset/problem/724/B',1,3),(13463,'Checking the Calendar','https://codeforces.com/problemset/problem/724/A',1,3),(13464,'st-Spanning Tree','https://codeforces.com/problemset/problem/723/F',2,3),(13465,'One-Way Reform','https://codeforces.com/problemset/problem/723/E',2,3),(13466,'Lakes in Berland','https://codeforces.com/problemset/problem/723/D',2,3),(13467,'Polycarp at the Radio','https://codeforces.com/problemset/problem/723/C',2,3),(13468,'Text Document Analysis','https://codeforces.com/problemset/problem/723/B',1,3),(13469,'The New Year: Meeting Friends','https://codeforces.com/problemset/problem/723/A',1,3),(13470,'Cyclic Cipher','https://codeforces.com/problemset/problem/722/F',3,3),(13471,'Research Rover','https://codeforces.com/problemset/problem/722/E',3,3),(13472,'Generating Sets','https://codeforces.com/problemset/problem/722/D',2,3),(13473,'Destroying Array','https://codeforces.com/problemset/problem/722/C',2,3),(13474,'Verse Pattern','https://codeforces.com/problemset/problem/722/B',1,3),(13475,'Broken Clock','https://codeforces.com/problemset/problem/722/A',1,3),(13476,'Road to Home','https://codeforces.com/problemset/problem/721/E',3,3),(13477,'Maxim and Array','https://codeforces.com/problemset/problem/721/D',2,3),(13478,'Journey','https://codeforces.com/problemset/problem/721/C',2,3),(13479,'Passwords','https://codeforces.com/problemset/problem/721/B',1,3),(13480,'One-dimensional Japanese Crossword','https://codeforces.com/problemset/problem/721/A',1,3),(13481,'Array Covering','https://codeforces.com/problemset/problem/720/F',3,3),(13482,'Cipher','https://codeforces.com/problemset/problem/720/E',3,3),(13483,'Slalom','https://codeforces.com/problemset/problem/720/D',3,3),(13484,'Homework','https://codeforces.com/problemset/problem/720/C',3,3),(13485,'Cactusophobia','https://codeforces.com/problemset/problem/720/B',2,3),(13486,'Closing ceremony','https://codeforces.com/problemset/problem/720/A',2,3),(13487,'Anatoly and Cockroaches','https://codeforces.com/problemset/problem/719/B',1,3),(13488,'Vitya in the Countryside','https://codeforces.com/problemset/problem/719/A',1,3),(13489,'Matvey\'s Birthday','https://codeforces.com/problemset/problem/718/E',3,3),(13490,'Andrew and Chemistry','https://codeforces.com/problemset/problem/718/D',3,3),(13491,'Sasha and Array','https://codeforces.com/problemset/problem/718/C',2,3),(13492,'Efim and Strange Grade','https://codeforces.com/problemset/problem/718/A',2,3),(13493,'Cowboy Beblop at his computer','https://codeforces.com/problemset/problem/717/I',3,3),(13494,'Pokermon League challenge','https://codeforces.com/problemset/problem/717/H',2,3),(13495,'Underfail','https://codeforces.com/problemset/problem/717/G',2,3),(13496,'Heroes of Making Magic III','https://codeforces.com/problemset/problem/717/F',3,3),(13497,'Paint it really, really dark gray','https://codeforces.com/problemset/problem/717/E',2,3),(13498,'Dexterina’s Lab','https://codeforces.com/problemset/problem/717/D',2,3),(13499,'Potions Homework','https://codeforces.com/problemset/problem/717/C',1,3),(13500,'R3D3’s Summer Adventure','https://codeforces.com/problemset/problem/717/B',3,3),(13501,'Festival Organization','https://codeforces.com/problemset/problem/717/A',3,3),(13502,'Complete the Word','https://codeforces.com/problemset/problem/716/B',1,3),(13503,'Crazy Computer','https://codeforces.com/problemset/problem/716/A',1,3),(13504,'Complete the Permutations','https://codeforces.com/problemset/problem/715/E',3,3),(13505,'Create a Maze','https://codeforces.com/problemset/problem/715/D',3,3),(13506,'Digit Tree','https://codeforces.com/problemset/problem/715/C',3,3),(13507,'Complete The Graph','https://codeforces.com/problemset/problem/715/B',2,3),(13508,'Plus and Square Root','https://codeforces.com/problemset/problem/715/A',2,3),(13509,'Filya and Homework','https://codeforces.com/problemset/problem/714/B',1,3),(13510,'Meeting of Old Friends','https://codeforces.com/problemset/problem/714/A',1,3),(13511,'Sonya Partymaker','https://codeforces.com/problemset/problem/713/E',3,3),(13512,'Animals and Puzzle','https://codeforces.com/problemset/problem/713/D',3,3),(13513,'Sonya and Problem Wihtout a Legend','https://codeforces.com/problemset/problem/713/C',2,3),(13514,'Searching Rectangles','https://codeforces.com/problemset/problem/713/B',2,3),(13515,'Sonya and Queries','https://codeforces.com/problemset/problem/713/A',1,3),(13516,'Memory and Casinos','https://codeforces.com/problemset/problem/712/E',2,3),(13517,'Memory and Scores','https://codeforces.com/problemset/problem/712/D',2,3),(13518,'Memory and De-Evolution','https://codeforces.com/problemset/problem/712/C',2,3),(13519,'Memory and Trident','https://codeforces.com/problemset/problem/712/B',1,3),(13520,'Memory and Crow','https://codeforces.com/problemset/problem/712/A',1,3),(13521,'ZS and The Birthday Paradox','https://codeforces.com/problemset/problem/711/E',2,3),(13522,'Directed Roads','https://codeforces.com/problemset/problem/711/D',2,3),(13523,'Coloring Trees','https://codeforces.com/problemset/problem/711/C',2,3),(13524,'Chris and Magic Square','https://codeforces.com/problemset/problem/711/B',1,3),(13525,'Bus to Udayland','https://codeforces.com/problemset/problem/711/A',1,3),(13526,'String Set Queries','https://codeforces.com/problemset/problem/710/F',2,3),(13527,'Generate a String','https://codeforces.com/problemset/problem/710/E',2,3),(13528,'Two Arithmetic Progressions','https://codeforces.com/problemset/problem/710/D',2,3),(13529,'Magic Odd Square','https://codeforces.com/problemset/problem/710/C',1,3),(13530,'Optimal Point on a Line','https://codeforces.com/problemset/problem/710/B',1,3),(13531,'King Moves','https://codeforces.com/problemset/problem/710/A',1,3),(13532,'Checkpoints','https://codeforces.com/problemset/problem/709/B',1,3),(13533,'Juicer','https://codeforces.com/problemset/problem/709/A',1,3),(13534,'Student\'s Camp','https://codeforces.com/problemset/problem/708/E',3,3),(13535,'Incorrect Flow','https://codeforces.com/problemset/problem/708/D',3,3),(13536,'Centroids','https://codeforces.com/problemset/problem/708/C',2,3),(13537,'Recover the String','https://codeforces.com/problemset/problem/708/B',2,3),(13538,'Letters Cyclic Shift','https://codeforces.com/problemset/problem/708/A',1,3),(13539,'Garlands','https://codeforces.com/problemset/problem/707/E',2,3),(13540,'Persistent Bookcase ','https://codeforces.com/problemset/problem/707/D',2,3),(13541,'Pythagorean Triples','https://codeforces.com/problemset/problem/707/C',1,3),(13542,'Bakery','https://codeforces.com/problemset/problem/707/B',1,3),(13543,'Brain\'s Photos','https://codeforces.com/problemset/problem/707/A',1,3),(13544,'Working routine','https://codeforces.com/problemset/problem/706/E',2,3),(13545,'Vasiliy\'s Multiset','https://codeforces.com/problemset/problem/706/D',2,3),(13546,'Hard problem','https://codeforces.com/problemset/problem/706/C',2,3),(13547,'Interesting drink','https://codeforces.com/problemset/problem/706/B',1,3),(13548,'Beru-taxi','https://codeforces.com/problemset/problem/706/A',1,3),(13549,'Spider Man','https://codeforces.com/problemset/problem/705/B',1,3),(13550,'Hulk','https://codeforces.com/problemset/problem/705/A',1,3),(13551,'Iron Man','https://codeforces.com/problemset/problem/704/E',3,3),(13552,'Captain America','https://codeforces.com/problemset/problem/704/D',3,3),(13553,'Black Widow','https://codeforces.com/problemset/problem/704/C',3,3),(13554,'Ant Man','https://codeforces.com/problemset/problem/704/B',2,3),(13555,'Thor','https://codeforces.com/problemset/problem/704/A',2,3),(13556,'Mishka and Divisors','https://codeforces.com/problemset/problem/703/E',3,3),(13557,'Mishka and Interesting sum','https://codeforces.com/problemset/problem/703/D',2,3),(13558,'Chris and Road','https://codeforces.com/problemset/problem/703/C',2,3),(13559,'Mishka and trip','https://codeforces.com/problemset/problem/703/B',1,3),(13560,'Mishka and Game','https://codeforces.com/problemset/problem/703/A',1,3),(13561,'T-Shirts','https://codeforces.com/problemset/problem/702/F',3,3),(13562,'Analysis of Pathes in Functional Graph','https://codeforces.com/problemset/problem/702/E',2,3),(13563,'Road to Post Office','https://codeforces.com/problemset/problem/702/D',2,3),(13564,'Cellular Network','https://codeforces.com/problemset/problem/702/C',1,3),(13565,'Powers of Two','https://codeforces.com/problemset/problem/702/B',1,3),(13566,'Maximum Increase','https://codeforces.com/problemset/problem/702/A',1,3),(13567,'They Are Everywhere','https://codeforces.com/problemset/problem/701/C',1,3),(13568,'Cells Not Under Attack','https://codeforces.com/problemset/problem/701/B',1,3),(13569,'Cards','https://codeforces.com/problemset/problem/701/A',1,3),(13570,'Cool Slogans','https://codeforces.com/problemset/problem/700/E',3,3),(13571,'Huffman Coding on Segment','https://codeforces.com/problemset/problem/700/D',3,3),(13572,'Break Up','https://codeforces.com/problemset/problem/700/C',3,3),(13573,'Connecting Universities','https://codeforces.com/problemset/problem/700/B',2,3),(13574,'As Fast As Possible','https://codeforces.com/problemset/problem/700/A',2,3),(13575,'One Bomb','https://codeforces.com/problemset/problem/699/B',1,3),(13576,'Launch of Collider','https://codeforces.com/problemset/problem/699/A',1,3),(13577,'Coprime Permutation','https://codeforces.com/problemset/problem/698/F',3,3),(13578,'Cron','https://codeforces.com/problemset/problem/698/E',3,3),(13579,'Limak and Shooting Points','https://codeforces.com/problemset/problem/698/D',3,3),(13580,'LRU','https://codeforces.com/problemset/problem/698/C',2,3),(13581,'Fix a Tree','https://codeforces.com/problemset/problem/698/B',2,3),(13582,'Vacations','https://codeforces.com/problemset/problem/698/A',1,3),(13583,'Barnicle','https://codeforces.com/problemset/problem/697/B',1,3),(13584,'Pineapple Incident','https://codeforces.com/problemset/problem/697/A',1,3),(13585,'...Dary!','https://codeforces.com/problemset/problem/696/F',3,3),(13586,'...Wait for it...','https://codeforces.com/problemset/problem/696/E',3,3),(13587,'Legen...','https://codeforces.com/problemset/problem/696/D',2,3),(13588,'PLEASE','https://codeforces.com/problemset/problem/696/C',2,3),(13589,'Puzzles','https://codeforces.com/problemset/problem/696/B',2,3),(13590,'Lorenzo Von Matterhorn','https://codeforces.com/problemset/problem/696/A',1,3),(13591,'Couple Cover','https://codeforces.com/problemset/problem/691/F',2,3),(13592,'Xor-sequences','https://codeforces.com/problemset/problem/691/E',2,3),(13593,'Swaps in Permutation','https://codeforces.com/problemset/problem/691/D',2,3),(13594,'Exponential notation','https://codeforces.com/problemset/problem/691/C',2,3),(13595,'s-palindrome','https://codeforces.com/problemset/problem/691/B',2,3),(13596,'Fashion in Berland','https://codeforces.com/problemset/problem/691/A',1,3),(13597,'Tree of Life (hard)','https://codeforces.com/problemset/problem/690/F3',3,3),(13598,'Tree of Life (medium)','https://codeforces.com/problemset/problem/690/F2',3,3),(13599,'Tree of Life (easy)','https://codeforces.com/problemset/problem/690/F1',1,3),(13600,'Photographs (II)','https://codeforces.com/problemset/problem/690/E2',3,3),(13601,'Photographs (I)','https://codeforces.com/problemset/problem/690/E1',2,3),(13602,'The Wall (hard)','https://codeforces.com/problemset/problem/690/D3',2,3),(13603,'The Wall (medium)','https://codeforces.com/problemset/problem/690/D2',2,3),(13604,'The Wall (easy)','https://codeforces.com/problemset/problem/690/D1',1,3),(13605,'Brain Network (hard)','https://codeforces.com/problemset/problem/690/C3',2,3),(13606,'Brain Network (medium)','https://codeforces.com/problemset/problem/690/C2',1,3),(13607,'Brain Network (easy)','https://codeforces.com/problemset/problem/690/C1',1,3),(13608,'Recover Polygon (hard)','https://codeforces.com/problemset/problem/690/B3',3,3),(13609,'Recover Polygon (medium)','https://codeforces.com/problemset/problem/690/B2',3,3),(13610,'Recover Polygon (easy)','https://codeforces.com/problemset/problem/690/B1',2,3),(13611,'Collective Mindsets (hard)','https://codeforces.com/problemset/problem/690/A3',2,3),(13612,'Collective Mindsets (medium)','https://codeforces.com/problemset/problem/690/A2',2,3),(13613,'Collective Mindsets (easy)','https://codeforces.com/problemset/problem/690/A1',1,3),(13614,'Mike and Geometry Problem','https://codeforces.com/problemset/problem/689/E',2,3),(13615,'Friends and Subsequences','https://codeforces.com/problemset/problem/689/D',2,3),(13616,'Mike and Chocolate Thieves','https://codeforces.com/problemset/problem/689/C',2,3),(13617,'Mike and Shortcuts','https://codeforces.com/problemset/problem/689/B',2,3),(13618,'Mike and Cellphone','https://codeforces.com/problemset/problem/689/A',1,3),(13619,'Lovely Palindromes','https://codeforces.com/problemset/problem/688/B',1,3),(13620,'Opponents','https://codeforces.com/problemset/problem/688/A',1,3),(13621,'TOF','https://codeforces.com/problemset/problem/687/E',3,3),(13622,'Dividing Kingdom II','https://codeforces.com/problemset/problem/687/D',2,3),(13623,'The Values You Can Make','https://codeforces.com/problemset/problem/687/C',2,3),(13624,'Remainders Game','https://codeforces.com/problemset/problem/687/B',2,3),(13625,'NP-Hard Problem','https://codeforces.com/problemset/problem/687/A',1,3),(13626,'Little Robber Girl\'s Zoo','https://codeforces.com/problemset/problem/686/B',1,3),(13627,'Free Ice Cream','https://codeforces.com/problemset/problem/686/A',1,3),(13628,'Travelling Through the Snow Queen\'s Kingdom','https://codeforces.com/problemset/problem/685/E',3,3),(13629,'Kay and Eternity','https://codeforces.com/problemset/problem/685/D',3,3),(13630,'Optimal Point','https://codeforces.com/problemset/problem/685/C',3,3),(13631,'Kay and Snowflake','https://codeforces.com/problemset/problem/685/B',2,3),(13632,'Robbers\' watch','https://codeforces.com/problemset/problem/685/A',2,3),(13633,'The Hero with Bombs','https://codeforces.com/problemset/problem/683/J',3,3),(13634,'Loader','https://codeforces.com/problemset/problem/683/I',2,3),(13635,'Exchange of Books','https://codeforces.com/problemset/problem/683/H',2,3),(13636,'The Fraction','https://codeforces.com/problemset/problem/683/G',2,3),(13637,'Reformat the String','https://codeforces.com/problemset/problem/683/F',2,3),(13638,'Hammer throwing','https://codeforces.com/problemset/problem/683/E',2,3),(13639,'Chocolate Bar','https://codeforces.com/problemset/problem/683/D',1,3),(13640,'Symmetric Difference','https://codeforces.com/problemset/problem/683/C',2,3),(13641,'The Teacher of Physical Education','https://codeforces.com/problemset/problem/683/B',2,3),(13642,'The Check of the Point','https://codeforces.com/problemset/problem/683/A',1,3),(13643,'Alyona and Triangles','https://codeforces.com/problemset/problem/682/E',3,3),(13644,'Alyona and Strings','https://codeforces.com/problemset/problem/682/D',2,3),(13645,'Alyona and the Tree','https://codeforces.com/problemset/problem/682/C',2,3),(13646,'Alyona and Mex','https://codeforces.com/problemset/problem/682/B',1,3),(13647,'Alyona and Numbers','https://codeforces.com/problemset/problem/682/A',1,3),(13648,'Runaway to a Shadow','https://codeforces.com/problemset/problem/681/E',2,3),(13649,'Gifts by the List','https://codeforces.com/problemset/problem/681/D',2,3),(13650,'Heap Operations','https://codeforces.com/problemset/problem/681/C',2,3),(13651,'Economy Game','https://codeforces.com/problemset/problem/681/B',1,3),(13652,'A Good Contest','https://codeforces.com/problemset/problem/681/A',1,3),(13653,'Bear and Finding Criminals','https://codeforces.com/problemset/problem/680/B',1,3),(13654,'Bear and Five Cards','https://codeforces.com/problemset/problem/680/A',1,3),(13655,'Bear and Bad Powers of 42','https://codeforces.com/problemset/problem/679/E',3,3),(13656,'Bear and Chase','https://codeforces.com/problemset/problem/679/D',3,3),(13657,'Bear and Square Grid','https://codeforces.com/problemset/problem/679/C',2,3),(13658,'Bear and Tower of Cubes','https://codeforces.com/problemset/problem/679/B',2,3),(13659,'Bear and Prime 100','https://codeforces.com/problemset/problem/679/A',1,3),(13660,'Lena and Queries','https://codeforces.com/problemset/problem/678/F',2,3),(13661,'Another Sith Tournament','https://codeforces.com/problemset/problem/678/E',2,3),(13662,'Iterated Linear Function','https://codeforces.com/problemset/problem/678/D',2,3),(13663,'Joty and Chocolate','https://codeforces.com/problemset/problem/678/C',2,3),(13664,'The Same Calendar','https://codeforces.com/problemset/problem/678/B',2,3),(13665,'Johny Likes Numbers','https://codeforces.com/problemset/problem/678/A',1,3),(13666,'Vanya and Balloons','https://codeforces.com/problemset/problem/677/E',2,3),(13667,'Vanya and Treasure','https://codeforces.com/problemset/problem/677/D',2,3),(13668,'Vanya and Label','https://codeforces.com/problemset/problem/677/C',1,3),(13669,'Vanya and Food Processor','https://codeforces.com/problemset/problem/677/B',1,3),(13670,'Vanya and Fence','https://codeforces.com/problemset/problem/677/A',1,3),(13671,'The Last Fight Between Human and AI','https://codeforces.com/problemset/problem/676/E',2,3),(13672,'Theseus and labyrinth','https://codeforces.com/problemset/problem/676/D',2,3),(13673,'Vasya and String','https://codeforces.com/problemset/problem/676/C',1,3),(13674,'Pyramid of Glasses','https://codeforces.com/problemset/problem/676/B',1,3),(13675,'Nicholas and Permutation','https://codeforces.com/problemset/problem/676/A',1,3),(13676,'Trains and Statistic','https://codeforces.com/problemset/problem/675/E',2,3),(13677,'Tree Construction','https://codeforces.com/problemset/problem/675/D',2,3),(13678,'Money Transfers','https://codeforces.com/problemset/problem/675/C',2,3),(13679,'Restoring Painting','https://codeforces.com/problemset/problem/675/B',1,3),(13680,'Infinite Sequence','https://codeforces.com/problemset/problem/675/A',1,3),(13681,'Problems for Round','https://codeforces.com/problemset/problem/673/B',1,3),(13682,'Bear and Game','https://codeforces.com/problemset/problem/673/A',1,3),(13683,'Different is Good','https://codeforces.com/problemset/problem/672/B',1,3),(13684,'Summer Camp','https://codeforces.com/problemset/problem/672/A',1,3),(13685,'Organizing a Race','https://codeforces.com/problemset/problem/671/E',3,3),(13686,'Roads in Yusland','https://codeforces.com/problemset/problem/671/D',3,3),(13687,'Ultimate Weirdness of an Array','https://codeforces.com/problemset/problem/671/C',3,3),(13688,'Robin Hood','https://codeforces.com/problemset/problem/671/B',2,3),(13689,'Recycling Bottles','https://codeforces.com/problemset/problem/671/A',2,3),(13690,'Restore a Number','https://codeforces.com/problemset/problem/670/F',2,3),(13691,'Correct Bracket Sequence Editor','https://codeforces.com/problemset/problem/670/E',2,3),(13692,'Magic Powder - 2','https://codeforces.com/problemset/problem/670/D2',1,3),(13693,'Magic Powder - 1','https://codeforces.com/problemset/problem/670/D1',1,3),(13694,'Cinema','https://codeforces.com/problemset/problem/670/C',1,3),(13695,'Game of Robots','https://codeforces.com/problemset/problem/670/B',1,3),(13696,'Holidays','https://codeforces.com/problemset/problem/670/A',1,3),(13697,'Little Artem and Presents','https://codeforces.com/problemset/problem/669/A',1,3),(13698,'Coat of Anticubism','https://codeforces.com/problemset/problem/667/B',1,3),(13699,'Pouring Rain','https://codeforces.com/problemset/problem/667/A',1,3),(13700,'Forensic Examination','https://codeforces.com/problemset/problem/666/E',3,3),(13701,'Chain Reaction','https://codeforces.com/problemset/problem/666/D',3,3),(13702,'Codeword','https://codeforces.com/problemset/problem/666/C',2,3),(13703,'World Tour','https://codeforces.com/problemset/problem/666/B',2,3),(13704,'Reberland Linguistics','https://codeforces.com/problemset/problem/666/A',2,3),(13705,'Four Divisors','https://codeforces.com/problemset/problem/665/F',2,3),(13706,'Beautiful Subarrays','https://codeforces.com/problemset/problem/665/E',2,3),(13707,'Simple Subset','https://codeforces.com/problemset/problem/665/D',2,3),(13708,'Simple Strings','https://codeforces.com/problemset/problem/665/C',1,3),(13709,'Shopping','https://codeforces.com/problemset/problem/665/B',1,3),(13710,'Buses Between Cities','https://codeforces.com/problemset/problem/665/A',2,3),(13711,'Complicated GCD','https://codeforces.com/problemset/problem/664/A',1,3),(13712,'Rebus','https://codeforces.com/problemset/problem/663/A',2,3),(13713,'To Hack or not to Hack','https://codeforces.com/problemset/problem/662/E',3,3),(13714,'International Olympiad','https://codeforces.com/problemset/problem/662/D',2,3),(13715,'Binary Table','https://codeforces.com/problemset/problem/662/C',3,3),(13716,'Graph Coloring','https://codeforces.com/problemset/problem/662/B',2,3),(13717,'Gambling Nim','https://codeforces.com/problemset/problem/662/A',2,3),(13718,'Rotate Matrix','https://codeforces.com/problemset/problem/661/H',2,3),(13719,'Hungarian Notation','https://codeforces.com/problemset/problem/661/G',2,3),(13720,'Primes in Interval','https://codeforces.com/problemset/problem/661/F',2,3),(13721,'Divisibility Check','https://codeforces.com/problemset/problem/661/E',2,3),(13722,'Maximal Difference','https://codeforces.com/problemset/problem/661/D',2,3),(13723,'Array Sum','https://codeforces.com/problemset/problem/661/C',2,3),(13724,'Seasons','https://codeforces.com/problemset/problem/661/B',2,3),(13725,'Lazy Caterer Sequence','https://codeforces.com/problemset/problem/661/A',1,3),(13726,'Bear and Bowling 4','https://codeforces.com/problemset/problem/660/F',2,3),(13727,'Different Subsets For All Tuples','https://codeforces.com/problemset/problem/660/E',2,3),(13728,'Number of Parallelograms','https://codeforces.com/problemset/problem/660/D',2,3),(13729,'Hard Process','https://codeforces.com/problemset/problem/660/C',2,3),(13730,'Seating On Bus','https://codeforces.com/problemset/problem/660/B',1,3),(13731,'Co-prime Array','https://codeforces.com/problemset/problem/660/A',1,3),(13732,'Fence Divercity','https://codeforces.com/problemset/problem/659/G',2,3),(13733,'Polycarp and Hay','https://codeforces.com/problemset/problem/659/F',2,3),(13734,'New Reform','https://codeforces.com/problemset/problem/659/E',2,3),(13735,'Bicycle Race','https://codeforces.com/problemset/problem/659/D',1,3),(13736,'Tanya and Toys','https://codeforces.com/problemset/problem/659/C',1,3),(13737,'Qualifying Contest','https://codeforces.com/problemset/problem/659/B',1,3),(13738,'Round House','https://codeforces.com/problemset/problem/659/A',1,3),(13739,'Bear and Reverse Radewoosh','https://codeforces.com/problemset/problem/658/A',1,3),(13740,'You\'re a Professional','https://codeforces.com/problemset/problem/656/G',2,3),(13741,'Ace It!','https://codeforces.com/problemset/problem/656/F',2,3),(13742,'Out of Controls','https://codeforces.com/problemset/problem/656/E',2,3),(13743,'Rosetta Problem','https://codeforces.com/problemset/problem/656/D',2,3),(13744,'Without Text','https://codeforces.com/problemset/problem/656/C',2,3),(13745,'Scrambled','https://codeforces.com/problemset/problem/656/B',2,3),(13746,'Da Vinci Powers','https://codeforces.com/problemset/problem/656/A',2,3),(13747,'Move by Prime','https://codeforces.com/problemset/problem/653/G',3,3),(13748,'Paper task','https://codeforces.com/problemset/problem/653/F',3,3),(13749,'Bear and Forgotten Tree 2','https://codeforces.com/problemset/problem/653/E',2,3),(13750,'Delivery Bears','https://codeforces.com/problemset/problem/653/D',2,3),(13751,'Bear and Up-Down','https://codeforces.com/problemset/problem/653/C',2,3),(13752,'Bear and Compressing','https://codeforces.com/problemset/problem/653/B',1,3),(13753,'Bear and Three Balls','https://codeforces.com/problemset/problem/653/A',1,3),(13754,'Ants on a Circle','https://codeforces.com/problemset/problem/652/F',3,3),(13755,'Pursuit For Artifacts','https://codeforces.com/problemset/problem/652/E',2,3),(13756,'Nested Segments','https://codeforces.com/problemset/problem/652/D',2,3),(13757,'Foe Pairs','https://codeforces.com/problemset/problem/652/C',2,3),(13758,'z-sort','https://codeforces.com/problemset/problem/652/B',1,3),(13759,'Gabriel and Caterpillar','https://codeforces.com/problemset/problem/652/A',1,3),(13760,'Beautiful Paintings','https://codeforces.com/problemset/problem/651/B',1,3),(13761,'Joysticks','https://codeforces.com/problemset/problem/651/A',1,3),(13762,'Clockwork Bomb','https://codeforces.com/problemset/problem/650/E',3,3),(13763,'Zip-line','https://codeforces.com/problemset/problem/650/D',3,3),(13764,'Table Compression','https://codeforces.com/problemset/problem/650/C',2,3),(13765,'Image Preview','https://codeforces.com/problemset/problem/650/B',2,3),(13766,'Watchmen','https://codeforces.com/problemset/problem/650/A',1,3),(13767,'Автобус','https://codeforces.com/problemset/problem/649/E',2,3),(13768,'Дефрагментация памяти','https://codeforces.com/problemset/problem/649/D',2,3),(13769,'Печать условий','https://codeforces.com/problemset/problem/649/C',1,3),(13770,'Этажи','https://codeforces.com/problemset/problem/649/B',1,3),(13771,'Любимые числа Поликарпа','https://codeforces.com/problemset/problem/649/A',1,3),(13772,'Собери число','https://codeforces.com/problemset/problem/648/E',2,3),(13773,'Собачки и миски','https://codeforces.com/problemset/problem/648/D',2,3),(13774,'Путь Робота','https://codeforces.com/problemset/problem/648/C',1,3),(13775,'Собери стол','https://codeforces.com/problemset/problem/648/B',1,3),(13776,'Наибольший подъем','https://codeforces.com/problemset/problem/648/A',1,3),(13777,'Armistice Area Apportionment','https://codeforces.com/problemset/problem/645/G',3,3),(13778,'Cowslip Collections','https://codeforces.com/problemset/problem/645/F',2,3),(13779,'Intellectual Inquiry','https://codeforces.com/problemset/problem/645/E',2,3),(13780,'Robot Rapping Results Report','https://codeforces.com/problemset/problem/645/D',2,3),(13781,'Enduring Exodus','https://codeforces.com/problemset/problem/645/C',2,3),(13782,'Mischievous Mess Makers','https://codeforces.com/problemset/problem/645/B',1,3),(13783,'Amity Assessment','https://codeforces.com/problemset/problem/645/A',1,3),(13784,'Hostname Aliases','https://codeforces.com/problemset/problem/644/C',2,3),(13785,'Processing Queries','https://codeforces.com/problemset/problem/644/B',2,3),(13786,'Parliament of Berland','https://codeforces.com/problemset/problem/644/A',1,3),(13787,'Choosing Ads','https://codeforces.com/problemset/problem/643/G',3,3),(13788,'Bears and Juice','https://codeforces.com/problemset/problem/643/F',3,3),(13789,'Bear and Destroying Subtrees','https://codeforces.com/problemset/problem/643/E',3,3),(13790,'Bearish Fanpages','https://codeforces.com/problemset/problem/643/D',3,3),(13791,'Levels and Regions','https://codeforces.com/problemset/problem/643/C',2,3),(13792,'Bear and Two Paths','https://codeforces.com/problemset/problem/643/B',2,3),(13793,'Bear and Colors','https://codeforces.com/problemset/problem/643/A',1,3),(13794,'Little Artem and Graph','https://codeforces.com/problemset/problem/641/G',2,3),(13795,'Little Artem and 2-SAT','https://codeforces.com/problemset/problem/641/F',3,3),(13796,'Little Artem and Time Machine','https://codeforces.com/problemset/problem/641/E',2,3),(13797,'Little Artem and Random Variable','https://codeforces.com/problemset/problem/641/D',2,3),(13798,'Little Artem and Dance','https://codeforces.com/problemset/problem/641/C',2,3),(13799,'Little Artem and Matrix','https://codeforces.com/problemset/problem/641/B',1,3),(13800,'Little Artem and Grasshopper','https://codeforces.com/problemset/problem/641/A',1,3),(13801,'Bear and Chemistry','https://codeforces.com/problemset/problem/639/F',3,3),(13802,'Bear and Paradox','https://codeforces.com/problemset/problem/639/E',3,3),(13803,'Bear and Contribution','https://codeforces.com/problemset/problem/639/D',2,3),(13804,'Bear and Polynomials','https://codeforces.com/problemset/problem/639/C',2,3),(13805,'Bear and Forgotten Tree 3','https://codeforces.com/problemset/problem/639/B',2,3),(13806,'Bear and Displayed Friends','https://codeforces.com/problemset/problem/639/A',1,3),(13807,'Three-dimensional Turtle Super Computer ','https://codeforces.com/problemset/problem/638/D',2,3),(13808,'Road Improvement','https://codeforces.com/problemset/problem/638/C',2,3),(13809,'Making Genome in Berland','https://codeforces.com/problemset/problem/638/B',1,3),(13810,'Home Numbers','https://codeforces.com/problemset/problem/638/A',1,3),(13811,'Running with Obstacles','https://codeforces.com/problemset/problem/637/D',2,3),(13812,'Promocodes with Mistakes','https://codeforces.com/problemset/problem/637/C',1,3),(13813,'Chat Order','https://codeforces.com/problemset/problem/637/B',1,3),(13814,'Voting for Photos','https://codeforces.com/problemset/problem/637/A',1,3),(13815,'Orchestra','https://codeforces.com/problemset/problem/635/A',1,3),(13816,'Island Puzzle','https://codeforces.com/problemset/problem/634/A',1,3),(13817,'Fibonacci-ish II','https://codeforces.com/problemset/problem/633/H',3,3),(13818,'Yash And Trees','https://codeforces.com/problemset/problem/633/G',3,3),(13819,'The Chocolate Spree','https://codeforces.com/problemset/problem/633/F',3,3),(13820,'Startup Funding','https://codeforces.com/problemset/problem/633/E',2,3),(13821,'Fibonacci-ish','https://codeforces.com/problemset/problem/633/D',2,3),(13822,'Spy Syndrome 2','https://codeforces.com/problemset/problem/633/C',2,3),(13823,'A Trivial Problem','https://codeforces.com/problemset/problem/633/B',1,3),(13824,'Ebony and Ivory','https://codeforces.com/problemset/problem/633/A',1,3),(13825,'Magic Matrix','https://codeforces.com/problemset/problem/632/F',2,3),(13826,'Thief in a Shop','https://codeforces.com/problemset/problem/632/E',2,3),(13827,'Longest Subsequence','https://codeforces.com/problemset/problem/632/D',2,3),(13828,'The Smallest String Concatenation','https://codeforces.com/problemset/problem/632/C',2,3),(13829,'Alice, Bob, Two Teams','https://codeforces.com/problemset/problem/632/B',1,3),(13830,'Grandma Laura and Apples','https://codeforces.com/problemset/problem/632/A',1,3),(13831,'Product Sum','https://codeforces.com/problemset/problem/631/E',3,3),(13832,'Messenger','https://codeforces.com/problemset/problem/631/D',2,3),(13833,'Report','https://codeforces.com/problemset/problem/631/C',2,3),(13834,'Print Check','https://codeforces.com/problemset/problem/631/B',1,3),(13835,'Interview','https://codeforces.com/problemset/problem/631/A',1,3),(13836,'Game','https://codeforces.com/problemset/problem/630/R',1,3),(13837,'Pyramids','https://codeforces.com/problemset/problem/630/Q',2,3),(13838,'Area of a Star','https://codeforces.com/problemset/problem/630/P',2,3),(13839,'Arrow','https://codeforces.com/problemset/problem/630/O',2,3),(13840,'Forecast','https://codeforces.com/problemset/problem/630/N',1,3),(13841,'Turn','https://codeforces.com/problemset/problem/630/M',2,3),(13842,'Cracking the Code','https://codeforces.com/problemset/problem/630/L',1,3),(13843,'Indivisibility','https://codeforces.com/problemset/problem/630/K',1,3),(13844,'Divisibility','https://codeforces.com/problemset/problem/630/J',1,3),(13845,'Parking Lot','https://codeforces.com/problemset/problem/630/I',2,3),(13846,'Benches','https://codeforces.com/problemset/problem/630/H',1,3),(13847,'Challenge Pennants','https://codeforces.com/problemset/problem/630/G',2,3),(13848,'Selection of Personnel','https://codeforces.com/problemset/problem/630/F',1,3),(13849,'A rectangle','https://codeforces.com/problemset/problem/630/E',2,3),(13850,'Hexagons!','https://codeforces.com/problemset/problem/630/D',1,3),(13851,'Lucky Numbers','https://codeforces.com/problemset/problem/630/C',1,3),(13852,'Moore\'s Law','https://codeforces.com/problemset/problem/630/B',1,3),(13853,'Again Twenty Five!','https://codeforces.com/problemset/problem/630/A',1,3),(13854,'Famil Door and Roads','https://codeforces.com/problemset/problem/629/E',2,3),(13855,'Babaei and Birthday Cake','https://codeforces.com/problemset/problem/629/D',2,3),(13856,'Famil Door and Brackets','https://codeforces.com/problemset/problem/629/C',2,3),(13857,'Far Relative’s Problem','https://codeforces.com/problemset/problem/629/B',1,3),(13858,'Far Relative’s Birthday Cake','https://codeforces.com/problemset/problem/629/A',1,3),(13859,'Bear and Fair Set','https://codeforces.com/problemset/problem/628/F',2,3),(13860,'Zbazi in Zeydabad','https://codeforces.com/problemset/problem/628/E',2,3),(13861,'Magic Numbers','https://codeforces.com/problemset/problem/628/D',2,3),(13862,'Bear and String Distance','https://codeforces.com/problemset/problem/628/C',1,3),(13863,'New Skateboard','https://codeforces.com/problemset/problem/628/B',1,3),(13864,'Tennis Tournament','https://codeforces.com/problemset/problem/628/A',1,3),(13865,'Island Puzzle','https://codeforces.com/problemset/problem/627/F',3,3),(13866,'Orchestra','https://codeforces.com/problemset/problem/627/E',3,3),(13867,'Preorder Test','https://codeforces.com/problemset/problem/627/D',3,3),(13868,'Package Delivery','https://codeforces.com/problemset/problem/627/C',2,3),(13869,'Factory Repairs','https://codeforces.com/problemset/problem/627/B',2,3),(13870,'XOR Equation','https://codeforces.com/problemset/problem/627/A',2,3),(13871,'Raffles','https://codeforces.com/problemset/problem/626/G',3,3),(13872,'Group Projects','https://codeforces.com/problemset/problem/626/F',2,3),(13873,'Simple Skewness','https://codeforces.com/problemset/problem/626/E',2,3),(13874,'Jerry\'s Protest','https://codeforces.com/problemset/problem/626/D',2,3),(13875,'Block Towers','https://codeforces.com/problemset/problem/626/C',2,3),(13876,'Cards','https://codeforces.com/problemset/problem/626/B',1,3),(13877,'Robot Sequence','https://codeforces.com/problemset/problem/626/A',1,3),(13878,'Frog Fights','https://codeforces.com/problemset/problem/625/E',3,3),(13879,'Finals in arithmetic','https://codeforces.com/problemset/problem/625/D',2,3),(13880,'K-special Tables','https://codeforces.com/problemset/problem/625/C',1,3),(13881,'War of the Corporations','https://codeforces.com/problemset/problem/625/B',1,3),(13882,'Guest From the Past','https://codeforces.com/problemset/problem/625/A',2,3),(13883,'Making a String','https://codeforces.com/problemset/problem/624/B',1,3),(13884,'Save Luke','https://codeforces.com/problemset/problem/624/A',1,3),(13885,'Transforming Sequence','https://codeforces.com/problemset/problem/623/E',3,3),(13886,'Birthday','https://codeforces.com/problemset/problem/623/D',3,3),(13887,'Electric Charges','https://codeforces.com/problemset/problem/623/C',3,3),(13888,'Array GCD','https://codeforces.com/problemset/problem/623/B',2,3),(13889,'Graph and String','https://codeforces.com/problemset/problem/623/A',2,3),(13890,'The Sum of the k-th Powers','https://codeforces.com/problemset/problem/622/F',3,3),(13891,'Ants in Leaves','https://codeforces.com/problemset/problem/622/E',2,3),(13892,'Optimal Number Permutation','https://codeforces.com/problemset/problem/622/D',2,3),(13893,'Not Equal on a Segment','https://codeforces.com/problemset/problem/622/C',2,3),(13894,'The Time','https://codeforces.com/problemset/problem/622/B',1,3),(13895,'Infinite Sequence','https://codeforces.com/problemset/problem/622/A',1,3),(13896,'Wet Shark and Blocks','https://codeforces.com/problemset/problem/621/E',2,3),(13897,'Rat Kwesh and Cheese','https://codeforces.com/problemset/problem/621/D',2,3),(13898,'Wet Shark and Flowers','https://codeforces.com/problemset/problem/621/C',2,3),(13899,'Wet Shark and Bishops','https://codeforces.com/problemset/problem/621/B',1,3),(13900,'Wet Shark and Odd and Even','https://codeforces.com/problemset/problem/621/A',1,3),(13901,'Xors on Segments','https://codeforces.com/problemset/problem/620/F',3,3),(13902,'New Year Tree','https://codeforces.com/problemset/problem/620/E',2,3),(13903,'Professor GukiZ and Two Arrays','https://codeforces.com/problemset/problem/620/D',2,3),(13904,'Pearls in a Row','https://codeforces.com/problemset/problem/620/C',1,3),(13905,'Grandfather Dovlet’s calculator','https://codeforces.com/problemset/problem/620/B',1,3),(13906,'Professor GukiZ\'s Robot','https://codeforces.com/problemset/problem/620/A',1,3),(13907,'Combining Slimes','https://codeforces.com/problemset/problem/618/G',3,3),(13908,'Double Knapsack','https://codeforces.com/problemset/problem/618/F',3,3),(13909,'Robot Arm','https://codeforces.com/problemset/problem/618/E',2,3),(13910,'Hamiltonian Spanning Tree','https://codeforces.com/problemset/problem/618/D',2,3),(13911,'Constellation','https://codeforces.com/problemset/problem/618/C',2,3),(13912,'Guess the Permutation','https://codeforces.com/problemset/problem/618/B',1,3),(13913,'Slime Combining','https://codeforces.com/problemset/problem/618/A',1,3),(13914,'XOR and Favorite Number','https://codeforces.com/problemset/problem/617/E',2,3),(13915,'Polyline','https://codeforces.com/problemset/problem/617/D',2,3),(13916,'Watering Flowers','https://codeforces.com/problemset/problem/617/C',2,3),(13917,'Chocolate','https://codeforces.com/problemset/problem/617/B',1,3),(13918,'Elephant','https://codeforces.com/problemset/problem/617/A',1,3),(13919,'Expensive Strings','https://codeforces.com/problemset/problem/616/F',3,3),(13920,'Sum of Remainders','https://codeforces.com/problemset/problem/616/E',2,3),(13921,'Longest k-Good Segment','https://codeforces.com/problemset/problem/616/D',2,3),(13922,'The Labyrinth','https://codeforces.com/problemset/problem/616/C',2,3),(13923,'Dinner with Emma','https://codeforces.com/problemset/problem/616/B',1,3),(13924,'Comparing Two Long Integers','https://codeforces.com/problemset/problem/616/A',1,3),(13925,'Hexagons','https://codeforces.com/problemset/problem/615/E',2,3),(13926,'Multipliers','https://codeforces.com/problemset/problem/615/D',2,3),(13927,'Running Track','https://codeforces.com/problemset/problem/615/C',2,3),(13928,'Longtail Hedgehog','https://codeforces.com/problemset/problem/615/B',2,3),(13929,'Bulbs','https://codeforces.com/problemset/problem/615/A',1,3),(13930,'Gena\'s Code','https://codeforces.com/problemset/problem/614/B',1,3),(13931,'Link/Cut Tree','https://codeforces.com/problemset/problem/614/A',1,3),(13932,'Puzzle Lover','https://codeforces.com/problemset/problem/613/E',3,3),(13933,'Kingdom and its Cities','https://codeforces.com/problemset/problem/613/D',3,3),(13934,'Necklace','https://codeforces.com/problemset/problem/613/C',2,3),(13935,'Skills','https://codeforces.com/problemset/problem/613/B',2,3),(13936,'Peter and Snow Blower','https://codeforces.com/problemset/problem/613/A',2,3),(13937,'Simba on the Circle','https://codeforces.com/problemset/problem/612/F',3,3),(13938,'Square Root of Permutation','https://codeforces.com/problemset/problem/612/E',2,3),(13939,'The Union of k-Segments','https://codeforces.com/problemset/problem/612/D',2,3),(13940,'Replace To Make Regular Bracket Sequence','https://codeforces.com/problemset/problem/612/C',1,3),(13941,'HDD is Outdated Technology','https://codeforces.com/problemset/problem/612/B',1,3),(13942,'The Text Splitting','https://codeforces.com/problemset/problem/612/A',1,3),(13943,'New Year  and Forgotten Tree','https://codeforces.com/problemset/problem/611/H',3,3),(13944,'New Year and Cake','https://codeforces.com/problemset/problem/611/G',3,3),(13945,'New Year and Cleaning','https://codeforces.com/problemset/problem/611/F',2,3),(13946,'New Year and Three Musketeers','https://codeforces.com/problemset/problem/611/E',2,3),(13947,'New Year and Ancient Prophecy','https://codeforces.com/problemset/problem/611/D',2,3),(13948,'New Year and Domino','https://codeforces.com/problemset/problem/611/C',1,3),(13949,'New Year and Old Property','https://codeforces.com/problemset/problem/611/B',1,3),(13950,'New Year and Days','https://codeforces.com/problemset/problem/611/A',1,3),(13951,'Alphabet Permutations','https://codeforces.com/problemset/problem/610/E',2,3),(13952,'Vika and Segments','https://codeforces.com/problemset/problem/610/D',2,3),(13953,'Harmony Analysis','https://codeforces.com/problemset/problem/610/C',2,3),(13954,'Vika and Squares','https://codeforces.com/problemset/problem/610/B',1,3),(13955,'Pasha and Stick','https://codeforces.com/problemset/problem/610/A',1,3),(13956,'Frogs and mosquitoes','https://codeforces.com/problemset/problem/609/F',2,3),(13957,'Minimum spanning tree for each edge','https://codeforces.com/problemset/problem/609/E',2,3),(13958,'Gadgets for dollars and pounds','https://codeforces.com/problemset/problem/609/D',2,3),(13959,'Load Balancing','https://codeforces.com/problemset/problem/609/C',1,3),(13960,'The Best Gift','https://codeforces.com/problemset/problem/609/B',1,3),(13961,'USB Flash Drives','https://codeforces.com/problemset/problem/609/A',1,3),(13962,'Hamming Distance Sum','https://codeforces.com/problemset/problem/608/B',1,3),(13963,'Saitama Destroys Hotel','https://codeforces.com/problemset/problem/608/A',1,3),(13964,'Cross Sum','https://codeforces.com/problemset/problem/607/E',3,3),(13965,'Power Tree','https://codeforces.com/problemset/problem/607/D',3,3),(13966,'Marbles','https://codeforces.com/problemset/problem/607/C',2,3),(13967,'Zuma','https://codeforces.com/problemset/problem/607/B',2,3),(13968,'Chain Reaction','https://codeforces.com/problemset/problem/607/A',2,3),(13969,'Testing Robots','https://codeforces.com/problemset/problem/606/B',2,3),(13970,'Magic Spheres','https://codeforces.com/problemset/problem/606/A',1,3),(13971,'Intergalaxy Trips','https://codeforces.com/problemset/problem/605/E',3,3),(13972,'Board Game','https://codeforces.com/problemset/problem/605/D',2,3),(13973,'Freelancer\'s Dreams','https://codeforces.com/problemset/problem/605/C',2,3),(13974,'Lazy Student','https://codeforces.com/problemset/problem/605/B',2,3),(13975,'Sorting Railway Cars','https://codeforces.com/problemset/problem/605/A',2,3),(13976,'More Cowbell','https://codeforces.com/problemset/problem/604/B',1,3),(13977,'Uncowed Forces','https://codeforces.com/problemset/problem/604/A',1,3),(13978,'Pastoral Oddities','https://codeforces.com/problemset/problem/603/E',3,3),(13979,'Ruminations on Ruminants','https://codeforces.com/problemset/problem/603/D',3,3),(13980,'Lieges of Legendre','https://codeforces.com/problemset/problem/603/C',2,3),(13981,'Moodular Arithmetic','https://codeforces.com/problemset/problem/603/B',2,3),(13982,'Alternative Thinking','https://codeforces.com/problemset/problem/603/A',2,3),(13983,'Approximating a Constant Range','https://codeforces.com/problemset/problem/602/B',1,3),(13984,'Two Bases','https://codeforces.com/problemset/problem/602/A',1,3),(13985,'A Museum Robbery','https://codeforces.com/problemset/problem/601/E',3,3),(13986,'Acyclic Organic Compounds','https://codeforces.com/problemset/problem/601/D',2,3),(13987,'Kleofáš and the n-thlon','https://codeforces.com/problemset/problem/601/C',2,3),(13988,'Lipshitz Sequence','https://codeforces.com/problemset/problem/601/B',2,3),(13989,'The Two Routes','https://codeforces.com/problemset/problem/601/A',2,3),(13990,'Edge coloring of bipartite graph','https://codeforces.com/problemset/problem/600/F',3,3),(13991,'Lomsat gelral','https://codeforces.com/problemset/problem/600/E',2,3),(13992,'Area of Two Circles\' Intersection','https://codeforces.com/problemset/problem/600/D',2,3),(13993,'Make Palindrome','https://codeforces.com/problemset/problem/600/C',2,3),(13994,'Queries about less or equal elements','https://codeforces.com/problemset/problem/600/B',1,3),(13995,'Extract Numbers','https://codeforces.com/problemset/problem/600/A',2,3),(13996,'Sandy and Nuts','https://codeforces.com/problemset/problem/599/E',3,3),(13997,'Spongebob and Squares','https://codeforces.com/problemset/problem/599/D',2,3),(13998,'Day at the Beach','https://codeforces.com/problemset/problem/599/C',2,3),(13999,'Spongebob and Joke','https://codeforces.com/problemset/problem/599/B',1,3),(14000,'Patrick and Shopping','https://codeforces.com/problemset/problem/599/A',1,3),(14001,'Cut Length','https://codeforces.com/problemset/problem/598/F',3,3),(14002,'Chocolate Bar','https://codeforces.com/problemset/problem/598/E',2,3),(14003,'Igor In the Museum','https://codeforces.com/problemset/problem/598/D',2,3),(14004,'Nearest vectors','https://codeforces.com/problemset/problem/598/C',2,3),(14005,'Queries on a String','https://codeforces.com/problemset/problem/598/B',1,3),(14006,'Tricky Sum','https://codeforces.com/problemset/problem/598/A',1,3),(14007,'Subsequences','https://codeforces.com/problemset/problem/597/C',2,3),(14008,'Restaurant','https://codeforces.com/problemset/problem/597/B',2,3),(14009,'Divisibility','https://codeforces.com/problemset/problem/597/A',2,3),(14010,'Wilbur and Strings','https://codeforces.com/problemset/problem/596/E',2,3),(14011,'Wilbur and Trees','https://codeforces.com/problemset/problem/596/D',2,3),(14012,'Wilbur and Points','https://codeforces.com/problemset/problem/596/C',2,3),(14013,'Wilbur and Array','https://codeforces.com/problemset/problem/596/B',1,3),(14014,'Wilbur and Swimming Pool','https://codeforces.com/problemset/problem/596/A',1,3),(14015,'Pasha and Phone','https://codeforces.com/problemset/problem/595/B',2,3),(14016,'Vitaly and Night','https://codeforces.com/problemset/problem/595/A',1,3),(14017,'Cutting the Line','https://codeforces.com/problemset/problem/594/E',3,3),(14018,'REQ','https://codeforces.com/problemset/problem/594/D',2,3),(14019,'Edo and Magnets','https://codeforces.com/problemset/problem/594/C',2,3),(14020,'Max and Bike','https://codeforces.com/problemset/problem/594/B',2,3),(14021,'Warrior and Archer','https://codeforces.com/problemset/problem/594/A',2,3),(14022,'Strange Calculation and Cats','https://codeforces.com/problemset/problem/593/E',2,3),(14023,'Happy Tree Party','https://codeforces.com/problemset/problem/593/D',2,3),(14024,'Beautiful Function','https://codeforces.com/problemset/problem/593/C',2,3),(14025,'Anton and Lines','https://codeforces.com/problemset/problem/593/B',2,3),(14026,'2Char','https://codeforces.com/problemset/problem/593/A',1,3),(14027,'BCPC','https://codeforces.com/problemset/problem/592/E',3,3),(14028,'Super M','https://codeforces.com/problemset/problem/592/D',2,3),(14029,'The Big Race','https://codeforces.com/problemset/problem/592/C',2,3),(14030,'The Monster and the Squirrel','https://codeforces.com/problemset/problem/592/B',1,3),(14031,'PawnChess','https://codeforces.com/problemset/problem/592/A',1,3),(14032,'Rebranding','https://codeforces.com/problemset/problem/591/B',1,3),(14033,'Wizards\' Duel','https://codeforces.com/problemset/problem/591/A',1,3),(14034,'Birthday','https://codeforces.com/problemset/problem/590/E',3,3),(14035,'Top Secret Task','https://codeforces.com/problemset/problem/590/D',2,3),(14036,'Three States','https://codeforces.com/problemset/problem/590/C',2,3),(14037,'Chip \'n Dale Rescue Rangers','https://codeforces.com/problemset/problem/590/B',2,3),(14038,'Median Smoothing','https://codeforces.com/problemset/problem/590/A',2,3),(14039,'Duff in Love','https://codeforces.com/problemset/problem/588/B',1,3),(14040,'Duff and Meat','https://codeforces.com/problemset/problem/588/A',1,3),(14041,'Duff is Mad','https://codeforces.com/problemset/problem/587/F',3,3),(14042,'Duff as a Queen','https://codeforces.com/problemset/problem/587/E',3,3),(14043,'Duff in Mafia','https://codeforces.com/problemset/problem/587/D',3,3),(14044,'Duff in the Army','https://codeforces.com/problemset/problem/587/C',2,3),(14045,'Duff in Beach','https://codeforces.com/problemset/problem/587/B',2,3),(14046,'Duff and Weight Lifting','https://codeforces.com/problemset/problem/587/A',1,3),(14047,'Laurenty and Shop','https://codeforces.com/problemset/problem/586/B',1,3),(14048,'Alena\'s Schedule','https://codeforces.com/problemset/problem/586/A',1,3),(14049,'Digits of Number Pi','https://codeforces.com/problemset/problem/585/F',3,3),(14050,'Present for Vitalik the Philatelist ','https://codeforces.com/problemset/problem/585/E',3,3),(14051,'Lizard Era: Beginning','https://codeforces.com/problemset/problem/585/D',2,3),(14052,'Alice, Bob, Oranges and Apples','https://codeforces.com/problemset/problem/585/C',2,3),(14053,'Phillip and Trains','https://codeforces.com/problemset/problem/585/B',2,3),(14054,'Gennady the Dentist','https://codeforces.com/problemset/problem/585/A',2,3),(14055,'Anton and Ira','https://codeforces.com/problemset/problem/584/E',2,3),(14056,'Dima and Lisa','https://codeforces.com/problemset/problem/584/D',2,3),(14057,'Marina and Vasya','https://codeforces.com/problemset/problem/584/C',2,3),(14058,'Kolya and Tanya ','https://codeforces.com/problemset/problem/584/B',1,3),(14059,'Olesya and Rodion','https://codeforces.com/problemset/problem/584/A',1,3),(14060,'Robot\'s Task','https://codeforces.com/problemset/problem/583/B',1,3),(14061,'Asphalting Roads','https://codeforces.com/problemset/problem/583/A',1,3),(14062,'Boolean Function','https://codeforces.com/problemset/problem/582/E',3,3),(14063,'Number of Binominal Coefficients','https://codeforces.com/problemset/problem/582/D',3,3),(14064,'Superior Periodic Subarrays','https://codeforces.com/problemset/problem/582/C',2,3),(14065,'Once Again...','https://codeforces.com/problemset/problem/582/B',2,3),(14066,'GCD Table','https://codeforces.com/problemset/problem/582/A',2,3),(14067,'Zublicanes and Mumocrates','https://codeforces.com/problemset/problem/581/F',2,3),(14068,'Kojiro and Furrari','https://codeforces.com/problemset/problem/581/E',3,3),(14069,'Three Logos','https://codeforces.com/problemset/problem/581/D',2,3),(14070,'Developing Skills','https://codeforces.com/problemset/problem/581/C',1,3),(14071,'Luxurious Houses','https://codeforces.com/problemset/problem/581/B',1,3),(14072,'Vasya the Hipster','https://codeforces.com/problemset/problem/581/A',1,3),(14073,'Kefa and Watch','https://codeforces.com/problemset/problem/580/E',2,3),(14074,'Kefa and Dishes','https://codeforces.com/problemset/problem/580/D',2,3),(14075,'Kefa and Park','https://codeforces.com/problemset/problem/580/C',1,3),(14076,'Kefa and Company','https://codeforces.com/problemset/problem/580/B',1,3),(14077,'Kefa and First Steps','https://codeforces.com/problemset/problem/580/A',1,3),(14078,'Finding Team Member','https://codeforces.com/problemset/problem/579/B',1,3),(14079,'Raising Bacteria','https://codeforces.com/problemset/problem/579/A',1,3),(14080,'Mirror Box','https://codeforces.com/problemset/problem/578/F',3,3),(14081,'Walking!','https://codeforces.com/problemset/problem/578/E',3,3),(14082,'LCS Again','https://codeforces.com/problemset/problem/578/D',3,3),(14083,'Weakness and Poorness','https://codeforces.com/problemset/problem/578/C',2,3),(14084,'\"Or\" Game','https://codeforces.com/problemset/problem/578/B',2,3),(14085,'A Problem about Polyline','https://codeforces.com/problemset/problem/578/A',2,3),(14086,'Modulo Sum','https://codeforces.com/problemset/problem/577/B',2,3),(14087,'Multiplication Table','https://codeforces.com/problemset/problem/577/A',1,3),(14088,'Painting Edges','https://codeforces.com/problemset/problem/576/E',3,3),(14089,'Flights for Regular Customers','https://codeforces.com/problemset/problem/576/D',3,3),(14090,'Points on Plane','https://codeforces.com/problemset/problem/576/C',2,3),(14091,'Invariance of Tree','https://codeforces.com/problemset/problem/576/B',2,3),(14092,'Vasya and Petya\'s Game','https://codeforces.com/problemset/problem/576/A',1,3),(14093,'Robots protection','https://codeforces.com/problemset/problem/575/I',3,3),(14094,'Bots','https://codeforces.com/problemset/problem/575/H',2,3),(14095,'Run for beer','https://codeforces.com/problemset/problem/575/G',2,3),(14096,'Bulbo','https://codeforces.com/problemset/problem/575/F',2,3),(14097,'Spectator Riots','https://codeforces.com/problemset/problem/575/E',3,3),(14098,'Tablecity','https://codeforces.com/problemset/problem/575/D',2,3),(14099,'Party','https://codeforces.com/problemset/problem/575/C',3,3),(14100,'Bribes','https://codeforces.com/problemset/problem/575/B',2,3),(14101,'Fibonotci','https://codeforces.com/problemset/problem/575/A',3,3),(14102,'Bear and Three Musketeers','https://codeforces.com/problemset/problem/574/B',1,3),(14103,'Bear and Elections','https://codeforces.com/problemset/problem/574/A',1,3),(14104,'Bear and Bowling','https://codeforces.com/problemset/problem/573/E',3,3),(14105,'Bear and Cavalry','https://codeforces.com/problemset/problem/573/D',3,3),(14106,'Bear and Drawing','https://codeforces.com/problemset/problem/573/C',2,3),(14107,'Bear and Blocks','https://codeforces.com/problemset/problem/573/B',2,3),(14108,'Bear and Poker','https://codeforces.com/problemset/problem/573/A',1,3),(14109,'Order Book','https://codeforces.com/problemset/problem/572/B',1,3),(14110,'Arrays','https://codeforces.com/problemset/problem/572/A',1,3),(14111,'Geometric Progressions','https://codeforces.com/problemset/problem/571/E',3,3),(14112,'Campus','https://codeforces.com/problemset/problem/571/D',3,3),(14113,'CNF 2','https://codeforces.com/problemset/problem/571/C',2,3),(14114,'Minimization','https://codeforces.com/problemset/problem/571/B',2,3),(14115,'Lengthening Sticks','https://codeforces.com/problemset/problem/571/A',2,3),(14116,'Pig and Palindromes','https://codeforces.com/problemset/problem/570/E',2,3),(14117,'Tree Requests','https://codeforces.com/problemset/problem/570/D',2,3),(14118,'Replacement','https://codeforces.com/problemset/problem/570/C',2,3),(14119,'Simple Game','https://codeforces.com/problemset/problem/570/B',1,3),(14120,'Elections','https://codeforces.com/problemset/problem/570/A',1,3),(14121,'Inventory','https://codeforces.com/problemset/problem/569/B',1,3),(14122,'Music','https://codeforces.com/problemset/problem/569/A',1,3),(14123,'Longest Increasing Subsequence','https://codeforces.com/problemset/problem/568/E',3,3),(14124,'Sign Posts','https://codeforces.com/problemset/problem/568/D',3,3),(14125,'New Language','https://codeforces.com/problemset/problem/568/C',3,3),(14126,'Symmetric and Transitive','https://codeforces.com/problemset/problem/568/B',2,3),(14127,'Primes or Palindromes?','https://codeforces.com/problemset/problem/568/A',2,3),(14128,'Mausoleum','https://codeforces.com/problemset/problem/567/F',2,3),(14129,'President and Roads','https://codeforces.com/problemset/problem/567/E',2,3),(14130,'One-Dimensional Battle Ships','https://codeforces.com/problemset/problem/567/D',2,3),(14131,'Geometric Progression','https://codeforces.com/problemset/problem/567/C',2,3),(14132,'Berland National Library','https://codeforces.com/problemset/problem/567/B',1,3),(14133,'Lineland Mail','https://codeforces.com/problemset/problem/567/A',1,3),(14134,'Max and Min','https://codeforces.com/problemset/problem/566/G',2,3),(14135,'Clique in the Divisibility Graph','https://codeforces.com/problemset/problem/566/F',1,3),(14136,'Restoring Map','https://codeforces.com/problemset/problem/566/E',3,3),(14137,'Restructuring Company','https://codeforces.com/problemset/problem/566/D',2,3),(14138,'Logistical Questions','https://codeforces.com/problemset/problem/566/C',3,3),(14139,'Replicating Processes','https://codeforces.com/problemset/problem/566/B',3,3),(14140,'Matching Names','https://codeforces.com/problemset/problem/566/A',2,3),(14141,'Gerald is into Art','https://codeforces.com/problemset/problem/560/B',1,3),(14142,'Currency System in Geraldion','https://codeforces.com/problemset/problem/560/A',1,3),(14143,'Gerald and Path','https://codeforces.com/problemset/problem/559/E',3,3),(14144,'Randomizer','https://codeforces.com/problemset/problem/559/D',3,3),(14145,'Gerald and Giant Chess','https://codeforces.com/problemset/problem/559/C',2,3),(14146,'Equivalent Strings','https://codeforces.com/problemset/problem/559/B',2,3),(14147,'Gerald\'s Hexagon','https://codeforces.com/problemset/problem/559/A',2,3),(14148,'A Simple Task','https://codeforces.com/problemset/problem/558/E',2,3),(14149,'Guess Your Way Out! II','https://codeforces.com/problemset/problem/558/D',2,3),(14150,'Amr and Chemistry','https://codeforces.com/problemset/problem/558/C',2,3),(14151,'Amr and The Large Array','https://codeforces.com/problemset/problem/558/B',1,3),(14152,'Lala Land and Apple Trees','https://codeforces.com/problemset/problem/558/A',1,3),(14153,'Ann and Half-Palindrome','https://codeforces.com/problemset/problem/557/E',2,3),(14154,'Vitaly and Cycle','https://codeforces.com/problemset/problem/557/D',2,3),(14155,'Arthur and Table','https://codeforces.com/problemset/problem/557/C',2,3),(14156,'Pasha and Tea','https://codeforces.com/problemset/problem/557/B',1,3),(14157,'Ilya and Diplomas','https://codeforces.com/problemset/problem/557/A',1,3),(14158,'Case of Fake Numbers','https://codeforces.com/problemset/problem/556/B',1,3),(14159,'Case of the Zeros and Ones','https://codeforces.com/problemset/problem/556/A',1,3),(14160,'Case of Computer Network','https://codeforces.com/problemset/problem/555/E',3,3),(14161,'Case of a Top Secret','https://codeforces.com/problemset/problem/555/D',2,3),(14162,'Case of Chocolate','https://codeforces.com/problemset/problem/555/C',2,3),(14163,'Case of Fugitive','https://codeforces.com/problemset/problem/555/B',2,3),(14164,'Case of Matryoshkas','https://codeforces.com/problemset/problem/555/A',1,3),(14165,'Ohana Cleans Up','https://codeforces.com/problemset/problem/554/B',1,3),(14166,'Kyoya and Photobooks','https://codeforces.com/problemset/problem/554/A',1,3),(14167,'Kyoya and Train','https://codeforces.com/problemset/problem/553/E',3,3),(14168,'Nudist Beach','https://codeforces.com/problemset/problem/553/D',2,3),(14169,'Love Triangles','https://codeforces.com/problemset/problem/553/C',2,3),(14170,'Kyoya and Permutation','https://codeforces.com/problemset/problem/553/B',2,3),(14171,'Kyoya and Colored Balls','https://codeforces.com/problemset/problem/553/A',1,3),(14172,'Vanya and Brackets','https://codeforces.com/problemset/problem/552/E',2,3),(14173,'Vanya and Triangles','https://codeforces.com/problemset/problem/552/D',2,3),(14174,'Vanya and Scales','https://codeforces.com/problemset/problem/552/C',2,3),(14175,'Vanya and Books','https://codeforces.com/problemset/problem/552/B',1,3),(14176,'Vanya and Table','https://codeforces.com/problemset/problem/552/A',1,3),(14177,'GukiZ and GukiZiana','https://codeforces.com/problemset/problem/551/E',2,3),(14178,'GukiZ and Binary Operations','https://codeforces.com/problemset/problem/551/D',2,3),(14179,'GukiZ hates Boxes','https://codeforces.com/problemset/problem/551/C',2,3),(14180,'ZgukistringZ','https://codeforces.com/problemset/problem/551/B',2,3),(14181,'GukiZ and Contest','https://codeforces.com/problemset/problem/551/A',1,3),(14182,'Brackets in Implications','https://codeforces.com/problemset/problem/550/E',2,3),(14183,'Regular Bridge','https://codeforces.com/problemset/problem/550/D',2,3),(14184,'Divisibility by Eight','https://codeforces.com/problemset/problem/550/C',1,3),(14185,'Preparing Olympiad','https://codeforces.com/problemset/problem/550/B',1,3),(14186,'Two Substrings','https://codeforces.com/problemset/problem/550/A',1,3),(14187,'Degenerate Matrix','https://codeforces.com/problemset/problem/549/H',2,3),(14188,'Happy Line','https://codeforces.com/problemset/problem/549/G',2,3),(14189,'Yura and Developers','https://codeforces.com/problemset/problem/549/F',3,3),(14190,'Sasha Circle','https://codeforces.com/problemset/problem/549/E',3,3),(14191,'Haar Features','https://codeforces.com/problemset/problem/549/D',2,3),(14192,'The Game Of Parity','https://codeforces.com/problemset/problem/549/C',2,3),(14193,'Looksery Party','https://codeforces.com/problemset/problem/549/B',2,3),(14194,'Face Detection','https://codeforces.com/problemset/problem/549/A',1,3),(14195,'Mike and Fun','https://codeforces.com/problemset/problem/548/B',1,3),(14196,'Mike and Fax','https://codeforces.com/problemset/problem/548/A',1,3),(14197,'Mike and Friends','https://codeforces.com/problemset/problem/547/E',3,3),(14198,'Mike and Fish','https://codeforces.com/problemset/problem/547/D',3,3),(14199,'Mike and Foam','https://codeforces.com/problemset/problem/547/C',2,3),(14200,'Mike and Feet','https://codeforces.com/problemset/problem/547/B',2,3),(14201,'Mike and Frog','https://codeforces.com/problemset/problem/547/A',2,3),(14202,'Soldier and Traveling','https://codeforces.com/problemset/problem/546/E',2,3),(14203,'Soldier and Number Game','https://codeforces.com/problemset/problem/546/D',2,3),(14204,'Soldier and Cards','https://codeforces.com/problemset/problem/546/C',1,3),(14205,'Soldier and Badges','https://codeforces.com/problemset/problem/546/B',1,3),(14206,'Soldier and Bananas','https://codeforces.com/problemset/problem/546/A',1,3),(14207,'Paths and Trees','https://codeforces.com/problemset/problem/545/E',2,3),(14208,'Queue','https://codeforces.com/problemset/problem/545/D',1,3),(14209,'Woodcutters','https://codeforces.com/problemset/problem/545/C',1,3),(14210,'Equidistant String','https://codeforces.com/problemset/problem/545/B',1,3),(14211,'Toy Cars','https://codeforces.com/problemset/problem/545/A',1,3),(14212,'Sea and Islands','https://codeforces.com/problemset/problem/544/B',1,3),(14213,'Set of Strings','https://codeforces.com/problemset/problem/544/A',1,3),(14214,'Listening to Music','https://codeforces.com/problemset/problem/543/E',3,3),(14215,'Road Improvement','https://codeforces.com/problemset/problem/543/D',2,3),(14216,'Remembering Strings','https://codeforces.com/problemset/problem/543/C',2,3),(14217,'Destroying Roads','https://codeforces.com/problemset/problem/543/B',2,3),(14218,'Writing Code','https://codeforces.com/problemset/problem/543/A',2,3),(14219,'Quest','https://codeforces.com/problemset/problem/542/F',2,3),(14220,'Playing on Graph','https://codeforces.com/problemset/problem/542/E',3,3),(14221,'Superhero\'s Job','https://codeforces.com/problemset/problem/542/D',3,3),(14222,'Idempotent functions','https://codeforces.com/problemset/problem/542/C',2,3),(14223,'Duck Hunt','https://codeforces.com/problemset/problem/542/B',3,3),(14224,'Place Your Ad Here','https://codeforces.com/problemset/problem/542/A',2,3),(14225,'Infinite Inversions','https://codeforces.com/problemset/problem/540/E',2,3),(14226,'Bad Luck Island','https://codeforces.com/problemset/problem/540/D',2,3),(14227,'Ice Cave','https://codeforces.com/problemset/problem/540/C',2,3),(14228,'School Marks','https://codeforces.com/problemset/problem/540/B',2,3),(14229,'Combination Lock','https://codeforces.com/problemset/problem/540/A',1,3),(14230,'Summer Dichotomy','https://codeforces.com/problemset/problem/538/H',3,3),(14231,'Berserk Robot ','https://codeforces.com/problemset/problem/538/G',3,3),(14232,'A Heap of Heaps','https://codeforces.com/problemset/problem/538/F',2,3),(14233,'Demiurges Play Again','https://codeforces.com/problemset/problem/538/E',2,3),(14234,'Weird Chess','https://codeforces.com/problemset/problem/538/D',2,3),(14235,'Tourist\'s Notes','https://codeforces.com/problemset/problem/538/C',2,3),(14236,'Quasi Binary','https://codeforces.com/problemset/problem/538/B',1,3),(14237,'Cutting Banner','https://codeforces.com/problemset/problem/538/A',1,3),(14238,'Tavas on the Path','https://codeforces.com/problemset/problem/536/E',3,3),(14239,'Tavas in Kansas','https://codeforces.com/problemset/problem/536/D',3,3),(14240,'Tavas and Pashmaks','https://codeforces.com/problemset/problem/535/E',3,3),(14241,'Tavas and Malekas','https://codeforces.com/problemset/problem/535/D',2,3),(14242,'Tavas and Karafs','https://codeforces.com/problemset/problem/535/C',2,3),(14243,'Tavas and SaDDas','https://codeforces.com/problemset/problem/535/B',1,3),(14244,'Tavas and Nafas','https://codeforces.com/problemset/problem/535/A',1,3),(14245,'Simplified Nonogram','https://codeforces.com/problemset/problem/534/F',2,3),(14246,'Berland Local Positioning System','https://codeforces.com/problemset/problem/534/E',2,3),(14247,'Handshakes','https://codeforces.com/problemset/problem/534/D',2,3),(14248,'Polycarpus\' Dice','https://codeforces.com/problemset/problem/534/C',2,3),(14249,'Covered Path','https://codeforces.com/problemset/problem/534/B',1,3),(14250,'Exam','https://codeforces.com/problemset/problem/534/A',1,3),(14251,'Encoding','https://codeforces.com/problemset/problem/533/F',2,3),(14252,'Correcting Mistakes','https://codeforces.com/problemset/problem/533/E',2,3),(14253,'Landmarks','https://codeforces.com/problemset/problem/533/D',3,3),(14254,'Board Game','https://codeforces.com/problemset/problem/533/C',2,3),(14255,'Work Group','https://codeforces.com/problemset/problem/533/B',2,3),(14256,'Berland Miners','https://codeforces.com/problemset/problem/533/A',3,3),(14257,'Different variables','https://codeforces.com/problemset/problem/530/I',2,3),(14258,'Points in triangle','https://codeforces.com/problemset/problem/530/H',2,3),(14259,'Levenshtein distance','https://codeforces.com/problemset/problem/530/G',2,3),(14260,'Jumping frogs','https://codeforces.com/problemset/problem/530/F',2,3),(14261,'Sum and product','https://codeforces.com/problemset/problem/530/E',2,3),(14262,'Set subtraction','https://codeforces.com/problemset/problem/530/D',2,3),(14263,'Diophantine equation','https://codeforces.com/problemset/problem/530/C',1,3),(14264,'String inside out','https://codeforces.com/problemset/problem/530/B',2,3),(14265,'Quadratic equation','https://codeforces.com/problemset/problem/530/A',1,3),(14266,'Group Photo 2 (online mirror version)','https://codeforces.com/problemset/problem/529/B',2,3),(14267,'Triangles 3000','https://codeforces.com/problemset/problem/528/E',3,3),(14268,'Fuzzy Search','https://codeforces.com/problemset/problem/528/D',2,3),(14269,'Data Center Drama','https://codeforces.com/problemset/problem/527/E',3,3),(14270,'Clique Problem','https://codeforces.com/problemset/problem/527/D',2,3),(14271,'Glass Carving','https://codeforces.com/problemset/problem/527/C',1,3),(14272,'Error Correct System','https://codeforces.com/problemset/problem/527/B',1,3),(14273,'Playing with Paper','https://codeforces.com/problemset/problem/527/A',1,3),(14274,'Spiders Evil Plan','https://codeforces.com/problemset/problem/526/G',3,3),(14275,'Pudding Monsters','https://codeforces.com/problemset/problem/526/F',3,3),(14276,'Transmitting Levels','https://codeforces.com/problemset/problem/526/E',2,3),(14277,'Om Nom and Necklace','https://codeforces.com/problemset/problem/526/D',2,3),(14278,'Om Nom and Candies','https://codeforces.com/problemset/problem/526/C',2,3),(14279,'Om Nom and Dark Park','https://codeforces.com/problemset/problem/526/B',1,3),(14280,'King of Thieves','https://codeforces.com/problemset/problem/526/A',1,3),(14281,'Anya and Cubes','https://codeforces.com/problemset/problem/525/E',2,3),(14282,'Arthur and Walls','https://codeforces.com/problemset/problem/525/D',2,3),(14283,'Ilya and Sticks','https://codeforces.com/problemset/problem/525/C',2,3),(14284,'Pasha and String','https://codeforces.com/problemset/problem/525/B',1,3),(14285,'Vitaliy and Pie','https://codeforces.com/problemset/problem/525/A',1,3),(14286,'And Yet Another Bracket Sequence','https://codeforces.com/problemset/problem/524/F',3,3),(14287,'Rooks and Rectangles','https://codeforces.com/problemset/problem/524/E',2,3),(14288,'Social Network','https://codeforces.com/problemset/problem/524/D',2,3),(14289,'The Art of Dealing with ATM','https://codeforces.com/problemset/problem/524/C',2,3),(14290,'Фото на память - 2 (round version)','https://codeforces.com/problemset/problem/524/B',2,3),(14291,'Возможно, вы знаете этих людей?','https://codeforces.com/problemset/problem/524/A',2,3),(14292,'Statistics of Recompressing Videos','https://codeforces.com/problemset/problem/523/D',2,3),(14293,'Name Quest','https://codeforces.com/problemset/problem/523/C',1,3),(14294,'Mean Requests','https://codeforces.com/problemset/problem/523/B',1,3),(14295,'Rotate, Flip and Zoom','https://codeforces.com/problemset/problem/523/A',1,3),(14296,'Closest Equals','https://codeforces.com/problemset/problem/522/D',2,3),(14297,'Chicken or Fish?','https://codeforces.com/problemset/problem/522/C',2,3),(14298,'Photo to Remember','https://codeforces.com/problemset/problem/522/B',1,3),(14299,'Reposts','https://codeforces.com/problemset/problem/522/A',1,3),(14300,'Cycling City','https://codeforces.com/problemset/problem/521/E',3,3),(14301,'Shop','https://codeforces.com/problemset/problem/521/D',3,3),(14302,'Pluses everywhere','https://codeforces.com/problemset/problem/520/E',2,3),(14303,'Cubes','https://codeforces.com/problemset/problem/520/D',2,3),(14304,'DNA Alignment','https://codeforces.com/problemset/problem/520/C',1,3),(14305,'Two Buttons','https://codeforces.com/problemset/problem/520/B',1,3),(14306,'Pangram','https://codeforces.com/problemset/problem/520/A',1,3),(14307,'A and B and Lecture Rooms','https://codeforces.com/problemset/problem/519/E',2,3),(14308,'A and B and Interesting Substrings','https://codeforces.com/problemset/problem/519/D',2,3),(14309,'A and B and Team Training','https://codeforces.com/problemset/problem/519/C',1,3),(14310,'A and B and Compilation Errors','https://codeforces.com/problemset/problem/519/B',1,3),(14311,'A and B and Chess','https://codeforces.com/problemset/problem/519/A',1,3),(14312,'Pasha and Pipe','https://codeforces.com/problemset/problem/518/F',2,3),(14313,'Arthur and Questions','https://codeforces.com/problemset/problem/518/E',2,3),(14314,'Ilya and Escalator','https://codeforces.com/problemset/problem/518/D',2,3),(14315,'Anya and Smartphone','https://codeforces.com/problemset/problem/518/C',2,3),(14316,'Tanya and Postcard','https://codeforces.com/problemset/problem/518/B',1,3),(14317,'Vitaly and Strings','https://codeforces.com/problemset/problem/518/A',2,3),(14318,'Drazil and His Happy Friends','https://codeforces.com/problemset/problem/516/E',3,3),(14319,'Drazil and Morning Exercise','https://codeforces.com/problemset/problem/516/D',3,3),(14320,'Drazil and Park','https://codeforces.com/problemset/problem/515/E',2,3),(14321,'Drazil and Tiles','https://codeforces.com/problemset/problem/515/D',2,3),(14322,'Drazil and Factorial','https://codeforces.com/problemset/problem/515/C',1,3),(14323,'Drazil and His Happy Friends','https://codeforces.com/problemset/problem/515/B',1,3),(14324,'Drazil and Date','https://codeforces.com/problemset/problem/515/A',1,3),(14325,'Darth Vader and Tree','https://codeforces.com/problemset/problem/514/E',2,3),(14326,'R2D2 and Droid Army','https://codeforces.com/problemset/problem/514/D',2,3),(14327,'Watto and Mechanism','https://codeforces.com/problemset/problem/514/C',2,3),(14328,'Han Solo and Lazer Gun','https://codeforces.com/problemset/problem/514/B',1,3),(14329,'Chewbaсca and Number','https://codeforces.com/problemset/problem/514/A',1,3),(14330,'Inversions problem','https://codeforces.com/problemset/problem/513/G3',3,3),(14331,'Inversions problem','https://codeforces.com/problemset/problem/513/G2',2,3),(14332,'Inversions problem','https://codeforces.com/problemset/problem/513/G1',2,3),(14333,'Scaygerboss','https://codeforces.com/problemset/problem/513/F2',3,3),(14334,'Scaygerboss','https://codeforces.com/problemset/problem/513/F1',3,3),(14335,'Subarray Cuts','https://codeforces.com/problemset/problem/513/E2',3,3),(14336,'Subarray Cuts','https://codeforces.com/problemset/problem/513/E1',3,3),(14337,'Constrained Tree','https://codeforces.com/problemset/problem/513/D2',3,3),(14338,'Constrained Tree','https://codeforces.com/problemset/problem/513/D1',2,3),(14339,'Second price auction','https://codeforces.com/problemset/problem/513/C',2,3),(14340,'Permutations','https://codeforces.com/problemset/problem/513/B2',2,3),(14341,'Permutations','https://codeforces.com/problemset/problem/513/B1',1,3),(14342,'Game','https://codeforces.com/problemset/problem/513/A',1,3),(14343,'Fox And Polygon','https://codeforces.com/problemset/problem/512/E',3,3),(14344,'Fox And Travelling','https://codeforces.com/problemset/problem/512/D',3,3),(14345,'Fox And Dinner','https://codeforces.com/problemset/problem/510/E',2,3),(14346,'Fox And Jumping','https://codeforces.com/problemset/problem/510/D',2,3),(14347,'Fox And Names','https://codeforces.com/problemset/problem/510/C',2,3),(14348,'Fox And Two Dots','https://codeforces.com/problemset/problem/510/B',1,3),(14349,'Fox And Snake','https://codeforces.com/problemset/problem/510/A',1,3),(14350,'Progress Monitoring','https://codeforces.com/problemset/problem/509/F',2,3),(14351,'Pretty Song','https://codeforces.com/problemset/problem/509/E',2,3),(14352,'Restoring Numbers','https://codeforces.com/problemset/problem/509/D',2,3),(14353,'Sums of Digits','https://codeforces.com/problemset/problem/509/C',2,3),(14354,'Painting Pebbles','https://codeforces.com/problemset/problem/509/B',1,3),(14355,'Maximum in Table','https://codeforces.com/problemset/problem/509/A',1,3),(14356,'Arthur and Brackets','https://codeforces.com/problemset/problem/508/E',2,3),(14357,'Tanya and Password','https://codeforces.com/problemset/problem/508/D',2,3),(14358,'Anya and Ghosts','https://codeforces.com/problemset/problem/508/C',2,3),(14359,'Anton and currency you all know','https://codeforces.com/problemset/problem/508/B',1,3),(14360,'Pasha and Pixels','https://codeforces.com/problemset/problem/508/A',1,3),(14361,'Breaking Good','https://codeforces.com/problemset/problem/507/E',2,3),(14362,'The Maths Lecture','https://codeforces.com/problemset/problem/507/D',2,3),(14363,'Guess Your Way Out!','https://codeforces.com/problemset/problem/507/C',2,3),(14364,'Amr and Pins','https://codeforces.com/problemset/problem/507/B',1,3),(14365,'Amr and Music','https://codeforces.com/problemset/problem/507/A',1,3),(14366,'Mr. Kitayuta\'s Gift','https://codeforces.com/problemset/problem/506/E',3,3),(14367,'Mr. Kitayuta\'s Colorful Graph','https://codeforces.com/problemset/problem/506/D',2,3),(14368,'Mr. Kitayuta vs. Bamboos','https://codeforces.com/problemset/problem/505/E',3,3),(14369,'Mr. Kitayuta\'s Technology','https://codeforces.com/problemset/problem/505/D',2,3),(14370,'Mr. Kitayuta, the Treasure Hunter','https://codeforces.com/problemset/problem/505/C',2,3),(14371,'Mr. Kitayuta\'s Colorful Graph','https://codeforces.com/problemset/problem/505/B',1,3),(14372,'Mr. Kitayuta\'s Gift','https://codeforces.com/problemset/problem/505/A',1,3),(14373,'Misha and LCP on Tree','https://codeforces.com/problemset/problem/504/E',3,3),(14374,'Misha and XOR','https://codeforces.com/problemset/problem/504/D',3,3),(14375,'Misha and Palindrome Degree','https://codeforces.com/problemset/problem/501/E',2,3),(14376,'Misha and Permutations Summation','https://codeforces.com/problemset/problem/501/D',2,3),(14377,'Misha and Forest','https://codeforces.com/problemset/problem/501/C',1,3),(14378,'Misha and Changing Handles','https://codeforces.com/problemset/problem/501/B',1,3),(14379,'Contest','https://codeforces.com/problemset/problem/501/A',1,3),(14380,'New Year Running','https://codeforces.com/problemset/problem/500/G',3,3),(14381,'New Year Shopping','https://codeforces.com/problemset/problem/500/F',3,3),(14382,'New Year Domino','https://codeforces.com/problemset/problem/500/E',2,3),(14383,'New Year Santa Network','https://codeforces.com/problemset/problem/500/D',2,3),(14384,'New Year Book Reading','https://codeforces.com/problemset/problem/500/C',2,3),(14385,'New Year Permutation','https://codeforces.com/problemset/problem/500/B',2,3),(14386,'New Year Transportation','https://codeforces.com/problemset/problem/500/A',1,3),(14387,'Lecture','https://codeforces.com/problemset/problem/499/B',1,3),(14388,'Watching a movie','https://codeforces.com/problemset/problem/499/A',1,3),(14389,'Stairs and Lines','https://codeforces.com/problemset/problem/498/E',3,3),(14390,'Traffic Jams in the Land','https://codeforces.com/problemset/problem/498/D',2,3),(14391,'Array and Operations','https://codeforces.com/problemset/problem/498/C',2,3),(14392,'Name That Tune','https://codeforces.com/problemset/problem/498/B',2,3),(14393,'Crazy Town','https://codeforces.com/problemset/problem/498/A',2,3),(14394,'Subsequences Return','https://codeforces.com/problemset/problem/497/E',3,3),(14395,'Gears','https://codeforces.com/problemset/problem/497/D',3,3),(14396,'Distributing Parts ','https://codeforces.com/problemset/problem/496/E',2,3),(14397,'Tennis Game','https://codeforces.com/problemset/problem/496/D',2,3),(14398,'Removing Columns','https://codeforces.com/problemset/problem/496/C',1,3),(14399,'Secret Combination','https://codeforces.com/problemset/problem/496/B',1,3),(14400,'Minimum Difficulty','https://codeforces.com/problemset/problem/496/A',1,3),(14401,'Modular Equations','https://codeforces.com/problemset/problem/495/B',2,3),(14402,'Digital Counter','https://codeforces.com/problemset/problem/495/A',1,3),(14403,'Sharti','https://codeforces.com/problemset/problem/494/E',3,3),(14404,'Birthday','https://codeforces.com/problemset/problem/494/D',3,3),(14405,'Helping People','https://codeforces.com/problemset/problem/494/C',3,3),(14406,'Obsessive String','https://codeforces.com/problemset/problem/494/B',2,3),(14407,'Treasure','https://codeforces.com/problemset/problem/494/A',1,3),(14408,'Vasya and Polynomial','https://codeforces.com/problemset/problem/493/E',3,3),(14409,'Vasya and Chess','https://codeforces.com/problemset/problem/493/D',2,3),(14410,'Vasya and Basketball','https://codeforces.com/problemset/problem/493/C',2,3),(14411,'Vasya and Wrestling','https://codeforces.com/problemset/problem/493/B',1,3),(14412,'Vasya and Football','https://codeforces.com/problemset/problem/493/A',1,3),(14413,'Vanya and Field','https://codeforces.com/problemset/problem/492/E',2,3),(14414,'Vanya and Computer Game','https://codeforces.com/problemset/problem/492/D',2,3),(14415,'Vanya and Exams','https://codeforces.com/problemset/problem/492/C',1,3),(14416,'Vanya and Lanterns','https://codeforces.com/problemset/problem/492/B',1,3),(14417,'Vanya and Cubes','https://codeforces.com/problemset/problem/492/A',1,3),(14418,'Deciphering','https://codeforces.com/problemset/problem/491/C',2,3),(14419,'New York Hotel','https://codeforces.com/problemset/problem/491/B',2,3),(14420,'Up the hill','https://codeforces.com/problemset/problem/491/A',1,3),(14421,'Treeland Tour','https://codeforces.com/problemset/problem/490/F',2,3),(14422,'Restoring Increasing Sequence','https://codeforces.com/problemset/problem/490/E',2,3),(14423,'Chocolate','https://codeforces.com/problemset/problem/490/D',2,3),(14424,'Hacking Cypher','https://codeforces.com/problemset/problem/490/C',2,3),(14425,'Queue','https://codeforces.com/problemset/problem/490/B',1,3),(14426,'Team Olympiad','https://codeforces.com/problemset/problem/490/A',1,3),(14427,'Special Matrices','https://codeforces.com/problemset/problem/489/F',2,3),(14428,'Hiking','https://codeforces.com/problemset/problem/489/E',2,3),(14429,'Unbearable Controversy of Being','https://codeforces.com/problemset/problem/489/D',2,3),(14430,'Given Length and Sum of Digits...','https://codeforces.com/problemset/problem/489/C',1,3),(14431,'BerSU Ball','https://codeforces.com/problemset/problem/489/B',1,3),(14432,'SwapSort','https://codeforces.com/problemset/problem/489/A',1,3),(14433,'Candy Boxes','https://codeforces.com/problemset/problem/488/B',2,3),(14434,'Giga Tower','https://codeforces.com/problemset/problem/488/A',1,3),(14435,'Tourists','https://codeforces.com/problemset/problem/487/E',3,3),(14436,'Conveyor Belts','https://codeforces.com/problemset/problem/487/D',3,3),(14437,'Prefix Product Sequence','https://codeforces.com/problemset/problem/487/C',2,3),(14438,'Strip','https://codeforces.com/problemset/problem/487/B',2,3),(14439,'Fight the Monster','https://codeforces.com/problemset/problem/487/A',2,3),(14440,'LIS of Sequence','https://codeforces.com/problemset/problem/486/E',2,3),(14441,'Valid Sets','https://codeforces.com/problemset/problem/486/D',2,3),(14442,'Palindrome Transformation','https://codeforces.com/problemset/problem/486/C',2,3),(14443,'OR in Matrix','https://codeforces.com/problemset/problem/486/B',1,3),(14444,'Calculating Function','https://codeforces.com/problemset/problem/486/A',1,3),(14445,'Valuable Resources','https://codeforces.com/problemset/problem/485/B',1,3),(14446,'Factory','https://codeforces.com/problemset/problem/485/A',1,3),(14447,'Sign on Fence','https://codeforces.com/problemset/problem/484/E',2,3),(14448,'Kindergarten','https://codeforces.com/problemset/problem/484/D',2,3),(14449,'Strange Sorting','https://codeforces.com/problemset/problem/484/C',3,3),(14450,'Maximum Value','https://codeforces.com/problemset/problem/484/B',2,3),(14451,'Bits','https://codeforces.com/problemset/problem/484/A',2,3),(14452,'Friends and Presents','https://codeforces.com/problemset/problem/483/B',2,3),(14453,'Counterexample ','https://codeforces.com/problemset/problem/483/A',1,3),(14454,'ELCA','https://codeforces.com/problemset/problem/482/E',3,3),(14455,'Random Function and Tree','https://codeforces.com/problemset/problem/482/D',3,3),(14456,'Game with Strings','https://codeforces.com/problemset/problem/482/C',3,3),(14457,'Interesting Array','https://codeforces.com/problemset/problem/482/B',2,3),(14458,'Diverse Permutation','https://codeforces.com/problemset/problem/482/A',1,3),(14459,'Parking Lot','https://codeforces.com/problemset/problem/480/E',3,3),(14460,'Parcels','https://codeforces.com/problemset/problem/480/D',3,3),(14461,'Riding in a Lift','https://codeforces.com/problemset/problem/479/E',2,3),(14462,'Long Jumps','https://codeforces.com/problemset/problem/479/D',2,3),(14463,'Exams','https://codeforces.com/problemset/problem/479/C',1,3),(14464,'Towers','https://codeforces.com/problemset/problem/479/B',1,3),(14465,'Expression','https://codeforces.com/problemset/problem/479/A',1,3),(14466,'Wavy numbers','https://codeforces.com/problemset/problem/478/E',3,3),(14467,'Red-Green Towers','https://codeforces.com/problemset/problem/478/D',2,3),(14468,'Table Decorations','https://codeforces.com/problemset/problem/478/C',2,3),(14469,'Random Teams','https://codeforces.com/problemset/problem/478/B',1,3),(14470,'Initial Bet','https://codeforces.com/problemset/problem/478/A',1,3),(14471,'Dreamoon and Notepad','https://codeforces.com/problemset/problem/477/E',3,3),(14472,'Dreamoon and Binary','https://codeforces.com/problemset/problem/477/D',3,3),(14473,'Dreamoon and Strings','https://codeforces.com/problemset/problem/476/E',2,3),(14474,'Dreamoon and Sets','https://codeforces.com/problemset/problem/476/D',2,3),(14475,'Dreamoon and Sums','https://codeforces.com/problemset/problem/476/C',2,3),(14476,'Dreamoon and WiFi','https://codeforces.com/problemset/problem/476/B',1,3),(14477,'Dreamoon and Stairs','https://codeforces.com/problemset/problem/476/A',1,3),(14478,'Meta-universe','https://codeforces.com/problemset/problem/475/F',3,3),(14479,'Strongly Connected City 2','https://codeforces.com/problemset/problem/475/E',3,3),(14480,'CGCDSSQ','https://codeforces.com/problemset/problem/475/D',2,3),(14481,'Kamal-ol-molk\'s Painting','https://codeforces.com/problemset/problem/475/C',2,3),(14482,'Strongly Connected City','https://codeforces.com/problemset/problem/475/B',1,3),(14483,'Bayan Bus','https://codeforces.com/problemset/problem/475/A',1,3),(14484,'Ant colony','https://codeforces.com/problemset/problem/474/F',2,3),(14485,'Pillars','https://codeforces.com/problemset/problem/474/E',2,3),(14486,'Flowers','https://codeforces.com/problemset/problem/474/D',2,3),(14487,'Captain Marmot','https://codeforces.com/problemset/problem/474/C',2,3),(14488,'Worms','https://codeforces.com/problemset/problem/474/B',1,3),(14489,'Keyboard','https://codeforces.com/problemset/problem/474/A',1,3),(14490,'Design Tutorial: Increase the Constraints','https://codeforces.com/problemset/problem/472/G',3,3),(14491,'Design Tutorial: Change the Goal','https://codeforces.com/problemset/problem/472/F',3,3),(14492,'Design Tutorial: Learn from a Game','https://codeforces.com/problemset/problem/472/E',3,3),(14493,'Design Tutorial: Inverse the Problem','https://codeforces.com/problemset/problem/472/D',2,3),(14494,'Design Tutorial: Make It Nondeterministic','https://codeforces.com/problemset/problem/472/C',1,3),(14495,'Design Tutorial: Learn from Life','https://codeforces.com/problemset/problem/472/B',1,3),(14496,'Design Tutorial: Learn from Math','https://codeforces.com/problemset/problem/472/A',1,3),(14497,'MUH and Lots and Lots of Segments','https://codeforces.com/problemset/problem/471/E',3,3),(14498,'MUH and Cube Walls','https://codeforces.com/problemset/problem/471/D',2,3),(14499,'MUH and House of Cards','https://codeforces.com/problemset/problem/471/C',2,3),(14500,'MUH and Important Things','https://codeforces.com/problemset/problem/471/B',1,3),(14501,'MUH and Sticks','https://codeforces.com/problemset/problem/471/A',1,3),(14502,'Array Sorting','https://codeforces.com/problemset/problem/470/H',2,3),(14503,'Hamming Distance','https://codeforces.com/problemset/problem/470/G',2,3),(14504,'Pairwise Sums','https://codeforces.com/problemset/problem/470/F',2,3),(14505,'Chessboard','https://codeforces.com/problemset/problem/470/E',2,3),(14506,'Caesar Cipher','https://codeforces.com/problemset/problem/470/D',2,3),(14507,'Eval','https://codeforces.com/problemset/problem/470/C',2,3),(14508,'Hexakosioihexekontahexaphobia','https://codeforces.com/problemset/problem/470/B',2,3),(14509,'Crystal Ball Sequence','https://codeforces.com/problemset/problem/470/A',1,3),(14510,'Chat Online','https://codeforces.com/problemset/problem/469/B',1,3),(14511,'I Wanna Be the Guy','https://codeforces.com/problemset/problem/469/A',1,3),(14512,'Permanent','https://codeforces.com/problemset/problem/468/E',3,3),(14513,'Tree','https://codeforces.com/problemset/problem/468/D',3,3),(14514,'Hack it!','https://codeforces.com/problemset/problem/468/C',2,3),(14515,'Two Sets','https://codeforces.com/problemset/problem/468/B',2,3),(14516,'24 Game','https://codeforces.com/problemset/problem/468/A',1,3),(14517,'Alex and Complicated Task','https://codeforces.com/problemset/problem/467/E',2,3),(14518,'Fedor and Essay','https://codeforces.com/problemset/problem/467/D',2,3),(14519,'George and Job','https://codeforces.com/problemset/problem/467/C',2,3),(14520,'Fedor and New Game','https://codeforces.com/problemset/problem/467/B',1,3),(14521,'George and Accommodation','https://codeforces.com/problemset/problem/467/A',1,3),(14522,'Information Graph','https://codeforces.com/problemset/problem/466/E',2,3),(14523,'Increase Sequence','https://codeforces.com/problemset/problem/466/D',2,3),(14524,'Number of Ways','https://codeforces.com/problemset/problem/466/C',2,3),(14525,'Wonder Room','https://codeforces.com/problemset/problem/466/B',2,3),(14526,'Cheap Travel','https://codeforces.com/problemset/problem/466/A',1,3),(14527,'Inbox (100500)','https://codeforces.com/problemset/problem/465/B',1,3),(14528,'inc ARG','https://codeforces.com/problemset/problem/465/A',1,3),(14529,'The Classic Problem','https://codeforces.com/problemset/problem/464/E',3,3),(14530,'World of Darkraft - 2','https://codeforces.com/problemset/problem/464/D',3,3),(14531,'Substitutes in Number','https://codeforces.com/problemset/problem/464/C',2,3),(14532,'Restore Cube ','https://codeforces.com/problemset/problem/464/B',2,3),(14533,'No to Palindromes!','https://codeforces.com/problemset/problem/464/A',2,3),(14534,'Caisa and Tree','https://codeforces.com/problemset/problem/463/E',2,3),(14535,'Gargari and Permutations','https://codeforces.com/problemset/problem/463/D',2,3),(14536,'Gargari and Bishops','https://codeforces.com/problemset/problem/463/C',2,3),(14537,'Caisa and Pylons','https://codeforces.com/problemset/problem/463/B',1,3),(14538,'Caisa and Sugar','https://codeforces.com/problemset/problem/463/A',1,3),(14539,'Appleman and Card Game','https://codeforces.com/problemset/problem/462/B',1,3),(14540,'Appleman and Easy Task','https://codeforces.com/problemset/problem/462/A',1,3),(14541,'Appleman and a Game','https://codeforces.com/problemset/problem/461/E',3,3),(14542,'Appleman and Complicated Task','https://codeforces.com/problemset/problem/461/D',3,3),(14543,'Appleman and a Sheet of Paper','https://codeforces.com/problemset/problem/461/C',2,3),(14544,'Appleman and Tree','https://codeforces.com/problemset/problem/461/B',2,3),(14545,'Appleman and Toastman','https://codeforces.com/problemset/problem/461/A',1,3),(14546,'Roland and Rose','https://codeforces.com/problemset/problem/460/E',3,3),(14547,'Little Victor and Set','https://codeforces.com/problemset/problem/460/D',2,3),(14548,'Present','https://codeforces.com/problemset/problem/460/C',2,3),(14549,'Little Dima and Equation','https://codeforces.com/problemset/problem/460/B',1,3),(14550,'Vasya and Socks','https://codeforces.com/problemset/problem/460/A',1,3),(14551,'Pashmak and Graph','https://codeforces.com/problemset/problem/459/E',2,3),(14552,'Pashmak and Parmida\'s problem','https://codeforces.com/problemset/problem/459/D',2,3),(14553,'Pashmak and Buses','https://codeforces.com/problemset/problem/459/C',2,3),(14554,'Pashmak and Flowers','https://codeforces.com/problemset/problem/459/B',1,3),(14555,'Pashmak and Garden','https://codeforces.com/problemset/problem/459/A',1,3),(14556,'An easy problem about trees','https://codeforces.com/problemset/problem/457/F',3,3),(14557,'Flow Optimality','https://codeforces.com/problemset/problem/457/E',3,3),(14558,'Bingo!','https://codeforces.com/problemset/problem/457/D',3,3),(14559,'Elections','https://codeforces.com/problemset/problem/457/C',2,3),(14560,'Distributed Join','https://codeforces.com/problemset/problem/457/B',2,3),(14561,'Golden System','https://codeforces.com/problemset/problem/457/A',2,3),(14562,'Fedya and Maths','https://codeforces.com/problemset/problem/456/B',1,3),(14563,'Laptops','https://codeforces.com/problemset/problem/456/A',1,3),(14564,'Function','https://codeforces.com/problemset/problem/455/E',3,3),(14565,'Serega and Fun','https://codeforces.com/problemset/problem/455/D',3,3),(14566,'Civilization','https://codeforces.com/problemset/problem/455/C',2,3),(14567,'A Lot of Games','https://codeforces.com/problemset/problem/455/B',2,3),(14568,'Boredom','https://codeforces.com/problemset/problem/455/A',1,3),(14569,'Little Pony and Sort by Shift','https://codeforces.com/problemset/problem/454/B',1,3),(14570,'Little Pony and Crystal Mine','https://codeforces.com/problemset/problem/454/A',1,3),(14571,'Little Pony and Lord Tirek','https://codeforces.com/problemset/problem/453/E',3,3),(14572,'Little Pony and Elements of Harmony','https://codeforces.com/problemset/problem/453/D',3,3),(14573,'Little Pony and Summer Sun Celebration','https://codeforces.com/problemset/problem/453/C',2,3),(14574,'Little Pony and Harmony Chest','https://codeforces.com/problemset/problem/453/B',2,3),(14575,'Little Pony and Expected Maximum','https://codeforces.com/problemset/problem/453/A',2,3),(14576,'Permutation','https://codeforces.com/problemset/problem/452/F',3,3),(14577,'Three strings','https://codeforces.com/problemset/problem/452/E',2,3),(14578,'Washer, Dryer, Folder','https://codeforces.com/problemset/problem/452/D',2,3),(14579,'Magic Trick','https://codeforces.com/problemset/problem/452/C',2,3),(14580,'4-point polyline','https://codeforces.com/problemset/problem/452/B',2,3),(14581,'Eevee','https://codeforces.com/problemset/problem/452/A',1,3),(14582,'Devu and Flowers','https://codeforces.com/problemset/problem/451/E',2,3),(14583,'Count Good Substrings','https://codeforces.com/problemset/problem/451/D',2,3),(14584,'Predict Outcome of the Game','https://codeforces.com/problemset/problem/451/C',2,3),(14585,'Sort the Array','https://codeforces.com/problemset/problem/451/B',1,3),(14586,'Game With Sticks','https://codeforces.com/problemset/problem/451/A',1,3),(14587,'Jzzhu and Sequences','https://codeforces.com/problemset/problem/450/B',1,3),(14588,'Jzzhu and Children','https://codeforces.com/problemset/problem/450/A',1,3),(14589,'Jzzhu and Squares','https://codeforces.com/problemset/problem/449/E',3,3),(14590,'Jzzhu and Numbers','https://codeforces.com/problemset/problem/449/D',2,3),(14591,'Jzzhu and Apples','https://codeforces.com/problemset/problem/449/C',2,3),(14592,'Jzzhu and Cities','https://codeforces.com/problemset/problem/449/B',2,3),(14593,'Jzzhu and Chocolate','https://codeforces.com/problemset/problem/449/A',2,3),(14594,'Divisors','https://codeforces.com/problemset/problem/448/E',2,3),(14595,'Multiplication Table','https://codeforces.com/problemset/problem/448/D',2,3),(14596,'Painting Fence','https://codeforces.com/problemset/problem/448/C',2,3),(14597,'Suffix Structures','https://codeforces.com/problemset/problem/448/B',1,3),(14598,'Rewards','https://codeforces.com/problemset/problem/448/A',1,3),(14599,'DZY Loves Strings','https://codeforces.com/problemset/problem/447/B',1,3),(14600,'DZY Loves Hash','https://codeforces.com/problemset/problem/447/A',1,3),(14601,'DZY Loves Bridges','https://codeforces.com/problemset/problem/446/E',3,3),(14602,'DZY Loves Games','https://codeforces.com/problemset/problem/446/D',3,3),(14603,'DZY Loves Fibonacci Numbers','https://codeforces.com/problemset/problem/446/C',2,3),(14604,'DZY Loves Modification','https://codeforces.com/problemset/problem/446/B',2,3),(14605,'DZY Loves Sequences','https://codeforces.com/problemset/problem/446/A',2,3),(14606,'DZY Loves Chemistry','https://codeforces.com/problemset/problem/445/B',1,3),(14607,'DZY Loves Chessboard','https://codeforces.com/problemset/problem/445/A',1,3),(14608,'DZY Loves Planting','https://codeforces.com/problemset/problem/444/E',3,3),(14609,'DZY Loves Strings','https://codeforces.com/problemset/problem/444/D',2,3),(14610,'DZY Loves Colors','https://codeforces.com/problemset/problem/444/C',2,3),(14611,'DZY Loves FFT','https://codeforces.com/problemset/problem/444/B',2,3),(14612,'DZY Loves Physics','https://codeforces.com/problemset/problem/444/A',2,3),(14613,'Kolya and Tandem Repeat','https://codeforces.com/problemset/problem/443/B',1,3),(14614,'Anton and Letters','https://codeforces.com/problemset/problem/443/A',1,3),(14615,'Gena and Second Distance','https://codeforces.com/problemset/problem/442/E',3,3),(14616,'Adam and Tree','https://codeforces.com/problemset/problem/442/D',3,3),(14617,'Artem and Array ','https://codeforces.com/problemset/problem/442/C',2,3),(14618,'Andrey and Problem','https://codeforces.com/problemset/problem/442/B',2,3),(14619,'Borya and Hanabi','https://codeforces.com/problemset/problem/442/A',2,3),(14620,'Valera and Number','https://codeforces.com/problemset/problem/441/E',2,3),(14621,'Valera and Swaps','https://codeforces.com/problemset/problem/441/D',2,3),(14622,'Valera and Tubes ','https://codeforces.com/problemset/problem/441/C',1,3),(14623,'Valera and Fruits','https://codeforces.com/problemset/problem/441/B',1,3),(14624,'Valera and Antique Items','https://codeforces.com/problemset/problem/441/A',1,3),(14625,'Berland Federalization','https://codeforces.com/problemset/problem/440/D',2,3),(14626,'One-Based Arithmetic','https://codeforces.com/problemset/problem/440/C',2,3),(14627,'Balancer','https://codeforces.com/problemset/problem/440/B',2,3),(14628,'Forgotten Episode','https://codeforces.com/problemset/problem/440/A',1,3),(14629,'Devu and Birthday Celebration','https://codeforces.com/problemset/problem/439/E',2,3),(14630,'Devu and his Brother','https://codeforces.com/problemset/problem/439/D',2,3),(14631,'Devu and Partitioning of the Array','https://codeforces.com/problemset/problem/439/C',2,3),(14632,'Devu, the Dumb Guy','https://codeforces.com/problemset/problem/439/B',1,3),(14633,'Devu, the Singer and Churu, the Joker','https://codeforces.com/problemset/problem/439/A',1,3),(14634,'The Child and Binary Tree','https://codeforces.com/problemset/problem/438/E',3,3),(14635,'The Child and Sequence','https://codeforces.com/problemset/problem/438/D',2,3),(14636,'The Child and Polygon','https://codeforces.com/problemset/problem/437/E',2,3),(14637,'The Child and Zoo','https://codeforces.com/problemset/problem/437/D',2,3),(14638,'The Child and Toy','https://codeforces.com/problemset/problem/437/C',1,3),(14639,'The Child and Set','https://codeforces.com/problemset/problem/437/B',1,3),(14640,'The Child and Homework','https://codeforces.com/problemset/problem/437/A',1,3),(14641,'Banners','https://codeforces.com/problemset/problem/436/F',3,3),(14642,'Cardboard Box','https://codeforces.com/problemset/problem/436/E',3,3),(14643,'Pudding Monsters','https://codeforces.com/problemset/problem/436/D',3,3),(14644,'Dungeons and Candies','https://codeforces.com/problemset/problem/436/C',2,3),(14645,'Om Nom and Spiders','https://codeforces.com/problemset/problem/436/B',1,3),(14646,'Feed with Candy','https://codeforces.com/problemset/problem/436/A',1,3),(14647,'Special Graph','https://codeforces.com/problemset/problem/435/E',2,3),(14648,'Special Grid','https://codeforces.com/problemset/problem/435/D',2,3),(14649,'Cardiogram','https://codeforces.com/problemset/problem/435/C',2,3),(14650,'Pasha Maximizes','https://codeforces.com/problemset/problem/435/B',1,3),(14651,'Queue on Bus Stop','https://codeforces.com/problemset/problem/435/A',1,3),(14652,'Furukawa Nagisa\'s Tree','https://codeforces.com/problemset/problem/434/E',3,3),(14653,'Nanami\'s Power Plant','https://codeforces.com/problemset/problem/434/D',3,3),(14654,'Tachibana Kanade\'s Tofu','https://codeforces.com/problemset/problem/433/E',2,3),(14655,'Nanami\'s Digital Board','https://codeforces.com/problemset/problem/433/D',2,3),(14656,'Ryouko\'s Memory Note','https://codeforces.com/problemset/problem/433/C',2,3),(14657,'Kuriyama Mirai\'s Stones','https://codeforces.com/problemset/problem/433/B',1,3),(14658,'Kitahara Haruki\'s Gift','https://codeforces.com/problemset/problem/433/A',1,3),(14659,'Square Tiling','https://codeforces.com/problemset/problem/432/E',2,3),(14660,'Prefixes and Suffixes','https://codeforces.com/problemset/problem/432/D',2,3),(14661,'Prime Swaps','https://codeforces.com/problemset/problem/432/C',2,3),(14662,'Football Kit','https://codeforces.com/problemset/problem/432/B',1,3),(14663,'Choosing Teams','https://codeforces.com/problemset/problem/432/A',1,3),(14664,'Chemistry Experiment','https://codeforces.com/problemset/problem/431/E',2,3),(14665,'Random Task','https://codeforces.com/problemset/problem/431/D',2,3),(14666,'k-Tree','https://codeforces.com/problemset/problem/431/C',2,3),(14667,'Shower Line','https://codeforces.com/problemset/problem/431/B',1,3),(14668,'Black Square','https://codeforces.com/problemset/problem/431/A',1,3),(14669,'Balls Game','https://codeforces.com/problemset/problem/430/B',1,3),(14670,'Points and Segments (easy)','https://codeforces.com/problemset/problem/430/A',2,3),(14671,'Points and Segments','https://codeforces.com/problemset/problem/429/E',3,3),(14672,'Tricky Function','https://codeforces.com/problemset/problem/429/D',2,3),(14673,'Guess the Tree','https://codeforces.com/problemset/problem/429/C',2,3),(14674,'Working out','https://codeforces.com/problemset/problem/429/B',2,3),(14675,'Xor-tree','https://codeforces.com/problemset/problem/429/A',1,3),(14676,'Police Patrol','https://codeforces.com/problemset/problem/427/E',2,3),(14677,'Match & Catch','https://codeforces.com/problemset/problem/427/D',2,3),(14678,'Checkposts','https://codeforces.com/problemset/problem/427/C',2,3),(14679,'Prison Transfer','https://codeforces.com/problemset/problem/427/B',1,3),(14680,'Police Recruits','https://codeforces.com/problemset/problem/427/A',1,3),(14681,'Sereja and Mirroring','https://codeforces.com/problemset/problem/426/B',1,3),(14682,'Sereja and Mugs','https://codeforces.com/problemset/problem/426/A',1,3),(14683,'Sereja and Sets','https://codeforces.com/problemset/problem/425/E',2,3),(14684,'Sereja and Squares','https://codeforces.com/problemset/problem/425/D',2,3),(14685,'Sereja and Two Sequences','https://codeforces.com/problemset/problem/425/C',2,3),(14686,'Sereja and Table ','https://codeforces.com/problemset/problem/425/B',2,3),(14687,'Sereja and Swaps','https://codeforces.com/problemset/problem/425/A',1,3),(14688,'Colored Jenga','https://codeforces.com/problemset/problem/424/E',2,3),(14689,'Biathlon Track','https://codeforces.com/problemset/problem/424/D',2,3),(14690,'Magic Formulas','https://codeforces.com/problemset/problem/424/C',2,3),(14691,'Megacity','https://codeforces.com/problemset/problem/424/B',1,3),(14692,'Squats','https://codeforces.com/problemset/problem/424/A',1,3),(14693,'Bug in Code','https://codeforces.com/problemset/problem/421/D',2,3),(14694,'Pasha and Hamsters','https://codeforces.com/problemset/problem/421/A',1,3),(14695,'Playing the ball','https://codeforces.com/problemset/problem/420/E',3,3),(14696,'Cup Trick','https://codeforces.com/problemset/problem/420/D',2,3),(14697,'Bug in Code','https://codeforces.com/problemset/problem/420/C',2,3),(14698,'Online Meeting','https://codeforces.com/problemset/problem/420/B',2,3),(14699,'Start Up','https://codeforces.com/problemset/problem/420/A',1,3),(14700,'Tricky Password','https://codeforces.com/problemset/problem/418/E',3,3),(14701,'Big Problems for Organizers','https://codeforces.com/problemset/problem/418/D',3,3),(14702,'Square Table','https://codeforces.com/problemset/problem/417/E',2,3),(14703,'Cunning Gena','https://codeforces.com/problemset/problem/417/D',2,3),(14704,'Football','https://codeforces.com/problemset/problem/417/C',1,3),(14705,'Crash','https://codeforces.com/problemset/problem/417/B',1,3),(14706,'Elimination','https://codeforces.com/problemset/problem/417/A',1,3),(14707,'President\'s Path','https://codeforces.com/problemset/problem/416/E',2,3),(14708,'Population Size','https://codeforces.com/problemset/problem/416/D',2,3),(14709,'Booking System','https://codeforces.com/problemset/problem/416/C',2,3),(14710,'Art Union','https://codeforces.com/problemset/problem/416/B',1,3),(14711,'Guess a number!','https://codeforces.com/problemset/problem/416/A',1,3),(14712,'Mashmokh and Tokens','https://codeforces.com/problemset/problem/415/B',1,3),(14713,'Mashmokh and Lights','https://codeforces.com/problemset/problem/415/A',1,3),(14714,'Mashmokh\'s Designed Problem','https://codeforces.com/problemset/problem/414/E',3,3),(14715,'Mashmokh and Water Tanks','https://codeforces.com/problemset/problem/414/D',2,3),(14716,'Mashmokh and Reverse Operation','https://codeforces.com/problemset/problem/414/C',2,3),(14717,'Mashmokh and ACM','https://codeforces.com/problemset/problem/414/B',1,3),(14718,'Mashmokh and Numbers','https://codeforces.com/problemset/problem/414/A',1,3),(14719,'Maze 2D','https://codeforces.com/problemset/problem/413/E',2,3),(14720,'2048','https://codeforces.com/problemset/problem/413/D',2,3),(14721,'Jeopardy!','https://codeforces.com/problemset/problem/413/C',1,3),(14722,'Spyke Chatting','https://codeforces.com/problemset/problem/413/B',1,3),(14723,'Data Recovery','https://codeforces.com/problemset/problem/413/A',1,3),(14724,'E-mail Addresses','https://codeforces.com/problemset/problem/412/E',2,3),(14725,'Giving Awards','https://codeforces.com/problemset/problem/412/D',2,3),(14726,'Pattern','https://codeforces.com/problemset/problem/412/C',1,3),(14727,'Network Configuration','https://codeforces.com/problemset/problem/412/B',1,3),(14728,'Poster','https://codeforces.com/problemset/problem/412/A',1,3),(14729,'Kicker','https://codeforces.com/problemset/problem/411/C',2,3),(14730,'Multi-core Processor','https://codeforces.com/problemset/problem/411/B',2,3),(14731,'Password Check','https://codeforces.com/problemset/problem/411/A',1,3),(14732,'Feed the Golorp','https://codeforces.com/problemset/problem/409/I',2,3),(14733,'A + B Strikes Back','https://codeforces.com/problemset/problem/409/H',1,3),(14734,'On a plane','https://codeforces.com/problemset/problem/409/G',2,3),(14735,'000001','https://codeforces.com/problemset/problem/409/F',2,3),(14736,'Dome','https://codeforces.com/problemset/problem/409/E',2,3),(14737,'Big Data','https://codeforces.com/problemset/problem/409/D',2,3),(14738,'Magnum Opus','https://codeforces.com/problemset/problem/409/C',2,3),(14739,'Mysterious Language','https://codeforces.com/problemset/problem/409/B',2,3),(14740,'The Great Game','https://codeforces.com/problemset/problem/409/A',2,3),(14741,'Garland','https://codeforces.com/problemset/problem/408/B',1,3),(14742,'Line to Cashier','https://codeforces.com/problemset/problem/408/A',1,3),(14743,'k-d-sequence','https://codeforces.com/problemset/problem/407/E',3,3),(14744,'Largest Submatrix 3','https://codeforces.com/problemset/problem/407/D',3,3),(14745,'Curious Array','https://codeforces.com/problemset/problem/407/C',2,3),(14746,'Long Path','https://codeforces.com/problemset/problem/407/B',2,3),(14747,'Triangle','https://codeforces.com/problemset/problem/407/A',2,3),(14748,'Hamming Triples','https://codeforces.com/problemset/problem/406/E',3,3),(14749,'Hill Climbing','https://codeforces.com/problemset/problem/406/D',2,3),(14750,'Graph Cutting','https://codeforces.com/problemset/problem/405/E',2,3),(14751,'Toy Sum','https://codeforces.com/problemset/problem/405/D',2,3),(14752,'Unusual Product','https://codeforces.com/problemset/problem/405/C',2,3),(14753,'Domino Effect','https://codeforces.com/problemset/problem/405/B',1,3),(14754,'Gravity Flip','https://codeforces.com/problemset/problem/405/A',1,3),(14755,'Maze 1D','https://codeforces.com/problemset/problem/404/E',2,3),(14756,'Minesweeper 1D','https://codeforces.com/problemset/problem/404/D',2,3),(14757,'Restore Graph','https://codeforces.com/problemset/problem/404/C',2,3),(14758,'Marathon','https://codeforces.com/problemset/problem/404/B',1,3),(14759,'Valera and X','https://codeforces.com/problemset/problem/404/A',1,3),(14760,'Two Rooted Trees','https://codeforces.com/problemset/problem/403/E',3,3),(14761,'Beautiful Pairs of Numbers','https://codeforces.com/problemset/problem/403/D',2,3),(14762,'Strictly Positive Matrix','https://codeforces.com/problemset/problem/402/E',2,3),(14763,'Upgrading Array','https://codeforces.com/problemset/problem/402/D',2,3),(14764,'Searching for Graph','https://codeforces.com/problemset/problem/402/C',1,3),(14765,'Trees in a Row','https://codeforces.com/problemset/problem/402/B',1,3),(14766,'Nuts','https://codeforces.com/problemset/problem/402/A',1,3),(14767,'Olympic Games','https://codeforces.com/problemset/problem/401/E',2,3),(14768,'Roman and Numbers','https://codeforces.com/problemset/problem/401/D',2,3),(14769,'Team','https://codeforces.com/problemset/problem/401/C',1,3),(14770,'Sereja and Contests','https://codeforces.com/problemset/problem/401/B',1,3),(14771,'Vanya and Cards','https://codeforces.com/problemset/problem/401/A',1,3),(14772,'Inna and Binary Logic','https://codeforces.com/problemset/problem/400/E',2,3),(14773,'Dima and Bacteria','https://codeforces.com/problemset/problem/400/D',2,3),(14774,'Inna and Huge Candy Matrix','https://codeforces.com/problemset/problem/400/C',1,3),(14775,'Inna and New Matrix of Candies','https://codeforces.com/problemset/problem/400/B',1,3),(14776,'Inna and Choose Options','https://codeforces.com/problemset/problem/400/A',1,3),(14777,'Red and Blue Balls','https://codeforces.com/problemset/problem/399/B',6,3),(14778,'Pages','https://codeforces.com/problemset/problem/399/A',6,3),(14779,'Sorting Permutations','https://codeforces.com/problemset/problem/398/E',6,3),(14780,'Instant Messanger','https://codeforces.com/problemset/problem/398/D',6,3),(14781,'Tree and Array','https://codeforces.com/problemset/problem/398/C',6,3),(14782,'Painting The Wall','https://codeforces.com/problemset/problem/398/B',6,3),(14783,'Cards','https://codeforces.com/problemset/problem/398/A',6,3),(14784,'On Corruption and Numbers','https://codeforces.com/problemset/problem/397/B',6,3),(14785,'On Segment\'s Own Points','https://codeforces.com/problemset/problem/397/A',6,3),(14786,'On Iteration of One Well-Known Function','https://codeforces.com/problemset/problem/396/E',6,3),(14787,'On Sum of Number of Inversions in Permutations','https://codeforces.com/problemset/problem/396/D',6,3),(14788,'On Changing Tree','https://codeforces.com/problemset/problem/396/C',6,3),(14789,'On Sum of Fractions','https://codeforces.com/problemset/problem/396/B',6,3),(14790,'On Number of Decompositions into Multipliers','https://codeforces.com/problemset/problem/396/A',6,3),(14791,'Lightbulb for Minister','https://codeforces.com/problemset/problem/394/E',6,3),(14792,'Physical Education and Buns','https://codeforces.com/problemset/problem/394/D',6,3),(14793,'Dominoes','https://codeforces.com/problemset/problem/394/C',6,3),(14794,'Very Beautiful Number','https://codeforces.com/problemset/problem/394/B',6,3),(14795,'Counting Sticks','https://codeforces.com/problemset/problem/394/A',6,3),(14796,'Three matrices','https://codeforces.com/problemset/problem/393/B',6,3),(14797,'Nineteen','https://codeforces.com/problemset/problem/393/A',6,3),(14798,'Deleting Substrings','https://codeforces.com/problemset/problem/392/E',6,3),(14799,'Three Arrays','https://codeforces.com/problemset/problem/392/D',6,3),(14800,'Yet Another Number Sequence','https://codeforces.com/problemset/problem/392/C',6,3),(14801,'Tower of Hanoi','https://codeforces.com/problemset/problem/392/B',6,3),(14802,'Blocked Points','https://codeforces.com/problemset/problem/392/A',6,3),(14803,'Stock Trading','https://codeforces.com/problemset/problem/391/F3',6,3),(14804,'Stock Trading','https://codeforces.com/problemset/problem/391/F2',6,3),(14805,'Stock Trading','https://codeforces.com/problemset/problem/391/F1',6,3),(14806,'Three Trees','https://codeforces.com/problemset/problem/391/E2',6,3),(14807,'Three Trees','https://codeforces.com/problemset/problem/391/E1',6,3),(14808,'Supercollider','https://codeforces.com/problemset/problem/391/D2',6,3),(14809,'Supercollider','https://codeforces.com/problemset/problem/391/D1',6,3),(14810,'The Tournament','https://codeforces.com/problemset/problem/391/C3',6,3),(14811,'The Tournament','https://codeforces.com/problemset/problem/391/C2',6,3),(14812,'The Tournament','https://codeforces.com/problemset/problem/391/C1',6,3),(14813,'Word Folding','https://codeforces.com/problemset/problem/391/B',6,3),(14814,'Genetic Engineering','https://codeforces.com/problemset/problem/391/A',6,3),(14815,'Inna and Large Sweet Matrix','https://codeforces.com/problemset/problem/390/E',6,3),(14816,'Inna and Sweet Matrix','https://codeforces.com/problemset/problem/390/D',6,3),(14817,'Inna and Candy Boxes','https://codeforces.com/problemset/problem/390/C',6,3),(14818,'Inna, Dima and Song','https://codeforces.com/problemset/problem/390/B',6,3),(14819,'Inna and Alarm Clock','https://codeforces.com/problemset/problem/390/A',6,3),(14820,'Fox and Cross','https://codeforces.com/problemset/problem/389/B',1,3),(14821,'Fox and Number Game','https://codeforces.com/problemset/problem/389/A',1,3),(14822,'Fox and Meteor Shower','https://codeforces.com/problemset/problem/388/E',3,3),(14823,'Fox and Perfect Sets','https://codeforces.com/problemset/problem/388/D',3,3),(14824,'Fox and Card Game','https://codeforces.com/problemset/problem/388/C',2,3),(14825,'Fox and Minimal path','https://codeforces.com/problemset/problem/388/B',2,3),(14826,'Fox and Box Accumulation','https://codeforces.com/problemset/problem/388/A',1,3),(14827,'George and Cards','https://codeforces.com/problemset/problem/387/E',2,3),(14828,'George and Interesting Graph','https://codeforces.com/problemset/problem/387/D',2,3),(14829,'George and Number','https://codeforces.com/problemset/problem/387/C',2,3),(14830,'George and Round','https://codeforces.com/problemset/problem/387/B',1,3),(14831,'George and Sleep','https://codeforces.com/problemset/problem/387/A',1,3),(14832,'Game with Points','https://codeforces.com/problemset/problem/386/D',2,3),(14833,'Diverse Substrings','https://codeforces.com/problemset/problem/386/C',2,3),(14834,'Fly, freebies, fly!','https://codeforces.com/problemset/problem/386/B',1,3),(14835,'Second-Price Auction','https://codeforces.com/problemset/problem/386/A',1,3),(14836,'Bear in the Field','https://codeforces.com/problemset/problem/385/E',2,3),(14837,'Bear and Floodlight','https://codeforces.com/problemset/problem/385/D',2,3),(14838,'Bear and Prime Numbers','https://codeforces.com/problemset/problem/385/C',2,3),(14839,'Bear and Strings','https://codeforces.com/problemset/problem/385/B',1,3),(14840,'Bear and Raspberry','https://codeforces.com/problemset/problem/385/A',1,3),(14841,'Multitasking','https://codeforces.com/problemset/problem/384/B',1,3),(14842,'Coder','https://codeforces.com/problemset/problem/384/A',1,3),(14843,'Vowels','https://codeforces.com/problemset/problem/383/E',3,3),(14844,'Antimatter','https://codeforces.com/problemset/problem/383/D',2,3),(14845,'Propagating tree','https://codeforces.com/problemset/problem/383/C',2,3),(14846,'Volcanoes','https://codeforces.com/problemset/problem/383/B',2,3),(14847,'Milking cows','https://codeforces.com/problemset/problem/383/A',2,3),(14848,'Ksenia and Combinatorics','https://codeforces.com/problemset/problem/382/E',3,3),(14849,'Ksenia and Pawns','https://codeforces.com/problemset/problem/382/D',2,3),(14850,'Arithmetic Progression','https://codeforces.com/problemset/problem/382/C',2,3),(14851,'Number Busters','https://codeforces.com/problemset/problem/382/B',2,3),(14852,'Ksenia and Pan Scales','https://codeforces.com/problemset/problem/382/A',1,3),(14853,'Sereja and Stairs','https://codeforces.com/problemset/problem/381/B',1,3),(14854,'Sereja and Dima','https://codeforces.com/problemset/problem/381/A',1,3),(14855,'Sereja and Dividing','https://codeforces.com/problemset/problem/380/E',3,3),(14856,'Sereja and Cinema','https://codeforces.com/problemset/problem/380/D',2,3),(14857,'Sereja and Brackets','https://codeforces.com/problemset/problem/380/C',2,3),(14858,'Sereja and Tree','https://codeforces.com/problemset/problem/380/B',2,3),(14859,'Sereja and Prefixes','https://codeforces.com/problemset/problem/380/A',2,3),(14860,'New Year Cactus','https://codeforces.com/problemset/problem/379/G',3,3),(14861,'New Year Tree','https://codeforces.com/problemset/problem/379/F',2,3),(14862,'New Year Tree Decorations','https://codeforces.com/problemset/problem/379/E',2,3),(14863,'New Year Letter','https://codeforces.com/problemset/problem/379/D',2,3),(14864,'New Year Ratings Change','https://codeforces.com/problemset/problem/379/C',1,3),(14865,'New Year Present','https://codeforces.com/problemset/problem/379/B',1,3),(14866,'New Year Candles','https://codeforces.com/problemset/problem/379/A',1,3),(14867,'Semifinals','https://codeforces.com/problemset/problem/378/B',1,3),(14868,'Playing with Dice','https://codeforces.com/problemset/problem/378/A',1,3),(14869,'Cookie Clicker','https://codeforces.com/problemset/problem/377/E',3,3),(14870,'Developing Game','https://codeforces.com/problemset/problem/377/D',2,3),(14871,'Captains Mode','https://codeforces.com/problemset/problem/377/C',2,3),(14872,'Preparing for the Contest','https://codeforces.com/problemset/problem/377/B',2,3),(14873,'Maze','https://codeforces.com/problemset/problem/377/A',2,3),(14874,'I.O.U.','https://codeforces.com/problemset/problem/376/B',1,3),(14875,'Lever','https://codeforces.com/problemset/problem/376/A',1,3),(14876,'Red and Black Tree','https://codeforces.com/problemset/problem/375/E',3,3),(14877,'Tree and Queries','https://codeforces.com/problemset/problem/375/D',2,3),(14878,'Circling Round Treasures','https://codeforces.com/problemset/problem/375/C',3,3),(14879,'Maximum Submatrix 2','https://codeforces.com/problemset/problem/375/B',2,3),(14880,'Divisible by Seven','https://codeforces.com/problemset/problem/375/A',2,3),(14881,'Inna and Babies','https://codeforces.com/problemset/problem/374/E',3,3),(14882,'Inna and Sequence ','https://codeforces.com/problemset/problem/374/D',2,3),(14883,'Inna and Dima','https://codeforces.com/problemset/problem/374/C',2,3),(14884,'Inna and Nine','https://codeforces.com/problemset/problem/374/B',1,3),(14885,'Inna and Pink Pony','https://codeforces.com/problemset/problem/374/A',2,3),(14886,'Making Sequences is Fun','https://codeforces.com/problemset/problem/373/B',2,3),(14887,'Collecting Beats is Fun','https://codeforces.com/problemset/problem/373/A',1,3),(14888,'Drawing Circles is Fun','https://codeforces.com/problemset/problem/372/E',3,3),(14889,'Choosing Subtree is Fun','https://codeforces.com/problemset/problem/372/D',3,3),(14890,'Watching Fireworks is Fun','https://codeforces.com/problemset/problem/372/C',2,3),(14891,'Counting Rectangles is Fun','https://codeforces.com/problemset/problem/372/B',2,3),(14892,'Counting Kangaroos is Fun','https://codeforces.com/problemset/problem/372/A',2,3),(14893,'Subway Innovation','https://codeforces.com/problemset/problem/371/E',2,3),(14894,'Vessels','https://codeforces.com/problemset/problem/371/D',2,3),(14895,'Hamburgers','https://codeforces.com/problemset/problem/371/C',2,3),(14896,'Fox Dividing Cheese','https://codeforces.com/problemset/problem/371/B',1,3),(14897,'K-Periodic Array','https://codeforces.com/problemset/problem/371/A',1,3),(14898,'Summer Reading','https://codeforces.com/problemset/problem/370/E',2,3),(14899,'Broken Monitor','https://codeforces.com/problemset/problem/370/D',2,3),(14900,'Mittens','https://codeforces.com/problemset/problem/370/C',2,3),(14901,'Berland Bingo','https://codeforces.com/problemset/problem/370/B',1,3),(14902,'Rook, Bishop and King','https://codeforces.com/problemset/problem/370/A',1,3),(14903,'Valera and Queries','https://codeforces.com/problemset/problem/369/E',2,3),(14904,'Valera and Fools','https://codeforces.com/problemset/problem/369/D',2,3),(14905,'Valera and Elections','https://codeforces.com/problemset/problem/369/C',2,3),(14906,'Valera and Contest','https://codeforces.com/problemset/problem/369/B',1,3),(14907,'Valera and Plates','https://codeforces.com/problemset/problem/369/A',1,3),(14908,'Sereja and Suffixes','https://codeforces.com/problemset/problem/368/B',1,3),(14909,'Sereja and Coat Rack','https://codeforces.com/problemset/problem/368/A',1,3),(14910,'Sereja and Intervals','https://codeforces.com/problemset/problem/367/E',3,3),(14911,'Sereja and Sets','https://codeforces.com/problemset/problem/367/D',2,3),(14912,'Sereja and the Arrangement of Numbers','https://codeforces.com/problemset/problem/367/C',2,3),(14913,'Sereja ans Anagrams','https://codeforces.com/problemset/problem/367/B',2,3),(14914,'Sereja and Algorithm ','https://codeforces.com/problemset/problem/367/A',1,3),(14915,'Dima and Magic Guitar','https://codeforces.com/problemset/problem/366/E',2,3),(14916,'Dima and Trap Graph','https://codeforces.com/problemset/problem/366/D',2,3),(14917,'Dima and Salad','https://codeforces.com/problemset/problem/366/C',2,3),(14918,'Dima and To-do List','https://codeforces.com/problemset/problem/366/B',1,3),(14919,'Dima and Guards','https://codeforces.com/problemset/problem/366/A',1,3),(14920,'The Fibonacci Segment','https://codeforces.com/problemset/problem/365/B',1,3),(14921,'Good Number','https://codeforces.com/problemset/problem/365/A',1,3),(14922,'Empty Rectangles','https://codeforces.com/problemset/problem/364/E',3,3),(14923,'Ghd','https://codeforces.com/problemset/problem/364/D',3,3),(14924,'Beautiful Set','https://codeforces.com/problemset/problem/364/C',2,3),(14925,'Free Market','https://codeforces.com/problemset/problem/364/B',2,3),(14926,'Matrix','https://codeforces.com/problemset/problem/364/A',2,3),(14927,'Two Circles','https://codeforces.com/problemset/problem/363/E',2,3),(14928,'Renting Bikes','https://codeforces.com/problemset/problem/363/D',2,3),(14929,'Fixing Typos','https://codeforces.com/problemset/problem/363/C',1,3),(14930,'Fence','https://codeforces.com/problemset/problem/363/B',1,3),(14931,'Soroban','https://codeforces.com/problemset/problem/363/A',1,3),(14932,'Petya and Pipes','https://codeforces.com/problemset/problem/362/E',2,3),(14933,'Fools and Foolproof Roads','https://codeforces.com/problemset/problem/362/D',2,3),(14934,'Insertion Sort','https://codeforces.com/problemset/problem/362/C',2,3),(14935,'Petya and Staircases','https://codeforces.com/problemset/problem/362/B',1,3),(14936,'Two Semiknights Meet','https://codeforces.com/problemset/problem/362/A',1,3),(14937,'Levko and Permutation','https://codeforces.com/problemset/problem/361/B',1,3),(14938,'Levko and Table','https://codeforces.com/problemset/problem/361/A',1,3),(14939,'Levko and Game','https://codeforces.com/problemset/problem/360/E',3,3),(14940,'Levko and Sets','https://codeforces.com/problemset/problem/360/D',3,3),(14941,'Levko and Strings','https://codeforces.com/problemset/problem/360/C',2,3),(14942,'Levko and Array','https://codeforces.com/problemset/problem/360/B',2,3),(14943,'Levko and Array Recovery','https://codeforces.com/problemset/problem/360/A',2,3),(14944,'Neatness','https://codeforces.com/problemset/problem/359/E',2,3),(14945,'Pair of Numbers','https://codeforces.com/problemset/problem/359/D',2,3),(14946,'Prime Number','https://codeforces.com/problemset/problem/359/C',2,3),(14947,'Permutation','https://codeforces.com/problemset/problem/359/B',1,3),(14948,'Table','https://codeforces.com/problemset/problem/359/A',1,3),(14949,'Dima and Kicks','https://codeforces.com/problemset/problem/358/E',2,3),(14950,'Dima and Hares','https://codeforces.com/problemset/problem/358/D',2,3),(14951,'Dima and Containers','https://codeforces.com/problemset/problem/358/C',2,3),(14952,'Dima and Text Messages','https://codeforces.com/problemset/problem/358/B',1,3),(14953,'Dima and Continuous Line','https://codeforces.com/problemset/problem/358/A',1,3),(14954,'Flag Day','https://codeforces.com/problemset/problem/357/B',1,3),(14955,'Group of Students','https://codeforces.com/problemset/problem/357/A',1,3),(14956,'Xenia and String Problem','https://codeforces.com/problemset/problem/356/E',3,3),(14957,'Bags and Coins','https://codeforces.com/problemset/problem/356/D',3,3),(14958,'Compartments','https://codeforces.com/problemset/problem/356/C',2,3),(14959,'Xenia and Hamming','https://codeforces.com/problemset/problem/356/B',2,3),(14960,'Knight Tournament','https://codeforces.com/problemset/problem/356/A',1,3),(14961,'Vasya and Public Transport','https://codeforces.com/problemset/problem/355/B',1,3),(14962,'Vasya and Digital Root','https://codeforces.com/problemset/problem/355/A',1,3),(14963,'Lucky Number Representation','https://codeforces.com/problemset/problem/354/E',2,3),(14964,'Transferring Pyramid','https://codeforces.com/problemset/problem/354/D',3,3),(14965,'Vasya and Beautiful Arrays','https://codeforces.com/problemset/problem/354/C',2,3),(14966,'Game with Strings','https://codeforces.com/problemset/problem/354/B',2,3),(14967,'Vasya and Robot','https://codeforces.com/problemset/problem/354/A',1,3),(14968,'Antichain','https://codeforces.com/problemset/problem/353/E',2,3),(14969,'Queue','https://codeforces.com/problemset/problem/353/D',2,3),(14970,'Find Maximum','https://codeforces.com/problemset/problem/353/C',2,3),(14971,'Two Heaps','https://codeforces.com/problemset/problem/353/B',2,3),(14972,'Domino','https://codeforces.com/problemset/problem/353/A',1,3),(14973,'Jeff and Periods','https://codeforces.com/problemset/problem/352/B',1,3),(14974,'Jeff and Digits','https://codeforces.com/problemset/problem/352/A',1,3),(14975,'Jeff and Permutation','https://codeforces.com/problemset/problem/351/E',2,3),(14976,'Jeff and Removing Periods','https://codeforces.com/problemset/problem/351/D',3,3),(14977,'Jeff and Brackets','https://codeforces.com/problemset/problem/351/C',2,3),(14978,'Jeff and Furik','https://codeforces.com/problemset/problem/351/B',2,3),(14979,'Jeff and Rounding','https://codeforces.com/problemset/problem/351/A',2,3),(14980,'Wrong Floyd','https://codeforces.com/problemset/problem/350/E',2,3),(14981,'Looking for Owls','https://codeforces.com/problemset/problem/350/D',2,3),(14982,'Bombs','https://codeforces.com/problemset/problem/350/C',2,3),(14983,'Resort','https://codeforces.com/problemset/problem/350/B',1,3),(14984,'TL','https://codeforces.com/problemset/problem/350/A',1,3),(14985,'Color the Fence','https://codeforces.com/problemset/problem/349/B',2,3),(14986,'Cinema Line','https://codeforces.com/problemset/problem/349/A',1,3),(14987,'Pilgrims','https://codeforces.com/problemset/problem/348/E',3,3),(14988,'Turtles','https://codeforces.com/problemset/problem/348/D',2,3),(14989,'Subset Sums','https://codeforces.com/problemset/problem/348/C',2,3),(14990,'Apple Tree','https://codeforces.com/problemset/problem/348/B',2,3),(14991,'Mafia','https://codeforces.com/problemset/problem/348/A',2,3),(14992,'Fixed Points','https://codeforces.com/problemset/problem/347/B',1,3),(14993,'Difference Row','https://codeforces.com/problemset/problem/347/A',1,3),(14994,'Doodle Jump','https://codeforces.com/problemset/problem/346/E',3,3),(14995,'Robot Control','https://codeforces.com/problemset/problem/346/D',3,3),(14996,'Number Transformation II','https://codeforces.com/problemset/problem/346/C',2,3),(14997,'Lucky Common Subsequence','https://codeforces.com/problemset/problem/346/B',2,3),(14998,'Alice and Bob','https://codeforces.com/problemset/problem/346/A',2,3),(14999,'Suffix Subgroup','https://codeforces.com/problemset/problem/345/G',2,3),(15000,'Superstitions Inspection','https://codeforces.com/problemset/problem/345/F',3,3),(15001,'Black Cat Rush','https://codeforces.com/problemset/problem/345/E',3,3),(15002,'Chain Letter','https://codeforces.com/problemset/problem/345/D',2,3),(15003,'Counting Fridays','https://codeforces.com/problemset/problem/345/C',2,3),(15004,'Triskaidekaphobia','https://codeforces.com/problemset/problem/345/B',2,3),(15005,'Expecting Trouble','https://codeforces.com/problemset/problem/345/A',1,3),(15006,'Simple Molecules','https://codeforces.com/problemset/problem/344/B',1,3),(15007,'Magnets','https://codeforces.com/problemset/problem/344/A',1,3),(15008,'Pumping Stations','https://codeforces.com/problemset/problem/343/E',3,3),(15009,'Water Tree','https://codeforces.com/problemset/problem/343/D',2,3),(15010,'Read Time','https://codeforces.com/problemset/problem/343/C',2,3),(15011,'Alternating Current','https://codeforces.com/problemset/problem/343/B',2,3),(15012,'Rational Resistance','https://codeforces.com/problemset/problem/343/A',2,3),(15013,'Xenia and Tree','https://codeforces.com/problemset/problem/342/E',2,3),(15014,'Xenia and Dominoes','https://codeforces.com/problemset/problem/342/D',2,3),(15015,'Cupboard and Balloons','https://codeforces.com/problemset/problem/342/C',2,3),(15016,'Xenia and Spies','https://codeforces.com/problemset/problem/342/B',1,3),(15017,'Xenia and Divisors','https://codeforces.com/problemset/problem/342/A',1,3),(15018,'Candies Game','https://codeforces.com/problemset/problem/341/E',3,3),(15019,'Iahub and Xors','https://codeforces.com/problemset/problem/341/D',2,3),(15020,'Iahub and Permutations','https://codeforces.com/problemset/problem/340/E',2,3),(15021,'Bubble Sort Graph','https://codeforces.com/problemset/problem/340/D',1,3),(15022,'Tourist Problem','https://codeforces.com/problemset/problem/340/C',2,3),(15023,'Maximal Area Quadrilateral','https://codeforces.com/problemset/problem/340/B',2,3),(15024,'The Wall','https://codeforces.com/problemset/problem/340/A',1,3),(15025,'Three Swaps','https://codeforces.com/problemset/problem/339/E',3,3),(15026,'Xenia and Bit Operations','https://codeforces.com/problemset/problem/339/D',2,3),(15027,'Xenia and Weights','https://codeforces.com/problemset/problem/339/C',2,3),(15028,'Xenia and Ringroad','https://codeforces.com/problemset/problem/339/B',1,3),(15029,'Helpful Maths','https://codeforces.com/problemset/problem/339/A',1,3),(15030,'Optimize!','https://codeforces.com/problemset/problem/338/E',3,3),(15031,'GCD Table','https://codeforces.com/problemset/problem/338/D',3,3),(15032,'Divisor Tree','https://codeforces.com/problemset/problem/337/E',2,3),(15033,'Book of Evil','https://codeforces.com/problemset/problem/337/D',2,3),(15034,'Quiz','https://codeforces.com/problemset/problem/337/C',2,3),(15035,'Routine Problem','https://codeforces.com/problemset/problem/337/B',1,3),(15036,'Puzzles','https://codeforces.com/problemset/problem/337/A',1,3),(15037,'Vasily the Bear and Painting Square','https://codeforces.com/problemset/problem/336/E',3,3),(15038,'Vasily the Bear and Beautiful Strings','https://codeforces.com/problemset/problem/336/D',2,3),(15039,'Vasily the Bear and Sequence','https://codeforces.com/problemset/problem/336/C',2,3),(15040,'Vasily the Bear and Fly','https://codeforces.com/problemset/problem/336/B',2,3),(15041,'Vasily the Bear and Triangle','https://codeforces.com/problemset/problem/336/A',1,3),(15042,'Buy One, Get One Free','https://codeforces.com/problemset/problem/335/F',3,3),(15043,'Counting Skyscrapers','https://codeforces.com/problemset/problem/335/E',3,3),(15044,'Rectangles and Square','https://codeforces.com/problemset/problem/335/D',2,3),(15045,'More Reclamation','https://codeforces.com/problemset/problem/335/C',2,3),(15046,'Palindrome','https://codeforces.com/problemset/problem/335/B',2,3),(15047,'Banana','https://codeforces.com/problemset/problem/335/A',1,3),(15048,'Eight Point Sets','https://codeforces.com/problemset/problem/334/B',1,3),(15049,'Candy Bags','https://codeforces.com/problemset/problem/334/A',1,3),(15050,'Summer Earnings','https://codeforces.com/problemset/problem/333/E',2,3),(15051,'Characteristics of Rectangles','https://codeforces.com/problemset/problem/333/D',2,3),(15052,'Lucky Tickets','https://codeforces.com/problemset/problem/333/C',3,3),(15053,'Chips','https://codeforces.com/problemset/problem/333/B',2,3),(15054,'Secrets','https://codeforces.com/problemset/problem/333/A',2,3),(15055,'Binary Key','https://codeforces.com/problemset/problem/332/E',2,3),(15056,'Theft of Blueprints','https://codeforces.com/problemset/problem/332/D',2,3),(15057,'Students\' Revenge','https://codeforces.com/problemset/problem/332/C',2,3),(15058,'Maximum Absurdity','https://codeforces.com/problemset/problem/332/B',1,3),(15059,'Down the Hatch!','https://codeforces.com/problemset/problem/332/A',1,3),(15060,'Deja Vu','https://codeforces.com/problemset/problem/331/E2',3,3),(15061,'Deja Vu','https://codeforces.com/problemset/problem/331/E1',3,3),(15062,'Escaping on Beaveractor','https://codeforces.com/problemset/problem/331/D3',3,3),(15063,'Escaping on Beaveractor','https://codeforces.com/problemset/problem/331/D2',3,3),(15064,'Escaping on Beaveractor','https://codeforces.com/problemset/problem/331/D1',2,3),(15065,'The Great Julya Calendar','https://codeforces.com/problemset/problem/331/C3',2,3),(15066,'The Great Julya Calendar','https://codeforces.com/problemset/problem/331/C2',2,3),(15067,'The Great Julya Calendar','https://codeforces.com/problemset/problem/331/C1',1,3),(15068,'Shave Beaver!','https://codeforces.com/problemset/problem/331/B2',2,3),(15069,'Shave Beaver!','https://codeforces.com/problemset/problem/331/B1',2,3),(15070,'Oh Sweet Beaverette','https://codeforces.com/problemset/problem/331/A2',1,3),(15071,'Oh Sweet Beaverette','https://codeforces.com/problemset/problem/331/A1',1,3),(15072,'Road Construction','https://codeforces.com/problemset/problem/330/B',1,3),(15073,'Cakeminator','https://codeforces.com/problemset/problem/330/A',1,3),(15074,'Evil','https://codeforces.com/problemset/problem/329/E',3,3),(15075,'The Evil Temple and the Moving Rocks','https://codeforces.com/problemset/problem/329/D',2,3),(15076,'Graph Reconstruction','https://codeforces.com/problemset/problem/329/C',2,3),(15077,'Biridian Forest','https://codeforces.com/problemset/problem/329/B',1,3),(15078,'Purification','https://codeforces.com/problemset/problem/329/A',1,3),(15079,'Sheldon and Ice Pieces','https://codeforces.com/problemset/problem/328/B',1,3),(15080,'IQ Test','https://codeforces.com/problemset/problem/328/A',2,3),(15081,'Axis Walking','https://codeforces.com/problemset/problem/327/E',2,3),(15082,'Block Tower','https://codeforces.com/problemset/problem/327/D',2,3),(15083,'Magic Five','https://codeforces.com/problemset/problem/327/C',2,3),(15084,'Hungry Sequence','https://codeforces.com/problemset/problem/327/B',1,3),(15085,'Flipping Game','https://codeforces.com/problemset/problem/327/A',1,3),(15086,'The Red Button','https://codeforces.com/problemset/problem/325/E',3,3),(15087,'Reclamation','https://codeforces.com/problemset/problem/325/D',3,3),(15088,'Monsters and Diamonds','https://codeforces.com/problemset/problem/325/C',3,3),(15089,'Stadium and Games','https://codeforces.com/problemset/problem/325/B',2,3),(15090,'Square and Rectangles','https://codeforces.com/problemset/problem/325/A',1,3),(15091,'Two permutations','https://codeforces.com/problemset/problem/323/C',2,3),(15092,'Tournament-graph','https://codeforces.com/problemset/problem/323/B',2,3),(15093,'Black-and-White Cube','https://codeforces.com/problemset/problem/323/A',2,3),(15094,'Ciel and Flowers','https://codeforces.com/problemset/problem/322/B',2,3),(15095,'Ciel and Dancing','https://codeforces.com/problemset/problem/322/A',1,3),(15096,'Ciel and Gondolas','https://codeforces.com/problemset/problem/321/E',3,3),(15097,'Ciel and Flipboard','https://codeforces.com/problemset/problem/321/D',3,3),(15098,'Ciel the Commander','https://codeforces.com/problemset/problem/321/C',2,3),(15099,'Ciel and Duel','https://codeforces.com/problemset/problem/321/B',2,3),(15100,'Ciel and Robot','https://codeforces.com/problemset/problem/321/A',2,3),(15101,'Ping-Pong (Easy Version)','https://codeforces.com/problemset/problem/320/B',1,3),(15102,'Magic Numbers','https://codeforces.com/problemset/problem/320/A',1,3),(15103,'Ping-Pong','https://codeforces.com/problemset/problem/319/E',3,3),(15104,'Have You Ever Heard About the Word?','https://codeforces.com/problemset/problem/319/D',3,3),(15105,'Kalila and Dimna in the Logging Industry','https://codeforces.com/problemset/problem/319/C',2,3),(15106,'Psychos in a Line','https://codeforces.com/problemset/problem/319/B',2,3),(15107,'Malek Dance Club','https://codeforces.com/problemset/problem/319/A',2,3),(15108,'Strings of Power','https://codeforces.com/problemset/problem/318/B',1,3),(15109,'Even Odds','https://codeforces.com/problemset/problem/318/A',1,3),(15110,'Princess and Her Shadow','https://codeforces.com/problemset/problem/317/E',3,3),(15111,'Game with Powers','https://codeforces.com/problemset/problem/317/D',2,3),(15112,'Balance','https://codeforces.com/problemset/problem/317/C',2,3),(15113,'Ants','https://codeforces.com/problemset/problem/317/B',2,3),(15114,'Perfect Pair','https://codeforces.com/problemset/problem/317/A',2,3),(15115,'Good Substrings','https://codeforces.com/problemset/problem/316/G3',2,3),(15116,'Good Substrings','https://codeforces.com/problemset/problem/316/G2',2,3),(15117,'Good Substrings','https://codeforces.com/problemset/problem/316/G1',2,3),(15118,'Suns and Rays','https://codeforces.com/problemset/problem/316/F3',2,3),(15119,'Suns and Rays','https://codeforces.com/problemset/problem/316/F2',2,3),(15120,'Suns and Rays','https://codeforces.com/problemset/problem/316/F1',2,3),(15121,'Summer Homework','https://codeforces.com/problemset/problem/316/E3',2,3),(15122,'Summer Homework','https://codeforces.com/problemset/problem/316/E2',2,3),(15123,'Summer Homework','https://codeforces.com/problemset/problem/316/E1',1,3),(15124,'PE Lesson','https://codeforces.com/problemset/problem/316/D3',2,3),(15125,'PE Lesson','https://codeforces.com/problemset/problem/316/D2',2,3),(15126,'PE Lesson','https://codeforces.com/problemset/problem/316/D1',2,3),(15127,'Tidying Up','https://codeforces.com/problemset/problem/316/C2',2,3),(15128,'Tidying Up','https://codeforces.com/problemset/problem/316/C1',2,3),(15129,'EKG','https://codeforces.com/problemset/problem/316/B2',2,3),(15130,'EKG','https://codeforces.com/problemset/problem/316/B1',1,3),(15131,'Special Task','https://codeforces.com/problemset/problem/316/A2',1,3),(15132,'Special Task','https://codeforces.com/problemset/problem/316/A1',1,3),(15133,'Sereja and Array','https://codeforces.com/problemset/problem/315/B',1,3),(15134,'Sereja and Bottles','https://codeforces.com/problemset/problem/315/A',1,3),(15135,'Sereja and Squares','https://codeforces.com/problemset/problem/314/E',3,3),(15136,'Sereja and Straight Lines','https://codeforces.com/problemset/problem/314/D',2,3),(15137,'Sereja and Subsequences','https://codeforces.com/problemset/problem/314/C',2,3),(15138,'Sereja and Periods','https://codeforces.com/problemset/problem/314/B',2,3),(15139,'Sereja and Contest','https://codeforces.com/problemset/problem/314/A',2,3),(15140,'Ilya and Two Numbers','https://codeforces.com/problemset/problem/313/E',2,3),(15141,'Ilya and Roads','https://codeforces.com/problemset/problem/313/D',2,3),(15142,'Ilya and Matrix','https://codeforces.com/problemset/problem/313/C',1,3),(15143,'Ilya and Queries','https://codeforces.com/problemset/problem/313/B',1,3),(15144,'Ilya and Bank Account','https://codeforces.com/problemset/problem/313/A',1,3),(15145,'Archer','https://codeforces.com/problemset/problem/312/B',1,3),(15146,'Whose sentence is it?','https://codeforces.com/problemset/problem/312/A',1,3),(15147,'Biologist','https://codeforces.com/problemset/problem/311/E',2,3),(15148,'Interval Cubing','https://codeforces.com/problemset/problem/311/D',3,3),(15149,'Fetch the Treasure','https://codeforces.com/problemset/problem/311/C',2,3),(15150,'Cats Transport','https://codeforces.com/problemset/problem/311/B',2,3),(15151,'The Closest Pair','https://codeforces.com/problemset/problem/311/A',1,3),(15152,'Sheep','https://codeforces.com/problemset/problem/309/E',3,3),(15153,'Tennis Rackets','https://codeforces.com/problemset/problem/309/D',3,3),(15154,'Memory for Arrays','https://codeforces.com/problemset/problem/309/C',2,3),(15155,'Context Advertising','https://codeforces.com/problemset/problem/309/B',2,3),(15156,'Morning run','https://codeforces.com/problemset/problem/309/A',2,3),(15157,'Polygon','https://codeforces.com/problemset/problem/306/D',2,3),(15158,'White, Black and White Again','https://codeforces.com/problemset/problem/306/C',2,3),(15159,'Optimizer','https://codeforces.com/problemset/problem/306/B',2,3),(15160,'Candies','https://codeforces.com/problemset/problem/306/A',1,3),(15161,'Playing with String','https://codeforces.com/problemset/problem/305/E',2,3),(15162,'Olya and Graph','https://codeforces.com/problemset/problem/305/D',2,3),(15163,'Ivan and Powers of Two','https://codeforces.com/problemset/problem/305/C',2,3),(15164,'Continued Fractions','https://codeforces.com/problemset/problem/305/B',2,3),(15165,'Strange Addition','https://codeforces.com/problemset/problem/305/A',2,3),(15166,'Calendar','https://codeforces.com/problemset/problem/304/B',1,3),(15167,'Pythagorean Theorem II','https://codeforces.com/problemset/problem/304/A',1,3),(15168,'Random Ranking','https://codeforces.com/problemset/problem/303/E',3,3),(15169,'Rotatable Number','https://codeforces.com/problemset/problem/303/D',3,3),(15170,'Minimum Modular','https://codeforces.com/problemset/problem/303/C',2,3),(15171,'Rectangle Puzzle II','https://codeforces.com/problemset/problem/303/B',2,3),(15172,'Lucky Permutation Triple','https://codeforces.com/problemset/problem/303/A',1,3),(15173,'Eugeny and Play List','https://codeforces.com/problemset/problem/302/B',1,3),(15174,'Eugeny and Array','https://codeforces.com/problemset/problem/302/A',1,3),(15175,'Yaroslav and Arrangements','https://codeforces.com/problemset/problem/301/E',3,3),(15176,'Yaroslav and Divisors','https://codeforces.com/problemset/problem/301/D',2,3),(15177,'Yaroslav and Algorithm','https://codeforces.com/problemset/problem/301/C',2,3),(15178,'Yaroslav and Time','https://codeforces.com/problemset/problem/301/B',2,3),(15179,'Yaroslav and Sequence','https://codeforces.com/problemset/problem/301/A',2,3),(15180,'Empire Strikes Back','https://codeforces.com/problemset/problem/300/E',2,3),(15181,'Painting Square','https://codeforces.com/problemset/problem/300/D',2,3),(15182,'Beautiful Numbers','https://codeforces.com/problemset/problem/300/C',2,3),(15183,'Coach','https://codeforces.com/problemset/problem/300/B',1,3),(15184,'Array','https://codeforces.com/problemset/problem/300/A',1,3),(15185,'Ksusha the Squirrel','https://codeforces.com/problemset/problem/299/B',1,3),(15186,'Ksusha and Array','https://codeforces.com/problemset/problem/299/A',1,3),(15187,'Sail','https://codeforces.com/problemset/problem/298/B',1,3),(15188,'Snow Footprints','https://codeforces.com/problemset/problem/298/A',1,3),(15189,'Mystic Carvings','https://codeforces.com/problemset/problem/297/E',3,3),(15190,'Color the Carpet','https://codeforces.com/problemset/problem/297/D',2,3),(15191,'Splitting the Uniqueness','https://codeforces.com/problemset/problem/297/C',2,3),(15192,'Fish Weight','https://codeforces.com/problemset/problem/297/B',2,3),(15193,'Parity Game','https://codeforces.com/problemset/problem/297/A',2,3),(15194,'Yaroslav and Two Strings','https://codeforces.com/problemset/problem/296/B',2,3),(15195,'Yaroslav and Permutations','https://codeforces.com/problemset/problem/296/A',1,3),(15196,'Yaroslav and Points','https://codeforces.com/problemset/problem/295/E',2,3),(15197,'Greg and Caves','https://codeforces.com/problemset/problem/295/D',2,3),(15198,'Greg and Friends','https://codeforces.com/problemset/problem/295/C',2,3),(15199,'Greg and Graph','https://codeforces.com/problemset/problem/295/B',2,3),(15200,'Greg and Array','https://codeforces.com/problemset/problem/295/A',1,3),(15201,'Shaass the Great','https://codeforces.com/problemset/problem/294/E',2,3),(15202,'Shaass and Painter Robot','https://codeforces.com/problemset/problem/294/D',2,3),(15203,'Shaass and Lights','https://codeforces.com/problemset/problem/294/C',2,3),(15204,'Shaass and Bookshelf','https://codeforces.com/problemset/problem/294/B',2,3),(15205,'Shaass and Oskols','https://codeforces.com/problemset/problem/294/A',1,3),(15206,'Close Vertices','https://codeforces.com/problemset/problem/293/E',3,3),(15207,'Ksusha and Square','https://codeforces.com/problemset/problem/293/D',3,3),(15208,'Cube Problem','https://codeforces.com/problemset/problem/293/C',2,3),(15209,'Distinct Paths','https://codeforces.com/problemset/problem/293/B',3,3),(15210,'Weird Game','https://codeforces.com/problemset/problem/293/A',1,3),(15211,'Copying Data','https://codeforces.com/problemset/problem/292/E',2,3),(15212,'Connected Components','https://codeforces.com/problemset/problem/292/D',2,3),(15213,'Beautiful IP Addresses','https://codeforces.com/problemset/problem/292/C',2,3),(15214,'Network Topology','https://codeforces.com/problemset/problem/292/B',1,3),(15215,'SMSC','https://codeforces.com/problemset/problem/292/A',1,3),(15216,'Tree-String Problem','https://codeforces.com/problemset/problem/291/E',2,3),(15217,'Parallel Programming','https://codeforces.com/problemset/problem/291/D',2,3),(15218,'Network Mask','https://codeforces.com/problemset/problem/291/C',2,3),(15219,'Command Line Arguments','https://codeforces.com/problemset/problem/291/B',1,3),(15220,'Spyke Talks','https://codeforces.com/problemset/problem/291/A',1,3),(15221,'Greedy Petya','https://codeforces.com/problemset/problem/290/F',3,3),(15222,'HQ','https://codeforces.com/problemset/problem/290/E',2,3),(15223,'Orange','https://codeforces.com/problemset/problem/290/D',1,3),(15224,'WTF?','https://codeforces.com/problemset/problem/290/C',2,3),(15225,'QR code','https://codeforces.com/problemset/problem/290/B',1,3),(15226,'Mysterious strings','https://codeforces.com/problemset/problem/290/A',1,3),(15227,'Polo the Penguin and Matrix','https://codeforces.com/problemset/problem/289/B',1,3),(15228,'Polo the Penguin and Segments ','https://codeforces.com/problemset/problem/289/A',1,3),(15229,'Polo the Penguin and Lucky Numbers','https://codeforces.com/problemset/problem/288/E',3,3),(15230,'Polo the Penguin and Trees ','https://codeforces.com/problemset/problem/288/D',2,3),(15231,'Polo the Penguin and XOR operation','https://codeforces.com/problemset/problem/288/C',2,3),(15232,'Polo the Penguin and Houses ','https://codeforces.com/problemset/problem/288/B',1,3),(15233,'Polo the Penguin and Strings','https://codeforces.com/problemset/problem/288/A',1,3),(15234,'Pipeline','https://codeforces.com/problemset/problem/287/B',2,3),(15235,'IQ Test','https://codeforces.com/problemset/problem/287/A',1,3),(15236,'Ladies\' Shop','https://codeforces.com/problemset/problem/286/E',3,3),(15237,'Tourists','https://codeforces.com/problemset/problem/286/D',3,3),(15238,'Main Sequence','https://codeforces.com/problemset/problem/286/C',2,3),(15239,'Shifting','https://codeforces.com/problemset/problem/286/B',2,3),(15240,'Lucky Permutation','https://codeforces.com/problemset/problem/286/A',1,3),(15241,'Positions in Permutations','https://codeforces.com/problemset/problem/285/E',3,3),(15242,'Permutation Sum','https://codeforces.com/problemset/problem/285/D',2,3),(15243,'Building Permutation','https://codeforces.com/problemset/problem/285/C',1,3),(15244,'Find Marble','https://codeforces.com/problemset/problem/285/B',1,3),(15245,'Slightly Decreasing Permutations','https://codeforces.com/problemset/problem/285/A',1,3),(15246,'Cows and Poker Game','https://codeforces.com/problemset/problem/284/B',1,3),(15247,'Cows and Primitive Roots','https://codeforces.com/problemset/problem/284/A',1,3),(15248,'Cow Tennis Tournament','https://codeforces.com/problemset/problem/283/E',3,3),(15249,'Cows and Cool Sequences','https://codeforces.com/problemset/problem/283/D',2,3),(15250,'Coin Troubles','https://codeforces.com/problemset/problem/283/C',2,3),(15251,'Cow Program','https://codeforces.com/problemset/problem/283/B',2,3),(15252,'Cows and Sequence','https://codeforces.com/problemset/problem/283/A',2,3),(15253,'Sausage Maximization','https://codeforces.com/problemset/problem/282/E',2,3),(15254,'Yet Another Number Game','https://codeforces.com/problemset/problem/282/D',2,3),(15255,'XOR and OR','https://codeforces.com/problemset/problem/282/C',1,3),(15256,'Painting Eggs','https://codeforces.com/problemset/problem/282/B',1,3),(15257,'Bit++','https://codeforces.com/problemset/problem/282/A',1,3),(15258,'Nearest Fraction','https://codeforces.com/problemset/problem/281/B',2,3),(15259,'Word Capitalization','https://codeforces.com/problemset/problem/281/A',1,3),(15260,'Sequence Transformation','https://codeforces.com/problemset/problem/280/E',3,3),(15261,'k-Maximum Subsequence Sum','https://codeforces.com/problemset/problem/280/D',3,3),(15262,'Game on Tree','https://codeforces.com/problemset/problem/280/C',2,3),(15263,'Maximum Xor Secondary','https://codeforces.com/problemset/problem/280/B',2,3),(15264,'Rectangle Puzzle','https://codeforces.com/problemset/problem/280/A',2,3),(15265,'Beautiful Decomposition','https://codeforces.com/problemset/problem/279/E',2,3),(15266,'The Minimum Number of Variables','https://codeforces.com/problemset/problem/279/D',2,3),(15267,'Ladder','https://codeforces.com/problemset/problem/279/C',2,3),(15268,'Books','https://codeforces.com/problemset/problem/279/B',1,3),(15269,'Point on Spiral','https://codeforces.com/problemset/problem/279/A',1,3),(15270,'New Problem','https://codeforces.com/problemset/problem/278/B',1,3),(15271,'Circle Line','https://codeforces.com/problemset/problem/278/A',1,3),(15272,'Binary Tree on Plane','https://codeforces.com/problemset/problem/277/E',2,3),(15273,'Google Code Jam','https://codeforces.com/problemset/problem/277/D',3,3),(15274,'Game','https://codeforces.com/problemset/problem/277/C',2,3),(15275,'Set of Points','https://codeforces.com/problemset/problem/277/B',2,3),(15276,'Learning Languages','https://codeforces.com/problemset/problem/277/A',1,3),(15277,'Little Girl and Problem on Trees','https://codeforces.com/problemset/problem/276/E',2,3),(15278,'Little Girl and Maximum XOR','https://codeforces.com/problemset/problem/276/D',2,3),(15279,'Little Girl and Maximum Sum','https://codeforces.com/problemset/problem/276/C',1,3),(15280,'Little Girl and Game','https://codeforces.com/problemset/problem/276/B',1,3),(15281,'Lunch Rush','https://codeforces.com/problemset/problem/276/A',1,3),(15282,'Convex Shape','https://codeforces.com/problemset/problem/275/B',2,3),(15283,'Lights Out','https://codeforces.com/problemset/problem/275/A',1,3),(15284,'Mirror Room','https://codeforces.com/problemset/problem/274/E',3,3),(15285,'Lovely Matrix','https://codeforces.com/problemset/problem/274/D',2,3),(15286,'The Last Hole!','https://codeforces.com/problemset/problem/274/C',3,3),(15287,'Zero Tree','https://codeforces.com/problemset/problem/274/B',2,3),(15288,'k-Multiple Free Set','https://codeforces.com/problemset/problem/274/A',1,3),(15289,'Dima and Game','https://codeforces.com/problemset/problem/273/E',3,3),(15290,'Dima and Figure','https://codeforces.com/problemset/problem/273/D',2,3),(15291,'Dima and Horses','https://codeforces.com/problemset/problem/272/E',2,3),(15292,'Dima and Two Sequences','https://codeforces.com/problemset/problem/272/D',2,3),(15293,'Dima and Staircase','https://codeforces.com/problemset/problem/272/C',1,3),(15294,'Dima and Sequence','https://codeforces.com/problemset/problem/272/B',1,3),(15295,'Dima and Friends','https://codeforces.com/problemset/problem/272/A',1,3),(15296,'Three Horses','https://codeforces.com/problemset/problem/271/E',2,3),(15297,'Good Substrings','https://codeforces.com/problemset/problem/271/D',2,3),(15298,'Secret','https://codeforces.com/problemset/problem/271/C',1,3),(15299,'Prime Matrix','https://codeforces.com/problemset/problem/271/B',1,3),(15300,'Beautiful Year','https://codeforces.com/problemset/problem/271/A',1,3),(15301,'Multithreading','https://codeforces.com/problemset/problem/270/B',1,3),(15302,'Fancy Fence','https://codeforces.com/problemset/problem/270/A',1,3),(15303,'String Theory','https://codeforces.com/problemset/problem/269/E',3,3),(15304,'Maximum Waterfall','https://codeforces.com/problemset/problem/269/D',3,3),(15305,'Flawed Flow','https://codeforces.com/problemset/problem/269/C',2,3),(15306,'Greenhouse Effect','https://codeforces.com/problemset/problem/269/B',2,3),(15307,'Magical Boxes','https://codeforces.com/problemset/problem/269/A',2,3),(15308,'Playlist','https://codeforces.com/problemset/problem/268/E',2,3),(15309,'Wall Bars','https://codeforces.com/problemset/problem/268/D',2,3),(15310,'Beautiful Sets of Points','https://codeforces.com/problemset/problem/268/C',1,3),(15311,'Buttons','https://codeforces.com/problemset/problem/268/B',1,3),(15312,'Games','https://codeforces.com/problemset/problem/268/A',1,3),(15313,'Berland Traffic','https://codeforces.com/problemset/problem/267/C',3,3),(15314,'Dominoes','https://codeforces.com/problemset/problem/267/B',2,3),(15315,'Subtractions','https://codeforces.com/problemset/problem/267/A',1,3),(15316,'More Queries to Array...','https://codeforces.com/problemset/problem/266/E',2,3),(15317,'BerDonalds','https://codeforces.com/problemset/problem/266/D',2,3),(15318,'Below the Diagonal','https://codeforces.com/problemset/problem/266/C',2,3),(15319,'Queue at the School','https://codeforces.com/problemset/problem/266/B',1,3),(15320,'Stones on the Table','https://codeforces.com/problemset/problem/266/A',1,3),(15321,'Roadside Trees (Simplified Edition)','https://codeforces.com/problemset/problem/265/B',1,3),(15322,'Colorful Stones (Simplified Edition)','https://codeforces.com/problemset/problem/265/A',1,3),(15323,'Roadside Trees','https://codeforces.com/problemset/problem/264/E',3,3),(15324,'Colorful Stones','https://codeforces.com/problemset/problem/264/D',2,3),(15325,'Choosing Balls','https://codeforces.com/problemset/problem/264/C',2,3),(15326,'Good Sequences','https://codeforces.com/problemset/problem/264/B',1,3),(15327,'Escape from Stones','https://codeforces.com/problemset/problem/264/A',1,3),(15328,'Rhombus','https://codeforces.com/problemset/problem/263/E',2,3),(15329,'Cycle in Graph','https://codeforces.com/problemset/problem/263/D',2,3),(15330,'Circle of Numbers','https://codeforces.com/problemset/problem/263/C',2,3),(15331,'Squares','https://codeforces.com/problemset/problem/263/B',1,3),(15332,'Beautiful Matrix','https://codeforces.com/problemset/problem/263/A',1,3),(15333,'Roma and Changing Signs','https://codeforces.com/problemset/problem/262/B',1,3),(15334,'Roma and Lucky Numbers','https://codeforces.com/problemset/problem/262/A',1,3),(15335,'Maxim and Calculator','https://codeforces.com/problemset/problem/261/E',3,3),(15336,'Maxim and Increasing Subsequence','https://codeforces.com/problemset/problem/261/D',3,3),(15337,'Maxim and Matrix','https://codeforces.com/problemset/problem/261/C',2,3),(15338,'Maxim and Restaurant','https://codeforces.com/problemset/problem/261/B',2,3),(15339,'Maxim and Discounts','https://codeforces.com/problemset/problem/261/A',1,3),(15340,'Dividing Kingdom','https://codeforces.com/problemset/problem/260/E',2,3),(15341,'Black and White Tree','https://codeforces.com/problemset/problem/260/D',2,3),(15342,'Balls and Boxes','https://codeforces.com/problemset/problem/260/C',2,3),(15343,'Ancient Prophesy','https://codeforces.com/problemset/problem/260/B',2,3),(15344,'Adding Digits','https://codeforces.com/problemset/problem/260/A',1,3),(15345,'Little Elephant and Magic Square','https://codeforces.com/problemset/problem/259/B',1,3),(15346,'Little Elephant and Chess','https://codeforces.com/problemset/problem/259/A',1,3),(15347,'Little Elephant and Tree','https://codeforces.com/problemset/problem/258/E',2,3),(15348,'Little Elephant and Broken Sorting','https://codeforces.com/problemset/problem/258/D',3,3),(15349,'Little Elephant and LCM','https://codeforces.com/problemset/problem/258/C',2,3),(15350,'Little Elephant and Elections','https://codeforces.com/problemset/problem/258/B',2,3),(15351,'Little Elephant and Bits','https://codeforces.com/problemset/problem/258/A',1,3),(15352,'Greedy Elevator','https://codeforces.com/problemset/problem/257/E',2,3),(15353,'Sum','https://codeforces.com/problemset/problem/257/D',2,3),(15354,'View Angle','https://codeforces.com/problemset/problem/257/C',2,3),(15355,'Playing Cubes','https://codeforces.com/problemset/problem/257/B',1,3),(15356,'Sockets','https://codeforces.com/problemset/problem/257/A',1,3),(15357,'Lucky Arrays','https://codeforces.com/problemset/problem/256/E',2,3),(15358,'Liars and Serge','https://codeforces.com/problemset/problem/256/D',3,3),(15359,'Furlo and Rublo and Game','https://codeforces.com/problemset/problem/255/E',2,3),(15360,'Mr. Bender and Square','https://codeforces.com/problemset/problem/255/D',2,3),(15361,'Almost Arithmetical Progression','https://codeforces.com/problemset/problem/255/C',1,3),(15362,'Code Parsing','https://codeforces.com/problemset/problem/255/B',1,3),(15363,'Greg\'s Workout','https://codeforces.com/problemset/problem/255/A',1,3),(15364,'Dormitory','https://codeforces.com/problemset/problem/254/E',2,3),(15365,'Rats','https://codeforces.com/problemset/problem/254/D',2,3),(15366,'Anagram','https://codeforces.com/problemset/problem/254/C',2,3),(15367,'Jury Size','https://codeforces.com/problemset/problem/254/B',1,3),(15368,'Cards with Numbers','https://codeforces.com/problemset/problem/254/A',1,3),(15369,'Printer','https://codeforces.com/problemset/problem/253/E',2,3),(15370,'Table with Letters - 2','https://codeforces.com/problemset/problem/253/D',2,3),(15371,'Text Editor','https://codeforces.com/problemset/problem/253/C',2,3),(15372,'Physics Practical','https://codeforces.com/problemset/problem/253/B',1,3),(15373,'Boys and Girls','https://codeforces.com/problemset/problem/253/A',1,3),(15374,'Unsorting Array','https://codeforces.com/problemset/problem/252/B',2,3),(15375,'Little Xor','https://codeforces.com/problemset/problem/252/A',1,3),(15376,'Tree and Table','https://codeforces.com/problemset/problem/251/E',3,3),(15377,'Two Sets','https://codeforces.com/problemset/problem/251/D',3,3),(15378,'Number Transformation','https://codeforces.com/problemset/problem/251/C',2,3),(15379,'Playing with Permutations','https://codeforces.com/problemset/problem/251/B',2,3),(15380,'Points on Line','https://codeforces.com/problemset/problem/251/A',1,3),(15381,'Mad Joe','https://codeforces.com/problemset/problem/250/E',2,3),(15382,'Building Bridge','https://codeforces.com/problemset/problem/250/D',2,3),(15383,'Movie Critics','https://codeforces.com/problemset/problem/250/C',2,3),(15384,'Restoring IPv6','https://codeforces.com/problemset/problem/250/B',1,3),(15385,'Paper Work','https://codeforces.com/problemset/problem/250/A',1,3),(15386,'Endless Matrix','https://codeforces.com/problemset/problem/249/E',3,3),(15387,'Donkey and Stars','https://codeforces.com/problemset/problem/249/D',3,3),(15388,'Piglet\'s Birthday','https://codeforces.com/problemset/problem/248/E',3,3),(15389,'Sweets for Everyone!','https://codeforces.com/problemset/problem/248/D',2,3),(15390,'Robo-Footballer','https://codeforces.com/problemset/problem/248/C',2,3),(15391,'Chilly Willy','https://codeforces.com/problemset/problem/248/B',1,3),(15392,'Cupboards','https://codeforces.com/problemset/problem/248/A',1,3),(15393,'Blood Cousins Return','https://codeforces.com/problemset/problem/246/E',2,3),(15394,'Colorful Graph','https://codeforces.com/problemset/problem/246/D',2,3),(15395,'Beauty Pageant','https://codeforces.com/problemset/problem/246/C',2,3),(15396,'Increase and Decrease','https://codeforces.com/problemset/problem/246/B',1,3),(15397,'Buggy Sorting','https://codeforces.com/problemset/problem/246/A',1,3),(15398,'Queries for Number of Palindromes','https://codeforces.com/problemset/problem/245/H',2,3),(15399,'Suggested Friends','https://codeforces.com/problemset/problem/245/G',2,3),(15400,'Log Stream Analysis','https://codeforces.com/problemset/problem/245/F',2,3),(15401,'Mishap in Club','https://codeforces.com/problemset/problem/245/E',1,3),(15402,'Restoring Table','https://codeforces.com/problemset/problem/245/D',1,3),(15403,'Game with Coins','https://codeforces.com/problemset/problem/245/C',2,3),(15404,'Internet Address','https://codeforces.com/problemset/problem/245/B',1,3),(15405,'System Administrator','https://codeforces.com/problemset/problem/245/A',1,3),(15406,'Undoubtedly Lucky Numbers','https://codeforces.com/problemset/problem/244/B',2,3),(15407,'Dividing Orange','https://codeforces.com/problemset/problem/244/A',1,3),(15408,'Matrix','https://codeforces.com/problemset/problem/243/E',3,3),(15409,'Cubes','https://codeforces.com/problemset/problem/243/D',3,3),(15410,'Colorado Potato Beetle','https://codeforces.com/problemset/problem/243/C',2,3),(15411,'Hydra','https://codeforces.com/problemset/problem/243/B',2,3),(15412,'The Brand New Function','https://codeforces.com/problemset/problem/243/A',2,3),(15413,'XOR on Segment','https://codeforces.com/problemset/problem/242/E',2,3),(15414,'Dispute','https://codeforces.com/problemset/problem/242/D',2,3),(15415,'King\'s Path','https://codeforces.com/problemset/problem/242/C',2,3),(15416,'Big Segment','https://codeforces.com/problemset/problem/242/B',1,3),(15417,'Heads or Tails','https://codeforces.com/problemset/problem/242/A',1,3),(15418,'Challenging Balloons','https://codeforces.com/problemset/problem/241/G',2,3),(15419,'Race','https://codeforces.com/problemset/problem/241/F',2,3),(15420,'Flights','https://codeforces.com/problemset/problem/241/E',3,3),(15421,'Numbers','https://codeforces.com/problemset/problem/241/D',3,3),(15422,'Mirror Box','https://codeforces.com/problemset/problem/241/C',2,3),(15423,'Friends','https://codeforces.com/problemset/problem/241/B',3,3),(15424,'Old Peykan','https://codeforces.com/problemset/problem/241/A',1,3),(15425,'TorCoder','https://codeforces.com/problemset/problem/240/F',3,3),(15426,'Road Repairs','https://codeforces.com/problemset/problem/240/E',3,3),(15427,'Easy Tape Programming','https://codeforces.com/problemset/problem/239/B',1,3),(15428,'Two Bags of Potatoes','https://codeforces.com/problemset/problem/239/A',1,3),(15429,'Meeting Her','https://codeforces.com/problemset/problem/238/E',3,3),(15430,'Tape Programming','https://codeforces.com/problemset/problem/238/D',3,3),(15431,'World Eater Brothers','https://codeforces.com/problemset/problem/238/C',2,3),(15432,'Boring Partition','https://codeforces.com/problemset/problem/238/B',2,3),(15433,'Not Wool Sequences','https://codeforces.com/problemset/problem/238/A',1,3),(15434,'Build String','https://codeforces.com/problemset/problem/237/E',2,3),(15435,'T-decomposition','https://codeforces.com/problemset/problem/237/D',2,3),(15436,'Primes on Interval','https://codeforces.com/problemset/problem/237/C',2,3),(15437,'Young Table','https://codeforces.com/problemset/problem/237/B',1,3),(15438,'Free Cash','https://codeforces.com/problemset/problem/237/A',1,3),(15439,'Easy Number Challenge','https://codeforces.com/problemset/problem/236/B',1,3),(15440,'Boy or Girl','https://codeforces.com/problemset/problem/236/A',1,3),(15441,'Number Challenge','https://codeforces.com/problemset/problem/235/E',3,3),(15442,'Graph Game','https://codeforces.com/problemset/problem/235/D',3,3),(15443,'Cyclical Quest','https://codeforces.com/problemset/problem/235/C',3,3),(15444,'Let\'s Play Osu!','https://codeforces.com/problemset/problem/235/B',2,3),(15445,'LCM Challenge','https://codeforces.com/problemset/problem/235/A',2,3),(15446,'Merging Two Decks','https://codeforces.com/problemset/problem/234/H',2,3),(15447,'Practice','https://codeforces.com/problemset/problem/234/G',2,3),(15448,'Fence','https://codeforces.com/problemset/problem/234/F',2,3),(15449,'Champions\' League','https://codeforces.com/problemset/problem/234/E',2,3),(15450,'Cinema','https://codeforces.com/problemset/problem/234/D',2,3),(15451,'Weather','https://codeforces.com/problemset/problem/234/C',1,3),(15452,'Reading','https://codeforces.com/problemset/problem/234/B',1,3),(15453,'Lefthanders and Righthanders ','https://codeforces.com/problemset/problem/234/A',1,3),(15454,'Non-square Equation','https://codeforces.com/problemset/problem/233/B',1,3),(15455,'Perfect Permutation','https://codeforces.com/problemset/problem/233/A',1,3),(15456,'Quick Tortoise','https://codeforces.com/problemset/problem/232/E',3,3),(15457,'Fence','https://codeforces.com/problemset/problem/232/D',3,3),(15458,'Doe Graphs','https://codeforces.com/problemset/problem/232/C',3,3),(15459,'Table','https://codeforces.com/problemset/problem/232/B',2,3),(15460,'Cycles','https://codeforces.com/problemset/problem/232/A',2,3),(15461,'Cactus','https://codeforces.com/problemset/problem/231/E',2,3),(15462,'Magic Box','https://codeforces.com/problemset/problem/231/D',2,3),(15463,'To Add or Not to Add','https://codeforces.com/problemset/problem/231/C',2,3),(15464,'Magic, Wizardry and Wonders','https://codeforces.com/problemset/problem/231/B',1,3),(15465,'Team','https://codeforces.com/problemset/problem/231/A',1,3),(15466,'T-primes','https://codeforces.com/problemset/problem/230/B',1,3),(15467,'Dragons','https://codeforces.com/problemset/problem/230/A',1,3),(15468,'Gifts','https://codeforces.com/problemset/problem/229/E',3,3),(15469,'Towers','https://codeforces.com/problemset/problem/229/D',2,3),(15470,'Triangles','https://codeforces.com/problemset/problem/229/C',2,3),(15471,'Planets','https://codeforces.com/problemset/problem/229/B',2,3),(15472,'Shifts','https://codeforces.com/problemset/problem/229/A',1,3),(15473,'The Road to Berland is Paved With Good Intentions','https://codeforces.com/problemset/problem/228/E',2,3),(15474,'Zigzag','https://codeforces.com/problemset/problem/228/D',2,3),(15475,'Fractal Detector','https://codeforces.com/problemset/problem/228/C',2,3),(15476,'Two Tables','https://codeforces.com/problemset/problem/228/B',1,3),(15477,'Is your horseshoe on the other hoof?','https://codeforces.com/problemset/problem/228/A',1,3),(15478,'Effective Approach','https://codeforces.com/problemset/problem/227/B',1,3),(15479,'Where do I Turn?','https://codeforces.com/problemset/problem/227/A',1,3),(15480,'Noble Knight\'s Path','https://codeforces.com/problemset/problem/226/E',3,3),(15481,'The table','https://codeforces.com/problemset/problem/226/D',2,3),(15482,'Anniversary','https://codeforces.com/problemset/problem/226/C',2,3),(15483,'Naughty Stone Piles','https://codeforces.com/problemset/problem/226/B',2,3),(15484,'Flying Saucer Segments','https://codeforces.com/problemset/problem/226/A',1,3),(15485,'Unsolvable','https://codeforces.com/problemset/problem/225/E',2,3),(15486,'Snake','https://codeforces.com/problemset/problem/225/D',2,3),(15487,'Barcode','https://codeforces.com/problemset/problem/225/C',2,3),(15488,'Well-known Numbers','https://codeforces.com/problemset/problem/225/B',2,3),(15489,'Dice Tower','https://codeforces.com/problemset/problem/225/A',1,3),(15490,'Array','https://codeforces.com/problemset/problem/224/B',1,3),(15491,'Parallelepiped','https://codeforces.com/problemset/problem/224/A',1,3),(15492,'Planar Graph','https://codeforces.com/problemset/problem/223/E',3,3),(15493,'Spider','https://codeforces.com/problemset/problem/223/D',3,3),(15494,'Partial Sums','https://codeforces.com/problemset/problem/223/C',2,3),(15495,'Two Strings','https://codeforces.com/problemset/problem/223/B',2,3),(15496,'Bracket Sequence','https://codeforces.com/problemset/problem/223/A',2,3),(15497,'Decoding Genome','https://codeforces.com/problemset/problem/222/E',2,3),(15498,'Olympiad','https://codeforces.com/problemset/problem/222/D',2,3),(15499,'Reducing Fractions','https://codeforces.com/problemset/problem/222/C',2,3),(15500,'Cosmic Tables','https://codeforces.com/problemset/problem/222/B',1,3),(15501,'Shooshuns and Sequence ','https://codeforces.com/problemset/problem/222/A',1,3),(15502,'Little Elephant and Numbers','https://codeforces.com/problemset/problem/221/B',1,3),(15503,'Little Elephant and Function','https://codeforces.com/problemset/problem/221/A',1,3),(15504,'Little Elephant and Inversions','https://codeforces.com/problemset/problem/220/E',2,3),(15505,'Little Elephant and Triangle','https://codeforces.com/problemset/problem/220/D',2,3),(15506,'Little Elephant and Shifts','https://codeforces.com/problemset/problem/220/C',2,3),(15507,'Little Elephant and Array','https://codeforces.com/problemset/problem/220/B',2,3),(15508,'Little Elephant and Problem','https://codeforces.com/problemset/problem/220/A',1,3),(15509,'Parking Lot','https://codeforces.com/problemset/problem/219/E',2,3),(15510,'Choosing Capital for Treeland','https://codeforces.com/problemset/problem/219/D',2,3),(15511,'Color Stripe','https://codeforces.com/problemset/problem/219/C',2,3),(15512,'Special Offer! Super Price 999 Bourles!','https://codeforces.com/problemset/problem/219/B',1,3),(15513,'k-String','https://codeforces.com/problemset/problem/219/A',1,3),(15514,'Airport','https://codeforces.com/problemset/problem/218/B',1,3),(15515,'Mountain Scenery','https://codeforces.com/problemset/problem/218/A',1,3),(15516,'Alien DNA','https://codeforces.com/problemset/problem/217/E',3,3),(15517,'Bitonix\' Patrol','https://codeforces.com/problemset/problem/217/D',3,3),(15518,'Formurosa','https://codeforces.com/problemset/problem/217/C',3,3),(15519,'Blackboard Fibonacci','https://codeforces.com/problemset/problem/217/B',2,3),(15520,'Ice Skating','https://codeforces.com/problemset/problem/217/A',1,3),(15521,'Martian Luck','https://codeforces.com/problemset/problem/216/E',2,3),(15522,'Spider\'s Web','https://codeforces.com/problemset/problem/216/D',2,3),(15523,'Hiring Staff','https://codeforces.com/problemset/problem/216/C',2,3),(15524,'Forming Teams','https://codeforces.com/problemset/problem/216/B',2,3),(15525,'Tiling with Hexagons','https://codeforces.com/problemset/problem/216/A',1,3),(15526,'Periodical Numbers','https://codeforces.com/problemset/problem/215/E',2,3),(15527,'Hot Days','https://codeforces.com/problemset/problem/215/D',2,3),(15528,'Crosses','https://codeforces.com/problemset/problem/215/C',2,3),(15529,'Olympic Medal','https://codeforces.com/problemset/problem/215/B',1,3),(15530,'Bicycle Chain','https://codeforces.com/problemset/problem/215/A',1,3),(15531,'Hometask','https://codeforces.com/problemset/problem/214/B',2,3),(15532,'System of Equations','https://codeforces.com/problemset/problem/214/A',1,3),(15533,'Two Permutations','https://codeforces.com/problemset/problem/213/E',3,3),(15534,'Stars','https://codeforces.com/problemset/problem/213/D',2,3),(15535,'Relay Race','https://codeforces.com/problemset/problem/213/C',2,3),(15536,'Numbers','https://codeforces.com/problemset/problem/213/B',2,3),(15537,'Game','https://codeforces.com/problemset/problem/213/A',2,3),(15538,'IT Restaurants','https://codeforces.com/problemset/problem/212/E',1,3),(15539,'Cutting a Fence','https://codeforces.com/problemset/problem/212/D',2,3),(15540,'Cowboys','https://codeforces.com/problemset/problem/212/C',2,3),(15541,'Polycarpus is Looking for Good Substrings','https://codeforces.com/problemset/problem/212/B',2,3),(15542,'Privatization','https://codeforces.com/problemset/problem/212/A',3,3),(15543,'Trails and Glades','https://codeforces.com/problemset/problem/209/C',2,3),(15544,'Pixels','https://codeforces.com/problemset/problem/209/B',2,3),(15545,'Multicolored Marbles','https://codeforces.com/problemset/problem/209/A',2,3),(15546,'Blood Cousins','https://codeforces.com/problemset/problem/208/E',2,3),(15547,'Prizes, Prizes, more Prizes','https://codeforces.com/problemset/problem/208/D',1,3),(15548,'Police Station','https://codeforces.com/problemset/problem/208/C',2,3),(15549,'Solitaire','https://codeforces.com/problemset/problem/208/B',2,3),(15550,'Dubstep','https://codeforces.com/problemset/problem/208/A',1,3),(15551,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D9',2,3),(15552,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D8',2,3),(15553,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D7',2,3),(15554,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D6',2,3),(15555,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D5',2,3),(15556,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D4',2,3),(15557,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D3',2,3),(15558,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D2',2,3),(15559,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D10',2,3),(15560,'The Beaver\'s Problem - 3','https://codeforces.com/problemset/problem/207/D1',2,3),(15561,'Game with Two Trees','https://codeforces.com/problemset/problem/207/C3',3,3),(15562,'Game with Two Trees','https://codeforces.com/problemset/problem/207/C2',2,3),(15563,'Game with Two Trees','https://codeforces.com/problemset/problem/207/C1',2,3),(15564,'Military Trainings','https://codeforces.com/problemset/problem/207/B3',2,3),(15565,'Military Trainings','https://codeforces.com/problemset/problem/207/B2',2,3),(15566,'Military Trainings','https://codeforces.com/problemset/problem/207/B1',2,3),(15567,'Beaver\'s Calculator 1.0','https://codeforces.com/problemset/problem/207/A3',2,3),(15568,'Beaver\'s Calculator 1.0','https://codeforces.com/problemset/problem/207/A2',2,3),(15569,'Beaver\'s Calculator 1.0','https://codeforces.com/problemset/problem/207/A1',2,3),(15570,'Little Elephant and Sorting','https://codeforces.com/problemset/problem/205/B',1,3),(15571,'Little Elephant and Rozdil','https://codeforces.com/problemset/problem/205/A',1,3),(15572,'Little Elephant and Strings','https://codeforces.com/problemset/problem/204/E',3,3),(15573,'Little Elephant and Retro Strings','https://codeforces.com/problemset/problem/204/D',2,3),(15574,'Little Elephant and Furik and Rubik','https://codeforces.com/problemset/problem/204/C',2,3),(15575,'Little Elephant and Cards','https://codeforces.com/problemset/problem/204/B',1,3),(15576,'Little Elephant and Interval','https://codeforces.com/problemset/problem/204/A',1,3),(15577,'Transportation','https://codeforces.com/problemset/problem/203/E',2,3),(15578,'Hit Ball','https://codeforces.com/problemset/problem/203/D',2,3),(15579,'Photographer','https://codeforces.com/problemset/problem/203/C',1,3),(15580,'Game on Paper','https://codeforces.com/problemset/problem/203/B',1,3),(15581,'Two Problems','https://codeforces.com/problemset/problem/203/A',1,3),(15582,'Brand New Easy Problem','https://codeforces.com/problemset/problem/202/B',2,3),(15583,'LLPS','https://codeforces.com/problemset/problem/202/A',1,3),(15584,'Thoroughly Bureaucratic Organization','https://codeforces.com/problemset/problem/201/E',3,3),(15585,'Brand New Problem','https://codeforces.com/problemset/problem/201/D',3,3),(15586,'Fragile Bridges','https://codeforces.com/problemset/problem/201/C',2,3),(15587,'Guess That Car!','https://codeforces.com/problemset/problem/201/B',2,3),(15588,'Clear Symmetry','https://codeforces.com/problemset/problem/201/A',2,3),(15589,'Tractor College','https://codeforces.com/problemset/problem/200/E',2,3),(15590,'Programming Language','https://codeforces.com/problemset/problem/200/D',2,3),(15591,'Football Championship','https://codeforces.com/problemset/problem/200/C',2,3),(15592,'Drinks','https://codeforces.com/problemset/problem/200/B',1,3),(15593,'Cinema','https://codeforces.com/problemset/problem/200/A',2,3),(15594,'Special Olympics','https://codeforces.com/problemset/problem/199/B',2,3),(15595,'Hexadecimal\'s theorem','https://codeforces.com/problemset/problem/199/A',1,3),(15596,'Gripping Story','https://codeforces.com/problemset/problem/198/E',2,3),(15597,'Cube Snake','https://codeforces.com/problemset/problem/198/D',3,3),(15598,'Delivering Carcinogen','https://codeforces.com/problemset/problem/198/C',2,3),(15599,'Jumping on Walls','https://codeforces.com/problemset/problem/198/B',1,3),(15600,'About Bacteria','https://codeforces.com/problemset/problem/198/A',2,3),(15601,'Limit','https://codeforces.com/problemset/problem/197/B',1,3),(15602,'Plate Game','https://codeforces.com/problemset/problem/197/A',2,3),(15603,'Opening Portals','https://codeforces.com/problemset/problem/196/E',3,3),(15604,'The Next Good String','https://codeforces.com/problemset/problem/196/D',3,3),(15605,'Paint Tree','https://codeforces.com/problemset/problem/196/C',2,3),(15606,'Infinite Maze','https://codeforces.com/problemset/problem/196/B',2,3),(15607,'Lexicographically Maximum Subsequence','https://codeforces.com/problemset/problem/196/A',1,3),(15608,'Building Forest','https://codeforces.com/problemset/problem/195/E',2,3),(15609,'Analyzing Polyline','https://codeforces.com/problemset/problem/195/D',2,3),(15610,'Try and Catch','https://codeforces.com/problemset/problem/195/C',2,3),(15611,'After Training','https://codeforces.com/problemset/problem/195/B',1,3),(15612,'Let\'s Watch Football','https://codeforces.com/problemset/problem/195/A',1,3),(15613,'Square','https://codeforces.com/problemset/problem/194/B',1,3),(15614,'Exams','https://codeforces.com/problemset/problem/194/A',1,3),(15615,'Fibonacci Number','https://codeforces.com/problemset/problem/193/E',3,3),(15616,'Two Segments','https://codeforces.com/problemset/problem/193/D',3,3),(15617,'Hamming Distance','https://codeforces.com/problemset/problem/193/C',2,3),(15618,'Xor','https://codeforces.com/problemset/problem/193/B',2,3),(15619,'Cutting Figure','https://codeforces.com/problemset/problem/193/A',2,3),(15620,'Walking in the Rain','https://codeforces.com/problemset/problem/192/B',1,3),(15621,'Funky Numbers','https://codeforces.com/problemset/problem/192/A',1,3),(15622,'Thwarting Demonstrations','https://codeforces.com/problemset/problem/191/E',2,3),(15623,'Metro Scheme','https://codeforces.com/problemset/problem/191/D',3,3),(15624,'Fools and Roads','https://codeforces.com/problemset/problem/191/C',2,3),(15625,'Demonstration','https://codeforces.com/problemset/problem/191/B',2,3),(15626,'Dynasty Puzzles','https://codeforces.com/problemset/problem/191/A',1,3),(15627,'Counter Attack','https://codeforces.com/problemset/problem/190/E',2,3),(15628,'Non-Secret Cypher','https://codeforces.com/problemset/problem/190/D',2,3),(15629,'STL','https://codeforces.com/problemset/problem/190/C',1,3),(15630,'Surrounded','https://codeforces.com/problemset/problem/190/B',2,3),(15631,'Vasya and the Bus','https://codeforces.com/problemset/problem/190/A',1,3),(15632,'Counting Rhombi','https://codeforces.com/problemset/problem/189/B',1,3),(15633,'Cut Ribbon','https://codeforces.com/problemset/problem/189/A',1,3),(15634,'Stack','https://codeforces.com/problemset/problem/188/H',2,3),(15635,'Array Sorting','https://codeforces.com/problemset/problem/188/G',2,3),(15636,'Binary Notation','https://codeforces.com/problemset/problem/188/F',1,3),(15637,'HQ9+','https://codeforces.com/problemset/problem/188/E',1,3),(15638,'Asterisks','https://codeforces.com/problemset/problem/188/D',1,3),(15639,'LCM','https://codeforces.com/problemset/problem/188/C',1,3),(15640,'A + Reverse B','https://codeforces.com/problemset/problem/188/B',1,3),(15641,'Hexagonal Numbers','https://codeforces.com/problemset/problem/188/A',1,3),(15642,'Heaven Tour','https://codeforces.com/problemset/problem/187/E',3,3),(15643,'BRT Contract ','https://codeforces.com/problemset/problem/187/D',3,3),(15644,'Weak Memory','https://codeforces.com/problemset/problem/187/C',2,3),(15645,'AlgoRace','https://codeforces.com/problemset/problem/187/B',2,3),(15646,'Permutations','https://codeforces.com/problemset/problem/187/A',1,3),(15647,'Growing Mushrooms','https://codeforces.com/problemset/problem/186/B',1,3),(15648,'Comparing Strings','https://codeforces.com/problemset/problem/186/A',1,3),(15649,'Soap Time! - 2','https://codeforces.com/problemset/problem/185/E',3,3),(15650,'Visit of the Great','https://codeforces.com/problemset/problem/185/D',3,3),(15651,'Clever Fat Rat','https://codeforces.com/problemset/problem/185/C',2,3),(15652,'Mushroom Scientists','https://codeforces.com/problemset/problem/185/B',2,3),(15653,'Plant','https://codeforces.com/problemset/problem/185/A',1,3),(15654,'Candy Shop','https://codeforces.com/problemset/problem/183/E',3,3),(15655,'T-shirt','https://codeforces.com/problemset/problem/183/D',3,3),(15656,'Cyclic Coloring','https://codeforces.com/problemset/problem/183/C',2,3),(15657,'Zoo','https://codeforces.com/problemset/problem/183/B',2,3),(15658,'Headquarters','https://codeforces.com/problemset/problem/183/A',2,3),(15659,'Wooden Fence','https://codeforces.com/problemset/problem/182/E',2,3),(15660,'Common Divisors','https://codeforces.com/problemset/problem/182/D',1,3),(15661,'Optimal Sum','https://codeforces.com/problemset/problem/182/C',2,3),(15662,'Vasya\'s Calendar','https://codeforces.com/problemset/problem/182/B',1,3),(15663,'Battlefield','https://codeforces.com/problemset/problem/182/A',2,3),(15664,'Number of Triplets','https://codeforces.com/problemset/problem/181/B',1,3),(15665,'Series of Crimes','https://codeforces.com/problemset/problem/181/A',1,3),(15666,'Mathematical Analysis Rocks!','https://codeforces.com/problemset/problem/180/F',1,3),(15667,'Cubes','https://codeforces.com/problemset/problem/180/E',2,3),(15668,'Name','https://codeforces.com/problemset/problem/180/D',2,3),(15669,'Letter','https://codeforces.com/problemset/problem/180/C',1,3),(15670,'Divisibility Rules','https://codeforces.com/problemset/problem/180/B',2,3),(15671,'Defragmentation','https://codeforces.com/problemset/problem/180/A',2,3),(15672,'Representative Sampling','https://codeforces.com/problemset/problem/178/F3',2,3),(15673,'Representative Sampling','https://codeforces.com/problemset/problem/178/F2',2,3),(15674,'Representative Sampling','https://codeforces.com/problemset/problem/178/F1',2,3),(15675,'The Beaver\'s Problem - 2','https://codeforces.com/problemset/problem/178/E3',2,3),(15676,'The Beaver\'s Problem - 2','https://codeforces.com/problemset/problem/178/E2',2,3),(15677,'The Beaver\'s Problem - 2','https://codeforces.com/problemset/problem/178/E1',2,3),(15678,'Magic Squares','https://codeforces.com/problemset/problem/178/D3',2,3),(15679,'Magic Squares','https://codeforces.com/problemset/problem/178/D2',2,3),(15680,'Magic Squares','https://codeforces.com/problemset/problem/178/D1',1,3),(15681,'Smart Beaver and Resolving Collisions','https://codeforces.com/problemset/problem/178/C3',2,3),(15682,'Smart Beaver and Resolving Collisions','https://codeforces.com/problemset/problem/178/C2',2,3),(15683,'Smart Beaver and Resolving Collisions','https://codeforces.com/problemset/problem/178/C1',2,3),(15684,'Greedy Merchants','https://codeforces.com/problemset/problem/178/B3',2,3),(15685,'Greedy Merchants','https://codeforces.com/problemset/problem/178/B2',2,3),(15686,'Greedy Merchants','https://codeforces.com/problemset/problem/178/B1',2,3),(15687,'Educational Game','https://codeforces.com/problemset/problem/178/A3',1,3),(15688,'Educational Game','https://codeforces.com/problemset/problem/178/A2',1,3),(15689,'Educational Game','https://codeforces.com/problemset/problem/178/A1',1,3),(15690,'Fibonacci Strings','https://codeforces.com/problemset/problem/177/G2',3,3),(15691,'Fibonacci Strings','https://codeforces.com/problemset/problem/177/G1',2,3),(15692,'Script Generation','https://codeforces.com/problemset/problem/177/F2',2,3),(15693,'Script Generation','https://codeforces.com/problemset/problem/177/F1',2,3),(15694,'Space Voyage','https://codeforces.com/problemset/problem/177/E2',2,3),(15695,'Space Voyage','https://codeforces.com/problemset/problem/177/E1',2,3),(15696,'Encrypting Messages','https://codeforces.com/problemset/problem/177/D2',1,3),(15697,'Encrypting Messages','https://codeforces.com/problemset/problem/177/D1',1,3),(15698,'Party','https://codeforces.com/problemset/problem/177/C2',1,3),(15699,'Party','https://codeforces.com/problemset/problem/177/C1',1,3),(15700,'Rectangular Game','https://codeforces.com/problemset/problem/177/B2',1,3),(15701,'Rectangular Game','https://codeforces.com/problemset/problem/177/B1',1,3),(15702,'Good Matrix Elements','https://codeforces.com/problemset/problem/177/A2',1,3),(15703,'Good Matrix Elements','https://codeforces.com/problemset/problem/177/A1',1,3),(15704,'Archaeology','https://codeforces.com/problemset/problem/176/E',3,3),(15705,'Hyper String','https://codeforces.com/problemset/problem/176/D',2,3),(15706,'Playing with Superglue','https://codeforces.com/problemset/problem/176/C',2,3),(15707,'Word Cut','https://codeforces.com/problemset/problem/176/B',2,3),(15708,'Trading Business','https://codeforces.com/problemset/problem/176/A',1,3),(15709,'Gnomes of Might and Magic','https://codeforces.com/problemset/problem/175/F',3,3),(15710,'Power Defence','https://codeforces.com/problemset/problem/175/E',3,3),(15711,'Plane of Tanks: Duel','https://codeforces.com/problemset/problem/175/D',2,3),(15712,'Geometry Horse','https://codeforces.com/problemset/problem/175/C',2,3),(15713,'Plane of Tanks: Pro','https://codeforces.com/problemset/problem/175/B',1,3),(15714,'Robot Bicorn Attack','https://codeforces.com/problemset/problem/175/A',1,3),(15715,'Range Increments','https://codeforces.com/problemset/problem/174/C',2,3),(15716,'File List','https://codeforces.com/problemset/problem/174/B',1,3),(15717,'Problem About Equation','https://codeforces.com/problemset/problem/174/A',1,3),(15718,'Camping Groups','https://codeforces.com/problemset/problem/173/E',3,3),(15719,'Deputies','https://codeforces.com/problemset/problem/173/D',2,3),(15720,'Spiral Maximum','https://codeforces.com/problemset/problem/173/C',2,3),(15721,'Chamber of Secrets','https://codeforces.com/problemset/problem/173/B',2,3),(15722,'Rock-Paper-Scissors','https://codeforces.com/problemset/problem/173/A',1,3),(15723,'BHTML+BCSS','https://codeforces.com/problemset/problem/172/E',2,3),(15724,'Calendar Reform','https://codeforces.com/problemset/problem/172/D',1,3),(15725,'Bus','https://codeforces.com/problemset/problem/172/C',1,3),(15726,'Pseudorandom Sequence Period','https://codeforces.com/problemset/problem/172/B',1,3),(15727,'Phone Code','https://codeforces.com/problemset/problem/172/A',1,3),(15728,'A polyline','https://codeforces.com/problemset/problem/171/H',2,3),(15729,'Mysterious numbers - 2','https://codeforces.com/problemset/problem/171/G',2,3),(15730,'ucyhf','https://codeforces.com/problemset/problem/171/F',2,3),(15731,'MYSTERIOUS LANGUAGE','https://codeforces.com/problemset/problem/171/E',2,3),(15732,'Broken checker','https://codeforces.com/problemset/problem/171/D',1,3),(15733,'A Piece of Cake','https://codeforces.com/problemset/problem/171/C',2,3),(15734,'Star','https://codeforces.com/problemset/problem/171/B',1,3),(15735,'Mysterious numbers - 1','https://codeforces.com/problemset/problem/171/A',1,3),(15736,'Replacing Digits','https://codeforces.com/problemset/problem/169/B',1,3),(15737,'Chores','https://codeforces.com/problemset/problem/169/A',1,3),(15738,'Wizards and Minimal Spell','https://codeforces.com/problemset/problem/168/B',2,3),(15739,'Wizards and Demonstration','https://codeforces.com/problemset/problem/168/A',1,3),(15740,'Wizards and Bets','https://codeforces.com/problemset/problem/167/E',3,3),(15741,'Wizards and Roads','https://codeforces.com/problemset/problem/167/D',3,3),(15742,'Wizards and Numbers','https://codeforces.com/problemset/problem/167/C',2,3),(15743,'Wizards and Huge Prize','https://codeforces.com/problemset/problem/167/B',2,3),(15744,'Wizards and Trolleybuses','https://codeforces.com/problemset/problem/167/A',2,3),(15745,'Tetrahedron','https://codeforces.com/problemset/problem/166/E',1,3),(15746,'Shoe Store','https://codeforces.com/problemset/problem/166/D',2,3),(15747,'Median','https://codeforces.com/problemset/problem/166/C',1,3),(15748,'Polygons','https://codeforces.com/problemset/problem/166/B',2,3),(15749,'Rank List','https://codeforces.com/problemset/problem/166/A',1,3),(15750,'Compatible Numbers','https://codeforces.com/problemset/problem/165/E',2,3),(15751,'Beard Graph','https://codeforces.com/problemset/problem/165/D',2,3),(15752,'Another Problem on Strings','https://codeforces.com/problemset/problem/165/C',2,3),(15753,'Burning Midnight Oil','https://codeforces.com/problemset/problem/165/B',1,3),(15754,'Supercentral Point','https://codeforces.com/problemset/problem/165/A',1,3),(15755,'Polycarpus and Tasks','https://codeforces.com/problemset/problem/164/E',3,3),(15756,'Minimum Diameter','https://codeforces.com/problemset/problem/164/D',3,3),(15757,'Machine Programming','https://codeforces.com/problemset/problem/164/C',2,3),(15758,'Ancient Berland Hieroglyphs','https://codeforces.com/problemset/problem/164/B',2,3),(15759,'Variable, or There and Back Again','https://codeforces.com/problemset/problem/164/A',2,3),(15760,'e-Government','https://codeforces.com/problemset/problem/163/E',3,3),(15761,'Large Refrigerator','https://codeforces.com/problemset/problem/163/D',3,3),(15762,'Conveyor','https://codeforces.com/problemset/problem/163/C',2,3),(15763,'Lemmings','https://codeforces.com/problemset/problem/163/B',2,3),(15764,'Substring and Subsequence','https://codeforces.com/problemset/problem/163/A',2,3),(15765,'Brackets','https://codeforces.com/problemset/problem/162/J',2,3),(15766,'Truncatable primes','https://codeforces.com/problemset/problem/162/I',2,3),(15767,'Alternating case','https://codeforces.com/problemset/problem/162/H',2,3),(15768,'Non-decimal sum','https://codeforces.com/problemset/problem/162/G',2,3),(15769,'Factorial zeros','https://codeforces.com/problemset/problem/162/F',2,3),(15770,'HQ9+','https://codeforces.com/problemset/problem/162/E',2,3),(15771,'Remove digits','https://codeforces.com/problemset/problem/162/D',2,3),(15772,'Prime factorization','https://codeforces.com/problemset/problem/162/C',2,3),(15773,'Binary notation','https://codeforces.com/problemset/problem/162/B',2,3),(15774,'Pentagonal numbers','https://codeforces.com/problemset/problem/162/A',1,3),(15775,'Polycarpus the Safecracker','https://codeforces.com/problemset/problem/161/E',2,3),(15776,'Distance in Tree','https://codeforces.com/problemset/problem/161/D',2,3),(15777,'Abracadabra','https://codeforces.com/problemset/problem/161/C',2,3),(15778,'Discounts','https://codeforces.com/problemset/problem/161/B',2,3),(15779,'Dress\'em in Vests!','https://codeforces.com/problemset/problem/161/A',1,3),(15780,'Buses and People','https://codeforces.com/problemset/problem/160/E',2,3),(15781,'Edges in MST','https://codeforces.com/problemset/problem/160/D',2,3),(15782,'Find Pair','https://codeforces.com/problemset/problem/160/C',2,3),(15783,'Unlucky Ticket','https://codeforces.com/problemset/problem/160/B',1,3),(15784,'Twins','https://codeforces.com/problemset/problem/160/A',1,3),(15785,'Zebra Tower','https://codeforces.com/problemset/problem/159/E',2,3),(15786,'Palindrome pairs','https://codeforces.com/problemset/problem/159/D',1,3),(15787,'String Manipulation 1.0','https://codeforces.com/problemset/problem/159/C',1,3),(15788,'Matchmaker','https://codeforces.com/problemset/problem/159/B',1,3),(15789,'Friends or Not','https://codeforces.com/problemset/problem/159/A',1,3),(15790,'Phone Talks','https://codeforces.com/problemset/problem/158/E',2,3),(15791,'Ice Sculptures','https://codeforces.com/problemset/problem/158/D',1,3),(15792,'Cd and pwd commands','https://codeforces.com/problemset/problem/158/C',1,3),(15793,'Taxi','https://codeforces.com/problemset/problem/158/B',1,3),(15794,'Next Round','https://codeforces.com/problemset/problem/158/A',1,3),(15795,'Trace','https://codeforces.com/problemset/problem/157/B',1,3),(15796,'Game Outcome','https://codeforces.com/problemset/problem/157/A',1,3),(15797,'Mrs. Hudson\'s Pancakes','https://codeforces.com/problemset/problem/156/E',3,3),(15798,'Clues','https://codeforces.com/problemset/problem/156/D',2,3),(15799,'Cipher','https://codeforces.com/problemset/problem/156/C',2,3),(15800,'Suspects','https://codeforces.com/problemset/problem/156/B',2,3),(15801,'Message','https://codeforces.com/problemset/problem/156/A',2,3),(15802,'Combination','https://codeforces.com/problemset/problem/155/B',1,3),(15803,'I_love_\\%username\\%','https://codeforces.com/problemset/problem/155/A',1,3),(15804,'Martian Colony','https://codeforces.com/problemset/problem/154/E',3,3),(15805,'Flatland Fencing','https://codeforces.com/problemset/problem/154/D',2,3),(15806,'Double Profiles','https://codeforces.com/problemset/problem/154/C',2,3),(15807,'Colliders','https://codeforces.com/problemset/problem/154/B',2,3),(15808,'Hometask','https://codeforces.com/problemset/problem/154/A',2,3),(15809,'Euclidean Distance','https://codeforces.com/problemset/problem/153/E',2,3),(15810,'Date Change','https://codeforces.com/problemset/problem/153/D',2,3),(15811,'Caesar Cipher','https://codeforces.com/problemset/problem/153/C',2,3),(15812,'Binary notation','https://codeforces.com/problemset/problem/153/B',2,3),(15813,'A + B','https://codeforces.com/problemset/problem/153/A',2,3),(15814,'Garden','https://codeforces.com/problemset/problem/152/E',2,3),(15815,'Frames','https://codeforces.com/problemset/problem/152/D',3,3),(15816,'Pocket Book','https://codeforces.com/problemset/problem/152/C',1,3),(15817,'Steps','https://codeforces.com/problemset/problem/152/B',1,3),(15818,'Marks','https://codeforces.com/problemset/problem/152/A',1,3),(15819,'Phone Numbers','https://codeforces.com/problemset/problem/151/B',1,3),(15820,'Soft Drinking','https://codeforces.com/problemset/problem/151/A',1,3),(15821,'Freezing with Style','https://codeforces.com/problemset/problem/150/E',3,3),(15822,'Mission Impassable','https://codeforces.com/problemset/problem/150/D',3,3),(15823,'Smart Cheater','https://codeforces.com/problemset/problem/150/C',2,3),(15824,'Quantity of Strings','https://codeforces.com/problemset/problem/150/B',2,3),(15825,'Win or Freeze','https://codeforces.com/problemset/problem/150/A',1,3),(15826,'Martian Strings','https://codeforces.com/problemset/problem/149/E',2,3),(15827,'Coloring Brackets','https://codeforces.com/problemset/problem/149/D',2,3),(15828,'Division into Teams','https://codeforces.com/problemset/problem/149/C',1,3),(15829,'Martian Clock','https://codeforces.com/problemset/problem/149/B',2,3),(15830,'Business trip','https://codeforces.com/problemset/problem/149/A',1,3),(15831,'Porcelain','https://codeforces.com/problemset/problem/148/E',2,3),(15832,'Bag of mice','https://codeforces.com/problemset/problem/148/D',2,3),(15833,'Terse princess','https://codeforces.com/problemset/problem/148/C',2,3),(15834,'Escape','https://codeforces.com/problemset/problem/148/B',1,3),(15835,'Insomnia cure','https://codeforces.com/problemset/problem/148/A',1,3),(15836,'Smile House','https://codeforces.com/problemset/problem/147/B',2,3),(15837,'Punctuation','https://codeforces.com/problemset/problem/147/A',1,3),(15838,'Lucky Mask','https://codeforces.com/problemset/problem/146/B',1,3),(15839,'Lucky Ticket','https://codeforces.com/problemset/problem/146/A',1,3),(15840,'Lucky Queries','https://codeforces.com/problemset/problem/145/E',2,3),(15841,'Lucky Pair','https://codeforces.com/problemset/problem/145/D',3,3),(15842,'Lucky Subsequence','https://codeforces.com/problemset/problem/145/C',2,3),(15843,'Lucky Number 2','https://codeforces.com/problemset/problem/145/B',2,3),(15844,'Lucky Conversion','https://codeforces.com/problemset/problem/145/A',1,3),(15845,'Competition','https://codeforces.com/problemset/problem/144/E',2,3),(15846,'Missile Silos','https://codeforces.com/problemset/problem/144/D',2,3),(15847,'Anagram Search','https://codeforces.com/problemset/problem/144/C',1,3),(15848,'Meeting','https://codeforces.com/problemset/problem/144/B',1,3),(15849,'Arrival of the General','https://codeforces.com/problemset/problem/144/A',1,3),(15850,'Help Kingdom of Far Far Away 2','https://codeforces.com/problemset/problem/143/B',1,3),(15851,'Help Vasilisa the Wise 2','https://codeforces.com/problemset/problem/143/A',1,3),(15852,'Help Greg the Dwarf 2','https://codeforces.com/problemset/problem/142/E',3,3),(15853,'Help Shrek and Donkey 2','https://codeforces.com/problemset/problem/142/D',3,3),(15854,'Help Caretaker','https://codeforces.com/problemset/problem/142/C',2,3),(15855,'Help General','https://codeforces.com/problemset/problem/142/B',2,3),(15856,'Help Farmer','https://codeforces.com/problemset/problem/142/A',2,3),(15857,'Clearing Up','https://codeforces.com/problemset/problem/141/E',2,3),(15858,'Take-off Ramps','https://codeforces.com/problemset/problem/141/D',2,3),(15859,'Queue','https://codeforces.com/problemset/problem/141/C',2,3),(15860,'Hopscotch','https://codeforces.com/problemset/problem/141/B',1,3),(15861,'Amusing Joke','https://codeforces.com/problemset/problem/141/A',1,3),(15862,'New Year Snowflake','https://codeforces.com/problemset/problem/140/F',3,3),(15863,'New Year Garland','https://codeforces.com/problemset/problem/140/E',3,3),(15864,'New Year Contest','https://codeforces.com/problemset/problem/140/D',2,3),(15865,'New Year Snowmen','https://codeforces.com/problemset/problem/140/C',2,3),(15866,'New Year Cards','https://codeforces.com/problemset/problem/140/B',2,3),(15867,'New Year Table','https://codeforces.com/problemset/problem/140/A',2,3),(15868,'Wallpaper','https://codeforces.com/problemset/problem/139/B',2,3),(15869,'Petr and Book','https://codeforces.com/problemset/problem/139/A',1,3),(15870,'Hellish Constraints','https://codeforces.com/problemset/problem/138/E',3,3),(15871,'World of Darkraft','https://codeforces.com/problemset/problem/138/D',2,3),(15872,'Mushroom Gnomes - 2','https://codeforces.com/problemset/problem/138/C',2,3),(15873,'Digits Permutations','https://codeforces.com/problemset/problem/138/B',2,3),(15874,'Literature Lesson','https://codeforces.com/problemset/problem/138/A',2,3),(15875,'Last Chance','https://codeforces.com/problemset/problem/137/E',2,3),(15876,'Palindromes','https://codeforces.com/problemset/problem/137/D',2,3),(15877,'History','https://codeforces.com/problemset/problem/137/C',1,3),(15878,'Permutation','https://codeforces.com/problemset/problem/137/B',1,3),(15879,'Postcards and photos','https://codeforces.com/problemset/problem/137/A',1,3),(15880,'Ternary Logic','https://codeforces.com/problemset/problem/136/B',1,3),(15881,'Presents','https://codeforces.com/problemset/problem/136/A',1,3),(15882,'Weak Subsequence','https://codeforces.com/problemset/problem/135/E',3,3),(15883,'Cycle','https://codeforces.com/problemset/problem/135/D',2,3),(15884,'Zero-One','https://codeforces.com/problemset/problem/135/C',2,3),(15885,'Rectangle and Square','https://codeforces.com/problemset/problem/135/B',2,3),(15886,'Replacement','https://codeforces.com/problemset/problem/135/A',1,3),(15887,'Swaps','https://codeforces.com/problemset/problem/134/C',2,3),(15888,'Pairs of Numbers','https://codeforces.com/problemset/problem/134/B',2,3),(15889,'Average Numbers','https://codeforces.com/problemset/problem/134/A',1,3),(15890,'Unary','https://codeforces.com/problemset/problem/133/B',1,3),(15891,'HQ9+','https://codeforces.com/problemset/problem/133/A',1,3),(15892,'Bits of merry old England','https://codeforces.com/problemset/problem/132/E',3,3),(15893,'Constants in the language of Shakespeare','https://codeforces.com/problemset/problem/132/D',2,3),(15894,'Logo Turtle','https://codeforces.com/problemset/problem/132/C',2,3),(15895,'Piet','https://codeforces.com/problemset/problem/132/B',2,3),(15896,'Turing Tape','https://codeforces.com/problemset/problem/132/A',1,3),(15897,'Present to Mom','https://codeforces.com/problemset/problem/131/F',2,3),(15898,'Yet Another Task with Queens','https://codeforces.com/problemset/problem/131/E',2,3),(15899,'Subway','https://codeforces.com/problemset/problem/131/D',2,3),(15900,'The World is a Theatre','https://codeforces.com/problemset/problem/131/C',1,3),(15901,'Opposites Attract','https://codeforces.com/problemset/problem/131/B',1,3),(15902,'cAPS lOCK','https://codeforces.com/problemset/problem/131/A',1,3),(15903,'Date calculation','https://codeforces.com/problemset/problem/130/J',2,3),(15904,'Array sorting','https://codeforces.com/problemset/problem/130/I',2,3),(15905,'Balanced brackets','https://codeforces.com/problemset/problem/130/H',2,3),(15906,'CAPS LOCK ON','https://codeforces.com/problemset/problem/130/G',2,3),(15907,'Prime factorization','https://codeforces.com/problemset/problem/130/F',2,3),(15908,'Tribonacci numbers','https://codeforces.com/problemset/problem/130/E',2,3),(15909,'Exponentiation','https://codeforces.com/problemset/problem/130/D',1,3),(15910,'Decimal sum','https://codeforces.com/problemset/problem/130/C',1,3),(15911,'Gnikool Ssalg','https://codeforces.com/problemset/problem/130/B',1,3),(15912,'Hexagonal numbers','https://codeforces.com/problemset/problem/130/A',1,3),(15913,'Students and Shoelaces','https://codeforces.com/problemset/problem/129/B',1,3),(15914,'Cookies','https://codeforces.com/problemset/problem/129/A',1,3),(15915,'Birthday','https://codeforces.com/problemset/problem/128/E',3,3),(15916,'Numbers','https://codeforces.com/problemset/problem/128/D',2,3),(15917,'Games with Rectangle','https://codeforces.com/problemset/problem/128/C',2,3),(15918,'String','https://codeforces.com/problemset/problem/128/B',2,3),(15919,'Statues','https://codeforces.com/problemset/problem/128/A',1,3),(15920,'Canvas Frames','https://codeforces.com/problemset/problem/127/B',1,3),(15921,'Wasted Time','https://codeforces.com/problemset/problem/127/A',1,3),(15922,'Pills','https://codeforces.com/problemset/problem/126/E',3,3),(15923,'Fibonacci Sums','https://codeforces.com/problemset/problem/126/D',2,3),(15924,'E-reader Display','https://codeforces.com/problemset/problem/126/C',2,3),(15925,'Password','https://codeforces.com/problemset/problem/126/B',2,3),(15926,'Hot Bath','https://codeforces.com/problemset/problem/126/A',2,3),(15927,'MST Company','https://codeforces.com/problemset/problem/125/E',2,3),(15928,'Two progressions','https://codeforces.com/problemset/problem/125/D',2,3),(15929,'Hobbits\' Party','https://codeforces.com/problemset/problem/125/C',2,3),(15930,'Simple XML','https://codeforces.com/problemset/problem/125/B',1,3),(15931,'Measuring Lengths in Baden','https://codeforces.com/problemset/problem/125/A',1,3),(15932,'Permutations','https://codeforces.com/problemset/problem/124/B',1,3),(15933,'The number of positions','https://codeforces.com/problemset/problem/124/A',1,3),(15934,'Maze','https://codeforces.com/problemset/problem/123/E',2,3),(15935,'String','https://codeforces.com/problemset/problem/123/D',2,3),(15936,'Brackets','https://codeforces.com/problemset/problem/123/C',2,3),(15937,'Squares','https://codeforces.com/problemset/problem/123/B',2,3),(15938,'Prime Permutation','https://codeforces.com/problemset/problem/123/A',1,3),(15939,'Lucky Substring','https://codeforces.com/problemset/problem/122/B',1,3),(15940,'Lucky Division','https://codeforces.com/problemset/problem/122/A',1,3),(15941,'Lucky Array','https://codeforces.com/problemset/problem/121/E',2,3),(15942,'Lucky Segments','https://codeforces.com/problemset/problem/121/D',2,3),(15943,'Lucky Permutation','https://codeforces.com/problemset/problem/121/C',2,3),(15944,'Lucky Transformation','https://codeforces.com/problemset/problem/121/B',1,3),(15945,'Lucky Sum','https://codeforces.com/problemset/problem/121/A',1,3),(15946,'Minimum Sum','https://codeforces.com/problemset/problem/120/J',2,3),(15947,'Luck is in Numbers','https://codeforces.com/problemset/problem/120/I',2,3),(15948,'Brevity is Soul of Wit','https://codeforces.com/problemset/problem/120/H',2,3),(15949,'Boom','https://codeforces.com/problemset/problem/120/G',2,3),(15950,'Spiders','https://codeforces.com/problemset/problem/120/F',1,3),(15951,'Put Knight!','https://codeforces.com/problemset/problem/120/E',1,3),(15952,'Three Sons','https://codeforces.com/problemset/problem/120/D',1,3),(15953,'Winnie-the-Pooh and honey','https://codeforces.com/problemset/problem/120/C',1,3),(15954,'Quiz League','https://codeforces.com/problemset/problem/120/B',1,3),(15955,'Elevator','https://codeforces.com/problemset/problem/120/A',1,3),(15956,'Alternative Reality','https://codeforces.com/problemset/problem/119/E',2,3),(15957,'String Transformation','https://codeforces.com/problemset/problem/119/D',2,3),(15958,'Education Reform','https://codeforces.com/problemset/problem/119/C',2,3),(15959,'Before Exam','https://codeforces.com/problemset/problem/119/B',2,3),(15960,'Epic Game','https://codeforces.com/problemset/problem/119/A',1,3),(15961,'Bertown roads','https://codeforces.com/problemset/problem/118/E',2,3),(15962,'Caesar\'s Legions','https://codeforces.com/problemset/problem/118/D',2,3),(15963,'Fancy Number','https://codeforces.com/problemset/problem/118/C',2,3),(15964,'Present from Lena','https://codeforces.com/problemset/problem/118/B',1,3),(15965,'String Task','https://codeforces.com/problemset/problem/118/A',1,3),(15966,'Tree or not Tree','https://codeforces.com/problemset/problem/117/E',3,3),(15967,'Not Quick Transformation','https://codeforces.com/problemset/problem/117/D',2,3),(15968,'Cycle','https://codeforces.com/problemset/problem/117/C',2,3),(15969,'Very Interesting Game','https://codeforces.com/problemset/problem/117/B',2,3),(15970,'Elevator','https://codeforces.com/problemset/problem/117/A',1,3),(15971,'Little Pigs and Wolves','https://codeforces.com/problemset/problem/116/B',1,3),(15972,'Tram','https://codeforces.com/problemset/problem/116/A',1,3),(15973,'Linear Kingdom Races','https://codeforces.com/problemset/problem/115/E',2,3),(15974,'Unambiguous Arithmetic Expression','https://codeforces.com/problemset/problem/115/D',3,3),(15975,'Plumber','https://codeforces.com/problemset/problem/115/C',2,3),(15976,'Lawnmower','https://codeforces.com/problemset/problem/115/B',1,3),(15977,'Party','https://codeforces.com/problemset/problem/115/A',1,3),(15978,'PFAST Inc.','https://codeforces.com/problemset/problem/114/B',1,3),(15979,'Cifera','https://codeforces.com/problemset/problem/114/A',1,3),(15980,'Sleeping','https://codeforces.com/problemset/problem/113/E',3,3),(15981,'Museum','https://codeforces.com/problemset/problem/113/D',3,3),(15982,'Double Happiness','https://codeforces.com/problemset/problem/113/C',2,3),(15983,'Petr#','https://codeforces.com/problemset/problem/113/B',2,3),(15984,'Grammar Lessons','https://codeforces.com/problemset/problem/113/A',2,3),(15985,'Petya and Square','https://codeforces.com/problemset/problem/112/B',1,3),(15986,'Petya and Strings','https://codeforces.com/problemset/problem/112/A',1,3),(15987,'Petya and Rectangle','https://codeforces.com/problemset/problem/111/E',3,3),(15988,'Petya and Coloring','https://codeforces.com/problemset/problem/111/D',2,3),(15989,'Petya and Spiders','https://codeforces.com/problemset/problem/111/C',2,3),(15990,'Petya and Divisors','https://codeforces.com/problemset/problem/111/B',2,3),(15991,'Petya and Inequiations','https://codeforces.com/problemset/problem/111/A',1,3),(15992,'Lucky String','https://codeforces.com/problemset/problem/110/B',1,3),(15993,'Nearly Lucky Number','https://codeforces.com/problemset/problem/110/A',1,3),(15994,'Lucky Interval','https://codeforces.com/problemset/problem/109/E',3,3),(15995,'Lucky Sorting','https://codeforces.com/problemset/problem/109/D',2,3),(15996,'Lucky Tree','https://codeforces.com/problemset/problem/109/C',2,3),(15997,'Lucky Probability','https://codeforces.com/problemset/problem/109/B',2,3),(15998,'Lucky Sum of Digits','https://codeforces.com/problemset/problem/109/A',1,3),(15999,'Datatypes','https://codeforces.com/problemset/problem/108/B',1,3),(16000,'Palindromic Times','https://codeforces.com/problemset/problem/108/A',1,3),(16001,'Darts','https://codeforces.com/problemset/problem/107/E',3,3),(16002,'Crime Management','https://codeforces.com/problemset/problem/107/D',2,3),(16003,'Arrangement','https://codeforces.com/problemset/problem/107/C',2,3),(16004,'Basketball Team','https://codeforces.com/problemset/problem/107/B',2,3),(16005,'Dorm Water Supply','https://codeforces.com/problemset/problem/107/A',1,3),(16006,'Space Rescuers','https://codeforces.com/problemset/problem/106/E',2,3),(16007,'Treasure Island','https://codeforces.com/problemset/problem/106/D',2,3),(16008,'Buns','https://codeforces.com/problemset/problem/106/C',2,3),(16009,'Choosing Laptop','https://codeforces.com/problemset/problem/106/B',1,3),(16010,'Card Game','https://codeforces.com/problemset/problem/106/A',1,3),(16011,'Lift and Throw','https://codeforces.com/problemset/problem/105/E',2,3),(16012,'Entertaining Geodetics','https://codeforces.com/problemset/problem/105/D',3,3),(16013,'Item World','https://codeforces.com/problemset/problem/105/C',2,3),(16014,'Dark Assembly','https://codeforces.com/problemset/problem/105/B',2,3),(16015,'Transmigration','https://codeforces.com/problemset/problem/105/A',2,3),(16016,'Blackjack','https://codeforces.com/problemset/problem/104/A',1,3),(16017,'Buying Sets','https://codeforces.com/problemset/problem/103/E',3,3),(16018,'Time to Raid Cowavans','https://codeforces.com/problemset/problem/103/D',2,3),(16019,'Russian Roulette','https://codeforces.com/problemset/problem/103/C',2,3),(16020,'Cthulhu','https://codeforces.com/problemset/problem/103/B',1,3),(16021,'Testing Pants for Sadness','https://codeforces.com/problemset/problem/103/A',1,3),(16022,'Sum of Digits','https://codeforces.com/problemset/problem/102/B',1,3),(16023,'Clothes','https://codeforces.com/problemset/problem/102/A',1,3),(16024,'Candies and Stones','https://codeforces.com/problemset/problem/101/E',2,3),(16025,'Castle','https://codeforces.com/problemset/problem/101/D',2,3),(16026,'Vectors','https://codeforces.com/problemset/problem/101/C',2,3),(16027,'Buses','https://codeforces.com/problemset/problem/101/B',2,3),(16028,'Homework','https://codeforces.com/problemset/problem/101/A',1,3),(16029,'Interval Coloring','https://codeforces.com/problemset/problem/100/J',2,3),(16030,'Rotation','https://codeforces.com/problemset/problem/100/I',1,3),(16031,'Battleship','https://codeforces.com/problemset/problem/100/H',2,3),(16032,'Name the album','https://codeforces.com/problemset/problem/100/G',2,3),(16033,'Polynom','https://codeforces.com/problemset/problem/100/F',2,3),(16034,'Lamps in a Line','https://codeforces.com/problemset/problem/100/E',2,3),(16035,'World of Mouth','https://codeforces.com/problemset/problem/100/D',1,3),(16036,'A+B','https://codeforces.com/problemset/problem/100/C',1,3),(16037,'Friendly Numbers','https://codeforces.com/problemset/problem/100/B',1,3),(16038,'Carpeting the Room','https://codeforces.com/problemset/problem/100/A',1,3),(16039,'Help Chef Gerasim','https://codeforces.com/problemset/problem/99/B',1,3),(16040,'Help Far Away Kingdom','https://codeforces.com/problemset/problem/99/A',1,3),(16041,'Help Shrek and Donkey','https://codeforces.com/problemset/problem/98/E',3,3),(16042,'Help Monks','https://codeforces.com/problemset/problem/98/D',2,3),(16043,'Help Greg the Dwarf','https://codeforces.com/problemset/problem/98/C',2,3),(16044,'Help King','https://codeforces.com/problemset/problem/98/B',2,3),(16045,'Help Victoria the Wise','https://codeforces.com/problemset/problem/98/A',2,3),(16046,'Leaders','https://codeforces.com/problemset/problem/97/E',2,3),(16047,'Robot in Basement','https://codeforces.com/problemset/problem/97/D',3,3),(16048,'Winning Strategy','https://codeforces.com/problemset/problem/97/C',2,3),(16049,'Superset','https://codeforces.com/problemset/problem/97/B',2,3),(16050,'Domino','https://codeforces.com/problemset/problem/97/A',2,3),(16051,'Lucky Numbers (easy)','https://codeforces.com/problemset/problem/96/B',1,3),(16052,'Football','https://codeforces.com/problemset/problem/96/A',1,3),(16053,'Lucky Country','https://codeforces.com/problemset/problem/95/E',2,3),(16054,'Horse Races','https://codeforces.com/problemset/problem/95/D',2,3),(16055,'Volleyball','https://codeforces.com/problemset/problem/95/C',2,3),(16056,'Lucky Numbers','https://codeforces.com/problemset/problem/95/B',2,3),(16057,'Hockey','https://codeforces.com/problemset/problem/95/A',2,3),(16058,'Friends','https://codeforces.com/problemset/problem/94/B',1,3),(16059,'Restoring Password','https://codeforces.com/problemset/problem/94/A',1,3),(16060,'Lostborn','https://codeforces.com/problemset/problem/93/E',3,3),(16061,'Flags','https://codeforces.com/problemset/problem/93/D',2,3),(16062,'Azembler','https://codeforces.com/problemset/problem/93/C',2,3),(16063,'End of Exams','https://codeforces.com/problemset/problem/93/B',2,3),(16064,'Frames','https://codeforces.com/problemset/problem/93/A',2,3),(16065,'Binary Number','https://codeforces.com/problemset/problem/92/B',1,3),(16066,'Chips','https://codeforces.com/problemset/problem/92/A',1,3),(16067,'Igloo Skyscraper','https://codeforces.com/problemset/problem/91/E',2,3),(16068,'Grocer\'s Problem','https://codeforces.com/problemset/problem/91/D',3,3),(16069,'Ski Base','https://codeforces.com/problemset/problem/91/C',2,3),(16070,'Queue','https://codeforces.com/problemset/problem/91/B',1,3),(16071,'Newspaper Headline','https://codeforces.com/problemset/problem/91/A',1,3),(16072,'African Crossword','https://codeforces.com/problemset/problem/90/B',1,3),(16073,'Cableway','https://codeforces.com/problemset/problem/90/A',1,3),(16074,'Fire and Ice','https://codeforces.com/problemset/problem/89/E',3,3),(16075,'Space mines','https://codeforces.com/problemset/problem/89/D',2,3),(16076,'Chip Play','https://codeforces.com/problemset/problem/89/C',2,3),(16077,'Widget Library','https://codeforces.com/problemset/problem/89/B',2,3),(16078,'Robbery','https://codeforces.com/problemset/problem/89/A',2,3),(16079,'Keyboard','https://codeforces.com/problemset/problem/88/B',1,3),(16080,'Chord','https://codeforces.com/problemset/problem/88/A',1,3),(16081,'Mogohu-Rea Idol','https://codeforces.com/problemset/problem/87/E',3,3),(16082,'Beautiful Road','https://codeforces.com/problemset/problem/87/D',2,3),(16083,'Interesting Game','https://codeforces.com/problemset/problem/87/C',2,3),(16084,'Vasya and Types','https://codeforces.com/problemset/problem/87/B',2,3),(16085,'Trains','https://codeforces.com/problemset/problem/87/A',1,3),(16086,'Long sequence','https://codeforces.com/problemset/problem/86/E',3,3),(16087,'Powerful array','https://codeforces.com/problemset/problem/86/D',2,3),(16088,'Genetic engineering','https://codeforces.com/problemset/problem/86/C',2,3),(16089,'Tetris revisited','https://codeforces.com/problemset/problem/86/B',2,3),(16090,'Reflection','https://codeforces.com/problemset/problem/86/A',2,3),(16091,'Guard Towers','https://codeforces.com/problemset/problem/85/E',3,3),(16092,'Sum of Medians','https://codeforces.com/problemset/problem/85/D',2,3),(16093,'Petya and Tree','https://codeforces.com/problemset/problem/85/C',2,3),(16094,'Embassy Queue','https://codeforces.com/problemset/problem/85/B',2,3),(16095,'Domino','https://codeforces.com/problemset/problem/85/A',1,3),(16096,'Biathlon','https://codeforces.com/problemset/problem/84/C',2,3),(16097,'Toy Army','https://codeforces.com/problemset/problem/84/A',1,3),(16098,'Two Subsequences','https://codeforces.com/problemset/problem/83/E',3,3),(16099,'Numbers','https://codeforces.com/problemset/problem/83/D',2,3),(16100,'Track','https://codeforces.com/problemset/problem/83/C',2,3),(16101,'Doctor','https://codeforces.com/problemset/problem/83/B',2,3),(16102,'Magical Array','https://codeforces.com/problemset/problem/83/A',1,3),(16103,'Corridor','https://codeforces.com/problemset/problem/82/E',3,3),(16104,'Two out of Three','https://codeforces.com/problemset/problem/82/D',2,3),(16105,'General Mobilization','https://codeforces.com/problemset/problem/82/C',2,3),(16106,'Sets','https://codeforces.com/problemset/problem/82/B',2,3),(16107,'Double Cola','https://codeforces.com/problemset/problem/82/A',1,3),(16108,'Pairs','https://codeforces.com/problemset/problem/81/E',3,3),(16109,'Polycarp\'s Picture Gallery','https://codeforces.com/problemset/problem/81/D',2,3),(16110,'Average Score','https://codeforces.com/problemset/problem/81/C',2,3),(16111,'Sequence Formatting','https://codeforces.com/problemset/problem/81/B',2,3),(16112,'Plug-in','https://codeforces.com/problemset/problem/81/A',1,3),(16113,'Depression','https://codeforces.com/problemset/problem/80/B',1,3),(16114,'Panoramix\'s Prediction','https://codeforces.com/problemset/problem/80/A',1,3),(16115,'Security System','https://codeforces.com/problemset/problem/79/E',3,3),(16116,'Password','https://codeforces.com/problemset/problem/79/D',3,3),(16117,'Beaver','https://codeforces.com/problemset/problem/79/C',2,3),(16118,'Colorful Field','https://codeforces.com/problemset/problem/79/B',1,3),(16119,'Bus Game','https://codeforces.com/problemset/problem/79/A',1,3),(16120,'Evacuation','https://codeforces.com/problemset/problem/78/E',2,3),(16121,'Archer\'s Shot','https://codeforces.com/problemset/problem/78/D',2,3),(16122,'Beaver Game','https://codeforces.com/problemset/problem/78/C',2,3),(16123,'Easter Eggs','https://codeforces.com/problemset/problem/78/B',1,3),(16124,'Haiku','https://codeforces.com/problemset/problem/78/A',1,3),(16125,'Martian Food','https://codeforces.com/problemset/problem/77/E',3,3),(16126,'Domino Carpet','https://codeforces.com/problemset/problem/77/D',2,3),(16127,'Beavermuncher-0xFF','https://codeforces.com/problemset/problem/77/C',2,3),(16128,'Falling Anvils','https://codeforces.com/problemset/problem/77/B',2,3),(16129,'Heroes','https://codeforces.com/problemset/problem/77/A',1,3),(16130,'Tourist','https://codeforces.com/problemset/problem/76/F',2,3),(16131,'Points','https://codeforces.com/problemset/problem/76/E',2,3),(16132,'Plus and xor','https://codeforces.com/problemset/problem/76/D',2,3),(16133,'Mutation','https://codeforces.com/problemset/problem/76/C',3,3),(16134,'Mice','https://codeforces.com/problemset/problem/76/B',2,3),(16135,'Gift','https://codeforces.com/problemset/problem/76/A',2,3),(16136,'Ship\'s Shortest Path','https://codeforces.com/problemset/problem/75/E',2,3),(16137,'Big Maximum Sum','https://codeforces.com/problemset/problem/75/D',2,3),(16138,'Modified GCD','https://codeforces.com/problemset/problem/75/C',2,3),(16139,'Facetook Priority Wall','https://codeforces.com/problemset/problem/75/B',1,3),(16140,'Life Without Zeros','https://codeforces.com/problemset/problem/75/A',1,3),(16141,'Shift It!','https://codeforces.com/problemset/problem/74/E',3,3),(16142,'Hanger','https://codeforces.com/problemset/problem/74/D',2,3),(16143,'Chessboard Billiard','https://codeforces.com/problemset/problem/74/C',2,3),(16144,'Train','https://codeforces.com/problemset/problem/74/B',1,3),(16145,'Room Leader','https://codeforces.com/problemset/problem/74/A',1,3),(16146,'Plane of Tanks','https://codeforces.com/problemset/problem/73/F',3,3),(16147,'Morrowindows','https://codeforces.com/problemset/problem/73/E',2,3),(16148,'FreeDiv','https://codeforces.com/problemset/problem/73/D',2,3),(16149,'LionAge II','https://codeforces.com/problemset/problem/73/C',2,3),(16150,'Need For Brake','https://codeforces.com/problemset/problem/73/B',2,3),(16151,'The Elder Trolls IV: Oblivon','https://codeforces.com/problemset/problem/73/A',2,3),(16152,'Goofy Numbers','https://codeforces.com/problemset/problem/72/I',1,3),(16153,'Reverse It!','https://codeforces.com/problemset/problem/72/H',2,3),(16154,'Fibonacci army','https://codeforces.com/problemset/problem/72/G',1,3),(16155,'Oil','https://codeforces.com/problemset/problem/72/F',2,3),(16156,'Ali goes shopping','https://codeforces.com/problemset/problem/72/E',2,3),(16157,'Perse-script','https://codeforces.com/problemset/problem/72/D',2,3),(16158,'Extraordinarily Nice Numbers','https://codeforces.com/problemset/problem/72/C',1,3),(16159,'INI-file','https://codeforces.com/problemset/problem/72/B',2,3),(16160,'Goshtasp, Vishtasp and Eidi','https://codeforces.com/problemset/problem/72/A',2,3),(16161,'Nuclear Fusion','https://codeforces.com/problemset/problem/71/E',2,3),(16162,'Solitaire','https://codeforces.com/problemset/problem/71/D',2,3),(16163,'Round Table Knights','https://codeforces.com/problemset/problem/71/C',2,3),(16164,'Progress Bar','https://codeforces.com/problemset/problem/71/B',1,3),(16165,'Way Too Long Words','https://codeforces.com/problemset/problem/71/A',1,3),(16166,'Information Reform','https://codeforces.com/problemset/problem/70/E',3,3),(16167,'Professor\'s task','https://codeforces.com/problemset/problem/70/D',3,3),(16168,'Lucky Tickets','https://codeforces.com/problemset/problem/70/C',2,3),(16169,'Text Messaging','https://codeforces.com/problemset/problem/70/B',2,3),(16170,'Cookies','https://codeforces.com/problemset/problem/70/A',1,3),(16171,'Subsegments','https://codeforces.com/problemset/problem/69/E',2,3),(16172,'Dot','https://codeforces.com/problemset/problem/69/D',2,3),(16173,'Game','https://codeforces.com/problemset/problem/69/C',2,3),(16174,'Bets','https://codeforces.com/problemset/problem/69/B',1,3),(16175,'Young Physicist','https://codeforces.com/problemset/problem/69/A',1,3),(16176,'Contact','https://codeforces.com/problemset/problem/68/E',3,3),(16177,'Half-decay tree','https://codeforces.com/problemset/problem/68/D',2,3),(16178,'Synchrophasotron','https://codeforces.com/problemset/problem/68/C',2,3),(16179,'Energy exchange','https://codeforces.com/problemset/problem/68/B',2,3),(16180,'Irrational problem','https://codeforces.com/problemset/problem/68/A',1,3),(16181,'Save the City!','https://codeforces.com/problemset/problem/67/E',2,3),(16182,'Optical Experiment','https://codeforces.com/problemset/problem/67/D',2,3),(16183,'Sequence of Balls','https://codeforces.com/problemset/problem/67/C',3,3),(16184,'Restoration of the Permutation','https://codeforces.com/problemset/problem/67/B',2,3),(16185,'Partial Teacher','https://codeforces.com/problemset/problem/67/A',2,3),(16186,'Petya and Post','https://codeforces.com/problemset/problem/66/E',2,3),(16187,'Petya and His Friends','https://codeforces.com/problemset/problem/66/D',2,3),(16188,'Petya and File System','https://codeforces.com/problemset/problem/66/C',2,3),(16189,'Petya and Countryside','https://codeforces.com/problemset/problem/66/B',1,3),(16190,'Petya and Java','https://codeforces.com/problemset/problem/66/A',1,3),(16191,'Harry Potter and Moving Staircases','https://codeforces.com/problemset/problem/65/E',3,3),(16192,'Harry Potter and the Sorting Hat','https://codeforces.com/problemset/problem/65/D',2,3),(16193,'Harry Potter and the Golden Snitch','https://codeforces.com/problemset/problem/65/C',2,3),(16194,'Harry Potter and the History of Magic','https://codeforces.com/problemset/problem/65/B',2,3),(16195,'Harry Potter and Three Spells','https://codeforces.com/problemset/problem/65/A',2,3),(16196,'Sort the Table','https://codeforces.com/problemset/problem/64/I',2,3),(16197,'Table Bowling','https://codeforces.com/problemset/problem/64/H',2,3),(16198,'Path Canonization','https://codeforces.com/problemset/problem/64/G',2,3),(16199,'Domain','https://codeforces.com/problemset/problem/64/F',2,3),(16200,'Prime Segment','https://codeforces.com/problemset/problem/64/E',2,3),(16201,'Presents','https://codeforces.com/problemset/problem/64/D',2,3),(16202,'Table','https://codeforces.com/problemset/problem/64/C',2,3),(16203,'Expression','https://codeforces.com/problemset/problem/64/B',1,3),(16204,'Factorial','https://codeforces.com/problemset/problem/64/A',1,3),(16205,'Sweets Game','https://codeforces.com/problemset/problem/63/E',2,3),(16206,'Dividing Island','https://codeforces.com/problemset/problem/63/D',2,3),(16207,'Bulls and Cows','https://codeforces.com/problemset/problem/63/C',2,3),(16208,'Settlers\' Training','https://codeforces.com/problemset/problem/63/B',1,3),(16209,'Sinking Ship','https://codeforces.com/problemset/problem/63/A',1,3),(16210,'World Evil','https://codeforces.com/problemset/problem/62/E',3,3),(16211,'Wormhouse','https://codeforces.com/problemset/problem/62/D',2,3),(16212,'Inquisition','https://codeforces.com/problemset/problem/62/C',2,3),(16213,'Tyndex.Brome','https://codeforces.com/problemset/problem/62/B',2,3),(16214,'A Student\'s Dream','https://codeforces.com/problemset/problem/62/A',1,3),(16215,'Enemy is weak','https://codeforces.com/problemset/problem/61/E',2,3),(16216,'Eternal Victory','https://codeforces.com/problemset/problem/61/D',2,3),(16217,'Capture Valerian','https://codeforces.com/problemset/problem/61/C',2,3),(16218,'Hard Work','https://codeforces.com/problemset/problem/61/B',1,3),(16219,'Ultra-Fast Mathematician','https://codeforces.com/problemset/problem/61/A',1,3),(16220,'Mushroom Gnomes','https://codeforces.com/problemset/problem/60/E',3,3),(16221,'Savior','https://codeforces.com/problemset/problem/60/D',2,3),(16222,'Mushroom Strife','https://codeforces.com/problemset/problem/60/C',2,3),(16223,'Serial Time!','https://codeforces.com/problemset/problem/60/B',1,3),(16224,'Where Are My Flakes?','https://codeforces.com/problemset/problem/60/A',1,3),(16225,'Shortest Path','https://codeforces.com/problemset/problem/59/E',2,3),(16226,'Team Arrangement','https://codeforces.com/problemset/problem/59/D',2,3),(16227,'Title','https://codeforces.com/problemset/problem/59/C',2,3),(16228,'Fortune Telling','https://codeforces.com/problemset/problem/59/B',1,3),(16229,'Word','https://codeforces.com/problemset/problem/59/A',1,3),(16230,'Expression','https://codeforces.com/problemset/problem/58/E',2,3),(16231,'Calendar','https://codeforces.com/problemset/problem/58/D',2,3),(16232,'Trees','https://codeforces.com/problemset/problem/58/C',2,3),(16233,'Coins','https://codeforces.com/problemset/problem/58/B',1,3),(16234,'Chat room','https://codeforces.com/problemset/problem/58/A',1,3),(16235,'Chess','https://codeforces.com/problemset/problem/57/E',3,3),(16236,'Journey','https://codeforces.com/problemset/problem/57/D',2,3),(16237,'Array','https://codeforces.com/problemset/problem/57/C',2,3),(16238,'Martian Architecture','https://codeforces.com/problemset/problem/57/B',2,3),(16239,'Square Earth?','https://codeforces.com/problemset/problem/57/A',1,3),(16240,'Domino Principle','https://codeforces.com/problemset/problem/56/E',2,3),(16241,'Changing a String','https://codeforces.com/problemset/problem/56/D',2,3),(16242,'Corporation Mail','https://codeforces.com/problemset/problem/56/C',2,3),(16243,'Spoilt Permutation','https://codeforces.com/problemset/problem/56/B',1,3),(16244,'Bar','https://codeforces.com/problemset/problem/56/A',1,3),(16245,'Very simple problem','https://codeforces.com/problemset/problem/55/E',2,3),(16246,'Beautiful numbers','https://codeforces.com/problemset/problem/55/D',2,3),(16247,'Pie or die','https://codeforces.com/problemset/problem/55/C',2,3),(16248,'Smallest number','https://codeforces.com/problemset/problem/55/B',2,3),(16249,'Flea travel','https://codeforces.com/problemset/problem/55/A',1,3),(16250,'Vacuum Сleaner','https://codeforces.com/problemset/problem/54/E',3,3),(16251,'Writing a Song','https://codeforces.com/problemset/problem/54/D',2,3),(16252,'First Digit Law','https://codeforces.com/problemset/problem/54/C',2,3),(16253,'Cutting Jigsaw Puzzle','https://codeforces.com/problemset/problem/54/B',2,3),(16254,'Presents','https://codeforces.com/problemset/problem/54/A',1,3),(16255,'Dead Ends','https://codeforces.com/problemset/problem/53/E',2,3),(16256,'Physical Education','https://codeforces.com/problemset/problem/53/D',1,3),(16257,'Little Frog','https://codeforces.com/problemset/problem/53/C',1,3),(16258,'Blog Photo','https://codeforces.com/problemset/problem/53/B',2,3),(16259,'Autocomplete','https://codeforces.com/problemset/problem/53/A',1,3),(16260,'Circular RMQ','https://codeforces.com/problemset/problem/52/C',2,3),(16261,'Right Triangles','https://codeforces.com/problemset/problem/52/B',2,3),(16262,'123-sequence','https://codeforces.com/problemset/problem/52/A',1,3),(16263,'Caterpillar','https://codeforces.com/problemset/problem/51/F',3,3),(16264,'Pentagon','https://codeforces.com/problemset/problem/51/E',2,3),(16265,'Geometrical problem','https://codeforces.com/problemset/problem/51/D',2,3),(16266,'Three Base Stations','https://codeforces.com/problemset/problem/51/C',2,3),(16267,'bHTML Tables Analisys','https://codeforces.com/problemset/problem/51/B',2,3),(16268,'Cheaterius\'s Problem','https://codeforces.com/problemset/problem/51/A',1,3),(16269,'Square Equation Roots','https://codeforces.com/problemset/problem/50/E',2,3),(16270,'Bombing','https://codeforces.com/problemset/problem/50/D',2,3),(16271,'Happy Farm 5','https://codeforces.com/problemset/problem/50/C',2,3),(16272,'Choosing Symbol Pairs','https://codeforces.com/problemset/problem/50/B',1,3),(16273,'Domino piling','https://codeforces.com/problemset/problem/50/A',1,3),(16274,'Common ancestor','https://codeforces.com/problemset/problem/49/E',2,3),(16275,'Game','https://codeforces.com/problemset/problem/49/D',2,3),(16276,'Disposition','https://codeforces.com/problemset/problem/49/C',2,3),(16277,'Sum','https://codeforces.com/problemset/problem/49/B',1,3),(16278,'Sleuth','https://codeforces.com/problemset/problem/49/A',1,3),(16279,'Black and White','https://codeforces.com/problemset/problem/48/H',3,3),(16280,'Galaxy Union','https://codeforces.com/problemset/problem/48/G',3,3),(16281,'Snow sellers','https://codeforces.com/problemset/problem/48/F',3,3),(16282,'Ivan the Fool VS Gorynych the Dragon','https://codeforces.com/problemset/problem/48/E',2,3),(16283,'Permutations','https://codeforces.com/problemset/problem/48/D',1,3),(16284,'The Race','https://codeforces.com/problemset/problem/48/C',2,3),(16285,'Land Lot','https://codeforces.com/problemset/problem/48/B',1,3),(16286,'Rock-paper-scissors','https://codeforces.com/problemset/problem/48/A',1,3),(16287,'Cannon','https://codeforces.com/problemset/problem/47/E',2,3),(16288,'Safe','https://codeforces.com/problemset/problem/47/D',2,3),(16289,'Crossword','https://codeforces.com/problemset/problem/47/C',2,3),(16290,'Coins','https://codeforces.com/problemset/problem/47/B',1,3),(16291,'Triangular numbers','https://codeforces.com/problemset/problem/47/A',1,3),(16292,'Emperor\'s Problem','https://codeforces.com/problemset/problem/46/G',2,3),(16293,'Hercule Poirot Problem','https://codeforces.com/problemset/problem/46/F',2,3),(16294,'Comb','https://codeforces.com/problemset/problem/46/E',2,3),(16295,'Parking Lot','https://codeforces.com/problemset/problem/46/D',2,3),(16296,'Hamsters and Tigers','https://codeforces.com/problemset/problem/46/C',2,3),(16297,'T-shirts from Sponsor','https://codeforces.com/problemset/problem/46/B',1,3),(16298,'Ball Game','https://codeforces.com/problemset/problem/46/A',1,3),(16299,'Planting Trees','https://codeforces.com/problemset/problem/45/J',2,3),(16300,'TCMCF+++','https://codeforces.com/problemset/problem/45/I',1,3),(16301,'Road Problem','https://codeforces.com/problemset/problem/45/H',2,3),(16302,'Prime Problem','https://codeforces.com/problemset/problem/45/G',2,3),(16303,'Goats and Wolves','https://codeforces.com/problemset/problem/45/F',2,3),(16304,'Director','https://codeforces.com/problemset/problem/45/E',2,3),(16305,'Event Dates','https://codeforces.com/problemset/problem/45/D',2,3),(16306,'Dancing Lessons','https://codeforces.com/problemset/problem/45/C',2,3),(16307,'School','https://codeforces.com/problemset/problem/45/B',2,3),(16308,'Codecraft III','https://codeforces.com/problemset/problem/45/A',1,3),(16309,'Triminoes','https://codeforces.com/problemset/problem/44/J',2,3),(16310,'Toys','https://codeforces.com/problemset/problem/44/I',2,3),(16311,'Phone Number','https://codeforces.com/problemset/problem/44/H',2,3),(16312,'Shooting Gallery','https://codeforces.com/problemset/problem/44/G',2,3),(16313,'BerPaint','https://codeforces.com/problemset/problem/44/F',3,3),(16314,'Anfisa the Monkey','https://codeforces.com/problemset/problem/44/E',1,3),(16315,'Hyperdrive','https://codeforces.com/problemset/problem/44/D',2,3),(16316,'Holidays','https://codeforces.com/problemset/problem/44/C',1,3),(16317,'Cola','https://codeforces.com/problemset/problem/44/B',1,3),(16318,'Indian Summer','https://codeforces.com/problemset/problem/44/A',1,3),(16319,'Race','https://codeforces.com/problemset/problem/43/E',2,3),(16320,'Journey','https://codeforces.com/problemset/problem/43/D',2,3),(16321,'Lucky Tickets','https://codeforces.com/problemset/problem/43/C',1,3),(16322,'Letter','https://codeforces.com/problemset/problem/43/B',1,3),(16323,'Football','https://codeforces.com/problemset/problem/43/A',1,3),(16324,'Baldman and the military','https://codeforces.com/problemset/problem/42/E',3,3),(16325,'Strange town','https://codeforces.com/problemset/problem/42/D',2,3),(16326,'Safe cracking','https://codeforces.com/problemset/problem/42/C',2,3),(16327,'Game of chess unfinished','https://codeforces.com/problemset/problem/42/B',2,3),(16328,'Guilty --- to the kitchen!','https://codeforces.com/problemset/problem/42/A',1,3),(16329,'3-cycles','https://codeforces.com/problemset/problem/41/E',2,3),(16330,'Pawn','https://codeforces.com/problemset/problem/41/D',2,3),(16331,'Email address','https://codeforces.com/problemset/problem/41/C',1,3),(16332,'Martian Dollar','https://codeforces.com/problemset/problem/41/B',1,3),(16333,'Translation','https://codeforces.com/problemset/problem/41/A',1,3),(16334,'Number Table','https://codeforces.com/problemset/problem/40/E',2,3),(16335,'Interesting Sequence','https://codeforces.com/problemset/problem/40/D',3,3),(16336,'Berland Square','https://codeforces.com/problemset/problem/40/C',2,3),(16337,'Repaintings','https://codeforces.com/problemset/problem/40/B',2,3),(16338,'Find Color','https://codeforces.com/problemset/problem/40/A',1,3),(16339,'Testing','https://codeforces.com/problemset/problem/39/K',3,3),(16340,'Spelling Check','https://codeforces.com/problemset/problem/39/J',1,3),(16341,'Tram','https://codeforces.com/problemset/problem/39/I',2,3),(16342,'Multiplication Table','https://codeforces.com/problemset/problem/39/H',1,3),(16343,'Inverse Function','https://codeforces.com/problemset/problem/39/G',2,3),(16344,'Pacifist frogs','https://codeforces.com/problemset/problem/39/F',1,3),(16345,'What Has Dirichlet Got to Do with That?','https://codeforces.com/problemset/problem/39/E',2,3),(16346,'Cubical Planet','https://codeforces.com/problemset/problem/39/D',1,3),(16347,'Moon Craters','https://codeforces.com/problemset/problem/39/C',2,3),(16348,'Company Income Growth','https://codeforces.com/problemset/problem/39/B',1,3),(16349,'C*++ Calculations','https://codeforces.com/problemset/problem/39/A',2,3),(16350,'The Great Marathon','https://codeforces.com/problemset/problem/38/H',2,3),(16351,'Queue','https://codeforces.com/problemset/problem/38/G',2,3),(16352,'Smart Boy','https://codeforces.com/problemset/problem/38/F',2,3),(16353,'Let\'s Go Rolling!','https://codeforces.com/problemset/problem/38/E',2,3),(16354,'Vasya the Architect','https://codeforces.com/problemset/problem/38/D',2,3),(16355,'Blinds','https://codeforces.com/problemset/problem/38/C',1,3),(16356,'Chess','https://codeforces.com/problemset/problem/38/B',1,3),(16357,'Army','https://codeforces.com/problemset/problem/38/A',1,3),(16358,'Trial for Chief','https://codeforces.com/problemset/problem/37/E',3,3),(16359,'Lesson Timetable','https://codeforces.com/problemset/problem/37/D',2,3),(16360,'Old Berland Language','https://codeforces.com/problemset/problem/37/C',2,3),(16361,'Computer Game','https://codeforces.com/problemset/problem/37/B',2,3),(16362,'Towers','https://codeforces.com/problemset/problem/37/A',1,3),(16363,'Two Paths','https://codeforces.com/problemset/problem/36/E',3,3),(16364,'New Game with a Chess Piece','https://codeforces.com/problemset/problem/36/D',2,3),(16365,'Bowls','https://codeforces.com/problemset/problem/36/C',2,3),(16366,'Fractal','https://codeforces.com/problemset/problem/36/B',2,3),(16367,'Extra-terrestrial Intelligence','https://codeforces.com/problemset/problem/36/A',1,3),(16368,'Parade','https://codeforces.com/problemset/problem/35/E',2,3),(16369,'Animals','https://codeforces.com/problemset/problem/35/D',2,3),(16370,'Fire Again','https://codeforces.com/problemset/problem/35/C',1,3),(16371,'Warehouse','https://codeforces.com/problemset/problem/35/B',2,3),(16372,'Shell Game','https://codeforces.com/problemset/problem/35/A',1,3),(16373,'Collisions','https://codeforces.com/problemset/problem/34/E',2,3),(16374,'Road Map','https://codeforces.com/problemset/problem/34/D',2,3),(16375,'Page Numbers','https://codeforces.com/problemset/problem/34/C',1,3),(16376,'Sale','https://codeforces.com/problemset/problem/34/B',1,3),(16377,'Reconnaissance 2','https://codeforces.com/problemset/problem/34/A',1,3),(16378,'Helper','https://codeforces.com/problemset/problem/33/E',3,3),(16379,'Knights','https://codeforces.com/problemset/problem/33/D',2,3),(16380,'Wonderful Randomized Sum','https://codeforces.com/problemset/problem/33/C',2,3),(16381,'String Problem','https://codeforces.com/problemset/problem/33/B',2,3),(16382,'What is for dinner?','https://codeforces.com/problemset/problem/33/A',1,3),(16383,'Hide-and-Seek','https://codeforces.com/problemset/problem/32/E',2,3),(16384,'Constellation','https://codeforces.com/problemset/problem/32/D',2,3),(16385,'Flea','https://codeforces.com/problemset/problem/32/C',2,3),(16386,'Borze','https://codeforces.com/problemset/problem/32/B',1,3),(16387,'Reconnaissance','https://codeforces.com/problemset/problem/32/A',1,3),(16388,'TV Game','https://codeforces.com/problemset/problem/31/E',2,3),(16389,'Chocolate','https://codeforces.com/problemset/problem/31/D',2,3),(16390,'Schedule','https://codeforces.com/problemset/problem/31/C',2,3),(16391,'Sysadmin Bob','https://codeforces.com/problemset/problem/31/B',1,3),(16392,'Worms Evolution','https://codeforces.com/problemset/problem/31/A',1,3),(16393,'Tricky and Clever Password','https://codeforces.com/problemset/problem/30/E',3,3),(16394,'King\'s Problem?','https://codeforces.com/problemset/problem/30/D',3,3),(16395,'Shooting Gallery','https://codeforces.com/problemset/problem/30/C',2,3),(16396,'Codeforces World Finals','https://codeforces.com/problemset/problem/30/B',2,3),(16397,'Accounting','https://codeforces.com/problemset/problem/30/A',1,3),(16398,'Quarrel','https://codeforces.com/problemset/problem/29/E',2,3),(16399,'Ant on the Tree','https://codeforces.com/problemset/problem/29/D',2,3),(16400,'Mail Stamps','https://codeforces.com/problemset/problem/29/C',2,3),(16401,'Traffic Lights','https://codeforces.com/problemset/problem/29/B',1,3),(16402,'Spit Problem','https://codeforces.com/problemset/problem/29/A',1,3),(16403,'DravDe saves the world','https://codeforces.com/problemset/problem/28/E',3,3),(16404,'Don\'t fear, DravDe is kind','https://codeforces.com/problemset/problem/28/D',2,3),(16405,'Bath Queue','https://codeforces.com/problemset/problem/28/C',2,3),(16406,'pSort','https://codeforces.com/problemset/problem/28/B',2,3),(16407,'Bender Problem','https://codeforces.com/problemset/problem/28/A',2,3),(16408,'Number With The Given Amount Of Divisors','https://codeforces.com/problemset/problem/27/E',2,3),(16409,'Ring Road 2','https://codeforces.com/problemset/problem/27/D',2,3),(16410,'Unordered Subsequence','https://codeforces.com/problemset/problem/27/C',2,3),(16411,'Tournament','https://codeforces.com/problemset/problem/27/B',1,3),(16412,'Next Test','https://codeforces.com/problemset/problem/27/A',1,3),(16413,'Multithreading','https://codeforces.com/problemset/problem/26/E',2,3),(16414,'Tickets','https://codeforces.com/problemset/problem/26/D',2,3),(16415,'Parquet','https://codeforces.com/problemset/problem/26/C',2,3),(16416,'Regular Bracket Sequence','https://codeforces.com/problemset/problem/26/B',1,3),(16417,'Almost Prime','https://codeforces.com/problemset/problem/26/A',1,3),(16418,'Test','https://codeforces.com/problemset/problem/25/E',2,3),(16419,'Roads not only in Berland','https://codeforces.com/problemset/problem/25/D',2,3),(16420,'Roads in Berland','https://codeforces.com/problemset/problem/25/C',2,3),(16421,'Phone numbers','https://codeforces.com/problemset/problem/25/B',1,3),(16422,'IQ test','https://codeforces.com/problemset/problem/25/A',1,3),(16423,'Berland collider','https://codeforces.com/problemset/problem/24/E',2,3),(16424,'Broken robot','https://codeforces.com/problemset/problem/24/D',2,3),(16425,'Sequence of points','https://codeforces.com/problemset/problem/24/C',2,3),(16426,'F1 Champions','https://codeforces.com/problemset/problem/24/B',1,3),(16427,'Ring road','https://codeforces.com/problemset/problem/24/A',1,3),(16428,'Tree','https://codeforces.com/problemset/problem/23/E',2,3),(16429,'Tetragon','https://codeforces.com/problemset/problem/23/D',3,3),(16430,'Oranges and Apples','https://codeforces.com/problemset/problem/23/C',2,3),(16431,'Party','https://codeforces.com/problemset/problem/23/B',2,3),(16432,'You\'re Given a String...','https://codeforces.com/problemset/problem/23/A',1,3),(16433,'Scheme','https://codeforces.com/problemset/problem/22/E',2,3),(16434,'Segments','https://codeforces.com/problemset/problem/22/D',2,3),(16435,'System Administrator','https://codeforces.com/problemset/problem/22/C',2,3),(16436,'Bargaining Table','https://codeforces.com/problemset/problem/22/B',1,3),(16437,'Second Order Statistics','https://codeforces.com/problemset/problem/22/A',1,3),(16438,'Traveling Graph','https://codeforces.com/problemset/problem/21/D',2,3),(16439,'Stripe 2','https://codeforces.com/problemset/problem/21/C',2,3),(16440,'Intersection','https://codeforces.com/problemset/problem/21/B',2,3),(16441,'Jabber ID','https://codeforces.com/problemset/problem/21/A',2,3),(16442,'Dijkstra?','https://codeforces.com/problemset/problem/20/C',2,3),(16443,'Equation','https://codeforces.com/problemset/problem/20/B',2,3),(16444,'BerOS file system','https://codeforces.com/problemset/problem/20/A',2,3),(16445,'Fairy','https://codeforces.com/problemset/problem/19/E',3,3),(16446,'Points','https://codeforces.com/problemset/problem/19/D',3,3),(16447,'Deletion of Repeats','https://codeforces.com/problemset/problem/19/C',2,3),(16448,'Checkout Assistant','https://codeforces.com/problemset/problem/19/B',2,3),(16449,'World Football Cup','https://codeforces.com/problemset/problem/19/A',1,3),(16450,'Flag 2','https://codeforces.com/problemset/problem/18/E',2,3),(16451,'Seller Bob','https://codeforces.com/problemset/problem/18/D',2,3),(16452,'Stripe','https://codeforces.com/problemset/problem/18/C',1,3),(16453,'Platforms','https://codeforces.com/problemset/problem/18/B',2,3),(16454,'Triangle','https://codeforces.com/problemset/problem/18/A',1,3),(16455,'Palisection','https://codeforces.com/problemset/problem/17/E',3,3),(16456,'Notepad','https://codeforces.com/problemset/problem/17/D',2,3),(16457,'Balance','https://codeforces.com/problemset/problem/17/C',2,3),(16458,'Hierarchy','https://codeforces.com/problemset/problem/17/B',1,3),(16459,'Noldbach problem','https://codeforces.com/problemset/problem/17/A',1,3),(16460,'Fish','https://codeforces.com/problemset/problem/16/E',2,3),(16461,'Logging','https://codeforces.com/problemset/problem/16/D',2,3),(16462,'Monitor','https://codeforces.com/problemset/problem/16/C',2,3),(16463,'Burglar and Matches','https://codeforces.com/problemset/problem/16/B',1,3),(16464,'Flag','https://codeforces.com/problemset/problem/16/A',1,3),(16465,'Triangles','https://codeforces.com/problemset/problem/15/E',3,3),(16466,'Map','https://codeforces.com/problemset/problem/15/D',2,3),(16467,'Industrial Nim','https://codeforces.com/problemset/problem/15/C',2,3),(16468,'Laser','https://codeforces.com/problemset/problem/15/B',2,3),(16469,'Cottage Village','https://codeforces.com/problemset/problem/15/A',1,3),(16470,'Camels','https://codeforces.com/problemset/problem/14/E',2,3),(16471,'Two Paths','https://codeforces.com/problemset/problem/14/D',2,3),(16472,'Four Segments','https://codeforces.com/problemset/problem/14/C',2,3),(16473,'Young Photographer','https://codeforces.com/problemset/problem/14/B',1,3),(16474,'Letter','https://codeforces.com/problemset/problem/14/A',1,3),(16475,'Holes','https://codeforces.com/problemset/problem/13/E',3,3),(16476,'Triangles','https://codeforces.com/problemset/problem/13/D',3,3),(16477,'Sequence','https://codeforces.com/problemset/problem/13/C',2,3),(16478,'Letter A','https://codeforces.com/problemset/problem/13/B',2,3),(16479,'Numbers','https://codeforces.com/problemset/problem/13/A',1,3),(16480,'Start of the session','https://codeforces.com/problemset/problem/12/E',2,3),(16481,'Ball','https://codeforces.com/problemset/problem/12/D',2,3),(16482,'Fruits','https://codeforces.com/problemset/problem/12/C',1,3),(16483,'Correct Solution?','https://codeforces.com/problemset/problem/12/B',1,3),(16484,'Super Agent','https://codeforces.com/problemset/problem/12/A',1,3),(16485,'Forward, march!','https://codeforces.com/problemset/problem/11/E',3,3),(16486,'A Simple Task','https://codeforces.com/problemset/problem/11/D',2,3),(16487,'How Many Squares?','https://codeforces.com/problemset/problem/11/C',2,3),(16488,'Jumping Jack','https://codeforces.com/problemset/problem/11/B',2,3),(16489,'Increasing Sequence','https://codeforces.com/problemset/problem/11/A',1,3),(16490,'Greedy Change','https://codeforces.com/problemset/problem/10/E',3,3),(16491,'LCIS','https://codeforces.com/problemset/problem/10/D',3,3),(16492,'Digital Root','https://codeforces.com/problemset/problem/10/C',2,3),(16493,'Cinema Cashier','https://codeforces.com/problemset/problem/10/B',1,3),(16494,'Power Consumption Calculation','https://codeforces.com/problemset/problem/10/A',1,3),(16495,'Interestring graph and Apples','https://codeforces.com/problemset/problem/9/E',2,3),(16496,'How many trees?','https://codeforces.com/problemset/problem/9/D',2,3),(16497,'Hexadecimal\'s Numbers','https://codeforces.com/problemset/problem/9/C',1,3),(16498,'Running Student','https://codeforces.com/problemset/problem/9/B',1,3),(16499,'Die Roll','https://codeforces.com/problemset/problem/9/A',1,3),(16500,'Beads','https://codeforces.com/problemset/problem/8/E',3,3),(16501,'Two Friends','https://codeforces.com/problemset/problem/8/D',3,3),(16502,'Looking for Order','https://codeforces.com/problemset/problem/8/C',2,3),(16503,'Obsession with Robots','https://codeforces.com/problemset/problem/8/B',1,3),(16504,'Train and Peter','https://codeforces.com/problemset/problem/8/A',1,3),(16505,'Defining Macros','https://codeforces.com/problemset/problem/7/E',3,3),(16506,'Palindrome Degree','https://codeforces.com/problemset/problem/7/D',2,3),(16507,'Line','https://codeforces.com/problemset/problem/7/C',2,3),(16508,'Memory Manager','https://codeforces.com/problemset/problem/7/B',2,3),(16509,'Kalevitch and Chess','https://codeforces.com/problemset/problem/7/A',1,3),(16510,'Exposition','https://codeforces.com/problemset/problem/6/E',2,3),(16511,'Lizards and Basements 2','https://codeforces.com/problemset/problem/6/D',3,3),(16512,'Alice, Bob and Chocolate','https://codeforces.com/problemset/problem/6/C',1,3),(16513,'President\'s Office','https://codeforces.com/problemset/problem/6/B',1,3),(16514,'Triangle','https://codeforces.com/problemset/problem/6/A',1,3),(16515,'Bindian Signalizing','https://codeforces.com/problemset/problem/5/E',2,3),(16516,'Follow Traffic Rules','https://codeforces.com/problemset/problem/5/D',2,3),(16517,'Longest Regular Bracket Sequence','https://codeforces.com/problemset/problem/5/C',2,3),(16518,'Center Alignment','https://codeforces.com/problemset/problem/5/B',1,3),(16519,'Chat Servers Outgoing Traffic','https://codeforces.com/problemset/problem/5/A',1,3),(16520,'Mysterious Present','https://codeforces.com/problemset/problem/4/D',2,3),(16521,'Registration System','https://codeforces.com/problemset/problem/4/C',1,3),(16522,'Before an Exam','https://codeforces.com/problemset/problem/4/B',1,3),(16523,'Watermelon','https://codeforces.com/problemset/problem/4/A',1,3),(16524,'Least Cost Bracket Sequence','https://codeforces.com/problemset/problem/3/D',3,3),(16525,'Tic-tac-toe','https://codeforces.com/problemset/problem/3/C',2,3),(16526,'Lorry','https://codeforces.com/problemset/problem/3/B',2,3),(16527,'Shortest path of the king','https://codeforces.com/problemset/problem/3/A',1,3),(16528,'Commentator problem','https://codeforces.com/problemset/problem/2/C',3,3),(16529,'The least round way','https://codeforces.com/problemset/problem/2/B',2,3),(16530,'Winner','https://codeforces.com/problemset/problem/2/A',1,3),(16531,'Ancient Berland Circus','https://codeforces.com/problemset/problem/1/C',2,3),(16532,'Spreadsheet','https://codeforces.com/problemset/problem/1/B',2,3),(16533,'Theatre Square','https://codeforces.com/problemset/problem/1/A',1,3),(16534,'Subsequences with a Unique Middle Mode II','subsequences-with-a-unique-middle-mode-ii',3,1),(16535,'Zigzag Grid Traversal With Skip','zigzag-grid-traversal-with-skip',1,1),(16536,'Maximum Amount of Money Robot Can Earn','maximum-amount-of-money-robot-can-earn',2,1),(16537,'Minimize the Maximum Edge Weight of Graph','minimize-the-maximum-edge-weight-of-graph',2,1),(16538,'Count Non-Decreasing Subarrays After K Operations','count-non-decreasing-subarrays-after-k-operations',3,1),(16539,'Find Students Who Improved','find-students-who-improved',2,1),(16540,'Minimum Operations to Make Subarray Elements Equal','minimum-operations-to-make-subarray-elements-equal',2,1),(16541,'Maximum Difference Between Adjacent Elements in a Circular Array','maximum-difference-between-adjacent-elements-in-a-circular-array',1,1),(16542,'Minimum Cost to Make Arrays Identical','minimum-cost-to-make-arrays-identical',2,1),(16543,'Longest Special Path','longest-special-path',3,1),(16544,'Manhattan Distances of All Arrangements of Pieces','manhattan-distances-of-all-arrangements-of-pieces',3,1),(16545,'Sum of Variable Length Subarrays','sum-of-variable-length-subarrays',1,1),(16546,'Maximum and Minimum Sums of at Most Size K Subsequences','maximum-and-minimum-sums-of-at-most-size-k-subsequences',2,1),(16547,'Paint House IV','paint-house-iv',2,1),(16548,'Maximum and Minimum Sums of at Most Size K Subarrays','maximum-and-minimum-sums-of-at-most-size-k-subarrays',3,1),(16549,'Minimum Unlocked Indices to Sort Nums','minimum-unlocked-indices-to-sort-nums',2,1),(16550,'Count Partitions with Even Sum Difference','count-partitions-with-even-sum-difference',1,1),(16551,'Count Mentions Per User','count-mentions-per-user',2,1),(16552,'Maximum Frequency After Subarray Operation','maximum-frequency-after-subarray-operation',2,1),(16553,'Frequencies of Shortest Supersequences','frequencies-of-shortest-supersequences',3,1),(16554,'Find Valid Emails','find-valid-emails',1,1),(16555,'Permutations III','permutations-iii',2,1),(16556,'Find Valid Pair of Adjacent Digits in String','find-valid-pair-of-adjacent-digits-in-string',1,1),(16557,'Reschedule Meetings for Maximum Free Time I','reschedule-meetings-for-maximum-free-time-i',2,1),(16558,'Reschedule Meetings for Maximum Free Time II','reschedule-meetings-for-maximum-free-time-ii',2,1),(16559,'Minimum Cost Good Caption','minimum-cost-good-caption',3,1),(16560,'Maximum Difference Between Even and Odd Frequency I','maximum-difference-between-even-and-odd-frequency-i',1,1),(16561,'Maximum Manhattan Distance After K Changes','maximum-manhattan-distance-after-k-changes',2,1),(16562,'Minimum Increments for Target Multiples in an Array','minimum-increments-for-target-multiples-in-an-array',3,1),(16563,'Maximum Difference Between Even and Odd Frequency II','maximum-difference-between-even-and-odd-frequency-ii',3,1),(16564,'Sort Matrix by Diagonals','sort-matrix-by-diagonals',2,1),(16565,'Assign Elements to Groups with Constraints','assign-elements-to-groups-with-constraints',2,1),(16566,'Count Substrings Divisible By Last Digit','count-substrings-divisible-by-last-digit',3,1),(16567,'Maximize the Minimum Game Score','maximize-the-minimum-game-score',3,1),(16568,'Maximum Students on a Single Bench','maximum-students-on-a-single-bench',1,1),(16569,'Find Invalid IP Addresses','find-invalid-ip-addresses',3,1),(16570,'Sum of Good Numbers','sum-of-good-numbers',1,1),(16571,'Separate Squares I','separate-squares-i',2,1),(16572,'Separate Squares II','separate-squares-ii',3,1),(16573,'Shortest Matching Substring','shortest-matching-substring',3,1),(16574,'Find Special Substring of Length K','find-special-substring-of-length-k',1,1),(16575,'Eat Pizzas!','eat-pizzas',2,1),(16576,'Select K Disjoint Special Substrings','select-k-disjoint-special-substrings',2,1),(16577,'Length of Longest V-Shaped Diagonal Segment','length-of-longest-v-shaped-diagonal-segment',3,1),(16578,'Longest Common Prefix After at Most One Removal','longest-common-prefix-after-at-most-one-removal',2,1),(16579,'Check If Digits Are Equal in String After Operations I','check-if-digits-are-equal-in-string-after-operations-i',1,1),(16580,'Maximum Sum With at Most K Elements','maximum-sum-with-at-most-k-elements',2,1),(16581,'Check If Digits Are Equal in String After Operations II','check-if-digits-are-equal-in-string-after-operations-ii',3,1),(16582,'Maximize the Distance Between Points on a Square','maximize-the-distance-between-points-on-a-square',3,1),(16583,'Find Products with Valid Serial Numbers','find-products-with-valid-serial-numbers',1,1),(16584,'Maximum Coin Collection ','maximum-coin-collection',2,1),(16585,'Transform Array by Parity','transform-array-by-parity',1,1),(16586,'Find the Number of Copy Arrays','find-the-number-of-copy-arrays',2,1),(16587,'Find Minimum Cost to Remove Array Elements','find-minimum-cost-to-remove-array-elements',2,1),(16588,'Permutations IV','permutations-iv',3,1),(16589,'Find the Largest Almost Missing Integer','find-the-largest-almost-missing-integer',1,1),(16590,'Longest Palindromic Subsequence After at Most K Operations','longest-palindromic-subsequence-after-at-most-k-operations',2,1),(16591,'Sum of K Subarrays With Length at Least M','sum-of-k-subarrays-with-length-at-least-m',2,1),(16592,'Lexicographically Smallest Generated String','lexicographically-smallest-generated-string',3,1),(16593,'DNA Pattern Recognition ','dna-pattern-recognition',2,1),(16594,'Maximize Profit from Task Assignment','maximize-profit-from-task-assignment',2,1),(16595,'Fruits Into Baskets II','fruits-into-baskets-ii',1,1),(16596,'Choose K Elements With Maximum Sum','choose-k-elements-with-maximum-sum',2,1),(16597,'Fruits Into Baskets III','fruits-into-baskets-iii',2,1),(16598,'Maximize Subarrays After Removing One Conflicting Pair','maximize-subarrays-after-removing-one-conflicting-pair',3,1),(16599,'Apply Substitutions','apply-substitutions',2,1),(16600,'Analyze Organization Hierarchy','analyze-organization-hierarchy',3,1),(16601,'Unique 3-Digit Even Numbers','unique-3-digit-even-numbers',1,1),(16602,'Design Spreadsheet','design-spreadsheet',2,1),(16603,'Longest Common Prefix of K Strings After Removal','longest-common-prefix-of-k-strings-after-removal',3,1),(16604,'Longest Special Path II','longest-special-path-ii',3,1),(16605,'Maximum Unique Subarray Sum After Deletion','maximum-unique-subarray-sum-after-deletion',1,1),(16606,'Closest Equal Element Queries','closest-equal-element-queries',2,1),(16607,'Zero Array Transformation IV','zero-array-transformation-iv',2,1),(16608,'Count Beautiful Numbers','count-beautiful-numbers',3,1),(16609,'Phone Number Prefix','phone-number-prefix',1,1),(16610,'Maximum Containers on a Ship','maximum-containers-on-a-ship',1,1),(16611,'Properties Graph','properties-graph',2,1),(16612,'Find the Minimum Amount of Time to Brew Potions','find-the-minimum-amount-of-time-to-brew-potions',2,1),(16613,'Minimum Operations to Make Array Elements Zero','minimum-operations-to-make-array-elements-zero',3,1),(16614,'Maximize Score After Pair Deletions','maximize-score-after-pair-deletions',2,1),(16615,'Analyze Subscription Conversion ','analyze-subscription-conversion',2,1),(16616,'Reverse Degree of a String','reverse-degree-of-a-string',1,1),(16617,'Maximize Active Section with Trade I','maximize-active-section-with-trade-i',2,1),(16618,'Minimum Cost to Divide Array Into Subarrays','minimum-cost-to-divide-array-into-subarrays',3,1),(16619,'Maximize Active Section with Trade II','maximize-active-section-with-trade-ii',3,1),(16620,'Minimum Cost to Reach Every Position','minimum-cost-to-reach-every-position',1,1),(16621,'Longest Palindrome After Substring Concatenation I','longest-palindrome-after-substring-concatenation-i',2,1),(16622,'Longest Palindrome After Substring Concatenation II','longest-palindrome-after-substring-concatenation-ii',3,1),(16623,'Minimum Operations to Make Elements Within K Subarrays Equal','minimum-operations-to-make-elements-within-k-subarrays-equal',3,1),(16624,'Find Time Required to Eliminate Bacterial Strains','find-time-required-to-eliminate-bacterial-strains',3,1),(16625,'Minimum Pair Removal to Sort Array I','minimum-pair-removal-to-sort-array-i',1,1),(16626,'Implement Router','implement-router',2,1),(16627,'Maximum Product of Subsequences With an Alternating Sum Equal to K','maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k',3,1),(16628,'Minimum Pair Removal to Sort Array II','minimum-pair-removal-to-sort-array-ii',3,1),(16629,'Make a Positive Array','make-a-positive-array',2,1),(16630,'Minimum Operations to Make Array Sum Divisible by K','minimum-operations-to-make-array-sum-divisible-by-k',1,1),(16631,'Number of Unique XOR Triplets I','number-of-unique-xor-triplets-i',2,1),(16632,'Number of Unique XOR Triplets II','number-of-unique-xor-triplets-ii',2,1),(16633,'Shortest Path in a Weighted Tree','shortest-path-in-a-weighted-tree',3,1),(16634,'Find Closest Person','find-closest-person',1,1),(16635,'Smallest Palindromic Rearrangement I','smallest-palindromic-rearrangement-i',2,1),(16636,'Smallest Palindromic Rearrangement II','smallest-palindromic-rearrangement-ii',3,1),(16637,'Count Numbers with Non-Decreasing Digits ','count-numbers-with-non-decreasing-digits',3,1),(16638,'Minimum Threshold for Inversion Pairs Count','minimum-threshold-for-inversion-pairs-count',2,1),(16639,'Find Product Recommendation Pairs','find-product-recommendation-pairs',2,1),(16640,'Calculate Score After Performing Instructions','calculate-score-after-performing-instructions',2,1),(16641,'Make Array Non-decreasing','make-array-non-decreasing',2,1),(16642,'Find X Value of Array I','find-x-value-of-array-i',2,1),(16643,'Find X Value of Array II','find-x-value-of-array-ii',3,1),(16644,'Range XOR Queries with Subarray Reversals','range-xor-queries-with-subarray-reversals',3,1),(16645,'Find the Most Common Response','find-the-most-common-response',2,1),(16646,'Unit Conversion I','unit-conversion-i',2,1),(16647,'Count Cells in Overlapping Horizontal and Vertical Substrings','count-cells-in-overlapping-horizontal-and-vertical-substrings',2,1),(16648,'Maximum Profit from Valid Topological Order in DAG','maximum-profit-from-valid-topological-order-in-dag',3,1),(16649,'Count Covered Buildings','count-covered-buildings',2,1),(16650,'Path Existence Queries in a Graph I','path-existence-queries-in-a-graph-i',2,1),(16651,'Concatenated Divisibility','concatenated-divisibility',3,1),(16652,'Path Existence Queries in a Graph II','path-existence-queries-in-a-graph-ii',3,1),(16653,'Unit Conversion II','unit-conversion-ii',2,1),(16654,'Array insert at index','https://www.geeksforgeeks.org/problems/array-insert-at-index/1',4,2),(16655,'Who has the majority?','https://www.geeksforgeeks.org/problems/who-has-the-majority/1',4,2),(16656,'Count Total Digits in a Number','https://www.geeksforgeeks.org/problems/count-total-digits-in-a-number/1',1,2),(16657,'Data Types','https://www.geeksforgeeks.org/problems/data-types/1',1,2),(16658,'Sum of Digits of a Number','https://www.geeksforgeeks.org/problems/sum-of-digits-of-a-number/1',4,2),(16659,'Array insert at end','https://www.geeksforgeeks.org/problems/array-insert-at-end/1',4,2),(16660,'Fibonacci Using Recursion','https://www.geeksforgeeks.org/problems/fibonacci-using-recursion/1',4,2),(16661,'Count 1\'s in binary array','https://www.geeksforgeeks.org/problems/count-1s-in-binary-array-1587115620/1',1,2),(16662,'Digital Root','https://www.geeksforgeeks.org/problems/digital-root/1',1,2),(16663,'Linear Probing in Hashing','https://www.geeksforgeeks.org/problems/linear-probing-in-hashing-1587115620/1',1,2),(16664,'Strongest Neighbour','https://www.geeksforgeeks.org/problems/strongest-neighbour/1',4,2),(16665,'Power Using Recursion','https://www.geeksforgeeks.org/problems/power-using-recursion/1',4,2),(16666,'Check Prime','https://www.geeksforgeeks.org/problems/check-prime/1',1,2),(16667,'Swap The Numbers','https://www.geeksforgeeks.org/problems/swap-the-numbers/1',4,2),(16668,'The FizzBuzz Program','https://www.geeksforgeeks.org/problems/the-fizzbuzz-program/1',1,2),(16669,'Day before N days','https://www.geeksforgeeks.org/problems/days-before-n-days/1',1,2),(16670,'Calculator','https://www.geeksforgeeks.org/problems/calculator/1',1,2),(16671,'Print With Space','https://www.geeksforgeeks.org/problems/print-with-space/1',4,2),(16672,'Multiply the matrices','https://www.geeksforgeeks.org/problems/multiply-the-matrices-1587115620/1',4,2),(16673,'Hashing for pair - 1','https://www.geeksforgeeks.org/problems/hashing-for-pair-1/1',1,2),(16674,'Even Odd Game','https://www.geeksforgeeks.org/problems/even-odd-game/1',1,2),(16675,'Naive Pattern Search','https://www.geeksforgeeks.org/problems/naive-pattern-search-1587115620/1',1,2),(16676,'Last Digit of a number','https://www.geeksforgeeks.org/problems/last-digit-of-a-number/1',4,2),(16677,'The If Statement','https://www.geeksforgeeks.org/problems/the-if-statement/1',4,2),(16678,'Implement Pow','https://www.geeksforgeeks.org/problems/powx-n/1',2,2),(16679,'Switch Statement','https://www.geeksforgeeks.org/problems/switch-statement/1',4,2),(16680,'Lexicographic Rank Of A String','https://www.geeksforgeeks.org/problems/rank-the-permutations-1587115621/1',2,2),(16681,'Operations on Stack','https://www.geeksforgeeks.org/problems/operations-on-stack/1',4,2),(16682,'Floor in BST','https://www.geeksforgeeks.org/problems/implementing-floor-in-bst/1',2,2),(16683,'Count Non-Repeated Elements','https://www.geeksforgeeks.org/problems/count-distinct-elements-1587115620/1',1,2),(16684,'Deque Traversal','https://www.geeksforgeeks.org/problems/dequeue-traversal/1',4,2),(16685,'For Loop - 2','https://www.geeksforgeeks.org/problems/for-loop-2/1',4,2),(16686,'Is Linked List Sorted','https://www.geeksforgeeks.org/problems/is-linked-list-sorted/1',1,2),(16687,'Quadratic Probing in Hashing','https://www.geeksforgeeks.org/problems/quadratic-probing-in-hashing-1587115621/1',1,2),(16688,'First Digit of a Number','https://www.geeksforgeeks.org/problems/first-digit-of-a-number/1',1,2),(16689,'Print Square','https://www.geeksforgeeks.org/problems/print-square/1',4,2),(16690,'Input Integer','https://www.geeksforgeeks.org/problems/input-integer/1',4,2),(16691,'Print With Separator','https://www.geeksforgeeks.org/problems/print-with-separator/1',4,2),(16692,'Sum of N Numbers','https://www.geeksforgeeks.org/problems/sum-of-n-number/1',4,2),(16693,'Removing consecutive duplicates - 2','https://www.geeksforgeeks.org/problems/removing-consecutive-duplicates-2-1587115621/1',1,2),(16694,'Count Digits','https://www.geeksforgeeks.org/problems/count-digits-1606889545/1',1,2),(16695,'Hashing for pair - 2','https://www.geeksforgeeks.org/problems/hashing-for-pair-2/1',1,2),(16696,'Type Conversion','https://www.geeksforgeeks.org/problems/type-conversion/1',1,2),(16697,'Pattern Search','https://www.geeksforgeeks.org/problems/distinct-pattern-search-1587115620/1',3,2),(16698,'Repeating Character - First Appearance Leftmost','https://www.geeksforgeeks.org/problems/repeating-character-first-appearance-leftmost/1',4,2),(16699,'Operations on Queue','https://www.geeksforgeeks.org/problems/operations-on-queue/1',4,2),(16700,'AP Term','https://www.geeksforgeeks.org/problems/ap-term/1',1,2),(16701,'Table Difference','https://www.geeksforgeeks.org/problems/table-difference/1',4,2),(16702,'Parent of Max GCD Siblings in a Binary Tree','https://www.geeksforgeeks.org/problems/find-the-node-with-maximum-gcd-of-the-siblings-of-a-binary-tree/1',1,2),(16703,'While Loop','https://www.geeksforgeeks.org/problems/while-loop/1',4,2),(16704,'Function With Return Value','https://www.geeksforgeeks.org/problems/function-with-return-value/1',4,2),(16705,'K Closest Points to Origin','https://www.geeksforgeeks.org/problems/k-closest-points-to-origin--172242/1',2,2),(16706,'GCD','https://www.geeksforgeeks.org/problems/gcd/1',4,2),(16707,'Pairwise swap of nodes in LinkedList','https://www.geeksforgeeks.org/problems/pairwise-swap-of-nodes-in-linkelist/1',2,2),(16708,'Closer to sort','https://www.geeksforgeeks.org/problems/closer-to-sort-1587115620/1',2,2),(16709,'Prime Factorization','https://www.geeksforgeeks.org/problems/prime-factorization/1',1,2),(16710,'The Else Statement','https://www.geeksforgeeks.org/problems/the-else-statement/1',4,2),(16711,'Rabin Karp - Pattern Searching','https://www.geeksforgeeks.org/problems/rabin-karp-pattern-searching/1',2,2),(16712,'Right Angle Triangle 2','https://www.geeksforgeeks.org/problems/right-angle-triangle-2-1605689820/1',1,2),(16713,'Print Without Space','https://www.geeksforgeeks.org/problems/print-without-space/1',4,2),(16714,'Game Of Subsets','https://www.geeksforgeeks.org/problems/game-of-subsets/1',3,2),(16715,'Longest Bounded-Difference Subarray','https://www.geeksforgeeks.org/problems/longest-bounded-difference-subarray/1',2,2),(16716,'Deque deletion','https://www.geeksforgeeks.org/problems/deque-deletion/1',4,2),(16717,'Concatenate Integers','https://www.geeksforgeeks.org/problems/concatenate-integers/1',4,2),(16718,'Length of String','https://www.geeksforgeeks.org/problems/length-of-string/1',4,2),(16719,'Check if a String is Subsequence of Other','https://www.geeksforgeeks.org/problems/given-two-strings-find-if-first-string-is-a-subsequence-of-second/1',2,2),(16720,'Next Prime Number','https://www.geeksforgeeks.org/problems/next-prime-number/1',2,2),(16721,'Merge three sorted arrays','https://www.geeksforgeeks.org/problems/merge-three-sorted-arrays-1587115620/1',2,2),(16722,'Unique Number I','https://www.geeksforgeeks.org/problems/find-unique-number/1',1,2),(16723,'Count Smaller Than X','https://www.geeksforgeeks.org/problems/count-smaller-than-x/1',1,2),(16724,'Separate chaining in Hashing','https://www.geeksforgeeks.org/problems/separate-chaining-in-hashing-1587115621/1',1,2),(16725,'Divisor','https://www.geeksforgeeks.org/problems/divisor/1',4,2),(16726,'Pair Sum in BST','https://www.geeksforgeeks.org/problems/pair-sum-in-bst/1',2,2),(16727,'Bitwise Right Shift','https://www.geeksforgeeks.org/problems/bitwise-right-shift/1',4,2),(16728,'Pangram Checking','https://www.geeksforgeeks.org/problems/panagram-checking/1',4,2),(16729,'Count Words in String','https://www.geeksforgeeks.org/problems/count-words-in-string/1',4,2),(16730,'Reversing the columns of a Matrix','https://www.geeksforgeeks.org/problems/reversing-the-columns-of-a-matrix-1587115621/1',1,2),(16731,'LCM','https://www.geeksforgeeks.org/problems/lcm/1',4,2),(16732,'Interchanging the rows of a Matrix','https://www.geeksforgeeks.org/problems/reversing-the-rows-of-a-matrix-1587115621/1',1,2),(16733,'Add - Auto Keyword','https://www.geeksforgeeks.org/problems/add-auto-keyword--141631/1',1,2),(16734,'Learn to Comment - Python','https://www.geeksforgeeks.org/problems/learn-to-comment-python/1',4,2),(16735,'Evaluate Formulae','https://www.geeksforgeeks.org/problems/evaluate-formulae/1',4,2),(16736,'The Else if Statement','https://www.geeksforgeeks.org/problems/the-else-if-statement/1',4,2),(16737,'Greatest of Three','https://www.geeksforgeeks.org/problems/greatest-of-three/1',1,2),(16738,'Bitwise Operators','https://www.geeksforgeeks.org/problems/bitwise-operators-1597314674/1',4,2),(16739,'Sum All Array Elements','https://www.geeksforgeeks.org/problems/sum-all-array-elements/1',1,2),(16740,'Print GeeksForGeeks with quotes','https://www.geeksforgeeks.org/problems/print-geeksforgeeks-with-quotes--141631/1',4,2),(16741,'Factorial','https://www.geeksforgeeks.org/problems/factorial-1598335080/1',4,2),(16742,'Swap The Numbers','https://www.geeksforgeeks.org/problems/swap-the-numbers--150024/1',5,2),(16743,'Array Traversal Reverse','https://www.geeksforgeeks.org/problems/array-traversal-reverse/1',1,2),(16744,'Function With Arguments','https://www.geeksforgeeks.org/problems/function-with-arguments-1605762259/1',4,2),(16745,'Find if +ve, -ve or 0','https://www.geeksforgeeks.org/problems/find-if-ve-ve-or-0--141631/1',4,2),(16746,'Linked List Delete at Position','https://www.geeksforgeeks.org/problems/linked-list-delete-at-position/1',1,2),(16747,'Return Size','https://www.geeksforgeeks.org/problems/return-size--141631/1',1,2),(16748,'Right Angle Triangle','https://www.geeksforgeeks.org/problems/right-angle-triangle-1605685807/1',1,2),(16749,'Minimum Weight Cycle','https://www.geeksforgeeks.org/problems/minimum-weight-cycle/1',3,2),(16750,'Start Coding - Python','https://www.geeksforgeeks.org/problems/start-coding-python--093158/1',4,2),(16751,'Display Linked List','https://www.geeksforgeeks.org/problems/display-linked-list/1',4,2),(16752,'Pattern Search KMP','https://www.geeksforgeeks.org/problems/pattern-search-kmp/1',3,2),(16753,'Test if tuple is distinct','https://www.geeksforgeeks.org/problems/test-if-tuple-is-distinct/1',1,2),(16754,'Global variable','https://www.geeksforgeeks.org/problems/global-variable--141631/1',1,2),(16755,'Inorder traversal of a BST','https://www.geeksforgeeks.org/problems/inorder-traversal-of-a-bst/1',1,2),(16756,'Search In Linked List','https://www.geeksforgeeks.org/problems/search-in-linked-list/1',4,2),(16757,'Print Alphabets','https://www.geeksforgeeks.org/problems/print-alphabets/1',1,2),(16758,'Decrement Array Values','https://www.geeksforgeeks.org/problems/decrement-array-values/1',1,2),(16759,'Print GeeksForGeeks','https://www.geeksforgeeks.org/problems/print-geeksforgeeks--141629/1',4,2),(16760,'Kth call','https://www.geeksforgeeks.org/problems/kth-call--141631/1',1,2),(16761,'Camel Case','https://www.geeksforgeeks.org/problems/camel-case04234120/1',2,2),(16762,'Insertion in deque','https://www.geeksforgeeks.org/problems/insertion-in-deque/1',4,2),(16763,'Find one extra character','https://www.geeksforgeeks.org/problems/find-one-extra-character/1',1,2),(16764,'Input Floating Number','https://www.geeksforgeeks.org/problems/input-floating-number/1',4,2),(16765,'Type Inference','https://www.geeksforgeeks.org/problems/type-inference--141631/1',1,2),(16766,'Arithmetic Operators','https://www.geeksforgeeks.org/problems/arithmetic-operators-1605594922/1',4,2),(16767,'Print GeeksForGeeks','https://www.geeksforgeeks.org/problems/print-geeksforgeeks--141628/1',1,2),(16768,'Check Palindrome','https://www.geeksforgeeks.org/problems/check-palindrome--141628/1',4,2),(16769,'For Loop - 1','https://www.geeksforgeeks.org/problems/for-loop-1-1605617969/1',4,2),(16770,'Rotate Deque By K','https://www.geeksforgeeks.org/problems/rotate-deque-by-k/1',1,2),(16771,'Inverted Right AngleTriangle','https://www.geeksforgeeks.org/problems/inverted-right-angletriangle-1605691171/1',4,2),(16772,'Reverse String','https://www.geeksforgeeks.org/problems/reverse-string/1',4,2),(16773,'Design a class','https://www.geeksforgeeks.org/problems/design-a-class/1',1,2),(16774,'Input String','https://www.geeksforgeeks.org/problems/input-string/1',4,2),(16775,'Min Heap implementation','https://www.geeksforgeeks.org/problems/min-heap-implementation/1',1,2),(16776,'Reverse String','https://www.geeksforgeeks.org/problems/reverse-string--141628/1',4,2),(16777,'Constructor','https://www.geeksforgeeks.org/problems/constructor/1',4,2),(16778,'Average','https://www.geeksforgeeks.org/problems/average-1608106189/1',1,2),(16779,'Join Two Linked Lists','https://www.geeksforgeeks.org/problems/join-two-linked-lists/1',1,2),(16780,'Average','https://www.geeksforgeeks.org/problems/average-1605782581/1',1,2),(16781,'Scientific Format','https://www.geeksforgeeks.org/problems/scientific-format--141631/1',1,2),(16782,'Function With No Arguments','https://www.geeksforgeeks.org/problems/function-with-no-arguments-1605703188/1',4,2),(16783,'Average','https://www.geeksforgeeks.org/problems/average-1598856895/1',1,2),(16784,'Delete Head of Linked List','https://www.geeksforgeeks.org/problems/delete-head-of-linked-list/1',1,2),(16785,'Fibonacci Number','https://www.geeksforgeeks.org/problems/fibonacci-number-1605700704/1',4,2),(16786,'Print Alphabets','https://www.geeksforgeeks.org/problems/print-alphabets--141628/1',1,2),(16787,'Levelorder traversal of a BST','https://www.geeksforgeeks.org/problems/levelorder-traversal-of-a-bst/1',1,2),(16788,'Print Square Wall 2','https://www.geeksforgeeks.org/problems/print-square-wall-2/1',1,2),(16789,'Array Traversal','https://www.geeksforgeeks.org/problems/array-traversal/1',4,2),(16790,'Find Volume','https://www.geeksforgeeks.org/problems/find-volume--141631/1',1,2),(16791,'C++ STL List','https://www.geeksforgeeks.org/problems/c-stl-list/1',4,2),(16792,'Find Pattern','https://www.geeksforgeeks.org/problems/find-pattern--141628/1',4,2),(16793,'Implement Dictionary in Python','https://www.geeksforgeeks.org/problems/implement-dictionary-in-python--172954/1',1,2),(16794,'Size of an Array','https://www.geeksforgeeks.org/problems/size-of-an-array/1',4,2),(16795,'Decimal number to binary number','https://www.geeksforgeeks.org/problems/decimal-number-to-binary-number--141631/1',1,2),(16796,'Print Without Newline','https://www.geeksforgeeks.org/problems/print-without-newline-1605265372/1',4,2),(16797,'Slice The String','https://www.geeksforgeeks.org/problems/slice-the-string/1',4,2),(16798,'Print Square wall','https://www.geeksforgeeks.org/problems/print-square-wall-1605682270/1',4,2),(16799,'Addition','https://www.geeksforgeeks.org/problems/addition/1',1,2),(16800,'Last Digit of a number','https://www.geeksforgeeks.org/problems/last-digit-of-a-number--145429/1',4,2),(16801,'Constructor Overloading','https://www.geeksforgeeks.org/problems/constructor-overloading/1',1,2),(16802,'Is The Doubly Linked List Circular','https://www.geeksforgeeks.org/problems/is-the-doubly-linked-list-circular/1',1,2),(16803,'Print Square Wall Using Nested Loops','https://www.geeksforgeeks.org/problems/print-square-wall-2-1605683124/1',1,2),(16804,'CPP Substring','https://www.geeksforgeeks.org/problems/cpp-substring/1',1,2),(16805,'Range Min Max Queries','https://www.geeksforgeeks.org/problems/range-min-max-queries4557/1',2,2),(16806,'Range Sum Queries','https://www.geeksforgeeks.org/problems/range-sum-queries2353/1',2,2),(16807,'The FizzBuzz Program','https://www.geeksforgeeks.org/problems/the-fizzbuzz-program--125723/1',1,2),(16808,'The Size of Operator','https://www.geeksforgeeks.org/problems/the-size-of-operator--141631/1',1,2),(16809,'Sum - Default Arguments','https://www.geeksforgeeks.org/problems/sum-default-arguments--141631/1',1,2),(16810,'Slice The String','https://www.geeksforgeeks.org/problems/slice-the-string--141628/1',4,2),(16811,'Compare two numbers','https://www.geeksforgeeks.org/problems/compare-two-numbers/1',4,2),(16812,'Shopkeeper Profit','https://www.geeksforgeeks.org/problems/shopkeeper-profit/1',2,2),(16813,'Find Middle of Circular Doubly Linked List','https://www.geeksforgeeks.org/problems/find-middle-of-circular-doubly-linked-list/1',1,2),(16814,'Search Query for Strings','https://www.geeksforgeeks.org/problems/search-query-for-strings5049/1',1,2),(16815,'Struct area','https://www.geeksforgeeks.org/problems/struct-area/1',4,2),(16816,'Renaming Cities','https://www.geeksforgeeks.org/problems/renaming-cities28581833/1',2,2),(16817,'Maximum Among Left','https://www.geeksforgeeks.org/problems/maximum-among-left/1',1,2),(16818,'Address Operator','https://www.geeksforgeeks.org/problems/address-operator/1',1,2),(16819,'Type Conversion','https://www.geeksforgeeks.org/problems/type-conversion--151956/1',1,2),(16820,'Left Index','https://www.geeksforgeeks.org/problems/left-index1524/1',1,2),(16821,'ArrayList Operations','https://www.geeksforgeeks.org/problems/arraylist-operations/1',1,2),(16822,'GetLine 1','https://www.geeksforgeeks.org/problems/getline-1--141631/1',1,2),(16823,'Prime At Prime Index','https://www.geeksforgeeks.org/problems/prime-at-prime-index/1',2,2),(16824,'Range Longest Correct Bracket Subsequence Queries','https://www.geeksforgeeks.org/problems/range-queries-for-longest-correct-bracket-subsequence4719/1',2,2),(16825,'Leap Year','https://www.geeksforgeeks.org/problems/leap-year-1598599919--155509/1',1,2),(16826,'Vector Erase and Clear','https://www.geeksforgeeks.org/problems/vector-erase-and-clear/1',4,2),(16827,'Vector insertion','https://www.geeksforgeeks.org/problems/vector-insertion/1',4,2),(16828,'Arithmetic Operators','https://www.geeksforgeeks.org/problems/arithmetic-operators-1605594922--131943/1',4,2),(16829,'Find Pattern','https://www.geeksforgeeks.org/problems/find-pattern/1',4,2),(16830,'Find index','https://www.geeksforgeeks.org/problems/find-index-1614919939--145853/1',1,2),(16831,'Int Str','https://www.geeksforgeeks.org/problems/int-str--164410/1',4,2),(16832,'Contiguous Elements XOR','https://www.geeksforgeeks.org/problems/contiguous-elements-xor4151/1',3,2),(16833,'Maximize Number of Toys','https://www.geeksforgeeks.org/problems/maximize-number-of-toys/1',4,2),(16834,'Sort Vector of Pairs','https://www.geeksforgeeks.org/problems/sort-vector-of-pairs/1',4,2),(16835,'Pairing elements','https://www.geeksforgeeks.org/problems/pairing-elements/1',4,2),(16836,'Delete Head of Doubly Linked List','https://www.geeksforgeeks.org/problems/delete-head-of-doubly-linked-list/1',1,2),(16837,'Vector Sum','https://www.geeksforgeeks.org/problems/vector-sum/1',4,2),(16838,'TypeCast And Double It','https://www.geeksforgeeks.org/problems/typecast-and-double-it--153103/1',4,2),(16839,'ArrayList insertion','https://www.geeksforgeeks.org/problems/arraylist-insertion/1',4,2),(16840,'Make pair','https://www.geeksforgeeks.org/problems/make-pair/1',4,2),(16841,'Range GCD Queries','https://www.geeksforgeeks.org/problems/range-gcd-queries3654/1',2,2),(16842,'Geometric Progression Term','https://www.geeksforgeeks.org/problems/geometric-progression-term--141631/1',1,2),(16843,'GetLine 2','https://www.geeksforgeeks.org/problems/getline-2--141631/1',1,2),(16844,'Sort one array according to another array','https://www.geeksforgeeks.org/problems/sort-one-array-according-to-another-array/1',1,2),(16845,'Minimum Vertical Sum','https://www.geeksforgeeks.org/problems/minimum-vertical-sum/1',2,2),(16846,'Elements Less Than K','https://www.geeksforgeeks.org/problems/elements-less-than-k/1',1,2),(16847,'Change Case','https://www.geeksforgeeks.org/problems/change-case--141628/1',4,2),(16848,'Length of The Array','https://www.geeksforgeeks.org/problems/length-of-the-array/1',4,2),(16849,'Add two complex numbers','https://www.geeksforgeeks.org/problems/add-two-complex-numbers/1',1,2),(16850,'Java Exception Handling','https://www.geeksforgeeks.org/problems/java-exception-handling-1606978567/1',2,2),(16851,'Corresponding pair','https://www.geeksforgeeks.org/problems/corresponding-pair/1',1,2),(16852,'Print Different Characters In Sorted Manner','https://www.geeksforgeeks.org/problems/print-different-characters-in-sorted-manner/1',1,2),(16853,'Multi Printing','https://www.geeksforgeeks.org/problems/multi-printing--153452/1',4,2),(16854,'Sorted Frequency','https://www.geeksforgeeks.org/problems/sorted-frequency/1',4,2),(16855,'Input In Python','https://www.geeksforgeeks.org/problems/input-in-python/1',1,2),(16856,'The If Statement','https://www.geeksforgeeks.org/problems/the-if-statement--113256/1',4,2),(16857,'Range LCM Queries','https://www.geeksforgeeks.org/problems/range-lcm-queries3348/1',2,2),(16858,'Tie Breaker','https://www.geeksforgeeks.org/problems/tie-breaker/1',2,2),(16859,'One Parameter Lambda Expression','https://www.geeksforgeeks.org/problems/one-parameter-lambda-expression/1',4,2),(16860,'Tuple 2','https://www.geeksforgeeks.org/problems/tuple-2/1',2,2),(16861,'Tuple 1','https://www.geeksforgeeks.org/problems/tuple-1/1',1,2),(16862,'Implement Union','https://www.geeksforgeeks.org/problems/implement-union--141631/1',4,2),(16863,'No Parameter Lambda Expression','https://www.geeksforgeeks.org/problems/no-parameter-lambda-expression/1',4,2),(16864,'Vector Shrink To Fit','https://www.geeksforgeeks.org/problems/vector-shrink-to-fit/1',4,2),(16865,'Largest Sum Contiguous Subarray in Range','https://www.geeksforgeeks.org/problems/largest-sum-contiguous-subarray-in-range-1587115620/1',2,2),(16866,'Java Streams Sum','https://www.geeksforgeeks.org/problems/java-streams-sum/1',4,2),(16867,'Bitwise Operators','https://www.geeksforgeeks.org/problems/bitwise-operators-1597314674--135255/1',4,2),(16868,'Forward list deletion in C++','https://www.geeksforgeeks.org/problems/forward-list-deletion-in-c/1',2,2),(16869,'Decimal to binary','https://www.geeksforgeeks.org/problems/decimal-to-binary-1610434291/1',1,2),(16870,'Find distinct elements','https://www.geeksforgeeks.org/problems/find-distinct-elements-1614078205/1',1,2),(16871,'Java Streams Max','https://www.geeksforgeeks.org/problems/java-streams-max/1',4,2),(16872,'Multi Parameters Lambda Expression','https://www.geeksforgeeks.org/problems/multi-parameters-lambda-expression/1',4,2),(16873,'Maximum Neighbours In ArrayList','https://www.geeksforgeeks.org/problems/maximum-neighbours-in-arraylist/1',1,2),(16874,'Check Prime','https://www.geeksforgeeks.org/problems/check-prime--153305/1',1,2),(16875,'Average of an ArrayList','https://www.geeksforgeeks.org/problems/average-of-an-arraylist--141628/1',1,2),(16876,'Factorial of BigInteger','https://www.geeksforgeeks.org/problems/factorial-of-biginteger/1',1,2),(16877,'Unordered Set Find Duplicate','https://www.geeksforgeeks.org/problems/unordered-set-find-duplicate/1',4,2),(16878,'For Loop - 1','https://www.geeksforgeeks.org/problems/for-loop-1-1605617969--181812/1',4,2),(16879,'Decimal number to binary number','https://www.geeksforgeeks.org/problems/decimal-number-to-binary-number--141632/1',1,2),(16880,'The Else Statement','https://www.geeksforgeeks.org/problems/the-else-statement--115735/1',4,2),(16881,'Implement Set in Python','https://www.geeksforgeeks.org/problems/implement-set-in-python--160443/1',1,2),(16882,'Greatest of Three','https://www.geeksforgeeks.org/problems/greatest-of-three--154612/1',1,2),(16883,'Marks Allotment','https://www.geeksforgeeks.org/problems/marks-allotment--141631/1',1,2),(16884,'Forward List Insert','https://www.geeksforgeeks.org/problems/forward-list-insert/1',4,2),(16885,'Increasing Roll And Marks','https://www.geeksforgeeks.org/problems/increasing-roll-and-marks/1',1,2),(16886,'ArrayList Iterate Front to Back','https://www.geeksforgeeks.org/problems/arraylist-iterate-front-to-back/1',1,2),(16887,'Design a Data Structure with insert/replace/print Operation','https://www.geeksforgeeks.org/problems/design-a-data-structure-with-insertreplaceprint-operation/1',1,2),(16888,'Nth Fibonacci number using BigIntegers','https://www.geeksforgeeks.org/problems/nth-fibonacci-number-using-bigintegers/1',1,2),(16889,'Evaluate Formulae','https://www.geeksforgeeks.org/problems/evaluate-formulae--133849/1',4,2),(16890,'While Loop','https://www.geeksforgeeks.org/problems/while-loop--175711/1',4,2),(16891,'List Traversal','https://www.geeksforgeeks.org/problems/list-traversal/1',4,2),(16892,'Logical Operators','https://www.geeksforgeeks.org/problems/logical-operators-1597313687--171003/1',4,2),(16893,'Max consecutive one','https://www.geeksforgeeks.org/problems/max-consecutive-one/1',1,2),(16894,'Binary to Decimal','https://www.geeksforgeeks.org/problems/binary-to-decimal-1611122504/1',1,2),(16895,'Check Sorted ArrayList','https://www.geeksforgeeks.org/problems/check-sorted-arraylist/1',1,2),(16896,'Calculator','https://www.geeksforgeeks.org/problems/calculator--172632/1',1,2),(16897,'Even Odd Game','https://www.geeksforgeeks.org/problems/even-odd-game--153136/1',1,2),(16898,'Sum of N Numbers','https://www.geeksforgeeks.org/problems/sum-of-n-number--144226/1',4,2),(16899,'Day before N days','https://www.geeksforgeeks.org/problems/days-before-n-days--150030/1',1,2),(16900,'LinkedList Traversal','https://www.geeksforgeeks.org/problems/linkedlist-traversal/1',4,2),(16901,'Forward List Erase After','https://www.geeksforgeeks.org/problems/forward-list-erase-after/1',4,2),(16902,'Java Streams Average','https://www.geeksforgeeks.org/problems/java-streams-average/1',4,2),(16903,'LinkedList Insertion','https://www.geeksforgeeks.org/problems/linkedlist-insertion/1',4,2),(16904,'LinkedList Josephus Circle','https://www.geeksforgeeks.org/problems/linkedlist-josephus-circle/1',2,2),(16905,'Ceil in a Sorted Array','https://www.geeksforgeeks.org/problems/ceil-in-a-sorted-array/1',1,2),(16906,'Java Streams Filter','https://www.geeksforgeeks.org/problems/java-streams-filter/1',4,2),(16907,'AP Term','https://www.geeksforgeeks.org/problems/ap-term--150919/1',1,2),(16908,'Solving queries','https://www.geeksforgeeks.org/problems/solving-queries--173202/1',1,2),(16909,'Numbers with prime frequencies greater than or equal to k','https://www.geeksforgeeks.org/problems/numbers-with-prime-frequencies-greater-than-or-equal-to-k5823/1',1,2),(16910,'Sort in Descending','https://www.geeksforgeeks.org/problems/sort-in-descending--141631/1',1,2),(16911,'Add two numbers','https://www.geeksforgeeks.org/problems/add-two-numbers/1',1,2),(16912,'Josephus Circle using List','https://www.geeksforgeeks.org/problems/josephus-circle-using-list/1',2,2),(16913,'Geometric Progression Term','https://www.geeksforgeeks.org/problems/geometric-progression-term--151948/1',1,2),(16914,'Lambda Expression in C++','https://www.geeksforgeeks.org/problems/lambda-expression-in-c/1',1,2),(16915,'Minimum Vertical Sum','https://www.geeksforgeeks.org/problems/minimum-vertical-sum-1593518814/1',2,2),(16916,'TreeSet Operations','https://www.geeksforgeeks.org/problems/treeset-operations/1',4,2),(16917,'Check Subset','https://www.geeksforgeeks.org/problems/check-subset--164700/1',1,2),(16918,'Binary Search on ArrayList','https://www.geeksforgeeks.org/problems/binary-search-on-arraylist/1',4,2),(16919,'Unordered Set Swap Function','https://www.geeksforgeeks.org/problems/unordered-set-swap-function/1',4,2),(16920,'Self referential structures','https://www.geeksforgeeks.org/problems/self-referential-structures--141631/1',4,2),(16921,'Binary Search Method','https://www.geeksforgeeks.org/problems/binary-search-method/1',4,2),(16922,'Swap the objects-Double pointers','https://www.geeksforgeeks.org/problems/swap-the-objects-double-pointers--141630/1',1,2),(16923,'Next Prime Number','https://www.geeksforgeeks.org/problems/next-prime-number--163011/1',2,2),(16924,'Length of The List','https://www.geeksforgeeks.org/problems/length-of-the-list/1',1,2),(16925,'Union of Two Sets','https://www.geeksforgeeks.org/problems/union-of-two-arrays3538--171343/1',1,2),(16926,'Sum The List','https://www.geeksforgeeks.org/problems/sum-the-list/1',1,2),(16927,'Max and Min In ArrayList','https://www.geeksforgeeks.org/problems/max-and-min-in-arraylist/1',4,2),(16928,'Be Precise in C','https://www.geeksforgeeks.org/problems/be-precise-in-c/1',1,2),(16929,'Fibonacci Number','https://www.geeksforgeeks.org/problems/fibonacci-number-1605700704--152305/1',4,2),(16930,'Queue Traversal','https://www.geeksforgeeks.org/problems/queue-traversal-1594111322/1',4,2),(16931,'Right Angle Triangle 2','https://www.geeksforgeeks.org/problems/right-angle-triangle-2-1605689820--102106/1',1,2),(16932,'Decrement List Values','https://www.geeksforgeeks.org/problems/decrement-list-values/1',1,2),(16933,'Print GeeksForGeeks','https://www.geeksforgeeks.org/problems/print-geeksforgeeks/1',4,2),(16934,'Print Square','https://www.geeksforgeeks.org/problems/print-square--105330/1',4,2),(16935,'Factorial','https://www.geeksforgeeks.org/problems/factorial-1598335080--125944/1',4,2),(16936,'Count Only Once','https://www.geeksforgeeks.org/problems/count-only-once/1',4,2),(16937,'Append To List','https://www.geeksforgeeks.org/problems/append-to-list/1',4,2),(16938,'Maximum Element in Array','https://www.geeksforgeeks.org/problems/largest-element-in-array4009--142158/1',4,2),(16939,'GCD','https://www.geeksforgeeks.org/problems/gcd--144435/1',4,2),(16940,'Table Difference','https://www.geeksforgeeks.org/problems/table-difference--155953/1',4,2),(16941,'Print With Separator','https://www.geeksforgeeks.org/problems/print-with-separator--121510/1',4,2),(16942,'List Traversal Reverse','https://www.geeksforgeeks.org/problems/list-traversal-reverse/1',1,2),(16943,'Function Template','https://www.geeksforgeeks.org/problems/function-template/1',2,2),(16944,'Vector Accumulate','https://www.geeksforgeeks.org/problems/vector-accumulate/1',1,2),(16945,'Less Than','https://www.geeksforgeeks.org/problems/less-than/1',1,2),(16946,'Rotate vector by K places','https://www.geeksforgeeks.org/problems/rotate-vector-by-k-places/1',1,2),(16947,'For Loop - 2','https://www.geeksforgeeks.org/problems/for-loop-2--182531/1',4,2),(16948,'Unordered Set Hash Function','https://www.geeksforgeeks.org/problems/unordered-set-hash-function/1',4,2),(16949,'Separate Even Odd','https://www.geeksforgeeks.org/problems/separate-even-odd/1',1,2),(16950,'Check if Arrays are Permutations','https://www.geeksforgeeks.org/problems/check-if-arrays-are-permutations/1',1,2),(16951,'Find element in vector using find','https://www.geeksforgeeks.org/problems/find-element-in-vector-using-find--141628/1',4,2),(16952,'Search in Vector','https://www.geeksforgeeks.org/problems/search-in-vector/1',4,2),(16953,'Sum of N Numbers','https://www.geeksforgeeks.org/problems/sum-of-n-number--123033/1',4,2),(16954,'Elected candidate','https://www.geeksforgeeks.org/problems/elected-candidate/1',1,2),(16955,'Print Statement','https://www.geeksforgeeks.org/problems/print-statement--112959/1',4,2),(16956,'Vector fill','https://www.geeksforgeeks.org/problems/vector-fill/1',4,2),(16957,'Find element in Set using find','https://www.geeksforgeeks.org/problems/find-element-in-set-using-find/1',4,2),(16958,'Compute a/b','https://www.geeksforgeeks.org/problems/compute-ab/1',1,2),(16959,'Array Searching','https://www.geeksforgeeks.org/problems/search-an-element-in-an-array-1587115621--133819/1',4,2),(16960,'Frequency Count','https://www.geeksforgeeks.org/problems/frequency-count/1',1,2),(16961,'Print Square Wall Using Nested Loops','https://www.geeksforgeeks.org/problems/print-square-wall-2-1605683124--114227/1',1,2),(16962,'Inverted Right AngleTriangle','https://www.geeksforgeeks.org/problems/inverted-right-angletriangle-1605691171--104349/1',4,2),(16963,'Print With Space','https://www.geeksforgeeks.org/problems/print-with-space--115905/1',4,2),(16964,'Comparator Sort Coordinates','https://www.geeksforgeeks.org/problems/comparator-sort-coordinates/1',1,2),(16965,'Substring','https://www.geeksforgeeks.org/problems/substring/1',1,2),(16966,'Count Distinct','https://www.geeksforgeeks.org/problems/count-distinct/1',1,2),(16967,'Get smaller elements','https://www.geeksforgeeks.org/problems/get-smaller-elements/1',1,2),(16968,'LCM','https://www.geeksforgeeks.org/problems/lcm--151453/1',4,2),(16969,'Divisor','https://www.geeksforgeeks.org/problems/divisor--125050/1',4,2),(16970,'Print Without Space','https://www.geeksforgeeks.org/problems/print-without-space--124240/1',4,2),(16971,'PriorityQueue Inserion - 2','https://www.geeksforgeeks.org/problems/priorityqueue-inserion-2/1',4,2),(16972,'Equals Method','https://www.geeksforgeeks.org/problems/equals-method/1',4,2),(16973,'ArrayList Separate Even Odd','https://www.geeksforgeeks.org/problems/arraylist-separate-even-odd--141628/1',1,2),(16974,'PriorityQueue Inserion - 1','https://www.geeksforgeeks.org/problems/priorityqueue-inserion/1',4,2),(16975,'Comparator Sort Strings','https://www.geeksforgeeks.org/problems/comparator-sort-strings/1',4,2),(16976,'Average','https://www.geeksforgeeks.org/problems/average-of-positives/1',1,2),(16977,'Sort Method','https://www.geeksforgeeks.org/problems/sort-method/1',4,2),(16978,'Fill Method','https://www.geeksforgeeks.org/problems/fill-method/1',4,2),(16979,'Logical Operators','https://www.geeksforgeeks.org/problems/logical-operators-1605596247--132814/1',4,2),(16980,'Right Angle Triangle','https://www.geeksforgeeks.org/problems/right-angle-triangle--113338/1',4,2),(16981,'Sort An ArrayList','https://www.geeksforgeeks.org/problems/sort-an-arraylist/1',4,2),(16982,'Print Square wall','https://www.geeksforgeeks.org/problems/print-square-wall-1605682270--111211/1',4,2),(16983,'Removing Consecutive Elements','https://www.geeksforgeeks.org/problems/removing-consecutive-elements/1',2,2),(16984,'The Elif Statement','https://www.geeksforgeeks.org/problems/the-elif-statement--100454/1',4,2),(16985,'Are LinkedLists Equal','https://www.geeksforgeeks.org/problems/are-linkedlists-equal/1',4,2),(16986,'Fill LinkedList','https://www.geeksforgeeks.org/problems/fill-linkedlist/1',4,2),(16987,'Most Frequent Element in an Array','https://www.geeksforgeeks.org/problems/most-frequent-element-in-an-array/1',1,2),(16988,'Switch Statement','https://www.geeksforgeeks.org/problems/switch-statement--150234/1',4,2),(16989,'Rotate LinkedList By K','https://www.geeksforgeeks.org/problems/rotate-linkedlist-by-k/1',4,2),(16990,'Minimum Spanning Tree - Kruskal\'s Algorithm','https://www.geeksforgeeks.org/problems/minimum-spanning-tree-kruskals-algorithm/1',2,2),(16991,'Zeros count','https://www.geeksforgeeks.org/problems/count-the-zeros2550--141153/1',1,2),(16992,'Keep Indices After Sorting','https://www.geeksforgeeks.org/problems/keep-indices-after-sorting/1',1,2),(16993,'Bitwise Right Shift','https://www.geeksforgeeks.org/problems/bitwise-right-shift--140107/1',4,2),(16994,'Be Precise','https://www.geeksforgeeks.org/problems/be-precise--125634/1',1,2),(16995,'Right Angle Triangle','https://www.geeksforgeeks.org/problems/right-angle-triangle-1605685807--183457/1',1,2),(16996,'Count Digits','https://www.geeksforgeeks.org/problems/count-digits-1606889545--123832/1',1,2),(16997,'Subarrays With At Most K Distinct Integers','https://www.geeksforgeeks.org/problems/subarrays-with-at-most-k-distinct-integers/1',2,2),(16998,'The Else if Statement','https://www.geeksforgeeks.org/problems/the-else-if-statement--121819/1',4,2),(16999,'Valid Triangle','https://www.geeksforgeeks.org/problems/valid-triangle--121441/1',1,2),(17000,'Series with largest GCD and sum equals to N','https://www.geeksforgeeks.org/problems/series-with-largest-gcd-and-sum-equals-to-n1151/1',2,2),(17001,'The New Line','https://www.geeksforgeeks.org/problems/the-new-line--113334/1',1,2),(17002,'String comparison','https://www.geeksforgeeks.org/problems/string-comparison--141631/1',1,2),(17003,'Reverse String in C','https://www.geeksforgeeks.org/problems/reverse-string-in-c/1',1,2),(17004,'Find if +ve, -ve or 0','https://www.geeksforgeeks.org/problems/find-if-ve-ve-or-0--111305/1',4,2),(17005,'Get Max from Stack','https://www.geeksforgeeks.org/problems/get-max-from-stack/1',2,2),(17006,'Capitalize and Count','https://www.geeksforgeeks.org/problems/capitalize-and-count--143718/1',1,2),(17007,'Print GeeksForGeeks with quotes','https://www.geeksforgeeks.org/problems/print-geeksforgeeks-with-quotes--115621/1',4,2),(17008,'Magic in C','https://www.geeksforgeeks.org/problems/magic-in-c--141631/1',1,2),(17009,'Delete Mid of a Stack','https://www.geeksforgeeks.org/problems/delete-middle-element-of-a-stack--111318/1',1,2),(17010,'Encapsulation in Python','https://www.geeksforgeeks.org/problems/encapsulation-in-python/1',1,2),(17011,'Row Sum in a Matrix','https://www.geeksforgeeks.org/problems/row-sum-in-a-matrix/1',1,2),(17012,'Column Sum in a Matrix','https://www.geeksforgeeks.org/problems/column-sum-in-a-matrix/1',1,2),(17013,'Area of a Circle','https://www.geeksforgeeks.org/problems/area-of-a-circle/1',1,2),(17014,'Sum of XOR of all possible subsets','https://www.geeksforgeeks.org/problems/sum-of-xor-of-all-possible-subsets/1',2,2),(17015,'String Concatenation','https://www.geeksforgeeks.org/problems/string-concatenation-1614157859/1',1,2),(17016,'Dynamic Memory Allocation','https://www.geeksforgeeks.org/problems/dynamic-memory-allocation/1',1,2),(17017,'Check whether the array is sorted or not','https://www.geeksforgeeks.org/problems/check-if-an-array-is-sorted0701--140001/1',1,2),(17018,'Convert to Hexadecimal','https://www.geeksforgeeks.org/problems/convert-to-hexadecimal--122416/1',1,2),(17019,'Magic Square','https://www.geeksforgeeks.org/problems/magic-square/1',2,2),(17020,'Meeting Rooms III','https://www.geeksforgeeks.org/problems/meeting-rooms-iii/1',3,2),(17021,'Sum of Squares of First n Natural Numbers','https://www.geeksforgeeks.org/problems/sum-of-squares-of-first-n-natural-numbers/1',1,2),(17022,'Multiply Matrices','https://www.geeksforgeeks.org/problems/multiply-matrices--141631/1',1,2),(17023,'Multiple inheritence in Python','https://www.geeksforgeeks.org/problems/multiple-inheritence-in-python/1',1,2),(17024,'Exception Handling In Python','https://www.geeksforgeeks.org/problems/exception-handling-in-python/1',1,2),(17025,'Find Transpose of a Matrix','https://www.geeksforgeeks.org/problems/find-transpose-of-a-matrix/1',1,2),(17026,'Check if Permutation is Substring','https://www.geeksforgeeks.org/problems/check-if-permutation-is-substring/1',1,2),(17027,'2D World','https://www.geeksforgeeks.org/problems/2d-world-1614085379/1',1,2),(17028,'Abstraction in Python','https://www.geeksforgeeks.org/problems/abstraction-in-python/1',1,2),(17029,'Static Method In Python','https://www.geeksforgeeks.org/problems/static-method-in-python/1',1,2),(17030,'Minimum K Consecutive Bit Flips','https://www.geeksforgeeks.org/problems/minimum-number-of-k-consecutive-bit-flips--171650/1',3,2),(17031,'Check if two strings are same or not','https://www.geeksforgeeks.org/problems/check-if-two-strings-are-same-or-not--155406/1',1,2),(17032,'Missing Number in Sorted Array of Natural Numbers','https://www.geeksforgeeks.org/problems/missing-number-in-sorted-array-of-natural-numbers/1',1,2),(17033,'Method Overriding in Python','https://www.geeksforgeeks.org/problems/method-overriding-in-python/1',2,2),(17034,'Inheritance in Python','https://www.geeksforgeeks.org/problems/inheritance-in-python/1',1,2),(17035,'Queue using two Stacks','https://www.geeksforgeeks.org/problems/queue-using-two-stacks--115418/1',1,2),(17036,'Total Hamming Distance','https://www.geeksforgeeks.org/problems/total-hamming-distance/1',2,2),(17037,'Operator Overloading In Python','https://www.geeksforgeeks.org/problems/operator-overloading-in-python/1',1,2),(17038,'Search a Character in a String','https://www.geeksforgeeks.org/problems/search-a-character-in-a-string/1',1,2),(17039,'Longest Valid Word with All Prefixes','https://www.geeksforgeeks.org/problems/longest-valid-word-with-all-prefixes/1',2,2),(17040,'Function pointer','https://www.geeksforgeeks.org/problems/function-pointer/1',1,2),(17041,'Reverse Array Using Stack','https://www.geeksforgeeks.org/problems/reverse-array-using-stack--143151/1',4,2),(17042,'Print ascii value in python','https://www.geeksforgeeks.org/problems/print-ascii-value-in-python/1',1,2),(17043,'Special Functions In Python','https://www.geeksforgeeks.org/problems/special-functions-in-python/1',1,2),(17044,'Decimal to binary','https://www.geeksforgeeks.org/problems/decimal-to-binary-1610434291--161808/1',1,2),(17045,'Binary to Decimal','https://www.geeksforgeeks.org/problems/binary-to-decimal-1611122504--161115/1',1,2),(17046,'Earliest Common Slot','https://www.geeksforgeeks.org/problems/earliest-common-slot/1',2,2),(17047,'Merge k Sorted Arrays','https://www.geeksforgeeks.org/problems/merge-k-sorted-arrays--151335/1',2,2),(17048,'Remove all occurrences of a character in a string','https://www.geeksforgeeks.org/problems/remove-all-occurrences-of-a-character-in-a-string/1',1,2),(17049,'Reverse First K of Queue','https://www.geeksforgeeks.org/problems/reverse-first-k-elements-of-queue--123903/1',1,2),(17050,'Interval List Intersections','https://www.geeksforgeeks.org/problems/interval-list-intersections/1',2,2),(17051,'Remove a Character from a Given Position','https://www.geeksforgeeks.org/problems/remove-a-character-from-a-given-position/1',1,2),(17052,'Encapsulation in Java','https://www.geeksforgeeks.org/problems/encapsulation-in-java/1',1,2),(17053,'Swap Values using pointers','https://www.geeksforgeeks.org/problems/magic-in-cpp--120640/1',1,2),(17054,'Method Overloading  in Java','https://www.geeksforgeeks.org/problems/method-overloading-in-java/1',1,2),(17055,'Inheritance in Java','https://www.geeksforgeeks.org/problems/inheritance-in-java/1',1,2),(17056,'Transpose of Matrix','https://www.geeksforgeeks.org/problems/transpose-of-matrix-1587115621--165510/1',1,2),(17057,'Get min at pop','https://www.geeksforgeeks.org/problems/get-min-at-pop--124347/1',1,2),(17058,'Kth smallest element','https://www.geeksforgeeks.org/problems/kth-smallest-element5545-1587115620--102500/1',2,2),(17059,'Product of Two Numbers','https://www.geeksforgeeks.org/problems/product-of-two-numbers/1',1,2),(17060,'The Thief Problem','https://www.geeksforgeeks.org/problems/the-thief-problem--100828/1',1,2),(17061,'Kth smallest element','https://www.geeksforgeeks.org/problems/kth-smallest-element5545-1587115620--121437/1',2,2),(17062,'Subtract 1 using Bitwise operators','https://www.geeksforgeeks.org/problems/subtract-1-without-using-arithmetic-operators/1',1,2),(17063,'Operations on Queue','https://www.geeksforgeeks.org/problems/operations-on-queue--114617/1',4,2),(17064,'Abstraction in Java','https://www.geeksforgeeks.org/problems/abstraction-in-java/1',1,2),(17065,'Insertion in deque','https://www.geeksforgeeks.org/problems/insertion-in-deque--141904/1',4,2),(17066,'Queue Push & Pop','https://www.geeksforgeeks.org/problems/queue-designer--104629/1',4,2),(17067,'Count the number of possible triangles','https://www.geeksforgeeks.org/problems/count-possible-triangles-1587115620--094125/1',2,2),(17068,'Insert node at last in circular linked list','https://www.geeksforgeeks.org/problems/insert-node-at-last-in-circular-linked-list/1',1,2),(17069,'K Most occurring elements','https://www.geeksforgeeks.org/problems/most-occurring-elements-1587115620--143034/1',2,2),(17070,'Game of stones','https://www.geeksforgeeks.org/problems/game-of-stones/1',2,2),(17071,'Hashing for pair - 2','https://www.geeksforgeeks.org/problems/hashing-for-pair-2--114603/1',1,2),(17072,'Insertion in deque','https://www.geeksforgeeks.org/problems/insertion-in-deque--151437/1',4,2),(17073,'Hashing for pair - 1','https://www.geeksforgeeks.org/problems/hashing-for-pair-1--110939/1',1,2),(17074,'Winner of an election','https://www.geeksforgeeks.org/problems/winner-of-an-election-where-votes-are-represented-as-candidate-names-1587115621--162858/1',1,2),(17075,'Distinct Sorted','https://www.geeksforgeeks.org/problems/distinct-sorted--124713/1',4,2),(17076,'Unordered Set Size Function','https://www.geeksforgeeks.org/problems/unordered-set-size-function--110845/1',4,2),(17077,'The Thief Problem','https://www.geeksforgeeks.org/problems/the-thief-problem--180930/1',1,2),(17078,'Diagonal sum','https://www.geeksforgeeks.org/problems/diagonal-sum--103215/1',1,2),(17079,'Parties and seats','https://www.geeksforgeeks.org/problems/parties-and-seats--191330/1',4,2),(17080,'Overlapping Intervals','https://www.geeksforgeeks.org/problems/overlapping-intervals--174556/1',1,2),(17081,'Set bits in N','https://www.geeksforgeeks.org/problems/set-bits-in-n--163218/1',4,2),(17082,'Middle swap','https://www.geeksforgeeks.org/problems/middle-swap/1',1,2),(17083,'Max Sum Subarray Mod','https://www.geeksforgeeks.org/problems/max-sum-subarray-mod/1',2,2),(17084,'Maximum Sum Subarray','https://www.geeksforgeeks.org/problems/maximum-sum-subarray--143510/1',2,2),(17085,'Sort and reverse','https://www.geeksforgeeks.org/problems/sort-and-reverse--171030/1',4,2),(17086,'Size of Doubly Linked List','https://www.geeksforgeeks.org/problems/size-of-doubly-linked-list--114556/1',1,2),(17087,'Use Function Pointer to call the function','https://www.geeksforgeeks.org/problems/use-function-pointer-to-call-the-function/1',1,2),(17088,'Vector min_element','https://www.geeksforgeeks.org/problems/vector-min-element--151110/1',1,2),(17089,'Insertion in an empty circular linked list','https://www.geeksforgeeks.org/problems/insertion-in-an-empty-circular-linked-list/1',1,2),(17090,'Function pointer as parameter','https://www.geeksforgeeks.org/problems/function-pointer-as-parameter/1',1,2),(17091,'Vector max_element','https://www.geeksforgeeks.org/problems/vector-max-element--145411/1',4,2),(17092,'Subarray sum','https://www.geeksforgeeks.org/problems/subarray-sum--111254/1',2,2),(17093,'Network Delay Time','https://www.geeksforgeeks.org/problems/network-delay-time/1',2,2),(17094,'Maximum Of All Subarrays Of Size K Using Dequeue','https://www.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k-using-dequeue--161044/1',2,2),(17095,'Stable Marriage Problem','https://www.geeksforgeeks.org/problems/stable-marriage-problem/1',2,2),(17096,'Lexicographical Rank Of String','https://www.geeksforgeeks.org/problems/lexicographical-rank-of-string--121503/1',2,2),(17097,'Lexicographical maximum substring of String','https://www.geeksforgeeks.org/problems/lexicographical-maximum-substring/1',1,2),(17098,'Pangram check','https://www.geeksforgeeks.org/problems/pangram-check--155158/1',4,2),(17099,'Factorial Zero Count','https://www.geeksforgeeks.org/problems/factorial-zero-count/1',1,2),(17100,'Sum Unique Elements','https://www.geeksforgeeks.org/problems/sum-unique-elements--160334/1',1,2),(17101,'upper and lower bounds of an element','https://www.geeksforgeeks.org/problems/upper-and-lower-bounds-of-an-element--110936/1',4,2),(17102,'Largest palindrome by changing at most K-digits','https://www.geeksforgeeks.org/problems/largest-palindrome-by-changing-at-most-k-digits/1',1,2),(17103,'Heapify the vector','https://www.geeksforgeeks.org/problems/heapify-the-vector--102013/1',4,2),(17104,'Pattern searching','https://www.geeksforgeeks.org/problems/pattern-searching5231--150028/1',1,2),(17105,'Chocolate Distribution Problem','https://www.geeksforgeeks.org/problems/chocolate-distribution-problem-1607582550--183828/1',1,2),(17106,'Maximium Sum','https://www.geeksforgeeks.org/problems/maximize-the-sum--113532/1',1,2),(17107,'New Registration System','https://www.geeksforgeeks.org/problems/new-registration-system--150419/1',1,2),(17108,'Insertion at specific position in circular linked list','https://www.geeksforgeeks.org/problems/insertion-at-specific-position-in-circular-linked-list/1',1,2),(17109,'Maximal Disjoint Intervals','https://www.geeksforgeeks.org/problems/maximal-disjoint-intervals/1',2,2),(17110,'Permutations of string','https://www.geeksforgeeks.org/problems/permutations-of-string--123809/1',4,2),(17111,'Find element in Set using Count','https://www.geeksforgeeks.org/problems/find-element-in-set-using-count--161122/1',1,2),(17112,'Minimum Distance between Two Points','https://www.geeksforgeeks.org/problems/minimum-distance-between-two-points/1',1,2),(17113,'Lexicographically Smallest String','https://www.geeksforgeeks.org/problems/lexicographically-smallest-string--151951/1',1,2),(17114,'Remove from vector','https://www.geeksforgeeks.org/problems/remove-from-vector--173105/1',4,2),(17115,'Merge Sorted Arrays Using Minheap','https://www.geeksforgeeks.org/problems/merge-sorted-arrays-using-minheap--114218/1',1,2),(17116,'Tiling Problem','https://www.geeksforgeeks.org/problems/tiling-problem/1',3,2),(17117,'Fallen Towers','https://codeforces.com/problemset/problem/2108/F',6,3),(17118,'Spruce Dispute','https://codeforces.com/problemset/problem/2108/E',6,3),(17119,'Needle in a Numstack','https://codeforces.com/problemset/problem/2108/D',6,3),(17120,'Neo\'s Escape','https://codeforces.com/problemset/problem/2108/C',6,3),(17121,'SUMdamental Decomposition','https://codeforces.com/problemset/problem/2108/B',6,3),(17122,'Permutation Warm-Up','https://codeforces.com/problemset/problem/2108/A',6,3),(17123,'Baudelaire (hard version)','https://codeforces.com/problemset/problem/2106/G2',6,3),(17124,'Baudelaire (easy version)','https://codeforces.com/problemset/problem/2106/G1',6,3),(17125,'Goblin','https://codeforces.com/problemset/problem/2106/F',6,3),(17126,'Wolf','https://codeforces.com/problemset/problem/2106/E',6,3),(17127,'Flower Boy','https://codeforces.com/problemset/problem/2106/D',6,3),(17128,'Cherry Bomb','https://codeforces.com/problemset/problem/2106/C',6,3),(17129,'St. Chroma','https://codeforces.com/problemset/problem/2106/B',6,3),(17130,'Dr. TC','https://codeforces.com/problemset/problem/2106/A',6,3),(17131,'Modulo 3','https://codeforces.com/problemset/problem/2104/G',6,3),(17132,'Numbers and Strings','https://codeforces.com/problemset/problem/2104/F',6,3),(17133,'Unpleasant Strings','https://codeforces.com/problemset/problem/2104/E',6,3),(17134,'Array and GCD','https://codeforces.com/problemset/problem/2104/D',6,3),(17135,'Card Game','https://codeforces.com/problemset/problem/2104/C',6,3),(17136,'Move to the End','https://codeforces.com/problemset/problem/2104/B',6,3),(17137,'Three Decks','https://codeforces.com/problemset/problem/2104/A',6,3),(17138,'Maximize Nor','https://codeforces.com/problemset/problem/2103/F',6,3),(17139,'Keep the Sum','https://codeforces.com/problemset/problem/2103/E',6,3),(17140,'Local Construction','https://codeforces.com/problemset/problem/2103/D',6,3),(17141,'Median Splits','https://codeforces.com/problemset/problem/2103/C',6,3),(17142,'Binary Typewriter','https://codeforces.com/problemset/problem/2103/B',6,3),(17143,'Common Multiple','https://codeforces.com/problemset/problem/2103/A',6,3),(17144,'Sasha and the Apartment Purchase','https://codeforces.com/problemset/problem/2098/B',6,3),(17145,'Vadim\'s Collection','https://codeforces.com/problemset/problem/2098/A',6,3),(17146,'Lost Luggage','https://codeforces.com/problemset/problem/2097/F',6,3),(17147,'Clearing the Snowdrift','https://codeforces.com/problemset/problem/2097/E',6,3),(17148,'Homework','https://codeforces.com/problemset/problem/2097/D',6,3),(17149,'Bermuda Triangle','https://codeforces.com/problemset/problem/2097/C',6,3),(17150,'Baggage Claim','https://codeforces.com/problemset/problem/2097/B',6,3),(17151,'Sports Betting','https://codeforces.com/problemset/problem/2097/A',6,3),(17152,'Wonderful XOR Problem','https://codeforces.com/problemset/problem/2096/H',3,3),(17153,'Wonderful Guessing Game','https://codeforces.com/problemset/problem/2096/G',3,3),(17154,'Wonderful Impostors','https://codeforces.com/problemset/problem/2096/F',3,3),(17155,'Wonderful Teddy Bears','https://codeforces.com/problemset/problem/2096/E',2,3),(17156,'Wonderful Lightbulbs','https://codeforces.com/problemset/problem/2096/D',2,3),(17157,'Wonderful City','https://codeforces.com/problemset/problem/2096/C',2,3),(17158,'Wonderful Gloves','https://codeforces.com/problemset/problem/2096/B',1,3),(17159,'Wonderful Sticks','https://codeforces.com/problemset/problem/2096/A',1,3),(17160,'Premiere at a Wrong Time','https://codeforces.com/problemset/problem/2095/J',6,3),(17161,'Mysterious Script','https://codeforces.com/problemset/problem/2095/I',6,3),(17162,'Blurry Vision','https://codeforces.com/problemset/problem/2095/H',6,3),(17163,'Definitely a Geometry Problem','https://codeforces.com/problemset/problem/2095/G',6,3),(17164,'⅓ оf а Рrоblеm','https://codeforces.com/problemset/problem/2095/F',6,3),(17165,'Pair Count','https://codeforces.com/problemset/problem/2095/E',6,3),(17166,'Where Am I?','https://codeforces.com/problemset/problem/2095/D',6,3),(17167,'Would It Be Unrated?','https://codeforces.com/problemset/problem/2095/C',6,3),(17168,'Plinko','https://codeforces.com/problemset/problem/2095/B',6,3),(17169,'Piecing It Together','https://codeforces.com/problemset/problem/2095/A',6,3),(17170,'La Vaca Saturno Saturnita','https://codeforces.com/problemset/problem/2094/H',2,3),(17171,'Chimpanzini Bananini','https://codeforces.com/problemset/problem/2094/G',2,3),(17172,'Trulimero Trulicina','https://codeforces.com/problemset/problem/2094/F',2,3),(17173,'Boneca Ambalabu','https://codeforces.com/problemset/problem/2094/E',1,3),(17174,'Tung Tung Sahur','https://codeforces.com/problemset/problem/2094/D',1,3),(17175,'Brr Brrr Patapim','https://codeforces.com/problemset/problem/2094/C',1,3),(17176,'Bobritto Bandito','https://codeforces.com/problemset/problem/2094/B',1,3),(17177,'Trippi Troppi','https://codeforces.com/problemset/problem/2094/A',1,3),(17178,'Shorten the Array','https://codeforces.com/problemset/problem/2093/G',2,3),(17179,'Hackers and Neural Networks','https://codeforces.com/problemset/problem/2093/F',2,3),(17180,'Min Max MEX','https://codeforces.com/problemset/problem/2093/E',1,3),(17181,'Skibidi Table','https://codeforces.com/problemset/problem/2093/D',1,3),(17182,'Simple Repetition','https://codeforces.com/problemset/problem/2093/C',1,3),(17183,'Expensive Number','https://codeforces.com/problemset/problem/2093/B',1,3),(17184,'Ideal Generator','https://codeforces.com/problemset/problem/2093/A',1,3),(17185,'Andryusha and CCB','https://codeforces.com/problemset/problem/2092/F',3,3),(17186,'She knows...','https://codeforces.com/problemset/problem/2092/E',2,3),(17187,'Mishkin Energizer','https://codeforces.com/problemset/problem/2092/D',2,3),(17188,'Asuna and the Mosquitoes','https://codeforces.com/problemset/problem/2092/C',1,3),(17189,'Lady Bug','https://codeforces.com/problemset/problem/2092/B',1,3),(17190,'Kamilka and the Sheep','https://codeforces.com/problemset/problem/2092/A',1,3),(17191,'Gleb and Boating','https://codeforces.com/problemset/problem/2091/G',2,3),(17192,'Igor and Mountain','https://codeforces.com/problemset/problem/2091/F',2,3),(17193,'Interesting Ratio','https://codeforces.com/problemset/problem/2091/E',1,3),(17194,'Place of the Olympiad','https://codeforces.com/problemset/problem/2091/D',1,3),(17195,'Combination Lock','https://codeforces.com/problemset/problem/2091/C',1,3),(17196,'Team Training','https://codeforces.com/problemset/problem/2091/B',1,3),(17197,'Olympiad Date','https://codeforces.com/problemset/problem/2091/A',1,3),(17198,'Dining Hall','https://codeforces.com/problemset/problem/2090/C',2,3),(17199,'Pushing Balls','https://codeforces.com/problemset/problem/2090/B',1,3),(17200,'Treasure Hunt','https://codeforces.com/problemset/problem/2090/A',1,3),(17201,'Black Cat Collapse','https://codeforces.com/problemset/problem/2089/E',3,3),(17202,'Conditional Operators','https://codeforces.com/problemset/problem/2089/D',3,3),(17203,'Key of Like (Hard Version)','https://codeforces.com/problemset/problem/2089/C2',3,3),(17204,'Key of Like (Easy Version)','https://codeforces.com/problemset/problem/2089/C1',2,3),(17205,'Canteen (Hard Version)','https://codeforces.com/problemset/problem/2089/B2',2,3),(17206,'Canteen (Easy Version)','https://codeforces.com/problemset/problem/2089/B1',2,3),(17207,'Simple Permutation','https://codeforces.com/problemset/problem/2089/A',2,3),(17208,'Hamiltonian Partition','https://codeforces.com/problemset/problem/2087/I',6,3),(17209,'Nim with Special Numbers','https://codeforces.com/problemset/problem/2087/H',6,3),(17210,'Esports in Berland','https://codeforces.com/problemset/problem/2087/G',6,3),(17211,'Weapon Upgrade','https://codeforces.com/problemset/problem/2087/F',6,3),(17212,'Color the Arrows','https://codeforces.com/problemset/problem/2087/E',6,3),(17213,'Uppercase or Lowercase?','https://codeforces.com/problemset/problem/2087/D',6,3),(17214,'Coin Game','https://codeforces.com/problemset/problem/2087/C',6,3),(17215,'Showmatch','https://codeforces.com/problemset/problem/2087/B',6,3),(17216,'Password Generator','https://codeforces.com/problemset/problem/2087/A',6,3),(17217,'Online Palindrome','https://codeforces.com/problemset/problem/2086/F',3,3),(17218,'Zebra-like Numbers','https://codeforces.com/problemset/problem/2086/E',2,3),(17219,'Even String','https://codeforces.com/problemset/problem/2086/D',2,3),(17220,'Disappearing Permutation','https://codeforces.com/problemset/problem/2086/C',1,3),(17221,'Large Array and Segments','https://codeforces.com/problemset/problem/2086/B',1,3),(17222,'Cloudberry Jam','https://codeforces.com/problemset/problem/2086/A',1,3),(17223,'Serval and Colorful Array (Hard Version)','https://codeforces.com/problemset/problem/2085/F2',3,3),(17224,'Serval and Colorful Array (Easy Version)','https://codeforces.com/problemset/problem/2085/F1',3,3),(17225,'Serval and Modulo','https://codeforces.com/problemset/problem/2085/E',2,3),(17226,'Serval and Kaitenzushi Buffet','https://codeforces.com/problemset/problem/2085/D',2,3),(17227,'Serval and The Formula','https://codeforces.com/problemset/problem/2085/C',2,3),(17228,'Serval and Final MEX','https://codeforces.com/problemset/problem/2085/B',1,3),(17229,'Serval and String Theory','https://codeforces.com/problemset/problem/2085/A',1,3),(17230,'Turtle and Nediam 2','https://codeforces.com/problemset/problem/2084/H',3,3),(17231,'Wish Upon a Satellite (Hard Version)','https://codeforces.com/problemset/problem/2084/G2',3,3),(17232,'Wish Upon a Satellite (Easy Version)','https://codeforces.com/problemset/problem/2084/G1',3,3),(17233,'Skyscape','https://codeforces.com/problemset/problem/2084/F',3,3),(17234,'Blossom','https://codeforces.com/problemset/problem/2084/E',2,3),(17235,'Arcology On Permafrost','https://codeforces.com/problemset/problem/2084/D',2,3),(17236,'You Soared Afar With Grace','https://codeforces.com/problemset/problem/2084/C',1,3),(17237,'MIN = GCD','https://codeforces.com/problemset/problem/2084/B',1,3),(17238,'Max and Mod','https://codeforces.com/problemset/problem/2084/A',1,3),(17239,'Floor or Ceil','https://codeforces.com/problemset/problem/2082/B',2,3),(17240,'Binary Matrix','https://codeforces.com/problemset/problem/2082/A',1,3),(17241,'Hard Formula (Hard Version)','https://codeforces.com/problemset/problem/2081/G2',3,3),(17242,'Hard Formula','https://codeforces.com/problemset/problem/2081/G1',3,3),(17243,'Hot Matrix','https://codeforces.com/problemset/problem/2081/F',3,3),(17244,'Quantifier','https://codeforces.com/problemset/problem/2081/E',3,3),(17245,'MST in Modulo Graph','https://codeforces.com/problemset/problem/2081/D',3,3),(17246,'Quaternary Matrix','https://codeforces.com/problemset/problem/2081/C',3,3),(17247,'Balancing','https://codeforces.com/problemset/problem/2081/B',2,3),(17248,'Math Division','https://codeforces.com/problemset/problem/2081/A',2,3),(17249,'Order Statistics','https://codeforces.com/problemset/problem/2080/D',3,3),(17250,'Card Flip','https://codeforces.com/problemset/problem/2080/C',2,3),(17251,'Best Runner','https://codeforces.com/problemset/problem/2080/B',2,3),(17252,'Strong Connectivity Strikes Back','https://codeforces.com/problemset/problem/2080/A',3,3),(17253,'Cute Subsequences','https://codeforces.com/problemset/problem/2079/D',2,3),(17254,'Dreaming Is Not Harmful','https://codeforces.com/problemset/problem/2079/C',2,3),(17255,'Arithmetic Exercise','https://codeforces.com/problemset/problem/2079/B',3,3),(17256,'Alice, Bob, And Two Arrays','https://codeforces.com/problemset/problem/2079/A',3,3),(17257,'Scammy Game Ad','https://codeforces.com/problemset/problem/2078/D',2,3),(17258,'Vicious Labyrinth','https://codeforces.com/problemset/problem/2078/B',1,3),(17259,'Final Verdict','https://codeforces.com/problemset/problem/2078/A',1,3),(17260,'RGB Walking','https://codeforces.com/problemset/problem/2077/G',3,3),(17261,'AND x OR','https://codeforces.com/problemset/problem/2077/F',3,3),(17262,'Another Folding Strip','https://codeforces.com/problemset/problem/2077/E',3,3),(17263,'Maximum Polygon','https://codeforces.com/problemset/problem/2077/D',3,3),(17264,'Binary Subsequence Value Sum','https://codeforces.com/problemset/problem/2077/C',2,3),(17265,'Finding OR Sum','https://codeforces.com/problemset/problem/2077/B',2,3),(17266,'Breach of Faith','https://codeforces.com/problemset/problem/2077/A',1,3),(17267,'Beautiful Sequence Returns','https://codeforces.com/problemset/problem/2075/F',3,3),(17268,'XOR Matrix','https://codeforces.com/problemset/problem/2075/E',2,3),(17269,'Equalization','https://codeforces.com/problemset/problem/2075/D',2,3),(17270,'Two Colors','https://codeforces.com/problemset/problem/2075/C',1,3),(17271,'Array Recoloring','https://codeforces.com/problemset/problem/2075/B',1,3),(17272,'To Zero','https://codeforces.com/problemset/problem/2075/A',1,3),(17273,'Game With Triangles: Season 2','https://codeforces.com/problemset/problem/2074/G',2,3),(17274,'Counting Necessary Nodes','https://codeforces.com/problemset/problem/2074/F',2,3),(17275,'Empty Triangle','https://codeforces.com/problemset/problem/2074/E',2,3),(17276,'Counting Points','https://codeforces.com/problemset/problem/2074/D',1,3),(17277,'XOR and Triangle','https://codeforces.com/problemset/problem/2074/C',1,3),(17278,'The Third Side','https://codeforces.com/problemset/problem/2074/B',1,3),(17279,'Draw a Square','https://codeforces.com/problemset/problem/2074/A',1,3),(17280,'Can You Reach There?','https://codeforces.com/problemset/problem/2073/M',3,3),(17281,'Boarding Queue','https://codeforces.com/problemset/problem/2073/L',1,3),(17282,'Book Sorting','https://codeforces.com/problemset/problem/2073/K',3,3),(17283,'Gathering Sharks','https://codeforces.com/problemset/problem/2073/J',2,3),(17284,'Squares on Grid Lines','https://codeforces.com/problemset/problem/2073/I',3,3),(17285,'Secret Lilies and Roses','https://codeforces.com/problemset/problem/2073/H',3,3),(17286,'Corrupted File','https://codeforces.com/problemset/problem/2073/G',2,3),(17287,'Hold the Star','https://codeforces.com/problemset/problem/2073/F',3,3),(17288,'Minus Operator','https://codeforces.com/problemset/problem/2073/E',3,3),(17289,'Tower of Hanoi','https://codeforces.com/problemset/problem/2073/D',2,3),(17290,'Cactus Connectivity','https://codeforces.com/problemset/problem/2073/C',3,3),(17291,'Three-Dimensional Embedding','https://codeforces.com/problemset/problem/2073/B',3,3),(17292,'Control Towers','https://codeforces.com/problemset/problem/2073/A',2,3),(17293,'I\'ve Been Flipping Numbers for 300 Years and Calculated the Sum','https://codeforces.com/problemset/problem/2072/G',2,3),(17294,'Goodbye, Banker Life','https://codeforces.com/problemset/problem/2072/F',2,3),(17295,'Do You Love Your Hero and His Two-Hit Multi-Target Attacks?','https://codeforces.com/problemset/problem/2072/E',1,3),(17296,'For Wizards, the Exam Is Easy, but I Couldn\'t Handle It','https://codeforces.com/problemset/problem/2072/D',1,3),(17297,'Creating Keys for StORages Has Become My Main Skill','https://codeforces.com/problemset/problem/2072/C',1,3),(17298,'Having Been a Treasurer in the Past, I Help Goblins Deceive','https://codeforces.com/problemset/problem/2072/B',1,3),(17299,'New World, New Me, New Array','https://codeforces.com/problemset/problem/2072/A',1,3),(17300,'Towering Arrays','https://codeforces.com/problemset/problem/2071/F',3,3),(17301,'LeaFall','https://codeforces.com/problemset/problem/2071/E',3,3),(17302,'Infinite Sequence (Hard Version)','https://codeforces.com/problemset/problem/2071/D2',2,3),(17303,'Infinite Sequence (Easy Version)','https://codeforces.com/problemset/problem/2071/D1',2,3),(17304,'Trapmigiano Reggiano','https://codeforces.com/problemset/problem/2071/C',2,3),(17305,'Perfecto','https://codeforces.com/problemset/problem/2071/B',1,3),(17306,'The Play Never Ends','https://codeforces.com/problemset/problem/2071/A',1,3),(17307,'Friends and Pizza','https://codeforces.com/problemset/problem/2070/F',3,3),(17308,'Game with Binary String','https://codeforces.com/problemset/problem/2070/E',2,3),(17309,'Tree Jumps','https://codeforces.com/problemset/problem/2070/D',2,3),(17310,'Limited Repainting','https://codeforces.com/problemset/problem/2070/C',1,3),(17311,'Robot Program','https://codeforces.com/problemset/problem/2070/B',1,3),(17312,'FizzBuzz Remixed','https://codeforces.com/problemset/problem/2070/A',1,3),(17313,'Graph Inclusion','https://codeforces.com/problemset/problem/2069/F',3,3),(17314,'A, B, AB and BA','https://codeforces.com/problemset/problem/2069/E',2,3),(17315,'Palindrome Shuffle','https://codeforces.com/problemset/problem/2069/D',2,3),(17316,'Beautiful Sequence','https://codeforces.com/problemset/problem/2069/C',1,3),(17317,'Set of Strangers','https://codeforces.com/problemset/problem/2069/B',1,3),(17318,'Was there an Array?','https://codeforces.com/problemset/problem/2069/A',1,3),(17319,'Amusement Park Rides','https://codeforces.com/problemset/problem/2068/K',3,3),(17320,'The Ultimate Wine Tasting Event','https://codeforces.com/problemset/problem/2068/J',2,3),(17321,'Pinball','https://codeforces.com/problemset/problem/2068/I',3,3),(17322,'Statues','https://codeforces.com/problemset/problem/2068/H',3,3),(17323,'A Very Long Hike','https://codeforces.com/problemset/problem/2068/G',3,3),(17324,'Mascot Naming','https://codeforces.com/problemset/problem/2068/F',2,3),(17325,'Porto Vs. Benfica','https://codeforces.com/problemset/problem/2068/E',3,3),(17326,'Morse Code','https://codeforces.com/problemset/problem/2068/D',3,3),(17327,'Ads','https://codeforces.com/problemset/problem/2068/C',2,3),(17328,'Urban Planning','https://codeforces.com/problemset/problem/2068/B',3,3),(17329,'Condorcet Elections','https://codeforces.com/problemset/problem/2068/A',2,3),(17330,'Devyatkino','https://codeforces.com/problemset/problem/2067/C',1,3),(17331,'Two Large Bags','https://codeforces.com/problemset/problem/2067/B',1,3),(17332,'Adjacent Digit Sums','https://codeforces.com/problemset/problem/2067/A',1,3),(17333,'Curse','https://codeforces.com/problemset/problem/2066/F',3,3),(17334,'Tropical Season','https://codeforces.com/problemset/problem/2066/E',3,3),(17335,'Club of Young Aircraft Builders (hard version)','https://codeforces.com/problemset/problem/2066/D2',3,3),(17336,'Club of Young Aircraft Builders (easy version)','https://codeforces.com/problemset/problem/2066/D1',2,3),(17337,'Bitwise Slides','https://codeforces.com/problemset/problem/2066/C',2,3),(17338,'White Magic','https://codeforces.com/problemset/problem/2066/B',2,3),(17339,'Object Identification','https://codeforces.com/problemset/problem/2066/A',1,3),(17340,'Bro Thinks He\'s Him','https://codeforces.com/problemset/problem/2065/H',2,3),(17341,'Skibidus and Capping','https://codeforces.com/problemset/problem/2065/G',2,3),(17342,'Skibidus and Slay','https://codeforces.com/problemset/problem/2065/F',2,3),(17343,'Skibidus and Rizz','https://codeforces.com/problemset/problem/2065/E',2,3),(17344,'Skibidus and Sigma','https://codeforces.com/problemset/problem/2065/D',1,3),(17345,'Skibidus and Fanum Tax (hard version)','https://codeforces.com/problemset/problem/2065/C2',1,3),(17346,'Skibidus and Fanum Tax (easy version)','https://codeforces.com/problemset/problem/2065/C1',1,3),(17347,'Skibidus and Ohio','https://codeforces.com/problemset/problem/2065/B',1,3),(17348,'Skibidus and Amog\'u','https://codeforces.com/problemset/problem/2065/A',1,3),(17349,'We Be Summing','https://codeforces.com/problemset/problem/2064/F',3,3),(17350,'Mycraft Sand Sort','https://codeforces.com/problemset/problem/2064/E',2,3),(17351,'Eating','https://codeforces.com/problemset/problem/2064/D',2,3),(17352,'Remove the Ends','https://codeforces.com/problemset/problem/2064/C',1,3),(17353,'Variety is Discouraged','https://codeforces.com/problemset/problem/2064/B',1,3),(17354,'Brogramming Contest','https://codeforces.com/problemset/problem/2064/A',1,3),(17355,'Counting Is Not Fun (Hard Version)','https://codeforces.com/problemset/problem/2063/F2',3,3),(17356,'Counting Is Not Fun (Easy Version)','https://codeforces.com/problemset/problem/2063/F1',2,3),(17357,'Triangle Tree','https://codeforces.com/problemset/problem/2063/E',2,3),(17358,'Game With Triangles','https://codeforces.com/problemset/problem/2063/D',2,3),(17359,'Remove Exactly Two','https://codeforces.com/problemset/problem/2063/C',2,3),(17360,'Subsequence Update','https://codeforces.com/problemset/problem/2063/B',1,3),(17361,'Minimal Coprime','https://codeforces.com/problemset/problem/2063/A',1,3),(17362,'Galaxy Generator','https://codeforces.com/problemset/problem/2062/H',3,3),(17363,'Permutation Factory','https://codeforces.com/problemset/problem/2062/G',3,3),(17364,'Traveling Salescat','https://codeforces.com/problemset/problem/2062/F',3,3),(17365,'The Game (Hard Version)','https://codeforces.com/problemset/problem/2062/E2',3,3),(17366,'The Game (Easy Version)','https://codeforces.com/problemset/problem/2062/E1',2,3),(17367,'Balanced Tree','https://codeforces.com/problemset/problem/2062/D',2,3),(17368,'Cirno and Operations','https://codeforces.com/problemset/problem/2062/C',1,3),(17369,'Clockwork','https://codeforces.com/problemset/problem/2062/B',1,3),(17370,'String','https://codeforces.com/problemset/problem/2062/A',1,3),(17371,'Kevin and Nivek','https://codeforces.com/problemset/problem/2061/I',3,3),(17372,'Kevin and Stones (Hard Version)','https://codeforces.com/problemset/problem/2061/H2',3,3),(17373,'Kevin and Stones (Easy Version)','https://codeforces.com/problemset/problem/2061/H1',3,3),(17374,'Kevin and Teams','https://codeforces.com/problemset/problem/2061/G',3,3),(17375,'Kevin and Binary String (Hard Version)','https://codeforces.com/problemset/problem/2061/F2',3,3),(17376,'Kevin and Binary String (Easy Version)','https://codeforces.com/problemset/problem/2061/F1',2,3),(17377,'Kevin and And','https://codeforces.com/problemset/problem/2061/E',2,3),(17378,'Kevin and Numbers','https://codeforces.com/problemset/problem/2061/D',2,3),(17379,'Kevin and Puzzle','https://codeforces.com/problemset/problem/2061/C',2,3),(17380,'Kevin and Geometry','https://codeforces.com/problemset/problem/2061/B',1,3),(17381,'Kevin and Arithmetic','https://codeforces.com/problemset/problem/2061/A',1,3),(17382,'Bugged Sort','https://codeforces.com/problemset/problem/2060/G',2,3),(17383,'Multiplicative Arrays','https://codeforces.com/problemset/problem/2060/F',2,3),(17384,'Graph Composition','https://codeforces.com/problemset/problem/2060/E',1,3),(17385,'Subtract Min Sort','https://codeforces.com/problemset/problem/2060/D',1,3),(17386,'Game of Mathletes','https://codeforces.com/problemset/problem/2060/C',1,3),(17387,'Farmer John\'s Card Game','https://codeforces.com/problemset/problem/2060/B',1,3),(17388,'Fibonacciness','https://codeforces.com/problemset/problem/2060/A',1,3),(17389,'Stop Gaming (Hard Version)','https://codeforces.com/problemset/problem/2059/E2',3,3),(17390,'Stop Gaming (Easy Version)','https://codeforces.com/problemset/problem/2059/E1',2,3),(17391,'Graph and Graph','https://codeforces.com/problemset/problem/2059/D',2,3),(17392,'Customer Service','https://codeforces.com/problemset/problem/2059/C',2,3),(17393,'Cost of the Array','https://codeforces.com/problemset/problem/2059/B',1,3),(17394,'Milya and Two Arrays','https://codeforces.com/problemset/problem/2059/A',1,3),(17395,'Xor of Median (Hard Version)','https://codeforces.com/problemset/problem/2056/F2',3,3),(17396,'Xor of Median (Easy Version)','https://codeforces.com/problemset/problem/2056/F1',3,3),(17397,'Nested Segments','https://codeforces.com/problemset/problem/2056/E',2,3),(17398,'Unique Median','https://codeforces.com/problemset/problem/2056/D',2,3),(17399,'Palindromic Subsequences','https://codeforces.com/problemset/problem/2056/C',1,3),(17400,'Find the Permutation','https://codeforces.com/problemset/problem/2056/B',1,3),(17401,'Shape Perimeter','https://codeforces.com/problemset/problem/2056/A',1,3),(17402,'Cosmic Divide','https://codeforces.com/problemset/problem/2055/F',3,3),(17403,'Haystacks','https://codeforces.com/problemset/problem/2055/E',3,3),(17404,'Scarecrow','https://codeforces.com/problemset/problem/2055/D',2,3),(17405,'The Trail','https://codeforces.com/problemset/problem/2055/C',1,3),(17406,'Crafting','https://codeforces.com/problemset/problem/2055/B',1,3),(17407,'Two Frogs','https://codeforces.com/problemset/problem/2055/A',1,3),(17408,'Maximum Product of Two Digits','maximum-product-of-two-digits',1,1),(17409,'Fill a Special Grid','fill-a-special-grid',2,1),(17410,'Merge Operations for Minimum Travel Time','merge-operations-for-minimum-travel-time',3,1),(17411,'Find Sum of Array Product of Magical Sequences','find-sum-of-array-product-of-magical-sequences',3,1),(17412,'Cycling (Hard Version)','https://codeforces.com/problemset/problem/2107/F2',6,3),(17413,'Cycling (Easy Version)','https://codeforces.com/problemset/problem/2107/F1',6,3),(17414,'Ain and Apple Tree','https://codeforces.com/problemset/problem/2107/E',6,3),(17415,'Apple Tree Traversing','https://codeforces.com/problemset/problem/2107/D',6,3),(17416,'Maximum Subarray Sum','https://codeforces.com/problemset/problem/2107/C',6,3),(17417,'Apples in Boxes','https://codeforces.com/problemset/problem/2107/B',6,3),(17418,'LRC and VIP','https://codeforces.com/problemset/problem/2107/A',6,3);
/*!40000 ALTER TABLE `track_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problemstats`
--

DROP TABLE IF EXISTS `track_problemstats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problemstats` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `solved_count` int(10) unsigned NOT NULL CHECK (`solved_count` >= 0),
  `attempted_count` int(10) unsigned NOT NULL CHECK (`attempted_count` >= 0),
  `problem_type_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  `contest_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `track_problemstats_user_id_problem_type_id__f00aff8f_uniq` (`user_id`,`problem_type_id`,`contest_id`),
  KEY `track_userproblemsta_problem_type_id_c51a44a3_fk_track_pro` (`problem_type_id`),
  KEY `track_problemstats_user_id_29dd54dc` (`user_id`),
  KEY `track_problemstats_contest_id_19b5f0e9_fk_track_contest_id` (`contest_id`),
  CONSTRAINT `track_problemstats_contest_id_19b5f0e9_fk_track_contest_id` FOREIGN KEY (`contest_id`) REFERENCES `track_contest` (`id`),
  CONSTRAINT `track_userproblemsta_problem_type_id_c51a44a3_fk_track_pro` FOREIGN KEY (`problem_type_id`) REFERENCES `track_problemtype` (`id`),
  CONSTRAINT `track_userproblemstats_user_id_ef2d356e_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problemstats`
--

LOCK TABLES `track_problemstats` WRITE;
/*!40000 ALTER TABLE `track_problemstats` DISABLE KEYS */;
INSERT INTO `track_problemstats` VALUES (1,1,1,1,9,1),(2,1,1,2,9,1),(3,1,1,3,9,1),(4,1,1,1,10,1),(5,1,1,2,10,1),(6,1,1,3,10,1),(7,1,2,2,8,1),(14,1,1,1,8,8),(15,0,0,2,8,8),(16,0,0,3,8,8),(17,0,0,1,11,5),(18,0,0,2,11,5),(19,0,0,3,11,5),(20,0,0,1,8,6),(21,0,0,2,8,6),(22,0,0,3,8,6),(23,0,0,1,11,6),(24,0,0,2,11,6),(25,0,0,3,11,6),(26,0,0,1,8,9),(27,0,0,2,8,9),(28,0,0,3,8,9),(29,0,0,1,11,9),(30,0,0,2,11,9),(31,0,0,3,11,9),(35,0,0,1,11,7),(36,0,0,2,11,7),(37,0,0,3,11,7);
/*!40000 ALTER TABLE `track_problemstats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problemtags`
--

DROP TABLE IF EXISTS `track_problemtags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problemtags` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `problem_id` bigint(20) NOT NULL,
  `topictags_id` bigint(20) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `track_problemtags_problem_id_dbb84c5f_fk_track_problem_id` (`problem_id`),
  KEY `track_problemtags_topictags_id_1e919b9a_fk_track_tags_id` (`topictags_id`),
  CONSTRAINT `track_problemtags_problem_id_dbb84c5f_fk_track_problem_id` FOREIGN KEY (`problem_id`) REFERENCES `track_problem` (`id`),
  CONSTRAINT `track_problemtags_topictags_id_1e919b9a_fk_track_tags_id` FOREIGN KEY (`topictags_id`) REFERENCES `track_tags` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=48771 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problemtags`
--

LOCK TABLES `track_problemtags` WRITE;
/*!40000 ALTER TABLE `track_problemtags` DISABLE KEYS */;
INSERT INTO `track_problemtags` VALUES (1,1,1),(2,1,3),(3,2,28),(4,2,5),(5,2,38),(6,3,3),(7,3,2),(8,3,23),(9,4,1),(10,4,10),(11,4,35),(12,5,15),(13,5,2),(14,5,4),(15,6,2),(16,7,5),(17,8,2),(18,9,5),(19,10,2),(20,10,4),(21,10,38),(22,11,1),(23,11,15),(24,11,7),(25,12,3),(26,12,5),(27,12,2),(28,13,3),(29,13,5),(30,13,2),(31,14,2),(32,14,33),(33,15,1),(34,15,15),(35,15,6),(36,16,1),(37,16,15),(38,16,6),(39,17,3),(40,17,2),(41,17,25),(42,18,1),(43,18,15),(44,18,6),(45,19,28),(46,19,15),(47,20,2),(48,20,20),(49,21,28),(50,21,38),(51,22,2),(52,22,4),(53,22,25),(54,23,28),(55,23,35),(56,23,17),(57,23,55),(58,24,28),(59,24,38),(60,25,28),(61,25,38),(62,26,1),(63,26,15),(64,27,1),(65,27,15),(66,28,15),(67,28,2),(68,28,45),(69,29,5),(70,29,14),(71,30,3),(72,30,2),(73,30,23),(74,31,1),(75,31,15),(76,32,2),(77,32,4),(78,32,20),(79,33,1),(80,33,10),(81,34,1),(82,34,10),(83,35,1),(84,35,10),(85,36,1),(86,36,3),(87,36,11),(88,37,1),(89,37,3),(90,37,25),(91,37,11),(92,38,2),(93,39,1),(94,39,25),(95,40,1),(96,40,25),(97,41,1),(98,41,3),(99,42,1),(100,42,15),(101,42,4),(102,42,20),(103,42,31),(104,43,5),(105,43,2),(106,43,19),(107,44,2),(108,44,4),(109,44,7),(110,44,38),(111,45,1),(112,45,4),(113,45,7),(114,46,1),(115,46,25),(116,47,1),(117,47,25),(118,48,1),(119,48,5),(120,48,11),(121,49,1),(122,49,3),(123,49,2),(124,49,6),(125,50,5),(126,50,38),(127,51,1),(128,51,25),(129,52,25),(130,53,1),(131,53,35),(132,53,4),(133,54,1),(134,54,11),(135,54,19),(136,55,1),(137,55,4),(138,55,7),(139,56,1),(140,56,6),(141,57,1),(142,58,2),(143,59,1),(144,59,11),(145,59,19),(146,60,5),(147,60,38),(148,61,28),(149,61,15),(150,62,5),(151,62,4),(152,62,36),(153,63,1),(154,63,4),(155,63,11),(156,64,1),(157,64,4),(158,64,11),(159,65,2),(160,66,1),(161,66,5),(162,67,5),(163,67,2),(164,67,14),(165,67,19),(166,68,1),(167,68,2),(168,68,19),(169,69,5),(170,69,10),(171,70,5),(172,70,4),(173,70,44),(174,71,2),(175,71,20),(176,72,2),(177,72,4),(178,73,1),(179,73,3),(180,73,11),(181,74,1),(182,74,10),(183,74,11),(184,75,1),(185,75,15),(186,75,6),(187,76,3),(188,76,2),(189,76,23),(190,77,25),(191,78,1),(192,78,25),(193,78,14),(194,79,1),(195,79,2),(196,79,25),(197,79,8),(198,79,11),(199,80,1),(200,80,15),(201,81,1),(202,81,10),(203,82,28),(204,82,15),(205,83,28),(206,84,1),(207,84,20),(208,84,31),(209,85,1),(210,85,4),(211,85,20),(212,85,11),(213,85,31),(214,86,28),(215,86,15),(216,87,2),(217,87,4),(218,88,1),(219,88,15),(220,88,6),(221,89,5),(222,89,25),(223,89,14),(224,90,1),(225,90,25),(226,90,14),(227,91,2),(228,91,4),(229,92,28),(230,93,2),(231,93,25),(232,94,20),(233,94,12),(234,94,8),(235,94,18),(236,95,4),(237,95,25),(238,95,12),(239,95,41),(240,95,18),(241,96,5),(242,96,4),(243,96,12),(244,96,41),(245,96,18),(246,97,2),(247,97,4),(248,98,12),(249,98,8),(250,98,41),(251,98,18),(252,99,12),(253,99,8),(254,99,41),(255,99,18),(256,100,12),(257,100,8),(258,100,13),(259,100,18),(260,101,12),(261,101,8),(262,101,13),(263,101,18),(264,102,12),(265,102,13),(266,102,18),(267,103,12),(268,103,13),(269,103,18),(270,104,12),(271,104,8),(272,104,13),(273,104,18),(274,105,1),(275,105,3),(276,105,35),(277,105,12),(278,105,18),(279,106,1),(280,106,3),(281,106,35),(282,106,12),(283,106,18),(284,107,12),(285,107,13),(286,107,18),(287,108,1),(288,108,35),(289,108,12),(290,108,41),(291,108,18),(292,109,28),(293,109,35),(294,109,12),(295,109,41),(296,109,18),(297,110,12),(298,110,8),(299,110,18),(300,111,12),(301,111,8),(302,111,13),(303,111,18),(304,112,12),(305,112,8),(306,112,13),(307,112,18),(308,113,25),(309,113,12),(310,113,8),(311,113,18),(312,114,28),(313,114,20),(314,114,12),(315,114,8),(316,114,18),(317,115,2),(318,115,4),(319,116,28),(320,116,12),(321,116,8),(322,116,13),(323,116,18),(324,117,28),(325,117,12),(326,117,8),(327,117,13),(328,117,18),(329,118,1),(330,118,4),(331,119,1),(332,119,4),(333,120,1),(334,120,4),(335,121,1),(336,121,4),(337,122,1),(338,122,4),(339,122,7),(340,123,1),(341,123,4),(342,124,4),(343,124,12),(344,124,8),(345,124,18),(346,125,15),(347,125,2),(348,126,3),(349,126,2),(350,126,25),(351,126,13),(352,127,3),(353,127,2),(354,127,13),(355,128,1),(356,128,3),(357,128,27),(358,129,12),(359,129,8),(360,129,18),(361,130,1),(362,130,8),(363,130,13),(364,130,27),(365,130,11),(366,131,2),(367,131,4),(368,131,25),(369,132,2),(370,132,4),(371,133,3),(372,133,8),(373,133,13),(374,133,21),(375,134,1),(376,134,7),(377,135,1),(378,135,7),(379,136,1),(380,136,14),(381,137,1),(382,137,14),(383,138,3),(384,138,28),(385,139,1),(386,139,3),(387,139,2),(388,139,4),(389,139,33),(390,139,44),(391,140,1),(392,140,3),(393,140,2),(394,140,4),(395,140,25),(396,140,33),(397,140,44),(398,141,3),(399,141,28),(400,141,15),(401,142,3),(402,142,28),(403,142,15),(404,143,28),(405,143,15),(406,143,20),(407,143,38),(408,144,20),(409,144,12),(410,144,8),(411,144,18),(412,145,20),(413,145,12),(414,145,8),(415,145,18),(416,146,3),(417,146,28),(418,146,24),(419,146,56),(420,147,28),(421,147,6),(422,148,28),(423,148,15),(424,148,35),(425,148,6),(426,148,55),(427,149,1),(428,149,3),(429,149,5),(430,149,40),(431,150,1),(432,150,5),(433,150,20),(434,151,15),(435,151,2),(436,152,1),(437,152,4),(438,153,1),(439,153,10),(440,154,1),(441,154,10),(442,155,20),(443,155,24),(444,156,12),(445,156,8),(446,156,18),(447,157,1),(448,157,19),(449,157,50),(450,158,1),(451,158,19),(452,158,50),(453,159,3),(454,159,2),(455,159,23),(456,160,3),(457,160,28),(458,160,15),(459,161,15),(460,161,2),(461,162,1),(462,162,10),(463,163,1),(464,164,1),(465,164,6),(466,164,63),(467,164,70),(468,165,15),(469,165,2),(470,166,3),(471,166,5),(472,166,2),(473,167,1),(474,167,15),(475,167,10),(476,168,5),(477,168,2),(478,169,1),(479,169,3),(480,169,35),(481,169,6),(482,169,22),(483,170,1),(484,170,3),(485,170,15),(486,170,24),(487,170,51),(488,171,5),(489,171,2),(490,172,5),(491,173,20),(492,173,12),(493,173,24),(494,173,41),(495,173,18),(496,173,58),(497,174,1),(498,174,4),(499,174,11),(500,175,9),(501,176,9),(502,177,9),(503,178,9),(504,179,1),(505,179,2),(506,179,7),(507,179,6),(508,180,9),(509,181,9),(510,182,9),(511,183,9),(512,184,9),(513,185,9),(514,186,15),(515,186,2),(516,187,3),(517,187,2),(518,187,14),(519,187,23),(520,187,48),(521,187,43),(522,188,1),(523,188,4),(524,189,1),(525,189,5),(526,189,15),(527,190,35),(528,190,14),(529,191,35),(530,191,14),(531,192,66),(532,193,66),(533,194,66),(534,195,66),(535,196,9),(536,197,9),(537,198,1),(538,198,4),(539,199,12),(540,199,8),(541,199,13),(542,199,18),(543,200,1),(544,200,8),(545,200,13),(546,200,27),(547,200,11),(548,201,14),(549,202,3),(550,202,5),(551,202,15),(552,203,28),(553,203,38),(554,204,1),(555,204,5),(556,204,26),(557,204,30),(558,205,3),(559,205,2),(560,206,28),(561,206,38),(562,207,8),(563,207,13),(564,207,21),(565,207,46),(566,208,3),(567,208,2),(568,208,24),(569,208,33),(570,209,1),(571,209,10),(572,209,23),(573,209,16),(574,210,8),(575,210,13),(576,210,21),(577,210,46),(578,211,2),(579,211,8),(580,211,24),(581,211,33),(582,212,1),(583,212,2),(584,212,25),(585,212,33),(586,212,11),(587,213,1),(588,213,4),(589,214,2),(590,214,48),(591,214,45),(592,214,43),(593,215,1),(594,215,35),(595,215,6),(596,215,17),(597,215,61),(598,216,1),(599,216,25),(600,217,1),(601,217,3),(602,217,6),(603,218,1),(604,218,35),(605,218,39),(606,218,32),(607,218,65),(608,218,17),(609,218,29),(610,219,1),(611,219,3),(612,219,23),(613,220,1),(614,220,23),(615,220,6),(616,220,63),(617,220,29),(618,221,1),(619,221,4),(620,221,11),(621,222,10),(622,222,14),(623,222,12),(624,222,18),(625,223,5),(626,223,40),(627,224,5),(628,224,2),(629,224,20),(630,224,38),(631,225,20),(632,225,24),(633,225,37),(634,226,12),(635,226,8),(636,226,13),(637,226,18),(638,227,5),(639,227,2),(640,227,20),(641,228,1),(642,229,1),(643,229,3),(644,229,6),(645,229,22),(646,230,12),(647,230,8),(648,230,41),(649,230,18),(650,231,5),(651,231,14),(652,231,38),(653,232,20),(654,232,24),(655,232,37),(656,233,5),(657,233,4),(658,233,38),(659,234,28),(660,234,15),(661,234,20),(662,234,38),(663,235,12),(664,235,8),(665,235,41),(666,235,18),(667,236,12),(668,236,8),(669,236,18),(670,237,28),(671,238,1),(672,238,16),(673,239,1),(674,239,37),(675,239,23),(676,239,17),(677,239,52),(678,240,1),(679,240,10),(680,240,35),(681,240,11),(682,241,5),(683,241,2),(684,241,4),(685,241,38),(686,241,44),(687,242,3),(688,242,2),(689,242,6),(690,243,1),(691,243,2),(692,244,1),(693,244,3),(694,244,15),(695,244,2),(696,244,24),(697,245,1),(698,245,2),(699,246,3),(700,246,15),(701,246,2),(702,247,1),(703,247,2),(704,247,38),(705,248,1),(706,248,2),(707,248,38),(708,249,1),(709,249,3),(710,249,2),(711,250,12),(712,250,8),(713,250,18),(714,251,1),(715,251,15),(716,251,24),(717,251,58),(718,252,1),(719,252,6),(720,253,1),(721,253,15),(722,253,7),(723,253,6),(724,253,17),(725,253,16),(726,254,25),(727,255,1),(728,255,20),(729,255,12),(730,255,41),(731,255,38),(732,255,31),(733,255,18),(734,256,1),(735,256,4),(736,257,2),(737,257,25),(738,257,12),(739,257,8),(740,257,18),(741,258,5),(742,258,19),(743,258,30),(744,259,1),(745,259,15),(746,259,10),(747,259,6),(748,260,1),(749,260,14),(750,261,8),(751,261,13),(752,261,27),(753,261,21),(754,262,9),(755,263,5),(756,264,3),(757,264,5),(758,264,4),(759,264,17),(760,265,1),(761,265,4),(762,266,3),(763,266,2),(764,266,14),(765,267,3),(766,267,2),(767,267,25),(768,268,1),(769,268,3),(770,268,5),(771,268,10),(772,268,14),(773,268,6),(774,269,1),(775,269,2),(776,269,8),(777,269,13),(778,269,21),(779,269,46),(780,270,10),(781,270,12),(782,270,8),(783,270,41),(784,270,18),(785,271,1),(786,271,2),(787,271,24),(788,272,15),(789,272,20),(790,272,12),(791,272,8),(792,272,41),(793,272,17),(794,272,18),(795,273,5),(796,273,2),(797,273,38),(798,274,1),(799,274,6),(800,274,57),(801,275,1),(802,275,10),(803,276,4),(804,277,15),(805,277,21),(806,277,50),(807,278,10),(808,278,50),(809,279,5),(810,279,4),(811,279,13),(812,280,1),(813,280,7),(814,280,6),(815,281,1),(816,281,24),(817,281,37),(818,281,58),(819,282,5),(820,282,2),(821,282,25),(822,283,1),(823,283,15),(824,284,1),(825,284,24),(826,284,58),(827,285,12),(828,285,8),(829,285,41),(830,285,18),(831,286,1),(832,286,13),(833,286,11),(834,287,1),(835,287,15),(836,287,10),(837,287,14),(838,288,1),(839,288,3),(840,288,2),(841,288,24),(842,289,1),(843,289,11),(844,289,19),(845,290,3),(846,290,2),(847,291,3),(848,291,2),(849,291,25),(850,292,5),(851,292,53),(852,292,49),(853,293,2),(854,294,5),(855,294,4),(856,294,25),(857,294,44),(858,294,49),(859,295,15),(860,295,24),(861,295,6),(862,295,17),(863,295,51),(864,296,1),(865,296,5),(866,296,6),(867,296,11),(868,297,2),(869,297,12),(870,297,8),(871,297,13),(872,297,24),(873,297,18),(874,298,12),(875,298,8),(876,298,18),(877,299,3),(878,299,2),(879,299,22),(880,300,1),(881,300,10),(882,300,4),(883,301,2),(884,301,25),(885,301,13),(886,302,1),(887,302,10),(888,302,8),(889,302,13),(890,302,11),(891,303,1),(892,303,24),(893,303,16),(894,304,1),(895,304,24),(896,304,11),(897,304,16),(898,305,1),(899,305,3),(900,305,27),(901,306,2),(902,306,25),(903,307,1),(904,307,24),(905,307,39),(906,307,32),(907,308,1),(908,308,24),(909,308,39),(910,308,32),(911,308,11),(912,309,1),(913,309,4),(914,310,8),(915,310,13),(916,310,21),(917,310,46),(918,311,1),(919,311,3),(920,311,11),(921,312,1),(922,312,4),(923,313,1),(924,313,5),(925,313,4),(926,314,3),(927,314,12),(928,314,8),(929,314,13),(930,314,6),(931,314,18),(932,315,1),(933,315,10),(934,315,35),(935,315,39),(936,315,32),(937,315,55),(938,315,29),(939,316,2),(940,316,20),(941,316,7),(942,316,31),(943,317,1),(944,317,13),(945,317,11),(946,318,1),(947,318,2),(948,318,14),(949,319,5),(950,319,53),(951,320,2),(952,320,25),(953,320,14),(954,321,1),(955,321,15),(956,321,20),(957,321,7),(958,321,31),(959,322,1),(960,322,4),(961,322,13),(962,323,8),(963,323,13),(964,323,27),(965,323,21),(966,324,1),(967,324,35),(968,324,7),(969,324,6),(970,324,61),(971,325,1),(972,325,3),(973,325,16),(974,326,5),(975,326,38),(976,327,1),(977,327,10),(978,327,35),(979,327,39),(980,327,32),(981,327,55),(982,327,29),(983,328,28),(984,329,1),(985,329,4),(986,329,8),(987,329,13),(988,329,21),(989,329,46),(990,329,44),(991,329,11),(992,330,1),(993,330,7),(994,331,2),(995,331,20),(996,331,12),(997,331,18),(998,332,8),(999,332,21),(1000,332,69),(1001,333,4),(1002,333,12),(1003,333,8),(1004,333,41),(1005,333,18),(1006,334,1),(1007,334,7),(1008,335,1),(1009,335,5),(1010,335,40),(1011,336,1),(1012,336,3),(1013,336,2),(1014,336,33),(1015,337,4),(1016,337,12),(1017,337,8),(1018,337,18),(1019,338,4),(1020,338,14),(1021,339,8),(1022,339,13),(1023,340,3),(1024,340,2),(1025,340,23),(1026,341,20),(1027,341,12),(1028,341,8),(1029,341,24),(1030,341,37),(1031,341,58),(1032,342,5),(1033,342,14),(1034,342,38),(1035,343,5),(1036,343,4),(1037,344,15),(1038,344,2),(1039,345,15),(1040,345,2),(1041,346,1),(1042,346,24),(1043,346,37),(1044,346,51),(1045,347,1),(1046,347,3),(1047,347,35),(1048,347,6),(1049,347,17),(1050,347,63),(1051,347,22),(1052,347,61),(1053,348,1),(1054,348,3),(1055,348,24),(1056,348,11),(1057,348,19),(1058,349,1),(1059,349,3),(1060,349,15),(1061,349,10),(1062,349,6),(1063,350,1),(1064,350,3),(1065,350,15),(1066,350,10),(1067,350,6),(1068,351,4),(1069,351,25),(1070,351,14),(1071,351,34),(1072,352,10),(1073,352,24),(1074,352,29),(1075,353,1),(1076,353,3),(1077,353,24),(1078,353,37),(1079,353,19),(1080,354,1),(1081,354,10),(1082,354,4),(1083,354,6),(1084,355,3),(1085,355,28),(1086,355,24),(1087,355,17),(1088,356,1),(1089,356,3),(1090,356,5),(1091,357,5),(1092,357,4),(1093,357,25),(1094,358,3),(1095,358,2),(1096,358,7),(1097,358,6),(1098,358,17),(1099,358,22),(1100,359,3),(1101,359,24),(1102,359,51),(1103,360,1),(1104,360,5),(1105,360,15),(1106,360,6),(1107,361,1),(1108,361,4),(1109,361,11),(1110,362,1),(1111,362,10),(1112,362,24),(1113,362,37),(1114,362,51),(1115,363,1),(1116,363,10),(1117,363,11),(1118,363,16),(1119,363,29),(1120,364,20),(1121,364,8),(1122,364,13),(1123,365,5),(1124,365,8),(1125,365,13),(1126,366,12),(1127,366,8),(1128,366,18),(1129,367,5),(1130,367,10),(1131,368,1),(1132,368,5),(1133,368,4),(1134,368,6),(1135,369,28),(1136,369,5),(1137,370,1),(1138,370,16),(1139,371,5),(1140,371,14),(1141,372,5),(1142,372,35),(1143,373,1),(1144,373,17),(1145,374,10),(1146,374,50),(1147,375,5),(1148,375,4),(1149,375,49),(1150,376,1),(1151,376,4),(1152,376,7),(1153,377,1),(1154,377,4),(1155,378,1),(1156,378,10),(1157,378,6),(1158,378,17),(1159,378,11),(1160,379,1),(1161,379,3),(1162,379,28),(1163,379,24),(1164,379,37),(1165,380,1),(1166,380,3),(1167,380,5),(1168,380,24),(1169,380,54),(1170,381,1),(1171,381,3),(1172,381,5),(1173,381,24),(1174,381,54),(1175,382,28),(1176,382,5),(1177,382,67),(1178,382,54),(1179,383,3),(1180,383,2),(1181,383,22),(1182,384,1),(1183,384,5),(1184,384,24),(1185,384,54),(1186,385,2),(1187,385,20),(1188,385,8),(1189,386,8),(1190,386,33),(1191,387,3),(1192,387,2),(1193,387,37),(1194,387,22),(1195,388,2),(1196,388,20),(1197,388,8),(1198,389,3),(1199,389,2),(1200,389,14),(1201,389,6),(1202,390,5),(1203,390,38),(1204,391,1),(1205,391,65),(1206,392,15),(1207,392,2),(1208,392,4),(1209,393,1),(1210,393,14),(1211,394,2),(1212,394,20),(1213,394,38),(1214,395,3),(1215,395,2),(1216,395,35),(1217,395,23),(1218,396,1),(1219,396,5),(1220,396,4),(1221,397,4),(1222,397,7),(1223,397,14),(1224,397,44),(1225,398,3),(1226,398,5),(1227,398,67),(1228,398,54),(1229,399,1),(1230,399,2),(1231,399,8),(1232,399,13),(1233,399,27),(1234,399,21),(1235,399,47),(1236,400,5),(1237,400,10),(1238,401,25),(1239,401,14),(1240,402,2),(1241,402,20),(1242,402,7),(1243,402,31),(1244,403,1),(1245,403,4),(1246,404,12),(1247,404,8),(1248,404,13),(1249,404,18),(1250,405,5),(1251,405,14),(1252,406,1),(1253,406,39),(1254,406,32),(1255,406,6),(1256,407,1),(1257,407,13),(1258,407,17),(1259,407,11),(1260,408,15),(1261,408,2),(1262,409,3),(1263,409,2),(1264,409,7),(1265,410,1),(1266,410,10),(1267,410,4),(1268,410,7),(1269,410,16),(1270,411,1),(1271,411,2),(1272,411,25),(1273,411,14),(1274,412,5),(1275,412,2),(1276,412,19),(1277,413,1),(1278,413,4),(1279,413,23),(1280,414,1),(1281,414,6),(1282,415,5),(1283,415,2),(1284,415,19),(1285,416,1),(1286,416,4),(1287,417,1),(1288,417,8),(1289,417,13),(1290,417,11),(1291,418,1),(1292,418,2),(1293,418,4),(1294,419,1),(1295,419,8),(1296,419,11),(1297,420,2),(1298,420,7),(1299,420,17),(1300,421,1),(1301,421,3),(1302,421,14),(1303,421,33),(1304,422,1),(1305,422,11),(1306,423,3),(1307,423,5),(1308,423,2),(1309,424,3),(1310,424,2),(1311,424,23),(1312,425,1),(1313,425,2),(1314,425,25),(1315,425,33),(1316,426,28),(1317,426,20),(1318,426,12),(1319,426,8),(1320,426,41),(1321,426,18),(1322,426,56),(1323,427,1),(1324,427,35),(1325,427,12),(1326,427,11),(1327,428,2),(1328,428,12),(1329,428,8),(1330,428,13),(1331,429,12),(1332,429,13),(1333,430,28),(1334,430,8),(1335,430,56),(1336,431,12),(1337,431,8),(1338,431,13),(1339,431,24),(1340,431,18),(1341,432,3),(1342,432,28),(1343,432,24),(1344,432,56),(1345,433,3),(1346,433,2),(1347,433,13),(1348,434,2),(1349,435,1),(1350,435,4),(1351,435,7),(1352,435,6),(1353,436,1),(1354,436,10),(1355,436,6),(1356,437,12),(1357,437,8),(1358,437,18),(1359,438,3),(1360,438,2),(1361,438,23),(1362,439,2),(1363,439,20),(1364,439,38),(1365,440,33),(1366,441,5),(1367,441,10),(1368,442,1),(1369,442,3),(1370,443,15),(1371,443,2),(1372,444,1),(1373,444,21),(1374,444,46),(1375,445,28),(1376,445,5),(1377,445,20),(1378,446,1),(1379,446,4),(1380,447,1),(1381,447,3),(1382,447,5),(1383,448,1),(1384,448,3),(1385,449,2),(1386,449,12),(1387,449,8),(1388,449,13),(1389,449,24),(1390,449,41),(1391,449,18),(1392,450,12),(1393,450,41),(1394,450,18),(1395,451,3),(1396,451,2),(1397,451,6),(1398,451,17),(1399,451,63),(1400,451,22),(1401,452,1),(1402,452,7),(1403,452,6),(1404,453,1),(1405,453,5),(1406,454,1),(1407,454,3),(1408,455,1),(1409,455,15),(1410,455,7),(1411,455,6),(1412,456,1),(1413,456,10),(1414,456,20),(1415,456,31),(1416,456,29),(1417,457,1),(1418,457,3),(1419,457,15),(1420,458,5),(1421,458,4),(1422,458,36),(1423,459,2),(1424,459,45),(1425,460,3),(1426,460,28),(1427,460,24),(1428,460,56),(1429,461,14),(1430,462,1),(1431,462,5),(1432,462,6),(1433,463,1),(1434,463,8),(1435,463,13),(1436,463,11),(1437,464,5),(1438,464,4),(1439,464,14),(1440,464,44),(1441,464,49),(1442,464,34),(1443,465,1),(1444,465,4),(1445,465,25),(1446,465,14),(1447,465,34),(1448,466,2),(1449,466,4),(1450,467,2),(1451,467,4),(1452,468,2),(1453,469,1),(1454,469,5),(1455,469,40),(1456,470,5),(1457,471,2),(1458,471,4),(1459,472,1),(1460,472,2),(1461,472,4),(1462,472,8),(1463,472,33),(1464,473,1),(1465,473,4),(1466,473,25),(1467,473,14),(1468,473,34),(1469,474,1),(1470,474,2),(1471,474,4),(1472,475,1),(1473,475,15),(1474,475,10),(1475,475,6),(1476,476,14),(1477,477,1),(1478,477,5),(1479,477,14),(1480,478,5),(1481,478,40),(1482,478,71),(1483,478,54),(1484,479,5),(1485,479,26),(1486,480,1),(1487,480,3),(1488,480,23),(1489,480,17),(1490,481,15),(1491,481,2),(1492,482,2),(1493,483,5),(1494,483,10),(1495,484,1),(1496,484,2),(1497,484,20),(1498,484,7),(1499,485,1),(1500,486,1),(1501,486,5),(1502,486,4),(1503,486,38),(1504,486,49),(1505,487,1),(1506,487,4),(1507,487,23),(1508,488,2),(1509,488,4),(1510,488,20),(1511,488,13),(1512,488,44),(1513,489,25),(1514,489,50),(1515,490,1),(1516,490,8),(1517,490,13),(1518,490,11),(1519,491,1),(1520,491,3),(1521,491,25),(1522,491,14),(1523,492,5),(1524,493,1),(1525,493,10),(1526,493,35),(1527,493,39),(1528,493,32),(1529,493,55),(1530,493,29),(1531,494,1),(1532,494,4),(1533,494,25),(1534,495,1),(1535,495,19),(1536,496,1),(1537,496,3),(1538,496,20),(1539,496,31),(1540,497,1),(1541,497,5),(1542,497,10),(1543,497,67),(1544,497,16),(1545,497,29),(1546,497,54),(1547,498,1),(1548,498,11),(1549,498,19),(1550,499,1),(1551,499,2),(1552,499,8),(1553,499,13),(1554,499,21),(1555,499,17),(1556,499,11),(1557,499,47),(1558,500,1),(1559,500,3),(1560,500,2),(1561,501,12),(1562,501,8),(1563,501,41),(1564,501,18),(1565,502,1),(1566,502,7),(1567,502,6),(1568,502,17),(1569,503,1),(1570,503,20),(1571,503,31),(1572,504,5),(1573,505,1),(1574,505,8),(1575,505,13),(1576,505,21),(1577,505,17),(1578,505,11),(1579,505,47),(1580,506,1),(1581,506,6),(1582,506,17),(1583,507,5),(1584,508,3),(1585,508,12),(1586,508,8),(1587,508,18),(1588,509,5),(1589,509,4),(1590,509,38),(1591,509,44),(1592,510,12),(1593,510,41),(1594,510,18),(1595,511,9),(1596,512,9),(1597,513,12),(1598,513,8),(1599,513,13),(1600,513,18),(1601,514,2),(1602,514,4),(1603,514,8),(1604,514,13),(1605,515,12),(1606,515,8),(1607,515,13),(1608,515,18),(1609,516,2),(1610,516,4),(1611,517,1),(1612,517,7),(1613,518,1),(1614,518,4),(1615,519,3),(1616,519,5),(1617,519,67),(1618,519,54),(1619,520,2),(1620,521,2),(1621,522,1),(1622,522,3),(1623,522,15),(1624,522,2),(1625,522,6),(1626,523,1),(1627,523,3),(1628,523,5),(1629,523,16),(1630,524,1),(1631,524,15),(1632,524,2),(1633,524,6),(1634,525,1),(1635,525,3),(1636,525,16),(1637,526,1),(1638,526,4),(1639,526,25),(1640,526,14),(1641,526,34),(1642,527,1),(1643,527,2),(1644,527,7),(1645,527,33),(1646,527,6),(1647,528,1),(1648,528,5),(1649,528,10),(1650,528,16),(1651,528,54),(1652,529,1),(1653,529,8),(1654,529,13),(1655,529,11),(1656,530,12),(1657,530,8),(1658,530,13),(1659,530,41),(1660,530,18),(1661,531,1),(1662,531,3),(1663,531,11),(1664,532,1),(1665,532,3),(1666,532,15),(1667,532,10),(1668,532,6),(1669,533,1),(1670,533,3),(1671,533,11),(1672,534,9),(1673,535,3),(1674,535,2),(1675,535,24),(1676,535,43),(1677,536,2),(1678,536,20),(1679,536,12),(1680,536,8),(1681,536,18),(1682,537,5),(1683,537,2),(1684,537,19),(1685,538,12),(1686,538,8),(1687,538,41),(1688,538,18),(1689,539,1),(1690,539,5),(1691,539,2),(1692,539,6),(1693,540,1),(1694,540,10),(1695,541,15),(1696,541,2),(1697,542,1),(1698,542,4),(1699,542,13),(1700,542,11),(1701,543,12),(1702,543,8),(1703,543,18),(1704,544,2),(1705,544,38),(1706,544,19),(1707,545,12),(1708,545,8),(1709,545,18),(1710,546,1),(1711,546,4),(1712,546,44),(1713,547,8),(1714,547,13),(1715,547,27),(1716,547,21),(1717,548,1),(1718,548,3),(1719,548,16),(1720,549,12),(1721,549,8),(1722,549,18),(1723,550,9),(1724,551,2),(1725,552,4),(1726,553,1),(1727,553,5),(1728,553,4),(1729,554,1),(1730,554,3),(1731,555,1),(1732,555,2),(1733,555,7),(1734,556,5),(1735,556,15),(1736,556,2),(1737,557,15),(1738,557,2),(1739,558,35),(1740,558,12),(1741,559,12),(1742,559,8),(1743,559,13),(1744,560,1),(1745,560,3),(1746,560,16),(1747,561,1),(1748,561,7),(1749,561,6),(1750,561,57),(1751,562,1),(1752,562,4),(1753,562,11),(1754,563,12),(1755,563,8),(1756,563,18),(1757,564,5),(1758,564,2),(1759,565,1),(1760,565,8),(1761,566,1),(1762,566,11),(1763,566,19),(1764,567,3),(1765,567,15),(1766,567,2),(1767,567,23),(1768,568,1),(1769,568,4),(1770,568,11),(1771,569,9),(1772,570,9),(1773,571,9),(1774,572,12),(1775,572,8),(1776,572,45),(1777,572,18),(1778,572,43),(1779,573,1),(1780,573,5),(1781,574,9),(1782,575,1),(1783,575,3),(1784,576,4),(1785,577,9),(1786,578,9),(1787,579,9),(1788,580,9),(1789,581,1),(1790,581,15),(1791,581,20),(1792,581,7),(1793,581,6),(1794,581,31),(1795,582,1),(1796,582,3),(1797,582,12),(1798,582,8),(1799,582,13),(1800,583,2),(1801,583,4),(1802,584,9),(1803,585,9),(1804,586,9),(1805,587,1),(1806,587,5),(1807,587,40),(1808,588,3),(1809,588,2),(1810,588,24),(1811,588,33),(1812,588,6),(1813,589,20),(1814,589,12),(1815,589,8),(1816,590,20),(1817,590,12),(1818,590,8),(1819,591,2),(1820,591,20),(1821,592,5),(1822,592,2),(1823,592,19),(1824,593,5),(1825,593,40),(1826,594,1),(1827,594,3),(1828,594,23),(1829,594,6),(1830,594,22),(1831,595,9),(1832,596,9),(1833,597,9),(1834,598,1),(1835,598,5),(1836,599,1),(1837,599,3),(1838,599,2),(1839,600,4),(1840,601,9),(1841,602,9),(1842,603,9),(1843,604,1),(1844,604,2),(1845,604,24),(1846,604,58),(1847,605,1),(1848,605,7),(1849,606,2),(1850,606,12),(1851,606,8),(1852,606,18),(1853,607,9),(1854,608,9),(1855,609,1),(1856,609,3),(1857,609,2),(1858,610,9),(1859,611,1),(1860,611,15),(1861,611,10),(1862,611,7),(1863,611,6),(1864,612,9),(1865,613,9),(1866,614,9),(1867,615,9),(1868,616,1),(1869,616,3),(1870,616,2),(1871,616,33),(1872,616,45),(1873,617,12),(1874,617,8),(1875,617,13),(1876,617,18),(1877,618,9),(1878,619,9),(1879,620,9),(1880,621,1),(1881,621,3),(1882,621,7),(1883,621,6),(1884,621,17),(1885,621,22),(1886,622,1),(1887,622,28),(1888,622,24),(1889,622,37),(1890,623,12),(1891,623,8),(1892,623,13),(1893,623,18),(1894,624,1),(1895,624,7),(1896,625,5),(1897,625,7),(1898,626,9),(1899,627,9),(1900,628,1),(1901,628,5),(1902,628,6),(1903,629,4),(1904,630,1),(1905,630,7),(1906,630,6),(1907,630,17),(1908,631,1),(1909,631,21),(1910,631,24),(1911,631,46),(1912,631,11),(1913,632,1),(1914,632,3),(1915,632,7),(1916,632,23),(1917,632,6),(1918,632,17),(1919,633,5),(1920,633,15),(1921,633,10),(1922,634,5),(1923,634,4),(1924,634,36),(1925,635,3),(1926,635,2),(1927,635,24),(1928,635,29),(1929,636,1),(1930,636,20),(1931,637,12),(1932,637,8),(1933,637,13),(1934,637,18),(1935,638,1),(1936,638,4),(1937,638,25),(1938,638,14),(1939,638,44),(1940,638,34),(1941,639,2),(1942,639,4),(1943,640,5),(1944,640,2),(1945,640,19),(1946,641,1),(1947,641,28),(1948,641,24),(1949,641,37),(1950,642,2),(1951,642,8),(1952,642,24),(1953,642,33),(1954,642,6),(1955,642,17),(1956,642,51),(1957,643,1),(1958,643,23),(1959,644,1),(1960,644,10),(1961,644,16),(1962,645,1),(1963,645,3),(1964,645,14),(1965,645,6),(1966,646,1),(1967,646,4),(1968,646,7),(1969,646,6),(1970,647,15),(1971,647,2),(1972,647,4),(1973,648,1),(1974,648,3),(1975,648,2),(1976,648,33),(1977,649,2),(1978,649,7),(1979,649,37),(1980,650,5),(1981,650,4),(1982,651,5),(1983,651,4),(1984,652,3),(1985,652,12),(1986,652,8),(1987,652,18),(1988,653,3),(1989,653,15),(1990,653,12),(1991,653,8),(1992,653,13),(1993,653,41),(1994,653,18),(1995,654,1),(1996,654,35),(1997,654,20),(1998,654,12),(1999,654,31),(2000,654,18),(2001,655,12),(2002,655,8),(2003,655,13),(2004,655,18),(2005,656,1),(2006,656,4),(2007,657,2),(2008,657,19),(2009,658,1),(2010,658,15),(2011,658,10),(2012,658,23),(2013,658,6),(2014,658,17),(2015,659,1),(2016,659,3),(2017,659,7),(2018,659,17),(2019,660,5),(2020,661,1),(2021,661,11),(2022,662,12),(2023,662,8),(2024,662,13),(2025,662,18),(2026,663,12),(2027,663,8),(2028,663,18),(2029,664,2),(2030,664,4),(2031,665,1),(2032,666,1),(2033,666,3),(2034,666,12),(2035,666,8),(2036,666,18),(2037,667,1),(2038,667,5),(2039,668,5),(2040,668,10),(2041,669,12),(2042,669,8),(2043,669,41),(2044,669,18),(2045,670,5),(2046,670,7),(2047,671,12),(2048,671,8),(2049,671,18),(2050,672,5),(2051,672,14),(2052,672,8),(2053,672,13),(2054,673,1),(2055,673,4),(2056,673,39),(2057,673,32),(2058,674,1),(2059,675,1),(2060,675,13),(2061,675,17),(2062,675,11),(2063,676,3),(2064,676,2),(2065,676,8),(2066,676,24),(2067,676,33),(2068,677,3),(2069,677,2),(2070,677,24),(2071,677,33),(2072,678,2),(2073,678,4),(2074,678,20),(2075,678,7),(2076,679,1),(2077,679,5),(2078,679,25),(2079,680,15),(2080,680,2),(2081,680,7),(2082,681,3),(2083,681,2),(2084,681,25),(2085,681,26),(2086,682,1),(2087,682,20),(2088,682,19),(2089,683,1),(2090,683,39),(2091,683,32),(2092,683,37),(2093,683,23),(2094,683,17),(2095,683,29),(2096,683,52),(2097,684,8),(2098,684,13),(2099,684,27),(2100,684,21),(2101,685,8),(2102,685,13),(2103,685,27),(2104,685,21),(2105,686,2),(2106,686,45),(2107,687,12),(2108,687,8),(2109,687,18),(2110,688,4),(2111,689,1),(2112,689,4),(2113,690,1),(2114,690,3),(2115,690,12),(2116,690,8),(2117,690,13),(2118,691,1),(2119,691,2),(2120,691,4),(2121,691,25),(2122,691,14),(2123,691,34),(2124,692,1),(2125,692,3),(2126,692,2),(2127,692,33),(2128,692,6),(2129,692,17),(2130,692,63),(2131,692,22),(2132,693,14),(2133,694,3),(2134,694,8),(2135,694,13),(2136,694,27),(2137,694,43),(2138,695,1),(2139,695,8),(2140,695,13),(2141,695,27),(2142,695,11),(2143,696,15),(2144,696,2),(2145,697,1),(2146,697,3),(2147,698,1),(2148,698,4),(2149,698,25),(2150,698,14),(2151,698,44),(2152,698,34),(2153,699,1),(2154,699,32),(2155,699,29),(2156,700,12),(2157,700,41),(2158,700,18),(2159,701,12),(2160,701,41),(2161,701,18),(2162,702,1),(2163,702,10),(2164,702,50),(2165,703,12),(2166,703,24),(2167,703,41),(2168,703,17),(2169,703,18),(2170,703,51),(2171,704,1),(2172,704,10),(2173,705,1),(2174,705,3),(2175,705,28),(2176,705,24),(2177,705,43),(2178,706,1),(2179,706,3),(2180,706,28),(2181,706,24),(2182,706,43),(2183,707,28),(2184,707,24),(2185,708,28),(2186,709,2),(2187,710,1),(2188,710,3),(2189,710,5),(2190,710,10),(2191,710,6),(2192,710,54),(2193,711,3),(2194,711,8),(2195,711,13),(2196,711,27),(2197,711,43),(2198,712,2),(2199,712,4),(2200,713,1),(2201,713,10),(2202,713,23),(2203,713,16),(2204,714,1),(2205,714,4),(2206,714,7),(2207,715,24),(2208,715,32),(2209,715,29),(2210,716,28),(2211,716,20),(2212,716,24),(2213,716,56),(2214,716,29),(2215,717,1),(2216,718,1),(2217,718,10),(2218,718,4),(2219,718,23),(2220,718,48),(2221,718,43),(2222,719,1),(2223,719,15),(2224,719,10),(2225,719,6),(2226,720,1),(2227,720,3),(2228,720,2),(2229,720,33),(2230,720,6),(2231,721,1),(2232,721,3),(2233,721,2),(2234,721,8),(2235,721,13),(2236,721,27),(2237,721,6),(2238,722,1),(2239,722,2),(2240,723,1),(2241,723,15),(2242,723,11),(2243,723,19),(2244,724,1),(2245,724,16),(2246,725,28),(2247,726,3),(2248,726,2),(2249,726,20),(2250,726,6),(2251,727,2),(2252,727,4),(2253,727,23),(2254,728,5),(2255,729,1),(2256,729,10),(2257,729,24),(2258,729,32),(2259,729,29),(2260,730,2),(2261,730,4),(2262,731,1),(2263,731,10),(2264,731,24),(2265,731,32),(2266,731,16),(2267,731,29),(2268,732,10),(2269,732,24),(2270,732,32),(2271,732,16),(2272,732,29),(2273,733,1),(2274,733,8),(2275,733,13),(2276,733,11),(2277,734,1),(2278,734,3),(2279,734,2),(2280,735,1),(2281,735,20),(2282,735,19),(2283,736,3),(2284,736,2),(2285,736,20),(2286,736,38),(2287,737,1),(2288,737,3),(2289,737,2),(2290,737,8),(2291,737,13),(2292,737,27),(2293,738,5),(2294,738,7),(2295,739,1),(2296,739,20),(2297,739,31),(2298,740,1),(2299,740,3),(2300,740,4),(2301,741,1),(2302,741,4),(2303,741,11),(2304,742,12),(2305,742,8),(2306,742,13),(2307,742,18),(2308,743,8),(2309,743,13),(2310,743,21),(2311,743,17),(2312,743,47),(2313,744,1),(2314,744,10),(2315,745,1),(2316,745,3),(2317,745,2),(2318,745,24),(2319,745,33),(2320,746,1),(2321,746,4),(2322,747,1),(2323,747,6),(2324,748,1),(2325,748,3),(2326,748,2),(2327,749,1),(2328,749,8),(2329,749,13),(2330,749,11),(2331,749,19),(2332,750,1),(2333,750,5),(2334,750,4),(2335,750,11),(2336,751,2),(2337,751,14),(2338,752,1),(2339,752,3),(2340,752,2),(2341,752,13),(2342,753,8),(2343,753,21),(2344,753,69),(2345,754,5),(2346,754,10),(2347,755,1),(2348,755,19),(2349,756,14),(2350,756,8),(2351,756,13),(2352,757,1),(2353,757,7),(2354,757,6),(2355,758,1),(2356,758,3),(2357,758,2),(2358,758,33),(2359,758,45),(2360,759,1),(2361,759,6),(2362,759,17),(2363,760,1),(2364,760,3),(2365,761,2),(2366,761,38),(2367,762,5),(2368,762,14),(2369,763,3),(2370,763,15),(2371,763,2),(2372,763,7),(2373,764,1),(2374,764,4),(2375,765,7),(2376,765,8),(2377,765,13),(2378,765,27),(2379,765,21),(2380,766,1),(2381,766,11),(2382,767,3),(2383,767,2),(2384,767,7),(2385,767,6),(2386,767,17),(2387,767,22),(2388,768,1),(2389,768,20),(2390,768,7),(2391,768,6),(2392,768,31),(2393,769,1),(2394,769,20),(2395,769,7),(2396,769,6),(2397,769,31),(2398,770,3),(2399,770,5),(2400,770,2),(2401,770,20),(2402,770,38),(2403,771,3),(2404,771,2),(2405,772,5),(2406,772,2),(2407,772,20),(2408,772,38),(2409,773,1),(2410,773,4),(2411,773,25),(2412,773,13),(2413,773,44),(2414,773,11),(2415,774,1),(2416,774,10),(2417,775,1),(2418,775,5),(2419,776,12),(2420,776,41),(2421,776,38),(2422,776,18),(2423,777,15),(2424,777,2),(2425,778,1),(2426,778,10),(2427,778,8),(2428,778,13),(2429,778,27),(2430,778,17),(2431,778,11),(2432,779,5),(2433,779,14),(2434,779,38),(2435,780,5),(2436,781,1),(2437,781,3),(2438,781,5),(2439,781,7),(2440,782,1),(2441,782,5),(2442,782,14),(2443,782,11),(2444,783,12),(2445,783,8),(2446,783,13),(2447,783,41),(2448,783,18),(2449,784,2),(2450,784,25),(2451,784,14),(2452,785,8),(2453,785,13),(2454,785,27),(2455,785,21),(2456,786,1),(2457,786,15),(2458,786,10),(2459,786,6),(2460,786,17),(2461,787,4),(2462,787,8),(2463,787,13),(2464,787,21),(2465,787,17),(2466,787,47),(2467,788,5),(2468,788,4),(2469,789,1),(2470,789,5),(2471,790,4),(2472,791,3),(2473,791,2),(2474,791,6),(2475,792,1),(2476,792,3),(2477,792,2),(2478,792,10),(2479,792,4),(2480,792,33),(2481,792,6),(2482,793,5),(2483,793,10),(2484,794,1),(2485,794,11),(2486,795,1),(2487,795,15),(2488,796,2),(2489,796,45),(2490,797,25),(2491,797,8),(2492,797,13),(2493,797,21),(2494,798,1),(2495,798,16),(2496,799,4),(2497,800,5),(2498,800,2),(2499,800,26),(2500,801,1),(2501,801,4),(2502,802,8),(2503,802,13),(2504,802,21),(2505,802,46),(2506,803,1),(2507,803,27),(2508,803,11),(2509,804,1),(2510,804,3),(2511,804,2),(2512,805,1),(2513,805,5),(2514,805,4),(2515,805,14),(2516,805,34),(2517,806,1),(2518,806,2),(2519,807,1),(2520,807,7),(2521,807,11),(2522,808,5),(2523,808,4),(2524,808,60),(2525,809,1),(2526,809,15),(2527,809,2),(2528,810,1),(2529,810,5),(2530,810,14),(2531,810,53),(2532,810,49),(2533,811,1),(2534,811,3),(2535,811,2),(2536,811,22),(2537,812,1),(2538,812,5),(2539,812,40),(2540,813,1),(2541,813,4),(2542,813,16),(2543,814,12),(2544,814,8),(2545,814,18),(2546,815,1),(2547,815,3),(2548,815,13),(2549,816,2),(2550,816,25),(2551,816,26),(2552,817,1),(2553,817,3),(2554,817,28),(2555,818,4),(2556,819,1),(2557,819,3),(2558,819,2),(2559,819,22),(2560,820,1),(2561,820,3),(2562,820,2),(2563,820,33),(2564,821,1),(2565,821,15),(2566,821,2),(2567,822,1),(2568,822,3),(2569,823,1),(2570,823,3),(2571,823,4),(2572,823,6),(2573,824,2),(2574,825,1),(2575,825,15),(2576,825,10),(2577,825,6),(2578,826,1),(2579,826,15),(2580,826,10),(2581,826,7),(2582,826,6),(2583,827,1),(2584,827,8),(2585,827,13),(2586,827,27),(2587,827,11),(2588,828,3),(2589,828,2),(2590,828,4),(2591,829,5),(2592,829,26),(2593,830,2),(2594,831,2),(2595,832,1),(2596,832,15),(2597,832,14),(2598,832,11),(2599,832,19),(2600,833,1),(2601,833,3),(2602,833,2),(2603,833,6),(2604,834,4),(2605,834,12),(2606,834,8),(2607,834,21),(2608,835,1),(2609,835,11),(2610,836,5),(2611,836,40),(2612,837,5),(2613,837,4),(2614,837,23),(2615,837,60),(2616,838,15),(2617,838,2),(2618,838,4),(2619,839,1),(2620,839,3),(2621,839,2),(2622,839,8),(2623,839,13),(2624,839,27),(2625,840,1),(2626,840,3),(2627,840,5),(2628,840,11),(2629,841,8),(2630,841,13),(2631,841,21),(2632,842,2),(2633,842,25),(2634,843,1),(2635,843,5),(2636,843,2),(2637,843,50),(2638,843,49),(2639,844,15),(2640,844,2),(2641,844,20),(2642,844,19),(2643,845,1),(2644,845,15),(2645,845,4),(2646,845,26),(2647,846,1),(2648,846,3),(2649,846,7),(2650,846,6),(2651,847,4),(2652,847,14),(2653,847,13),(2654,847,21),(2655,847,34),(2656,848,1),(2657,848,2),(2658,848,16),(2659,849,1),(2660,850,1),(2661,850,32),(2662,850,65),(2663,850,29),(2664,851,1),(2665,851,8),(2666,851,21),(2667,851,46),(2668,852,1),(2669,852,10),(2670,853,1),(2671,853,20),(2672,853,6),(2673,853,31),(2674,854,2),(2675,854,13),(2676,855,24),(2677,855,17),(2678,855,29),(2679,856,2),(2680,856,20),(2681,857,1),(2682,857,7),(2683,857,6),(2684,857,17),(2685,858,5),(2686,858,40),(2687,858,30),(2688,859,3),(2689,859,2),(2690,860,1),(2691,860,7),(2692,861,1),(2693,861,7),(2694,861,14),(2695,861,11),(2696,862,1),(2697,862,10),(2698,862,37),(2699,862,23),(2700,862,17),(2701,862,16),(2702,862,52),(2703,863,3),(2704,863,12),(2705,863,8),(2706,863,13),(2707,863,18),(2708,864,1),(2709,864,14),(2710,864,13),(2711,864,11),(2712,865,3),(2713,865,12),(2714,865,8),(2715,865,13),(2716,865,18),(2717,866,5),(2718,866,30),(2719,867,1),(2720,867,11),(2721,867,19),(2722,868,14),(2723,869,3),(2724,869,5),(2725,869,6),(2726,869,22),(2727,869,26),(2728,870,1),(2729,870,15),(2730,870,7),(2731,870,6),(2732,871,1),(2733,871,4),(2734,871,7),(2735,871,17),(2736,872,12),(2737,872,8),(2738,872,18),(2739,873,1),(2740,873,3),(2741,873,4),(2742,874,1),(2743,874,3),(2744,874,19),(2745,875,1),(2746,875,10),(2747,876,28),(2748,876,15),(2749,877,1),(2750,877,5),(2751,877,4),(2752,877,49),(2753,878,5),(2754,878,10),(2755,879,1),(2756,879,4),(2757,880,2),(2758,880,20),(2759,881,1),(2760,881,15),(2761,881,7),(2762,881,6),(2763,882,21),(2764,882,17),(2765,882,47),(2766,883,1),(2767,883,5),(2768,883,40),(2769,883,11),(2770,884,3),(2771,884,2),(2772,884,22),(2773,885,1),(2774,885,11),(2775,885,19),(2776,886,8),(2777,886,13),(2778,886,27),(2779,886,21),(2780,887,5),(2781,887,10),(2782,887,4),(2783,888,1),(2784,888,3),(2785,888,10),(2786,888,6),(2787,889,1),(2788,889,3),(2789,889,35),(2790,889,12),(2791,889,18),(2792,890,1),(2793,890,3),(2794,890,2),(2795,891,1),(2796,891,5),(2797,891,6),(2798,892,1),(2799,892,5),(2800,892,40),(2801,892,11),(2802,893,1),(2803,893,3),(2804,893,2),(2805,893,6),(2806,894,4),(2807,894,12),(2808,894,38),(2809,894,44),(2810,894,18),(2811,895,3),(2812,895,20),(2813,895,24),(2814,895,29),(2815,896,1),(2816,897,20),(2817,897,12),(2818,897,8),(2819,897,41),(2820,897,18),(2821,898,1),(2822,898,4),(2823,898,14),(2824,899,5),(2825,899,2),(2826,899,6),(2827,900,1),(2828,900,24),(2829,900,22),(2830,900,58),(2831,901,20),(2832,901,24),(2833,901,31),(2834,901,51),(2835,902,1),(2836,902,5),(2837,902,2),(2838,902,10),(2839,902,4),(2840,903,2),(2841,903,4),(2842,903,16),(2843,904,1),(2844,904,3),(2845,904,23),(2846,905,1),(2847,905,15),(2848,905,6),(2849,906,5),(2850,906,26),(2851,907,1),(2852,907,4),(2853,907,20),(2854,907,31),(2855,908,1),(2856,908,5),(2857,909,1),(2858,909,13),(2859,909,11),(2860,910,1),(2861,910,5),(2862,910,7),(2863,910,6),(2864,911,1),(2865,911,3),(2866,911,10),(2867,911,24),(2868,912,1),(2869,912,35),(2870,912,6),(2871,912,17),(2872,912,55),(2873,912,63),(2874,912,70),(2875,912,57),(2876,913,5),(2877,913,4),(2878,913,21),(2879,913,46),(2880,913,44),(2881,913,49),(2882,914,1),(2883,914,3),(2884,914,5),(2885,914,22),(2886,914,30),(2887,915,1),(2888,916,1),(2889,916,3),(2890,916,2),(2891,917,15),(2892,917,2),(2893,918,1),(2894,918,35),(2895,918,4),(2896,918,37),(2897,918,52),(2898,919,12),(2899,919,13),(2900,919,24),(2901,919,18),(2902,920,5),(2903,920,4),(2904,920,36),(2905,921,2),(2906,921,20),(2907,921,7),(2908,922,1),(2909,922,15),(2910,922,6),(2911,923,1),(2912,923,3),(2913,923,15),(2914,923,6),(2915,923,22),(2916,924,1),(2917,924,3),(2918,924,8),(2919,924,13),(2920,924,27),(2921,924,21),(2922,925,15),(2923,925,2),(2924,926,2),(2925,926,4),(2926,927,1),(2927,927,5),(2928,928,1),(2929,928,3),(2930,928,8),(2931,928,13),(2932,928,27),(2933,928,21),(2934,929,1),(2935,929,3),(2936,929,2),(2937,930,1),(2938,930,3),(2939,930,23),(2940,930,16),(2941,931,1),(2942,931,4),(2943,931,11),(2944,932,1),(2945,932,5),(2946,932,35),(2947,933,24),(2948,933,37),(2949,933,51),(2950,934,1),(2951,934,8),(2952,934,13),(2953,934,11),(2954,935,4),(2955,936,2),(2956,936,20),(2957,936,7),(2958,936,37),(2959,937,1),(2960,937,2),(2961,937,6),(2962,938,12),(2963,938,8),(2964,938,41),(2965,938,18),(2966,939,1),(2967,939,3),(2968,939,5),(2969,939,40),(2970,939,6),(2971,940,2),(2972,940,4),(2973,941,1),(2974,942,1),(2975,942,15),(2976,942,2),(2977,942,7),(2978,943,1),(2979,943,2),(2980,943,4),(2981,943,14),(2982,943,34),(2983,944,1),(2984,944,2),(2985,945,1),(2986,945,7),(2987,945,6),(2988,945,22),(2989,946,1),(2990,946,20),(2991,946,19),(2992,947,3),(2993,947,8),(2994,947,27),(2995,947,21),(2996,948,1),(2997,948,15),(2998,948,7),(2999,948,6),(3000,949,1),(3001,949,2),(3002,949,26),(3003,950,1),(3004,950,37),(3005,950,6),(3006,950,19),(3007,951,12),(3008,951,8),(3009,951,18),(3010,952,1),(3011,952,3),(3012,952,5),(3013,952,27),(3014,952,30),(3015,953,1),(3016,953,3),(3017,953,2),(3018,954,1),(3019,954,3),(3020,954,7),(3021,954,6),(3022,955,1),(3023,955,2),(3024,955,7),(3025,956,1),(3026,956,4),(3027,957,1),(3028,957,3),(3029,957,5),(3030,957,14),(3031,958,12),(3032,958,13),(3033,958,18),(3034,959,1),(3035,959,3),(3036,959,8),(3037,959,13),(3038,959,27),(3039,959,11),(3040,960,1),(3041,960,2),(3042,960,4),(3043,961,1),(3044,961,3),(3045,962,1),(3046,962,15),(3047,962,20),(3048,962,31),(3049,963,1),(3050,963,5),(3051,963,40),(3052,964,5),(3053,964,4),(3054,964,44),(3055,965,12),(3056,965,8),(3057,965,13),(3058,965,18),(3059,966,1),(3060,966,3),(3061,966,2),(3062,967,25),(3063,967,13),(3064,968,4),(3065,968,12),(3066,968,8),(3067,968,18),(3068,969,1),(3069,969,15),(3070,969,7),(3071,969,6),(3072,970,3),(3073,970,5),(3074,970,26),(3075,971,12),(3076,971,8),(3077,971,18),(3078,972,5),(3079,972,2),(3080,973,1),(3081,973,5),(3082,973,35),(3083,973,40),(3084,973,6),(3085,973,17),(3086,973,61),(3087,974,1),(3088,974,3),(3089,974,16),(3090,975,1),(3091,975,4),(3092,975,20),(3093,975,31),(3094,975,29),(3095,976,1),(3096,976,5),(3097,976,7),(3098,976,6),(3099,977,1),(3100,977,15),(3101,977,6),(3102,978,1),(3103,978,4),(3104,978,23),(3105,979,12),(3106,979,8),(3107,979,18),(3108,980,1),(3109,980,25),(3110,980,14),(3111,980,11),(3112,981,3),(3113,981,2),(3114,981,10),(3115,981,24),(3116,982,1),(3117,982,3),(3118,982,14),(3119,983,1),(3120,983,4),(3121,984,2),(3122,984,7),(3123,985,1),(3124,985,19),(3125,986,1),(3126,986,15),(3127,986,65),(3128,987,3),(3129,987,12),(3130,987,8),(3131,987,13),(3132,987,6),(3133,987,18),(3134,988,2),(3135,988,25),(3136,988,12),(3137,988,8),(3138,988,18),(3139,989,1),(3140,989,5),(3141,990,1),(3142,990,2),(3143,990,27),(3144,990,21),(3145,991,5),(3146,991,7),(3147,992,1),(3148,992,3),(3149,992,23),(3150,992,22),(3151,993,12),(3152,993,8),(3153,993,13),(3154,993,18),(3155,994,1),(3156,994,13),(3157,994,11),(3158,995,1),(3159,995,14),(3160,995,37),(3161,995,23),(3162,995,16),(3163,996,1),(3164,996,3),(3165,996,5),(3166,996,4),(3167,996,25),(3168,996,14),(3169,996,34),(3170,997,1),(3171,997,3),(3172,997,21),(3173,998,12),(3174,998,18),(3175,999,1),(3176,999,11),(3177,999,19),(3178,1000,1),(3179,1000,4),(3180,1000,16),(3181,1001,1),(3182,1001,3),(3183,1002,1),(3184,1002,3),(3185,1002,2),(3186,1003,2),(3187,1003,20),(3188,1004,1),(3189,1004,10),(3190,1004,23),(3191,1004,16),(3192,1005,1),(3193,1005,7),(3194,1005,6),(3195,1006,5),(3196,1006,20),(3197,1006,19),(3198,1007,1),(3199,1007,7),(3200,1008,1),(3201,1008,20),(3202,1008,12),(3203,1008,41),(3204,1008,31),(3205,1008,18),(3206,1009,14),(3207,1010,1),(3208,1010,3),(3209,1010,22),(3210,1011,1),(3211,1011,10),(3212,1012,5),(3213,1012,4),(3214,1013,1),(3215,1013,7),(3216,1014,1),(3217,1014,4),(3218,1015,3),(3219,1015,5),(3220,1016,2),(3221,1017,5),(3222,1018,1),(3223,1018,14),(3224,1019,1),(3225,1019,28),(3226,1019,20),(3227,1019,31),(3228,1020,1),(3229,1020,8),(3230,1020,13),(3231,1020,27),(3232,1020,11),(3233,1021,2),(3234,1021,20),(3235,1022,12),(3236,1022,8),(3237,1022,18),(3238,1023,1),(3239,1023,15),(3240,1023,2),(3241,1023,33),(3242,1023,45),(3243,1024,1),(3244,1024,4),(3245,1024,7),(3246,1025,5),(3247,1025,4),(3248,1025,53),(3249,1025,49),(3250,1026,12),(3251,1026,8),(3252,1026,18),(3253,1027,1),(3254,1027,3),(3255,1027,10),(3256,1027,4),(3257,1028,2),(3258,1028,12),(3259,1028,8),(3260,1028,18),(3261,1029,1),(3262,1029,7),(3263,1029,6),(3264,1030,1),(3265,1030,5),(3266,1030,40),(3267,1030,6),(3268,1030,11),(3269,1031,1),(3270,1031,4),(3271,1031,23),(3272,1032,1),(3273,1032,2),(3274,1032,24),(3275,1032,33),(3276,1032,51),(3277,1033,5),(3278,1033,53),(3279,1034,1),(3280,1034,8),(3281,1034,13),(3282,1034,11),(3283,1035,1),(3284,1035,4),(3285,1036,1),(3286,1036,3),(3287,1036,8),(3288,1036,13),(3289,1037,1),(3290,1037,5),(3291,1037,40),(3292,1038,12),(3293,1038,8),(3294,1038,41),(3295,1038,18),(3296,1039,1),(3297,1039,4),(3298,1040,1),(3299,1040,5),(3300,1040,15),(3301,1040,6),(3302,1041,5),(3303,1041,2),(3304,1041,19),(3305,1042,8),(3306,1042,13),(3307,1042,21),(3308,1043,1),(3309,1043,4),(3310,1044,2),(3311,1044,10),(3312,1044,23),(3313,1044,48),(3314,1044,62),(3315,1044,43),(3316,1045,9),(3317,1046,1),(3318,1046,17),(3319,1047,2),(3320,1047,20),(3321,1048,1),(3322,1048,3),(3323,1048,15),(3324,1048,2),(3325,1048,4),(3326,1048,6),(3327,1049,1),(3328,1049,4),(3329,1050,9),(3330,1051,1),(3331,1051,6),(3332,1051,57),(3333,1052,1),(3334,1052,23),(3335,1053,1),(3336,1053,7),(3337,1054,1),(3338,1054,3),(3339,1054,7),(3340,1054,6),(3341,1054,17),(3342,1054,22),(3343,1055,15),(3344,1055,2),(3345,1055,10),(3346,1055,7),(3347,1056,5),(3348,1057,1),(3349,1057,7),(3350,1057,6),(3351,1058,1),(3352,1058,5),(3353,1058,2),(3354,1058,7),(3355,1058,6),(3356,1059,21),(3357,1059,46),(3358,1060,1),(3359,1060,10),(3360,1061,2),(3361,1061,27),(3362,1062,2),(3363,1062,10),(3364,1062,4),(3365,1062,48),(3366,1062,62),(3367,1062,43),(3368,1063,1),(3369,1063,20),(3370,1063,31),(3371,1064,1),(3372,1064,10),(3373,1065,1),(3374,1065,2),(3375,1065,33),(3376,1065,6),(3377,1066,1),(3378,1066,4),(3379,1066,25),(3380,1066,14),(3381,1066,34),(3382,1067,5),(3383,1067,4),(3384,1068,9),(3385,1069,9),(3386,1070,9),(3387,1071,5),(3388,1071,2),(3389,1072,1),(3390,1072,3),(3391,1072,11),(3392,1073,1),(3393,1073,5),(3394,1074,1),(3395,1074,3),(3396,1074,11),(3397,1074,16),(3398,1075,9),(3399,1076,9),(3400,1077,9),(3401,1078,2),(3402,1079,3),(3403,1079,2),(3404,1079,25),(3405,1079,22),(3406,1080,12),(3407,1080,8),(3408,1080,18),(3409,1081,2),(3410,1081,20),(3411,1081,7),(3412,1081,31),(3413,1082,9),(3414,1083,9),(3415,1084,9),(3416,1085,1),(3417,1085,5),(3418,1086,1),(3419,1086,3),(3420,1086,6),(3421,1086,17),(3422,1087,2),(3423,1087,25),(3424,1087,13),(3425,1088,5),(3426,1088,25),(3427,1089,1),(3428,1089,15),(3429,1090,1),(3430,1090,3),(3431,1090,7),(3432,1090,6),(3433,1090,22),(3434,1091,1),(3435,1091,13),(3436,1091,11),(3437,1092,2),(3438,1092,4),(3439,1093,1),(3440,1093,5),(3441,1093,60),(3442,1094,1),(3443,1094,6),(3444,1094,17),(3445,1094,19),(3446,1094,16),(3447,1095,1),(3448,1095,10),(3449,1095,50),(3450,1096,2),(3451,1096,25),(3452,1096,20),(3453,1096,13),(3454,1097,9),(3455,1098,9),(3456,1099,1),(3457,1099,15),(3458,1099,10),(3459,1099,6),(3460,1100,3),(3461,1100,2),(3462,1100,23),(3463,1101,1),(3464,1101,27),(3465,1101,6),(3466,1102,1),(3467,1102,10),(3468,1102,8),(3469,1102,13),(3470,1102,27),(3471,1102,17),(3472,1102,11),(3473,1103,5),(3474,1103,19),(3475,1104,5),(3476,1104,12),(3477,1104,18),(3478,1105,1),(3479,1105,4),(3480,1106,2),(3481,1106,20),(3482,1106,38),(3483,1107,9),(3484,1108,2),(3485,1109,1),(3486,1109,16),(3487,1110,1),(3488,1110,3),(3489,1110,12),(3490,1110,8),(3491,1110,18),(3492,1111,2),(3493,1111,20),(3494,1112,9),(3495,1113,9),(3496,1114,59),(3497,1115,59),(3498,1116,59),(3499,1117,59),(3500,1118,5),(3501,1119,2),(3502,1120,12),(3503,1120,8),(3504,1120,18),(3505,1121,1),(3506,1121,22),(3507,1122,1),(3508,1122,3),(3509,1122,6),(3510,1122,57),(3511,1123,3),(3512,1123,12),(3513,1123,8),(3514,1123,13),(3515,1123,18),(3516,1124,1),(3517,1124,3),(3518,1124,20),(3519,1124,31),(3520,1124,16),(3521,1125,1),(3522,1125,4),(3523,1125,14),(3524,1125,34),(3525,1126,9),(3526,1127,9),(3527,1128,1),(3528,1128,3),(3529,1128,22),(3530,1129,13),(3531,1129,21),(3532,1130,1),(3533,1130,4),(3534,1130,20),(3535,1130,7),(3536,1130,31),(3537,1131,1),(3538,1131,5),(3539,1132,9),(3540,1133,1),(3541,1133,3),(3542,1133,6),(3543,1134,5),(3544,1135,27),(3545,1135,21),(3546,1135,17),(3547,1135,64),(3548,1136,21),(3549,1136,46),(3550,1137,5),(3551,1137,4),(3552,1137,44),(3553,1138,3),(3554,1138,2),(3555,1139,1),(3556,1139,4),(3557,1139,11),(3558,1140,1),(3559,1140,5),(3560,1140,4),(3561,1140,16),(3562,1140,49),(3563,1141,9),(3564,1142,9),(3565,1143,2),(3566,1143,4),(3567,1144,1),(3568,1144,7),(3569,1145,12),(3570,1145,8),(3571,1145,18),(3572,1146,1),(3573,1146,3),(3574,1146,10),(3575,1146,24),(3576,1147,15),(3577,1147,2),(3578,1147,4),(3579,1147,7),(3580,1147,48),(3581,1147,43),(3582,1148,9),(3583,1149,9),(3584,1150,1),(3585,1150,10),(3586,1151,1),(3587,1151,23),(3588,1152,1),(3589,1152,3),(3590,1152,6),(3591,1153,3),(3592,1153,2),(3593,1154,5),(3594,1154,2),(3595,1155,4),(3596,1156,3),(3597,1156,2),(3598,1156,23),(3599,1157,1),(3600,1157,10),(3601,1157,24),(3602,1157,39),(3603,1157,32),(3604,1158,9),(3605,1159,9),(3606,1160,1),(3607,1160,3),(3608,1160,2),(3609,1160,22),(3610,1161,12),(3611,1161,8),(3612,1161,13),(3613,1161,18),(3614,1162,1),(3615,1162,4),(3616,1162,13),(3617,1162,11),(3618,1163,15),(3619,1163,2),(3620,1164,9),(3621,1165,3),(3622,1165,2),(3623,1166,3),(3624,1166,2),(3625,1166,24),(3626,1166,33),(3627,1167,1),(3628,1167,7),(3629,1167,17),(3630,1168,27),(3631,1168,21),(3632,1168,17),(3633,1168,64),(3634,1169,1),(3635,1169,3),(3636,1169,2),(3637,1169,6),(3638,1170,1),(3639,1170,3),(3640,1170,2),(3641,1170,10),(3642,1170,6),(3643,1171,3),(3644,1171,28),(3645,1172,3),(3646,1172,20),(3647,1172,24),(3648,1172,17),(3649,1173,9),(3650,1174,9),(3651,1175,5),(3652,1176,1),(3653,1176,23),(3654,1177,1),(3655,1177,3),(3656,1177,2),(3657,1177,14),(3658,1177,16),(3659,1178,1),(3660,1178,3),(3661,1178,2),(3662,1178,14),(3663,1178,33),(3664,1179,9),(3665,1180,5),(3666,1180,2),(3667,1181,1),(3668,1181,3),(3669,1181,2),(3670,1181,6),(3671,1182,1),(3672,1182,10),(3673,1182,4),(3674,1183,7),(3675,1183,17),(3676,1184,1),(3677,1185,5),(3678,1186,1),(3679,1186,4),(3680,1187,1),(3681,1187,10),(3682,1187,4),(3683,1187,6),(3684,1188,59),(3685,1189,3),(3686,1189,2),(3687,1189,22),(3688,1190,2),(3689,1190,20),(3690,1191,1),(3691,1191,4),(3692,1192,8),(3693,1192,21),(3694,1192,72),(3695,1193,9),(3696,1194,9),(3697,1195,59),(3698,1196,1),(3699,1196,7),(3700,1196,6),(3701,1197,13),(3702,1198,1),(3703,1198,3),(3704,1198,10),(3705,1198,11),(3706,1198,22),(3707,1199,1),(3708,1199,5),(3709,1199,7),(3710,1199,17),(3711,1200,1),(3712,1200,6),(3713,1201,5),(3714,1201,10),(3715,1201,36),(3716,1201,30),(3717,1202,1),(3718,1202,3),(3719,1202,2),(3720,1202,8),(3721,1202,13),(3722,1202,27),(3723,1202,6),(3724,1203,8),(3725,1203,13),(3726,1203,21),(3727,1203,46),(3728,1204,9),(3729,1205,9),(3730,1206,28),(3731,1206,24),(3732,1207,1),(3733,1207,3),(3734,1208,2),(3735,1208,10),(3736,1208,23),(3737,1208,16),(3738,1209,2),(3739,1209,20),(3740,1210,1),(3741,1210,13),(3742,1210,11),(3743,1211,9),(3744,1212,9),(3745,1213,1),(3746,1213,3),(3747,1213,10),(3748,1213,22),(3749,1214,15),(3750,1214,10),(3751,1214,20),(3752,1214,12),(3753,1214,8),(3754,1214,41),(3755,1214,18),(3756,1215,5),(3757,1215,25),(3758,1215,13),(3759,1216,2),(3760,1216,4),(3761,1217,1),(3762,1217,5),(3763,1217,7),(3764,1218,1),(3765,1218,3),(3766,1218,4),(3767,1219,1),(3768,1219,25),(3769,1219,11),(3770,1220,4),(3771,1221,2),(3772,1221,7),(3773,1221,22),(3774,1222,1),(3775,1222,11),(3776,1222,19),(3777,1223,1),(3778,1223,4),(3779,1224,1),(3780,1224,3),(3781,1225,9),(3782,1226,59),(3783,1227,5),(3784,1227,4),(3785,1227,53),(3786,1227,60),(3787,1228,1),(3788,1228,5),(3789,1229,1),(3790,1229,15),(3791,1229,6),(3792,1230,1),(3793,1230,5),(3794,1230,4),(3795,1230,60),(3796,1231,1),(3797,1231,10),(3798,1232,1),(3799,1232,5),(3800,1232,40),(3801,1233,1),(3802,1233,2),(3803,1233,8),(3804,1233,33),(3805,1234,2),(3806,1234,23),(3807,1235,1),(3808,1235,10),(3809,1235,4),(3810,1235,6),(3811,1236,2),(3812,1236,8),(3813,1236,13),(3814,1236,50),(3815,1237,5),(3816,1237,15),(3817,1237,10),(3818,1237,50),(3819,1238,5),(3820,1238,25),(3821,1238,14),(3822,1239,1),(3823,1239,2),(3824,1239,25),(3825,1239,14),(3826,1240,25),(3827,1241,9),(3828,1242,8),(3829,1242,13),(3830,1242,59),(3831,1243,1),(3832,1243,19),(3833,1244,3),(3834,1244,24),(3835,1244,6),(3836,1245,12),(3837,1245,8),(3838,1245,13),(3839,1245,21),(3840,1245,46),(3841,1246,1),(3842,1246,4),(3843,1247,5),(3844,1247,2),(3845,1247,7),(3846,1248,1),(3847,1248,3),(3848,1248,5),(3849,1248,23),(3850,1248,16),(3851,1249,2),(3852,1249,20),(3853,1250,1),(3854,1250,5),(3855,1250,30),(3856,1251,9),(3857,1252,1),(3858,1252,5),(3859,1252,19),(3860,1253,1),(3861,1253,7),(3862,1253,11),(3863,1254,1),(3864,1254,8),(3865,1254,13),(3866,1254,27),(3867,1254,11),(3868,1255,1),(3869,1255,2),(3870,1255,4),(3871,1255,25),(3872,1255,14),(3873,1255,34),(3874,1256,5),(3875,1256,2),(3876,1256,14),(3877,1257,1),(3878,1257,3),(3879,1257,2),(3880,1257,12),(3881,1257,8),(3882,1257,13),(3883,1258,1),(3884,1258,3),(3885,1258,2),(3886,1258,25),(3887,1258,27),(3888,1259,5),(3889,1259,4),(3890,1260,1),(3891,1260,11),(3892,1260,19),(3893,1261,3),(3894,1261,12),(3895,1261,8),(3896,1261,13),(3897,1261,24),(3898,1261,18),(3899,1262,1),(3900,1262,4),(3901,1262,7),(3902,1262,6),(3903,1263,1),(3904,1263,13),(3905,1263,17),(3906,1263,11),(3907,1264,9),(3908,1265,28),(3909,1265,15),(3910,1265,20),(3911,1265,38),(3912,1266,1),(3913,1266,5),(3914,1266,40),(3915,1267,1),(3916,1267,8),(3917,1267,13),(3918,1267,27),(3919,1267,11),(3920,1267,22),(3921,1268,1),(3922,1268,2),(3923,1268,10),(3924,1268,33),(3925,1268,6),(3926,1268,17),(3927,1269,4),(3928,1270,9),(3929,1271,5),(3930,1271,2),(3931,1272,1),(3932,1273,1),(3933,1273,12),(3934,1273,8),(3935,1273,13),(3936,1274,1),(3937,1274,35),(3938,1274,50),(3939,1275,1),(3940,1275,3),(3941,1275,11),(3942,1275,19),(3943,1276,5),(3944,1277,1),(3945,1277,4),(3946,1277,11),(3947,1278,2),(3948,1278,4),(3949,1279,59),(3950,1280,9),(3951,1281,5),(3952,1282,1),(3953,1282,3),(3954,1282,7),(3955,1283,1),(3956,1283,10),(3957,1284,1),(3958,1284,3),(3959,1284,14),(3960,1284,13),(3961,1284,11),(3962,1285,9),(3963,1286,2),(3964,1286,25),(3965,1286,24),(3966,1286,58),(3967,1287,1),(3968,1288,1),(3969,1288,6),(3970,1289,1),(3971,1289,4),(3972,1289,11),(3973,1290,28),(3974,1290,5),(3975,1291,26),(3976,1292,1),(3977,1292,10),(3978,1292,11),(3979,1292,16),(3980,1293,1),(3981,1293,13),(3982,1293,11),(3983,1294,9),(3984,1295,1),(3985,1295,5),(3986,1296,1),(3987,1296,3),(3988,1296,7),(3989,1296,6),(3990,1297,3),(3991,1297,2),(3992,1297,23),(3993,1298,1),(3994,1298,13),(3995,1298,21),(3996,1299,1),(3997,1300,1),(3998,1300,10),(3999,1300,6),(4000,1301,1),(4001,1301,4),(4002,1301,11),(4003,1302,12),(4004,1302,8),(4005,1302,13),(4006,1302,18),(4007,1303,9),(4008,1304,1),(4009,1304,5),(4010,1305,12),(4011,1305,8),(4012,1305,41),(4013,1305,6),(4014,1305,18),(4015,1306,1),(4016,1306,8),(4017,1306,13),(4018,1307,1),(4019,1307,5),(4020,1307,2),(4021,1307,25),(4022,1308,9),(4023,1309,2),(4024,1310,1),(4025,1310,14),(4026,1310,16),(4027,1311,1),(4028,1311,3),(4029,1311,13),(4030,1311,21),(4031,1311,6),(4032,1312,2),(4033,1312,4),(4034,1313,1),(4035,1314,1),(4036,1314,11),(4037,1314,16),(4038,1315,12),(4039,1315,8),(4040,1315,13),(4041,1315,18),(4042,1316,2),(4043,1316,33),(4044,1316,48),(4045,1316,43),(4046,1317,5),(4047,1318,14),(4048,1319,8),(4049,1319,13),(4050,1319,27),(4051,1319,21),(4052,1320,2),(4053,1320,4),(4054,1321,9),(4055,1322,9),(4056,1323,5),(4057,1323,7),(4058,1324,1),(4059,1324,2),(4060,1324,19),(4061,1325,12),(4062,1325,8),(4063,1325,18),(4064,1326,1),(4065,1326,4),(4066,1326,7),(4067,1327,9),(4068,1328,2),(4069,1328,7),(4070,1329,1),(4071,1329,6),(4072,1329,11),(4073,1330,1),(4074,1330,5),(4075,1330,7),(4076,1331,1),(4077,1331,3),(4078,1331,6),(4079,1332,15),(4080,1332,2),(4081,1333,1),(4082,1333,6),(4083,1334,4),(4084,1334,21),(4085,1334,47),(4086,1335,1),(4087,1335,4),(4088,1336,9),(4089,1337,1),(4090,1337,10),(4091,1337,6),(4092,1337,17),(4093,1337,11),(4094,1338,1),(4095,1338,3),(4096,1338,7),(4097,1338,6),(4098,1338,17),(4099,1339,12),(4100,1339,8),(4101,1339,18),(4102,1340,1),(4103,1340,4),(4104,1340,6),(4105,1341,9),(4106,1342,5),(4107,1342,14),(4108,1343,1),(4109,1343,23),(4110,1344,5),(4111,1345,1),(4112,1345,3),(4113,1345,13),(4114,1346,1),(4115,1346,3),(4116,1346,15),(4117,1346,10),(4118,1346,6),(4119,1347,3),(4120,1347,2),(4121,1347,22),(4122,1348,3),(4123,1348,10),(4124,1348,24),(4125,1348,6),(4126,1348,29),(4127,1349,1),(4128,1349,4),(4129,1349,14),(4130,1349,11),(4131,1349,34),(4132,1350,9),(4133,1351,1),(4134,1351,10),(4135,1351,11),(4136,1352,1),(4137,1352,5),(4138,1352,24),(4139,1352,51),(4140,1352,16),(4141,1353,1),(4142,1353,7),(4143,1353,6),(4144,1353,17),(4145,1354,1),(4146,1354,17),(4147,1355,9),(4148,1356,1),(4149,1356,14),(4150,1356,6),(4151,1356,22),(4152,1357,1),(4153,1357,3),(4154,1357,24),(4155,1358,3),(4156,1358,2),(4157,1358,23),(4158,1359,5),(4159,1359,4),(4160,1359,36),(4161,1360,5),(4162,1360,2),(4163,1361,12),(4164,1361,8),(4165,1361,13),(4166,1361,27),(4167,1361,21),(4168,1361,18),(4169,1362,5),(4170,1363,1),(4171,1363,4),(4172,1363,7),(4173,1364,9),(4174,1365,1),(4175,1365,3),(4176,1365,6),(4177,1365,22),(4178,1366,1),(4179,1366,3),(4180,1366,2),(4181,1366,6),(4182,1366,22),(4183,1367,28),(4184,1367,12),(4185,1367,8),(4186,1367,18),(4187,1368,1),(4188,1368,13),(4189,1368,21),(4190,1368,17),(4191,1368,11),(4192,1368,47),(4193,1369,9),(4194,1370,3),(4195,1370,2),(4196,1370,22),(4197,1371,3),(4198,1371,2),(4199,1371,14),(4200,1371,16),(4201,1372,4),(4202,1372,12),(4203,1372,8),(4204,1372,18),(4205,1373,4),(4206,1373,12),(4207,1373,8),(4208,1373,41),(4209,1373,18),(4210,1374,2),(4211,1375,1),(4212,1376,12),(4213,1376,8),(4214,1376,13),(4215,1377,12),(4216,1377,8),(4217,1377,13),(4218,1377,21),(4219,1378,9),(4220,1379,12),(4221,1379,8),(4222,1379,13),(4223,1379,18),(4224,1380,1),(4225,1380,11),(4226,1381,1),(4227,1381,20),(4228,1381,24),(4229,1382,35),(4230,1382,7),(4231,1382,12),(4232,1382,8),(4233,1382,41),(4234,1382,18),(4235,1383,1),(4236,1383,7),(4237,1383,6),(4238,1383,17),(4239,1384,9),(4240,1385,1),(4241,1385,15),(4242,1385,10),(4243,1385,6),(4244,1386,1),(4245,1386,3),(4246,1386,7),(4247,1386,14),(4248,1387,4),(4249,1387,44),(4250,1387,6),(4251,1388,1),(4252,1388,4),(4253,1388,7),(4254,1388,17),(4255,1389,1),(4256,1389,19),(4257,1390,1),(4258,1390,5),(4259,1391,1),(4260,1391,8),(4261,1391,13),(4262,1391,27),(4263,1391,11),(4264,1392,2),(4265,1392,48),(4266,1392,45),(4267,1392,43),(4268,1393,9),(4269,1394,1),(4270,1394,3),(4271,1394,22),(4272,1395,1),(4273,1395,4),(4274,1395,39),(4275,1395,32),(4276,1396,3),(4277,1396,2),(4278,1396,24),(4279,1397,2),(4280,1397,4),(4281,1397,45),(4282,1398,9),(4283,1399,3),(4284,1399,5),(4285,1400,3),(4286,1400,2),(4287,1400,7),(4288,1400,22),(4289,1401,5),(4290,1401,40),(4291,1402,1),(4292,1402,4),(4293,1402,7),(4294,1402,6),(4295,1403,1),(4296,1403,7),(4297,1403,6),(4298,1404,2),(4299,1404,14),(4300,1405,2),(4301,1405,7),(4302,1405,17),(4303,1406,1),(4304,1406,5),(4305,1406,4),(4306,1406,49),(4307,1407,9),(4308,1408,1),(4309,1408,2),(4310,1408,45),(4311,1409,1),(4312,1409,39),(4313,1409,19),(4314,1410,3),(4315,1410,2),(4316,1411,4),(4317,1412,9),(4318,1413,1),(4319,1413,16),(4320,1414,5),(4321,1414,7),(4322,1415,2),(4323,1415,25),(4324,1416,2),(4325,1416,4),(4326,1417,2),(4327,1418,1),(4328,1418,3),(4329,1418,2),(4330,1418,6),(4331,1418,29),(4332,1419,2),(4333,1419,22),(4334,1420,4),(4335,1420,16),(4336,1421,9),(4337,1422,2),(4338,1422,16),(4339,1423,1),(4340,1423,23),(4341,1423,16),(4342,1424,1),(4343,1424,6),(4344,1424,17),(4345,1425,1),(4346,1425,4),(4347,1425,37),(4348,1425,23),(4349,1425,17),(4350,1425,52),(4351,1426,1),(4352,1426,3),(4353,1427,1),(4354,1427,5),(4355,1427,2),(4356,1428,1),(4357,1428,10),(4358,1428,11),(4359,1428,50),(4360,1429,1),(4361,1429,3),(4362,1429,24),(4363,1429,37),(4364,1429,51),(4365,1430,12),(4366,1430,8),(4367,1430,13),(4368,1430,18),(4369,1431,1),(4370,1432,5),(4371,1432,7),(4372,1433,2),(4373,1433,7),(4374,1433,6),(4375,1434,1),(4376,1434,4),(4377,1434,14),(4378,1434,34),(4379,1435,9),(4380,1436,1),(4381,1436,3),(4382,1436,2),(4383,1437,1),(4384,1438,1),(4385,1438,37),(4386,1438,23),(4387,1438,17),(4388,1438,29),(4389,1438,52),(4390,1439,1),(4391,1439,10),(4392,1439,17),(4393,1439,11),(4394,1440,9),(4395,1441,1),(4396,1441,20),(4397,1441,19),(4398,1442,1),(4399,1442,3),(4400,1442,5),(4401,1442,14),(4402,1442,16),(4403,1443,3),(4404,1443,12),(4405,1443,8),(4406,1443,13),(4407,1444,1),(4408,1444,4),(4409,1444,44),(4410,1444,11),(4411,1445,9),(4412,1446,2),(4413,1447,5),(4414,1447,2),(4415,1447,30),(4416,1448,12),(4417,1448,8),(4418,1448,13),(4419,1448,18),(4420,1449,1),(4421,1449,4),(4422,1450,1),(4423,1451,2),(4424,1451,6),(4425,1452,1),(4426,1452,3),(4427,1452,2),(4428,1453,1),(4429,1453,5),(4430,1453,40),(4431,1454,9),(4432,1455,15),(4433,1455,2),(4434,1455,45),(4435,1456,2),(4436,1456,23),(4437,1457,14),(4438,1457,12),(4439,1457,8),(4440,1457,13),(4441,1457,18),(4442,1458,1),(4443,1458,4),(4444,1459,9),(4445,1460,1),(4446,1460,3),(4447,1460,6),(4448,1461,3),(4449,1461,2),(4450,1461,14),(4451,1461,48),(4452,1461,43),(4453,1462,8),(4454,1462,13),(4455,1462,21),(4456,1462,46),(4457,1463,1),(4458,1463,4),(4459,1463,11),(4460,1464,1),(4461,1464,6),(4462,1464,17),(4463,1465,1),(4464,1465,7),(4465,1465,6),(4466,1466,8),(4467,1466,13),(4468,1466,21),(4469,1467,1),(4470,1467,5),(4471,1467,4),(4472,1467,25),(4473,1467,36),(4474,1467,60),(4475,1468,9),(4476,1469,12),(4477,1469,8),(4478,1469,13),(4479,1469,18),(4480,1470,1),(4481,1471,1),(4482,1471,15),(4483,1471,6),(4484,1472,1),(4485,1472,28),(4486,1472,20),(4487,1472,24),(4488,1472,56),(4489,1472,51),(4490,1473,1),(4491,1473,4),(4492,1474,28),(4493,1475,1),(4494,1475,20),(4495,1475,31),(4496,1476,1),(4497,1476,24),(4498,1476,11),(4499,1477,1),(4500,1477,3),(4501,1477,10),(4502,1477,4),(4503,1477,23),(4504,1478,1),(4505,1478,5),(4506,1478,4),(4507,1478,6),(4508,1479,9),(4509,1480,1),(4510,1480,16),(4511,1481,1),(4512,1481,3),(4513,1481,7),(4514,1481,6),(4515,1481,22),(4516,1482,1),(4517,1482,10),(4518,1483,10),(4519,1483,4),(4520,1483,12),(4521,1483,8),(4522,1483,13),(4523,1483,24),(4524,1484,9),(4525,1485,3),(4526,1485,12),(4527,1485,8),(4528,1485,13),(4529,1485,18),(4530,1486,5),(4531,1486,14),(4532,1487,1),(4533,1487,3),(4534,1487,2),(4535,1488,1),(4536,1488,3),(4537,1488,10),(4538,1488,7),(4539,1488,17),(4540,1489,27),(4541,1489,21),(4542,1489,6),(4543,1489,64),(4544,1489,68),(4545,1490,3),(4546,1490,12),(4547,1490,8),(4548,1490,13),(4549,1491,1),(4550,1491,6),(4551,1492,5),(4552,1492,30),(4553,1493,1),(4554,1493,4),(4555,1493,23),(4556,1494,4),(4557,1494,14),(4558,1494,21),(4559,1494,34),(4560,1495,9),(4561,1496,3),(4562,1496,2),(4563,1497,1),(4564,1497,3),(4565,1497,22),(4566,1498,1),(4567,1498,15),(4568,1498,10),(4569,1498,6),(4570,1499,1),(4571,1499,37),(4572,1499,23),(4573,1499,17),(4574,1499,52),(4575,1500,3),(4576,1500,24),(4577,1500,6),(4578,1500,17),(4579,1500,51),(4580,1501,9),(4581,1502,1),(4582,1502,6),(4583,1503,1),(4584,1503,53),(4585,1503,19),(4586,1504,1),(4587,1504,4),(4588,1504,20),(4589,1504,11),(4590,1504,31),(4591,1505,2),(4592,1505,7),(4593,1505,39),(4594,1505,32),(4595,1506,3),(4596,1506,14),(4597,1506,12),(4598,1506,8),(4599,1507,2),(4600,1508,1),(4601,1508,15),(4602,1508,10),(4603,1508,6),(4604,1509,1),(4605,1509,7),(4606,1509,6),(4607,1510,5),(4608,1510,4),(4609,1510,49),(4610,1511,9),(4611,1512,1),(4612,1512,3),(4613,1512,5),(4614,1512,22),(4615,1513,5),(4616,1513,2),(4617,1514,1),(4618,1514,21),(4619,1514,17),(4620,1514,47),(4621,1515,1),(4622,1515,5),(4623,1515,40),(4624,1515,54),(4625,1516,12),(4626,1516,8),(4627,1517,9),(4628,1518,5),(4629,1518,19),(4630,1519,3),(4631,1519,12),(4632,1519,8),(4633,1519,13),(4634,1519,22),(4635,1520,2),(4636,1520,7),(4637,1521,1),(4638,1521,10),(4639,1521,14),(4640,1521,32),(4641,1522,12),(4642,1522,8),(4643,1523,5),(4644,1524,1),(4645,1524,5),(4646,1524,4),(4647,1524,16),(4648,1525,3),(4649,1525,2),(4650,1525,4),(4651,1525,14),(4652,1526,1),(4653,1526,4),(4654,1526,20),(4655,1526,7),(4656,1526,31),(4657,1527,9),(4658,1528,1),(4659,1528,2),(4660,1529,2),(4661,1529,7),(4662,1530,12),(4663,1530,8),(4664,1530,18),(4665,1531,2),(4666,1531,4),(4667,1532,9),(4668,1533,1),(4669,1533,10),(4670,1533,50),(4671,1534,1),(4672,1534,26),(4673,1535,1),(4674,1535,19),(4675,1536,1),(4676,1536,7),(4677,1536,11),(4678,1537,1),(4679,1537,15),(4680,1537,4),(4681,1537,7),(4682,1538,1),(4683,1538,5),(4684,1538,50),(4685,1539,1),(4686,1539,10),(4687,1540,3),(4688,1540,2),(4689,1541,2),(4690,1541,20),(4691,1541,7),(4692,1542,3),(4693,1542,2),(4694,1542,14),(4695,1543,9),(4696,1544,2),(4697,1544,20),(4698,1545,2),(4699,1545,38),(4700,1545,19),(4701,1546,1),(4702,1546,3),(4703,1546,7),(4704,1546,16),(4705,1547,1),(4706,1547,4),(4707,1547,6),(4708,1548,4),(4709,1548,21),(4710,1549,9),(4711,1550,1),(4712,1551,5),(4713,1552,1),(4714,1552,10),(4715,1552,6),(4716,1553,4),(4717,1553,44),(4718,1554,3),(4719,1554,2),(4720,1554,48),(4721,1554,43),(4722,1555,9),(4723,1556,2),(4724,1557,21),(4725,1558,1),(4726,1558,7),(4727,1558,14),(4728,1559,1),(4729,1559,8),(4730,1559,13),(4731,1559,27),(4732,1559,11),(4733,1560,1),(4734,1560,19),(4735,1561,1),(4736,1561,5),(4737,1561,7),(4738,1561,6),(4739,1561,49),(4740,1562,1),(4741,1562,3),(4742,1562,10),(4743,1562,19),(4744,1563,1),(4745,1563,5),(4746,1563,4),(4747,1563,49),(4748,1564,1),(4749,1564,7),(4750,1564,6),(4751,1565,9),(4752,1566,1),(4753,1566,26),(4754,1567,1),(4755,1567,4),(4756,1567,7),(4757,1568,1),(4758,1568,8),(4759,1568,13),(4760,1568,11),(4761,1568,68),(4762,1569,1),(4763,1569,5),(4764,1569,35),(4765,1569,4),(4766,1569,12),(4767,1569,27),(4768,1569,41),(4769,1569,44),(4770,1569,36),(4771,1569,18),(4772,1570,1),(4773,1570,3),(4774,1570,15),(4775,1570,24),(4776,1571,9),(4777,1572,1),(4778,1572,11),(4779,1573,5),(4780,1573,2),(4781,1574,1),(4782,1574,15),(4783,1574,10),(4784,1574,20),(4785,1574,31),(4786,1575,1),(4787,1575,4),(4788,1575,44),(4789,1576,2),(4790,1577,1),(4791,1577,3),(4792,1577,5),(4793,1577,15),(4794,1578,1),(4795,1578,2),(4796,1578,4),(4797,1578,7),(4798,1579,27),(4799,1579,21),(4800,1580,1),(4801,1580,7),(4802,1580,6),(4803,1581,9),(4804,1582,1),(4805,1582,11),(4806,1583,1),(4807,1583,19),(4808,1584,1),(4809,1584,27),(4810,1584,21),(4811,1584,64),(4812,1585,2),(4813,1585,7),(4814,1585,6),(4815,1586,20),(4816,1586,12),(4817,1586,24),(4818,1586,41),(4819,1586,18),(4820,1586,58),(4821,1587,9),(4822,1588,1),(4823,1588,5),(4824,1588,16),(4825,1589,1),(4826,1589,7),(4827,1589,6),(4828,1589,16),(4829,1590,1),(4830,1590,3),(4831,1590,16),(4832,1591,1),(4833,1591,21),(4834,1591,46),(4835,1591,11),(4836,1592,2),(4837,1593,3),(4838,1593,2),(4839,1593,25),(4840,1594,1),(4841,1594,4),(4842,1594,11),(4843,1595,1),(4844,1595,4),(4845,1595,14),(4846,1595,11),(4847,1595,34),(4848,1596,9),(4849,1597,2),(4850,1597,20),(4851,1597,12),(4852,1597,18),(4853,1598,1),(4854,1598,2),(4855,1598,20),(4856,1599,1),(4857,1599,19),(4858,1600,3),(4859,1600,12),(4860,1600,8),(4861,1600,24),(4862,1601,1),(4863,1601,25),(4864,1601,14),(4865,1601,26),(4866,1602,12),(4867,1602,13),(4868,1602,18),(4869,1603,24),(4870,1603,19),(4871,1603,22),(4872,1604,1),(4873,1604,3),(4874,1604,2),(4875,1604,6),(4876,1605,1),(4877,1605,7),(4878,1605,11),(4879,1606,1),(4880,1606,7),(4881,1606,17),(4882,1606,29),(4883,1607,9),(4884,1608,1),(4885,1608,10),(4886,1608,6),(4887,1609,12),(4888,1609,13),(4889,1609,18),(4890,1610,1),(4891,1610,5),(4892,1610,40),(4893,1610,23),(4894,1610,6),(4895,1611,4),(4896,1611,14),(4897,1611,44),(4898,1612,3),(4899,1612,12),(4900,1612,8),(4901,1612,18),(4902,1612,22),(4903,1613,9),(4904,1614,2),(4905,1614,20),(4906,1615,21),(4907,1616,15),(4908,1616,2),(4909,1617,4),(4910,1617,14),(4911,1617,12),(4912,1617,26),(4913,1617,34),(4914,1618,1),(4915,1618,2),(4916,1618,10),(4917,1618,50),(4918,1619,1),(4919,1619,6),(4920,1620,1),(4921,1620,26),(4922,1621,5),(4923,1621,4),(4924,1621,36),(4925,1622,5),(4926,1622,24),(4927,1622,32),(4928,1623,9),(4929,1624,3),(4930,1624,2),(4931,1625,2),(4932,1625,8),(4933,1625,13),(4934,1625,26),(4935,1626,1),(4936,1626,4),(4937,1626,6),(4938,1627,1),(4939,1627,5),(4940,1627,27),(4941,1627,30),(4942,1628,1),(4943,1628,5),(4944,1628,20),(4945,1628,12),(4946,1628,24),(4947,1628,18),(4948,1629,1),(4949,1629,2),(4950,1630,1),(4951,1630,3),(4952,1630,6),(4953,1631,1),(4954,1631,10),(4955,1631,8),(4956,1631,13),(4957,1631,27),(4958,1631,17),(4959,1631,11),(4960,1632,1),(4961,1632,27),(4962,1632,21),(4963,1632,46),(4964,1632,6),(4965,1632,11),(4966,1633,9),(4967,1634,28),(4968,1634,5),(4969,1634,15),(4970,1635,9),(4971,1636,1),(4972,1636,3),(4973,1636,6),(4974,1637,1),(4975,1637,6),(4976,1638,3),(4977,1638,2),(4978,1638,4),(4979,1638,26),(4980,1639,1),(4981,1639,2),(4982,1639,4),(4983,1640,1),(4984,1640,3),(4985,1641,5),(4986,1641,4),(4987,1641,36),(4988,1642,1),(4989,1642,7),(4990,1642,17),(4991,1643,1),(4992,1643,5),(4993,1643,4),(4994,1643,36),(4995,1644,12),(4996,1644,8),(4997,1644,18),(4998,1645,9),(4999,1646,1),(5000,1646,19),(5001,1647,3),(5002,1647,2),(5003,1647,7),(5004,1647,6),(5005,1648,1),(5006,1648,5),(5007,1648,10),(5008,1648,7),(5009,1648,6),(5010,1648,17),(5011,1649,1),(5012,1649,10),(5013,1649,35),(5014,1649,39),(5015,1649,32),(5016,1649,55),(5017,1649,29),(5018,1650,3),(5019,1650,15),(5020,1650,12),(5021,1650,18),(5022,1651,9),(5023,1652,1),(5024,1652,23),(5025,1653,2),(5026,1653,4),(5027,1653,20),(5028,1654,1),(5029,1654,4),(5030,1654,13),(5031,1655,1),(5032,1655,4),(5033,1655,25),(5034,1655,14),(5035,1655,34),(5036,1656,1),(5037,1656,3),(5038,1656,24),(5039,1656,51),(5040,1657,3),(5041,1657,2),(5042,1657,6),(5043,1657,22),(5044,1658,1),(5045,1658,3),(5046,1658,10),(5047,1658,23),(5048,1658,16),(5049,1659,4),(5050,1659,14),(5051,1659,44),(5052,1659,34),(5053,1660,3),(5054,1660,12),(5055,1660,8),(5056,1660,13),(5057,1660,18),(5058,1661,9),(5059,1662,1),(5060,1662,2),(5061,1663,2),(5062,1663,7),(5063,1664,1),(5064,1664,16),(5065,1665,1),(5066,1665,7),(5067,1665,6),(5068,1666,12),(5069,1666,8),(5070,1666,18),(5071,1667,9),(5072,1668,2),(5073,1668,4),(5074,1668,45),(5075,1669,28),(5076,1670,1),(5077,1670,28),(5078,1670,24),(5079,1670,37),(5080,1670,51),(5081,1671,1),(5082,1671,10),(5083,1671,4),(5084,1671,7),(5085,1672,1),(5086,1672,11),(5087,1673,1),(5088,1673,20),(5089,1673,7),(5090,1673,31),(5091,1674,1),(5092,1674,3),(5093,1674,16),(5094,1675,1),(5095,1675,7),(5096,1675,17),(5097,1675,29),(5098,1676,3),(5099,1676,12),(5100,1676,8),(5101,1676,18),(5102,1677,9),(5103,1678,2),(5104,1679,1),(5105,1679,3),(5106,1679,15),(5107,1679,6),(5108,1680,5),(5109,1680,14),(5110,1680,19),(5111,1681,1),(5112,1681,4),(5113,1681,14),(5114,1681,34),(5115,1682,2),(5116,1682,4),(5117,1683,9),(5118,1684,1),(5119,1684,3),(5120,1684,2),(5121,1684,14),(5122,1684,22),(5123,1685,1),(5124,1685,5),(5125,1685,16),(5126,1686,1),(5127,1686,5),(5128,1686,7),(5129,1686,6),(5130,1686,17),(5131,1686,49),(5132,1687,1),(5133,1687,4),(5134,1687,32),(5135,1687,37),(5136,1687,17),(5137,1687,16),(5138,1687,52),(5139,1688,5),(5140,1688,19),(5141,1689,2),(5142,1689,7),(5143,1690,1),(5144,1690,5),(5145,1690,4),(5146,1690,49),(5147,1691,1),(5148,1691,4),(5149,1691,6),(5150,1692,4),(5151,1693,9),(5152,1694,2),(5153,1695,1),(5154,1695,3),(5155,1695,23),(5156,1696,1),(5157,1696,4),(5158,1696,37),(5159,1696,17),(5160,1696,52),(5161,1697,1),(5162,1697,15),(5163,1697,27),(5164,1697,21),(5165,1697,6),(5166,1698,2),(5167,1698,33),(5168,1698,48),(5169,1698,62),(5170,1698,43),(5171,1699,9),(5172,1700,1),(5173,1700,20),(5174,1700,37),(5175,1700,19),(5176,1701,1),(5177,1701,19),(5178,1702,2),(5179,1702,7),(5180,1703,1),(5181,1703,7),(5182,1703,23),(5183,1703,16),(5184,1704,2),(5185,1704,22),(5186,1705,1),(5187,1705,7),(5188,1705,17),(5189,1706,1),(5190,1706,11),(5191,1706,19),(5192,1707,1),(5193,1707,14),(5194,1707,33),(5195,1708,1),(5196,1708,7),(5197,1709,9),(5198,1710,1),(5199,1710,7),(5200,1710,6),(5201,1711,1),(5202,1711,3),(5203,1712,1),(5204,1712,15),(5205,1712,10),(5206,1712,16),(5207,1713,1),(5208,1713,3),(5209,1713,10),(5210,1713,7),(5211,1714,1),(5212,1714,4),(5213,1715,9),(5214,1716,5),(5215,1717,2),(5216,1717,20),(5217,1717,7),(5218,1718,1),(5219,1718,25),(5220,1719,12),(5221,1719,21),(5222,1720,1),(5223,1720,14),(5224,1721,28),(5225,1721,15),(5226,1722,1),(5227,1722,8),(5228,1722,27),(5229,1723,1),(5230,1723,4),(5231,1723,25),(5232,1723,14),(5233,1723,34),(5234,1724,27),(5235,1724,21),(5236,1724,64),(5237,1725,1),(5238,1726,1),(5239,1726,3),(5240,1726,22),(5241,1727,1),(5242,1727,7),(5243,1727,6),(5244,1727,11),(5245,1728,1),(5246,1728,5),(5247,1728,4),(5248,1728,21),(5249,1728,46),(5250,1728,44),(5251,1728,11),(5252,1728,49),(5253,1729,9),(5254,1730,1),(5255,1730,13),(5256,1730,11),(5257,1731,9),(5258,1732,1),(5259,1732,16),(5260,1733,1),(5261,1733,3),(5262,1733,7),(5263,1734,1),(5264,1734,14),(5265,1735,1),(5266,1735,5),(5267,1735,4),(5268,1735,36),(5269,1735,30),(5270,1736,2),(5271,1736,7),(5272,1737,3),(5273,1737,2),(5274,1737,22),(5275,1737,16),(5276,1738,1),(5277,1738,35),(5278,1738,14),(5279,1738,6),(5280,1738,17),(5281,1738,11),(5282,1738,16),(5283,1738,61),(5284,1739,5),(5285,1739,10),(5286,1739,7),(5287,1740,3),(5288,1740,12),(5289,1740,8),(5290,1740,13),(5291,1740,18),(5292,1741,9),(5293,1742,3),(5294,1742,5),(5295,1742,22),(5296,1743,1),(5297,1743,3),(5298,1743,8),(5299,1744,1),(5300,1744,16),(5301,1745,2),(5302,1745,4),(5303,1746,1),(5304,1746,4),(5305,1747,9),(5306,1748,1),(5307,1748,3),(5308,1748,22),(5309,1749,1),(5310,1749,4),(5311,1750,15),(5312,1750,2),(5313,1751,1),(5314,1751,10),(5315,1751,4),(5316,1751,6),(5317,1752,1),(5318,1753,5),(5319,1753,7),(5320,1753,17),(5321,1754,15),(5322,1754,2),(5323,1754,7),(5324,1755,1),(5325,1755,15),(5326,1755,4),(5327,1755,14),(5328,1755,6),(5329,1755,34),(5330,1756,1),(5331,1756,3),(5332,1756,20),(5333,1756,24),(5334,1756,39),(5335,1756,29),(5336,1757,9),(5337,1758,2),(5338,1759,5),(5339,1759,2),(5340,1760,1),(5341,1760,10),(5342,1761,21),(5343,1762,1),(5344,1762,20),(5345,1762,31),(5346,1763,3),(5347,1763,2),(5348,1763,35),(5349,1763,14),(5350,1763,23),(5351,1764,1),(5352,1764,15),(5353,1764,7),(5354,1764,45),(5355,1765,1),(5356,1765,13),(5357,1765,11),(5358,1766,1),(5359,1766,5),(5360,1766,12),(5361,1766,8),(5362,1766,30),(5363,1767,9),(5364,1768,15),(5365,1768,2),(5366,1769,1),(5367,1769,2),(5368,1769,16),(5369,1770,1),(5370,1770,4),(5371,1771,2),(5372,1771,4),(5373,1772,1),(5374,1772,3),(5375,1772,2),(5376,1772,6),(5377,1773,1),(5378,1773,2),(5379,1774,1),(5380,1774,4),(5381,1774,25),(5382,1775,1),(5383,1775,3),(5384,1775,7),(5385,1775,22),(5386,1776,1),(5387,1776,5),(5388,1776,20),(5389,1776,17),(5390,1776,31),(5391,1777,9),(5392,1778,8),(5393,1778,13),(5394,1778,21),(5395,1778,50),(5396,1779,1),(5397,1780,5),(5398,1781,3),(5399,1781,2),(5400,1781,22),(5401,1782,1),(5402,1782,15),(5403,1782,10),(5404,1782,21),(5405,1782,6),(5406,1783,9),(5407,1784,2),(5408,1785,1),(5409,1785,7),(5410,1786,4),(5411,1786,21),(5412,1786,46),(5413,1786,17),(5414,1786,47),(5415,1787,1),(5416,1787,4),(5417,1787,14),(5418,1788,1),(5419,1788,3),(5420,1788,7),(5421,1788,16),(5422,1789,9),(5423,1790,3),(5424,1790,2),(5425,1790,22),(5426,1791,21),(5427,1792,1),(5428,1792,7),(5429,1792,17),(5430,1793,1),(5431,1793,15),(5432,1793,10),(5433,1793,20),(5434,1793,31),(5435,1794,3),(5436,1794,2),(5437,1794,7),(5438,1795,9),(5439,1796,3),(5440,1796,2),(5441,1797,3),(5442,1797,28),(5443,1797,24),(5444,1797,56),(5445,1798,1),(5446,1798,7),(5447,1798,6),(5448,1799,1),(5449,1799,5),(5450,1799,4),(5451,1799,25),(5452,1799,14),(5453,1799,30),(5454,1799,34),(5455,1800,1),(5456,1801,1),(5457,1801,17),(5458,1801,19),(5459,1802,10),(5460,1802,7),(5461,1803,1),(5462,1803,14),(5463,1803,33),(5464,1804,3),(5465,1804,2),(5466,1804,24),(5467,1804,33),(5468,1805,3),(5469,1805,2),(5470,1806,1),(5471,1806,5),(5472,1806,19),(5473,1807,1),(5474,1807,3),(5475,1807,2),(5476,1808,5),(5477,1808,38),(5478,1808,30),(5479,1809,9),(5480,1810,8),(5481,1810,13),(5482,1810,21),(5483,1810,17),(5484,1810,50),(5485,1811,9),(5486,1812,5),(5487,1812,2),(5488,1813,1),(5489,1813,15),(5490,1813,2),(5491,1814,1),(5492,1814,3),(5493,1814,5),(5494,1814,22),(5495,1815,1),(5496,1815,4),(5497,1815,14),(5498,1815,44),(5499,1815,34),(5500,1816,1),(5501,1816,2),(5502,1817,1),(5503,1817,3),(5504,1818,1),(5505,1818,10),(5506,1818,6),(5507,1818,29),(5508,1819,1),(5509,1819,5),(5510,1819,22),(5511,1819,30),(5512,1820,1),(5513,1820,8),(5514,1820,21),(5515,1820,11),(5516,1821,9),(5517,1822,1),(5518,1822,5),(5519,1823,1),(5520,1823,5),(5521,1823,38),(5522,1823,37),(5523,1823,19),(5524,1824,1),(5525,1824,4),(5526,1824,7),(5527,1825,24),(5528,1825,37),(5529,1825,17),(5530,1825,51),(5531,1825,29),(5532,1826,1),(5533,1826,15),(5534,1827,1),(5535,1827,7),(5536,1828,1),(5537,1828,5),(5538,1828,40),(5539,1829,1),(5540,1829,14),(5541,1829,16),(5542,1830,5),(5543,1830,2),(5544,1830,36),(5545,1831,9),(5546,1832,3),(5547,1832,2),(5548,1833,1),(5549,1833,7),(5550,1833,6),(5551,1833,57),(5552,1834,1),(5553,1834,6),(5554,1834,17),(5555,1835,1),(5556,1835,5),(5557,1835,14),(5558,1836,3),(5559,1836,28),(5560,1837,5),(5561,1838,1),(5562,1838,10),(5563,1838,7),(5564,1838,23),(5565,1838,6),(5566,1838,16),(5567,1839,2),(5568,1839,23),(5569,1840,1),(5570,1840,5),(5571,1840,6),(5572,1841,9),(5573,1842,15),(5574,1842,2),(5575,1843,9),(5576,1844,2),(5577,1845,24),(5578,1845,17),(5579,1846,1),(5580,1846,7),(5581,1846,6),(5582,1847,1),(5583,1847,10),(5584,1847,6),(5585,1847,29),(5586,1848,1),(5587,1849,2),(5588,1849,25),(5589,1850,15),(5590,1850,2),(5591,1850,7),(5592,1851,1),(5593,1851,10),(5594,1851,65),(5595,1851,6),(5596,1851,17),(5597,1852,1),(5598,1852,3),(5599,1852,23),(5600,1853,9),(5601,1854,1),(5602,1854,22),(5603,1854,16),(5604,1855,1),(5605,1855,15),(5606,1855,10),(5607,1856,1),(5608,1856,20),(5609,1856,31),(5610,1856,16),(5611,1857,3),(5612,1857,4),(5613,1857,21),(5614,1857,46),(5615,1857,44),(5616,1857,22),(5617,1858,8),(5618,1858,33),(5619,1859,2),(5620,1859,6),(5621,1860,5),(5622,1860,19),(5623,1861,1),(5624,1861,15),(5625,1861,11),(5626,1862,1),(5627,1862,5),(5628,1862,10),(5629,1862,16),(5630,1863,1),(5631,1863,5),(5632,1863,25),(5633,1863,14),(5634,1863,36),(5635,1863,26),(5636,1864,2),(5637,1864,7),(5638,1865,1),(5639,1865,3),(5640,1865,24),(5641,1866,5),(5642,1866,4),(5643,1866,36),(5644,1867,9),(5645,1868,1),(5646,1868,15),(5647,1869,2),(5648,1870,1),(5649,1870,10),(5650,1871,2),(5651,1871,4),(5652,1871,23),(5653,1871,16),(5654,1872,1),(5655,1872,5),(5656,1872,4),(5657,1872,16),(5658,1872,49),(5659,1873,9),(5660,1874,1),(5661,1874,7),(5662,1874,6),(5663,1875,9),(5664,1876,3),(5665,1876,2),(5666,1876,23),(5667,1876,22),(5668,1877,1),(5669,1877,15),(5670,1877,7),(5671,1877,6),(5672,1878,1),(5673,1878,5),(5674,1878,6),(5675,1878,17),(5676,1878,11),(5677,1878,16),(5678,1879,1),(5679,1879,4),(5680,1879,14),(5681,1879,34),(5682,1880,2),(5683,1881,2),(5684,1881,7),(5685,1882,1),(5686,1882,17),(5687,1883,1),(5688,1883,4),(5689,1884,5),(5690,1884,4),(5691,1885,1),(5692,1885,15),(5693,1885,10),(5694,1885,6),(5695,1886,1),(5696,1886,11),(5697,1887,1),(5698,1887,6),(5699,1888,2),(5700,1888,4),(5701,1888,7),(5702,1888,23),(5703,1889,1),(5704,1889,10),(5705,1889,6),(5706,1889,16),(5707,1890,9),(5708,1891,1),(5709,1891,10),(5710,1892,9),(5711,1893,1),(5712,1893,3),(5713,1893,16),(5714,1894,1),(5715,1894,10),(5716,1894,19),(5717,1894,16),(5718,1895,1),(5719,1895,11),(5720,1895,16),(5721,1896,5),(5722,1896,2),(5723,1896,4),(5724,1896,20),(5725,1897,3),(5726,1897,2),(5727,1897,22),(5728,1898,1),(5729,1898,15),(5730,1898,2),(5731,1898,10),(5732,1899,1),(5733,1899,7),(5734,1900,4),(5735,1900,44),(5736,1901,1),(5737,1901,10),(5738,1901,11),(5739,1902,1),(5740,1902,12),(5741,1902,41),(5742,1902,18),(5743,1902,29),(5744,1903,5),(5745,1903,2),(5746,1903,7),(5747,1904,5),(5748,1904,2),(5749,1905,1),(5750,1905,8),(5751,1905,13),(5752,1905,27),(5753,1905,11),(5754,1906,1),(5755,1906,3),(5756,1907,9),(5757,1908,1),(5758,1908,5),(5759,1908,4),(5760,1908,14),(5761,1908,53),(5762,1908,49),(5763,1909,1),(5764,1910,2),(5765,1910,20),(5766,1910,19),(5767,1911,1),(5768,1911,4),(5769,1912,1),(5770,1912,3),(5771,1912,24),(5772,1912,17),(5773,1912,29),(5774,1913,1),(5775,1913,6),(5776,1914,1),(5777,1914,11),(5778,1914,19),(5779,1915,3),(5780,1915,2),(5781,1915,14),(5782,1915,16),(5783,1916,5),(5784,1916,4),(5785,1916,12),(5786,1916,21),(5787,1916,46),(5788,1916,36),(5789,1917,9),(5790,1918,1),(5791,1918,10),(5792,1918,23),(5793,1919,9),(5794,1920,1),(5795,1920,19),(5796,1921,1),(5797,1921,7),(5798,1921,6),(5799,1922,5),(5800,1922,38),(5801,1923,1),(5802,1923,10),(5803,1923,48),(5804,1923,62),(5805,1923,43),(5806,1924,1),(5807,1924,5),(5808,1924,40),(5809,1925,5),(5810,1925,26),(5811,1926,1),(5812,1926,13),(5813,1926,11),(5814,1927,5),(5815,1927,2),(5816,1927,7),(5817,1927,49),(5818,1928,1),(5819,1928,4),(5820,1928,21),(5821,1929,1),(5822,1929,19),(5823,1930,3),(5824,1930,2),(5825,1930,14),(5826,1930,16),(5827,1931,4),(5828,1932,3),(5829,1932,10),(5830,1932,12),(5831,1932,8),(5832,1932,18),(5833,1933,2),(5834,1934,9),(5835,1935,3),(5836,1935,2),(5837,1936,1),(5838,1936,7),(5839,1937,1),(5840,1937,4),(5841,1937,11),(5842,1938,1),(5843,1938,3),(5844,1938,14),(5845,1938,8),(5846,1938,33),(5847,1939,9),(5848,1940,1),(5849,1940,3),(5850,1940,22),(5851,1941,3),(5852,1941,2),(5853,1941,22),(5854,1942,1),(5855,1942,3),(5856,1942,17),(5857,1943,1),(5858,1943,3),(5859,1943,6),(5860,1943,16),(5861,1944,1),(5862,1944,20),(5863,1944,31),(5864,1945,2),(5865,1945,19),(5866,1946,1),(5867,1946,2),(5868,1946,7),(5869,1947,1),(5870,1947,4),(5871,1947,25),(5872,1947,14),(5873,1947,34),(5874,1948,1),(5875,1948,3),(5876,1948,2),(5877,1948,33),(5878,1948,43),(5879,1949,9),(5880,1950,1),(5881,1950,20),(5882,1950,31),(5883,1951,9),(5884,1952,5),(5885,1952,26),(5886,1952,30),(5887,1953,1),(5888,1953,7),(5889,1954,5),(5890,1954,10),(5891,1955,1),(5892,1955,4),(5893,1956,1),(5894,1956,5),(5895,1956,10),(5896,1956,40),(5897,1956,26),(5898,1957,2),(5899,1958,1),(5900,1958,11),(5901,1958,26),(5902,1959,1),(5903,1959,4),(5904,1960,2),(5905,1960,48),(5906,1960,43),(5907,1961,1),(5908,1961,15),(5909,1961,2),(5910,1962,1),(5911,1962,7),(5912,1962,17),(5913,1963,15),(5914,1963,2),(5915,1963,20),(5916,1963,7),(5917,1964,1),(5918,1964,10),(5919,1964,39),(5920,1965,9),(5921,1966,1),(5922,1966,10),(5923,1967,1),(5924,1967,2),(5925,1968,1),(5926,1968,7),(5927,1968,6),(5928,1969,5),(5929,1969,7),(5930,1969,38),(5931,1970,1),(5932,1970,10),(5933,1970,8),(5934,1970,13),(5935,1970,27),(5936,1970,11),(5937,1971,8),(5938,1971,13),(5939,1971,27),(5940,1971,21),(5941,1972,9),(5942,1973,12),(5943,1973,8),(5944,1973,18),(5945,1974,2),(5946,1974,7),(5947,1975,1),(5948,1975,7),(5949,1975,11),(5950,1976,4),(5951,1976,21),(5952,1976,46),(5953,1976,47),(5954,1977,2),(5955,1977,4),(5956,1977,62),(5957,1978,9),(5958,1979,1),(5959,1979,5),(5960,1979,30),(5961,1980,1),(5962,1980,3),(5963,1980,2),(5964,1980,25),(5965,1981,1),(5966,1981,4),(5967,1981,11),(5968,1982,1),(5969,1982,35),(5970,1983,1),(5971,1983,3),(5972,1983,16),(5973,1984,1),(5974,1984,23),(5975,1984,6),(5976,1985,1),(5977,1985,2),(5978,1985,35),(5979,1985,6),(5980,1985,17),(5981,1985,61),(5982,1986,1),(5983,1986,4),(5984,1986,25),(5985,1986,14),(5986,1986,34),(5987,1987,2),(5988,1987,4),(5989,1988,9),(5990,1989,1),(5991,1989,7),(5992,1990,9),(5993,1991,1),(5994,1991,16),(5995,1992,1),(5996,1992,8),(5997,1992,13),(5998,1992,11),(5999,1993,1),(6000,1993,3),(6001,1993,12),(6002,1993,8),(6003,1993,13),(6004,1993,24),(6005,1994,1),(6006,1994,5),(6007,1994,4),(6008,1994,14),(6009,1994,34),(6010,1995,1),(6011,1995,3),(6012,1995,26),(6013,1996,1),(6014,1996,20),(6015,1996,7),(6016,1996,6),(6017,1996,31),(6018,1997,1),(6019,1997,4),(6020,1998,1),(6021,1998,5),(6022,1998,27),(6023,1998,6),(6024,1998,30),(6025,1999,5),(6026,1999,26),(6027,2000,15),(6028,2000,2),(6029,2000,20),(6030,2001,1),(6031,2001,3),(6032,2001,5),(6033,2001,22),(6034,2001,30),(6035,2002,2),(6036,2002,4),(6037,2002,25),(6038,2002,14),(6039,2002,34),(6040,2003,4),(6041,2003,12),(6042,2003,8),(6043,2003,27),(6044,2004,9),(6045,2005,5),(6046,2005,4),(6047,2005,12),(6048,2005,18),(6049,2005,49),(6050,2006,1),(6051,2006,3),(6052,2006,22),(6053,2007,1),(6054,2007,3),(6055,2007,7),(6056,2007,6),(6057,2008,1),(6058,2008,3),(6059,2008,10),(6060,2008,4),(6061,2008,6),(6062,2009,1),(6063,2009,3),(6064,2009,10),(6065,2009,23),(6066,2010,9),(6067,2011,1),(6068,2011,2),(6069,2011,19),(6070,2012,1),(6071,2013,1),(6072,2013,3),(6073,2013,24),(6074,2013,22),(6075,2014,2),(6076,2014,25),(6077,2014,7),(6078,2014,22),(6079,2014,26),(6080,2015,1),(6081,2015,7),(6082,2015,6),(6083,2015,17),(6084,2016,1),(6085,2017,1),(6086,2017,11),(6087,2017,16),(6088,2018,1),(6089,2018,11),(6090,2018,26),(6091,2019,1),(6092,2019,5),(6093,2019,2),(6094,2019,4),(6095,2019,20),(6096,2019,44),(6097,2020,9),(6098,2021,1),(6099,2021,16),(6100,2021,29),(6101,2022,1),(6102,2022,11),(6103,2022,19),(6104,2023,1),(6105,2023,3),(6106,2023,2),(6107,2023,22),(6108,2024,2),(6109,2024,10),(6110,2024,23),(6111,2024,16),(6112,2025,1),(6113,2025,3),(6114,2025,22),(6115,2025,26),(6116,2025,16),(6117,2026,9),(6118,2027,2),(6119,2027,7),(6120,2028,1),(6121,2028,5),(6122,2028,19),(6123,2029,1),(6124,2029,5),(6125,2029,7),(6126,2029,22),(6127,2029,49),(6128,2030,2),(6129,2030,20),(6130,2030,7),(6131,2030,31),(6132,2031,1),(6133,2031,10),(6134,2031,35),(6135,2031,39),(6136,2031,32),(6137,2031,55),(6138,2031,29),(6139,2032,1),(6140,2032,3),(6141,2032,14),(6142,2033,1),(6143,2033,5),(6144,2033,6),(6145,2033,11),(6146,2034,3),(6147,2034,24),(6148,2034,17),(6149,2034,51),(6150,2034,29),(6151,2035,1),(6152,2035,15),(6153,2035,10),(6154,2035,4),(6155,2035,14),(6156,2035,29),(6157,2035,34),(6158,2036,1),(6159,2036,4),(6160,2037,1),(6161,2037,7),(6162,2037,6),(6163,2037,57),(6164,2038,5),(6165,2038,2),(6166,2038,7),(6167,2038,49),(6168,2039,1),(6169,2039,13),(6170,2039,21),(6171,2040,1),(6172,2040,10),(6173,2041,9),(6174,2042,2),(6175,2043,1),(6176,2043,3),(6177,2043,24),(6178,2043,19),(6179,2044,1),(6180,2044,25),(6181,2044,14),(6182,2044,26),(6183,2045,13),(6184,2045,21),(6185,2045,47),(6186,2046,28),(6187,2046,15),(6188,2046,6),(6189,2047,2),(6190,2048,5),(6191,2048,25),(6192,2048,26),(6193,2049,1),(6194,2049,12),(6195,2049,8),(6196,2049,18),(6197,2050,1),(6198,2050,4),(6199,2050,21),(6200,2050,46),(6201,2051,9),(6202,2052,1),(6203,2052,4),(6204,2053,1),(6205,2053,3),(6206,2053,2),(6207,2053,22),(6208,2054,1),(6209,2054,10),(6210,2054,4),(6211,2054,6),(6212,2054,17),(6213,2055,1),(6214,2055,2),(6215,2055,10),(6216,2055,16),(6217,2056,1),(6218,2056,2),(6219,2056,25),(6220,2056,19),(6221,2057,1),(6222,2058,28),(6223,2059,1),(6224,2059,13),(6225,2060,2),(6226,2060,4),(6227,2061,1),(6228,2061,11),(6229,2061,19),(6230,2062,3),(6231,2062,2),(6232,2063,5),(6233,2063,2),(6234,2063,4),(6235,2063,36),(6236,2064,1),(6237,2064,10),(6238,2064,7),(6239,2065,1),(6240,2065,25),(6241,2065,21),(6242,2066,9),(6243,2067,2),(6244,2067,22),(6245,2067,16),(6246,2068,3),(6247,2068,2),(6248,2068,22),(6249,2069,24),(6250,2069,19),(6251,2070,1),(6252,2070,10),(6253,2070,6),(6254,2071,1),(6255,2071,10),(6256,2071,7),(6257,2071,37),(6258,2071,6),(6259,2071,52),(6260,2072,9),(6261,2073,1),(6262,2073,37),(6263,2073,19),(6264,2074,28),(6265,2075,2),(6266,2075,19),(6267,2076,27),(6268,2076,21),(6269,2077,21),(6270,2078,1),(6271,2078,7),(6272,2079,1),(6273,2079,19),(6274,2080,1),(6275,2080,3),(6276,2080,10),(6277,2080,24),(6278,2080,32),(6279,2081,5),(6280,2081,26),(6281,2082,9),(6282,2083,3),(6283,2083,5),(6284,2083,2),(6285,2083,22),(6286,2083,16),(6287,2084,9),(6288,2085,1),(6289,2085,3),(6290,2085,2),(6291,2085,22),(6292,2086,2),(6293,2086,4),(6294,2086,7),(6295,2087,1),(6296,2087,7),(6297,2088,1),(6298,2088,4),(6299,2088,11),(6300,2089,1),(6301,2089,10),(6302,2089,6),(6303,2090,1),(6304,2090,23),(6305,2091,1),(6306,2091,7),(6307,2092,8),(6308,2092,13),(6309,2092,27),(6310,2092,21),(6311,2092,6),(6312,2093,21),(6313,2093,17),(6314,2093,47),(6315,2094,1),(6316,2094,3),(6317,2094,6),(6318,2094,26),(6319,2095,28),(6320,2095,15),(6321,2096,2),(6322,2096,12),(6323,2096,8),(6324,2096,18),(6325,2097,8),(6326,2097,21),(6327,2097,69),(6328,2098,1),(6329,2098,7),(6330,2098,6),(6331,2099,1),(6332,2099,3),(6333,2099,6),(6334,2099,17),(6335,2100,1),(6336,2100,4),(6337,2100,16),(6338,2101,1),(6339,2101,5),(6340,2101,8),(6341,2101,13),(6342,2101,21),(6343,2101,40),(6344,2102,24),(6345,2102,17),(6346,2102,51),(6347,2102,29),(6348,2103,3),(6349,2103,2),(6350,2104,1),(6351,2104,20),(6352,2104,31),(6353,2105,1),(6354,2105,15),(6355,2105,19),(6356,2106,1),(6357,2106,10),(6358,2106,23),(6359,2106,16),(6360,2107,1),(6361,2107,3),(6362,2107,23),(6363,2108,1),(6364,2108,15),(6365,2108,2),(6366,2109,1),(6367,2109,15),(6368,2109,2),(6369,2109,19),(6370,2110,1),(6371,2110,5),(6372,2110,4),(6373,2111,1),(6374,2111,10),(6375,2112,9),(6376,2113,1),(6377,2114,1),(6378,2114,2),(6379,2115,1),(6380,2115,3),(6381,2115,2),(6382,2115,21),(6383,2115,46),(6384,2116,2),(6385,2116,20),(6386,2116,7),(6387,2117,5),(6388,2118,9),(6389,2119,5),(6390,2120,2),(6391,2120,19),(6392,2121,1),(6393,2121,3),(6394,2121,16),(6395,2122,1),(6396,2122,3),(6397,2122,15),(6398,2122,6),(6399,2122,26),(6400,2123,1),(6401,2123,21),(6402,2123,11),(6403,2124,2),(6404,2125,1),(6405,2125,5),(6406,2125,2),(6407,2125,11),(6408,2126,1),(6409,2126,7),(6410,2126,6),(6411,2127,8),(6412,2127,21),(6413,2127,46),(6414,2128,1),(6415,2128,5),(6416,2128,14),(6417,2128,11),(6418,2129,2),(6419,2130,28),(6420,2130,15),(6421,2130,20),(6422,2131,1),(6423,2131,3),(6424,2131,2),(6425,2131,7),(6426,2131,22),(6427,2132,1),(6428,2132,7),(6429,2132,11),(6430,2132,16),(6431,2133,1),(6432,2133,3),(6433,2133,11),(6434,2134,1),(6435,2134,23),(6436,2135,1),(6437,2135,3),(6438,2135,2),(6439,2135,14),(6440,2135,6),(6441,2136,1),(6442,2136,7),(6443,2136,6),(6444,2137,1),(6445,2137,10),(6446,2138,2),(6447,2138,19),(6448,2139,5),(6449,2139,7),(6450,2140,1),(6451,2140,4),(6452,2141,1),(6453,2141,10),(6454,2141,7),(6455,2141,6),(6456,2142,9),(6457,2143,1),(6458,2143,4),(6459,2144,1),(6460,2144,7),(6461,2144,6),(6462,2145,1),(6463,2145,16),(6464,2146,1),(6465,2146,13),(6466,2146,6),(6467,2146,17),(6468,2146,11),(6469,2147,5),(6470,2147,2),(6471,2147,4),(6472,2148,1),(6473,2148,6),(6474,2148,22),(6475,2149,1),(6476,2149,15),(6477,2149,19),(6478,2150,1),(6479,2150,3),(6480,2150,22),(6481,2151,1),(6482,2151,25),(6483,2151,14),(6484,2151,26),(6485,2152,1),(6486,2152,3),(6487,2152,5),(6488,2152,4),(6489,2152,25),(6490,2152,14),(6491,2152,40),(6492,2152,34),(6493,2153,9),(6494,2154,1),(6495,2154,3),(6496,2154,6),(6497,2154,19),(6498,2155,1),(6499,2156,2),(6500,2156,23),(6501,2156,48),(6502,2156,43),(6503,2157,2),(6504,2157,14),(6505,2157,27),(6506,2158,1),(6507,2158,32),(6508,2158,29),(6509,2159,9),(6510,2160,5),(6511,2160,7),(6512,2160,6),(6513,2161,1),(6514,2161,15),(6515,2161,19),(6516,2162,5),(6517,2162,26),(6518,2163,1),(6519,2163,4),(6520,2163,17),(6521,2164,1),(6522,2164,6),(6523,2165,5),(6524,2165,6),(6525,2166,1),(6526,2166,3),(6527,2166,2),(6528,2166,24),(6529,2167,2),(6530,2167,4),(6531,2168,3),(6532,2168,2),(6533,2168,48),(6534,2168,22),(6535,2168,43),(6536,2169,5),(6537,2169,19),(6538,2170,1),(6539,2170,3),(6540,2170,7),(6541,2170,22),(6542,2171,1),(6543,2171,7),(6544,2171,6),(6545,2171,26),(6546,2171,16),(6547,2172,1),(6548,2172,4),(6549,2172,14),(6550,2172,34),(6551,2173,9),(6552,2174,1),(6553,2174,14),(6554,2174,13),(6555,2174,11),(6556,2175,9),(6557,2176,1),(6558,2177,5),(6559,2177,19),(6560,2178,5),(6561,2178,25),(6562,2178,7),(6563,2179,1),(6564,2179,10),(6565,2179,35),(6566,2179,39),(6567,2179,32),(6568,2179,55),(6569,2179,29),(6570,2180,5),(6571,2180,19),(6572,2181,28),(6573,2181,19),(6574,2182,3),(6575,2182,2),(6576,2182,7),(6577,2182,17),(6578,2182,22),(6579,2183,1),(6580,2183,5),(6581,2183,30),(6582,2184,1),(6583,2184,4),(6584,2184,14),(6585,2184,34),(6586,2185,1),(6587,2185,2),(6588,2185,45),(6589,2186,3),(6590,2186,2),(6591,2186,22),(6592,2187,1),(6593,2187,10),(6594,2188,1),(6595,2188,4),(6596,2189,5),(6597,2189,4),(6598,2190,1),(6599,2190,3),(6600,2190,22),(6601,2191,1),(6602,2191,6),(6603,2192,8),(6604,2192,13),(6605,2192,21),(6606,2192,46),(6607,2193,15),(6608,2193,2),(6609,2193,7),(6610,2193,39),(6611,2194,2),(6612,2195,1),(6613,2195,5),(6614,2195,7),(6615,2195,6),(6616,2196,1),(6617,2196,3),(6618,2196,12),(6619,2196,18),(6620,2197,1),(6621,2197,5),(6622,2197,20),(6623,2197,30),(6624,2198,5),(6625,2199,9),(6626,2200,1),(6627,2200,15),(6628,2201,1),(6629,2201,3),(6630,2201,19),(6631,2202,1),(6632,2202,7),(6633,2203,21),(6634,2203,47),(6635,2204,8),(6636,2204,13),(6637,2204,27),(6638,2204,21),(6639,2205,9),(6640,2206,1),(6641,2206,3),(6642,2206,14),(6643,2206,22),(6644,2207,2),(6645,2207,7),(6646,2207,16),(6647,2208,1),(6648,2208,7),(6649,2208,17),(6650,2209,2),(6651,2209,4),(6652,2209,16),(6653,2210,1),(6654,2211,2),(6655,2211,20),(6656,2211,19),(6657,2212,1),(6658,2212,25),(6659,2212,14),(6660,2212,26),(6661,2213,1),(6662,2213,2),(6663,2213,32),(6664,2213,29),(6665,2214,1),(6666,2214,7),(6667,2215,1),(6668,2215,3),(6669,2216,1),(6670,2216,20),(6671,2216,7),(6672,2217,1),(6673,2217,5),(6674,2218,1),(6675,2218,4),(6676,2218,16),(6677,2219,1),(6678,2219,16),(6679,2220,14),(6680,2221,1),(6681,2221,5),(6682,2221,19),(6683,2221,36),(6684,2222,2),(6685,2222,4),(6686,2222,16),(6687,2223,2),(6688,2223,10),(6689,2223,48),(6690,2223,62),(6691,2223,45),(6692,2223,43),(6693,2224,2),(6694,2224,7),(6695,2225,1),(6696,2225,3),(6697,2225,6),(6698,2225,22),(6699,2226,1),(6700,2226,10),(6701,2227,1),(6702,2227,3),(6703,2227,2),(6704,2227,24),(6705,2227,33),(6706,2228,9),(6707,2229,1),(6708,2229,3),(6709,2229,6),(6710,2230,9),(6711,2231,6),(6712,2231,17),(6713,2232,2),(6714,2232,26),(6715,2233,1),(6716,2233,7),(6717,2233,17),(6718,2234,1),(6719,2234,15),(6720,2234,10),(6721,2234,7),(6722,2234,6),(6723,2235,5),(6724,2236,12),(6725,2236,18),(6726,2237,1),(6727,2237,16),(6728,2238,9),(6729,2239,1),(6730,2240,5),(6731,2240,26),(6732,2241,1),(6733,2241,7),(6734,2241,24),(6735,2242,1),(6736,2242,21),(6737,2242,6),(6738,2242,26),(6739,2243,2),(6740,2243,19),(6741,2244,1),(6742,2244,3),(6743,2244,7),(6744,2244,22),(6745,2245,1),(6746,2245,11),(6747,2245,16),(6748,2246,1),(6749,2246,2),(6750,2246,12),(6751,2246,8),(6752,2246,21),(6753,2246,46),(6754,2247,4),(6755,2247,14),(6756,2247,21),(6757,2247,34),(6758,2248,1),(6759,2248,3),(6760,2248,6),(6761,2248,22),(6762,2249,1),(6763,2249,3),(6764,2249,5),(6765,2249,40),(6766,2249,26),(6767,2250,1),(6768,2250,10),(6769,2250,39),(6770,2250,6),(6771,2251,1),(6772,2251,3),(6773,2251,10),(6774,2251,6),(6775,2251,16),(6776,2251,29),(6777,2252,9),(6778,2253,9),(6779,2254,3),(6780,2254,20),(6781,2254,24),(6782,2254,29),(6783,2255,1),(6784,2255,2),(6785,2256,1),(6786,2256,16),(6787,2257,1),(6788,2257,11),(6789,2257,19),(6790,2258,1),(6791,2258,10),(6792,2258,13),(6793,2258,11),(6794,2259,2),(6795,2259,7),(6796,2259,26),(6797,2260,1),(6798,2260,3),(6799,2260,23),(6800,2261,1),(6801,2261,3),(6802,2261,33),(6803,2261,48),(6804,2261,43),(6805,2261,26),(6806,2262,3),(6807,2262,2),(6808,2262,4),(6809,2263,4),(6810,2263,7),(6811,2264,2),(6812,2265,12),(6813,2265,8),(6814,2265,18),(6815,2266,3),(6816,2266,5),(6817,2266,2),(6818,2266,4),(6819,2267,1),(6820,2267,4),(6821,2267,11),(6822,2268,3),(6823,2268,2),(6824,2268,7),(6825,2268,6),(6826,2268,22),(6827,2269,5),(6828,2269,2),(6829,2269,23),(6830,2270,1),(6831,2270,16),(6832,2271,1),(6833,2271,10),(6834,2271,7),(6835,2271,23),(6836,2271,6),(6837,2271,16),(6838,2272,1),(6839,2272,4),(6840,2273,1),(6841,2273,3),(6842,2273,2),(6843,2273,6),(6844,2274,1),(6845,2274,6),(6846,2275,1),(6847,2275,3),(6848,2275,14),(6849,2275,22),(6850,2276,24),(6851,2276,32),(6852,2276,29),(6853,2277,1),(6854,2277,12),(6855,2277,8),(6856,2277,13),(6857,2278,2),(6858,2279,1),(6859,2279,7),(6860,2279,6),(6861,2280,1),(6862,2280,5),(6863,2280,40),(6864,2280,6),(6865,2280,30),(6866,2281,1),(6867,2281,20),(6868,2281,31),(6869,2281,16),(6870,2282,1),(6871,2282,20),(6872,2282,11),(6873,2282,31),(6874,2283,3),(6875,2283,2),(6876,2283,22),(6877,2284,1),(6878,2284,3),(6879,2284,2),(6880,2284,22),(6881,2285,7),(6882,2285,21),(6883,2285,6),(6884,2285,17),(6885,2286,10),(6886,2286,24),(6887,2286,39),(6888,2286,32),(6889,2287,3),(6890,2287,2),(6891,2287,22),(6892,2288,2),(6893,2289,1),(6894,2289,28),(6895,2289,20),(6896,2289,31),(6897,2290,1),(6898,2290,13),(6899,2290,21),(6900,2290,17),(6901,2290,11),(6902,2290,47),(6903,2291,1),(6904,2291,4),(6905,2292,9),(6906,2293,1),(6907,2293,19),(6908,2294,1),(6909,2294,7),(6910,2294,6),(6911,2295,1),(6912,2295,3),(6913,2295,19),(6914,2296,28),(6915,2296,2),(6916,2296,20),(6917,2296,24),(6918,2296,19),(6919,2296,56),(6920,2297,1),(6921,2297,4),(6922,2297,20),(6923,2297,21),(6924,2297,31),(6925,2297,47),(6926,2298,9),(6927,2299,2),(6928,2300,1),(6929,2300,15),(6930,2300,10),(6931,2300,6),(6932,2301,1),(6933,2301,3),(6934,2301,2),(6935,2301,45),(6936,2302,1),(6937,2302,10),(6938,2302,23),(6939,2302,16),(6940,2303,1),(6941,2303,19),(6942,2304,1),(6943,2304,4),(6944,2304,11),(6945,2305,1),(6946,2305,4),(6947,2305,25),(6948,2305,14),(6949,2305,34),(6950,2306,1),(6951,2306,3),(6952,2306,2),(6953,2306,14),(6954,2306,26),(6955,2307,1),(6956,2307,8),(6957,2307,27),(6958,2307,21),(6959,2308,9),(6960,2309,3),(6961,2309,2),(6962,2309,26),(6963,2310,5),(6964,2310,4),(6965,2310,7),(6966,2310,26),(6967,2311,2),(6968,2311,4),(6969,2311,7),(6970,2311,44),(6971,2312,1),(6972,2312,4),(6973,2312,44),(6974,2313,4),(6975,2313,12),(6976,2313,8),(6977,2313,18),(6978,2314,9),(6979,2315,2),(6980,2316,8),(6981,2316,13),(6982,2316,27),(6983,2316,21),(6984,2317,1),(6985,2317,5),(6986,2317,14),(6987,2318,4),(6988,2318,44),(6989,2319,1),(6990,2319,11),(6991,2320,4),(6992,2321,1),(6993,2321,4),(6994,2322,1),(6995,2322,14),(6996,2322,12),(6997,2322,8),(6998,2323,1),(6999,2323,7),(7000,2323,6),(7001,2324,9),(7002,2325,3),(7003,2325,2),(7004,2326,1),(7005,2326,28),(7006,2326,11),(7007,2326,19),(7008,2327,4),(7009,2327,37),(7010,2327,19),(7011,2328,1),(7012,2328,4),(7013,2328,8),(7014,2328,13),(7015,2328,21),(7016,2328,46),(7017,2328,44),(7018,2328,11),(7019,2329,9),(7020,2330,15),(7021,2330,2),(7022,2331,12),(7023,2331,8),(7024,2331,18),(7025,2332,1),(7026,2332,15),(7027,2332,10),(7028,2332,6),(7029,2333,1),(7030,2333,10),(7031,2333,7),(7032,2333,6),(7033,2333,17),(7034,2334,1),(7035,2334,20),(7036,2334,27),(7037,2334,31),(7038,2335,1),(7039,2335,7),(7040,2335,6),(7041,2335,17),(7042,2336,3),(7043,2336,24),(7044,2336,17),(7045,2336,29),(7046,2337,15),(7047,2337,2),(7048,2338,5),(7049,2338,4),(7050,2338,36),(7051,2338,30),(7052,2339,9),(7053,2340,1),(7054,2340,7),(7055,2341,1),(7056,2341,3),(7057,2341,22),(7058,2342,1),(7059,2342,3),(7060,2342,6),(7061,2342,17),(7062,2343,1),(7063,2343,2),(7064,2343,35),(7065,2343,6),(7066,2343,17),(7067,2343,70),(7068,2343,61),(7069,2344,1),(7070,2344,5),(7071,2344,6),(7072,2344,17),(7073,2344,30),(7074,2345,1),(7075,2345,20),(7076,2345,6),(7077,2345,31),(7078,2346,9),(7079,2347,1),(7080,2347,3),(7081,2347,22),(7082,2348,1),(7083,2348,5),(7084,2349,3),(7085,2349,24),(7086,2349,17),(7087,2349,29),(7088,2350,1),(7089,2350,3),(7090,2350,7),(7091,2351,3),(7092,2351,2),(7093,2351,14),(7094,2351,22),(7095,2352,1),(7096,2352,3),(7097,2352,11),(7098,2352,19),(7099,2353,3),(7100,2353,24),(7101,2353,17),(7102,2353,29),(7103,2354,1),(7104,2354,3),(7105,2354,10),(7106,2354,14),(7107,2355,1),(7108,2355,4),(7109,2355,20),(7110,2355,31),(7111,2356,9),(7112,2357,1),(7113,2357,3),(7114,2357,7),(7115,2357,6),(7116,2357,17),(7117,2357,19),(7118,2358,1),(7119,2358,5),(7120,2358,10),(7121,2358,7),(7122,2359,8),(7123,2359,21),(7124,2360,8),(7125,2360,21),(7126,2360,46),(7127,2361,1),(7128,2361,4),(7129,2362,9),(7130,2363,1),(7131,2363,3),(7132,2363,6),(7133,2363,29),(7134,2364,1),(7135,2364,3),(7136,2364,5),(7137,2364,22),(7138,2365,1),(7139,2365,3),(7140,2365,19),(7141,2366,1),(7142,2366,5),(7143,2366,7),(7144,2367,1),(7145,2367,3),(7146,2367,15),(7147,2367,26),(7148,2368,1),(7149,2368,3),(7150,2368,12),(7151,2368,8),(7152,2368,13),(7153,2368,27),(7154,2368,21),(7155,2369,1),(7156,2369,4),(7157,2370,3),(7158,2370,2),(7159,2370,4),(7160,2371,1),(7161,2371,27),(7162,2371,21),(7163,2371,46),(7164,2371,6),(7165,2371,11),(7166,2372,9),(7167,2373,1),(7168,2373,11),(7169,2374,3),(7170,2374,21),(7171,2375,2),(7172,2375,25),(7173,2375,20),(7174,2375,7),(7175,2376,5),(7176,2376,4),(7177,2377,9),(7178,2378,4),(7179,2378,12),(7180,2378,8),(7181,2379,2),(7182,2379,23),(7183,2380,2),(7184,2380,4),(7185,2380,19),(7186,2381,1),(7187,2381,2),(7188,2381,16),(7189,2382,1),(7190,2382,27),(7191,2382,16),(7192,2382,29),(7193,2383,1),(7194,2383,7),(7195,2384,3),(7196,2384,2),(7197,2384,7),(7198,2384,22),(7199,2385,3),(7200,2385,12),(7201,2385,8),(7202,2385,13),(7203,2385,18),(7204,2386,1),(7205,2386,6),(7206,2386,17),(7207,2387,1),(7208,2387,10),(7209,2387,11),(7210,2388,9),(7211,2389,1),(7212,2389,10),(7213,2389,7),(7214,2389,6),(7215,2389,16),(7216,2390,2),(7217,2390,20),(7218,2390,19),(7219,2391,1),(7220,2391,2),(7221,2391,16),(7222,2392,1),(7223,2392,21),(7224,2392,46),(7225,2392,11),(7226,2393,1),(7227,2393,5),(7228,2393,4),(7229,2394,9),(7230,2395,1),(7231,2395,3),(7232,2396,5),(7233,2396,15),(7234,2396,53),(7235,2397,1),(7236,2397,25),(7237,2397,14),(7238,2397,11),(7239,2397,26),(7240,2398,1),(7241,2398,10),(7242,2398,37),(7243,2398,23),(7244,2398,17),(7245,2398,16),(7246,2398,52),(7247,2399,1),(7248,2399,3),(7249,2399,2),(7250,2400,5),(7251,2400,4),(7252,2400,36),(7253,2401,1),(7254,2401,14),(7255,2401,23),(7256,2402,1),(7257,2402,3),(7258,2402,6),(7259,2402,17),(7260,2402,19),(7261,2403,1),(7262,2403,4),(7263,2403,14),(7264,2403,34),(7265,2404,1),(7266,2404,3),(7267,2404,22),(7268,2405,3),(7269,2405,2),(7270,2405,7),(7271,2406,1),(7272,2406,15),(7273,2406,7),(7274,2406,6),(7275,2406,17),(7276,2406,16),(7277,2407,1),(7278,2407,35),(7279,2407,4),(7280,2407,39),(7281,2407,32),(7282,2407,37),(7283,2407,52),(7284,2408,1),(7285,2408,3),(7286,2408,2),(7287,2408,24),(7288,2409,5),(7289,2409,2),(7290,2410,1),(7291,2410,15),(7292,2410,7),(7293,2410,6),(7294,2411,1),(7295,2411,10),(7296,2411,14),(7297,2411,23),(7298,2412,1),(7299,2412,7),(7300,2412,6),(7301,2413,5),(7302,2413,30),(7303,2414,2),(7304,2415,12),(7305,2415,8),(7306,2415,13),(7307,2415,18),(7308,2416,1),(7309,2416,2),(7310,2416,33),(7311,2416,22),(7312,2417,5),(7313,2417,26),(7314,2418,1),(7315,2418,3),(7316,2418,2),(7317,2418,6),(7318,2419,1),(7319,2419,14),(7320,2419,53),(7321,2420,1),(7322,2420,4),(7323,2420,16),(7324,2421,1),(7325,2421,3),(7326,2421,12),(7327,2421,27),(7328,2421,21),(7329,2421,6),(7330,2422,1),(7331,2422,15),(7332,2422,7),(7333,2423,3),(7334,2423,2),(7335,2423,22),(7336,2424,10),(7337,2424,27),(7338,2424,24),(7339,2424,39),(7340,2424,32),(7341,2424,17),(7342,2424,29),(7343,2425,1),(7344,2425,14),(7345,2425,53),(7346,2426,1),(7347,2426,10),(7348,2426,35),(7349,2426,39),(7350,2426,32),(7351,2426,55),(7352,2426,29),(7353,2427,5),(7354,2427,26),(7355,2427,30),(7356,2428,1),(7357,2428,11),(7358,2428,16),(7359,2429,7),(7360,2429,14),(7361,2430,2),(7362,2430,4),(7363,2430,48),(7364,2430,45),(7365,2430,43),(7366,2431,1),(7367,2431,4),(7368,2432,1),(7369,2433,1),(7370,2433,14),(7371,2434,3),(7372,2434,2),(7373,2434,20),(7374,2434,7),(7375,2435,1),(7376,2435,4),(7377,2435,11),(7378,2436,1),(7379,2436,5),(7380,2436,4),(7381,2436,7),(7382,2436,30),(7383,2437,2),(7384,2437,26),(7385,2438,1),(7386,2438,14),(7387,2438,16),(7388,2439,1),(7389,2439,10),(7390,2439,4),(7391,2439,7),(7392,2439,16),(7393,2440,1),(7394,2440,5),(7395,2440,12),(7396,2440,8),(7397,2440,26),(7398,2441,1),(7399,2441,3),(7400,2441,15),(7401,2441,6),(7402,2442,1),(7403,2442,3),(7404,2442,5),(7405,2442,22),(7406,2443,5),(7407,2443,26),(7408,2444,1),(7409,2444,37),(7410,2444,23),(7411,2444,52),(7412,2445,12),(7413,2445,8),(7414,2445,13),(7415,2445,18),(7416,2446,1),(7417,2446,2),(7418,2447,1),(7419,2447,5),(7420,2447,30),(7421,2448,1),(7422,2448,10),(7423,2448,7),(7424,2448,6),(7425,2448,16),(7426,2449,1),(7427,2449,7),(7428,2449,6),(7429,2450,5),(7430,2450,2),(7431,2451,1),(7432,2451,3),(7433,2451,2),(7434,2452,1),(7435,2452,2),(7436,2453,1),(7437,2453,3),(7438,2453,22),(7439,2454,1),(7440,2454,10),(7441,2454,20),(7442,2454,6),(7443,2454,17),(7444,2454,31),(7445,2455,1),(7446,2455,5),(7447,2456,1),(7448,2456,3),(7449,2456,2),(7450,2456,6),(7451,2456,17),(7452,2457,5),(7453,2457,7),(7454,2458,1),(7455,2458,12),(7456,2458,8),(7457,2458,13),(7458,2458,18),(7459,2459,1),(7460,2459,7),(7461,2459,6),(7462,2460,1),(7463,2460,15),(7464,2460,19),(7465,2461,1),(7466,2461,3),(7467,2461,23),(7468,2462,1),(7469,2462,15),(7470,2462,17),(7471,2462,19),(7472,2463,1),(7473,2463,4),(7474,2463,6),(7475,2464,1),(7476,2464,5),(7477,2464,4),(7478,2464,30),(7479,2465,1),(7480,2465,3),(7481,2465,15),(7482,2465,6),(7483,2466,4),(7484,2467,1),(7485,2467,12),(7486,2467,8),(7487,2467,13),(7488,2467,21),(7489,2468,2),(7490,2468,10),(7491,2468,26),(7492,2469,5),(7493,2470,1),(7494,2470,5),(7495,2470,30),(7496,2471,12),(7497,2471,13),(7498,2471,18),(7499,2472,15),(7500,2472,2),(7501,2472,4),(7502,2472,7),(7503,2473,1),(7504,2473,21),(7505,2473,17),(7506,2473,47),(7507,2474,9),(7508,2475,1),(7509,2475,3),(7510,2475,6),(7511,2476,1),(7512,2476,10),(7513,2476,12),(7514,2476,8),(7515,2476,41),(7516,2476,18),(7517,2477,12),(7518,2477,8),(7519,2477,13),(7520,2477,21),(7521,2478,2),(7522,2478,4),(7523,2479,12),(7524,2479,8),(7525,2479,21),(7526,2479,33),(7527,2480,9),(7528,2481,5),(7529,2481,40),(7530,2482,1),(7531,2482,11),(7532,2482,19),(7533,2483,2),(7534,2483,16),(7535,2484,2),(7536,2484,4),(7537,2485,5),(7538,2485,16),(7539,2486,15),(7540,2486,2),(7541,2486,7),(7542,2487,28),(7543,2487,20),(7544,2487,38),(7545,2487,31),(7546,2488,1),(7547,2488,3),(7548,2488,16),(7549,2489,3),(7550,2489,5),(7551,2489,2),(7552,2489,16),(7553,2490,2),(7554,2491,1),(7555,2491,3),(7556,2491,15),(7557,2491,6),(7558,2492,8),(7559,2492,13),(7560,2492,27),(7561,2492,21),(7562,2493,13),(7563,2493,27),(7564,2493,21),(7565,2494,9),(7566,2495,1),(7567,2495,5),(7568,2495,4),(7569,2496,1),(7570,2496,2),(7571,2497,1),(7572,2497,7),(7573,2497,21),(7574,2497,6),(7575,2497,17),(7576,2498,1),(7577,2498,10),(7578,2498,7),(7579,2499,1),(7580,2499,3),(7581,2499,7),(7582,2499,22),(7583,2500,1),(7584,2500,6),(7585,2500,17),(7586,2500,11),(7587,2500,19),(7588,2501,1),(7589,2501,3),(7590,2501,10),(7591,2501,4),(7592,2501,6),(7593,2502,1),(7594,2502,3),(7595,2502,24),(7596,2502,19),(7597,2503,1),(7598,2503,15),(7599,2503,13),(7600,2503,27),(7601,2503,6),(7602,2503,17),(7603,2503,11),(7604,2504,9),(7605,2505,1),(7606,2505,5),(7607,2505,14),(7608,2505,53),(7609,2506,1),(7610,2506,3),(7611,2506,2),(7612,2506,14),(7613,2506,22),(7614,2507,5),(7615,2507,19),(7616,2507,30),(7617,2508,3),(7618,2508,21),(7619,2509,1),(7620,2509,12),(7621,2509,18),(7622,2510,1),(7623,2510,4),(7624,2510,11),(7625,2511,1),(7626,2511,15),(7627,2512,1),(7628,2512,3),(7629,2512,2),(7630,2512,6),(7631,2512,17),(7632,2513,5),(7633,2513,10),(7634,2513,30),(7635,2514,3),(7636,2514,5),(7637,2514,2),(7638,2514,36),(7639,2514,22),(7640,2515,1),(7641,2515,2),(7642,2516,3),(7643,2516,2),(7644,2516,23),(7645,2517,1),(7646,2517,10),(7647,2517,7),(7648,2517,6),(7649,2518,1),(7650,2518,4),(7651,2519,1),(7652,2519,10),(7653,2519,35),(7654,2519,39),(7655,2519,32),(7656,2519,55),(7657,2519,29),(7658,2520,5),(7659,2521,1),(7660,2521,3),(7661,2521,5),(7662,2521,30),(7663,2522,2),(7664,2522,4),(7665,2522,7),(7666,2523,5),(7667,2523,30),(7668,2524,1),(7669,2524,3),(7670,2524,5),(7671,2524,20),(7672,2524,23),(7673,2525,5),(7674,2526,3),(7675,2526,24),(7676,2526,37),(7677,2526,22),(7678,2526,51),(7679,2527,1),(7680,2527,5),(7681,2527,14),(7682,2528,1),(7683,2528,10),(7684,2528,7),(7685,2528,37),(7686,2528,23),(7687,2528,16),(7688,2529,1),(7689,2529,10),(7690,2529,22),(7691,2530,1),(7692,2530,7),(7693,2530,17),(7694,2531,3),(7695,2531,2),(7696,2531,22),(7697,2532,1),(7698,2532,17),(7699,2532,19),(7700,2533,4),(7701,2534,1),(7702,2534,37),(7703,2534,19),(7704,2535,1),(7705,2535,5),(7706,2536,1),(7707,2536,11),(7708,2536,16),(7709,2537,1),(7710,2537,3),(7711,2537,23),(7712,2538,1),(7713,2538,4),(7714,2538,12),(7715,2538,8),(7716,2539,3),(7717,2539,5),(7718,2539,2),(7719,2539,36),(7720,2539,22),(7721,2540,1),(7722,2540,3),(7723,2540,15),(7724,2540,10),(7725,2541,1),(7726,2541,5),(7727,2541,7),(7728,2542,1),(7729,2542,7),(7730,2542,6),(7731,2542,17),(7732,2543,5),(7733,2543,30),(7734,2544,5),(7735,2545,1),(7736,2545,6),(7737,2545,11),(7738,2546,2),(7739,2546,14),(7740,2547,1),(7741,2547,3),(7742,2547,4),(7743,2547,22),(7744,2548,1),(7745,2548,7),(7746,2548,6),(7747,2549,1),(7748,2549,3),(7749,2549,5),(7750,2549,19),(7751,2550,5),(7752,2550,38),(7753,2551,1),(7754,2551,7),(7755,2551,6),(7756,2551,17),(7757,2552,1),(7758,2552,4),(7759,2552,39),(7760,2552,26),(7761,2552,16),(7762,2553,1),(7763,2553,19),(7764,2554,1),(7765,2554,3),(7766,2554,10),(7767,2554,7),(7768,2554,6),(7769,2555,1),(7770,2555,10),(7771,2555,23),(7772,2556,1),(7773,2556,4),(7774,2556,8),(7775,2556,13),(7776,2556,11),(7777,2557,1),(7778,2557,10),(7779,2557,7),(7780,2557,6),(7781,2558,1),(7782,2558,17),(7783,2558,19),(7784,2559,1),(7785,2559,2),(7786,2559,16),(7787,2560,1),(7788,2560,10),(7789,2561,1),(7790,2561,3),(7791,2561,7),(7792,2562,1),(7793,2562,15),(7794,2562,19),(7795,2563,1),(7796,2563,15),(7797,2563,10),(7798,2563,6),(7799,2564,1),(7800,2564,3),(7801,2564,2),(7802,2564,14),(7803,2565,15),(7804,2565,2),(7805,2565,10),(7806,2566,5),(7807,2566,7),(7808,2567,1),(7809,2567,7),(7810,2567,6),(7811,2568,1),(7812,2568,14),(7813,2568,53),(7814,2569,1),(7815,2569,32),(7816,2570,1),(7817,2570,3),(7818,2570,15),(7819,2571,4),(7820,2571,7),(7821,2571,14),(7822,2572,1),(7823,2572,5),(7824,2572,4),(7825,2572,14),(7826,2572,34),(7827,2573,1),(7828,2573,2),(7829,2573,4),(7830,2573,7),(7831,2573,27),(7832,2573,11),(7833,2574,1),(7834,2574,16),(7835,2575,1),(7836,2575,5),(7837,2575,2),(7838,2576,1),(7839,2576,15),(7840,2576,10),(7841,2576,7),(7842,2576,6),(7843,2577,1),(7844,2577,13),(7845,2577,21),(7846,2577,17),(7847,2577,11),(7848,2577,47),(7849,2578,5),(7850,2578,7),(7851,2578,6),(7852,2579,5),(7853,2580,1),(7854,2580,6),(7855,2581,1),(7856,2581,3),(7857,2581,4),(7858,2581,12),(7859,2581,8),(7860,2582,5),(7861,2582,19),(7862,2583,12),(7863,2583,13),(7864,2583,6),(7865,2583,18),(7866,2584,1),(7867,2584,3),(7868,2584,5),(7869,2584,30),(7870,2585,1),(7871,2585,4),(7872,2586,1),(7873,2586,2),(7874,2586,22),(7875,2587,1),(7876,2587,7),(7877,2587,6),(7878,2587,16),(7879,2588,1),(7880,2588,3),(7881,2588,14),(7882,2588,16),(7883,2589,1),(7884,2589,10),(7885,2589,20),(7886,2589,7),(7887,2589,6),(7888,2590,1),(7889,2590,3),(7890,2590,2),(7891,2590,24),(7892,2590,6),(7893,2591,5),(7894,2591,7),(7895,2592,1),(7896,2592,15),(7897,2592,7),(7898,2592,6),(7899,2593,1),(7900,2593,3),(7901,2593,6),(7902,2593,17),(7903,2593,19),(7904,2594,1),(7905,2594,10),(7906,2595,14),(7907,2596,1),(7908,2596,8),(7909,2596,13),(7910,2596,11),(7911,2596,19),(7912,2597,1),(7913,2597,3),(7914,2597,5),(7915,2597,4),(7916,2597,25),(7917,2597,6),(7918,2597,36),(7919,2598,1),(7920,2598,3),(7921,2598,5),(7922,2598,7),(7923,2599,1),(7924,2599,7),(7925,2599,17),(7926,2600,5),(7927,2600,7),(7928,2601,1),(7929,2601,5),(7930,2601,10),(7931,2601,7),(7932,2601,30),(7933,2602,1),(7934,2602,10),(7935,2602,6),(7936,2602,16),(7937,2603,1),(7938,2603,12),(7939,2603,21),(7940,2603,46),(7941,2604,1),(7942,2604,15),(7943,2604,10),(7944,2604,6),(7945,2605,1),(7946,2605,3),(7947,2605,26),(7948,2606,1),(7949,2606,3),(7950,2606,2),(7951,2606,4),(7952,2607,1),(7953,2607,5),(7954,2607,6),(7955,2607,30),(7956,2608,13),(7957,2608,21),(7958,2609,2),(7959,2610,1),(7960,2610,3),(7961,2611,1),(7962,2611,7),(7963,2611,6),(7964,2611,17),(7965,2612,1),(7966,2612,13),(7967,2612,29),(7968,2613,1),(7969,2613,5),(7970,2613,35),(7971,2613,40),(7972,2613,6),(7973,2613,29),(7974,2614,1),(7975,2614,5),(7976,2614,11),(7977,2614,30),(7978,2615,1),(7979,2615,3),(7980,2615,16),(7981,2616,1),(7982,2616,10),(7983,2616,7),(7984,2617,1),(7985,2617,4),(7986,2617,20),(7987,2617,13),(7988,2617,27),(7989,2617,17),(7990,2617,11),(7991,2617,31),(7992,2638,1),(7993,2638,5),(7994,2638,4),(7995,2638,6),(7996,2638,36),(7997,2639,1),(7998,2639,11),(7999,2640,1),(8000,2640,16),(8001,2641,3),(8002,2641,12),(8003,2641,8),(8004,2641,13),(8005,2641,18),(8006,2642,21),(8007,2642,24),(8008,2642,17),(8009,2642,47),(8010,2643,1),(8011,2643,11),(8012,2644,1),(8013,2645,2),(8014,2645,4),(8015,2645,20),(8016,2645,7),(8017,2646,1),(8018,2646,4),(8019,2646,12),(8020,2646,8),(8021,2646,21),(8022,2647,1),(8023,2647,5),(8024,2651,5),(8025,2652,5),(8026,2653,1),(8027,2653,3),(8028,2653,23),(8029,2654,1),(8030,2654,5),(8031,2654,30),(8032,2655,1),(8033,2655,6),(8034,2656,1),(8035,2656,7),(8036,2657,1),(8037,2657,3),(8038,2657,14),(8039,2658,1),(8040,2658,8),(8041,2658,13),(8042,2658,27),(8043,2658,11),(8044,2659,1),(8045,2659,10),(8046,2659,7),(8047,2659,39),(8048,2659,32),(8049,2659,6),(8050,2659,29),(8051,2660,1),(8052,2660,19),(8053,2661,1),(8054,2661,3),(8055,2661,11),(8056,2662,1),(8057,2662,21),(8058,2662,17),(8059,2662,47),(8060,2663,2),(8061,2663,7),(8062,2664,1),(8063,2664,25),(8064,2664,11),(8065,2668,9),(8066,2669,9),(8067,2670,1),(8068,2670,3),(8069,2671,3),(8070,2671,24),(8071,2672,1),(8072,2673,1),(8073,2673,4),(8074,2673,7),(8075,2673,12),(8076,2673,18),(8077,2674,28),(8078,2674,15),(8079,2678,1),(8080,2678,2),(8081,2679,1),(8082,2679,6),(8083,2679,17),(8084,2679,11),(8085,2679,19),(8086,2680,1),(8087,2680,7),(8088,2680,14),(8089,2680,16),(8090,2681,1),(8091,2681,5),(8092,2681,4),(8093,2681,6),(8094,2681,16),(8095,2682,1),(8096,2682,3),(8097,2682,19),(8098,2683,1),(8099,2683,14),(8100,2684,1),(8101,2684,4),(8102,2684,11),(8103,2685,8),(8104,2685,13),(8105,2685,27),(8106,2685,21),(8107,2686,9),(8108,2687,9),(8109,2688,9),(8110,2689,12),(8111,2689,8),(8112,2689,18),(8113,2696,2),(8114,2696,20),(8115,2696,19),(8116,2697,15),(8117,2697,2),(8118,2697,7),(8119,2698,5),(8120,2698,25),(8121,2699,21),(8122,2699,17),(8123,2699,47),(8124,2701,9),(8125,2702,1),(8126,2702,10),(8127,2706,1),(8128,2706,7),(8129,2706,6),(8130,2707,1),(8131,2707,3),(8132,2707,2),(8133,2707,4),(8134,2707,33),(8135,2708,1),(8136,2708,4),(8137,2708,25),(8138,2708,7),(8139,2708,14),(8140,2708,6),(8141,2708,26),(8142,2709,1),(8143,2709,5),(8144,2709,27),(8145,2709,30),(8146,2710,2),(8147,2711,1),(8148,2711,3),(8149,2711,11),(8150,2712,2),(8151,2712,4),(8152,2712,7),(8153,2713,1),(8154,2713,3),(8155,2713,10),(8156,2713,4),(8157,2713,44),(8158,2713,6),(8159,2713,11),(8160,2713,29),(8161,2714,21),(8162,2714,17),(8163,2714,47),(8164,2716,3),(8165,2716,2),(8166,2717,1),(8167,2717,19),(8168,2718,1),(8169,2718,3),(8170,2719,5),(8171,2719,2),(8172,2719,4),(8173,2720,9),(8174,2728,1),(8175,2728,50),(8176,2729,3),(8177,2729,5),(8178,2730,2),(8179,2730,23),(8180,2731,1),(8181,2731,53),(8182,2731,6),(8183,2731,16),(8184,2732,1),(8185,2732,3),(8186,2732,14),(8187,2732,11),(8188,2733,1),(8189,2733,6),(8190,2734,2),(8191,2734,7),(8192,2735,1),(8193,2735,26),(8194,2736,1),(8195,2736,10),(8196,2736,20),(8197,2736,39),(8198,2736,32),(8199,2736,6),(8200,2736,31),(8201,2737,1),(8202,2737,21),(8203,2737,17),(8204,2737,47),(8205,2738,9),(8206,2739,5),(8207,2739,19),(8208,2740,1),(8209,2740,6),(8210,2741,1),(8211,2741,4),(8212,2741,14),(8213,2741,34),(8214,2742,1),(8215,2742,4),(8216,2743,3),(8217,2743,2),(8218,2743,23),(8219,2744,1),(8220,2744,3),(8221,2744,2),(8222,2744,19),(8223,2745,5),(8224,2745,4),(8225,2745,7),(8226,2745,53),(8227,2746,1),(8228,2746,2),(8229,2746,4),(8230,2747,1),(8231,2747,3),(8232,2747,23),(8233,2747,6),(8234,2748,1),(8235,2748,3),(8236,2748,5),(8237,2748,22),(8238,2748,30),(8239,2749,14),(8240,2749,53),(8241,2750,1),(8242,2750,5),(8243,2750,4),(8244,2751,1),(8245,2751,20),(8246,2751,6),(8247,2751,19),(8248,2752,9),(8249,2760,1),(8250,2760,23),(8251,2761,1),(8252,2761,5),(8253,2761,26),(8254,2761,30),(8255,2762,1),(8256,2762,37),(8257,2762,23),(8258,2762,17),(8259,2762,29),(8260,2762,52),(8261,2763,1),(8262,2763,3),(8263,2763,29),(8264,2764,20),(8265,2764,12),(8266,2764,8),(8267,2764,18),(8268,2765,1),(8269,2765,26),(8270,2766,1),(8271,2766,3),(8272,2766,6),(8273,2766,19),(8274,2767,3),(8275,2767,2),(8276,2767,4),(8277,2767,25),(8278,2768,1),(8279,2768,3),(8280,2768,26),(8281,2769,5),(8282,2770,1),(8283,2770,4),(8284,2771,1),(8285,2771,4),(8286,2772,1),(8287,2772,16),(8288,2773,12),(8289,2773,8),(8290,2773,13),(8291,2773,18),(8292,2778,1),(8293,2778,26),(8294,2779,1),(8295,2779,10),(8296,2779,23),(8297,2779,6),(8298,2780,1),(8299,2780,3),(8300,2780,6),(8301,2781,1),(8302,2781,3),(8303,2781,2),(8304,2781,23),(8305,2782,27),(8306,2782,50),(8307,2782,22),(8308,2783,9),(8309,2784,1),(8310,2784,3),(8311,2784,6),(8312,2785,2),(8313,2785,6),(8314,2786,1),(8315,2786,4),(8316,2787,4),(8317,2788,1),(8318,2788,2),(8319,2789,1),(8320,2789,7),(8321,2790,1),(8322,2790,5),(8323,2790,10),(8324,2790,7),(8325,2790,6),(8326,2791,4),(8327,2791,14),(8328,2791,12),(8329,2791,8),(8330,2791,34),(8331,2792,35),(8332,2792,12),(8333,2792,8),(8334,2792,18),(8335,2798,1),(8336,2799,1),(8337,2799,3),(8338,2799,23),(8339,2800,2),(8340,2800,7),(8341,2800,26),(8342,2801,2),(8343,2801,4),(8344,2802,5),(8345,2802,2),(8346,2802,14),(8347,2806,5),(8348,2807,28),(8349,2807,5),(8350,2807,30),(8351,2808,1),(8352,2808,3),(8353,2809,1),(8354,2809,4),(8355,2809,6),(8356,2810,2),(8357,2810,19),(8358,2811,1),(8359,2811,4),(8360,2811,7),(8361,2812,1),(8362,2812,10),(8363,2812,13),(8364,2812,27),(8365,2812,11),(8366,2813,1),(8367,2813,3),(8368,2813,20),(8369,2813,7),(8370,2813,6),(8371,2813,17),(8372,2814,1),(8373,2814,13),(8374,2814,11),(8375,2815,1),(8376,2815,3),(8377,2816,28),(8378,2816,5),(8379,2816,20),(8380,2817,1),(8381,2817,10),(8382,2817,29),(8383,2818,1),(8384,2818,5),(8385,2818,20),(8386,2818,7),(8387,2818,31),(8388,2818,30),(8389,2819,1),(8390,2819,10),(8391,2819,6),(8392,2819,16),(8393,2824,1),(8394,2824,15),(8395,2824,10),(8396,2824,6),(8397,2825,15),(8398,2825,2),(8399,2826,1),(8400,2826,10),(8401,2826,4),(8402,2827,5),(8403,2827,4),(8404,2828,1),(8405,2828,2),(8406,2829,5),(8407,2829,7),(8408,2830,1),(8409,2830,3),(8410,2830,10),(8411,2830,4),(8412,2830,6),(8413,2831,1),(8414,2831,3),(8415,2831,10),(8416,2831,23),(8417,2832,1),(8418,2832,20),(8419,2832,31),(8420,2833,2),(8421,2833,22),(8422,2834,5),(8423,2834,7),(8424,2835,1),(8425,2835,7),(8426,2835,14),(8427,2836,1),(8428,2836,4),(8429,2836,14),(8430,2837,9),(8431,2838,1),(8432,2838,15),(8433,2838,10),(8434,2838,6),(8435,2838,16),(8436,2839,2),(8437,2840,3),(8438,2840,2),(8439,2840,6),(8440,2841,1),(8441,2841,3),(8442,2841,23),(8443,2842,3),(8444,2842,5),(8445,2842,2),(8446,2842,7),(8447,2842,36),(8448,2843,5),(8449,2843,26),(8450,2844,5),(8451,2844,2),(8452,2844,7),(8453,2844,26),(8454,2845,1),(8455,2845,3),(8456,2845,16),(8457,2846,1),(8458,2846,12),(8459,2846,21),(8460,2846,68),(8461,2847,5),(8462,2847,7),(8463,2848,1),(8464,2848,3),(8465,2848,16),(8466,2849,5),(8467,2850,1),(8468,2850,4),(8469,2850,13),(8470,2850,11),(8471,2851,5),(8472,2851,2),(8473,2851,4),(8474,2851,45),(8475,2852,1),(8476,2852,3),(8477,2852,8),(8478,2852,13),(8479,2852,27),(8480,2852,11),(8481,2853,9),(8482,2854,9),(8483,2855,1),(8484,2856,1),(8485,2856,3),(8486,2856,15),(8487,2856,10),(8488,2856,7),(8489,2856,22),(8490,2857,1),(8491,2857,3),(8492,2857,14),(8493,2858,4),(8494,2858,8),(8495,2858,13),(8496,2858,21),(8497,2859,1),(8498,2859,14),(8499,2860,1),(8500,2860,6),(8501,2860,26),(8502,2861,1),(8503,2861,10),(8504,2862,1),(8505,2862,5),(8506,2862,30),(8507,2863,1),(8508,2863,20),(8509,2863,6),(8510,2863,31),(8511,2864,5),(8512,2864,2),(8513,2864,7),(8514,2865,1),(8515,2865,20),(8516,2865,31),(8517,2866,1),(8518,2866,20),(8519,2866,31),(8520,2867,5),(8521,2867,4),(8522,2867,12),(8523,2867,8),(8524,2867,30),(8525,2868,1),(8526,2868,5),(8527,2868,15),(8528,2868,2),(8529,2868,7),(8530,2868,49),(8531,2869,1),(8532,2869,3),(8533,2869,14),(8534,2870,1),(8535,2870,3),(8536,2870,7),(8537,2870,22),(8538,2871,1),(8539,2871,7),(8540,2871,14),(8541,2872,12),(8542,2872,8),(8543,2873,1),(8544,2874,1),(8545,2875,1),(8546,2875,3),(8547,2875,23),(8548,2875,16),(8549,2876,4),(8550,2876,21),(8551,2876,44),(8552,2892,1),(8553,2892,4),(8554,2892,7),(8555,2893,9),(8556,2894,5),(8557,2895,1),(8558,2895,7),(8559,2895,6),(8560,2896,2),(8561,2896,4),(8562,2897,1),(8563,2897,3),(8564,2897,7),(8565,2897,14),(8566,2898,1),(8567,2898,3),(8568,2899,1),(8569,2899,19),(8570,2900,1),(8571,2900,2),(8572,2900,4),(8573,2900,7),(8574,2901,1),(8575,2901,2),(8576,2901,4),(8577,2902,1),(8578,2902,3),(8579,2902,4),(8580,2902,23),(8581,2903,1),(8582,2903,15),(8583,2904,2),(8584,2904,23),(8585,2905,1),(8586,2905,15),(8587,2906,1),(8588,2906,11),(8589,2906,16),(8590,2907,1),(8591,2907,39),(8592,2907,32),(8593,2908,1),(8594,2909,1),(8595,2910,1),(8596,2910,3),(8597,2910,7),(8598,2911,15),(8599,2911,2),(8600,2911,4),(8601,2912,5),(8602,2912,4),(8603,2912,36),(8604,2913,1),(8605,2913,3),(8606,2914,2),(8607,2915,1),(8608,2915,4),(8609,2916,1),(8610,2916,4),(8611,2916,39),(8612,2916,32),(8613,2917,1),(8614,2917,14),(8615,2918,1),(8616,2918,7),(8617,2919,1),(8618,2919,4),(8619,2920,1),(8620,2920,4),(8621,2920,14),(8622,2920,12),(8623,2920,8),(8624,2921,1),(8625,2921,39),(8626,2921,32),(8627,2922,9),(8628,2923,1),(8629,2923,11),(8630,2924,21),(8631,2925,4),(8632,2925,12),(8633,2925,8),(8634,2926,1),(8635,2926,10),(8636,2926,4),(8637,2926,39),(8638,2926,32),(8639,2927,5),(8640,2927,36),(8641,2928,5),(8642,2928,36),(8643,2928,26),(8644,2929,5),(8645,2929,36),(8646,2929,26),(8647,2930,5),(8648,2930,4),(8649,2930,36),(8650,2931,1),(8651,2931,7),(8652,2931,6),(8653,2931,17),(8654,2931,11),(8655,2932,1),(8656,2932,3),(8657,2932,14),(8658,2932,33),(8659,2932,23),(8660,2933,1),(8661,2933,3),(8662,2933,2),(8663,2933,6),(8664,2934,1),(8665,2934,26),(8666,2935,1),(8667,2935,3),(8668,2935,14),(8669,2935,33),(8670,2935,23),(8671,2936,1),(8672,2936,10),(8673,2936,50),(8674,2937,2),(8675,2938,15),(8676,2938,2),(8677,2938,7),(8678,2939,5),(8679,2939,7),(8680,2939,14),(8681,2940,1),(8682,2940,10),(8683,2940,20),(8684,2940,39),(8685,2940,32),(8686,2940,17),(8687,2940,31),(8688,2941,1),(8689,2941,5),(8690,2941,10),(8691,2941,30),(8692,2942,1),(8693,2942,2),(8694,2943,1),(8695,2943,6),(8696,2944,1),(8697,2944,4),(8698,2944,37),(8699,2944,17),(8700,2944,52),(8701,2945,1),(8702,2945,10),(8703,2945,4),(8704,2945,20),(8705,2945,37),(8706,2945,31),(8707,2945,52),(8708,2946,1),(8709,2946,5),(8710,2946,11),(8711,2946,19),(8712,2947,3),(8713,2947,5),(8714,2947,2),(8715,2947,26),(8716,2947,30),(8717,2947,16),(8718,2948,1),(8719,2948,27),(8720,2948,6),(8721,2949,3),(8722,2949,5),(8723,2949,2),(8724,2949,30),(8725,2949,16),(8726,2950,3),(8727,2950,2),(8728,2950,22),(8729,2950,16),(8730,2951,1),(8731,2951,26),(8732,2952,1),(8733,2952,7),(8734,2952,6),(8735,2953,3),(8736,2953,2),(8737,2953,23),(8738,2954,1),(8739,2954,5),(8740,2954,36),(8741,2955,1),(8742,2955,3),(8743,2955,2),(8744,2955,22),(8745,2955,16),(8746,2956,1),(8747,2956,3),(8748,2957,2),(8749,2957,4),(8750,2957,7),(8751,2958,1),(8752,2958,3),(8753,2958,23),(8754,2959,14),(8755,2959,21),(8756,2959,17),(8757,2959,26),(8758,2959,47),(8759,2960,1),(8760,2960,19),(8761,2960,22),(8762,2961,1),(8763,2961,5),(8764,2961,19),(8765,2962,1),(8766,2962,23),(8767,2963,1),(8768,2963,3),(8769,2963,5),(8770,2963,36),(8771,2964,1),(8772,2964,3),(8773,2965,1),(8774,2965,3),(8775,2965,5),(8776,2965,11),(8777,2966,1),(8778,2966,7),(8779,2966,6),(8780,2967,1),(8781,2967,5),(8782,2967,10),(8783,2967,7),(8784,2967,6),(8785,2968,1),(8786,2968,10),(8787,2968,23),(8788,2968,6),(8789,2968,16),(8790,2969,1),(8791,2969,4),(8792,2969,37),(8793,2969,17),(8794,2969,52),(8795,2970,1),(8796,2970,15),(8797,2970,10),(8798,2970,26),(8799,2971,1),(8800,2971,7),(8801,2971,6),(8802,2971,16),(8803,2972,1),(8804,2972,15),(8805,2972,10),(8806,2973,4),(8807,2973,12),(8808,2973,8),(8809,2973,6),(8810,2973,17),(8811,2974,1),(8812,2974,6),(8813,2974,17),(8814,2974,19),(8815,2975,1),(8816,2975,3),(8817,2975,26),(8818,2976,1),(8819,2976,2),(8820,2976,21),(8821,2976,47),(8822,2977,1),(8823,2977,2),(8824,2977,4),(8825,2977,21),(8826,2977,33),(8827,2977,47),(8828,2978,9),(8829,2979,5),(8830,2979,4),(8831,2979,30),(8832,2980,1),(8833,2980,14),(8834,2981,3),(8835,2981,2),(8836,2981,10),(8837,2981,23),(8838,2981,22),(8839,2982,3),(8840,2982,2),(8841,2982,10),(8842,2982,23),(8843,2982,22),(8844,2983,3),(8845,2983,2),(8846,2983,16),(8847,2984,9),(8848,2985,9),(8849,2986,9),(8850,2987,9),(8851,2988,9),(8852,2989,9),(8853,2990,9),(8854,2991,9),(8855,2992,1),(8856,2992,4),(8857,2992,25),(8858,2992,14),(8859,2992,34),(8860,2993,9),(8861,2994,9),(8862,2995,9),(8863,2996,1),(8864,2996,3),(8865,2996,6),(8866,2997,1),(8867,2997,14),(8868,2998,4),(8869,2998,13),(8870,2998,44),(8871,2999,5),(8872,2999,2),(8873,2999,4),(8874,3000,1),(8875,3001,5),(8876,3001,26),(8877,3002,1),(8878,3002,3),(8879,3002,7),(8880,3003,2),(8881,3003,4),(8882,3003,14),(8883,3003,34),(8884,3004,1),(8885,3004,4),(8886,3004,12),(8887,3004,8),(8888,3005,1),(8889,3005,3),(8890,3005,22),(8891,3006,15),(8892,3006,2),(8893,3006,10),(8894,3006,48),(8895,3006,45),(8896,3006,43),(8897,3007,10),(8898,3007,4),(8899,3007,14),(8900,3008,15),(8901,3008,2),(8902,3008,10),(8903,3008,48),(8904,3008,45),(8905,3008,43),(8906,3009,1),(8907,3009,5),(8908,3009,39),(8909,3009,40),(8910,3010,1),(8911,3010,6),(8912,3010,26),(8913,3011,1),(8914,3011,14),(8915,3011,6),(8916,3012,1),(8917,3012,5),(8918,3012,7),(8919,3012,30),(8920,3013,1),(8921,3013,3),(8922,3013,23),(8923,3013,17),(8924,3014,5),(8925,3014,2),(8926,3014,7),(8927,3015,13),(8928,3015,21),(8929,3015,16),(8930,3016,3),(8931,3016,2),(8932,3016,7),(8933,3016,6),(8934,3016,22),(8935,3017,21),(8936,3017,16),(8937,3018,1),(8938,3018,4),(8939,3019,2),(8940,3020,1),(8941,3020,3),(8942,3020,26),(8943,3021,5),(8944,3022,1),(8945,3022,7),(8946,3022,14),(8947,3023,1),(8948,3023,23),(8949,3023,48),(8950,3023,45),(8951,3023,43),(8952,3024,1),(8953,3024,5),(8954,3024,6),(8955,3025,1),(8956,3025,5),(8957,3025,40),(8958,3025,6),(8959,3025,26),(8960,3026,1),(8961,3026,3),(8962,3026,16),(8963,3027,1),(8964,3027,5),(8965,3027,40),(8966,3027,6),(8967,3027,26),(8968,3028,1),(8969,3028,19),(8970,3028,16),(8971,3029,2),(8972,3029,48),(8973,3029,45),(8974,3029,43),(8975,3030,1),(8976,3030,11),(8977,3031,2),(8978,3031,48),(8979,3031,45),(8980,3031,43),(8981,3032,3),(8982,3032,5),(8983,3032,4),(8984,3033,1),(8985,3033,11),(8986,3034,1),(8987,3034,48),(8988,3034,45),(8989,3034,43),(8990,3035,1),(8991,3035,3),(8992,3035,2),(8993,3035,7),(8994,3035,6),(8995,3035,22),(8996,3036,1),(8997,3036,48),(8998,3036,45),(8999,3036,43),(9000,3037,1),(9001,3037,23),(9002,3037,48),(9003,3037,45),(9004,3037,43),(9005,3038,1),(9006,3038,19),(9007,3039,1),(9008,3039,3),(9009,3039,6),(9010,3039,22),(9011,3040,1),(9012,3040,4),(9013,3040,44),(9014,3041,1),(9015,3041,4),(9016,3041,6),(9017,3042,1),(9018,3042,2),(9019,3042,33),(9020,3042,48),(9021,3042,45),(9022,3042,43),(9023,3043,1),(9024,3043,3),(9025,3043,2),(9026,3043,33),(9027,3044,1),(9028,3044,3),(9029,3044,5),(9030,3044,11),(9031,3044,22),(9032,3044,26),(9033,3044,30),(9034,3045,1),(9035,3045,2),(9036,3045,33),(9037,3045,48),(9038,3045,45),(9039,3045,43),(9040,3046,1),(9041,3046,3),(9042,3046,22),(9043,3047,1),(9044,3047,5),(9045,3047,40),(9046,3048,1),(9047,3048,10),(9048,3049,1),(9049,3049,10),(9050,3049,7),(9051,3049,17),(9052,3050,9),(9053,3051,9),(9054,3052,9),(9055,3053,9),(9056,3054,9),(9057,3055,9),(9058,3056,9),(9059,3057,9),(9060,3058,9),(9061,3059,9),(9062,3060,9),(9063,3061,9),(9064,3062,28),(9065,3063,3),(9066,3063,28),(9067,3063,22),(9068,3064,14),(9069,3064,50),(9070,3065,1),(9071,3066,1),(9072,3066,17),(9073,3066,19),(9074,3067,1),(9075,3067,12),(9076,3067,8),(9077,3068,1),(9078,3068,4),(9079,3068,7),(9080,3068,14),(9081,3068,12),(9082,3068,6),(9083,3069,1),(9084,3069,19),(9085,3070,1),(9086,3070,11),(9087,3070,16),(9088,3071,1),(9089,3071,3),(9090,3071,11),(9091,3071,22),(9092,3072,1),(9093,3072,39),(9094,3072,32),(9095,3072,19),(9096,3073,1),(9097,3073,29),(9098,3074,1),(9099,3074,7),(9100,3074,6),(9101,3075,1),(9102,3075,7),(9103,3075,6),(9104,3076,1),(9105,3076,3),(9106,3076,2),(9107,3076,33),(9108,3077,1),(9109,3077,4),(9110,3077,16),(9111,3078,1),(9112,3078,3),(9113,3078,2),(9114,3078,11),(9115,3079,1),(9116,3079,5),(9117,3080,1),(9118,3080,3),(9119,3080,6),(9120,3080,17),(9121,3080,19),(9122,3081,3),(9123,3081,2),(9124,3081,7),(9125,3081,6),(9126,3081,17),(9127,3081,22),(9128,3082,1),(9129,3082,4),(9130,3083,3),(9131,3083,2),(9132,3084,5),(9133,3084,2),(9134,3084,22),(9135,3085,3),(9136,3085,2),(9137,3085,7),(9138,3085,6),(9139,3085,22),(9140,3086,1),(9141,3086,7),(9142,3086,23),(9143,3086,16),(9144,3087,9),(9145,3088,2),(9146,3088,7),(9147,3088,6),(9148,3088,57),(9149,3089,9),(9150,3090,3),(9151,3090,2),(9152,3090,23),(9153,3091,5),(9154,3091,7),(9155,3091,26),(9156,3092,1),(9157,3092,3),(9158,3092,17),(9159,3092,29),(9160,3093,1),(9161,3093,2),(9162,3093,33),(9163,3094,14),(9164,3094,50),(9165,3095,1),(9166,3095,14),(9167,3095,23),(9168,3096,1),(9169,3096,16),(9170,3097,1),(9171,3097,14),(9172,3097,23),(9173,3098,1),(9174,3098,4),(9175,3098,6),(9176,3099,5),(9177,3100,5),(9178,3100,19),(9179,3101,1),(9180,3101,5),(9181,3102,1),(9182,3102,5),(9183,3102,40),(9184,3102,6),(9185,3102,29),(9186,3103,9),(9187,3104,3),(9188,3104,2),(9189,3104,10),(9190,3104,16),(9191,3105,1),(9192,3106,2),(9193,3106,7),(9194,3107,1),(9195,3107,7),(9196,3107,6),(9197,3108,1),(9198,3108,14),(9199,3108,27),(9200,3108,21),(9201,3109,1),(9202,3109,10),(9203,3109,35),(9204,3109,39),(9205,3109,32),(9206,3109,55),(9207,3109,29),(9208,3110,2),(9209,3111,1),(9210,3111,7),(9211,3111,6),(9212,3112,1),(9213,3112,21),(9214,3112,17),(9215,3112,47),(9216,3113,1),(9217,3113,10),(9218,3113,20),(9219,3113,31),(9220,3114,2),(9221,3114,26),(9222,3115,1),(9223,3115,5),(9224,3115,30),(9225,3116,1),(9226,3116,5),(9227,3116,10),(9228,3116,14),(9229,3116,36),(9230,3116,30),(9231,3117,1),(9232,3117,10),(9233,3117,4),(9234,3117,14),(9235,3117,32),(9236,3117,37),(9237,3118,9),(9238,3119,2),(9239,3119,7),(9240,3119,6),(9241,3120,3),(9242,3120,2),(9243,3121,3),(9244,3121,2),(9245,3122,1),(9246,3122,4),(9247,3122,11),(9248,3123,8),(9249,3123,13),(9250,3123,21),(9251,3123,17),(9252,3123,47),(9253,3124,9),(9254,3125,2),(9255,3125,7),(9256,3125,6),(9257,3126,9),(9258,3127,1),(9259,3127,11),(9260,3127,26),(9261,3128,1),(9262,3128,3),(9263,3128,5),(9264,3128,36),(9265,3128,22),(9266,3129,4),(9267,3129,16),(9268,3130,4),(9269,3130,16),(9270,3131,1),(9271,3132,1),(9272,3132,15),(9273,3132,6),(9274,3132,26),(9275,3133,14),(9276,3134,1),(9277,3134,3),(9278,3134,10),(9279,3134,23),(9280,3135,2),(9281,3135,10),(9282,3135,4),(9283,3135,23),(9284,3135,43),(9285,3136,2),(9286,3137,3),(9287,3137,2),(9288,3137,22),(9289,3138,3),(9290,3138,2),(9291,3138,22),(9292,3139,1),(9293,3139,7),(9294,3139,26),(9295,3140,9),(9296,3141,1),(9297,3141,14),(9298,3141,13),(9299,3142,1),(9300,3142,11),(9301,3143,1),(9302,3143,3),(9303,3143,2),(9304,3143,10),(9305,3143,6),(9306,3144,3),(9307,3144,2),(9308,3144,4),(9309,3144,22),(9310,3145,1),(9311,3145,10),(9312,3145,14),(9313,3146,3),(9314,3146,2),(9315,3147,1),(9316,3147,16),(9317,3148,1),(9318,3148,4),(9319,3148,11),(9320,3149,1),(9321,3149,4),(9322,3149,14),(9323,3149,34),(9324,3150,9),(9325,3151,1),(9326,3152,1),(9327,3152,10),(9328,3152,16),(9329,3153,1),(9330,3153,3),(9331,3153,5),(9332,3153,22),(9333,3154,5),(9334,3154,4),(9335,3154,14),(9336,3154,44),(9337,3154,36),(9338,3155,1),(9339,3155,5),(9340,3155,10),(9341,3156,9),(9342,3157,12),(9343,3157,8),(9344,3157,13),(9345,3157,18),(9346,3158,1),(9347,3158,3),(9348,3158,14),(9349,3159,1),(9350,3159,3),(9351,3160,1),(9352,3160,3),(9353,3160,19),(9354,3161,1),(9355,3161,10),(9356,3161,39),(9357,3161,32),(9358,3162,1),(9359,3162,3),(9360,3163,2),(9361,3164,1),(9362,3164,3),(9363,3165,1),(9364,3165,35),(9365,3165,4),(9366,3165,32),(9367,3166,9),(9368,3167,3),(9369,3167,2),(9370,3167,6),(9371,3167,22),(9372,3168,2),(9373,3168,19),(9374,3169,1),(9375,3169,6),(9376,3170,3),(9377,3170,2),(9378,3170,20),(9379,3170,7),(9380,3170,17),(9381,3171,1),(9382,3171,10),(9383,3171,14),(9384,3171,32),(9385,3172,9),(9386,3173,1),(9387,3173,14),(9388,3174,2),(9389,3174,20),(9390,3174,19),(9391,3175,1),(9392,3175,19),(9393,3176,1),(9394,3176,3),(9395,3176,4),(9396,3177,1),(9397,3177,3),(9398,3177,4),(9399,3178,5),(9400,3178,19),(9401,3179,1),(9402,3179,5),(9403,3179,19),(9404,3179,36),(9405,3179,16),(9406,3180,1),(9407,3180,4),(9408,3181,1),(9409,3181,4),(9410,3181,14),(9411,3182,9),(9412,3183,1),(9413,3183,4),(9414,3184,1),(9415,3184,3),(9416,3184,22),(9417,3185,1),(9418,3185,3),(9419,3185,22),(9420,3186,1),(9421,3186,3),(9422,3186,15),(9423,3186,10),(9424,3186,4),(9425,3186,6),(9426,3186,22),(9427,3187,1),(9428,3187,39),(9429,3187,32),(9430,3188,9),(9431,3189,1),(9432,3189,7),(9433,3189,6),(9434,3189,57),(9435,3190,1),(9436,3190,5),(9437,3191,1),(9438,3191,14),(9439,3191,37),(9440,3191,23),(9441,3191,16),(9442,3192,1),(9443,3192,4),(9444,3192,7),(9445,3193,1),(9446,3193,4),(9447,3194,1),(9448,3194,15),(9449,3194,6),(9450,3195,1),(9451,3195,11),(9452,3196,1),(9453,3196,4),(9454,3197,1),(9455,3197,11),(9456,3197,26),(9457,3198,9),(9458,3199,1),(9459,3199,14),(9460,3200,1),(9461,3200,26),(9462,3201,1),(9463,3201,4),(9464,3202,1),(9465,3202,4),(9466,3203,12),(9467,3203,8),(9468,3203,13),(9469,3203,21),(9470,3204,9),(9471,3205,1),(9472,3205,4),(9473,3205,20),(9474,3205,7),(9475,3205,31),(9476,3206,1),(9477,3206,23),(9478,3207,1),(9479,3207,7),(9480,3208,1),(9481,3208,23),(9482,3209,1),(9483,3209,10),(9484,3209,14),(9485,3209,32),(9486,3210,2),(9487,3211,2),(9488,3211,25),(9489,3211,14),(9490,3212,1),(9491,3212,11),(9492,3212,16),(9493,3213,1),(9494,3213,2),(9495,3213,4),(9496,3213,62),(9497,3214,9),(9498,3215,1),(9499,3215,14),(9500,3216,2),(9501,3216,7),(9502,3217,1),(9503,3217,3),(9504,3217,28),(9505,3218,1),(9506,3218,4),(9507,3218,7),(9508,3218,6),(9509,3219,1),(9510,3219,7),(9511,3219,6),(9512,3220,9),(9513,3221,1),(9514,3221,20),(9515,3221,7),(9516,3221,31),(9517,3222,5),(9518,3222,19),(9519,3222,49),(9520,3223,3),(9521,3223,2),(9522,3223,22),(9523,3224,1),(9524,3224,3),(9525,3224,16),(9526,3225,1),(9527,3225,4),(9528,3225,11),(9529,3225,16),(9530,3226,14),(9531,3227,5),(9532,3227,2),(9533,3227,53),(9534,3227,49),(9535,3228,2),(9536,3228,7),(9537,3228,22),(9538,3229,1),(9539,3229,4),(9540,3229,20),(9541,3229,7),(9542,3229,31),(9543,3230,9),(9544,3231,1),(9545,3231,10),(9546,3232,1),(9547,3232,5),(9548,3233,1),(9549,3233,5),(9550,3233,30),(9551,3234,2),(9552,3234,23),(9553,3234,26),(9554,3235,1),(9555,3235,5),(9556,3235,8),(9557,3235,13),(9558,3235,27),(9559,3235,40),(9560,3236,9),(9561,3237,1),(9562,3237,3),(9563,3237,19),(9564,3238,1),(9565,3238,3),(9566,3238,22),(9567,3239,1),(9568,3239,15),(9569,3239,11),(9570,3240,1),(9571,3240,15),(9572,3240,11),(9573,3241,4),(9574,3241,12),(9575,3241,8),(9576,3241,21),(9577,3242,1),(9578,3242,3),(9579,3242,24),(9580,3242,11),(9581,3242,19),(9582,3243,1),(9583,3243,13),(9584,3243,21),(9585,3244,1),(9586,3244,7),(9587,3244,21),(9588,3244,29),(9589,3245,1),(9590,3245,39),(9591,3246,9),(9592,3247,1),(9593,3247,5),(9594,3247,4),(9595,3247,36),(9596,3248,1),(9597,3248,2),(9598,3248,19),(9599,3249,12),(9600,3249,8),(9601,3250,1),(9602,3250,5),(9603,3250,4),(9604,3250,36),(9605,3250,16),(9606,3251,1),(9607,3251,5),(9608,3251,4),(9609,3251,36),(9610,3251,16),(9611,3252,9),(9612,3254,1),(9613,3254,23),(9614,3255,1),(9615,3255,23),(9616,3256,1),(9617,3256,4),(9618,3256,11),(9619,3256,26),(9620,3257,1),(9621,3257,4),(9622,3257,11),(9623,3257,26),(9624,3258,2),(9625,3258,23),(9626,3259,1),(9627,3259,4),(9628,3260,5),(9629,3260,2),(9630,3260,4),(9631,3260,7),(9632,3260,30),(9633,3261,1),(9634,3261,2),(9635,3261,10),(9636,3261,23),(9637,3261,16),(9638,3262,9),(9639,3263,1),(9640,3263,28),(9641,3263,56),(9642,3264,1),(9643,3264,5),(9644,3264,17),(9645,3264,19),(9646,3265,1),(9647,3265,3),(9648,3265,6),(9649,3265,22),(9650,3265,26),(9651,3266,1),(9652,3266,17),(9653,3266,19),(9654,3267,1),(9655,3267,3),(9656,3267,6),(9657,3267,22),(9658,3267,26),(9659,3268,9),(9660,3269,1),(9661,3269,4),(9662,3270,5),(9663,3271,2),(9664,3271,19),(9665,3272,3),(9666,3272,5),(9667,3272,36),(9668,3272,26),(9669,3273,1),(9670,3273,7),(9671,3273,6),(9672,3274,5),(9673,3274,2),(9674,3275,1),(9675,3275,17),(9676,3276,1),(9677,3276,4),(9678,3276,14),(9679,3276,11),(9680,3276,34),(9681,3277,1),(9682,3277,4),(9683,3278,9),(9684,3279,1),(9685,3279,3),(9686,3279,2),(9687,3279,19),(9688,3279,22),(9689,3279,16),(9690,3280,5),(9691,3280,2),(9692,3281,1),(9693,3281,10),(9694,3281,7),(9695,3281,6),(9696,3282,1),(9697,3282,7),(9698,3283,1),(9699,3283,5),(9700,3283,14),(9701,3283,13),(9702,3283,49),(9703,3283,34),(9704,3284,1),(9705,3284,15),(9706,3284,4),(9707,3285,1),(9708,3286,1),(9709,3286,13),(9710,3286,21),(9711,3286,17),(9712,3286,11),(9713,3286,47),(9714,3287,1),(9715,3287,4),(9716,3287,14),(9717,3288,1),(9718,3288,10),(9719,3288,6),(9720,3289,1),(9721,3289,3),(9722,3289,5),(9723,3290,1),(9724,3290,4),(9725,3291,1),(9726,3291,2),(9727,3291,10),(9728,3291,4),(9729,3291,33),(9730,3291,32),(9731,3291,48),(9732,3291,45),(9733,3291,43),(9734,3292,1),(9735,3292,2),(9736,3292,10),(9737,3292,4),(9738,3292,32),(9739,3292,48),(9740,3292,45),(9741,3292,43),(9742,3293,9),(9743,3294,1),(9744,3294,28),(9745,3294,56),(9746,3295,1),(9747,3295,3),(9748,3295,2),(9749,3296,1),(9750,3296,5),(9751,3296,10),(9752,3296,7),(9753,3296,17),(9754,3297,3),(9755,3297,2),(9756,3297,23),(9757,3298,3),(9758,3298,2),(9759,3298,23),(9760,3299,1),(9761,3299,3),(9762,3299,4),(9763,3300,1),(9764,3300,5),(9765,3301,1),(9766,3301,7),(9767,3301,6),(9768,3302,15),(9769,3302,2),(9770,3302,4),(9771,3302,7),(9772,3303,2),(9773,3303,45),(9774,3304,5),(9775,3304,14),(9776,3304,38),(9777,3304,19),(9778,3305,3),(9779,3305,2),(9780,3305,23),(9781,3306,3),(9782,3306,2),(9783,3306,23),(9784,3307,5),(9785,3307,14),(9786,3307,38),(9787,3308,9),(9788,3309,1),(9789,3309,14),(9790,3309,26),(9791,3310,8),(9792,3310,13),(9793,3310,21),(9794,3311,1),(9795,3311,3),(9796,3311,21),(9797,3311,11),(9798,3312,1),(9799,3312,3),(9800,3312,5),(9801,3312,10),(9802,3312,36),(9803,3312,22),(9804,3312,30),(9805,3312,16),(9806,3313,12),(9807,3313,8),(9808,3314,1),(9809,3314,14),(9810,3315,1),(9811,3315,14),(9812,3316,1),(9813,3316,3),(9814,3316,15),(9815,3316,2),(9816,3316,4),(9817,3317,5),(9818,3317,4),(9819,3317,36),(9820,3318,1),(9821,3318,3),(9822,3318,23),(9823,3318,17),(9824,3319,12),(9825,3319,8),(9826,3319,6),(9827,3319,18),(9828,3320,2),(9829,3320,4),(9830,3321,1),(9831,3321,3),(9832,3321,23),(9833,3321,17),(9834,3322,9),(9835,3323,1),(9836,3323,10),(9837,3323,23),(9838,3323,6),(9839,3324,2),(9840,3324,19),(9841,3325,3),(9842,3325,2),(9843,3325,23),(9844,3326,1),(9845,3326,5),(9846,3326,7),(9847,3326,30),(9848,3327,1),(9849,3327,3),(9850,3327,2),(9851,3327,12),(9852,3327,8),(9853,3327,43),(9854,3328,9),(9855,3329,3),(9856,3329,2),(9857,3329,23),(9858,3330,2),(9859,3331,1),(9860,3331,3),(9861,3331,2),(9862,3331,12),(9863,3331,8),(9864,3332,1),(9865,3332,4),(9866,3332,11),(9867,3333,2),(9868,3333,4),(9869,3333,16),(9870,3334,1),(9871,3334,5),(9872,3334,30),(9873,3335,3),(9874,3335,5),(9875,3335,2),(9876,3335,4),(9877,3335,22),(9878,3336,1),(9879,3336,5),(9880,3336,4),(9881,3336,30),(9882,3337,3),(9883,3337,5),(9884,3337,2),(9885,3337,4),(9886,3337,22),(9887,3338,9),(9888,3339,4),(9889,3340,2),(9890,3341,1),(9891,3341,21),(9892,3341,17),(9893,3341,11),(9894,3341,47),(9895,3342,1),(9896,3342,21),(9897,3342,17),(9898,3342,11),(9899,3342,47),(9900,3343,5),(9901,3343,2),(9902,3343,4),(9903,3343,36),(9904,3344,10),(9905,3344,14),(9906,3345,5),(9907,3345,26),(9908,3346,1),(9909,3346,10),(9910,3346,23),(9911,3346,6),(9912,3346,16),(9913,3347,1),(9914,3347,10),(9915,3347,23),(9916,3347,6),(9917,3347,16),(9918,3348,5),(9919,3348,2),(9920,3348,25),(9921,3348,7),(9922,3348,30),(9923,3349,1),(9924,3350,1),(9925,3350,10),(9926,3351,1),(9927,3351,3),(9928,3351,4),(9929,3352,5),(9930,3352,2),(9931,3352,4),(9932,3352,36),(9933,3353,1),(9934,3354,1),(9935,3354,19),(9936,3354,16),(9937,3355,1),(9938,3355,16),(9939,3356,1),(9940,3356,10),(9941,3356,16),(9942,3357,1),(9943,3357,10),(9944,3357,7),(9945,3358,9),(9946,3359,1),(9947,3359,20),(9948,3359,11),(9949,3359,31),(9950,3360,5),(9951,3360,19),(9952,3361,1),(9953,3361,2),(9954,3361,16),(9955,3362,1),(9956,3362,7),(9957,3362,6),(9958,3362,17),(9959,3362,16),(9960,3363,1),(9961,3363,4),(9962,3363,11),(9963,3364,1),(9964,3364,23),(9965,3364,16),(9966,3365,3),(9967,3365,2),(9968,3365,6),(9969,3366,1),(9970,3366,4),(9971,3367,4),(9972,3367,12),(9973,3367,8),(9974,3368,9),(9975,3369,3),(9976,3369,10),(9977,3369,24),(9978,3369,37),(9979,3369,17),(9980,3369,51),(9981,3369,29),(9982,3370,5),(9983,3370,14),(9984,3371,1),(9985,3371,3),(9986,3371,22),(9987,3371,26),(9988,3372,12),(9989,3372,8),(9990,3372,13),(9991,3373,12),(9992,3373,8),(9993,3373,13),(9994,3374,9),(9995,3375,1),(9996,3375,3),(9997,3376,1),(9998,3376,4),(9999,3376,25),(10000,3376,14),(10001,3376,8),(10002,3376,34),(10003,3377,5),(10004,3377,21),(10005,3377,17),(10006,3377,30),(10007,3377,47),(10008,3378,1),(10009,3378,3),(10010,3378,5),(10011,3378,27),(10012,3378,30),(10013,3379,1),(10014,3379,19),(10015,3380,1),(10016,3380,5),(10017,3380,39),(10018,3380,32),(10019,3380,40),(10020,3380,6),(10021,3380,26),(10022,3381,1),(10023,3381,3),(10024,3381,16),(10025,3382,1),(10026,3382,5),(10027,3382,39),(10028,3382,32),(10029,3382,40),(10030,3382,6),(10031,3383,1),(10032,3383,8),(10033,3383,13),(10034,3383,27),(10035,3383,21),(10036,3383,46),(10037,3384,9),(10038,3385,1),(10039,3385,8),(10040,3385,21),(10041,3386,1),(10042,3387,1),(10043,3387,2),(10044,3387,8),(10045,3387,13),(10046,3387,21),(10047,3388,1),(10048,3388,4),(10049,3389,3),(10050,3389,2),(10051,3389,4),(10052,3389,22),(10053,3389,26),(10054,3390,9),(10055,3391,1),(10056,3391,3),(10057,3391,24),(10058,3391,17),(10059,3391,11),(10060,3391,29),(10061,3392,1),(10062,3393,1),(10063,3393,4),(10064,3393,14),(10065,3393,11),(10066,3394,1),(10067,3394,6),(10068,3395,1),(10069,3395,3),(10070,3395,5),(10071,3395,36),(10072,3396,1),(10073,3396,3),(10074,3397,1),(10075,3397,7),(10076,3397,6),(10077,3398,1),(10078,3398,10),(10079,3398,26),(10080,3399,2),(10081,3399,10),(10082,3400,1),(10083,3400,15),(10084,3400,19),(10085,3401,9),(10086,3402,1),(10087,3402,7),(10088,3402,11),(10089,3403,15),(10090,3403,2),(10091,3403,26),(10092,3404,1),(10093,3404,3),(10094,3404,5),(10095,3404,26),(10096,3405,5),(10097,3405,36),(10098,3406,15),(10099,3406,2),(10100,3407,2),(10101,3407,45),(10102,3408,3),(10103,3408,24),(10104,3408,17),(10105,3408,29),(10106,3409,1),(10107,3409,4),(10108,3410,1),(10109,3410,4),(10110,3410,32),(10111,3411,1),(10112,3411,5),(10113,3411,23),(10114,3411,26),(10115,3411,30),(10116,3412,3),(10117,3412,2),(10118,3412,20),(10119,3412,19),(10120,3413,1),(10121,3413,10),(10122,3413,7),(10123,3413,23),(10124,3413,6),(10125,3413,16),(10126,3414,1),(10127,3414,10),(10128,3414,4),(10129,3414,6),(10130,3415,9),(10131,3418,1),(10132,3418,4),(10133,3419,1),(10134,3419,137),(10135,3419,150),(10136,3419,74),(10137,3420,1),(10138,3420,7),(10139,3420,150),(10140,3420,74),(10141,3421,1),(10142,3421,150),(10143,3422,1),(10144,3422,150),(10145,3423,1),(10146,3423,6),(10147,3423,150),(10148,3423,74),(10149,3424,1),(10150,3424,137),(10151,3424,7),(10152,3424,150),(10153,3424,74),(10154,3425,1),(10155,3425,137),(10156,3425,6),(10157,3425,150),(10158,3425,74),(10159,3426,1),(10160,3426,7),(10161,3426,150),(10162,3426,74),(10163,3427,2),(10164,3427,20),(10165,3427,142),(10166,3427,150),(10167,3428,1),(10168,3428,35),(10169,3428,6),(10170,3428,150),(10171,3428,74),(10172,3429,16),(10173,3429,1),(10174,3429,150),(10175,3429,74),(10176,3430,41),(10177,3430,12),(10178,3430,150),(10179,3431,1),(10180,3431,137),(10181,3431,35),(10182,3431,150),(10183,3431,74),(10184,3432,1),(10185,3433,12),(10186,3433,150),(10187,3434,1),(10188,3434,3),(10189,3434,113),(10190,3434,150),(10191,3434,74),(10192,3435,1),(10193,3435,137),(10194,3435,150),(10195,3435,74),(10196,3436,8),(10197,3436,21),(10198,3436,27),(10199,3436,150),(10200,3436,74),(10201,3437,1),(10202,3437,7),(10203,3437,6),(10204,3437,10),(10205,3437,150),(10206,3437,74),(10207,3438,28),(10208,3438,15),(10209,3438,150),(10210,3438,74),(10211,3439,1),(10212,3439,6),(10213,3439,15),(10214,3440,4),(10215,3440,74),(10216,3441,4),(10217,3441,74),(10218,3442,28),(10219,3442,15),(10220,3442,150),(10221,3442,74),(10222,3443,1),(10223,3443,4),(10224,3443,150),(10225,3443,74),(10226,3443,20),(10227,3443,15),(10228,3444,21),(10229,3444,13),(10230,3444,150),(10231,3444,74),(10232,3445,1),(10233,3445,150),(10234,3446,5),(10235,3447,21),(10236,3447,150),(10237,3448,1),(10238,3448,4),(10239,3448,150),(10240,3448,74),(10241,3449,20),(10242,3449,150),(10243,3450,3),(10244,3450,150),(10245,3450,74),(10246,3450,1),(10247,3451,12),(10248,3451,150),(10249,3452,79),(10250,3452,150),(10251,3453,137),(10252,3453,74),(10253,3454,28),(10254,3454,150),(10255,3455,1),(10256,3455,137),(10257,3455,150),(10258,3455,74),(10259,3456,137),(10260,3456,6),(10261,3456,74),(10262,3457,1),(10263,3457,137),(10264,3457,3),(10265,3457,10),(10266,3457,150),(10267,3457,74),(10268,3458,1),(10269,3458,137),(10270,3458,150),(10271,3458,74),(10272,3459,1),(10273,3459,150),(10274,3460,115),(10275,3460,74),(10276,3461,2),(10277,3461,150),(10278,3462,1),(10279,3462,150),(10280,3462,15),(10281,3463,1),(10282,3463,3),(10283,3463,6),(10284,3463,150),(10285,3463,74),(10286,3464,2),(10287,3464,6),(10288,3464,150),(10289,3464,74),(10290,3465,2),(10291,3465,150),(10292,3466,1),(10293,3466,3),(10294,3466,150),(10295,3467,23),(10296,3467,1),(10297,3467,37),(10298,3467,150),(10299,3467,74),(10300,3468,2),(10301,3468,150),(10302,3469,28),(10303,3469,150),(10304,3470,41),(10305,3470,12),(10306,3470,150),(10307,3471,28),(10308,3471,119),(10309,3471,150),(10310,3472,4),(10311,3472,5),(10312,3472,99),(10313,3472,74),(10314,3473,1),(10315,3473,3),(10316,3473,150),(10317,3474,3),(10318,3474,150),(10319,3475,1),(10320,3475,150),(10321,3476,15),(10322,3476,1),(10323,3476,137),(10324,3476,3),(10325,3476,6),(10326,3476,150),(10327,3476,74),(10328,3477,1),(10329,3477,3),(10330,3477,150),(10331,3478,1),(10332,3478,11),(10333,3478,150),(10334,3479,5),(10335,3479,38),(10336,3479,35),(10337,3479,74),(10338,3480,12),(10339,3480,150),(10340,3481,4),(10341,3481,10),(10342,3481,74),(10343,3482,5),(10344,3482,125),(10345,3482,74),(10346,3483,1),(10347,3483,150),(10348,3484,28),(10349,3484,150),(10350,3485,4),(10351,3485,5),(10352,3485,74),(10353,3486,25),(10354,3486,74),(10355,3487,15),(10356,3487,1),(10357,3487,3),(10358,3487,6),(10359,3487,150),(10360,3487,74),(10361,3488,1),(10362,3488,35),(10363,3488,150),(10364,3488,74),(10365,3488,10),(10366,3489,137),(10367,3489,10),(10368,3489,74),(10369,3490,2),(10370,3490,4),(10371,3490,119),(10372,3490,150),(10373,3490,74),(10374,3491,12),(10375,3491,150),(10376,3492,1),(10377,3492,11),(10378,3492,150),(10379,3493,8),(10380,3493,21),(10381,3493,150),(10382,3493,74),(10383,3494,7),(10384,3494,74),(10385,3495,28),(10386,3495,150),(10387,3496,7),(10388,3496,74),(10389,3497,1),(10390,3497,2),(10391,3497,150),(10392,3498,28),(10393,3498,150),(10394,3499,4),(10395,3499,74),(10396,3500,12),(10397,3500,150),(10398,3501,28),(10399,3501,150),(10400,3502,28),(10401,3502,150),(10402,3503,1),(10403,3503,20),(10404,3503,150),(10405,3504,1),(10406,3505,137),(10407,3505,5),(10408,3505,10),(10409,3505,74),(10410,3506,4),(10411,3506,74),(10412,3507,23),(10413,3507,3),(10414,3507,113),(10415,3507,142),(10416,3507,150),(10417,3507,74),(10418,3508,1),(10419,3508,6),(10420,3508,150),(10421,3508,74),(10422,3509,2),(10423,3509,150),(10424,3510,1),(10425,3510,137),(10426,3510,150),(10427,3510,74),(10428,3511,6),(10429,3511,74),(10430,3511,1),(10431,3512,12),(10432,3512,150),(10433,3513,1),(10434,3513,4),(10435,3513,7),(10436,3513,150),(10437,3513,74),(10438,3514,2),(10439,3514,38),(10440,3514,25),(10441,3514,150),(10442,3514,74),(10443,3515,28),(10444,3515,150),(10445,3516,12),(10446,3516,150),(10447,3517,1),(10448,3517,4),(10449,3517,150),(10450,3517,74),(10451,3518,1),(10452,3518,10),(10453,3518,150),(10454,3518,74),(10455,3519,1),(10456,3519,3),(10457,3519,150),(10458,3520,4),(10459,3520,7),(10460,3520,74),(10461,3521,1),(10462,3521,137),(10463,3521,150),(10464,3521,74),(10465,3522,1),(10466,3522,150),(10467,3523,3),(10468,3523,2),(10469,3523,150),(10470,3524,38),(10471,3524,74),(10472,3525,15),(10473,3525,1),(10474,3525,150),(10475,3525,74),(10476,3526,12),(10477,3526,150),(10478,3527,1),(10479,3527,150),(10480,3527,15),(10481,3528,6),(10482,3528,10),(10483,3528,74),(10484,3529,1),(10485,3529,6),(10486,3529,150),(10487,3529,74),(10488,3530,2),(10489,3530,4),(10490,3530,150),(10491,3530,74),(10492,3531,21),(10493,3531,150),(10494,3532,28),(10495,3532,150),(10496,3533,20),(10497,3533,150),(10498,3534,137),(10499,3534,35),(10500,3534,74),(10501,3535,6),(10502,3535,74),(10503,3536,1),(10504,3536,150),(10505,3536,74),(10506,3537,2),(10507,3537,94),(10508,3537,150),(10509,3538,1),(10510,3538,137),(10511,3538,150),(10512,3538,74),(10513,3539,1),(10514,3539,150),(10515,3540,4),(10516,3540,143),(10517,3540,74),(10518,3541,4),(10519,3541,5),(10520,3541,74),(10521,3542,35),(10522,3542,6),(10523,3542,74),(10524,3543,137),(10525,3543,35),(10526,3543,74),(10527,3544,4),(10528,3544,74),(10529,3545,1),(10530,3545,20),(10531,3545,150),(10532,3546,6),(10533,3546,74),(10534,3547,28),(10535,3547,150),(10536,3548,2),(10537,3548,150),(10538,3549,1),(10539,3549,150),(10540,3550,2),(10541,3550,150),(10542,3551,37),(10543,3551,17),(10544,3551,150),(10545,3552,1),(10546,3552,4),(10547,3552,150),(10548,3552,74),(10549,3553,1),(10550,3553,6),(10551,3553,150),(10552,3553,74),(10553,3554,28),(10554,3554,150),(10555,3555,2),(10556,3555,4),(10557,3555,150),(10558,3555,74),(10559,3556,8),(10560,3556,21),(10561,3556,150),(10562,3556,74),(10563,3557,1),(10564,3557,137),(10565,3557,150),(10566,3557,74),(10567,3558,1),(10568,3558,150),(10569,3559,28),(10570,3559,150),(10571,3560,2),(10572,3560,5),(10573,3560,150),(10574,3560,74),(10575,3561,15),(10576,3561,1),(10577,3561,3),(10578,3561,150),(10579,3561,74),(10580,3562,38),(10581,3562,20),(10582,3562,12),(10583,3562,150),(10584,3562,74),(10585,3563,28),(10586,3563,150),(10587,3564,35),(10588,3564,6),(10589,3564,74),(10590,3565,4),(10591,3565,74),(10592,3566,12),(10593,3566,150),(10594,3567,1),(10595,3567,150),(10596,3568,28),(10597,3568,150),(10598,3569,12),(10599,3569,150),(10600,3570,79),(10601,3570,150),(10602,3571,3),(10603,3571,37),(10604,3571,150),(10605,3572,28),(10606,3572,150),(10607,3573,1),(10608,3573,150),(10609,3574,28),(10610,3574,150),(10611,3575,1),(10612,3575,37),(10613,3575,150),(10614,3576,79),(10615,3576,150),(10616,3577,15),(10617,3577,6),(10618,3577,74),(10619,3578,23),(10620,3578,4),(10621,3578,5),(10622,3578,74),(10623,3579,1),(10624,3579,3),(10625,3579,150),(10626,3580,4),(10627,3580,74),(10628,3581,41),(10629,3581,12),(10630,3581,150),(10631,3582,3),(10632,3582,6),(10633,3582,150),(10634,3582,74),(10635,3583,1),(10636,3583,20),(10637,3583,150),(10638,3584,6),(10639,3584,74),(10640,3585,21),(10641,3585,150),(10642,3585,74),(10643,3586,2),(10644,3586,150),(10645,3587,1),(10646,3587,150),(10647,3588,12),(10648,3588,150),(10649,3589,12),(10650,3589,150),(10651,3590,5),(10652,3590,74),(10653,3591,12),(10654,3591,150),(10655,3592,5),(10656,3592,74),(10657,3593,8),(10658,3593,21),(10659,3593,13),(10660,3593,150),(10661,3593,74),(10662,3594,2),(10663,3594,120),(10664,3594,94),(10665,3594,150),(10666,3594,101),(10667,3595,5),(10668,3595,74),(10669,3596,12),(10670,3596,150),(10671,3597,5),(10672,3597,74),(10673,3598,1),(10674,3598,122),(10675,3598,85),(10676,3598,150),(10677,3599,2),(10678,3599,150),(10679,3600,23),(10680,3600,15),(10681,3600,37),(10682,3600,150),(10683,3600,74),(10684,3601,1),(10685,3601,20),(10686,3601,150),(10687,3602,2),(10688,3602,38),(10689,3602,150),(10690,3602,74),(10691,3603,5),(10692,3603,74),(10693,3604,12),(10694,3604,150),(10695,3605,12),(10696,3605,150),(10697,3606,12),(10698,3606,150),(10699,3607,20),(10700,3607,150),(10701,3608,1),(10702,3608,150),(10703,3609,1),(10704,3609,6),(10705,3609,150),(10706,3609,74),(10707,3610,1),(10708,3610,6),(10709,3610,21),(10710,3610,150),(10711,3610,74),(10712,3611,16),(10713,3611,23),(10714,3611,114),(10715,3611,74),(10716,3612,15),(10717,3612,3),(10718,3612,2),(10719,3612,113),(10720,3612,150),(10721,3612,74),(10722,3613,23),(10723,3613,15),(10724,3613,1),(10725,3613,37),(10726,3613,150),(10727,3613,74),(10728,3614,144),(10729,3614,12),(10730,3614,150),(10731,3614,74),(10732,3615,79),(10733,3615,150),(10734,3616,23),(10735,3616,3),(10736,3616,2),(10737,3616,4),(10738,3616,150),(10739,3616,74),(10740,3617,28),(10741,3617,150),(10742,3618,20),(10743,3618,12),(10744,3618,150),(10745,3619,4),(10746,3619,74),(10747,3620,82),(10748,3620,28),(10749,3620,150),(10750,3621,5),(10751,3621,74),(10752,3622,41),(10753,3622,94),(10754,3622,150),(10755,3623,28),(10756,3623,150),(10757,3623,74),(10758,3624,6),(10759,3624,74),(10760,3625,5),(10761,3625,74),(10762,3626,137),(10763,3626,11),(10764,3626,150),(10765,3626,74),(10766,3627,1),(10767,3627,6),(10768,3627,17),(10769,3627,150),(10770,3627,74),(10771,3628,28),(10772,3628,20),(10773,3628,150),(10774,3629,56),(10775,3629,28),(10776,3629,150),(10777,3629,74),(10778,3630,1),(10779,3630,150),(10780,3631,1),(10781,3631,150),(10782,3632,12),(10783,3632,150),(10784,3633,41),(10785,3633,12),(10786,3633,150),(10787,3634,1),(10788,3634,20),(10789,3634,150),(10790,3635,28),(10791,3635,150),(10792,3636,1),(10793,3636,3),(10794,3636,150),(10795,3637,41),(10796,3637,12),(10797,3637,150),(10798,3637,6),(10799,3638,28),(10800,3638,12),(10801,3638,150),(10802,3639,4),(10803,3639,21),(10804,3639,150),(10805,3639,74),(10806,3640,4),(10807,3640,21),(10808,3640,150),(10809,3640,74),(10810,3641,56),(10811,3641,28),(10812,3641,150),(10813,3642,38),(10814,3642,74),(10815,3643,1),(10816,3643,137),(10817,3643,150),(10818,3643,74),(10819,3644,30),(10820,3644,2),(10821,3644,84),(10822,3644,150),(10823,3645,12),(10824,3645,150),(10825,3646,4),(10826,3646,1),(10827,3647,11),(10828,3647,21),(10829,3647,37),(10830,3647,150),(10831,3648,41),(10832,3648,12),(10833,3648,150),(10834,3649,121),(10835,3650,4),(10836,3650,74),(10837,3651,79),(10838,3651,150),(10839,3652,21),(10840,3652,150),(10841,3653,1),(10842,3653,4),(10843,3653,150),(10844,3653,74),(10845,3654,56),(10846,3654,3),(10847,3654,37),(10848,3654,94),(10849,3654,150),(10850,3655,4),(10851,3655,74),(10852,3656,1),(10853,3656,150),(10854,3657,4),(10855,3657,74),(10856,3658,4),(10857,3658,74),(10858,3659,1),(10859,3659,150),(10860,3660,7),(10861,3660,21),(10862,3660,150),(10863,3660,74),(10864,3661,4),(10865,3661,74),(10866,3662,5),(10867,3662,74),(10868,3663,38),(10869,3663,20),(10870,3663,142),(10871,3663,150),(10872,3663,74),(10873,3664,21),(10874,3664,47),(10875,3664,150),(10876,3664,74),(10877,3665,20),(10878,3665,37),(10879,3665,94),(10880,3665,150),(10881,3666,1),(10882,3666,6),(10883,3666,10),(10884,3666,150),(10885,3666,74),(10886,3667,1),(10887,3667,150),(10888,3668,38),(10889,3668,74),(10890,3669,102),(10891,3670,28),(10892,3670,150),(10893,3671,12),(10894,3671,150),(10895,3672,5),(10896,3672,74),(10897,3673,1),(10898,3673,150),(10899,3674,2),(10900,3674,6),(10901,3674,21),(10902,3674,150),(10903,3674,74),(10904,3675,79),(10905,3675,150),(10906,3676,25),(10907,3676,74),(10908,3677,2),(10909,3677,150),(10910,3678,28),(10911,3678,6),(10912,3678,150),(10913,3678,74),(10914,3679,12),(10915,3679,150),(10916,3680,137),(10917,3680,74),(10918,3681,10),(10919,3681,74),(10920,3681,7),(10921,3682,28),(10922,3682,150),(10923,3683,7),(10924,3683,5),(10925,3683,74),(10926,3684,2),(10927,3684,150),(10928,3684,3),(10929,3685,1),(10930,3685,150),(10931,3686,20),(10932,3686,37),(10933,3686,142),(10934,3686,150),(10935,3687,4),(10936,3687,74),(10937,3688,37),(10938,3688,150),(10939,3689,20),(10940,3689,37),(10941,3689,150),(10942,3690,23),(10943,3690,15),(10944,3690,2),(10945,3690,4),(10946,3690,74),(10947,3691,1),(10948,3691,3),(10949,3691,150),(10950,3692,1),(10951,3692,150),(10952,3693,28),(10953,3693,150),(10954,3694,56),(10955,3694,150),(10956,3695,5),(10957,3695,35),(10958,3695,74),(10959,3696,1),(10960,3696,137),(10961,3696,150),(10962,3696,74),(10963,3696,10),(10964,3697,1),(10965,3697,150),(10966,3697,16),(10967,3697,23),(10968,3698,4),(10969,3698,11),(10970,3698,150),(10971,3698,74),(10972,3699,2),(10973,3699,4),(10974,3699,150),(10975,3699,74),(10976,3700,8),(10977,3700,21),(10978,3700,150),(10979,3700,74),(10980,3701,38),(10981,3701,20),(10982,3701,142),(10983,3701,150),(10984,3701,74),(10985,3702,1),(10986,3702,150),(10987,3702,23),(10988,3703,4),(10989,3703,5),(10990,3703,74),(10991,3704,1),(10992,3704,21),(10993,3704,13),(10994,3704,150),(10995,3704,74),(10996,3705,28),(10997,3705,15),(10998,3705,150),(10999,3705,74),(11000,3706,2),(11001,3706,4),(11002,3706,20),(11003,3706,150),(11004,3706,74),(11005,3707,20),(11006,3707,37),(11007,3707,150),(11008,3708,3),(11009,3708,142),(11010,3708,150),(11011,3709,1),(11012,3709,3),(11013,3709,150),(11014,3710,4),(11015,3710,74),(11016,3711,1),(11017,3711,150),(11018,3712,1),(11019,3712,137),(11020,3712,150),(11021,3712,74),(11022,3713,2),(11023,3713,150),(11024,3714,1),(11025,3714,137),(11026,3714,150),(11027,3714,74),(11028,3715,41),(11029,3715,150),(11030,3716,12),(11031,3716,150),(11032,3717,2),(11033,3717,20),(11034,3717,150),(11035,3717,15),(11036,3718,11),(11037,3718,10),(11038,3718,150),(11039,3718,74),(11040,3719,41),(11041,3719,12),(11042,3719,150),(11043,3720,28),(11044,3720,150),(11045,3721,115),(11046,3721,74),(11047,3721,38),(11048,3722,12),(11049,3722,150),(11050,3723,137),(11051,3723,11),(11052,3723,150),(11053,3723,74),(11054,3724,41),(11055,3724,150),(11056,3725,137),(11057,3725,4),(11058,3725,35),(11059,3725,10),(11060,3725,74),(11061,3726,12),(11062,3726,150),(11063,3727,2),(11064,3727,4),(11065,3727,150),(11066,3727,74),(11067,3728,1),(11068,3728,150),(11069,3728,74),(11070,3728,10),(11071,3729,2),(11072,3729,150),(11073,3730,38),(11074,3730,8),(11075,3730,11),(11076,3730,21),(11077,3730,150),(11078,3730,74),(11079,3731,23),(11080,3731,3),(11081,3731,150),(11082,3731,74),(11083,3732,17),(11084,3732,94),(11085,3732,150),(11086,3733,4),(11087,3733,74),(11088,3734,12),(11089,3734,150),(11090,3734,38),(11091,3734,1),(11092,3734,41),(11093,3735,4),(11094,3735,74),(11095,3736,23),(11096,3736,2),(11097,3736,150),(11098,3736,74),(11099,3737,5),(11100,3737,38),(11101,3737,74),(11102,3738,1),(11103,3738,11),(11104,3738,150),(11105,3739,6),(11106,3739,74),(11107,3740,12),(11108,3740,150),(11109,3741,1),(11110,3741,150),(11111,3742,6),(11112,3742,1),(11113,3743,82),(11114,3743,28),(11115,3743,150),(11116,3744,6),(11117,3744,17),(11118,3744,150),(11119,3744,74),(11120,3745,21),(11121,3745,13),(11122,3745,74),(11123,3746,4),(11124,3746,7),(11125,3746,74),(11126,3747,3),(11127,3747,2),(11128,3747,150),(11129,3748,41),(11130,3748,150),(11131,3749,102),(11132,3750,1),(11133,3750,3),(11134,3750,150),(11135,3751,28),(11136,3751,150),(11137,3752,12),(11138,3752,150),(11139,3753,1),(11140,3754,79),(11141,3754,150),(11142,3755,74),(11143,3755,4),(11144,3756,1),(11145,3756,150),(11146,3756,74),(11147,3757,1),(11148,3757,4),(11149,3757,150),(11150,3757,74),(11151,3758,41),(11152,3758,150),(11153,3759,21),(11154,3759,37),(11155,3759,13),(11156,3759,150),(11157,3759,74),(11158,3760,38),(11159,3760,25),(11160,3760,74),(11161,3761,1),(11162,3761,150),(11163,3762,5),(11164,3762,79),(11165,3762,150),(11166,3762,74),(11167,3763,21),(11168,3763,150),(11169,3763,74),(11170,3763,4),(11171,3763,17),(11172,3764,1),(11173,3764,150),(11174,3765,1),(11175,3765,137),(11176,3765,150),(11177,3765,74),(11178,3766,8),(11179,3766,11),(11180,3766,21),(11181,3766,13),(11182,3766,150),(11183,3766,74),(11184,3767,1),(11185,3767,38),(11186,3767,150),(11187,3767,74),(11188,3768,1),(11189,3768,6),(11190,3768,150),(11191,3768,74),(11192,3769,1),(11193,3769,137),(11194,3769,150),(11195,3769,74),(11196,3770,2),(11197,3770,150),(11198,3771,12),(11199,3771,150),(11200,3772,129),(11201,3772,128),(11202,3773,1),(11203,3773,4),(11204,3773,150),(11205,3773,74),(11206,3774,4),(11207,3774,74),(11208,3774,1),(11209,3775,2),(11210,3775,4),(11211,3775,150),(11212,3775,74),(11213,3776,38),(11214,3776,11),(11215,3776,21),(11216,3776,150),(11217,3776,74),(11218,3777,1),(11219,3777,150),(11220,3778,1),(11221,3778,150),(11222,3778,5),(11223,3779,1),(11224,3779,4),(11225,3779,150),(11226,3779,74),(11227,3780,2),(11228,3780,150),(11229,3781,4),(11230,3781,20),(11231,3781,11),(11232,3781,150),(11233,3781,74),(11234,3782,15),(11235,3782,1),(11236,3782,7),(11237,3782,150),(11238,3782,74),(11239,3783,41),(11240,3783,12),(11241,3783,17),(11242,3783,150),(11243,3784,12),(11244,3784,150),(11245,3785,1),(11246,3785,150),(11247,3786,144),(11248,3786,12),(11249,3786,150),(11250,3786,74),(11251,3787,11),(11252,3787,150),(11253,3788,102),(11254,3789,1),(11255,3789,150),(11256,3790,4),(11257,3790,11),(11258,3790,150),(11259,3790,74),(11260,3791,20),(11261,3791,150),(11262,3792,38),(11263,3792,150),(11264,3792,74),(11265,3793,5),(11266,3793,125),(11267,3793,140),(11268,3793,74),(11269,3794,28),(11270,3794,150),(11271,3795,137),(11272,3795,3),(11273,3795,6),(11274,3795,150),(11275,3795,74),(11276,3796,5),(11277,3796,79),(11278,3796,150),(11279,3796,74),(11280,3797,5),(11281,3797,74),(11282,3798,12),(11283,3798,150),(11284,3799,1),(11285,3799,6),(11286,3799,17),(11287,3799,150),(11288,3799,74),(11289,3800,1),(11290,3800,150),(11291,3801,11),(11292,3801,150),(11293,3802,10),(11294,3802,74),(11295,3803,11),(11296,3803,150),(11297,3804,12),(11298,3804,150),(11299,3805,1),(11300,3805,150),(11301,3805,74),(11302,3805,23),(11303,3806,1),(11304,3806,2),(11305,3806,150),(11306,3807,86),(11307,3808,7),(11308,3808,74),(11309,3810,79),(11310,3810,150),(11311,3811,4),(11312,3811,74),(11313,3812,2),(11314,3812,20),(11315,3812,150),(11316,3813,5),(11317,3813,79),(11318,3813,150),(11319,3813,74),(11320,3814,12),(11321,3814,150),(11322,3815,1),(11323,3815,137),(11324,3815,150),(11325,3815,74),(11326,3816,11),(11327,3816,25),(11328,3816,150),(11329,3816,74),(11330,3817,2),(11331,3817,25),(11332,3817,150),(11333,3817,74),(11334,3818,2),(11335,3818,120),(11336,3818,150),(11337,3818,74),(11338,3819,4),(11339,3819,7),(11340,3819,74),(11341,3820,1),(11342,3820,150),(11343,3821,5),(11344,3821,74),(11345,3822,17),(11346,3822,94),(11347,3822,150),(11348,3824,12),(11349,3824,150),(11350,3825,1),(11351,3825,3),(11352,3825,150),(11353,3826,23),(11354,3826,1),(11355,3826,3),(11356,3826,2),(11357,3826,150),(11358,3826,74),(11359,3827,12),(11360,3827,13),(11361,3827,150),(11362,3827,74),(11363,3828,2),(11364,3828,4),(11365,3828,150),(11366,3828,74),(11367,3829,28),(11368,3829,150),(11369,3830,5),(11370,3830,74),(11371,3831,137),(11372,3831,35),(11373,3831,74),(11374,3832,5),(11375,3832,74),(11376,3833,5),(11377,3833,74),(11378,3834,41),(11379,3834,150),(11380,3835,1),(11381,3835,2),(11382,3835,5),(11383,3835,150),(11384,3835,74),(11385,3836,16),(11386,3836,23),(11387,3836,1),(11388,3836,3),(11389,3836,150),(11390,3836,74),(11391,3837,11),(11392,3837,21),(11393,3837,13),(11394,3837,150),(11395,3837,74),(11396,3838,41),(11397,3838,12),(11398,3838,150),(11399,3839,144),(11400,3839,41),(11401,3839,150),(11402,3839,74),(11403,3840,38),(11404,3840,20),(11405,3840,150),(11406,3840,74),(11407,3841,3),(11408,3841,2),(11409,3841,150),(11410,3842,119),(11411,3843,25),(11412,3843,74),(11413,3844,2),(11414,3844,150),(11415,3845,3),(11416,3845,2),(11417,3845,150),(11418,3846,28),(11419,3846,150),(11420,3847,4),(11421,3847,1),(11422,3848,1),(11423,3848,3),(11424,3848,6),(11425,3848,150),(11426,3848,74),(11427,3849,121),(11428,3849,38),(11429,3849,74),(11430,3850,1),(11431,3850,3),(11432,3850,6),(11433,3850,150),(11434,3850,74),(11435,3851,28),(11436,3851,150),(11437,3852,3),(11438,3852,2),(11439,3852,150),(11440,3853,15),(11441,3853,1),(11442,3853,150),(11443,3853,74),(11444,3854,1),(11445,3854,150),(11446,3855,1),(11447,3855,35),(11448,3855,150),(11449,3855,74),(11450,3856,1),(11451,3856,7),(11452,3856,6),(11453,3856,150),(11454,3856,74),(11455,3857,38),(11456,3857,74),(11457,3858,41),(11458,3858,150),(11459,3859,2),(11460,3859,4),(11461,3859,150),(11462,3859,74),(11463,3860,2),(11464,3860,5),(11465,3860,150),(11466,3860,74),(11467,3861,1),(11468,3861,137),(11469,3861,150),(11470,3861,74),(11471,3863,102),(11472,3864,5),(11473,3864,74),(11474,3865,28),(11475,3865,150),(11476,3866,1),(11477,3866,20),(11478,3866,150),(11479,3867,1),(11480,3867,150),(11481,3868,6),(11482,3868,74),(11483,3869,137),(11484,3869,74),(11485,3870,41),(11486,3870,12),(11487,3870,150),(11488,3871,28),(11489,3871,150),(11490,3872,1),(11491,3872,150),(11492,3872,5),(11493,3873,20),(11494,3873,150),(11495,3874,1),(11496,3874,150),(11497,3875,38),(11498,3875,74),(11499,3876,23),(11500,3876,3),(11501,3876,150),(11502,3876,74),(11503,3877,8),(11504,3877,21),(11505,3877,13),(11506,3877,150),(11507,3877,74),(11508,3878,12),(11509,3878,150),(11510,3879,8),(11511,3879,11),(11512,3879,21),(11513,3879,13),(11514,3879,150),(11515,3879,74),(11516,3880,2),(11517,3880,21),(11518,3880,150),(11519,3881,15),(11520,3881,1),(11521,3881,150),(11522,3881,74),(11523,3882,3),(11524,3882,2),(11525,3882,142),(11526,3882,150),(11527,3883,4),(11528,3883,1),(11529,3883,38),(11530,3884,4),(11531,3884,84),(11532,3884,74),(11533,3885,28),(11534,3885,115),(11535,3885,150),(11536,3885,74),(11537,3886,1),(11538,3886,5),(11539,3886,150),(11540,3886,74),(11541,3887,38),(11542,3887,8),(11543,3887,21),(11544,3887,25),(11545,3887,33),(11546,3887,150),(11547,3887,74),(11548,3887,73),(11549,3888,20),(11550,3888,142),(11551,3888,150),(11552,3889,5),(11553,3889,116),(11554,3889,74),(11555,3890,1),(11556,3890,35),(11557,3890,10),(11558,3891,28),(11559,3891,150),(11560,3892,4),(11561,3892,1),(11562,3892,150),(11563,3892,74),(11564,3893,28),(11565,3893,17),(11566,3893,150),(11567,3894,3),(11568,3894,2),(11569,3894,150),(11570,3895,1),(11571,3895,150),(11572,3895,74),(11573,3895,6),(11574,3896,12),(11575,3896,150),(11576,3897,2),(11577,3897,79),(11578,3897,150),(11579,3898,1),(11580,3898,137),(11581,3898,150),(11582,3898,74),(11583,3899,74),(11584,3899,1),(11585,3899,10),(11586,3899,150),(11587,3900,2),(11588,3900,4),(11589,3900,38),(11590,3900,150),(11591,3900,74),(11592,3901,5),(11593,3901,21),(11594,3901,47),(11595,3901,150),(11596,3901,74),(11597,3902,12),(11598,3902,150),(11599,3903,23),(11600,3903,1),(11601,3903,150),(11602,3903,74),(11603,3904,102),(11604,3905,79),(11605,3905,150),(11606,3906,4),(11607,3906,41),(11608,3906,150),(11609,3906,74),(11610,3907,7),(11611,3907,6),(11612,3907,74),(11613,3908,2),(11614,3908,150),(11615,3909,41),(11616,3909,12),(11617,3909,150),(11618,3910,12),(11619,3910,150),(11620,3911,41),(11621,3911,12),(11622,3911,150),(11623,3912,5),(11624,3912,74),(11625,3913,17),(11626,3913,150),(11627,3914,142),(11628,3915,12),(11629,3915,150),(11630,3915,38),(11631,3916,41),(11632,3916,12),(11633,3916,150),(11634,3917,12),(11635,3917,150),(11636,3918,8),(11637,3918,21),(11638,3918,150),(11639,3918,74),(11640,3919,1),(11641,3919,3),(11642,3919,150),(11643,3919,15),(11644,3920,5),(11645,3920,74),(11646,3921,28),(11647,3921,150),(11648,3921,38),(11649,3922,1),(11650,3922,137),(11651,3922,10),(11652,3922,150),(11653,3922,74),(11654,3923,2),(11655,3923,102),(11656,3923,150),(11657,3924,3),(11658,3924,2),(11659,3924,150),(11660,3925,1),(11661,3925,3),(11662,3925,79),(11663,3925,150),(11664,3926,1),(11665,3926,3),(11666,3926,6),(11667,3926,150),(11668,3926,74),(11669,3926,142),(11670,3926,113),(11671,3926,105),(11672,3927,86),(11673,3928,38),(11674,3928,8),(11675,3928,11),(11676,3928,150),(11677,3928,74),(11678,3929,4),(11679,3929,74),(11680,3929,38),(11681,3929,2),(11682,3930,1),(11683,3930,137),(11684,3930,10),(11685,3930,150),(11686,3930,74),(11687,3931,28),(11688,3931,150),(11689,3932,2),(11690,3932,5),(11691,3932,150),(11692,3932,74),(11693,3933,15),(11694,3933,1),(11695,3933,150),(11696,3933,74),(11697,3933,123),(11698,3934,1),(11699,3934,5),(11700,3934,150),(11701,3934,74),(11702,3935,1),(11703,3935,150),(11704,3936,7),(11705,3936,6),(11706,3936,74),(11707,3937,41),(11708,3937,12),(11709,3937,150),(11710,3938,1),(11711,3938,11),(11712,3938,150),(11713,3939,4),(11714,3939,7),(11715,3939,74),(11716,3940,1),(11717,3940,137),(11718,3940,150),(11719,3940,74),(11720,3941,5),(11721,3941,74),(11722,3942,1),(11723,3942,150),(11724,3943,1),(11725,3943,137),(11726,3943,10),(11727,3943,150),(11728,3943,74),(11729,3944,2),(11730,3944,150),(11731,3945,1),(11732,3945,3),(11733,3945,150),(11734,3946,1),(11735,3946,150),(11736,3947,8),(11737,3947,11),(11738,3947,21),(11739,3947,13),(11740,3947,150),(11741,3947,74),(11742,3948,5),(11743,3948,74),(11744,3949,12),(11745,3949,150),(11746,3950,7),(11747,3950,74),(11748,3951,1),(11749,3951,6),(11750,3951,10),(11751,3951,150),(11752,3951,74),(11753,3952,4),(11754,3952,74),(11755,3953,1),(11756,3953,150),(11757,3954,4),(11758,3954,74),(11759,3955,1),(11760,3955,142),(11761,3955,150),(11762,3956,8),(11763,3956,21),(11764,3956,13),(11765,3956,150),(11766,3956,74),(11767,3957,2),(11768,3957,150),(11769,3958,1),(11770,3958,2),(11771,3958,150),(11772,3960,21),(11773,3960,150),(11774,3961,12),(11775,3961,150),(11776,3962,1),(11777,3962,20),(11778,3962,150),(11779,3962,74),(11780,3963,28),(11781,3963,150),(11782,3964,137),(11783,3964,74),(11784,3965,1),(11785,3965,150),(11786,3966,12),(11787,3966,150),(11788,3967,11),(11789,3967,150),(11790,3968,1),(11791,3968,41),(11792,3968,150),(11793,3969,3),(11794,3969,2),(11795,3969,150),(11796,3970,106),(11797,3971,102),(11798,3972,102),(11799,3973,1),(11800,3973,86),(11801,3973,150),(11802,3974,1),(11803,3974,6),(11804,3974,150),(11805,3974,74),(11806,3975,2),(11807,3975,150),(11808,3976,28),(11809,3976,6),(11810,3976,55),(11811,3976,150),(11812,3976,74),(11813,3977,12),(11814,3977,150),(11815,3978,2),(11816,3978,150),(11817,3979,12),(11818,3979,150),(11819,3981,2),(11820,3981,102),(11821,3981,150),(11822,3982,1),(11823,3982,150),(11824,3983,1),(11825,3983,3),(11826,3983,150),(11827,3984,12),(11828,3984,150),(11829,3985,2),(11830,3985,4),(11831,3985,150),(11832,3985,74),(11833,3986,1),(11834,3986,150),(11835,3987,11),(11836,3987,150),(11837,3988,1),(11838,3988,4),(11839,3988,7),(11840,3988,150),(11841,3988,74),(11842,3989,4),(11843,3989,74),(11844,3990,20),(11845,3990,150),(11846,3991,1),(11847,3991,150),(11848,3991,55),(11849,3992,1),(11850,3992,10),(11851,3992,74),(11852,3992,142),(11853,3992,126),(11854,3993,79),(11855,3993,150),(11856,3994,1),(11857,3994,150),(11858,3995,4),(11859,3995,74),(11860,3996,10),(11861,3996,74),(11862,3997,4),(11863,3997,5),(11864,3997,74),(11865,3998,2),(11866,3998,20),(11867,3998,37),(11868,3998,150),(11869,3999,11),(11870,3999,21),(11871,3999,13),(11872,3999,150),(11873,3999,74),(11874,4000,8),(11875,4000,21),(11876,4000,13),(11877,4000,150),(11878,4000,74),(11879,4001,2),(11880,4001,120),(11881,4001,150),(11882,4001,74),(11883,4002,4),(11884,4002,5),(11885,4002,74),(11886,4003,4),(11887,4003,74),(11888,4004,5),(11889,4004,79),(11890,4004,78),(11891,4004,150),(11892,4004,74),(11893,4005,87),(11894,4005,86),(11895,4006,41),(11896,4006,12),(11897,4006,150),(11898,4007,21),(11899,4007,150),(11900,4008,21),(11901,4008,47),(11902,4008,150),(11903,4008,74),(11904,4009,2),(11905,4009,150),(11906,4009,74),(11907,4010,5),(11908,4010,79),(11909,4010,150),(11910,4010,74),(11911,4011,79),(11912,4011,150),(11913,4012,21),(11914,4012,74),(11915,4013,6),(11916,4013,1),(11917,4013,126),(11918,4014,2),(11919,4014,76),(11920,4014,150),(11921,4015,79),(11922,4015,150),(11923,4016,28),(11924,4016,150),(11925,4017,1),(11926,4017,150),(11927,4018,1),(11928,4018,6),(11929,4018,17),(11930,4018,150),(11931,4018,74),(11932,4019,21),(11933,4019,150),(11934,4020,11),(11935,4020,150),(11936,4021,1),(11937,4021,7),(11938,4021,6),(11939,4021,150),(11940,4021,74),(11941,4022,2),(11942,4022,150),(11943,4023,128),(11944,4024,2),(11945,4024,4),(11946,4024,150),(11947,4024,74),(11948,4025,86),(11949,4026,3),(11950,4026,150),(11951,4027,102),(11952,4028,5),(11953,4028,86),(11954,4028,74),(11955,4029,4),(11956,4029,38),(11957,4029,74),(11958,4030,3),(11959,4030,2),(11960,4030,150),(11961,4031,23),(11962,4031,1),(11963,4031,37),(11964,4031,150),(11965,4031,74),(11966,4032,5),(11967,4032,74),(11968,4033,137),(11969,4033,2),(11970,4033,120),(11971,4033,150),(11972,4033,74),(11973,4034,15),(11974,4034,1),(11975,4034,7),(11976,4034,150),(11977,4034,74),(11978,4035,7),(11979,4035,127),(11980,4035,74),(11981,4036,118),(11982,4037,3),(11983,4037,2),(11984,4037,150),(11985,4038,86),(11986,4039,33),(11987,4039,94),(11988,4039,73),(11989,4040,10),(11990,4040,5),(11991,4040,1),(11992,4040,150),(11993,4040,74),(11994,4041,2),(11995,4041,135),(11996,4041,150),(11997,4042,20),(11998,4042,142),(11999,4042,150),(12000,4043,5),(12001,4043,1),(12002,4044,86),(12003,4045,8),(12004,4045,21),(12005,4045,13),(12006,4045,150),(12007,4045,74),(12008,4046,4),(12009,4046,74),(12010,4047,1),(12011,4047,2),(12012,4047,5),(12013,4047,38),(12014,4047,25),(12015,4047,150),(12016,4047,74),(12017,4048,7),(12018,4048,74),(12019,4048,2),(12020,4048,85),(12021,4049,1),(12022,4049,137),(12023,4049,150),(12024,4049,74),(12025,4050,114),(12026,4051,144),(12027,4051,12),(12028,4051,150),(12029,4051,74),(12030,4052,28),(12031,4052,3),(12032,4052,6),(12033,4052,150),(12034,4052,74),(12035,4053,56),(12036,4053,15),(12037,4053,150),(12038,4053,74),(12039,4054,20),(12040,4054,150),(12041,4055,2),(12042,4055,150),(12043,4056,1),(12044,4056,79),(12045,4056,150),(12046,4057,129),(12047,4057,128),(12048,4058,4),(12049,4058,138),(12050,4058,115),(12051,4058,74),(12052,4059,1),(12053,4059,150),(12054,4059,7),(12055,4060,1),(12056,4060,6),(12057,4060,150),(12058,4060,74),(12059,4061,1),(12060,4061,137),(12061,4061,150),(12062,4061,74),(12063,4062,12),(12064,4062,150),(12065,4062,38),(12066,4062,74),(12067,4063,12),(12068,4063,150),(12069,4063,144),(12070,4063,74),(12071,4064,1),(12072,4064,3),(12073,4064,125),(12074,4064,150),(12075,4065,35),(12076,4065,10),(12077,4065,74),(12078,4065,30),(12079,4065,5),(12080,4065,115),(12081,4066,144),(12082,4066,41),(12083,4066,150),(12084,4066,74),(12085,4067,5),(12086,4067,74),(12087,4068,2),(12088,4068,38),(12089,4068,150),(12090,4068,74),(12091,4069,2),(12092,4069,150),(12093,4070,106),(12094,4070,30),(12095,4070,125),(12096,4071,3),(12097,4071,2),(12098,4071,150),(12099,4072,1),(12100,4072,150),(12101,4073,79),(12102,4073,150),(12103,4074,5),(12104,4074,138),(12105,4074,74),(12106,4075,21),(12107,4075,95),(12108,4075,150),(12109,4076,20),(12110,4076,41),(12111,4076,12),(12112,4076,150),(12113,4077,28),(12114,4077,55),(12115,4077,150),(12116,4077,74),(12117,4078,28),(12118,4078,150),(12119,4079,28),(12120,4079,150),(12121,4080,5),(12122,4080,74),(12123,4081,1),(12124,4081,3),(12125,4081,150),(12126,4082,56),(12127,4082,28),(12128,4082,150),(12129,4083,5),(12130,4083,140),(12131,4083,74),(12132,4084,11),(12133,4084,150),(12134,4085,1),(12135,4085,79),(12136,4085,150),(12137,4086,2),(12138,4086,6),(12139,4086,150),(12140,4086,74),(12141,4087,2),(12142,4087,150),(12143,4088,38),(12144,4088,74),(12145,4089,4),(12146,4089,99),(12147,4089,74),(12148,4090,1),(12149,4090,3),(12150,4090,6),(12151,4090,150),(12152,4090,74),(12153,4091,86),(12154,4092,28),(12155,4092,150),(12156,4093,28),(12157,4093,3),(12158,4093,6),(12159,4093,150),(12160,4093,74),(12161,4094,4),(12162,4094,74),(12163,4094,5),(12164,4095,21),(12165,4095,13),(12166,4095,150),(12167,4095,74),(12168,4096,12),(12169,4096,150),(12170,4097,11),(12171,4097,17),(12172,4097,150),(12173,4098,15),(12174,4098,1),(12175,4098,150),(12176,4098,74),(12177,4099,37),(12178,4099,12),(12179,4099,150),(12180,4099,28),(12181,4100,5),(12182,4100,74),(12183,4101,12),(12184,4101,150),(12185,4101,74),(12186,4102,1),(12187,4102,150),(12188,4103,2),(12189,4103,150),(12190,4104,4),(12191,4104,74),(12192,4104,1),(12193,4106,23),(12194,4106,1),(12195,4106,4),(12196,4106,150),(12197,4106,74),(12198,4107,4),(12199,4107,74),(12200,4108,41),(12201,4108,150),(12202,4109,2),(12203,4109,17),(12204,4109,150),(12205,4110,1),(12206,4110,3),(12207,4110,5),(12208,4110,150),(12209,4110,74),(12210,4111,1),(12211,4111,150),(12212,4112,28),(12213,4112,6),(12214,4112,150),(12215,4112,74),(12216,4113,7),(12217,4113,1),(12218,4114,1),(12219,4114,150),(12220,4115,41),(12221,4115,12),(12222,4115,150),(12223,4116,2),(12224,4116,4),(12225,4116,150),(12226,4116,74),(12227,4117,4),(12228,4117,74),(12229,4118,2),(12230,4118,20),(12231,4118,135),(12232,4118,150),(12233,4119,1),(12234,4119,6),(12235,4119,150),(12236,4119,74),(12237,4120,2),(12238,4120,4),(12239,4120,150),(12240,4120,74),(12241,4121,5),(12242,4121,74),(12243,4122,21),(12244,4122,47),(12245,4122,13),(12246,4122,95),(12247,4122,150),(12248,4122,74),(12249,4123,4),(12250,4123,5),(12251,4123,74),(12252,4124,1),(12253,4124,4),(12254,4124,150),(12255,4124,74),(12256,4125,41),(12257,4125,150),(12258,4126,82),(12259,4126,28),(12260,4126,150),(12261,4127,82),(12262,4127,28),(12263,4127,80),(12264,4127,150),(12265,4128,12),(12266,4128,150),(12267,4128,144),(12268,4128,74),(12269,4129,1),(12270,4129,3),(12271,4129,150),(12272,4129,16),(12273,4130,1),(12274,4130,79),(12275,4130,150),(12276,4131,1),(12277,4131,150),(12278,4131,96),(12279,4131,5),(12280,4132,4),(12281,4132,38),(12282,4132,11),(12283,4132,25),(12284,4132,150),(12285,4132,74),(12286,4133,12),(12287,4133,150),(12288,4134,11),(12289,4134,150),(12290,4135,7),(12291,4135,74),(12292,4136,1),(12293,4136,20),(12294,4136,150),(12295,4137,23),(12296,4137,15),(12297,4137,2),(12298,4137,150),(12299,4137,74),(12300,4138,1),(12301,4138,4),(12302,4138,11),(12303,4138,150),(12304,4138,74),(12305,4139,86),(12306,4139,118),(12307,4139,117),(12308,4140,79),(12309,4140,150),(12310,4141,28),(12311,4141,150),(12312,4142,1),(12313,4142,38),(12314,4142,150),(12315,4142,74),(12316,4143,2),(12317,4143,150),(12318,4143,74),(12319,4144,33),(12320,4144,73),(12321,4145,11),(12322,4145,150),(12323,4146,1),(12324,4146,140),(12325,4146,150),(12326,4146,74),(12327,4147,79),(12328,4147,150),(12329,4148,28),(12330,4148,150),(12331,4149,1),(12332,4149,150),(12333,4150,1),(12334,4150,3),(12335,4150,150),(12336,4151,1),(12337,4151,137),(12338,4151,10),(12339,4151,150),(12340,4151,74),(12341,4152,4),(12342,4152,74),(12343,4153,121),(12344,4154,4),(12345,4154,8),(12346,4154,21),(12347,4154,13),(12348,4154,150),(12349,4154,74),(12350,4155,28),(12351,4155,12),(12352,4155,150),(12353,4156,1),(12354,4156,150),(12355,4156,15),(12356,4157,2),(12357,4157,7),(12358,4157,85),(12359,4157,150),(12360,4157,74),(12361,4158,1),(12362,4158,7),(12363,4158,6),(12364,4158,150),(12365,4158,74),(12366,4159,30),(12367,4159,85),(12368,4159,125),(12369,4159,1),(12370,4160,1),(12371,4160,150),(12372,4161,38),(12373,4161,99),(12374,4161,74),(12375,4161,4),(12376,4162,2),(12377,4162,150),(12378,4163,79),(12379,4163,150),(12380,4164,1),(12381,4164,79),(12382,4164,150),(12383,4165,1),(12384,4165,150),(12385,4166,6),(12386,4166,1),(12387,4166,3),(12388,4167,21),(12389,4167,150),(12390,4168,12),(12391,4168,150),(12392,4169,28),(12393,4169,150),(12394,4170,5),(12395,4170,74),(12396,4171,5),(12397,4171,38),(12398,4171,74),(12399,4173,41),(12400,4173,12),(12401,4173,150),(12402,4174,11),(12403,4174,150),(12404,4175,125),(12405,4176,1),(12406,4176,137),(12407,4176,86),(12408,4176,150),(12409,4176,74),(12410,4177,1),(12411,4177,7),(12412,4177,6),(12413,4177,150),(12414,4177,74),(12415,4178,21),(12416,4178,150),(12417,4179,1),(12418,4179,5),(12419,4179,79),(12420,4179,150),(12421,4179,74),(12422,4180,1),(12423,4180,79),(12424,4180,150),(12425,4181,1),(12426,4181,6),(12427,4181,150),(12428,4181,74),(12429,4182,1),(12430,4182,5),(12431,4182,150),(12432,4182,74),(12433,4183,38),(12434,4183,8),(12435,4183,21),(12436,4183,25),(12437,4183,150),(12438,4183,74),(12439,4185,2),(12440,4185,78),(12441,4185,150),(12442,4186,5),(12443,4186,74),(12444,4187,30),(12445,4187,5),(12446,4187,11),(12447,4187,150),(12448,4187,74),(12449,4188,102),(12450,4189,137),(12451,4189,35),(12452,4189,74),(12453,4190,5),(12454,4190,125),(12455,4190,140),(12456,4190,74),(12457,4191,139),(12458,4191,11),(12459,4191,33),(12460,4191,150),(12461,4191,73),(12462,4192,79),(12463,4192,150),(12464,4193,1),(12465,4193,150),(12466,4193,55),(12467,4194,131),(12468,4194,128),(12469,4194,85),(12470,4195,2),(12471,4195,150),(12472,4196,1),(12473,4196,150),(12474,4197,41),(12475,4197,12),(12476,4197,150),(12477,4198,1),(12478,4198,5),(12479,4198,127),(12480,4198,150),(12481,4198,74),(12482,4199,1),(12483,4199,150),(12484,4199,10),(12485,4199,137),(12486,4200,4),(12487,4200,38),(12488,4200,74),(12489,4201,2),(12490,4201,20),(12491,4201,150),(12492,4202,1),(12493,4202,17),(12494,4202,150),(12495,4203,1),(12496,4203,150),(12497,4204,74),(12498,4204,4),(12499,4205,102),(12500,4205,142),(12501,4205,105),(12502,4206,28),(12503,4206,15),(12504,4206,150),(12505,4206,74),(12506,4207,37),(12507,4207,150),(12508,4209,21),(12509,4209,8),(12510,4209,13),(12511,4210,21),(12512,4210,150),(12513,4211,2),(12514,4211,150),(12515,4211,74),(12516,4212,139),(12517,4212,6),(12518,4212,113),(12519,4213,1),(12520,4213,150),(12521,4214,21),(12522,4214,13),(12523,4214,150),(12524,4214,74),(12525,4215,1),(12526,4215,125),(12527,4215,140),(12528,4215,150),(12529,4216,79),(12530,4216,150),(12531,4217,99),(12532,4218,38),(12533,4218,12),(12534,4218,150),(12535,4218,74),(12536,4219,1),(12537,4219,10),(12538,4219,150),(12539,4219,74),(12540,4220,1),(12541,4220,102),(12542,4220,150),(12543,4221,41),(12544,4221,150),(12545,4222,5),(12546,4222,40),(12547,4222,74),(12548,4223,5),(12549,4223,37),(12550,4223,142),(12551,4223,150),(12552,4223,74),(12553,4223,17),(12554,4224,8),(12555,4224,21),(12556,4224,13),(12557,4224,150),(12558,4224,74),(12559,4225,1),(12560,4225,7),(12561,4226,2),(12562,4226,150),(12563,4227,41),(12564,4227,150),(12565,4228,27),(12566,4228,74),(12567,4229,12),(12568,4229,150),(12569,4230,3),(12570,4230,5),(12571,4230,150),(12572,4230,74),(12573,4231,86),(12574,4231,101),(12575,4233,1),(12576,4233,150),(12577,4234,28),(12578,4234,150),(12579,4236,1),(12580,4236,6),(12581,4236,150),(12582,4236,74),(12583,4237,6),(12584,4237,74),(12585,4239,2),(12586,4239,150),(12587,4240,38),(12588,4240,12),(12589,4240,150),(12590,4240,74),(12591,4241,1),(12592,4241,113),(12593,4241,126),(12594,4241,150),(12595,4242,8),(12596,4242,21),(12597,4242,150),(12598,4242,74),(12599,4243,28),(12600,4243,119),(12601,4243,150),(12602,4244,2),(12603,4244,150),(12604,4245,79),(12605,4245,150),(12606,4246,5),(12607,4246,38),(12608,4246,74),(12609,4247,2),(12610,4247,33),(12611,4247,150),(12612,4247,73),(12613,4248,12),(12614,4248,150),(12615,4249,2),(12616,4249,150),(12617,4251,3),(12618,4251,6),(12619,4251,11),(12620,4251,150),(12621,4251,74),(12622,4252,23),(12623,4252,20),(12624,4252,150),(12625,4252,74),(12626,4253,2),(12627,4253,38),(12628,4253,150),(12629,4253,74),(12630,4254,27),(12631,4254,74),(12632,4255,5),(12633,4255,11),(12634,4255,115),(12635,4255,150),(12636,4255,74),(12637,4256,7),(12638,4256,20),(12639,4256,150),(12640,4256,74),(12641,4257,125),(12642,4257,116),(12643,4257,140),(12644,4258,12),(12645,4258,8),(12646,4258,1),(12647,4258,13),(12648,4259,8),(12649,4259,21),(12650,4259,150),(12651,4259,74),(12652,4260,4),(12653,4260,25),(12654,4260,74),(12655,4261,30),(12656,4262,1),(12657,4262,150),(12658,4263,4),(12659,4263,74),(12660,4264,12),(12661,4264,150),(12662,4265,1),(12663,4265,6),(12664,4265,17),(12665,4265,150),(12666,4265,74),(12667,4266,2),(12668,4266,6),(12669,4266,150),(12670,4266,74),(12671,4267,1),(12672,4267,6),(12673,4267,150),(12674,4267,74),(12675,4268,4),(12676,4268,74),(12677,4268,1),(12678,4268,150),(12679,4269,121),(12680,4270,38),(12681,4270,20),(12682,4270,101),(12683,4270,150),(12684,4270,74),(12685,4271,102),(12686,4272,15),(12687,4272,3),(12688,4273,1),(12689,4273,37),(12690,4273,17),(12691,4273,150),(12692,4274,1),(12693,4274,6),(12694,4274,150),(12695,4274,74),(12696,4275,2),(12697,4275,4),(12698,4275,150),(12699,4275,74),(12700,4276,30),(12701,4276,5),(12702,4276,74),(12703,4277,5),(12704,4277,74),(12705,4277,7),(12706,4277,1),(12707,4279,79),(12708,4279,150),(12709,4280,1),(12710,4280,150),(12711,4280,6),(12712,4281,5),(12713,4281,113),(12714,4282,1),(12715,4282,7),(12716,4282,150),(12717,4282,74),(12718,4283,1),(12719,4283,6),(12720,4283,74),(12721,4283,7),(12722,4284,5),(12723,4284,138),(12724,4284,140),(12725,4284,74),(12726,4285,41),(12727,4285,12),(12728,4285,150),(12729,4286,86),(12730,4286,102),(12731,4288,5),(12732,4288,40),(12733,4288,74),(12734,4289,1),(12735,4289,150),(12736,4290,5),(12737,4290,74),(12738,4291,1),(12739,4291,150),(12740,4292,11),(12741,4292,150),(12742,4293,6),(12743,4293,143),(12744,4293,25),(12745,4293,74),(12746,4294,3),(12747,4294,5),(12748,4294,38),(12749,4294,150),(12750,4294,74),(12751,4295,12),(12752,4295,150),(12753,4296,4),(12754,4296,38),(12755,4296,74),(12756,4297,79),(12757,4297,150),(12758,4298,4),(12759,4298,74),(12760,4299,1),(12761,4299,6),(12762,4299,150),(12763,4299,74),(12764,4300,137),(12765,4300,11),(12766,4300,150),(12767,4300,74),(12768,4301,4),(12769,4301,74),(12770,4302,121),(12771,4303,5),(12772,4303,74),(12773,4304,113),(12774,4304,33),(12775,4304,150),(12776,4304,73),(12777,4305,3),(12778,4305,2),(12779,4305,113),(12780,4305,150),(12781,4306,106),(12782,4307,116),(12783,4307,115),(12784,4307,74),(12785,4308,1),(12786,4308,5),(12787,4308,6),(12788,4308,150),(12789,4308,74),(12790,4309,5),(12791,4309,98),(12792,4309,74),(12793,4310,3),(12794,4310,2),(12795,4310,79),(12796,4310,150),(12797,4311,8),(12798,4311,21),(12799,4311,25),(12800,4311,150),(12801,4311,74),(12802,4312,5),(12803,4312,119),(12804,4312,74),(12805,4313,79),(12806,4313,150),(12807,4314,56),(12808,4314,28),(12809,4314,6),(12810,4314,55),(12811,4314,150),(12812,4314,74),(12813,4315,1),(12814,4315,137),(12815,4315,150),(12816,4315,74),(12817,4315,10),(12818,4315,3),(12819,4316,38),(12820,4316,25),(12821,4316,74),(12822,4317,1),(12823,4317,6),(12824,4317,150),(12825,4317,74),(12826,4317,116),(12827,4318,113),(12828,4318,150),(12829,4319,5),(12830,4319,38),(12831,4319,138),(12832,4319,74),(12833,4320,13),(12834,4320,21),(12835,4320,8),(12836,4320,150),(12837,4320,74),(12838,4321,28),(12839,4321,12),(12840,4321,150),(12841,4322,3),(12842,4322,2),(12843,4322,113),(12844,4322,150),(12845,4323,4),(12846,4323,25),(12847,4323,74),(12848,4324,1),(12849,4324,150),(12850,4325,12),(12851,4325,150),(12852,4325,74),(12853,4326,4),(12854,4326,74),(12855,4326,2),(12856,4326,150),(12857,4327,1),(12858,4327,17),(12859,4327,150),(12860,4328,11),(12861,4328,150),(12862,4329,5),(12863,4329,74),(12864,4330,137),(12865,4330,5),(12866,4330,97),(12867,4330,10),(12868,4330,74),(12869,4332,20),(12870,4332,12),(12871,4332,150),(12872,4333,1),(12873,4333,5),(12874,4333,140),(12875,4333,150),(12876,4333,74),(12877,4334,4),(12878,4334,74),(12879,4335,1),(12880,4335,150),(12881,4335,137),(12882,4335,74),(12883,4336,28),(12884,4336,150),(12885,4337,3),(12886,4337,150),(12887,4338,11),(12888,4338,8),(12889,4338,13),(12890,4338,27),(12891,4339,1),(12892,4339,4),(12893,4339,150),(12894,4339,74),(12895,4340,2),(12896,4340,150),(12897,4340,4),(12898,4341,2),(12899,4341,4),(12900,4341,109),(12901,4341,150),(12902,4341,74),(12903,4342,1),(12904,4342,150),(12905,4342,2),(12906,4342,3),(12907,4343,12),(12908,4343,77),(12909,4343,150),(12910,4343,73),(12911,4344,5),(12912,4344,79),(12913,4344,150),(12914,4344,74),(12915,4345,11),(12916,4345,150),(12917,4346,1),(12918,4346,4),(12919,4346,150),(12920,4346,74),(12921,4347,1),(12922,4347,150),(12923,4348,28),(12924,4348,150),(12925,4349,28),(12926,4349,150),(12927,4350,1),(12928,4350,38),(12929,4350,150),(12930,4350,74),(12931,4351,11),(12932,4351,150),(12933,4351,115),(12934,4351,74),(12935,4352,1),(12936,4352,3),(12937,4352,8),(12938,4352,21),(12939,4352,27),(12940,4352,150),(12941,4352,74),(12942,4353,2),(12943,4353,25),(12944,4353,150),(12945,4353,74),(12946,4354,3),(12947,4354,113),(12948,4354,150),(12949,4355,5),(12950,4355,79),(12951,4355,150),(12952,4355,74),(12953,4356,2),(12954,4356,113),(12955,4356,150),(12956,4357,5),(12957,4357,115),(12958,4357,74),(12959,4358,37),(12960,4358,150),(12961,4359,139),(12962,4359,1),(12963,4359,3),(12964,4359,113),(12965,4359,150),(12966,4360,12),(12967,4360,150),(12968,4361,3),(12969,4361,2),(12970,4361,119),(12971,4361,150),(12972,4362,16),(12973,4362,11),(12974,4362,109),(12975,4362,150),(12976,4362,74),(12977,4363,28),(12978,4363,150),(12979,4364,2),(12980,4364,33),(12981,4364,150),(12982,4364,73),(12983,4365,21),(12984,4365,150),(12985,4366,114),(12986,4366,11),(12987,4366,150),(12988,4367,5),(12989,4367,74),(12990,4368,12),(12991,4368,150),(12992,4369,2),(12993,4369,20),(12994,4369,150),(12995,4370,38),(12996,4370,20),(12997,4370,25),(12998,4370,150),(12999,4370,74),(13000,4372,86),(13001,4373,11),(13002,4373,150),(13003,4373,74),(13004,4374,17),(13005,4374,126),(13006,4374,150),(13007,4374,74),(13008,4375,1),(13009,4375,150),(13010,4376,38),(13011,4376,25),(13012,4376,74),(13013,4377,41),(13014,4377,12),(13015,4377,150),(13016,4378,79),(13017,4378,150),(13018,4379,28),(13019,4379,115),(13020,4379,150),(13021,4379,74),(13022,4380,5),(13023,4380,38),(13024,4380,74),(13025,4381,2),(13026,4381,7),(13027,4381,150),(13028,4381,74),(13029,4382,2),(13030,4382,150),(13031,4383,5),(13032,4383,122),(13033,4383,74),(13034,4384,4),(13035,4384,74),(13036,4384,1),(13037,4385,1),(13038,4385,150),(13039,4385,74),(13040,4386,12),(13041,4386,150),(13042,4387,1),(13043,4387,7),(13044,4387,35),(13045,4387,150),(13046,4387,74),(13047,4388,2),(13048,4388,150),(13049,4389,1),(13050,4389,150),(13051,4390,11),(13052,4390,150),(13053,4391,5),(13054,4391,74),(13055,4392,125),(13056,4392,140),(13057,4393,8),(13058,4393,21),(13059,4393,12),(13060,4393,150),(13061,4393,74),(13062,4394,2),(13063,4394,150),(13064,4395,11),(13065,4395,150),(13066,4396,87),(13067,4397,1),(13068,4397,5),(13069,4397,150),(13070,4397,74),(13071,4397,16),(13072,4398,21),(13073,4398,47),(13074,4398,13),(13075,4398,37),(13076,4398,150),(13077,4398,74),(13078,4399,28),(13079,4399,150),(13080,4400,2),(13081,4400,150),(13082,4401,20),(13083,4401,150),(13084,4402,12),(13085,4402,150),(13086,4403,1),(13087,4403,150),(13088,4403,3),(13089,4404,102),(13090,4404,37),(13091,4404,142),(13092,4404,105),(13093,4404,150),(13094,4406,56),(13095,4407,16),(13096,4407,3),(13097,4407,4),(13098,4407,11),(13099,4407,150),(13100,4407,74),(13101,4408,20),(13102,4408,12),(13103,4408,150),(13104,4409,8),(13105,4409,21),(13106,4410,1),(13107,4410,79),(13108,4410,150),(13109,4411,4),(13110,4411,74),(13111,4412,2),(13112,4412,102),(13113,4412,150),(13114,4413,20),(13115,4413,12),(13116,4413,150),(13117,4414,11),(13118,4414,33),(13119,4414,150),(13120,4414,73),(13121,4415,10),(13122,4415,1),(13123,4415,11),(13124,4417,4),(13125,4417,11),(13126,4417,150),(13127,4417,74),(13128,4418,5),(13129,4418,125),(13130,4418,140),(13131,4418,74),(13132,4419,1),(13133,4419,4),(13134,4419,150),(13135,4419,74),(13136,4420,2),(13137,4420,5),(13138,4420,150),(13139,4420,74),(13140,4421,2),(13141,4421,38),(13142,4421,150),(13143,4421,74),(13144,4422,113),(13145,4422,1),(13146,4422,150),(13147,4423,5),(13148,4423,74),(13149,4425,11),(13150,4425,150),(13151,4426,1),(13152,4426,20),(13153,4426,150),(13154,4427,7),(13155,4427,6),(13156,4427,74),(13157,4428,2),(13158,4428,150),(13159,4429,38),(13160,4429,25),(13161,4429,74),(13162,4430,2),(13163,4430,102),(13164,4430,150),(13165,4431,1),(13166,4431,150),(13167,4431,74),(13168,4432,38),(13169,4432,74),(13170,4433,15),(13171,4433,6),(13172,4433,74),(13173,4434,2),(13174,4434,150),(13175,4435,2),(13176,4435,17),(13177,4435,142),(13178,4435,150),(13179,4436,3),(13180,4436,2),(13181,4436,150),(13182,4437,1),(13183,4437,5),(13184,4437,150),(13185,4437,74),(13186,4438,28),(13187,4438,150),(13188,4439,107),(13189,4440,1),(13190,4440,3),(13191,4440,150),(13192,4441,21),(13193,4441,150),(13194,4442,23),(13195,4442,15),(13196,4442,1),(13197,4442,150),(13198,4442,74),(13199,4443,4),(13200,4443,8),(13201,4443,21),(13202,4443,150),(13203,4443,74),(13204,4444,2),(13205,4444,4),(13206,4444,150),(13207,4444,74),(13208,4445,28),(13209,4445,150),(13210,4446,20),(13211,4446,150),(13212,4447,41),(13213,4447,12),(13214,4447,150),(13215,4448,41),(13216,4448,150),(13217,4449,16),(13218,4449,1),(13219,4449,150),(13220,4449,74),(13221,4450,2),(13222,4450,6),(13223,4450,150),(13224,4450,74),(13225,4451,11),(13226,4451,150),(13227,4452,5),(13228,4452,74),(13229,4452,4),(13230,4452,1),(13231,4453,5),(13232,4453,74),(13233,4454,8),(13234,4454,21),(13235,4454,150),(13236,4454,74),(13237,4455,86),(13238,4456,102),(13239,4457,2),(13240,4457,119),(13241,4457,150),(13242,4457,74),(13243,4458,4),(13244,4458,38),(13245,4460,4),(13246,4460,11),(13247,4460,150),(13248,4460,74),(13249,4461,4),(13250,4461,74),(13251,4462,21),(13252,4462,13),(13253,4462,150),(13254,4462,74),(13255,4463,35),(13256,4463,74),(13257,4464,20),(13258,4464,37),(13259,4464,12),(13260,4464,142),(13261,4464,150),(13262,4465,5),(13263,4465,79),(13264,4466,2),(13265,4466,86),(13266,4466,150),(13267,4467,11),(13268,4467,150),(13269,4468,12),(13270,4468,150),(13271,4469,4),(13272,4469,74),(13273,4470,1),(13274,4470,5),(13275,4470,150),(13276,4470,74),(13277,4471,5),(13278,4471,74),(13279,4471,140),(13280,4472,79),(13281,4472,150),(13282,4473,2),(13283,4473,150),(13284,4474,144),(13285,4474,12),(13286,4474,150),(13287,4474,74),(13288,4475,16),(13289,4475,23),(13290,4475,1),(13291,4476,2),(13292,4476,38),(13293,4476,25),(13294,4476,150),(13295,4476,74),(13296,4477,11),(13297,4477,86),(13298,4477,150),(13299,4478,2),(13300,4478,7),(13301,4478,20),(13302,4478,150),(13303,4478,74),(13304,4480,1),(13305,4480,7),(13306,4480,6),(13307,4480,150),(13308,4480,74),(13309,4481,2),(13310,4481,20),(13311,4481,150),(13312,4482,4),(13313,4482,38),(13314,4482,25),(13315,4482,74),(13316,4483,2),(13317,4483,7),(13318,4483,150),(13319,4483,74),(13320,4484,121),(13321,4485,1),(13322,4485,4),(13323,4485,150),(13324,4485,74),(13325,4486,28),(13326,4486,150),(13327,4487,1),(13328,4487,3),(13329,4487,150),(13330,4488,7),(13331,4488,37),(13332,4489,4),(13333,4490,1),(13334,4490,150),(13335,4491,4),(13336,4491,74),(13337,4492,2),(13338,4492,7),(13339,4492,150),(13340,4492,74),(13341,4493,5),(13342,4493,74),(13343,4494,33),(13344,4494,73),(13345,4495,5),(13346,4495,38),(13347,4495,74),(13348,4495,4),(13349,4496,79),(13350,4496,49),(13351,4496,150),(13352,4497,12),(13353,4497,150),(13354,4498,131),(13355,4498,128),(13356,4499,12),(13357,4499,150),(13358,4500,41),(13359,4500,55),(13360,4500,144),(13361,4500,150),(13362,4501,1),(13363,4501,7),(13364,4501,6),(13365,4501,150),(13366,4501,74),(13367,4502,90),(13368,4503,1),(13369,4503,150),(13370,4503,3),(13371,4504,3),(13372,4504,2),(13373,4504,150),(13374,4505,1),(13375,4505,150),(13376,4506,5),(13377,4506,74),(13378,4507,2),(13379,4507,121),(13380,4507,150),(13381,4508,12),(13382,4508,38),(13383,4508,144),(13384,4508,150),(13385,4509,137),(13386,4509,74),(13387,4510,2),(13388,4510,150),(13389,4511,4),(13390,4511,7),(13391,4511,74),(13392,4512,6),(13393,4512,1),(13394,4514,137),(13395,4514,2),(13396,4514,150),(13397,4514,74),(13398,4515,5),(13399,4515,74),(13400,4516,88),(13401,4517,30),(13402,4517,5),(13403,4517,122),(13404,4517,74),(13405,4518,2),(13406,4518,150),(13407,4519,1),(13408,4519,6),(13409,4519,115),(13410,4519,150),(13411,4519,74),(13412,4520,21),(13413,4520,150),(13414,4521,10),(13415,4521,1),(13416,4522,38),(13417,4522,25),(13418,4522,74),(13419,4523,1),(13420,4523,150),(13421,4524,1),(13422,4524,79),(13423,4524,150),(13424,4525,1),(13425,4525,6),(13426,4525,111),(13427,4525,150),(13428,4525,74),(13429,4526,20),(13430,4526,142),(13431,4526,150),(13432,4527,5),(13433,4527,74),(13434,4528,137),(13435,4528,6),(13436,4528,74),(13437,4529,8),(13438,4529,21),(13439,4529,150),(13440,4529,74),(13441,4530,79),(13442,4530,150),(13443,4531,21),(13444,4531,8),(13445,4531,13),(13446,4532,6),(13447,4532,15),(13448,4532,1),(13449,4533,7),(13450,4533,74),(13451,4533,4),(13452,4533,38),(13453,4534,4),(13454,4534,38),(13455,4534,25),(13456,4534,74),(13457,4535,11),(13458,4535,150),(13459,4536,2),(13460,4536,5),(13461,4536,150),(13462,4536,74),(13463,4537,15),(13464,4537,1),(13465,4537,2),(13466,4537,150),(13467,4537,74),(13468,4538,1),(13469,4538,150),(13470,4540,41),(13471,4540,150),(13472,4541,1),(13473,4541,150),(13474,4541,3),(13475,4541,74),(13476,4542,2),(13477,4542,150),(13478,4543,2),(13479,4543,4),(13480,4543,79),(13481,4543,150),(13482,4543,74),(13483,4544,2),(13484,4544,150),(13485,4545,2),(13486,4545,150),(13487,4546,1),(13488,4546,150),(13489,4547,86),(13490,4547,100),(13491,4548,12),(13492,4548,150),(13493,4550,137),(13494,4550,11),(13495,4550,150),(13496,4550,74),(13497,4551,1),(13498,4551,10),(13499,4551,150),(13500,4551,74),(13501,4552,56),(13502,4552,28),(13503,4552,150),(13504,4553,86),(13505,4554,2),(13506,4554,150),(13507,4555,2),(13508,4555,150),(13509,4558,114),(13510,4558,11),(13511,4558,150),(13512,4559,87),(13513,4560,5),(13514,4560,74),(13515,4561,125),(13516,4561,140),(13517,4562,1),(13518,4562,5),(13519,4562,150),(13520,4562,74),(13521,4563,2),(13522,4563,150),(13523,4564,15),(13524,4564,1),(13525,4564,137),(13526,4565,4),(13527,4565,74),(13528,4566,2),(13529,4566,150),(13530,4567,1),(13531,4567,3),(13532,4567,7),(13533,4567,150),(13534,4567,74),(13535,4568,1),(13536,4568,140),(13537,4568,21),(13538,4568,150),(13539,4569,1),(13540,4569,17),(13541,4569,150),(13542,4570,23),(13543,4570,1),(13544,4571,1),(13545,4571,150),(13546,4571,74),(13547,4572,1),(13548,4572,150),(13549,4573,84),(13550,4573,5),(13551,4574,4),(13552,4574,74),(13553,4575,6),(13554,4575,74),(13555,4576,7),(13556,4576,79),(13557,4576,150),(13558,4576,74),(13559,4577,30),(13560,4577,5),(13561,4577,135),(13562,4577,74),(13563,4578,125),(13564,4578,74),(13565,4578,1),(13566,4578,140),(13567,4580,131),(13568,4580,128),(13569,4581,1),(13570,4581,150),(13571,4582,21),(13572,4582,150),(13573,4583,115),(13574,4583,74),(13575,4584,139),(13576,4584,1),(13577,4584,41),(13578,4584,150),(13579,4585,1),(13580,4585,10),(13581,4585,150),(13582,4585,74),(13583,4586,11),(13584,4586,150),(13585,4586,74),(13586,4587,1),(13587,4587,21),(13588,4587,150),(13589,4588,21),(13590,4588,25),(13591,4588,150),(13592,4588,74),(13593,4589,37),(13594,4589,12),(13595,4589,13),(13596,4589,150),(13597,4589,74),(13598,4590,2),(13599,4590,150),(13600,4591,28),(13601,4591,150),(13602,4592,2),(13603,4592,4),(13604,4592,150),(13605,4592,74),(13606,4593,41),(13607,4593,150),(13608,4594,125),(13609,4594,47),(13610,4594,13),(13611,4594,74),(13612,4595,2),(13613,4595,150),(13614,4596,2),(13615,4596,150),(13616,4597,16),(13617,4597,1),(13618,4597,150),(13619,4597,74),(13620,4598,16),(13621,4598,1),(13622,4599,1),(13623,4599,20),(13624,4599,150),(13625,4600,1),(13626,4600,150),(13627,4600,74),(13628,4601,1),(13629,4601,6),(13630,4601,150),(13631,4601,74),(13632,4602,1),(13633,4602,150),(13634,4603,1),(13635,4603,113),(13636,4604,108),(13637,4605,11),(13638,4605,100),(13639,4605,150),(13640,4605,74),(13641,4606,1),(13642,4606,4),(13643,4606,150),(13644,4606,74),(13645,4607,144),(13646,4607,74),(13647,4608,1),(13648,4608,150),(13649,4609,2),(13650,4609,150),(13651,4610,20),(13652,4610,150),(13653,4611,4),(13654,4611,3),(13655,4611,74),(13656,4612,5),(13657,4612,74),(13658,4613,1),(13659,4613,150),(13660,4614,12),(13661,4614,150),(13662,4614,27),(13663,4615,2),(13664,4616,38),(13665,4616,74),(13666,4617,1),(13667,4617,150),(13668,4618,1),(13669,4618,150),(13670,4618,23),(13671,4619,1),(13672,4619,4),(13673,4619,150),(13674,4619,74),(13675,4620,8),(13676,4620,11),(13677,4620,21),(13678,4620,13),(13679,4620,27),(13680,4620,150),(13681,4620,74),(13682,4621,4),(13683,4621,5),(13684,4621,74),(13685,4623,20),(13686,4623,37),(13687,4623,94),(13688,4623,150),(13689,4624,3),(13690,4624,6),(13691,4624,113),(13692,4624,150),(13693,4624,74),(13694,4625,25),(13695,4625,74),(13696,4626,20),(13697,4626,2),(13698,4627,28),(13699,4627,5),(13700,4627,150),(13701,4627,74),(13702,4628,108),(13703,4629,121),(13704,4630,12),(13705,4630,150),(13706,4631,5),(13707,4631,12),(13708,4631,150),(13709,4631,74),(13710,4632,2),(13711,4632,150),(13712,4633,1),(13713,4633,150),(13714,4634,5),(13715,4634,40),(13716,4634,74),(13717,4635,7),(13718,4635,5),(13719,4635,74),(13720,4636,28),(13721,4636,12),(13722,4636,150),(13723,4637,2),(13724,4637,21),(13725,4637,25),(13726,4637,150),(13727,4637,74),(13728,4638,1),(13729,4638,86),(13730,4638,150),(13731,4639,6),(13732,4639,15),(13733,4639,1),(13734,4639,3),(13735,4640,79),(13736,4640,150),(13737,4641,1),(13738,4641,3),(13739,4641,150),(13740,4642,4),(13741,4642,79),(13742,4642,150),(13743,4642,74),(13744,4643,41),(13745,4643,12),(13746,4643,150),(13747,4644,1),(13748,4644,150),(13749,4645,10),(13750,4645,79),(13751,4646,5),(13752,4646,99),(13753,4646,74),(13754,4647,86),(13755,4647,123),(13756,4648,1),(13757,4648,79),(13758,4648,6),(13759,4648,150),(13760,4648,74),(13761,4649,5),(13762,4649,74),(13763,4650,1),(13764,4650,150),(13765,4651,10),(13766,4651,150),(13767,4651,74),(13768,4652,28),(13769,4652,150),(13770,4653,12),(13771,4654,1),(13772,4655,5),(13773,4655,86),(13774,4655,74),(13775,4656,1),(13776,4656,20),(13777,4656,37),(13778,4656,101),(13779,4656,150),(13780,4657,1),(13781,4658,2),(13782,4658,20),(13783,4658,150),(13784,4659,131),(13785,4659,128),(13786,4660,28),(13787,4660,5),(13788,4660,125),(13789,4660,150),(13790,4660,74),(13791,4661,2),(13792,4661,4),(13793,4661,119),(13794,4661,150),(13795,4661,74),(13796,4663,1),(13797,4663,150),(13798,4664,4),(13799,4665,137),(13800,4665,74),(13801,4666,41),(13802,4666,12),(13803,4666,150),(13804,4667,1),(13805,4667,150),(13806,4668,11),(13807,4668,150),(13808,4669,5),(13809,4669,6),(13810,4669,40),(13811,4669,74),(13812,4670,40),(13813,4671,11),(13814,4671,150),(13815,4672,2),(13816,4672,4),(13817,4672,119),(13818,4672,142),(13819,4672,150),(13820,4672,74),(13821,4673,25),(13822,4673,74),(13823,4674,1),(13824,4674,3),(13825,4674,7),(13826,4674,6),(13827,4674,150),(13828,4674,74),(13829,4675,3),(13830,4675,2),(13831,4675,142),(13832,4675,150),(13833,4676,7),(13834,4677,4),(13835,4677,74),(13836,4678,4),(13837,4678,74),(13838,4679,4),(13839,4679,74),(13840,4680,28),(13841,4680,41),(13842,4680,12),(13843,4680,150),(13844,4681,7),(13845,4681,74),(13846,4681,37),(13847,4682,124),(13848,4682,79),(13849,4682,150),(13850,4683,20),(13851,4683,150),(13852,4684,1),(13853,4684,3),(13854,4684,6),(13855,4684,142),(13856,4684,150),(13857,4684,74),(13858,4685,1),(13859,4685,150),(13860,4686,30),(13861,4686,5),(13862,4686,74),(13863,4687,1),(13864,4687,4),(13865,4687,150),(13866,4687,74),(13867,4688,1),(13868,4688,7),(13869,4688,150),(13870,4688,74),(13871,4689,1),(13872,4689,150),(13873,4690,79),(13874,4690,150),(13875,4691,1),(13876,4691,137),(13877,4691,6),(13878,4691,86),(13879,4691,142),(13880,4691,150),(13881,4691,74),(13882,4692,1),(13883,4692,150),(13884,4693,28),(13885,4693,150),(13886,4694,8),(13887,4694,41),(13888,4694,150),(13889,4694,74),(13890,4695,1),(13891,4695,150),(13892,4696,4),(13893,4696,74),(13894,4697,74),(13895,4698,37),(13896,4698,150),(13897,4699,1),(13898,4699,3),(13899,4699,150),(13900,4700,88),(13901,4701,2),(13902,4701,86),(13903,4701,92),(13904,4701,150),(13905,4702,30),(13906,4702,5),(13907,4702,99),(13908,4702,74),(13909,4703,108),(13910,4704,113),(13911,4704,150),(13912,4705,20),(13913,4705,150),(13914,4706,79),(13915,4706,150),(13916,4706,74),(13917,4707,11),(13918,4707,85),(13919,4707,150),(13920,4708,1),(13921,4708,4),(13922,4708,150),(13923,4708,74),(13924,4709,1),(13925,4709,150),(13926,4710,4),(13927,4710,7),(13928,4710,6),(13929,4710,74),(13930,4711,2),(13931,4711,150),(13932,4712,1),(13933,4712,150),(13934,4713,2),(13935,4713,33),(13936,4713,150),(13937,4715,11),(13938,4715,150),(13939,4716,1),(13940,4716,3),(13941,4716,6),(13942,4716,150),(13943,4716,74),(13944,4717,11),(13945,4717,4),(13946,4717,79),(13947,4717,1),(13948,4717,150),(13949,4717,74),(13950,4718,5),(13951,4718,74),(13952,4719,5),(13953,4719,84),(13954,4719,74),(13955,4720,5),(13956,4720,116),(13957,4720,74),(13958,4721,32),(13959,4721,73),(13960,4722,133),(13961,4722,128),(13962,4723,17),(13963,4723,150),(13964,4724,10),(13965,4724,74),(13966,4725,5),(13967,4725,74),(13968,4726,4),(13969,4726,74),(13970,4727,1),(13971,4727,150),(13972,4728,144),(13973,4728,37),(13974,4728,12),(13975,4728,150),(13976,4728,74),(13977,4729,142),(13978,4731,4),(13979,4731,13),(13980,4731,74),(13981,4732,79),(13982,4732,150),(13983,4734,12),(13984,4734,150),(13985,4735,120),(13986,4736,1),(13987,4736,79),(13988,4736,150),(13989,4737,23),(13990,4737,2),(13991,4737,150),(13992,4737,74),(13993,4738,1),(13994,4738,3),(13995,4738,150),(13996,4739,12),(13997,4739,150),(13998,4740,15),(13999,4740,101),(14000,4740,74),(14001,4741,131),(14002,4741,128),(14003,4742,30),(14004,4742,5),(14005,4742,122),(14006,4742,74),(14007,4743,2),(14008,4743,150),(14009,4744,3),(14010,4744,2),(14011,4744,150),(14012,4745,8),(14013,4745,21),(14014,4745,150),(14015,4745,74),(14016,4746,21),(14017,4746,95),(14018,4746,150),(14019,4748,2),(14020,4748,4),(14021,4748,150),(14022,4748,74),(14023,4749,1),(14024,4749,6),(14025,4749,126),(14026,4749,150),(14027,4749,74),(14028,4750,121),(14029,4751,1),(14030,4751,74),(14031,4751,111),(14032,4752,4),(14033,4752,74),(14034,4752,11),(14035,4753,109),(14036,4753,74),(14037,4754,1),(14038,4754,102),(14039,4754,150),(14040,4756,3),(14041,4756,2),(14042,4756,150),(14043,4757,82),(14044,4758,5),(14045,4758,74),(14046,4759,5),(14047,4759,74),(14048,4760,1),(14049,4760,2),(14050,4760,150),(14051,4761,35),(14052,4761,8),(14053,4761,21),(14054,4761,150),(14055,4761,74),(14056,4762,1),(14057,4762,4),(14058,4762,150),(14059,4762,74),(14060,4763,5),(14061,4763,74),(14062,4765,41),(14063,4765,17),(14064,4765,150),(14065,4766,2),(14066,4766,150),(14067,4767,5),(14068,4767,74),(14069,4768,1),(14070,4768,6),(14071,4768,150),(14072,4768,74),(14073,4769,1),(14074,4769,10),(14075,4769,150),(14076,4769,74),(14077,4770,5),(14078,4770,74),(14079,4771,38),(14080,4771,20),(14081,4771,41),(14082,4771,150),(14083,4771,74),(14084,4772,4),(14085,4772,74),(14086,4773,1),(14087,4773,115),(14088,4773,150),(14089,4773,74),(14090,4774,41),(14091,4775,125),(14092,4775,116),(14093,4776,89),(14094,4776,86),(14095,4777,8),(14096,4777,13),(14097,4777,74),(14098,4778,1),(14099,4778,7),(14100,4778,10),(14101,4778,150),(14102,4778,74),(14103,4779,1),(14104,4779,150),(14105,4780,2),(14106,4780,150),(14107,4780,74),(14108,4781,56),(14109,4781,28),(14110,4781,150),(14111,4782,2),(14112,4782,150),(14113,4783,11),(14114,4783,13),(14115,4783,150),(14116,4783,74),(14117,4784,17),(14118,4784,142),(14119,4784,150),(14120,4785,4),(14121,4785,7),(14122,4785,74),(14123,4786,150),(14124,4787,2),(14125,4787,150),(14126,4788,2),(14127,4788,122),(14128,4788,150),(14129,4789,1),(14130,4789,5),(14131,4789,150),(14132,4789,74),(14133,4790,10),(14134,4790,1),(14135,4791,102),(14136,4791,117),(14137,4792,28),(14138,4792,150),(14139,4793,1),(14140,4793,6),(14141,4794,1),(14142,4794,142),(14143,4794,150),(14144,4795,2),(14145,4795,20),(14146,4795,150),(14147,4796,107),(14148,4798,28),(14149,4798,150),(14150,4799,88),(14151,4800,10),(14152,4800,1),(14153,4800,150),(14154,4800,74),(14155,4801,2),(14156,4801,102),(14157,4801,150),(14158,4802,2),(14159,4802,150),(14160,4803,6),(14161,4803,7),(14162,4803,1),(14163,4804,12),(14164,4804,150),(14165,4805,6),(14166,4805,74),(14167,4807,4),(14168,4807,74),(14169,4807,1),(14170,4807,150),(14171,4808,2),(14172,4808,12),(14173,4808,150),(14174,4809,3),(14175,4809,11),(14176,4809,150),(14177,4810,12),(14178,4810,150),(14179,4811,2),(14180,4811,150),(14181,4812,11),(14182,4812,13),(14183,4812,150),(14184,4812,74),(14185,4813,6),(14186,4813,74),(14187,4814,12),(14188,4814,150),(14189,4815,2),(14190,4815,150),(14191,4816,2),(14192,4816,38),(14193,4816,25),(14194,4816,150),(14195,4816,74),(14196,4817,79),(14197,4817,150),(14198,4818,2),(14199,4818,120),(14200,4818,150),(14201,4819,5),(14202,4819,74),(14203,4821,41),(14204,4821,10),(14205,4821,12),(14206,4822,86),(14207,4822,142),(14208,4823,1),(14209,4823,150),(14210,4824,1),(14211,4824,113),(14212,4824,150),(14213,4825,5),(14214,4825,35),(14215,4825,74),(14216,4826,5),(14217,4826,74),(14218,4827,1),(14219,4827,2),(14220,4827,150),(14221,4828,5),(14222,4828,74),(14223,4829,7),(14224,4829,4),(14225,4829,21),(14226,4830,4),(14227,4830,74),(14228,4831,12),(14229,4831,150),(14230,4832,139),(14231,4832,1),(14232,4832,113),(14233,4832,150),(14234,4833,41),(14235,4833,12),(14236,4833,150),(14237,4833,74),(14238,4834,1),(14239,4834,5),(14240,4834,150),(14241,4834,74),(14242,4836,2),(14243,4836,150),(14244,4837,2),(14245,4837,150),(14246,4838,5),(14247,4838,74),(14248,4839,3),(14249,4839,2),(14250,4839,150),(14251,4840,5),(14252,4840,74),(14253,4841,2),(14254,4841,85),(14255,4841,150),(14256,4842,2),(14257,4842,5),(14258,4842,150),(14259,4842,74),(14260,4843,1),(14261,4843,150),(14262,4844,1),(14263,4844,150),(14264,4845,1),(14265,4845,150),(14266,4846,1),(14267,4846,3),(14268,4846,150),(14269,4847,2),(14270,4847,150),(14271,4847,74),(14272,4848,106),(14273,4849,21),(14274,4849,95),(14275,4849,74),(14276,4850,2),(14277,4850,150),(14278,4851,144),(14279,4851,12),(14280,4851,150),(14281,4851,74),(14282,4852,5),(14283,4852,40),(14284,4852,74),(14285,4853,5),(14286,4853,74),(14287,4854,28),(14288,4854,119),(14289,4854,150),(14290,4856,15),(14291,4856,1),(14292,4856,10),(14293,4856,150),(14294,4856,74),(14295,4857,41),(14296,4857,12),(14297,4857,150),(14298,4858,5),(14299,4858,74),(14300,4860,114),(14301,4861,2),(14302,4861,38),(14303,4861,35),(14304,4861,12),(14305,4861,150),(14306,4861,74),(14307,4862,15),(14308,4862,2),(14309,4862,150),(14310,4862,74),(14311,4863,137),(14312,4863,74),(14313,4865,5),(14314,4865,116),(14315,4865,74),(14316,4866,28),(14317,4866,150),(14318,4867,2),(14319,4867,150),(14320,4868,1),(14321,4868,126),(14322,4868,150),(14323,4868,74),(14324,4869,5),(14325,4869,74),(14326,4870,28),(14327,4870,150),(14328,4871,133),(14329,4871,128),(14330,4872,1),(14331,4872,137),(14332,4872,7),(14333,4872,6),(14334,4872,150),(14335,4872,74),(14336,4873,79),(14337,4873,150),(14338,4874,1),(14339,4874,20),(14340,4874,150),(14341,4875,12),(14342,4875,150),(14343,4876,12),(14344,4876,150),(14345,4877,1),(14346,4877,2),(14347,4877,5),(14348,4877,150),(14349,4877,74),(14350,4878,5),(14351,4878,13),(14352,4878,74),(14353,4879,1),(14354,4879,10),(14355,4879,150),(14356,4879,74),(14357,4880,2),(14358,4880,20),(14359,4880,150),(14360,4881,4),(14361,4881,49),(14362,4881,74),(14363,4882,1),(14364,4882,150),(14365,4883,20),(14366,4883,150),(14367,4884,11),(14368,4884,150),(14369,4885,89),(14370,4885,86),(14371,4886,2),(14372,4886,13),(14373,4886,33),(14374,4886,150),(14375,4886,74),(14376,4886,73),(14377,4887,1),(14378,4887,5),(14379,4887,150),(14380,4887,74),(14381,4888,5),(14382,4888,10),(14383,4888,74),(14384,4889,5),(14385,4889,74),(14386,4890,11),(14387,4890,150),(14388,4891,4),(14389,4892,2),(14390,4892,4),(14391,4892,38),(14392,4892,25),(14393,4892,119),(14394,4892,150),(14395,4892,74),(14396,4893,2),(14397,4893,5),(14398,4893,150),(14399,4893,74),(14400,4894,125),(14401,4895,1),(14402,4895,150),(14403,4895,74),(14404,4896,1),(14405,4896,20),(14406,4896,150),(14407,4897,6),(14408,4897,113),(14409,4897,150),(14410,4897,74),(14411,4898,79),(14412,4898,10),(14413,4898,150),(14414,4898,74),(14415,4899,144),(14416,4899,12),(14417,4899,150),(14418,4899,74),(14419,4900,4),(14420,4900,123),(14421,4900,74),(14422,4901,2),(14423,4901,150),(14424,4902,2),(14425,4902,121),(14426,4902,150),(14427,4903,74),(14428,4903,1),(14429,4904,8),(14430,4904,74),(14431,4905,4),(14432,4905,11),(14433,4905,150),(14434,4905,74),(14435,4906,133),(14436,4906,128),(14437,4907,15),(14438,4907,2),(14439,4907,119),(14440,4907,150),(14441,4907,74),(14442,4908,41),(14443,4908,150),(14444,4909,33),(14445,4909,73),(14446,4910,89),(14447,4911,5),(14448,4911,74),(14449,4912,1),(14450,4912,150),(14451,4913,12),(14452,4913,150),(14453,4914,2),(14454,4914,20),(14455,4914,150),(14456,4915,12),(14457,4915,150),(14458,4916,38),(14459,4916,74),(14460,4917,27),(14461,4917,74),(14462,4918,1),(14463,4918,79),(14464,4918,150),(14465,4919,38),(14466,4919,74),(14467,4920,1),(14468,4920,3),(14469,4920,99),(14470,4920,150),(14471,4921,7),(14472,4921,8),(14473,4921,21),(14474,4921,150),(14475,4921,74),(14476,4922,2),(14477,4922,150),(14478,4923,142),(14479,4924,5),(14480,4924,74),(14481,4925,6),(14482,4925,15),(14483,4925,1),(14484,4926,5),(14485,4926,74),(14486,4927,102),(14487,4927,92),(14488,4928,122),(14489,4928,84),(14490,4930,20),(14491,4930,150),(14492,4931,28),(14493,4931,150),(14494,4932,16),(14495,4932,1),(14496,4932,150),(14497,4932,74),(14498,4933,21),(14499,4933,47),(14500,4933,150),(14501,4933,74),(14502,4934,5),(14503,4934,74),(14504,4935,2),(14505,4935,5),(14506,4935,150),(14507,4935,74),(14508,4936,5),(14509,4936,115),(14510,4936,74),(14511,4937,1),(14512,4937,10),(14513,4937,150),(14514,4937,74),(14515,4938,5),(14516,4938,74),(14517,4939,1),(14518,4939,150),(14519,4940,10),(14520,4940,1),(14521,4941,5),(14522,4941,40),(14523,4941,74),(14524,4942,2),(14525,4942,150),(14526,4943,6),(14527,4943,74),(14528,4944,7),(14529,4944,74),(14530,4945,1),(14531,4945,150),(14532,4946,86),(14533,4946,92),(14534,4947,2),(14535,4947,5),(14536,4947,150),(14537,4947,74),(14538,4948,2),(14539,4948,150),(14540,4949,1),(14541,4949,6),(14542,4949,150),(14543,4949,74),(14544,4950,1),(14545,4950,2),(14546,4950,150),(14547,4950,74),(14548,4950,3),(14549,4951,1),(14550,4951,150),(14551,4952,1),(14552,4952,6),(14553,4952,150),(14554,4952,74),(14555,4953,2),(14556,4953,101),(14557,4953,150),(14558,4954,30),(14559,4954,84),(14560,4954,97),(14561,4954,2),(14562,4954,150),(14563,4954,74),(14564,4955,4),(14565,4955,74),(14566,4956,84),(14567,4957,2),(14568,4957,20),(14569,4957,150),(14570,4958,8),(14571,4958,12),(14572,4958,101),(14573,4958,150),(14574,4958,74),(14575,4959,5),(14576,4959,74),(14577,4960,4),(14578,4960,74),(14579,4960,1),(14580,4960,150),(14581,4961,5),(14582,4961,74),(14583,4962,4),(14584,4962,11),(14585,4962,13),(14586,4963,1),(14587,4963,17),(14588,4963,150),(14589,4963,74),(14590,4964,86),(14591,4964,118),(14592,4966,28),(14593,4966,23),(14594,4967,12),(14595,4968,7),(14596,4968,116),(14597,4968,74),(14598,4969,12),(14599,4969,150),(14600,4970,5),(14601,4970,74),(14602,4971,2),(14603,4971,116),(14604,4971,119),(14605,4971,150),(14606,4972,5),(14607,4972,74),(14608,4973,1),(14609,4973,3),(14610,4973,150),(14611,4974,1),(14612,4974,150),(14613,4976,1),(14614,4976,3),(14615,4976,150),(14616,4977,2),(14617,4977,150),(14618,4978,2),(14619,4978,150),(14620,4979,142),(14621,4980,1),(14622,4980,4),(14623,4980,10),(14624,4980,150),(14625,4980,74),(14626,4981,21),(14627,4981,13),(14628,4981,150),(14629,4981,74),(14630,4982,102),(14631,4983,21),(14632,4983,95),(14633,4983,150),(14634,4984,12),(14635,4984,150),(14636,4985,2),(14637,4985,150),(14638,4986,20),(14639,4986,150),(14640,4987,102),(14641,4988,1),(14642,4988,150),(14643,4988,3),(14644,4989,11),(14645,4989,150),(14646,4991,12),(14647,4991,150),(14648,4992,8),(14649,4992,11),(14650,4993,12),(14651,4993,150),(14652,4994,1),(14653,4994,3),(14654,4994,4),(14655,4994,150),(14656,4994,74),(14657,4996,1),(14658,4996,7),(14659,4996,150),(14660,4996,74),(14661,4997,2),(14662,4997,150),(14663,4998,21),(14664,4998,150),(14665,4999,4),(14666,4999,74),(14667,5000,28),(14668,5000,150),(14669,5001,5),(14670,5001,79),(14671,5001,150),(14672,5001,74),(14673,5002,2),(14674,5002,150),(14675,5003,2),(14676,5003,150),(14677,5004,1),(14678,5004,150),(14679,5005,5),(14680,5005,74),(14681,5006,121),(14682,5007,1),(14683,5007,12),(14684,5007,150),(14685,5008,2),(14686,5008,7),(14687,5008,150),(14688,5008,74),(14689,5009,5),(14690,5009,99),(14691,5009,74),(14692,5010,144),(14693,5010,12),(14694,5010,150),(14695,5010,74),(14696,5011,1),(14697,5011,150),(14698,5012,90),(14699,5013,28),(14700,5013,150),(14701,5016,4),(14702,5016,8),(14703,5016,12),(14704,5016,150),(14705,5016,74),(14706,5017,5),(14707,5017,116),(14708,5017,74),(14709,5018,33),(14710,5018,73),(14711,5019,1),(14712,5019,3),(14713,5019,113),(14714,5019,150),(14715,5020,11),(14716,5020,150),(14717,5020,74),(14718,5021,5),(14719,5021,74),(14720,5022,79),(14721,5022,150),(14722,5023,12),(14723,5023,8),(14724,5024,1),(14725,5024,6),(14726,5024,150),(14727,5024,74),(14728,5026,1),(14729,5026,142),(14730,5026,150),(14731,5028,2),(14732,5028,4),(14733,5028,150),(14734,5028,74),(14735,5029,1),(14736,5029,150),(14737,5030,11),(14738,5030,150),(14739,5031,137),(14740,5031,2),(14741,5031,120),(14742,5031,150),(14743,5031,74),(14744,5032,114),(14745,5033,1),(14746,5033,150),(14747,5034,7),(14748,5034,5),(14749,5034,38),(14750,5034,74),(14751,5035,90),(14752,5036,2),(14753,5036,150),(14754,5037,1),(14755,5037,6),(14756,5037,10),(14757,5037,150),(14758,5037,74),(14759,5038,4),(14760,5038,12),(14761,5038,33),(14762,5038,150),(14763,5038,74),(14764,5038,73),(14765,5039,1),(14766,5039,150),(14767,5040,102),(14768,5040,117),(14769,5041,11),(14770,5041,25),(14771,5041,150),(14772,5041,74),(14773,5042,15),(14774,5042,1),(14775,5042,150),(14776,5042,74),(14777,5043,5),(14778,5043,99),(14779,5043,74),(14780,5044,133),(14781,5044,128),(14782,5045,2),(14783,5045,150),(14784,5047,2),(14785,5047,150),(14786,5048,6),(14787,5048,114),(14788,5048,86),(14789,5048,74),(14790,5049,2),(14791,5049,150),(14792,5050,15),(14793,5050,2),(14794,5050,150),(14795,5050,74),(14796,5051,5),(14797,5051,74),(14798,5052,1),(14799,5052,150),(14800,5053,3),(14801,5053,150),(14802,5054,12),(14803,5054,150),(14804,5055,12),(14805,5055,150),(14806,5057,5),(14807,5057,74),(14808,5057,16),(14809,5058,11),(14810,5058,150),(14811,5059,3),(14812,5059,150),(14813,5060,79),(14814,5060,150),(14815,5061,1),(14816,5061,4),(14817,5061,150),(14818,5061,74),(14819,5062,1),(14820,5062,150),(14821,5063,4),(14822,5063,5),(14823,5063,122),(14824,5063,74),(14825,5064,28),(14826,5064,150),(14827,5065,2),(14828,5065,150),(14829,5066,114),(14830,5067,7),(14831,5067,6),(14832,5067,74),(14833,5068,5),(14834,5068,125),(14835,5068,116),(14836,5068,74),(14837,5069,137),(14838,5069,125),(14839,5069,140),(14840,5069,10),(14841,5069,74),(14842,5070,7),(14843,5070,6),(14844,5070,17),(14845,5070,150),(14846,5070,74),(14847,5071,1),(14848,5071,5),(14849,5071,150),(14850,5071,74),(14851,5072,142),(14852,5072,2),(14853,5073,1),(14854,5073,150),(14855,5074,5),(14856,5074,140),(14857,5074,74),(14858,5075,127),(14859,5076,56),(14860,5076,28),(14861,5076,150),(14862,5077,41),(14863,5077,150),(14864,5078,79),(14865,5078,150),(14866,5079,90),(14867,5080,5),(14868,5080,102),(14869,5080,74),(14870,5081,1),(14871,5081,2),(14872,5081,113),(14873,5081,150),(14874,5082,4),(14875,5082,21),(14876,5082,150),(14877,5082,74),(14878,5083,4),(14879,5083,74),(14880,5084,1),(14881,5084,150),(14882,5085,142),(14883,5086,41),(14884,5086,12),(14885,5086,150),(14886,5087,79),(14887,5087,150),(14888,5088,5),(14889,5088,74),(14890,5089,11),(14891,5089,4),(14892,5089,1),(14893,5089,150),(14894,5089,74),(14895,5090,1),(14896,5090,150),(14897,5091,103),(14898,5092,1),(14899,5092,6),(14900,5092,114),(14901,5092,150),(14902,5092,74),(14903,5093,5),(14904,5093,74),(14905,5094,4),(14906,5094,11),(14907,5094,115),(14908,5094,150),(14909,5094,74),(14910,5095,1),(14911,5095,150),(14912,5096,125),(14913,5096,47),(14914,5096,13),(14915,5096,74),(14916,5097,1),(14917,5097,3),(14918,5097,150),(14919,5099,1),(14920,5099,150),(14921,5100,5),(14922,5100,114),(14923,5100,74),(14924,5101,5),(14925,5101,74),(14926,5102,11),(14927,5102,25),(14928,5102,150),(14929,5102,74),(14930,5103,1),(14931,5103,12),(14932,5103,150),(14933,5104,1),(14934,5104,6),(14935,5104,150),(14936,5104,74),(14937,5105,103),(14938,5106,5),(14939,5106,74),(14940,5107,114),(14941,5108,2),(14942,5108,150),(14943,5109,21),(14944,5109,150),(14945,5110,1),(14946,5110,20),(14947,5110,86),(14948,5110,142),(14949,5110,150),(14950,5111,38),(14951,5111,25),(14952,5111,74),(14953,5112,2),(14954,5112,150),(14955,5113,3),(14956,5113,2),(14957,5113,113),(14958,5113,150),(14959,5114,21),(14960,5114,150),(14961,5117,5),(14962,5117,74),(14963,5118,133),(14964,5118,132),(14965,5119,4),(14966,5119,74),(14967,5120,4),(14968,5120,74),(14969,5120,2),(14970,5121,1),(14971,5121,33),(14972,5121,150),(14973,5121,73),(14974,5122,114),(14975,5122,99),(14976,5123,1),(14977,5123,5),(14978,5123,150),(14979,5123,74),(14980,5124,2),(14981,5124,150),(14982,5125,2),(14983,5125,5),(14984,5125,116),(14985,5125,150),(14986,5125,74),(14987,5126,1),(14988,5126,150),(14989,5127,113),(14990,5127,150),(14991,5128,1),(14992,5128,150),(14993,5129,114),(14994,5130,15),(14995,5130,74),(14996,5131,12),(14997,5131,150),(14998,5132,5),(14999,5132,74),(15000,5133,5),(15001,5133,138),(15002,5133,74),(15003,5134,2),(15004,5134,121),(15005,5134,150),(15006,5135,1),(15007,5135,150),(15008,5136,5),(15009,5136,74),(15010,5137,2),(15011,5137,150),(15012,5138,144),(15013,5138,74),(15014,5139,1),(15015,5139,6),(15016,5139,150),(15017,5139,74),(15018,5140,6),(15019,5140,74),(15020,5141,4),(15021,5141,74),(15022,5141,5),(15023,5142,5),(15024,5142,74),(15025,5143,21),(15026,5143,150),(15027,5144,11),(15028,5144,150),(15029,5145,30),(15030,5146,5),(15031,5146,79),(15032,5146,10),(15033,5146,150),(15034,5146,74),(15035,5147,2),(15036,5147,102),(15037,5147,150),(15038,5148,3),(15039,5148,2),(15040,5148,150),(15041,5148,74),(15042,5149,5),(15043,5149,35),(15044,5149,10),(15045,5149,74),(15046,5150,137),(15047,5150,35),(15048,5150,94),(15049,5150,74),(15050,5151,11),(15051,5151,150),(15052,5152,1),(15053,5152,3),(15054,5152,150),(15055,5153,79),(15056,5153,116),(15057,5153,150),(15058,5154,114),(15059,5154,86),(15060,5155,2),(15061,5155,150),(15062,5156,5),(15063,5156,74),(15064,5157,4),(15065,5158,4),(15066,5158,74),(15067,5159,130),(15068,5159,128),(15069,5160,2),(15070,5160,150),(15071,5160,74),(15072,5161,5),(15073,5161,138),(15074,5161,111),(15075,5161,74),(15076,5162,1),(15077,5162,150),(15078,5163,1),(15079,5163,150),(15080,5164,2),(15081,5164,150),(15082,5165,5),(15083,5165,111),(15084,5165,74),(15085,5166,139),(15086,5166,1),(15087,5166,142),(15088,5166,150),(15089,5167,23),(15090,5167,1),(15091,5167,150),(15092,5167,74),(15093,5168,1),(15094,5168,150),(15095,5168,74),(15096,5169,133),(15097,5169,128),(15098,5170,140),(15099,5171,5),(15100,5171,74),(15101,5172,1),(15102,5172,150),(15103,5173,4),(15104,5173,11),(15105,5173,150),(15106,5173,74),(15107,5174,2),(15108,5174,101),(15109,5174,150),(15110,5175,30),(15111,5175,150),(15112,5175,74),(15113,5176,4),(15114,5176,74),(15115,5177,3),(15116,5177,2),(15117,5177,150),(15118,5178,33),(15119,5178,73),(15120,5179,38),(15121,5179,74),(15122,5180,16),(15123,5180,23),(15124,5180,1),(15125,5180,150),(15126,5180,74),(15127,5181,11),(15128,5181,150),(15129,5182,125),(15130,5183,1),(15131,5183,79),(15132,5183,150),(15133,5184,1),(15134,5184,2),(15135,5184,6),(15136,5184,150),(15137,5184,74),(15138,5185,23),(15139,5185,15),(15140,5185,1),(15141,5185,3),(15142,5185,150),(15143,5185,74),(15144,5186,4),(15145,5186,74),(15146,5187,4),(15147,5187,74),(15148,5188,5),(15149,5188,74),(15150,5189,1),(15151,5189,150),(15152,5190,12),(15153,5190,150),(15154,5191,1),(15155,5191,6),(15156,5191,150),(15157,5191,74),(15158,5192,5),(15159,5192,84),(15160,5192,74),(15161,5193,5),(15162,5193,74),(15163,5194,2),(15164,5194,79),(15165,5194,150),(15166,5195,5),(15167,5195,74),(15168,5196,7),(15169,5196,74),(15170,5198,7),(15171,5198,74),(15172,5198,12),(15173,5198,150),(15174,5199,38),(15175,5199,12),(15176,5199,150),(15177,5199,74),(15178,5200,103),(15179,5201,1),(15180,5201,4),(15181,5201,150),(15182,5201,74),(15183,5202,2),(15184,5202,116),(15185,5202,150),(15186,5203,83),(15187,5204,1),(15188,5204,143),(15189,5204,150),(15190,5205,8),(15191,5205,125),(15192,5205,12),(15193,5205,13),(15194,5205,150),(15195,5205,74),(15196,5206,7),(15197,5206,6),(15198,5206,74),(15199,5207,23),(15200,5207,15),(15201,5207,1),(15202,5207,150),(15203,5207,74),(15204,5208,1),(15205,5208,2),(15206,5208,150),(15207,5209,5),(15208,5209,74),(15209,5210,5),(15210,5210,74),(15211,5211,12),(15212,5211,150),(15213,5212,1),(15214,5212,10),(15215,5212,150),(15216,5212,74),(15217,5213,11),(15218,5213,150),(15219,5214,1),(15220,5214,137),(15221,5214,5),(15222,5214,150),(15223,5214,74),(15224,5215,5),(15225,5215,74),(15226,5216,133),(15227,5216,128),(15228,5217,5),(15229,5217,35),(15230,5217,40),(15231,5217,74),(15232,5218,28),(15233,5218,5),(15234,5218,150),(15235,5218,74),(15236,5219,84),(15237,5219,115),(15238,5219,74),(15239,5220,104),(15240,5221,12),(15241,5221,150),(15242,5222,2),(15243,5222,5),(15244,5222,150),(15245,5222,74),(15246,5223,5),(15247,5223,11),(15248,5223,86),(15249,5223,150),(15250,5223,74),(15251,5224,2),(15252,5224,150),(15253,5225,5),(15254,5225,74),(15255,5226,86),(15256,5226,37),(15257,5226,142),(15258,5226,150),(15259,5227,5),(15260,5227,74),(15261,5228,2),(15262,5228,150),(15263,5229,102),(15264,5229,105),(15265,5230,4),(15266,5230,74),(15267,5231,2),(15268,5231,125),(15269,5231,150),(15270,5232,1),(15271,5232,6),(15272,5232,150),(15273,5232,74),(15274,5233,1),(15275,5233,3),(15276,5233,150),(15277,5235,2),(15278,5235,150),(15279,5236,5),(15280,5236,74),(15281,5237,4),(15282,5237,11),(15283,5237,150),(15284,5237,74),(15285,5238,86),(15286,5238,142),(15287,5239,1),(15288,5239,150),(15289,5240,20),(15290,5240,150),(15291,5241,2),(15292,5241,150),(15293,5242,2),(15294,5242,150),(15295,5243,2),(15296,5243,150),(15297,5244,113),(15298,5244,142),(15299,5244,150),(15300,5245,113),(15301,5245,150),(15302,5246,4),(15303,5246,74),(15304,5247,1),(15305,5247,150),(15306,5248,2),(15307,5248,120),(15308,5248,150),(15309,5248,74),(15310,5249,130),(15311,5249,128),(15312,5250,2),(15313,5250,150),(15314,5251,11),(15315,5251,86),(15316,5251,150),(15317,5252,102),(15318,5252,37),(15319,5252,105),(15320,5252,150),(15321,5253,5),(15322,5253,6),(15323,5253,74),(15324,5254,1),(15325,5254,6),(15326,5254,150),(15327,5254,74),(15328,5255,1),(15329,5255,3),(15330,5255,150),(15331,5256,5),(15332,5256,99),(15333,5256,74),(15334,5257,21),(15335,5257,150),(15336,5258,5),(15337,5258,79),(15338,5258,150),(15339,5258,74),(15340,5259,6),(15341,5259,37),(15342,5259,12),(15343,5259,126),(15344,5259,150),(15345,5259,74),(15346,5260,115),(15347,5260,74),(15348,5261,1),(15349,5261,150),(15350,5262,1),(15351,5262,6),(15352,5262,55),(15353,5262,150),(15354,5262,74),(15355,5263,1),(15356,5263,5),(15357,5263,111),(15358,5263,150),(15359,5263,74),(15360,5264,7),(15361,5264,5),(15362,5264,74),(15363,5265,2),(15364,5265,150),(15365,5266,1),(15366,5266,150),(15367,5267,5),(15368,5267,74),(15369,5268,30),(15370,5268,2),(15371,5268,150),(15372,5269,102),(15373,5269,117),(15374,5269,83),(15375,5270,5),(15376,5270,74),(15377,5271,5),(15378,5271,125),(15379,5271,74),(15380,5272,40),(15381,5273,2),(15382,5273,150),(15383,5274,20),(15384,5274,37),(15385,5274,101),(15386,5274,150),(15387,5275,10),(15388,5275,74),(15389,5276,2),(15390,5276,35),(15391,5276,150),(15392,5276,74),(15393,5277,5),(15394,5277,74),(15395,5280,1),(15396,5280,79),(15397,5280,150),(15398,5281,1),(15399,5281,3),(15400,5281,17),(15401,5281,150),(15402,5282,139),(15403,5282,142),(15404,5283,1),(15405,5283,150),(15406,5284,5),(15407,5284,97),(15408,5284,74),(15409,5285,2),(15410,5285,150),(15411,5286,1),(15412,5286,150),(15413,5287,1),(15414,5287,150),(15415,5288,1),(15416,5288,5),(15417,5288,150),(15418,5288,74),(15419,5289,5),(15420,5289,97),(15421,5289,74),(15422,5290,6),(15423,5290,74),(15424,5291,21),(15425,5291,150),(15426,5292,38),(15427,5292,8),(15428,5292,21),(15429,5292,33),(15430,5292,150),(15431,5292,74),(15432,5292,73),(15433,5293,1),(15434,5293,150),(15435,5294,5),(15436,5294,138),(15437,5294,74),(15438,5295,4),(15439,5295,74),(15440,5296,1),(15441,5296,150),(15442,5297,5),(15443,5297,74),(15444,5298,1),(15445,5298,5),(15446,5298,150),(15447,5298,74),(15448,5299,3),(15449,5299,5),(15450,5299,150),(15451,5299,74),(15452,5300,4),(15453,5300,74),(15454,5301,1),(15455,5301,150),(15456,5302,86),(15457,5302,117),(15458,5303,1),(15459,5303,150),(15460,5304,16),(15461,5304,1),(15462,5304,5),(15463,5304,150),(15464,5304,74),(15465,5305,15),(15466,5305,2),(15467,5305,150),(15468,5305,74),(15469,5306,2),(15470,5306,150),(15471,5307,2),(15472,5307,5),(15473,5307,115),(15474,5307,150),(15475,5307,74),(15476,5308,1),(15477,5308,125),(15478,5308,150),(15479,5309,5),(15480,5309,74),(15481,5310,1),(15482,5310,150),(15483,5311,1),(15484,5311,150),(15485,5311,74),(15486,5312,4),(15487,5312,41),(15488,5312,150),(15489,5312,74),(15490,5313,1),(15491,5313,150),(15492,5314,2),(15493,5314,150),(15494,5315,79),(15495,5315,150),(15496,5316,5),(15497,5316,115),(15498,5316,74),(15499,5317,2),(15500,5317,6),(15501,5317,150),(15502,5317,74),(15503,5317,33),(15504,5318,1),(15505,5318,4),(15506,5318,150),(15507,5318,74),(15508,5319,4),(15509,5319,74),(15510,5320,11),(15511,5320,25),(15512,5320,150),(15513,5320,74),(15514,5321,4),(15515,5321,7),(15516,5321,1),(15517,5322,5),(15518,5322,74),(15519,5323,125),(15520,5323,140),(15521,5324,86),(15522,5324,118),(15523,5324,92),(15524,5325,1),(15525,5325,150),(15526,5326,3),(15527,5326,6),(15528,5326,150),(15529,5326,74),(15530,5327,1),(15531,5327,6),(15532,5327,150),(15533,5327,74),(15534,5328,5),(15535,5328,74),(15536,5329,10),(15537,5329,1),(15538,5329,74),(15539,5330,2),(15540,5330,111),(15541,5330,150),(15542,5331,5),(15543,5331,74),(15544,5332,138),(15545,5332,116),(15546,5333,5),(15547,5333,116),(15548,5333,74),(15549,5334,1),(15550,5334,2),(15551,5334,150),(15552,5335,12),(15553,5335,150),(15554,5337,102),(15555,5337,117),(15556,5338,1),(15557,5338,137),(15558,5338,7),(15559,5338,150),(15560,5338,74),(15561,5339,15),(15562,5339,6),(15563,5339,74),(15564,5340,1),(15565,5340,3),(15566,5340,150),(15567,5341,86),(15568,5341,142),(15569,5342,2),(15570,5342,150),(15571,5343,4),(15572,5343,74),(15573,5344,4),(15574,5344,84),(15575,5344,74),(15576,5345,79),(15577,5345,150),(15578,5346,5),(15579,5346,6),(15580,5346,74),(15581,5347,139),(15582,5348,5),(15583,5348,6),(15584,5348,74),(15585,5349,5),(15586,5349,74),(15587,5350,49),(15588,5351,5),(15589,5351,74),(15590,5352,114),(15591,5352,86),(15592,5352,83),(15593,5353,10),(15594,5353,74),(15595,5354,8),(15596,5354,21),(15597,5354,10),(15598,5354,150),(15599,5354,74),(15600,5355,125),(15601,5355,140),(15602,5356,1),(15603,5356,150),(15604,5357,113),(15605,5357,150),(15606,5358,2),(15607,5358,150),(15608,5359,2),(15609,5359,150),(15610,5360,5),(15611,5360,74),(15612,5361,11),(15613,5361,150),(15614,5362,5),(15615,5362,74),(15616,5363,1),(15617,5363,150),(15618,5364,4),(15619,5364,74),(15620,5366,4),(15621,5366,1),(15622,5366,74),(15623,5367,79),(15624,5367,150),(15625,5368,21),(15626,5368,150),(15627,5369,1),(15628,5369,150),(15629,5370,2),(15630,5370,5),(15631,5370,150),(15632,5370,74),(15633,5371,84),(15634,5371,115),(15635,5371,74),(15636,5372,121),(15637,5373,102),(15638,5373,105),(15639,5374,2),(15640,5374,150),(15641,5375,2),(15642,5375,76),(15643,5375,150),(15644,5376,12),(15645,5376,150),(15646,5377,1),(15647,5377,150),(15648,5378,33),(15649,5378,94),(15650,5378,73),(15651,5379,4),(15652,5379,74),(15653,5380,5),(15654,5380,97),(15655,5380,74),(15656,5381,1),(15657,5381,11),(15658,5381,150),(15659,5382,2),(15660,5382,150),(15661,5383,102),(15662,5383,105),(15663,5384,130),(15664,5384,128),(15665,5385,2),(15666,5385,33),(15667,5385,150),(15668,5385,73),(15669,5387,79),(15670,5387,150),(15671,5388,142),(15672,5389,3),(15673,5389,2),(15674,5389,150),(15675,5390,98),(15676,5391,30),(15677,5391,5),(15678,5391,74),(15679,5392,79),(15680,5392,150),(15681,5393,4),(15682,5393,74),(15683,5394,150),(15684,5394,73),(15685,5395,1),(15686,5395,7),(15687,5395,150),(15688,5395,74),(15689,5396,116),(15690,5397,2),(15691,5397,150),(15692,5398,1),(15693,5398,6),(15694,5398,142),(15695,5398,150),(15696,5398,74),(15697,5399,5),(15698,5399,12),(15699,5399,17),(15700,5399,150),(15701,5399,74),(15702,5400,5),(15703,5400,74),(15704,5401,7),(15705,5401,74),(15706,5402,86),(15707,5402,117),(15708,5403,5),(15709,5403,74),(15710,5404,5),(15711,5404,74),(15712,5405,5),(15713,5405,74),(15714,5406,5),(15715,5406,79),(15716,5406,150),(15717,5406,74),(15718,5407,5),(15719,5407,74),(15720,5408,1),(15721,5408,150),(15722,5409,41),(15723,5409,150),(15724,5410,2),(15725,5410,79),(15726,5410,150),(15727,5411,1),(15728,5411,150),(15729,5412,1),(15730,5412,5),(15731,5412,140),(15732,5412,150),(15733,5412,74),(15734,5413,137),(15735,5413,6),(15736,5413,74),(15737,5414,2),(15738,5414,150),(15739,5415,5),(15740,5415,74),(15741,5416,5),(15742,5416,74),(15743,5417,1),(15744,5417,6),(15745,5417,150),(15746,5417,74),(15747,5418,139),(15748,5418,142),(15749,5419,5),(15750,5419,74),(15751,5420,139),(15752,5420,1),(15753,5420,150),(15754,5422,5),(15755,5422,74),(15756,5423,28),(15757,5423,150),(15758,5424,86),(15759,5424,117),(15760,5425,5),(15761,5425,116),(15762,5425,140),(15763,5425,74),(15764,5426,1),(15765,5426,150),(15766,5427,138),(15767,5428,86),(15768,5428,117),(15769,5428,83),(15770,5429,116),(15771,5430,38),(15772,5430,79),(15773,5430,150),(15774,5430,74),(15775,5431,1),(15776,5431,20),(15777,5431,150),(15778,5432,113),(15779,5432,141),(15780,5432,150),(15781,5434,12),(15782,5434,150),(15783,5435,12),(15784,5435,150),(15785,5436,5),(15786,5436,74),(15787,5437,1),(15788,5437,2),(15789,5437,6),(15790,5437,150),(15791,5437,74),(15792,5438,1),(15793,5438,6),(15794,5438,150),(15795,5438,74),(15796,5439,16),(15797,5439,1),(15798,5439,150),(15799,5439,74),(15800,5440,11),(15801,5440,150),(15802,5441,12),(15803,5441,150),(15804,5442,5),(15805,5442,40),(15806,5442,74),(15807,5443,121),(15808,5444,3),(15809,5444,2),(15810,5444,150),(15811,5445,5),(15812,5445,74),(15813,5446,1),(15814,5446,5),(15815,5446,150),(15816,5446,74),(15817,5446,6),(15818,5447,1),(15819,5447,150),(15820,5448,2),(15821,5448,150),(15822,5449,5),(15823,5449,74),(15824,5450,30),(15825,5450,5),(15826,5450,138),(15827,5450,74),(15828,5451,7),(15829,5451,17),(15830,5451,150),(15831,5451,74),(15832,5452,138),(15833,5453,21),(15834,5453,150),(15835,5454,2),(15836,5454,4),(15837,5454,119),(15838,5454,150),(15839,5454,74),(15840,5455,2),(15841,5455,4),(15842,5455,150),(15843,5455,74),(15844,5456,1),(15845,5456,150),(15846,5457,11),(15847,5457,150),(15848,5458,1),(15849,5458,126),(15850,5458,150),(15851,5459,4),(15852,5459,74),(15853,5460,1),(15854,5460,150),(15855,5461,3),(15856,5461,2),(15857,5461,150),(15858,5462,3),(15859,5462,17),(15860,5462,150),(15861,5463,8),(15862,5463,21),(15863,5463,150),(15864,5463,74),(15865,5464,23),(15866,5464,1),(15867,5464,150),(15868,5464,74),(15869,5465,2),(15870,5465,150),(15871,5466,5),(15872,5466,74),(15873,5467,12),(15874,5467,150),(15875,5468,12),(15876,5468,150),(15877,5469,111),(15878,5470,3),(15879,5470,5),(15880,5470,150),(15881,5470,74),(15882,5471,137),(15883,5471,4),(15884,5471,35),(15885,5471,11),(15886,5471,10),(15887,5471,150),(15888,5471,74),(15889,5472,1),(15890,5472,99),(15891,5472,150),(15892,5473,2),(15893,5473,150),(15894,5474,2),(15895,5474,150),(15896,5475,1),(15897,5475,150),(15898,5476,23),(15899,5476,1),(15900,5476,150),(15901,5476,74),(15902,5477,102),(15903,5477,142),(15904,5477,105),(15905,5478,2),(15906,5478,150),(15907,5479,1),(15908,5479,150),(15909,5479,6),(15910,5479,7),(15911,5480,5),(15912,5480,74),(15913,5481,7),(15914,5481,111),(15915,5481,74),(15916,5482,138),(15917,5483,113),(15918,5483,142),(15919,5483,150),(15920,5484,5),(15921,5484,125),(15922,5484,74),(15923,5485,5),(15924,5485,74),(15925,5486,2),(15926,5486,150),(15927,5487,6),(15928,5487,11),(15929,5487,150),(15930,5487,74),(15931,5488,1),(15932,5488,79),(15933,5488,150),(15934,5489,1),(15935,5489,150),(15936,5489,74),(15937,5490,15),(15938,5490,2),(15939,5490,150),(15940,5490,74),(15941,5491,5),(15942,5491,116),(15943,5491,74),(15944,5492,5),(15945,5492,74),(15946,5493,1),(15947,5493,5),(15948,5493,10),(15949,5493,150),(15950,5493,74),(15951,5494,1),(15952,5494,4),(15953,5494,150),(15954,5494,74),(15955,5495,137),(15956,5495,5),(15957,5495,74),(15958,5496,33),(15959,5496,73),(15960,5497,4),(15961,5497,74),(15962,5498,79),(15963,5498,150),(15964,5499,2),(15965,5499,150),(15966,5499,74),(15967,5500,4),(15968,5500,74),(15969,5501,3),(15970,5501,5),(15971,5501,150),(15972,5501,74),(15973,5502,132),(15974,5502,128),(15975,5503,2),(15976,5503,1),(15977,5503,113),(15978,5504,30),(15979,5504,5),(15980,5504,74),(15981,5505,138),(15982,5505,116),(15983,5506,4),(15984,5506,74),(15985,5507,5),(15986,5507,74),(15987,5508,11),(15988,5508,150),(15989,5508,74),(15990,5509,2),(15991,5509,150),(15992,5510,7),(15993,5510,74),(15994,5511,2),(15995,5511,150),(15996,5512,121),(15997,5513,1),(15998,5513,150),(15999,5514,30),(16000,5514,5),(16001,5514,74),(16002,5515,5),(16003,5515,74),(16004,5516,3),(16005,5516,2),(16006,5516,5),(16007,5516,150),(16008,5516,74),(16009,5517,2),(16010,5517,5),(16011,5517,122),(16012,5517,84),(16013,5517,150),(16014,5517,74),(16015,5518,1),(16016,5518,150),(16017,5519,5),(16018,5519,74),(16019,5520,5),(16020,5520,125),(16021,5520,140),(16022,5520,97),(16023,5520,74),(16024,5521,2),(16025,5521,119),(16026,5521,78),(16027,5521,150),(16028,5522,2),(16029,5522,4),(16030,5522,150),(16031,5522,74),(16032,5525,1),(16033,5525,115),(16034,5525,150),(16035,5525,74),(16036,5526,1),(16037,5526,150),(16038,5527,102),(16039,5527,117),(16040,5528,132),(16041,5529,4),(16042,5529,74),(16043,5530,32),(16044,5530,73),(16045,5531,1),(16046,5531,150),(16047,5531,15),(16048,5532,114),(16049,5533,23),(16050,5533,1),(16051,5533,150),(16052,5533,74),(16053,5534,17),(16054,5534,150),(16055,5535,3),(16056,5535,20),(16057,5535,150),(16058,5536,11),(16059,5536,150),(16060,5537,1),(16061,5537,150),(16062,5538,5),(16063,5538,125),(16064,5538,74),(16065,5539,4),(16066,5539,32),(16067,5539,74),(16068,5539,73),(16069,5540,115),(16070,5540,74),(16071,5541,5),(16072,5541,74),(16073,5542,4),(16074,5542,74),(16075,5543,30),(16076,5543,5),(16077,5543,74),(16078,5544,1),(16079,5544,6),(16080,5544,150),(16081,5544,74),(16082,5548,12),(16083,5548,150),(16084,5549,86),(16085,5549,117),(16086,5550,5),(16087,5550,115),(16088,5550,74),(16089,5551,102),(16090,5551,105),(16091,5552,121),(16092,5553,1),(16093,5553,150),(16094,5554,79),(16095,5554,150),(16096,5555,11),(16097,5555,119),(16098,5555,150),(16099,5556,86),(16100,5556,142),(16101,5556,126),(16102,5556,150),(16103,5557,4),(16104,5557,74),(16105,5558,83),(16106,5559,2),(16107,5559,150),(16108,5560,1),(16109,5560,79),(16110,5560,150),(16111,5561,1),(16112,5561,150),(16113,5561,23),(16114,5561,15),(16115,5562,1),(16116,5562,150),(16117,5562,23),(16118,5562,15),(16119,5563,5),(16120,5563,79),(16121,5563,150),(16122,5563,74),(16123,5564,21),(16124,5564,150),(16125,5565,3),(16126,5565,2),(16127,5565,113),(16128,5565,150),(16129,5566,1),(16130,5566,6),(16131,5566,150),(16132,5566,74),(16133,5567,5),(16134,5567,40),(16135,5567,74),(16136,5568,79),(16137,5568,150),(16138,5569,134),(16139,5569,135),(16140,5570,5),(16141,5570,74),(16142,5571,5),(16143,5571,74),(16144,5572,12),(16145,5572,150),(16146,5573,5),(16147,5573,116),(16148,5573,74),(16149,5574,1),(16150,5574,113),(16151,5574,150),(16152,5575,101),(16153,5576,5),(16154,5576,74),(16155,5577,1),(16156,5577,3),(16157,5577,150),(16158,5578,5),(16159,5578,74),(16160,5579,30),(16161,5579,5),(16162,5579,116),(16163,5579,74),(16164,5580,8),(16165,5580,21),(16166,5580,13),(16167,5580,150),(16168,5580,74),(16169,5581,4),(16170,5581,115),(16171,5581,74),(16172,5583,5),(16173,5583,74),(16174,5584,5),(16175,5584,40),(16176,5584,74),(16177,5585,82),(16178,5585,79),(16179,5585,80),(16180,5585,150),(16181,5586,1),(16182,5586,11),(16183,5586,150),(16184,5587,137),(16185,5587,5),(16186,5587,10),(16187,5587,74),(16188,5588,1),(16189,5588,32),(16190,5588,150),(16191,5588,73),(16192,5589,4),(16193,5589,74),(16194,5590,132),(16195,5590,128),(16196,5591,125),(16197,5593,2),(16198,5593,116),(16199,5593,150),(16200,5594,2),(16201,5594,150),(16202,5595,4),(16203,5595,74),(16204,5596,5),(16205,5596,74),(16206,5597,2),(16207,5597,150),(16208,5598,5),(16209,5598,122),(16210,5598,74),(16211,5600,79),(16212,5600,150),(16213,5601,12),(16214,5601,150),(16215,5602,41),(16216,5602,150),(16217,5603,5),(16218,5603,74),(16219,5604,1),(16220,5604,142),(16221,5604,150),(16222,5605,2),(16223,5605,150),(16224,5606,4),(16225,5606,74),(16226,5607,4),(16227,5607,11),(16228,5607,150),(16229,5607,74),(16230,5608,5),(16231,5608,74),(16232,5609,2),(16233,5609,4),(16234,5609,150),(16235,5609,74),(16236,5610,2),(16237,5610,150),(16238,5611,41),(16239,5611,150),(16240,5612,79),(16241,5612,150),(16242,5613,86),(16243,5613,142),(16244,5614,4),(16245,5614,74),(16246,5615,1),(16247,5615,5),(16248,5615,150),(16249,5615,74),(16250,5616,4),(16251,5616,6),(16252,5616,1),(16253,5617,1),(16254,5617,4),(16255,5617,150),(16256,5617,74),(16257,5618,11),(16258,5618,150),(16259,5619,1),(16260,5619,86),(16261,5619,150),(16262,5620,5),(16263,5620,125),(16264,5620,74),(16265,5621,1),(16266,5621,142),(16267,5621,150),(16268,5622,2),(16269,5622,4),(16270,5622,150),(16271,5622,74),(16272,5623,125),(16273,5623,116),(16274,5624,121),(16275,5625,2),(16276,5625,4),(16277,5625,119),(16278,5625,150),(16279,5625,74),(16280,5626,4),(16281,5626,74),(16282,5627,1),(16283,5627,3),(16284,5627,6),(16285,5627,150),(16286,5627,74),(16287,5628,5),(16288,5628,74),(16289,5629,2),(16290,5629,78),(16291,5629,150),(16292,5630,5),(16293,5630,138),(16294,5630,111),(16295,5630,74),(16296,5631,86),(16297,5631,142),(16298,5632,2),(16299,5633,1),(16300,5633,150),(16301,5634,12),(16302,5634,150),(16303,5635,1),(16304,5635,3),(16305,5635,150),(16306,5636,124),(16307,5637,2),(16308,5637,4),(16309,5637,150),(16310,5637,74),(16311,5638,6),(16312,5638,7),(16313,5639,5),(16314,5639,74),(16315,5642,2),(16316,5642,122),(16317,5642,150),(16318,5643,11),(16319,5643,150),(16320,5644,86),(16321,5644,142),(16322,5645,5),(16323,5645,74),(16324,5646,5),(16325,5646,74),(16326,5647,1),(16327,5647,143),(16328,5647,150),(16329,5648,4),(16330,5648,74),(16331,5649,125),(16332,5649,140),(16333,5650,7),(16334,5650,5),(16335,5650,74),(16336,5651,102),(16337,5651,105),(16338,5652,2),(16339,5652,121),(16340,5652,150),(16341,5653,138),(16342,5654,139),(16343,5655,49),(16344,5656,2),(16345,5656,150),(16346,5657,21),(16347,5657,37),(16348,5657,13),(16349,5657,150),(16350,5657,74),(16351,5658,4),(16352,5658,74),(16353,5659,1),(16354,5659,4),(16355,5659,150),(16356,5659,74),(16357,5660,5),(16358,5660,79),(16359,5660,150),(16360,5660,74),(16361,5661,5),(16362,5661,74),(16363,5662,3),(16364,5662,5),(16365,5662,37),(16366,5662,150),(16367,5662,74),(16368,5663,5),(16369,5663,111),(16370,5663,74),(16371,5664,16),(16372,5664,1),(16373,5664,150),(16374,5664,74),(16375,5665,125),(16376,5665,119),(16377,5666,79),(16378,5666,150),(16379,5667,5),(16380,5667,74),(16381,5668,6),(16382,5668,74),(16383,5671,2),(16384,5671,150),(16385,5672,79),(16386,5672,150),(16387,5673,5),(16388,5673,74),(16389,5674,1),(16390,5674,3),(16391,5674,150),(16392,5675,1),(16393,5675,150),(16394,5676,2),(16395,5676,150),(16396,5677,2),(16397,5677,150),(16398,5678,2),(16399,5678,78),(16400,5678,150),(16401,5679,1),(16402,5679,116),(16403,5679,136),(16404,5679,150),(16405,5680,20),(16406,5680,150),(16407,5681,1),(16408,5681,5),(16409,5681,150),(16410,5681,74),(16411,5682,5),(16412,5682,74),(16413,5683,12),(16414,5683,150),(16415,5684,5),(16416,5684,84),(16417,5684,74),(16418,5685,79),(16419,5685,150),(16420,5686,79),(16421,5686,150),(16422,5687,16),(16423,5687,3),(16424,5687,74),(16425,5688,30),(16426,5689,1),(16427,5689,3),(16428,5689,150),(16429,5690,2),(16430,5690,150),(16431,5691,125),(16432,5691,138),(16433,5693,5),(16434,5693,74),(16435,5694,5),(16436,5694,74),(16437,5695,2),(16438,5695,150),(16439,5696,5),(16440,5696,74),(16441,5697,1),(16442,5697,6),(16443,5697,150),(16444,5697,74),(16445,5698,4),(16446,5698,5),(16447,5698,74),(16448,5699,102),(16449,5699,135),(16450,5700,2),(16451,5700,150),(16452,5700,74),(16453,5701,5),(16454,5701,74),(16455,5702,30),(16456,5704,8),(16457,5704,12),(16458,5704,150),(16459,5704,74),(16460,5705,5),(16461,5705,74),(16462,5706,1),(16463,5706,6),(16464,5706,150),(16465,5706,74),(16466,5708,1),(16467,5708,150),(16468,5709,5),(16469,5709,74),(16470,5711,79),(16471,5711,150),(16472,5712,6),(16473,5712,141),(16474,5712,74),(16475,5713,102),(16476,5713,105),(16477,5714,138),(16478,5715,2),(16479,5715,150),(16480,5716,1),(16481,5716,4),(16482,5716,150),(16483,5716,74),(16484,5717,5),(16485,5717,116),(16486,5717,74),(16487,5718,125),(16488,5719,15),(16489,5719,2),(16490,5719,150),(16491,5719,74),(16492,5720,1),(16493,5720,74),(16494,5721,1),(16495,5721,137),(16496,5721,6),(16497,5721,150),(16498,5721,74),(16499,5722,4),(16500,5722,138),(16501,5722,74),(16502,5723,122),(16503,5723,84),(16504,5723,37),(16505,5723,150),(16506,5724,2),(16507,5724,150),(16508,5725,6),(16509,5725,142),(16510,5725,74),(16511,5726,1),(16512,5726,150),(16513,5727,5),(16514,5727,74),(16515,5728,115),(16516,5728,74),(16517,5729,102),(16518,5729,117),(16519,5730,1),(16520,5730,5),(16521,5730,150),(16522,5730,74),(16523,5731,2),(16524,5731,150),(16525,5732,1),(16526,5732,4),(16527,5732,150),(16528,5732,74),(16529,5733,79),(16530,5733,150),(16531,5734,1),(16532,5734,6),(16533,5734,150),(16534,5734,74),(16535,5735,1),(16536,5735,150),(16537,5736,5),(16538,5736,79),(16539,5736,150),(16540,5736,74),(16541,5737,79),(16542,5737,150),(16543,5738,1),(16544,5738,150),(16545,5739,2),(16546,5739,150),(16547,5740,1),(16548,5740,150),(16549,5741,6),(16550,5741,74),(16551,5742,3),(16552,5742,150),(16553,5743,5),(16554,5743,74),(16555,5744,5),(16556,5744,79),(16557,5744,150),(16558,5744,74),(16559,5745,16),(16560,5745,11),(16561,5745,150),(16562,5745,74),(16563,5746,1),(16564,5746,150),(16565,5747,115),(16566,5747,74),(16567,5748,10),(16568,5748,74),(16569,5749,5),(16570,5749,79),(16571,5749,78),(16572,5749,150),(16573,5749,74),(16574,5750,5),(16575,5750,138),(16576,5750,111),(16577,5750,74),(16578,5751,5),(16579,5751,74),(16580,5752,5),(16581,5752,74),(16582,5753,2),(16583,5753,150),(16584,5754,5),(16585,5754,74),(16586,5755,1),(16587,5755,3),(16588,5755,150),(16589,5756,5),(16590,5756,79),(16591,5756,116),(16592,5756,118),(16593,5756,150),(16594,5756,74),(16595,5757,1),(16596,5757,5),(16597,5757,150),(16598,5757,74),(16599,5758,5),(16600,5758,74),(16601,5759,125),(16602,5760,1),(16603,5760,115),(16604,5760,150),(16605,5760,74),(16606,5761,1),(16607,5761,150),(16608,5761,3),(16609,5762,102),(16610,5762,105),(16611,5763,5),(16612,5763,125),(16613,5763,74),(16614,5764,86),(16615,5764,117),(16616,5765,1),(16617,5765,7),(16618,5765,79),(16619,5765,150),(16620,5765,74),(16621,5766,5),(16622,5766,74),(16623,5767,1),(16624,5767,5),(16625,5767,150),(16626,5767,74),(16627,5768,5),(16628,5768,99),(16629,5768,115),(16630,5768,74),(16631,5769,1),(16632,5769,150),(16633,5770,49),(16634,5771,4),(16635,5771,21),(16636,5771,95),(16637,5771,150),(16638,5771,74),(16639,5772,102),(16640,5772,117),(16641,5773,5),(16642,5773,74),(16643,5774,49),(16644,5775,138),(16645,5776,1),(16646,5776,6),(16647,5776,142),(16648,5776,150),(16649,5776,74),(16650,5777,11),(16651,5777,150),(16652,5778,2),(16653,5778,150),(16654,5779,5),(16655,5779,74),(16656,5780,2),(16657,5780,150),(16658,5781,1),(16659,5781,150),(16660,5782,1),(16661,5782,150),(16662,5783,1),(16663,5783,150),(16664,5784,121),(16665,5785,5),(16666,5785,125),(16667,5785,140),(16668,5785,74),(16669,5786,2),(16670,5786,150),(16671,5787,5),(16672,5787,74),(16673,5788,1),(16674,5788,97),(16675,5788,150),(16676,5789,79),(16677,5789,150),(16678,5790,104),(16679,5791,5),(16680,5791,74),(16681,5792,142),(16682,5793,1),(16683,5793,150),(16684,5794,5),(16685,5794,79),(16686,5794,150),(16687,5794,74),(16688,5795,115),(16689,5795,74),(16690,5796,1),(16691,5796,150),(16692,5797,121),(16693,5798,5),(16694,5798,74),(16695,5799,21),(16696,5799,150),(16697,5800,139),(16698,5800,113),(16699,5800,150),(16700,5801,5),(16701,5801,116),(16702,5801,74),(16703,5802,2),(16704,5802,1),(16705,5803,114),(16706,5804,1),(16707,5804,10),(16708,5804,150),(16709,5804,74),(16710,5805,7),(16711,5805,74),(16712,5806,4),(16713,5806,74),(16714,5807,79),(16715,5807,150),(16716,5808,2),(16717,5808,150),(16718,5809,2),(16719,5809,86),(16720,5809,150),(16721,5810,86),(16722,5810,142),(16723,5811,2),(16724,5811,150),(16725,5812,4),(16726,5812,74),(16727,5813,5),(16728,5813,74),(16729,5814,2),(16730,5814,150),(16731,5815,2),(16732,5815,150),(16733,5816,1),(16734,5816,3),(16735,5816,150),(16736,5817,5),(16737,5817,74),(16738,5818,10),(16739,5818,74),(16740,5819,4),(16741,5819,115),(16742,5819,150),(16743,5820,1),(16744,5820,79),(16745,5820,150),(16746,5821,1),(16747,5821,2),(16748,5821,116),(16749,5821,119),(16750,5821,75),(16751,5821,150),(16752,5822,5),(16753,5822,74),(16754,5823,30),(16755,5823,84),(16756,5824,2),(16757,5824,6),(16758,5824,150),(16759,5824,74),(16760,5825,5),(16761,5825,74),(16762,5826,3),(16763,5826,150),(16764,5827,7),(16765,5827,74),(16766,5829,4),(16767,5829,74),(16768,5830,8),(16769,5830,125),(16770,5830,110),(16771,5830,74),(16772,5832,1),(16773,5832,20),(16774,5832,150),(16775,5833,1),(16776,5833,7),(16777,5833,150),(16778,5833,74),(16779,5834,2),(16780,5834,5),(16781,5834,150),(16782,5834,74),(16783,5835,1),(16784,5835,137),(16785,5835,150),(16786,5835,74),(16787,5836,86),(16788,5836,142),(16789,5837,11),(16790,5837,150),(16791,5838,5),(16792,5838,138),(16793,5838,99),(16794,5838,74),(16795,5839,1),(16796,5839,6),(16797,5839,150),(16798,5839,74),(16799,5840,1),(16800,5840,150),(16801,5841,21),(16802,5841,150),(16803,5842,4),(16804,5842,74),(16805,5843,4),(16806,5843,74),(16807,5844,1),(16808,5844,78),(16809,5844,150),(16810,5845,5),(16811,5845,125),(16812,5845,97),(16813,5845,74),(16814,5846,102),(16815,5846,105),(16816,5847,5),(16817,5847,96),(16818,5847,74),(16819,5848,5),(16820,5848,99),(16821,5848,74),(16822,5849,139),(16823,5849,41),(16824,5849,150),(16825,5850,5),(16826,5850,140),(16827,5850,74),(16828,5851,1),(16829,5851,6),(16830,5851,150),(16831,5851,74),(16832,5852,41),(16833,5852,12),(16834,5852,150),(16835,5853,2),(16836,5853,4),(16837,5853,5),(16838,5853,84),(16839,5853,150),(16840,5853,74),(16841,5854,125),(16842,5854,119),(16843,5855,5),(16844,5855,10),(16845,5855,74),(16846,5856,125),(16847,5856,138),(16848,5856,116),(16849,5857,125),(16850,5857,140),(16851,5858,5),(16852,5858,74),(16853,5860,5),(16854,5860,74),(16855,5861,3),(16856,5861,2),(16857,5861,150),(16858,5862,6),(16859,5862,74),(16860,5863,4),(16861,5863,74),(16862,5864,5),(16863,5864,74),(16864,5865,5),(16865,5865,74),(16866,5866,3),(16867,5866,150),(16868,5867,125),(16869,5868,5),(16870,5868,74),(16871,5869,30),(16872,5870,4),(16873,5870,74),(16874,5871,5),(16875,5871,74),(16876,5872,4),(16877,5872,74),(16878,5873,2),(16879,5873,4),(16880,5873,116),(16881,5873,150),(16882,5873,74),(16883,5874,5),(16884,5874,138),(16885,5874,74),(16886,5875,5),(16887,5875,74),(16888,5876,8),(16889,5876,6),(16890,5876,21),(16891,5876,150),(16892,5876,74),(16893,5877,125),(16894,5878,1),(16895,5878,150),(16896,5879,114),(16897,5880,5),(16898,5880,113),(16899,5880,150),(16900,5880,74),(16901,5881,30),(16902,5881,97),(16903,5881,10),(16904,5881,74),(16905,5882,1),(16906,5882,4),(16907,5882,150),(16908,5882,74),(16909,5883,4),(16910,5883,74),(16911,5884,2),(16912,5884,150),(16913,5885,4),(16914,5885,74),(16915,5886,5),(16916,5886,74),(16917,5887,40),(16918,5888,1),(16919,5888,150),(16920,5889,16),(16921,5889,32),(16922,5889,74),(16923,5889,73),(16924,5890,79),(16925,5890,150),(16926,5891,2),(16927,5891,96),(16928,5891,150),(16929,5892,5),(16930,5892,74),(16931,5893,6),(16932,5893,74),(16933,5894,3),(16934,5894,150),(16935,5896,113),(16936,5896,150),(16937,5897,79),(16938,5897,150),(16939,5898,5),(16940,5898,74),(16941,5899,126),(16942,5899,150),(16943,5900,5),(16944,5900,138),(16945,5900,74),(16946,5901,5),(16947,5901,114),(16948,5901,74),(16949,5902,1),(16950,5902,150),(16951,5903,114),(16952,5905,2),(16953,5905,150),(16954,5906,1),(16955,5906,150),(16956,5907,30),(16957,5908,5),(16958,5908,125),(16959,5908,74),(16960,5909,1),(16961,5909,8),(16962,5909,21),(16963,5909,119),(16964,5909,78),(16965,5909,150),(16966,5909,74),(16967,5910,21),(16968,5910,150),(16969,5911,1),(16970,5911,150),(16971,5912,1),(16972,5912,3),(16973,5912,150),(16974,5913,97),(16975,5914,4),(16976,5914,74),(16977,5915,5),(16978,5915,74),(16979,5916,79),(16980,5916,150),(16981,5917,5),(16982,5917,74),(16983,5918,1),(16984,5918,5),(16985,5918,150),(16986,5918,74),(16987,5919,10),(16988,5919,1),(16989,5919,74),(16990,5920,1),(16991,5920,4),(16992,5920,150),(16993,5920,74),(16994,5921,5),(16995,5921,74),(16996,5923,1),(16997,5923,32),(16998,5923,150),(16999,5923,73),(17000,5924,5),(17001,5924,138),(17002,5924,74),(17003,5925,1),(17004,5925,4),(17005,5925,150),(17006,5925,74),(17007,5926,79),(17008,5926,150),(17009,5927,28),(17010,5928,5),(17011,5928,74),(17012,5929,4),(17013,5929,74),(17014,5930,1),(17015,5930,10),(17016,5930,150),(17017,5930,74),(17018,5931,102),(17019,5931,105),(17020,5932,5),(17021,5932,74),(17022,5933,5),(17023,5933,74),(17024,5934,1),(17025,5934,6),(17026,5934,142),(17027,5934,150),(17028,5934,74),(17029,5935,1),(17030,5935,150),(17031,5936,1),(17032,5936,115),(17033,5936,111),(17034,5936,150),(17035,5936,74),(17036,5937,1),(17037,5937,150),(17038,5939,1),(17039,5939,125),(17040,5939,150),(17041,5940,5),(17042,5940,74),(17043,5941,2),(17044,5941,150),(17045,5942,3),(17046,5942,2),(17047,5942,150),(17048,5943,2),(17049,5943,116),(17050,5943,150),(17051,5944,1),(17052,5944,150),(17053,5946,5),(17054,5946,74),(17055,5947,5),(17056,5947,74),(17057,5948,15),(17058,5948,41),(17059,5948,12),(17060,5948,150),(17061,5948,74),(17062,5949,49),(17063,5949,25),(17064,5949,74),(17065,5950,1),(17066,5950,7),(17067,5950,79),(17068,5950,150),(17069,5950,74),(17070,5952,1),(17071,5952,4),(17072,5952,150),(17073,5952,74),(17074,5953,2),(17075,5953,119),(17076,5953,150),(17077,5954,1),(17078,5954,142),(17079,5954,150),(17080,5954,74),(17081,5955,4),(17082,5955,74),(17083,5956,30),(17084,5956,115),(17085,5957,7),(17086,5957,74),(17087,5958,5),(17088,5958,74),(17089,5959,1),(17090,5959,5),(17091,5959,150),(17092,5959,74),(17093,5960,5),(17094,5960,74),(17095,5961,1),(17096,5961,3),(17097,5961,150),(17098,5962,1),(17099,5962,10),(17100,5962,150),(17101,5962,74),(17102,5963,1),(17103,5963,150),(17104,5964,102),(17105,5964,105),(17106,5965,2),(17107,5965,150),(17108,5966,30),(17109,5967,2),(17110,5967,102),(17111,5967,93),(17112,5967,150),(17113,5968,138),(17114,5969,144),(17115,5969,12),(17116,5969,150),(17117,5969,74),(17118,5970,5),(17119,5970,74),(17120,5971,2),(17121,5971,150),(17122,5972,21),(17123,5972,27),(17124,5972,8),(17125,5972,13),(17126,5973,5),(17127,5973,74),(17128,5974,5),(17129,5974,74),(17130,5975,5),(17131,5975,40),(17132,5975,74),(17133,5976,125),(17134,5976,47),(17135,5976,13),(17136,5976,74),(17137,5977,3),(17138,5977,150),(17139,5978,5),(17140,5978,116),(17141,5978,74),(17142,5979,21),(17143,5979,150),(17144,5980,1),(17145,5980,4),(17146,5980,150),(17147,5980,74),(17148,5981,5),(17149,5981,111),(17150,5981,74),(17151,5982,1),(17152,5982,114),(17153,5982,150),(17154,5983,2),(17155,5983,150),(17156,5985,4),(17157,5985,5),(17158,5985,74),(17159,5986,49),(17160,5987,5),(17161,5987,74),(17162,5988,2),(17163,5988,150),(17164,5989,2),(17165,5989,5),(17166,5989,150),(17167,5989,74),(17168,5990,5),(17169,5990,74),(17170,5991,5),(17171,5991,125),(17172,5991,140),(17173,5991,142),(17174,5991,74),(17175,5992,79),(17176,5992,150),(17177,5993,102),(17178,5993,117),(17179,5994,4),(17180,5994,5),(17181,5994,122),(17182,5994,74),(17183,5995,5),(17184,5995,99),(17185,5995,74),(17186,5996,5),(17187,5996,125),(17188,5996,74),(17189,5997,125),(17190,5997,140),(17191,5998,4),(17192,5998,74),(17193,5999,79),(17194,5999,150),(17195,6000,5),(17196,6000,84),(17197,6000,74),(17198,6001,5),(17199,6001,74),(17200,6002,1),(17201,6002,150),(17202,6003,79),(17203,6003,150),(17204,6004,5),(17205,6004,74),(17206,6005,1),(17207,6005,5),(17208,6005,150),(17209,6005,74),(17210,6006,114),(17211,6007,2),(17212,6007,122),(17213,6007,150),(17214,6008,2),(17215,6008,4),(17216,6008,150),(17217,6008,74),(17218,6009,5),(17219,6009,74),(17220,6010,5),(17221,6010,74),(17222,6011,5),(17223,6011,138),(17224,6011,74),(17225,6012,5),(17226,6012,74),(17227,6013,79),(17228,6013,150),(17229,6015,5),(17230,6015,74),(17231,6016,5),(17232,6016,74),(17233,6017,2),(17234,6017,119),(17235,6017,150),(17236,6018,5),(17237,6018,74),(17238,6019,5),(17239,6019,74),(17240,6020,1),(17241,6020,150),(17242,6021,1),(17243,6021,150),(17244,6023,30),(17245,6023,2),(17246,6023,115),(17247,6023,150),(17248,6024,121),(17249,6025,79),(17250,6025,150),(17251,6026,5),(17252,6026,74),(17253,6027,5),(17254,6027,99),(17255,6027,74),(17256,6028,5),(17257,6028,40),(17258,6028,74),(17259,6029,5),(17260,6029,74),(17261,6030,5),(17262,6030,74),(17263,6031,1),(17264,6031,143),(17265,6031,84),(17266,6031,150),(17267,6032,5),(17268,6032,74),(17269,6033,1),(17270,6033,150),(17271,6034,79),(17272,6034,150),(17273,6035,3),(17274,6035,150),(17275,6037,5),(17276,6037,74),(17277,6038,5),(17278,6038,74),(17279,6039,5),(17280,6039,74),(17281,6040,2),(17282,6040,150),(17283,6042,5),(17284,6042,74),(17285,6043,5),(17286,6043,74),(17287,6044,5),(17288,6044,74),(17289,6045,5),(17290,6045,140),(17291,6045,74),(17292,6046,5),(17293,6046,74),(17294,6047,5),(17295,6047,74),(17296,6048,5),(17297,6048,142),(17298,6048,74),(17299,6049,1),(17300,6049,2),(17301,6049,150),(17302,6050,5),(17303,6050,74),(17304,6051,5),(17305,6051,74),(17306,6052,1),(17307,6052,3),(17308,6052,150),(17309,6053,1),(17310,6053,150),(17311,6054,5),(17312,6054,74),(17313,6055,5),(17314,6055,74),(17315,6056,30),(17316,6057,2),(17317,6057,150),(17318,6058,78),(17319,6059,4),(17320,6059,74),(17321,6060,5),(17322,6060,74),(17323,6061,86),(17324,6061,142),(17325,6062,11),(17326,6062,150),(17327,6063,4),(17328,6063,5),(17329,6063,84),(17330,6063,74),(17331,6064,2),(17332,6064,5),(17333,6064,150),(17334,6064,74),(17335,6065,116),(17336,6066,5),(17337,6066,84),(17338,6066,74),(17339,6067,122),(17340,6068,4),(17341,6068,74),(17342,6069,5),(17343,6069,96),(17344,6069,74),(17345,6070,79),(17346,6070,150),(17347,6071,5),(17348,6071,74),(17349,6073,56),(17350,6073,28),(17351,6073,150),(17352,6074,4),(17353,6074,74),(17354,6075,5),(17355,6075,122),(17356,6075,74),(17357,6076,1),(17358,6076,150),(17359,6077,1),(17360,6077,150),(17361,6078,5),(17362,6078,74),(17363,6079,6),(17364,6079,74),(17365,6080,79),(17366,6080,150),(17367,6081,5),(17368,6081,74),(17369,6082,5),(17370,6082,74),(17371,6083,1),(17372,6083,150),(17373,6084,5),(17374,6084,74),(17375,6085,30),(17376,6085,5),(17377,6085,116),(17378,6085,96),(17379,6085,74),(17380,6086,5),(17381,6086,140),(17382,6086,74),(17383,6087,11),(17384,6087,150),(17385,6088,5),(17386,6088,116),(17387,6088,74),(17388,6089,1),(17389,6089,5),(17390,6089,150),(17391,6089,74),(17392,6090,1),(17393,6090,150),(17394,6091,5),(17395,6091,74),(17396,6092,1),(17397,6092,150),(17398,6093,30),(17399,6093,5),(17400,6093,125),(17401,6093,74),(17402,6094,5),(17403,6094,74),(17404,6095,1),(17405,6095,5),(17406,6095,150),(17407,6095,74),(17408,6096,6),(17409,6096,7),(17410,6096,1),(17411,6098,4),(17412,6098,74),(17413,6099,5),(17414,6099,6),(17415,6099,74),(17416,6100,79),(17417,6100,78),(17418,6100,150),(17419,6101,79),(17420,6101,32),(17421,6101,150),(17422,6101,73),(17423,6102,1),(17424,6102,5),(17425,6102,150),(17426,6102,74),(17427,6103,4),(17428,6103,74),(17429,6104,5),(17430,6104,74),(17431,6105,97),(17432,6106,2),(17433,6106,150),(17434,6107,5),(17435,6107,119),(17436,6107,74),(17437,6109,3),(17438,6109,2),(17439,6109,150),(17440,6111,2),(17441,6111,150),(17442,6112,5),(17443,6112,74),(17444,6114,41),(17445,6114,32),(17446,6114,150),(17447,6114,73),(17448,6116,2),(17449,6116,150),(17450,6117,5),(17451,6117,74),(17452,6119,5),(17453,6119,79),(17454,6119,150),(17455,6119,74),(17456,6120,116),(17457,6120,84),(17458,6121,11),(17459,6121,150),(17460,6122,5),(17461,6122,99),(17462,6122,74),(17463,6123,3),(17464,6123,2),(17465,6123,150),(17466,6124,1),(17467,6124,150),(17468,6125,1),(17469,6125,150),(17470,6126,5),(17471,6126,74),(17472,6127,4),(17473,6127,74),(17474,6128,84),(17475,6129,5),(17476,6129,138),(17477,6129,74),(17478,6130,2),(17479,6130,150),(17480,6131,1),(17481,6131,115),(17482,6131,150),(17483,6131,74),(17484,6132,2),(17485,6132,5),(17486,6132,150),(17487,6132,74),(17488,6133,5),(17489,6133,116),(17490,6133,74),(17491,6134,5),(17492,6134,74),(17493,6135,30),(17494,6135,5),(17495,6135,74),(17496,6136,2),(17497,6136,79),(17498,6136,78),(17499,6136,150),(17500,6137,5),(17501,6137,74),(17502,6138,6),(17503,6138,55),(17504,6138,74),(17505,6139,21),(17506,6139,150),(17507,6140,2),(17508,6140,150),(17509,6141,4),(17510,6141,74),(17511,6142,120),(17512,6143,4),(17513,6143,74),(17514,6144,1),(17515,6144,150),(17516,6145,2),(17517,6145,114),(17518,6145,150),(17519,6146,4),(17520,6146,74),(17521,6147,5),(17522,6147,74),(17523,6148,30),(17524,6148,114),(17525,6149,5),(17526,6149,74),(17527,6150,5),(17528,6150,74),(17529,6151,5),(17530,6151,86),(17531,6151,78),(17532,6151,118),(17533,6151,74),(17534,6152,5),(17535,6152,74),(17536,6153,5),(17537,6153,74),(17538,6154,5),(17539,6154,74),(17540,6155,114),(17541,6156,5),(17542,6156,74),(17543,6157,21),(17544,6157,150),(17545,6158,115),(17546,6158,74),(17547,6159,5),(17548,6159,74),(17549,6160,74),(17550,6161,115),(17551,6161,74),(17552,6162,1),(17553,6162,150),(17554,6163,2),(17555,6163,5),(17556,6163,150),(17557,6163,74),(17558,6164,5),(17559,6164,115),(17560,6164,74),(17561,6165,5),(17562,6165,140),(17563,6165,74),(17564,6166,5),(17565,6166,74),(17566,6167,5),(17567,6167,74),(17568,6168,5),(17569,6168,74),(17570,6169,5),(17571,6169,79),(17572,6169,150),(17573,6169,74),(17574,6170,3),(17575,6170,113),(17576,6170,94),(17577,6170,150),(17578,6171,115),(17579,6171,118),(17580,6171,74),(17581,6172,102),(17582,6172,105),(17583,6173,121),(17584,6174,2),(17585,6174,150),(17586,6175,4),(17587,6175,74),(17588,6176,3),(17589,6176,20),(17590,6176,17),(17591,6176,94),(17592,6176,150),(17593,6178,11),(17594,6178,40),(17595,6178,150),(17596,6180,1),(17597,6180,150),(17598,6181,114),(17599,6181,111),(17600,6182,2),(17601,6182,4),(17602,6182,38),(17603,6182,150),(17604,6182,74),(17605,6183,111),(17606,6183,101),(17607,6184,4),(17608,6184,150),(17609,6184,74),(17610,6185,5),(17611,6185,74),(17612,6186,5),(17613,6186,116),(17614,6186,74),(17615,6187,4),(17616,6187,74),(17617,6188,5),(17618,6188,49),(17619,6188,74),(17620,6189,1),(17621,6189,113),(17622,6190,5),(17623,6190,138),(17624,6190,74),(17625,6191,5),(17626,6191,116),(17627,6191,74),(17628,6192,5),(17629,6192,98),(17630,6192,74),(17631,6193,5),(17632,6193,74),(17633,6194,5),(17634,6194,120),(17635,6194,74),(17636,6195,5),(17637,6195,74),(17638,6196,11),(17639,6196,150),(17640,6197,5),(17641,6197,140),(17642,6197,74),(17643,6198,5),(17644,6198,114),(17645,6198,74),(17646,6200,5),(17647,6200,74),(17648,6201,5),(17649,6201,74),(17650,6202,30),(17651,6203,1),(17652,6203,3),(17653,6203,150),(17654,6204,1),(17655,6204,79),(17656,6204,150),(17657,6205,5),(17658,6205,74),(17659,6206,4),(17660,6206,115),(17661,6206,74),(17662,6207,5),(17663,6207,74),(17664,6209,1),(17665,6209,150),(17666,6210,116),(17667,6211,5),(17668,6211,74),(17669,6212,5),(17670,6212,74),(17671,6213,2),(17672,6213,6),(17673,6213,150),(17674,6213,74),(17675,6214,4),(17676,6214,122),(17677,6214,84),(17678,6214,74),(17679,6215,5),(17680,6215,74),(17681,6217,1),(17682,6217,150),(17683,6218,5),(17684,6218,74),(17685,6219,2),(17686,6219,5),(17687,6219,122),(17688,6219,150),(17689,6219,74),(17690,6220,2),(17691,6220,5),(17692,6220,138),(17693,6220,150),(17694,6220,74),(17695,6221,1),(17696,6221,5),(17697,6221,150),(17698,6221,74),(17699,6222,1),(17700,6222,2),(17701,6222,150),(17702,6223,114),(17703,6224,5),(17704,6224,74),(17705,6225,5),(17706,6225,74),(17707,6226,32),(17708,6226,73),(17709,6228,4),(17710,6228,74),(17711,6229,5),(17712,6229,74),(17713,6230,79),(17714,6230,150),(17715,6231,2),(17716,6231,150),(17717,6232,5),(17718,6232,74),(17719,6233,116),(17720,6234,5),(17721,6234,74),(17722,6235,2),(17723,6235,150),(17724,6236,5),(17725,6236,143),(17726,6236,74),(17727,6238,5),(17728,6238,74),(17729,6239,5),(17730,6239,74),(17731,6240,5),(17732,6240,74),(17733,6241,1),(17734,6241,4),(17735,6241,150),(17736,6241,74),(17737,6242,5),(17738,6242,74),(17739,6244,5),(17740,6244,114),(17741,6244,111),(17742,6244,74),(17743,6245,5),(17744,6245,74),(17745,6246,40),(17746,6247,1),(17747,6247,150),(17748,6248,5),(17749,6248,74),(17750,6249,5),(17751,6249,74),(17752,6250,1),(17753,6250,5),(17754,6250,150),(17755,6250,74),(17756,6251,5),(17757,6251,99),(17758,6251,74),(17759,6252,1),(17760,6252,5),(17761,6252,150),(17762,6252,74),(17763,6253,4),(17764,6253,74),(17765,6254,4),(17766,6254,74),(17767,6255,20),(17768,6255,94),(17769,6255,150),(17770,6256,114),(17771,6257,5),(17772,6257,74),(17773,6258,5),(17774,6258,74),(17775,6259,11),(17776,6259,150),(17777,6260,5),(17778,6260,74),(17779,6261,20),(17780,6261,150),(17781,6262,5),(17782,6262,96),(17783,6262,74),(17784,6263,114),(17785,6264,5),(17786,6264,74),(17787,6265,114),(17788,6266,122),(17789,6266,115),(17790,6266,97),(17791,6266,74),(17792,6267,2),(17793,6267,5),(17794,6267,150),(17795,6267,74),(17796,6268,5),(17797,6268,74),(17798,6269,5),(17799,6269,74),(17800,6270,5),(17801,6270,74),(17802,6271,2),(17803,6271,5),(17804,6271,150),(17805,6271,74),(17806,6273,1),(17807,6273,3),(17808,6274,32),(17809,6274,73),(17810,6275,5),(17811,6275,74),(17812,6276,5),(17813,6276,74),(17814,6277,1),(17815,6277,150),(17816,6278,2),(17817,6278,93),(17818,6278,150),(17819,6278,74),(17820,6279,10),(17821,6279,1),(17822,6279,74),(17823,6280,5),(17824,6280,116),(17825,6280,74),(17826,6281,17),(17827,6281,7),(17828,6281,6),(17829,6281,15),(17830,6281,1),(17831,6282,6),(17832,6282,15),(17833,6282,1),(17834,6282,3),(17835,6283,112),(17836,6284,5),(17837,6284,74),(17838,6285,3),(17839,6285,8),(17840,6285,150),(17841,6285,74),(17842,6286,2),(17843,6286,142),(17844,6286,150),(17845,6288,5),(17846,6288,74),(17847,6289,1),(17848,6289,11),(17849,6290,114),(17850,6291,1),(17851,6291,150),(17852,6292,1),(17853,6292,150),(17854,6293,114),(17855,6293,111),(17856,6294,5),(17857,6294,74),(17858,6295,30),(17859,6296,5),(17860,6296,74),(17861,6297,2),(17862,6297,150),(17863,6299,116),(17864,6299,84),(17865,6300,2),(17866,6300,150),(17867,6301,4),(17868,6301,6),(17869,6301,74),(17870,6304,84),(17871,6305,5),(17872,6305,74),(17873,6306,30),(17874,6306,140),(17875,6307,114),(17876,6308,5),(17877,6308,74),(17878,6310,5),(17879,6310,74),(17880,6311,7),(17881,6311,1),(17882,6311,11),(17883,6312,74),(17884,6313,5),(17885,6313,74),(17886,6314,79),(17887,6314,4),(17888,6314,1),(17889,6315,114),(17890,6316,114),(17891,6317,1),(17892,6317,150),(17893,6318,30),(17894,6318,4),(17895,6318,74),(17896,6319,23),(17897,6319,1),(17898,6320,2),(17899,6320,78),(17900,6320,150),(17901,6321,84),(17902,6321,115),(17903,6322,30),(17904,6322,5),(17905,6322,74),(17906,6323,5),(17907,6323,74),(17908,6324,5),(17909,6324,74),(17910,6325,1),(17911,6325,150),(17912,6326,5),(17913,6326,74),(17914,6327,140),(17915,6329,1),(17916,6329,150),(17917,6330,4),(17918,6330,138),(17919,6330,74),(17920,6332,1),(17921,6332,150),(17922,6333,6),(17923,6333,1),(17924,6334,5),(17925,6334,74),(17926,6335,121),(17927,6336,114),(17928,6338,5),(17929,6338,74),(17930,6340,5),(17931,6340,74),(17932,6341,114),(17933,6342,5),(17934,6342,74),(17935,6343,5),(17936,6343,74),(17937,6344,5),(17938,6344,74),(17939,6345,118),(17940,6346,2),(17941,6346,84),(17942,6346,150),(17943,6348,1),(17944,6348,150),(17945,6349,15),(17946,6349,1),(17947,6350,2),(17948,6350,3),(17949,6350,74),(17950,6351,23),(17951,6351,6),(17952,6351,15),(17953,6352,5),(17954,6352,74),(17955,6353,6),(17956,6353,1),(17957,6354,5),(17958,6354,74),(17959,6355,10),(17960,6355,6),(17961,6355,1),(17962,6356,5),(17963,6356,40),(17964,6356,74),(17965,6357,5),(17966,6357,74),(17967,6358,5),(17968,6358,74),(17969,6360,5),(17970,6360,74),(17971,6361,2),(17972,6362,2),(17973,6362,1),(17974,6363,12),(17975,6363,150),(17976,6364,5),(17977,6364,125),(17978,6364,74),(17979,6365,5),(17980,6365,74),(17981,6366,6),(17982,6366,1),(17983,6366,74),(17984,6367,2),(17985,6367,47),(17986,6367,150),(17987,6367,74),(17988,6368,5),(17989,6368,74),(17990,6369,93),(17991,6370,20),(17992,6370,1),(17993,6371,5),(17994,6371,74),(17995,6372,1),(17996,6372,74),(17997,6373,5),(17998,6373,74),(17999,6375,1),(18000,6375,3),(18001,6376,15),(18002,6376,1),(18003,6377,21),(18004,6377,150),(18005,6378,5),(18006,6378,74),(18007,6379,5),(18008,6379,74),(18009,6380,137),(18010,6380,150),(18011,6380,11),(18012,6382,1),(18013,6382,150),(18014,6383,6),(18015,6383,1),(18016,6384,1),(18017,6385,5),(18018,6385,74),(18019,6386,5),(18020,6386,74),(18021,6387,5),(18022,6387,74),(18023,6388,1),(18024,6388,150),(18025,6388,3),(18026,6389,5),(18027,6389,74),(18028,6390,6),(18029,6390,15),(18030,6390,1),(18031,6390,3),(18032,6391,6),(18033,6391,1),(18034,6391,3),(18035,6392,6),(18036,6392,15),(18037,6392,1),(18038,6394,40),(18039,6395,21),(18040,6395,8),(18041,6395,13),(18042,6395,74),(18043,6396,2),(18044,6396,150),(18045,6397,6),(18046,6397,15),(18047,6397,1),(18048,6397,3),(18049,6398,10),(18050,6398,1),(18051,6400,6),(18052,6400,1),(18053,6400,3),(18054,6401,1),(18055,6401,3),(18056,6404,5),(18057,6404,74),(18058,6406,4),(18059,6406,1),(18060,6406,113),(18061,6407,2),(18062,6407,120),(18063,6408,6),(18064,6408,15),(18065,6408,1),(18066,6409,3),(18067,6409,1),(18068,6409,74),(18069,6411,79),(18070,6412,33),(18071,6412,8),(18072,6412,25),(18073,6412,73),(18074,6414,4),(18075,6414,1),(18076,6415,16),(18077,6415,3),(18078,6416,23),(18079,6416,15),(18080,6416,1),(18081,6417,73),(18082,6417,2),(18083,6417,33),(18084,6418,73),(18085,6418,2),(18086,6418,33),(18087,6426,150),(18088,6426,7),(18089,6426,5),(18090,6427,36),(18091,6427,149),(18092,6427,5),(18093,6428,10),(18094,6428,150),(18095,6428,4),(18096,6428,6),(18097,6428,15),(18098,6429,10),(18099,6429,8),(18100,6429,4),(18101,6430,10),(18102,6430,147),(18103,6430,4),(18104,6430,95),(18105,6430,21),(18106,6430,47),(18107,6431,150),(18108,6431,7),(18109,6431,101),(18110,6431,5),(18111,6432,34),(18112,6432,149),(18113,6432,7),(18114,6432,5),(18115,6433,7),(18116,6433,6),(18117,6434,149),(18118,6434,5),(18119,6435,150),(18120,6435,4),(18121,6435,21),(18122,6435,7),(18123,6435,5),(18124,6435,47),(18125,6435,15),(18126,6436,150),(18127,6436,4),(18128,6436,7),(18129,6437,149),(18130,6437,101),(18131,6438,10),(18132,6438,147),(18133,6438,7),(18134,6438,3),(18135,6438,5),(18136,6438,30),(18137,6438,2),(18138,6439,147),(18139,6439,150),(18140,6439,4),(18141,6439,7),(18142,6439,101),(18143,6439,5),(18144,6440,8),(18145,6440,4),(18146,6440,154),(18147,6440,21),(18148,6440,7),(18149,6440,12),(18150,6441,10),(18151,6441,150),(18152,6441,7),(18153,6441,5),(18154,6441,158),(18155,6441,6),(18156,6442,34),(18157,6442,35),(18158,6442,4),(18159,6442,5),(18160,6443,10),(18161,6443,147),(18162,6443,150),(18163,6443,7),(18164,6444,4),(18165,6444,40),(18166,6444,7),(18167,6444,5),(18168,6445,4),(18169,6445,21),(18170,6445,5),(18171,6445,12),(18172,6448,10),(18173,6448,7),(18174,6448,6),(18175,6449,21),(18176,6449,47),(18177,6450,50),(18178,6451,150),(18179,6451,40),(18180,6451,101),(18181,6452,149),(18182,6452,4),(18183,6452,21),(18184,6453,147),(18185,6453,151),(18186,6453,2),(18187,6454,147),(18188,6454,21),(18189,6455,149),(18190,6455,5),(18191,6457,149),(18192,6458,34),(18193,6458,4),(18194,6458,95),(18195,6458,21),(18196,6459,147),(18197,6459,7),(18198,6459,101),(18199,6459,5),(18200,6460,10),(18201,6460,147),(18202,6460,150),(18203,6460,7),(18204,6460,6),(18205,6461,10),(18206,6461,6),(18207,6461,15),(18208,6462,149),(18209,6462,101),(18210,6463,10),(18211,6463,5),(18212,6464,7),(18213,6465,8),(18214,6465,4),(18215,6465,12),(18216,6466,150),(18217,6466,35),(18218,6466,5),(18219,6466,30),(18220,6467,4),(18221,6467,101),(18222,6467,2),(18223,6468,147),(18224,6468,7),(18225,6468,5),(18226,6468,2),(18227,6469,147),(18228,6469,4),(18229,6469,5),(18230,6470,147),(18231,6470,7),(18232,6470,5),(18233,6471,101),(18234,6472,34),(18235,6472,147),(18236,6472,150),(18237,6472,95),(18238,6472,101),(18239,6473,10),(18240,6473,34),(18241,6473,147),(18242,6473,149),(18243,6473,101),(18244,6473,50),(18245,6474,147),(18246,6474,4),(18247,6475,147),(18248,6475,149),(18249,6475,7),(18250,6475,101),(18251,6476,147),(18252,6476,149),(18253,6476,155),(18254,6476,101),(18255,6477,7),(18256,6477,101),(18257,6478,34),(18258,6478,152),(18259,6478,5),(18260,6479,149),(18261,6480,150),(18262,6480,4),(18263,6481,147),(18264,6481,36),(18265,6481,4),(18266,6481,5),(18267,6482,147),(18268,6482,150),(18269,6482,35),(18270,6482,4),(18271,6482,101),(18272,6482,5),(18273,6482,12),(18274,6483,149),(18275,6483,21),(18276,6483,7),(18277,6484,10),(18278,6484,147),(18279,6484,150),(18280,6484,7),(18281,6484,6),(18282,6484,15),(18283,6485,34),(18284,6485,147),(18285,6485,7),(18286,6485,101),(18287,6485,2),(18288,6486,149),(18289,6486,7),(18290,6487,147),(18291,6487,7),(18292,6487,101),(18293,6487,5),(18294,6487,30),(18295,6488,147),(18296,6488,36),(18297,6488,7),(18298,6488,2),(18299,6489,101),(18300,6489,5),(18301,6490,149),(18302,6490,150),(18303,6490,7),(18304,6490,101),(18305,6491,149),(18306,6491,150),(18307,6491,7),(18308,6492,7),(18309,6492,101),(18310,6493,149),(18311,6493,7),(18312,6494,153),(18313,6494,21),(18314,6495,10),(18315,6495,150),(18316,6495,7),(18317,6495,6),(18318,6495,160),(18319,6495,15),(18320,6496,10),(18321,6496,150),(18322,6496,7),(18323,6496,6),(18324,6497,7),(18325,6497,6),(18326,6498,147),(18327,6498,8),(18328,6498,21),(18329,6498,101),(18330,6499,149),(18331,6501,34),(18332,6501,150),(18333,6502,150),(18334,6503,4),(18335,6503,6),(18336,6503,159),(18337,6503,2),(18338,6504,21),(18339,6504,5),(18340,6504,47),(18341,6505,154),(18342,6505,5),(18343,6506,36),(18344,6506,150),(18345,6508,7),(18346,6508,2),(18347,6509,5),(18348,6509,30),(18349,6510,147),(18350,6510,7),(18351,6511,149),(18352,6511,150),(18353,6511,4),(18354,6511,101),(18355,6511,5),(18356,6512,8),(18357,6512,4),(18358,6512,95),(18359,6512,21),(18360,6512,101),(18361,6512,12),(18362,6513,8),(18363,6513,155),(18364,6513,21),(18365,6513,101),(18366,6513,12),(18367,6514,10),(18368,6514,147),(18369,6514,150),(18370,6514,5),(18371,6514,30),(18372,6515,10),(18373,6515,7),(18374,6515,101),(18375,6515,5),(18376,6515,30),(18377,6516,149),(18378,6516,7),(18379,6516,5),(18380,6517,7),(18381,6517,5),(18382,6518,101),(18383,6518,2),(18384,6519,147),(18385,6519,5),(18386,6520,147),(18387,6520,150),(18388,6520,101),(18389,6521,34),(18390,6521,147),(18391,6521,36),(18392,6521,4),(18393,6521,154),(18394,6521,7),(18395,6521,101),(18396,6521,47),(18397,6522,34),(18398,6522,147),(18399,6522,150),(18400,6522,8),(18401,6522,21),(18402,6522,7),(18403,6522,101),(18404,6523,147),(18405,6523,153),(18406,6523,5),(18407,6523,30),(18408,6524,10),(18409,6524,147),(18410,6524,150),(18411,6524,4),(18412,6524,7),(18413,6524,5),(18414,6525,5),(18415,6525,30),(18416,6526,147),(18417,6526,5),(18418,6527,150),(18419,6527,4),(18420,6527,101),(18421,6527,11),(18422,6528,10),(18423,6528,147),(18424,6528,150),(18425,6528,8),(18426,6528,35),(18427,6528,7),(18428,6528,101),(18429,6528,12),(18430,6529,150),(18431,6529,101),(18432,6529,6),(18433,6529,15),(18434,6530,7),(18435,6531,154),(18436,6531,7),(18437,6532,7),(18438,6532,6),(18439,6534,10),(18440,6534,150),(18441,6534,7),(18442,6534,15),(18443,6536,10),(18444,6536,147),(18445,6536,8),(18446,6536,21),(18447,6537,150),(18448,6537,35),(18449,6537,4),(18450,6537,95),(18451,6537,7),(18452,6538,10),(18453,6538,150),(18454,6538,3),(18455,6538,101),(18456,6538,6),(18457,6538,2),(18458,6538,12),(18459,6539,36),(18460,6539,4),(18461,6539,5),(18462,6541,147),(18463,6541,8),(18464,6541,30),(18465,6542,149),(18466,6542,5),(18467,6543,147),(18468,6543,8),(18469,6543,21),(18470,6543,47),(18471,6544,34),(18472,6544,8),(18473,6544,4),(18474,6545,10),(18475,6545,147),(18476,6545,5),(18477,6546,101),(18478,6546,6),(18479,6547,36),(18480,6547,4),(18481,6547,5),(18482,6547,30),(18483,6548,36),(18484,6548,8),(18485,6548,4),(18486,6548,21),(18487,6548,7),(18488,6548,5),(18489,6548,60),(18490,6548,12),(18491,6549,147),(18492,6549,149),(18493,6549,8),(18494,6549,7),(18495,6549,30),(18496,6549,12),(18497,6549,15),(18498,6550,34),(18499,6550,36),(18500,6550,149),(18501,6550,7),(18502,6550,5),(18503,6550,15),(18504,6551,149),(18505,6551,7),(18506,6551,5),(18507,6552,154),(18508,6552,5),(18509,6553,149),(18510,6553,149),(18511,6553,149),(18512,6553,101),(18513,6553,6),(18514,6554,149),(18515,6554,101),(18516,6554,6),(18517,6555,5),(18518,6555,30),(18519,6556,4),(18520,6556,30),(18521,6557,36),(18522,6557,4),(18523,6557,5),(18524,6557,30),(18525,6558,36),(18526,6558,4),(18527,6558,101),(18528,6558,5),(18529,6559,149),(18530,6559,7),(18531,6559,5),(18532,6559,30),(18533,6560,34),(18534,6560,147),(18535,6560,5),(18536,6560,30),(18537,6561,34),(18538,6561,147),(18539,6561,5),(18540,6561,30),(18541,6562,149),(18542,6562,7),(18543,6562,101),(18544,6562,2),(18545,6563,149),(18546,6563,30),(18547,6564,101),(18548,6565,4),(18549,6565,101),(18550,6566,147),(18551,6566,4),(18552,6566,7),(18553,6566,5),(18554,6566,15),(18555,6567,147),(18556,6567,4),(18557,6567,7),(18558,6567,5),(18559,6567,30),(18560,6568,7),(18561,6568,101),(18562,6569,10),(18563,6569,150),(18564,6569,3),(18565,6569,159),(18566,6569,2),(18567,6570,153),(18568,6571,149),(18569,6571,101),(18570,6571,50),(18571,6572,36),(18572,6572,150),(18573,6572,152),(18574,6572,5),(18575,6572,6),(18576,6573,150),(18577,6573,7),(18578,6573,5),(18579,6574,10),(18580,6574,34),(18581,6574,150),(18582,6574,4),(18583,6574,101),(18584,6575,150),(18585,6575,40),(18586,6575,7),(18587,6575,6),(18588,6576,10),(18589,6576,147),(18590,6576,7),(18591,6576,5),(18592,6577,154),(18593,6577,7),(18594,6578,34),(18595,6578,36),(18596,6578,150),(18597,6578,4),(18598,6578,5),(18599,6578,30),(18600,6579,10),(18601,6579,150),(18602,6579,5),(18603,6579,6),(18604,6579,15),(18605,6580,4),(18606,6580,7),(18607,6580,50),(18608,6580,15),(18609,6581,150),(18610,6581,7),(18611,6581,15),(18612,6582,149),(18613,6582,7),(18614,6582,5),(18615,6582,30),(18616,6583,147),(18617,6583,101),(18618,6584,101),(18619,6585,10),(18620,6585,149),(18621,6585,35),(18622,6585,50),(18623,6585,5),(18624,6585,30),(18625,6586,34),(18626,6586,4),(18627,6586,30),(18628,6586,15),(18629,6587,10),(18630,6587,149),(18631,6587,150),(18632,6587,7),(18633,6588,147),(18634,6588,101),(18635,6588,11),(18636,6589,147),(18637,6589,101),(18638,6590,7),(18639,6590,6),(18640,6591,101),(18641,6592,149),(18642,6593,35),(18643,6593,4),(18644,6594,4),(18645,6594,12),(18646,6595,10),(18647,6595,147),(18648,6595,8),(18649,6595,4),(18650,6595,12),(18651,6596,10),(18652,6596,147),(18653,6596,149),(18654,6596,7),(18655,6596,101),(18656,6596,5),(18657,6596,160),(18658,6597,10),(18659,6597,150),(18660,6597,35),(18661,6597,7),(18662,6597,101),(18663,6597,5),(18664,6598,34),(18665,6598,149),(18666,6598,5),(18667,6599,149),(18668,6599,7),(18669,6599,5),(18670,6599,30),(18671,6600,101),(18672,6600,5),(18673,6601,147),(18674,6601,8),(18675,6601,4),(18676,6601,30),(18677,6602,7),(18678,6602,101),(18679,6603,149),(18680,6603,7),(18681,6603,101),(18682,6603,6),(18683,6604,36),(18684,6604,4),(18685,6604,5),(18686,6604,6),(18687,6605,36),(18688,6605,4),(18689,6605,5),(18690,6605,6),(18691,6606,36),(18692,6606,149),(18693,6606,7),(18694,6606,3),(18695,6606,5),(18696,6607,149),(18697,6607,7),(18698,6607,101),(18699,6607,6),(18700,6608,149),(18701,6608,8),(18702,6608,21),(18703,6608,101),(18704,6609,150),(18705,6609,7),(18706,6609,101),(18707,6609,15),(18708,6610,147),(18709,6610,148),(18710,6610,5),(18711,6610,30),(18712,6611,150),(18713,6611,8),(18714,6611,4),(18715,6611,7),(18716,6611,12),(18717,6612,147),(18718,6612,5),(18719,6612,30),(18720,6613,147),(18721,6613,150),(18722,6613,8),(18723,6613,95),(18724,6613,21),(18725,6613,7),(18726,6613,5),(18727,6614,150),(18728,6614,4),(18729,6614,95),(18730,6614,7),(18731,6614,5),(18732,6615,4),(18733,6615,7),(18734,6615,15),(18735,6616,147),(18736,6616,149),(18737,6616,7),(18738,6617,149),(18739,6617,101),(18740,6617,5),(18741,6618,36),(18742,6618,4),(18743,6618,154),(18744,6618,5),(18745,6619,149),(18746,6619,150),(18747,6619,7),(18748,6619,101),(18749,6619,5),(18750,6620,149),(18751,6620,150),(18752,6620,21),(18753,6620,7),(18754,6620,101),(18755,6620,50),(18756,6620,12),(18757,6620,15),(18758,6621,10),(18759,6621,5),(18760,6621,6),(18761,6621,15),(18762,6622,149),(18763,6622,7),(18764,6622,101),(18765,6622,5),(18766,6623,7),(18767,6623,101),(18768,6623,5),(18769,6623,30),(18770,6624,10),(18771,6624,149),(18772,6624,50),(18773,6624,60),(18774,6625,150),(18775,6625,8),(18776,6625,4),(18777,6625,7),(18778,6625,101),(18779,6625,5),(18780,6625,6),(18781,6625,12),(18782,6626,10),(18783,6626,150),(18784,6626,8),(18785,6626,4),(18786,6626,95),(18787,6626,7),(18788,6626,101),(18789,6626,15),(18790,6627,149),(18791,6627,5),(18792,6627,30),(18793,6628,147),(18794,6628,7),(18795,6628,6),(18796,6629,149),(18797,6629,4),(18798,6629,7),(18799,6629,5),(18800,6630,36),(18801,6630,5),(18802,6631,36),(18803,6631,7),(18804,6631,5),(18805,6632,10),(18806,6632,150),(18807,6632,4),(18808,6632,7),(18809,6632,101),(18810,6632,15),(18811,6633,36),(18812,6633,150),(18813,6633,4),(18814,6633,7),(18815,6633,101),(18816,6633,5),(18817,6634,150),(18818,6634,101),(18819,6634,6),(18820,6635,147),(18821,6635,154),(18822,6635,7),(18823,6636,36),(18824,6636,149),(18825,6636,154),(18826,6636,5),(18827,6637,149),(18828,6637,7),(18829,6637,5),(18830,6637,6),(18831,6638,153),(18832,6638,21),(18833,6638,7),(18834,6639,34),(18835,6639,147),(18836,6639,36),(18837,6639,4),(18838,6640,150),(18839,6640,4),(18840,6641,149),(18841,6641,21),(18842,6641,7),(18843,6642,147),(18844,6642,149),(18845,6642,5),(18846,6642,30),(18847,6643,149),(18848,6643,150),(18849,6643,8),(18850,6643,95),(18851,6643,21),(18852,6643,7),(18853,6643,12),(18854,6644,10),(18855,6644,150),(18856,6644,4),(18857,6644,7),(18858,6645,149),(18859,6645,154),(18860,6645,2),(18861,6646,7),(18862,6646,5),(18863,6647,34),(18864,6647,147),(18865,6647,4),(18866,6647,101),(18867,6648,36),(18868,6648,8),(18869,6648,4),(18870,6648,154),(18871,6648,7),(18872,6648,5),(18873,6648,60),(18874,6648,12),(18875,6649,149),(18876,6649,150),(18877,6649,4),(18878,6649,21),(18879,6649,7),(18880,6649,101),(18881,6649,160),(18882,6650,10),(18883,6650,4),(18884,6650,7),(18885,6650,15),(18886,6651,10),(18887,6651,101),(18888,6651,5),(18889,6652,147),(18890,6652,101),(18891,6652,5),(18892,6653,34),(18893,6653,4),(18894,6653,5),(18895,6654,34),(18896,6654,147),(18897,6654,154),(18898,6654,5),(18899,6655,10),(18900,6655,150),(18901,6655,4),(18902,6655,7),(18903,6655,101),(18904,6655,15),(18905,6656,10),(18906,6656,4),(18907,6656,21),(18908,6656,7),(18909,6656,101),(18910,6656,15),(18911,6657,147),(18912,6657,150),(18913,6657,8),(18914,6657,4),(18915,6657,21),(18916,6657,7),(18917,6658,147),(18918,6658,7),(18919,6659,40),(18920,6659,101),(18921,6659,5),(18922,6660,150),(18923,6660,8),(18924,6660,35),(18925,6660,4),(18926,6660,101),(18927,6660,12),(18928,6661,34),(18929,6661,8),(18930,6661,153),(18931,6661,155),(18932,6661,21),(18933,6662,10),(18934,6662,150),(18935,6662,4),(18936,6662,101),(18937,6662,5),(18938,6663,10),(18939,6663,147),(18940,6663,149),(18941,6663,150),(18942,6663,7),(18943,6663,101),(18944,6664,10),(18945,6664,147),(18946,6664,149),(18947,6664,7),(18948,6665,149),(18949,6665,40),(18950,6665,7),(18951,6665,5),(18952,6666,150),(18953,6666,153),(18954,6667,149),(18955,6667,8),(18956,6667,4),(18957,6667,21),(18958,6667,7),(18959,6667,12),(18960,6668,36),(18961,6668,4),(18962,6668,152),(18963,6668,7),(18964,6668,5),(18965,6669,147),(18966,6669,150),(18967,6669,4),(18968,6669,101),(18969,6669,5),(18970,6669,15),(18971,6670,10),(18972,6670,147),(18973,6670,7),(18974,6670,101),(18975,6670,6),(18976,6670,15),(18977,6671,36),(18978,6671,4),(18979,6671,5),(18980,6672,10),(18981,6672,7),(18982,6672,2),(18983,6672,15),(18984,6673,10),(18985,6673,149),(18986,6673,6),(18987,6674,7),(18988,6674,5),(18989,6675,150),(18990,6675,7),(18991,6675,5),(18992,6675,11),(18993,6676,4),(18994,6676,7),(18995,6676,12),(18996,6677,147),(18997,6677,4),(18998,6677,7),(18999,6677,5),(19000,6677,60),(19001,6678,149),(19002,6678,8),(19003,6678,21),(19004,6678,7),(19005,6678,3),(19006,6678,101),(19007,6678,2),(19008,6679,10),(19009,6679,4),(19010,6679,21),(19011,6679,47),(19012,6680,149),(19013,6680,7),(19014,6680,5),(19015,6680,6),(19016,6681,10),(19017,6681,36),(19018,6681,150),(19019,6681,95),(19020,6681,21),(19021,6682,146),(19022,6682,10),(19023,6682,36),(19024,6682,149),(19025,6682,8),(19026,6682,95),(19027,6682,21),(19028,6683,149),(19029,6683,4),(19030,6683,50),(19031,6684,10),(19032,6684,147),(19033,6684,149),(19034,6684,101),(19035,6684,50),(19036,6685,4),(19037,6685,101),(19038,6686,10),(19039,6686,7),(19040,6686,5),(19041,6687,149),(19042,6687,7),(19043,6687,101),(19044,6687,5),(19045,6688,150),(19046,6688,8),(19047,6688,4),(19048,6688,95),(19049,6688,21),(19050,6688,7),(19051,6688,5),(19052,6688,12),(19053,6689,150),(19054,6689,4),(19055,6689,95),(19056,6689,21),(19057,6689,5),(19058,6689,12),(19059,6690,147),(19060,6690,150),(19061,6690,8),(19062,6690,4),(19063,6690,95),(19064,6690,152),(19065,6690,21),(19066,6690,7),(19067,6690,101),(19068,6690,5),(19069,6690,12),(19070,6691,4),(19071,6691,7),(19072,6691,101),(19073,6692,149),(19074,6692,150),(19075,6692,7),(19076,6692,101),(19077,6692,6),(19078,6693,149),(19079,6693,7),(19080,6694,147),(19081,6694,7),(19082,6694,5),(19083,6694,30),(19084,6695,150),(19085,6695,7),(19086,6695,5),(19087,6695,6),(19088,6696,4),(19089,6696,5),(19090,6696,30),(19091,6697,34),(19092,6697,4),(19093,6697,5),(19094,6697,60),(19095,6698,147),(19096,6698,4),(19097,6698,95),(19098,6698,21),(19099,6698,5),(19100,6698,12),(19101,6699,34),(19102,6699,3),(19103,6699,101),(19104,6699,5),(19105,6699,158),(19106,6699,160),(19107,6700,10),(19108,6700,5),(19109,6701,34),(19110,6701,147),(19111,6701,7),(19112,6701,5),(19113,6701,30),(19114,6702,101),(19115,6702,5),(19116,6703,147),(19117,6703,4),(19118,6703,7),(19119,6704,4),(19120,6704,7),(19121,6704,5),(19122,6705,4),(19123,6705,7),(19124,6705,5),(19125,6706,36),(19126,6706,4),(19127,6706,7),(19128,6706,5),(19129,6707,10),(19130,6707,150),(19131,6707,35),(19132,6707,95),(19133,6707,7),(19134,6707,5),(19135,6707,6),(19136,6708,10),(19137,6708,150),(19138,6708,35),(19139,6708,95),(19140,6708,7),(19141,6708,5),(19142,6708,6),(19143,6709,150),(19144,6709,4),(19145,6709,95),(19146,6709,7),(19147,6709,101),(19148,6709,11),(19149,6709,6),(19150,6710,147),(19151,6710,8),(19152,6710,7),(19153,6710,6),(19154,6710,12),(19155,6711,10),(19156,6711,150),(19157,6711,4),(19158,6711,7),(19159,6711,101),(19160,6711,15),(19161,6712,146),(19162,6712,147),(19163,6712,7),(19164,6712,101),(19165,6712,5),(19166,6713,150),(19167,6713,35),(19168,6713,7),(19169,6713,3),(19170,6714,147),(19171,6714,150),(19172,6714,7),(19173,6714,101),(19174,6715,8),(19175,6715,4),(19176,6715,7),(19177,6715,12),(19178,6716,8),(19179,6716,21),(19180,6716,47),(19181,6717,147),(19182,6717,150),(19183,6717,7),(19184,6717,6),(19185,6718,10),(19186,6718,7),(19187,6718,5),(19188,6719,5),(19189,6720,7),(19190,6720,101),(19191,6721,10),(19192,6721,150),(19193,6721,12),(19194,6722,10),(19195,6722,147),(19196,6722,150),(19197,6722,4),(19198,6722,154),(19199,6722,7),(19200,6722,101),(19201,6722,12),(19202,6723,147),(19203,6723,4),(19204,6723,7),(19205,6723,5),(19206,6723,30),(19207,6724,10),(19208,6724,7),(19209,6725,149),(19210,6725,50),(19211,6725,2),(19212,6726,149),(19213,6726,7),(19214,6726,5),(19215,6727,149),(19216,6727,5),(19217,6728,145),(19218,6728,150),(19219,6728,35),(19220,6729,145),(19221,6729,21),(19222,6729,7),(19223,6730,145),(19224,6731,145),(19225,6731,150),(19226,6731,7),(19227,6732,145),(19228,6732,7),(19229,6732,2),(19230,6733,145),(19231,6734,145),(19232,6735,145),(19233,6736,145),(19234,6737,3),(19235,6737,159),(19236,6737,2),(19237,6737,15),(19238,6738,147),(19239,6738,2),(19240,6739,147),(19241,6739,101),(19242,6739,5),(19243,6740,147),(19244,6740,101),(19245,6740,5),(19246,6741,150),(19247,6741,4),(19248,6741,101),(19249,6742,10),(19250,6742,150),(19251,6742,4),(19252,6743,10),(19253,6743,150),(19254,6743,15),(19255,6744,34),(19256,6744,150),(19257,6744,153),(19258,6744,5),(19259,6745,10),(19260,6745,5),(19261,6745,160),(19262,6746,40),(19263,6746,5),(19264,6747,101),(19265,6747,5),(19266,6748,147),(19267,6748,101),(19268,6749,147),(19269,6749,5),(19270,6750,10),(19271,6750,147),(19272,6750,7),(19273,6750,5),(19274,6750,30),(19275,6751,10),(19276,6751,7),(19277,6751,5),(19278,6751,30),(19279,6752,36),(19280,6752,5),(19281,6752,30),(19282,6753,147),(19283,6753,150),(19284,6753,4),(19285,6753,7),(19286,6753,101),(19287,6753,2),(19288,6754,4),(19289,6754,95),(19290,6754,21),(19291,6754,5),(19292,6755,10),(19293,6755,147),(19294,6755,5),(19295,6756,147),(19296,6756,5),(19297,6756,2),(19298,6757,147),(19299,6757,149),(19300,6757,7),(19301,6757,5),(19302,6758,5),(19303,6758,30),(19304,6759,150),(19305,6759,7),(19306,6760,7),(19307,6760,5),(19308,6760,30),(19309,6761,147),(19310,6761,36),(19311,6761,149),(19312,6761,21),(19313,6761,101),(19314,6762,147),(19315,6762,150),(19316,6762,8),(19317,6762,12),(19318,6763,150),(19319,6763,7),(19320,6763,101),(19321,6763,5),(19322,6764,150),(19323,6764,35),(19324,6764,5),(19325,6764,30),(19326,6764,15),(19327,6765,147),(19328,6765,150),(19329,6765,8),(19330,6765,95),(19331,6765,5),(19332,6765,12),(19333,6766,149),(19334,6766,8),(19335,6766,154),(19336,6766,21),(19337,6766,7),(19338,6766,12),(19339,6767,150),(19340,6767,4),(19341,6767,154),(19342,6767,7),(19343,6767,101),(19344,6768,4),(19345,6768,154),(19346,6768,7),(19347,6768,101),(19348,6769,10),(19349,6769,147),(19350,6769,150),(19351,6769,35),(19352,6769,101),(19353,6769,30),(19354,6770,4),(19355,6770,101),(19356,6770,2),(19357,6771,10),(19358,6771,7),(19359,6771,5),(19360,6771,6),(19361,6772,7),(19362,6772,5),(19363,6772,6),(19364,6773,36),(19365,6773,149),(19366,6773,7),(19367,6773,5),(19368,6774,150),(19369,6774,4),(19370,6774,11),(19371,6775,10),(19372,6775,147),(19373,6775,150),(19374,6775,7),(19375,6775,5),(19376,6776,147),(19377,6776,154),(19378,6776,5),(19379,6776,30),(19380,6777,10),(19381,6777,147),(19382,6777,150),(19383,6777,21),(19384,6777,7),(19385,6777,101),(19386,6777,47),(19387,6778,154),(19388,6778,7),(19389,6778,6),(19390,6779,147),(19391,6779,7),(19392,6780,101),(19393,6780,5),(19394,6781,147),(19395,6781,150),(19396,6781,4),(19397,6781,7),(19398,6781,5),(19399,6781,60),(19400,6781,15),(19401,6782,147),(19402,6782,150),(19403,6782,35),(19404,6782,4),(19405,6782,7),(19406,6782,5),(19407,6782,15),(19408,6783,147),(19409,6783,35),(19410,6783,4),(19411,6783,7),(19412,6783,5),(19413,6784,8),(19414,6784,4),(19415,6784,21),(19416,6784,7),(19417,6784,101),(19418,6784,5),(19419,6785,7),(19420,6785,5),(19421,6786,149),(19422,6786,7),(19423,6786,6),(19424,6786,2),(19425,6787,154),(19426,6787,7),(19427,6787,6),(19428,6788,7),(19429,6788,2),(19430,6789,7),(19431,6790,34),(19432,6790,147),(19433,6790,3),(19434,6790,157),(19435,6791,147),(19436,6791,4),(19437,6791,5),(19438,6791,30),(19439,6792,147),(19440,6792,8),(19441,6792,4),(19442,6792,5),(19443,6792,30),(19444,6793,147),(19445,6793,150),(19446,6793,4),(19447,6794,10),(19448,6794,150),(19449,6794,8),(19450,6794,21),(19451,6794,3),(19452,6794,12),(19453,6795,147),(19454,6795,150),(19455,6795,8),(19456,6795,21),(19457,6795,3),(19458,6795,12),(19459,6796,147),(19460,6796,40),(19461,6796,7),(19462,6796,5),(19463,6797,149),(19464,6797,154),(19465,6798,149),(19466,6798,101),(19467,6798,5),(19468,6799,36),(19469,6799,4),(19470,6799,12),(19471,6800,36),(19472,6800,4),(19473,6800,5),(19474,6800,12),(19475,6801,147),(19476,6801,149),(19477,6801,150),(19478,6801,7),(19479,6801,101),(19480,6802,10),(19481,6802,147),(19482,6802,8),(19483,6802,35),(19484,6802,95),(19485,6802,7),(19486,6802,50),(19487,6802,12),(19488,6803,149),(19489,6804,7),(19490,6804,101),(19491,6805,10),(19492,6805,147),(19493,6805,150),(19494,6805,101),(19495,6806,10),(19496,6806,147),(19497,6806,21),(19498,6806,7),(19499,6806,47),(19500,6807,4),(19501,6807,7),(19502,6807,101),(19503,6807,5),(19504,6808,36),(19505,6808,150),(19506,6808,7),(19507,6808,5),(19508,6809,7),(19509,6809,101),(19510,6809,15),(19511,6810,150),(19512,6810,2),(19513,6811,15),(19514,6812,101),(19515,6812,5),(19516,6812,2),(19517,6813,10),(19518,6813,50),(19519,6813,160),(19520,6814,10),(19521,6814,50),(19522,6815,36),(19523,6815,5),(19524,6816,4),(19525,6816,101),(19526,6816,5),(19527,6817,7),(19528,6817,101),(19529,6817,2),(19530,6818,7),(19531,6818,101),(19532,6819,147),(19533,6819,149),(19534,6819,101),(19535,6820,101),(19536,6820,5),(19537,6821,10),(19538,6821,147),(19539,6821,150),(19540,6821,35),(19541,6821,7),(19542,6821,101),(19543,6822,10),(19544,6822,147),(19545,6822,150),(19546,6822,35),(19547,6822,7),(19548,6823,150),(19549,6823,4),(19550,6823,21),(19551,6823,7),(19552,6823,47),(19553,6824,10),(19554,6824,147),(19555,6824,149),(19556,6824,7),(19557,6824,101),(19558,6825,149),(19559,6825,5),(19560,6825,30),(19561,6826,149),(19562,6826,101),(19563,6826,5),(19564,6827,147),(19565,6827,36),(19566,6827,4),(19567,6827,7),(19568,6827,5),(19569,6828,10),(19570,6828,147),(19571,6828,150),(19572,6828,35),(19573,6828,101),(19574,6829,10),(19575,6829,8),(19576,6829,4),(19577,6829,7),(19578,6829,12),(19579,6830,149),(19580,6830,150),(19581,6830,7),(19582,6831,149),(19583,6831,15),(19584,6832,147),(19585,6832,101),(19586,6832,2),(19587,6833,147),(19588,6833,150),(19589,6833,21),(19590,6833,7),(19591,6833,3),(19592,6834,10),(19593,6834,7),(19594,6834,5),(19595,6835,36),(19596,6835,150),(19597,6835,101),(19598,6835,5),(19599,6836,10),(19600,6836,147),(19601,6836,36),(19602,6836,5),(19603,6836,30),(19604,6837,4),(19605,6837,7),(19606,6837,6),(19607,6837,2),(19608,6838,7),(19609,6838,101),(19610,6839,10),(19611,6839,5),(19612,6839,160),(19613,6840,150),(19614,6840,4),(19615,6840,11),(19616,6840,15),(19617,6841,146),(19618,6841,150),(19619,6841,4),(19620,6841,11),(19621,6841,15),(19622,6842,34),(19623,6842,147),(19624,6842,4),(19625,6842,2),(19626,6843,147),(19627,6843,149),(19628,6843,7),(19629,6843,101),(19630,6843,5),(19631,6843,30),(19632,6844,10),(19633,6844,150),(19634,6844,7),(19635,6844,5),(19636,6844,6),(19637,6844,15),(19638,6845,10),(19639,6845,147),(19640,6845,7),(19641,6845,6),(19642,6845,15),(19643,6846,147),(19644,6846,7),(19645,6846,101),(19646,6846,5),(19647,6847,36),(19648,6847,149),(19649,6847,154),(19650,6847,7),(19651,6847,3),(19652,6847,50),(19653,6847,5),(19654,6847,30),(19655,6847,2),(19656,6848,34),(19657,6848,147),(19658,6848,4),(19659,6848,21),(19660,6848,5),(19661,6849,149),(19662,6849,8),(19663,6849,21),(19664,6849,12),(19665,6850,34),(19666,6850,7),(19667,6850,5),(19668,6850,12),(19669,6851,149),(19670,6851,95),(19671,6851,21),(19672,6851,7),(19673,6851,5),(19674,6851,30),(19675,6851,12),(19676,6852,10),(19677,6852,4),(19678,6852,15),(19679,6853,34),(19680,6853,149),(19681,6853,7),(19682,6853,5),(19683,6854,149),(19684,6854,7),(19685,6854,101),(19686,6855,148),(19687,6855,5),(19688,6855,30),(19689,6856,147),(19690,6856,148),(19691,6856,149),(19692,6856,5),(19693,6856,30),(19694,6857,34),(19695,6857,149),(19696,6857,4),(19697,6857,101),(19698,6858,10),(19699,6858,4),(19700,6858,7),(19701,6859,101),(19702,6859,5),(19703,6860,149),(19704,6860,7),(19705,6861,7),(19706,6861,101),(19707,6862,36),(19708,6862,4),(19709,6862,5),(19710,6863,147),(19711,6863,4),(19712,6863,7),(19713,6863,30),(19714,6863,15),(19715,6864,147),(19716,6864,149),(19717,6864,101),(19718,6864,5),(19719,6864,2),(19720,6865,4),(19721,6865,7),(19722,6865,101),(19723,6866,149),(19724,6866,5),(19725,6867,7),(19726,6867,5),(19727,6867,6),(19728,6868,147),(19729,6868,149),(19730,6868,7),(19731,6868,5),(19732,6868,6),(19733,6869,149),(19734,6869,154),(19735,6869,155),(19736,6869,7),(19737,6869,50),(19738,6870,34),(19739,6870,4),(19740,6870,152),(19741,6870,154),(19742,6870,5),(19743,6870,30),(19744,6871,149),(19745,6871,7),(19746,6871,101),(19747,6872,147),(19748,6872,7),(19749,6872,101),(19750,6872,5),(19751,6872,6),(19752,6873,149),(19753,6873,8),(19754,6873,154),(19755,6873,21),(19756,6873,7),(19757,6873,50),(19758,6874,34),(19759,6874,149),(19760,6874,21),(19761,6874,7),(19762,6874,5),(19763,6874,30),(19764,6875,149),(19765,6875,7),(19766,6875,5),(19767,6876,34),(19768,6876,149),(19769,6876,7),(19770,6877,7),(19771,6877,101),(19772,6878,147),(19773,6878,150),(19774,6878,35),(19775,6878,4),(19776,6878,7),(19777,6878,15),(19778,6879,10),(19779,6879,150),(19780,6879,8),(19781,6879,35),(19782,6879,50),(19783,6879,12),(19784,6880,10),(19785,6880,150),(19786,6880,8),(19787,6880,50),(19788,6880,12),(19789,6881,34),(19790,6881,147),(19791,6881,4),(19792,6881,7),(19793,6881,101),(19794,6882,147),(19795,6882,7),(19796,6882,5),(19797,6883,149),(19798,6883,7),(19799,6884,147),(19800,6884,154),(19801,6884,7),(19802,6884,6),(19803,6885,8),(19804,6885,35),(19805,6885,21),(19806,6886,36),(19807,6886,4),(19808,6886,5),(19809,6887,147),(19810,6887,150),(19811,6887,4),(19812,6887,7),(19813,6887,5),(19814,6887,6),(19815,6887,15),(19816,6888,7),(19817,6888,5),(19818,6889,147),(19819,6889,7),(19820,6889,2),(19821,6890,101),(19822,6891,36),(19823,6891,4),(19824,6891,152),(19825,6891,5),(19826,6892,10),(19827,6892,147),(19828,6892,150),(19829,6892,35),(19830,6892,101),(19831,6893,147),(19832,6893,8),(19833,6893,4),(19834,6893,12),(19835,6894,34),(19836,6894,149),(19837,6894,7),(19838,6895,7),(19839,6895,101),(19840,6896,147),(19841,6896,7),(19842,6896,101),(19843,6896,5),(19844,6897,50),(19845,6898,35),(19846,6898,4),(19847,6898,12),(19848,6899,35),(19849,6899,4),(19850,6899,12),(19851,6900,4),(19852,6901,4),(19853,6902,147),(19854,6902,150),(19855,6902,8),(19856,6902,95),(19857,6902,7),(19858,6902,12),(19859,6903,4),(19860,6903,154),(19861,6904,4),(19862,6904,7),(19863,6905,7),(19864,6906,7),(19865,6906,5),(19866,6907,147),(19867,6907,150),(19868,6907,3),(19869,6907,5),(19870,6907,30),(19871,6908,10),(19872,6908,147),(19873,6908,36),(19874,6908,150),(19875,6908,5),(19876,6908,30),(19877,6909,8),(19878,6909,21),(19879,6909,12),(19880,6910,7),(19881,6910,5),(19882,6910,30),(19883,6910,6),(19884,6911,147),(19885,6911,4),(19886,6911,7),(19887,6911,101),(19888,6911,5),(19889,6911,15),(19890,6912,150),(19891,6912,7),(19892,6912,6),(19893,6913,147),(19894,6913,150),(19895,6913,7),(19896,6913,6),(19897,6914,147),(19898,6914,40),(19899,6914,5),(19900,6914,6),(19901,6915,150),(19902,6915,8),(19903,6915,4),(19904,6915,95),(19905,6915,101),(19906,6916,147),(19907,6916,150),(19908,6916,8),(19909,6916,95),(19910,6916,21),(19911,6916,101),(19912,6917,36),(19913,6917,5),(19914,6917,30),(19915,6918,10),(19916,6918,150),(19917,6919,147),(19918,6919,36),(19919,6919,5),(19920,6920,101),(19921,6920,5),(19922,6921,7),(19923,6922,147),(19924,6922,5),(19925,6922,30),(19926,6923,101),(19927,6923,2),(19928,6924,36),(19929,6924,4),(19930,6924,40),(19931,6925,149),(19932,6925,101),(19933,6925,6),(19934,6926,147),(19935,6926,4),(19936,6926,5),(19937,6927,4),(19938,6927,7),(19939,6927,12),(19940,6928,147),(19941,6928,3),(19942,6928,101),(19943,6928,5),(19944,6928,159),(19945,6928,2),(19946,6929,36),(19947,6929,4),(19948,6929,7),(19949,6929,5),(19950,6930,4),(19951,6930,7),(19952,6930,5),(19953,6931,101),(19954,6931,5),(19955,6932,149),(19956,6933,34),(19957,6933,147),(19958,6933,4),(19959,6933,12),(19960,6934,10),(19961,6934,34),(19962,6934,150),(19963,6934,7),(19964,6934,15),(19965,6935,36),(19966,6935,5),(19967,6935,60),(19968,6936,149),(19969,6936,150),(19970,6936,35),(19971,6936,7),(19972,6936,5),(19973,6936,6),(19974,6937,10),(19975,6937,147),(19976,6937,7),(19977,6937,101),(19978,6938,149),(19979,6938,7),(19980,6938,101),(19981,6938,5),(19982,6939,149),(19983,6939,5),(19984,6940,10),(19985,6940,150),(19986,6940,6),(19987,6941,34),(19988,6941,147),(19989,6941,36),(19990,6941,35),(19991,6941,4),(19992,6941,5),(19993,6941,157),(19994,6942,147),(19995,6942,150),(19996,6942,101),(19997,6942,5),(19998,6942,30),(19999,6943,10),(20000,6943,150),(20001,6943,4),(20002,6943,7),(20003,6943,15),(20004,6944,147),(20005,6944,101),(20006,6944,5),(20007,6944,30),(20008,6945,7),(20009,6945,101),(20010,6945,5),(20011,6945,6),(20012,6946,150),(20013,6946,4),(20014,6946,12),(20015,6947,150),(20016,6947,95),(20017,6947,21),(20018,6947,7),(20019,6948,149),(20020,6948,8),(20021,6948,21),(20022,6948,30),(20023,6949,34),(20024,6949,147),(20025,6949,149),(20026,6949,7),(20027,6949,101),(20028,6949,5),(20029,6950,34),(20030,6950,5),(20031,6951,147),(20032,6951,7),(20033,6951,5),(20034,6952,34),(20035,6952,150),(20036,6952,8),(20037,6952,21),(20038,6952,7),(20039,6952,2),(20040,6952,12),(20041,6953,5),(20042,6953,6),(20043,6954,150),(20044,6954,5),(20045,6954,6),(20046,6955,149),(20047,6955,150),(20048,6955,7),(20049,6955,3),(20050,6955,101),(20051,6955,5),(20052,6955,11),(20053,6955,6),(20054,6956,7),(20055,6956,101),(20056,6956,5),(20057,6956,30),(20058,6957,149),(20059,6957,7),(20060,6958,6),(20061,6958,6),(20062,6959,5),(20063,6960,147),(20064,6960,149),(20065,6960,21),(20066,6960,50),(20067,6961,10),(20068,6961,149),(20069,6961,150),(20070,6961,40),(20071,6961,101),(20072,6961,15),(20073,6962,34),(20074,6962,147),(20075,6962,149),(20076,6962,4),(20077,6962,7),(20078,6962,3),(20079,6962,2),(20080,6963,10),(20081,6963,36),(20082,6963,149),(20083,6963,30),(20084,6964,34),(20085,6964,7),(20086,6965,147),(20087,6965,7),(20088,6965,101),(20089,6966,150),(20090,6966,8),(20091,6966,95),(20092,6966,21),(20093,6966,30),(20094,6966,15),(20095,6967,147),(20096,6967,150),(20097,6967,4),(20098,6967,7),(20099,6967,101),(20100,6968,150),(20101,6968,7),(20102,6968,101),(20103,6968,5),(20104,6969,149),(20105,6969,150),(20106,6969,7),(20107,6969,101),(20108,6969,5),(20109,6970,10),(20110,6970,7),(20111,6970,5),(20112,6970,160),(20113,6971,149),(20114,6971,7),(20115,6971,6),(20116,6972,149),(20117,6972,21),(20118,6972,50),(20119,6973,34),(20120,6973,147),(20121,6973,7),(20122,6973,3),(20123,6974,147),(20124,6974,150),(20125,6974,4),(20126,6974,7),(20127,6974,5),(20128,6974,30),(20129,6974,6),(20130,6975,34),(20131,6975,149),(20132,6975,7),(20133,6975,5),(20134,6976,5),(20135,6977,150),(20136,6977,8),(20137,6977,4),(20138,6977,7),(20139,6977,6),(20140,6977,12),(20141,6978,36),(20142,6978,150),(20143,6978,8),(20144,6978,7),(20145,6978,5),(20146,6978,12),(20147,6979,10),(20148,6979,36),(20149,6979,150),(20150,6979,35),(20151,6979,101),(20152,6979,15),(20153,6980,10),(20154,6980,4),(20155,6980,7),(20156,6980,101),(20157,6980,15),(20158,6981,7),(20159,6981,101),(20160,6982,101),(20161,6982,6),(20162,6982,2),(20163,6983,4),(20164,6984,7),(20165,6984,2),(20166,6985,152),(20167,6985,7),(20168,6985,5),(20169,6985,2),(20170,6986,34),(20171,6986,147),(20172,6986,36),(20173,6986,8),(20174,6986,35),(20175,6986,4),(20176,6986,5),(20177,6987,10),(20178,6987,150),(20179,6987,8),(20180,6987,101),(20181,6987,12),(20182,6988,147),(20183,6988,8),(20184,6988,4),(20185,6988,7),(20186,6988,47),(20187,6988,12),(20188,6989,10),(20189,6989,147),(20190,6989,7),(20191,6990,147),(20192,6990,7),(20193,6990,5),(20194,6990,6),(20195,6991,147),(20196,6991,7),(20197,6991,101),(20198,6991,6),(20199,6992,150),(20200,6992,7),(20201,6992,6),(20202,6993,10),(20203,6993,147),(20204,6993,150),(20205,6993,101),(20206,6993,6),(20207,6993,15),(20208,6994,4),(20209,6995,149),(20210,6995,7),(20211,6995,101),(20212,6996,36),(20213,6996,150),(20214,6997,101),(20215,6997,6),(20216,6997,2),(20217,6998,7),(20218,6998,5),(20219,6999,34),(20220,6999,147),(20221,6999,4),(20222,6999,101),(20223,6999,30),(20224,7000,21),(20225,7000,5),(20226,7000,6),(20227,7001,147),(20228,7001,50),(20229,7001,5),(20230,7002,149),(20231,7002,7),(20232,7002,101),(20233,7002,5),(20234,7002,6),(20235,7003,10),(20236,7003,34),(20237,7003,150),(20238,7003,7),(20239,7003,5),(20240,7003,15),(20241,7004,147),(20242,7004,4),(20243,7004,101),(20244,7004,5),(20245,7005,154),(20246,7006,147),(20247,7006,7),(20248,7006,15),(20249,7007,146),(20250,7007,8),(20251,7007,21),(20252,7008,150),(20253,7008,95),(20254,7008,6),(20255,7009,10),(20256,7009,147),(20257,7009,8),(20258,7009,40),(20259,7009,101),(20260,7009,5),(20261,7010,10),(20262,7010,5),(20263,7010,6),(20264,7011,4),(20265,7011,7),(20266,7011,101),(20267,7011,6),(20268,7011,2),(20269,7012,101),(20270,7013,101),(20271,7013,2),(20272,7014,101),(20273,7014,6),(20274,7015,34),(20275,7015,8),(20276,7015,4),(20277,7015,21),(20278,7015,12),(20279,7016,147),(20280,7016,8),(20281,7016,4),(20282,7016,21),(20283,7016,12),(20284,7017,8),(20285,7017,12),(20286,7018,101),(20287,7019,101),(20288,7020,101),(20289,7021,4),(20290,7021,11),(20291,7022,4),(20292,7022,11),(20293,7023,4),(20294,7024,50),(20295,7025,149),(20296,7025,50),(20297,7025,60),(20298,7025,2),(20299,7026,147),(20300,7026,149),(20301,7026,50),(20302,7026,2),(20303,7027,8),(20304,7027,4),(20305,7027,154),(20306,7027,12),(20307,7028,8),(20308,7028,4),(20309,7028,154),(20310,7028,12),(20311,7029,154),(20312,7030,149),(20313,7031,149),(20314,7032,149),(20315,7033,149),(20316,7033,12),(20317,7034,147),(20318,7034,149),(20319,7034,12),(20320,7035,101),(20321,7035,6),(20322,7036,4),(20323,7036,7),(20324,7036,3),(20325,7036,101),(20326,7037,10),(20327,7037,150),(20328,7037,35),(20329,7037,4),(20330,7037,7),(20331,7038,150),(20332,7038,7),(20333,7038,5),(20334,7038,6),(20335,7039,4),(20336,7039,101),(20337,7040,149),(20338,7040,7),(20339,7041,149),(20340,7041,101),(20341,7041,5),(20342,7042,10),(20343,7042,147),(20344,7042,150),(20345,7042,4),(20346,7042,3),(20347,7042,5),(20348,7042,159),(20349,7042,2),(20350,7043,10),(20351,7043,150),(20352,7043,4),(20353,7043,3),(20354,7043,159),(20355,7043,2),(20356,7044,10),(20357,7044,150),(20358,7045,149),(20359,7046,147),(20360,7046,8),(20361,7046,154),(20362,7046,21),(20363,7046,7),(20364,7046,5),(20365,7047,149),(20366,7047,30),(20367,7048,7),(20368,7048,15),(20369,7049,147),(20370,7049,5),(20371,7049,30),(20372,7050,147),(20373,7050,150),(20374,7050,101),(20375,7051,36),(20376,7051,4),(20377,7051,5),(20378,7052,36),(20379,7052,4),(20380,7052,152),(20381,7052,5),(20382,7053,10),(20383,7053,8),(20384,7053,21),(20385,7053,101),(20386,7053,47),(20387,7053,15),(20388,7054,34),(20389,7054,147),(20390,7054,36),(20391,7054,150),(20392,7054,4),(20393,7054,5),(20394,7054,12),(20395,7055,147),(20396,7055,5),(20397,7055,30),(20398,7056,147),(20399,7056,5),(20400,7056,30),(20401,7057,10),(20402,7057,7),(20403,7057,101),(20404,7057,5),(20405,7057,6),(20406,7058,149),(20407,7058,101),(20408,7059,149),(20409,7059,154),(20410,7059,7),(20411,7060,150),(20412,7060,153),(20413,7061,149),(20414,7061,154),(20415,7062,149),(20416,7063,149),(20417,7063,7),(20418,7063,2),(20419,7064,34),(20420,7064,149),(20421,7064,7),(20422,7064,30),(20423,7065,154),(20424,7065,7),(20425,7065,5),(20426,7065,6),(20427,7066,145),(20428,7067,145),(20429,7067,21),(20430,7067,157),(20431,7068,145),(20432,7068,4),(20433,7069,145),(20434,7070,145),(20435,7070,36),(20436,7071,145),(20437,7071,149),(20438,7072,145),(20439,7073,145),(20440,7074,145),(20441,7074,5),(20442,7075,145),(20443,7075,4),(20444,7076,10),(20445,7076,150),(20446,7076,8),(20447,7076,3),(20448,7076,60),(20449,7076,12),(20450,7077,10),(20451,7077,150),(20452,7077,35),(20453,7077,3),(20454,7077,60),(20455,7077,12),(20456,7078,147),(20457,7078,36),(20458,7078,4),(20459,7078,5),(20460,7078,30),(20461,7079,34),(20462,7079,147),(20463,7079,4),(20464,7079,5),(20465,7080,36),(20466,7080,4),(20467,7080,5),(20468,7081,34),(20469,7081,149),(20470,7081,7),(20471,7081,101),(20472,7082,149),(20473,7082,7),(20474,7083,149),(20475,7083,150),(20476,7083,95),(20477,7083,21),(20478,7083,6),(20479,7084,147),(20480,7084,7),(20481,7084,101),(20482,7084,5),(20483,7085,147),(20484,7085,101),(20485,7085,5),(20486,7086,34),(20487,7086,147),(20488,7086,149),(20489,7086,35),(20490,7086,4),(20491,7086,7),(20492,7086,101),(20493,7086,5),(20494,7087,149),(20495,7087,7),(20496,7087,5),(20497,7088,154),(20498,7088,7),(20499,7089,10),(20500,7089,147),(20501,7089,150),(20502,7089,154),(20503,7089,7),(20504,7090,34),(20505,7090,147),(20506,7090,149),(20507,7090,4),(20508,7090,153),(20509,7090,155),(20510,7090,47),(20511,7091,147),(20512,7091,8),(20513,7091,4),(20514,7091,101),(20515,7091,5),(20516,7091,30),(20517,7092,4),(20518,7092,154),(20519,7092,7),(20520,7092,5),(20521,7092,158),(20522,7093,147),(20523,7093,7),(20524,7093,101),(20525,7093,6),(20526,7094,150),(20527,7094,15),(20528,7095,7),(20529,7095,101),(20530,7095,5),(20531,7096,149),(20532,7096,150),(20533,7096,101),(20534,7096,6),(20535,7097,5),(20536,7098,36),(20537,7098,4),(20538,7098,5),(20539,7099,10),(20540,7099,150),(20541,7099,95),(20542,7099,7),(20543,7099,101),(20544,7099,5),(20545,7099,30),(20546,7100,36),(20547,7100,4),(20548,7100,5),(20549,7100,6),(20550,7101,7),(20551,7101,5),(20552,7101,30),(20553,7102,101),(20554,7102,5),(20555,7103,149),(20556,7103,7),(20557,7103,5),(20558,7104,145),(20559,7105,147),(20560,7105,149),(20561,7105,151),(20562,7105,101),(20563,7105,6),(20564,7106,34),(20565,7106,40),(20566,7107,101),(20567,7107,2),(20568,7108,10),(20569,7108,8),(20570,7108,5),(20571,7109,147),(20572,7110,145),(20573,7110,36),(20574,7110,154),(20575,7110,5),(20576,7111,101),(20577,7112,147),(20578,7112,158),(20579,7113,145),(20580,7113,2),(20581,7114,2),(20582,7115,10),(20583,7115,149),(20584,7115,153),(20585,7115,21),(20586,7115,7),(20587,7116,10),(20588,7116,4),(20589,7116,154),(20590,7116,7),(20591,7116,12),(20592,7117,36),(20593,7117,5),(20594,7117,60),(20595,7118,149),(20596,7118,150),(20597,7118,7),(20598,7119,147),(20599,7119,149),(20600,7119,35),(20601,7119,7),(20602,7119,3),(20603,7119,101),(20604,7119,5),(20605,7119,2),(20606,7120,149),(20607,7120,7),(20608,7120,5),(20609,7121,7),(20610,7121,5),(20611,7121,6),(20612,7122,10),(20613,7122,150),(20614,7122,7),(20615,7123,149),(20616,7123,7),(20617,7123,5),(20618,7124,34),(20619,7124,8),(20620,7124,4),(20621,7124,21),(20622,7124,3),(20623,7124,101),(20624,7124,2),(20625,7125,34),(20626,7125,147),(20627,7125,7),(20628,7125,101),(20629,7125,12),(20630,7126,147),(20631,7126,101),(20632,7126,30),(20633,7126,2),(20634,7127,147),(20635,7127,4),(20636,7127,101),(20637,7127,30),(20638,7128,101),(20639,7128,5),(20640,7129,101),(20641,7130,101),(20642,7131,149),(20643,7131,5),(20644,7132,21),(20645,7132,101),(20646,7132,12),(20647,7132,15),(20648,7133,8),(20649,7133,40),(20650,7133,155),(20651,7133,21),(20652,7134,7),(20653,7134,5),(20654,7135,21),(20655,7135,7),(20656,7136,7),(20657,7136,6),(20658,7136,12),(20659,7137,147),(20660,7137,5),(20661,7138,149),(20662,7139,8),(20663,7139,4),(20664,7139,7),(20665,7139,12),(20666,7140,10),(20667,7140,147),(20668,7140,7),(20669,7140,6),(20670,7141,147),(20671,7141,8),(20672,7141,4),(20673,7141,40),(20674,7141,60),(20675,7142,34),(20676,7142,147),(20677,7142,95),(20678,7142,155),(20679,7142,12),(20680,7143,36),(20681,7143,5),(20682,7143,60),(20683,7144,147),(20684,7144,149),(20685,7144,21),(20686,7144,7),(20687,7144,101),(20688,7145,147),(20689,7145,2),(20690,7145,15),(20691,7146,147),(20692,7146,149),(20693,7146,8),(20694,7146,4),(20695,7146,21),(20696,7146,47),(20697,7147,147),(20698,7147,4),(20699,7147,7),(20700,7147,101),(20701,7148,147),(20702,7148,149),(20703,7149,146),(20704,7149,150),(20705,7149,8),(20706,7149,4),(20707,7150,36),(20708,7150,4),(20709,7150,5),(20710,7150,30),(20711,7151,34),(20712,7151,147),(20713,7151,149),(20714,7151,7),(20715,7151,101),(20716,7152,10),(20717,7152,4),(20718,7152,7),(20719,7152,101),(20720,7152,12),(20721,7153,4),(20722,7153,7),(20723,7153,5),(20724,7154,7),(20725,7154,101),(20726,7154,6),(20727,7155,147),(20728,7155,150),(20729,7155,5),(20730,7155,30),(20731,7156,10),(20732,7156,149),(20733,7156,150),(20734,7156,101),(20735,7157,150),(20736,7157,6),(20737,7158,10),(20738,7158,149),(20739,7158,7),(20740,7159,4),(20741,7159,7),(20742,7160,147),(20743,7161,5),(20744,7161,30),(20745,7162,7),(20746,7162,5),(20747,7163,34),(20748,7163,149),(20749,7164,21),(20750,7164,7),(20751,7164,5),(20752,7165,4),(20753,7166,10),(20754,7166,7),(20755,7166,15),(20756,7167,10),(20757,7167,147),(20758,7167,7),(20759,7168,36),(20760,7168,4),(20761,7169,147),(20762,7169,36),(20763,7169,4),(20764,7169,5),(20765,7170,149),(20766,7170,8),(20767,7170,7),(20768,7170,12),(20769,7171,3),(20770,7171,101),(20771,7171,5),(20772,7171,2),(20773,7172,154),(20774,7172,7),(20775,7173,150),(20776,7173,4),(20777,7173,153),(20778,7173,12),(20779,7174,36),(20780,7174,4),(20781,7174,5),(20782,7175,147),(20783,7175,150),(20784,7175,101),(20785,7175,5),(20786,7176,36),(20787,7176,154),(20788,7177,10),(20789,7177,150),(20790,7177,8),(20791,7177,4),(20792,7177,7),(20793,7177,101),(20794,7177,6),(20795,7178,40),(20796,7178,7),(20797,7178,5),(20798,7179,40),(20799,7179,7),(20800,7179,5),(20801,7180,149),(20802,7180,5),(20803,7181,149),(20804,7181,5),(20805,7182,149),(20806,7182,8),(20807,7182,21),(20808,7182,47),(20809,7183,10),(20810,7183,7),(20811,7183,6),(20812,7183,15),(20813,7184,10),(20814,7184,150),(20815,7184,4),(20816,7184,15),(20817,7185,8),(20818,7185,4),(20819,7185,101),(20820,7186,4),(20821,7186,7),(20822,7186,2),(20823,7187,147),(20824,7187,4),(20825,7187,7),(20826,7187,5),(20827,7188,147),(20828,7188,5),(20829,7189,145),(20830,7189,149),(20831,7189,150),(20832,7189,6),(20833,7190,145),(20834,7190,150),(20835,7190,8),(20836,7190,35),(20837,7190,95),(20838,7190,21),(20839,7190,6),(20840,7190,12),(20841,7191,145),(20842,7191,149),(20843,7191,101),(20844,7191,6),(20845,7192,145),(20846,7192,149),(20847,7192,8),(20848,7192,95),(20849,7192,21),(20850,7193,145),(20851,7193,4),(20852,7193,154),(20853,7194,145),(20854,7194,8),(20855,7194,15),(20856,7195,145),(20857,7195,149),(20858,7195,8),(20859,7195,21),(20860,7195,12),(20861,7196,145),(20862,7196,149),(20863,7196,4),(20864,7196,40),(20865,7196,50),(20866,7210,4),(20867,7210,7),(20868,7210,101),(20869,7211,101),(20870,7211,5),(20871,7212,10),(20872,7212,40),(20873,7213,35),(20874,7213,152),(20875,7213,5),(20876,7214,10),(20877,7214,34),(20878,7214,150),(20879,7214,7),(20880,7214,15),(20881,7215,150),(20882,7215,21),(20883,7215,7),(20884,7215,101),(20885,7215,47),(20886,7215,6),(20887,7216,10),(20888,7216,150),(20889,7216,101),(20890,7216,5),(20891,7216,15),(20892,7217,34),(20893,7217,149),(20894,7217,7),(20895,7217,50),(20896,7217,5),(20897,7218,10),(20898,7218,149),(20899,7218,150),(20900,7218,8),(20901,7218,95),(20902,7218,7),(20903,7218,101),(20904,7218,12),(20905,7219,34),(20906,7219,147),(20907,7219,150),(20908,7219,7),(20909,7219,5),(20910,7220,10),(20911,7220,36),(20912,7220,101),(20913,7220,5),(20914,7221,10),(20915,7221,147),(20916,7221,149),(20917,7221,150),(20918,7221,4),(20919,7221,7),(20920,7221,6),(20921,7222,149),(20922,7223,149),(20923,7223,2),(20924,7224,147),(20925,7224,149),(20926,7224,30),(20927,7225,34),(20928,7225,154),(20929,7225,7),(20930,7225,50),(20931,7226,34),(20932,7226,149),(20933,7226,7),(20934,7227,10),(20935,7227,149),(20936,7227,40),(20937,7227,7),(20938,7227,50),(20939,7227,5),(20940,7228,147),(20941,7228,4),(20942,7228,7),(20943,7228,5),(20944,7229,7),(20945,7229,5),(20946,7230,34),(20947,7230,147),(20948,7230,36),(20949,7230,149),(20950,7230,8),(20951,7230,5),(20952,7231,8),(20953,7231,4),(20954,7231,21),(20955,7231,47),(20956,7232,10),(20957,7232,101),(20958,7232,5),(20959,7232,160),(20960,7233,149),(20961,7233,7),(20962,7233,5),(20963,7233,30),(20964,7233,6),(20965,7234,147),(20966,7234,101),(20967,7234,5),(20968,7234,30),(20969,7235,101),(20970,7235,5),(20971,7235,30),(20972,7236,7),(20973,7236,5),(20974,7236,6),(20975,7237,21),(20976,7237,5),(20977,7237,30),(20978,7237,47),(20979,7238,150),(20980,7238,4),(20981,7238,6),(20982,7239,101),(20983,7239,5),(20984,7239,30),(20985,7240,7),(20986,7240,101),(20987,7241,147),(20988,7241,150),(20989,7241,101),(20990,7241,5),(20991,7241,15),(20992,7242,30),(20993,7243,4),(20994,7243,7),(20995,7243,101),(20996,7244,36),(20997,7244,5),(20998,7244,30),(20999,7245,36),(21000,7245,8),(21001,7245,21),(21002,7246,154),(21003,7246,7),(21004,7246,5),(21005,7246,6),(21006,7247,36),(21007,7247,5),(21008,7247,30),(21009,7248,147),(21010,7248,7),(21011,7248,5),(21012,7249,7),(21013,7250,147),(21014,7250,2),(21015,7251,36),(21016,7252,149),(21017,7252,8),(21018,7252,50),(21019,7252,12),(21020,7253,150),(21021,7253,4),(21022,7253,12),(21023,7254,34),(21024,7254,147),(21025,7254,8),(21026,7255,36),(21027,7255,4),(21028,7255,5),(21029,7256,34),(21030,7256,35),(21031,7256,4),(21032,7256,95),(21033,7256,7),(21034,7256,101),(21035,7256,2),(21036,7257,147),(21037,7257,4),(21038,7257,7),(21039,7257,2),(21040,7258,10),(21041,7258,149),(21042,7258,150),(21043,7258,7),(21044,7258,6),(21045,7259,147),(21046,7259,149),(21047,7259,5),(21048,7260,7),(21049,7260,6),(21050,7261,147),(21051,7261,36),(21052,7261,150),(21053,7261,8),(21054,7261,5),(21055,7261,12),(21056,7262,34),(21057,7262,147),(21058,7262,8),(21059,7262,4),(21060,7262,21),(21061,7262,7),(21062,7262,5),(21063,7262,12),(21064,7263,36),(21065,7263,4),(21066,7263,5),(21067,7263,12),(21068,7264,10),(21069,7264,147),(21070,7264,149),(21071,7264,154),(21072,7264,7),(21073,7264,5),(21074,7265,149),(21075,7265,7),(21076,7265,5),(21077,7266,149),(21078,7266,7),(21079,7266,5),(21080,7266,6),(21081,7267,36),(21082,7267,150),(21083,7267,101),(21084,7267,5),(21085,7268,147),(21086,7268,149),(21087,7268,4),(21088,7268,21),(21089,7268,7),(21090,7268,5),(21091,7268,30),(21092,7269,147),(21093,7269,150),(21094,7269,7),(21095,7269,5),(21096,7269,160),(21097,7270,147),(21098,7270,5),(21099,7270,30),(21100,7271,10),(21101,7271,7),(21102,7271,6),(21103,7271,15),(21104,7272,40),(21105,7272,5),(21106,7273,150),(21107,7273,4),(21108,7273,7),(21109,7273,5),(21110,7274,150),(21111,7274,8),(21112,7274,95),(21113,7274,21),(21114,7274,7),(21115,7274,101),(21116,7274,6),(21117,7274,12),(21118,7275,149),(21119,7275,5),(21120,7275,15),(21121,7276,10),(21122,7276,147),(21123,7276,150),(21124,7276,4),(21125,7276,95),(21126,7276,7),(21127,7276,15),(21128,7277,147),(21129,7277,7),(21130,7277,5),(21131,7278,149),(21132,7278,7),(21133,7278,2),(21134,7279,7),(21135,7279,2),(21136,7280,8),(21137,7280,4),(21138,7280,153),(21139,7280,21),(21140,7280,7),(21141,7280,101),(21142,7280,12),(21143,7281,34),(21144,7281,147),(21145,7281,8),(21146,7281,4),(21147,7281,101),(21148,7282,10),(21149,7282,34),(21150,7282,150),(21151,7282,4),(21152,7282,101),(21153,7282,5),(21154,7282,30),(21155,7283,34),(21156,7283,7),(21157,7284,4),(21158,7284,101),(21159,7285,40),(21160,7285,101),(21161,7286,101),(21162,7287,36),(21163,7287,4),(21164,7287,5),(21165,7287,60),(21166,7288,147),(21167,7288,7),(21168,7288,5),(21169,7288,30),(21170,7289,149),(21171,7289,7),(21172,7289,2),(21173,7290,149),(21174,7290,4),(21175,7290,50),(21176,7290,160),(21177,7291,36),(21178,7291,60),(21179,7292,36),(21180,7292,4),(21181,7292,5),(21182,7293,40),(21183,7293,5),(21184,7293,11),(21185,7294,150),(21186,7294,101),(21187,7294,5),(21188,7294,6),(21189,7295,149),(21190,7295,4),(21191,7295,7),(21192,7295,47),(21193,7295,2),(21194,7296,10),(21195,7296,147),(21196,7296,7),(21197,7296,3),(21198,7296,101),(21199,7296,159),(21200,7296,2),(21201,7297,150),(21202,7297,8),(21203,7297,4),(21204,7297,95),(21205,7297,21),(21206,7297,12),(21207,7298,10),(21208,7298,149),(21209,7298,150),(21210,7298,7),(21211,7298,15),(21212,7299,149),(21213,7299,7),(21214,7300,4),(21215,7300,7),(21216,7300,101),(21217,7301,7),(21218,7301,101),(21219,7302,4),(21220,7302,155),(21221,7303,34),(21222,7303,149),(21223,7303,35),(21224,7303,7),(21225,7303,5),(21226,7304,147),(21227,7304,150),(21228,7304,95),(21229,7304,101),(21230,7304,5),(21231,7305,7),(21232,7305,101),(21233,7305,5),(21234,7306,36),(21235,7306,149),(21236,7306,5),(21237,7306,6),(21238,7307,149),(21239,7307,101),(21240,7307,2),(21241,7308,147),(21242,7308,150),(21243,7308,35),(21244,7308,4),(21245,7308,101),(21246,7309,147),(21247,7309,150),(21248,7309,4),(21249,7309,101),(21250,7309,5),(21251,7310,147),(21252,7310,154),(21253,7310,7),(21254,7310,5),(21255,7311,150),(21256,7311,7),(21257,7311,6),(21258,7311,15),(21259,7312,7),(21260,7312,5),(21261,7313,7),(21262,7313,101),(21263,7314,7),(21264,7314,5),(21265,7315,10),(21266,7315,150),(21267,7315,95),(21268,7315,40),(21269,7315,21),(21270,7315,12),(21271,7316,10),(21272,7316,147),(21273,7316,150),(21274,7316,8),(21275,7316,95),(21276,7316,21),(21277,7316,47),(21278,7317,36),(21279,7317,4),(21280,7317,5),(21281,7318,10),(21282,7318,147),(21283,7318,95),(21284,7318,101),(21285,7318,5),(21286,7319,147),(21287,7319,5),(21288,7319,30),(21289,7320,154),(21290,7320,7),(21291,7320,5),(21292,7320,6),(21293,7321,147),(21294,7321,7),(21295,7321,5),(21296,7322,50),(21297,7322,12),(21298,7323,149),(21299,7323,35),(21300,7323,154),(21301,7323,12),(21302,7324,150),(21303,7324,4),(21304,7324,153),(21305,7324,7),(21306,7324,11),(21307,7325,150),(21308,7325,7),(21309,7326,36),(21310,7326,149),(21311,7326,4),(21312,7326,101),(21313,7326,5),(21314,7327,149),(21315,7327,150),(21316,7327,95),(21317,7327,7),(21318,7327,6),(21319,7327,12),(21320,7328,150),(21321,7328,4),(21322,7328,7),(21323,7329,7),(21324,7330,154),(21325,7330,5),(21326,7331,149),(21327,7331,5),(21328,7332,8),(21329,7332,21),(21330,7332,7),(21331,7332,101),(21332,7332,6),(21333,7332,12),(21334,7333,149),(21335,7333,35),(21336,7333,101),(21337,7333,50),(21338,7333,60),(21339,7333,6),(21340,7334,10),(21341,7334,150),(21342,7334,4),(21343,7334,101),(21344,7334,15),(21345,7335,34),(21346,7335,7),(21347,7335,101),(21348,7335,5),(21349,7336,149),(21350,7336,150),(21351,7336,7),(21352,7336,101),(21353,7336,6),(21354,7337,149),(21355,7337,7),(21356,7337,101),(21357,7337,5),(21358,7338,34),(21359,7338,149),(21360,7338,4),(21361,7338,12),(21362,7339,149),(21363,7339,5),(21364,7340,36),(21365,7340,150),(21366,7340,4),(21367,7340,101),(21368,7340,5),(21369,7340,30),(21370,7341,147),(21371,7341,7),(21372,7341,101),(21373,7341,5),(21374,7342,147),(21375,7342,36),(21376,7342,150),(21377,7342,4),(21378,7342,2),(21379,7343,149),(21380,7343,5),(21381,7344,36),(21382,7344,4),(21383,7344,5),(21384,7344,11),(21385,7344,159),(21386,7345,147),(21387,7345,36),(21388,7345,4),(21389,7345,5),(21390,7345,11),(21391,7346,35),(21392,7346,4),(21393,7346,30),(21394,7346,12),(21395,7347,149),(21396,7347,8),(21397,7347,21),(21398,7347,7),(21399,7348,150),(21400,7348,8),(21401,7348,7),(21402,7348,12),(21403,7349,147),(21404,7349,149),(21405,7349,40),(21406,7349,5),(21407,7350,149),(21408,7350,154),(21409,7350,7),(21410,7350,101),(21411,7350,5),(21412,7351,149),(21413,7351,5),(21414,7351,30),(21415,7352,149),(21416,7352,101),(21417,7352,5),(21418,7352,30),(21419,7353,21),(21420,7353,7),(21421,7353,101),(21422,7353,47),(21423,7353,6),(21424,7354,150),(21425,7354,35),(21426,7354,6),(21427,7355,150),(21428,7355,7),(21429,7355,5),(21430,7356,7),(21431,7356,101),(21432,7356,2),(21433,7357,10),(21434,7357,101),(21435,7358,34),(21436,7358,147),(21437,7358,101),(21438,7359,34),(21439,7359,101),(21440,7360,36),(21441,7360,150),(21442,7360,8),(21443,7360,4),(21444,7360,21),(21445,7360,3),(21446,7361,147),(21447,7361,36),(21448,7361,8),(21449,7361,4),(21450,7361,95),(21451,7361,21),(21452,7361,5),(21453,7361,12),(21454,7362,8),(21455,7362,4),(21456,7362,155),(21457,7362,7),(21458,7362,12),(21459,7363,154),(21460,7363,7),(21461,7363,6),(21462,7364,147),(21463,7364,154),(21464,7364,7),(21465,7364,6),(21466,7365,147),(21467,7365,4),(21468,7365,7),(21469,7365,101),(21470,7365,6),(21471,7366,7),(21472,7366,5),(21473,7367,149),(21474,7367,5),(21475,7368,101),(21476,7368,2),(21477,7369,10),(21478,7369,150),(21479,7369,3),(21480,7369,159),(21481,7369,2),(21482,7370,153),(21483,7370,21),(21484,7371,150),(21485,7371,35),(21486,7371,4),(21487,7371,12),(21488,7372,10),(21489,7372,34),(21490,7372,147),(21491,7372,7),(21492,7373,2),(21493,7374,101),(21494,7375,2),(21495,7376,34),(21496,7376,36),(21497,7376,4),(21498,7378,40),(21499,7378,5),(21500,7378,15),(21501,7379,21),(21502,7380,150),(21503,7381,5),(21504,7381,60),(21505,7382,149),(21506,7382,101),(21507,7382,5),(21508,7383,5),(21509,7384,149),(21510,7385,36),(21511,7385,35),(21512,7385,5),(21513,7386,150),(21514,7386,101),(21515,7386,6),(21516,7387,145),(21517,7388,145),(21518,7388,36),(21519,7388,4),(21520,7389,145),(21521,7389,10),(21522,7389,150),(21523,7390,145),(21524,7390,7),(21525,7391,145),(21526,7391,7),(21527,7391,12),(21528,7392,145),(21529,7392,4),(21530,7393,145),(21531,7393,7),(21532,7394,145),(21533,7394,145),(21534,7394,101),(21535,7394,101),(21536,7395,145),(21537,7395,7),(21538,7396,145),(21539,7396,101),(21540,7397,36),(21541,7397,4),(21542,7397,152),(21543,7397,5),(21544,7398,149),(21545,7398,150),(21546,7399,3),(21547,7399,2),(21548,7400,36),(21549,7400,4),(21550,7400,5),(21551,7401,147),(21552,7401,36),(21553,7401,4),(21554,7401,5),(21555,7402,34),(21556,7402,147),(21557,7402,149),(21558,7402,5),(21559,7402,30),(21560,7403,7),(21561,7403,5),(21562,7403,30),(21563,7404,149),(21564,7404,150),(21565,7404,95),(21566,7404,7),(21567,7404,5),(21568,7404,6),(21569,7405,34),(21570,7405,149),(21571,7405,5),(21572,7405,30),(21573,7406,101),(21574,7406,5),(21575,7407,147),(21576,7407,149),(21577,7407,8),(21578,7407,21),(21579,7407,7),(21580,7407,101),(21581,7408,7),(21582,7408,6),(21583,7409,147),(21584,7409,36),(21585,7409,30),(21586,7410,10),(21587,7410,149),(21588,7411,149),(21589,7411,7),(21590,7411,5),(21591,7411,2),(21592,7412,150),(21593,7412,101),(21594,7412,2),(21595,7413,101),(21596,7414,7),(21597,7414,5),(21598,7415,149),(21599,7416,35),(21600,7416,5),(21601,7417,36),(21602,7417,4),(21603,7418,155),(21604,7419,36),(21605,7419,4),(21606,7420,154),(21607,7420,30),(21608,7421,150),(21609,7421,6),(21610,7422,149),(21611,7422,4),(21612,7423,10),(21613,7423,40),(21614,7424,50),(21615,7425,34),(21616,7425,149),(21617,7425,3),(21618,7426,147),(21619,7427,147),(21620,7427,150),(21621,7427,35),(21622,7428,36),(21623,7428,8),(21624,7428,4),(21625,7428,5),(21626,7428,12),(21627,7429,150),(21628,7429,101),(21629,7429,5),(21630,7429,15),(21631,7430,7),(21632,7430,2),(21633,7431,7),(21634,7431,12),(21635,7432,149),(21636,7432,5),(21637,7433,150),(21638,7433,8),(21639,7433,21),(21640,7433,101),(21641,7433,12),(21642,7434,150),(21643,7434,8),(21644,7434,21),(21645,7434,101),(21646,7434,12),(21647,7435,149),(21648,7435,150),(21649,7435,35),(21650,7435,7),(21651,7435,101),(21652,7435,6),(21653,7436,147),(21654,7436,149),(21655,7436,7),(21656,7437,10),(21657,7437,147),(21658,7437,150),(21659,7437,6),(21660,7437,15),(21661,7438,10),(21662,7438,4),(21663,7438,7),(21664,7438,6),(21665,7438,15),(21666,7439,147),(21667,7439,101),(21668,7440,146),(21669,7440,10),(21670,7440,150),(21671,7440,21),(21672,7440,12),(21673,7441,7),(21674,7441,50),(21675,7441,5),(21676,7442,34),(21677,7442,35),(21678,7442,4),(21679,7442,7),(21680,7443,10),(21681,7443,34),(21682,7443,147),(21683,7443,7),(21684,7444,149),(21685,7444,7),(21686,7445,34),(21687,7445,147),(21688,7445,149),(21689,7445,7),(21690,7446,147),(21691,7446,7),(21692,7446,6),(21693,7447,150),(21694,7447,8),(21695,7447,35),(21696,7447,21),(21697,7447,101),(21698,7447,5),(21699,7447,12),(21700,7448,150),(21701,7448,2),(21702,7448,12),(21703,7449,10),(21704,7449,150),(21705,7449,4),(21706,7449,101),(21707,7450,147),(21708,7450,149),(21709,7450,7),(21710,7450,5),(21711,7450,30),(21712,7451,10),(21713,7451,147),(21714,7451,7),(21715,7452,149),(21716,7453,10),(21717,7453,40),(21718,7453,15),(21719,7454,8),(21720,7454,4),(21721,7454,21),(21722,7454,7),(21723,7454,6),(21724,7454,12),(21725,7455,10),(21726,7455,4),(21727,7455,7),(21728,7455,101),(21729,7455,5),(21730,7456,149),(21731,7456,7),(21732,7456,5),(21733,7457,7),(21734,7457,5),(21735,7458,7),(21736,7458,5),(21737,7459,10),(21738,7459,150),(21739,7459,101),(21740,7460,8),(21741,7460,4),(21742,7460,95),(21743,7460,21),(21744,7460,101),(21745,7461,34),(21746,7461,147),(21747,7461,4),(21748,7461,5),(21749,7461,30),(21750,7462,8),(21751,7462,4),(21752,7462,12),(21753,7463,4),(21754,7463,5),(21755,7464,149),(21756,7464,7),(21757,7464,101),(21758,7464,2),(21759,7465,150),(21760,7465,8),(21761,7465,95),(21762,7465,47),(21763,7465,6),(21764,7465,12),(21765,7465,15),(21766,7466,149),(21767,7466,21),(21768,7466,7),(21769,7466,47),(21770,7466,12),(21771,7467,7),(21772,7467,101),(21773,7467,6),(21774,7468,3),(21775,7468,5),(21776,7468,30),(21777,7469,4),(21778,7469,7),(21779,7469,15),(21780,7470,147),(21781,7470,101),(21782,7470,30),(21783,7471,154),(21784,7471,5),(21785,7471,30),(21786,7472,147),(21787,7472,8),(21788,7472,35),(21789,7472,47),(21790,7473,150),(21791,7473,7),(21792,7473,6),(21793,7473,2),(21794,7473,15),(21795,7474,7),(21796,7474,5),(21797,7475,149),(21798,7476,7),(21799,7476,5),(21800,7477,147),(21801,7477,101),(21802,7477,2),(21803,7478,147),(21804,7478,4),(21805,7478,152),(21806,7478,5),(21807,7478,30),(21808,7479,147),(21809,7479,35),(21810,7479,4),(21811,7479,152),(21812,7479,5),(21813,7479,30),(21814,7480,149),(21815,7480,101),(21816,7480,50),(21817,7480,6),(21818,7481,149),(21819,7481,7),(21820,7481,101),(21821,7481,5),(21822,7482,150),(21823,7482,6),(21824,7483,10),(21825,7483,150),(21826,7483,35),(21827,7483,5),(21828,7483,15),(21829,7484,10),(21830,7484,149),(21831,7484,7),(21832,7484,6),(21833,7485,7),(21834,7485,2),(21835,7485,15),(21836,7486,6),(21837,7487,10),(21838,7487,150),(21839,7487,4),(21840,7487,153),(21841,7487,7),(21842,7488,36),(21843,7488,4),(21844,7488,5),(21845,7488,11),(21846,7489,10),(21847,7489,147),(21848,7489,150),(21849,7489,8),(21850,7489,4),(21851,7489,95),(21852,7489,154),(21853,7489,21),(21854,7489,7),(21855,7489,6),(21856,7489,15),(21857,7490,34),(21858,7490,149),(21859,7490,150),(21860,7490,5),(21861,7490,159),(21862,7490,12),(21863,7491,147),(21864,7491,4),(21865,7491,3),(21866,7491,101),(21867,7491,5),(21868,7492,7),(21869,7492,5),(21870,7492,6),(21871,7493,5),(21872,7494,149),(21873,7495,101),(21874,7495,2),(21875,7496,36),(21876,7496,8),(21877,7496,4),(21878,7496,21),(21879,7497,149),(21880,7497,150),(21881,7497,7),(21882,7498,147),(21883,7498,7),(21884,7498,101),(21885,7499,149),(21886,7499,7),(21887,7499,6),(21888,7499,15),(21889,7500,147),(21890,7500,8),(21891,7500,21),(21892,7500,101),(21893,7501,150),(21894,7501,8),(21895,7501,12),(21896,7502,147),(21897,7502,7),(21898,7502,101),(21899,7502,5),(21900,7502,6),(21901,7503,10),(21902,7503,147),(21903,7503,5),(21904,7504,10),(21905,7504,149),(21906,7504,7),(21907,7504,6),(21908,7504,15),(21909,7505,147),(21910,7505,5),(21911,7505,6),(21912,7506,149),(21913,7506,6),(21914,7507,149),(21915,7507,101),(21916,7508,149),(21917,7509,150),(21918,7509,4),(21919,7509,7),(21920,7509,12),(21921,7510,8),(21922,7510,21),(21923,7510,12),(21924,7511,147),(21925,7511,8),(21926,7511,21),(21927,7511,101),(21928,7511,12),(21929,7512,150),(21930,7512,4),(21931,7513,147),(21932,7513,150),(21933,7513,4),(21934,7513,7),(21935,7513,6),(21936,7514,149),(21937,7514,7),(21938,7514,5),(21939,7514,6),(21940,7515,149),(21941,7515,7),(21942,7515,101),(21943,7516,149),(21944,7517,10),(21945,7517,149),(21946,7517,21),(21947,7517,50),(21948,7518,10),(21949,7518,150),(21950,7518,35),(21951,7518,95),(21952,7518,5),(21953,7518,12),(21954,7518,15),(21955,7519,10),(21956,7519,147),(21957,7519,149),(21958,7519,150),(21959,7519,7),(21960,7519,3),(21961,7519,15),(21962,7520,10),(21963,7520,21),(21964,7520,47),(21965,7521,150),(21966,7521,7),(21967,7522,34),(21968,7522,149),(21969,7522,4),(21970,7522,7),(21971,7522,5),(21972,7522,6),(21973,7522,15),(21974,7523,36),(21975,7523,150),(21976,7523,5),(21977,7524,101),(21978,7524,2),(21979,7525,10),(21980,7525,40),(21981,7525,5),(21982,7526,147),(21983,7526,149),(21984,7526,5),(21985,7527,145),(21986,7528,7),(21987,7528,101),(21988,7528,5),(21989,7529,4),(21990,7529,5),(21991,7529,30),(21992,7530,147),(21993,7530,150),(21994,7530,4),(21995,7530,7),(21996,7530,6),(21997,7531,10),(21998,7531,7),(21999,7531,5),(22000,7531,15),(22001,7532,147),(22002,7532,7),(22003,7532,5),(22004,7533,10),(22005,7533,7),(22006,7533,6),(22007,7533,15),(22008,7534,10),(22009,7534,7),(22010,7534,15),(22011,7535,150),(22012,7536,34),(22013,7536,7),(22014,7537,150),(22015,7537,7),(22016,7538,4),(22017,7538,5),(22018,7539,2),(22019,7540,5),(22020,7541,149),(22021,7542,147),(22022,7542,149),(22023,7542,7),(22024,7542,30),(22025,7543,34),(22026,7543,8),(22027,7543,4),(22028,7543,7),(22029,7543,12),(22030,7544,147),(22031,7544,7),(22032,7545,34),(22033,7545,147),(22034,7545,149),(22035,7545,7),(22036,7546,7),(22037,7547,10),(22038,7547,150),(22039,7548,8),(22040,7548,4),(22041,7548,21),(22042,7548,47),(22043,7548,12),(22044,7549,4),(22045,7550,5),(22046,7550,30),(22047,7551,147),(22048,7551,101),(22049,7552,5),(22050,7553,147),(22051,7553,2),(22052,7554,147),(22053,7554,150),(22054,7554,30),(22055,7555,147),(22056,7555,149),(22057,7555,8),(22058,7555,21),(22059,7555,101),(22060,7555,50),(22061,7555,12),(22062,7556,34),(22063,7556,36),(22064,7556,35),(22065,7556,4),(22066,7556,5),(22067,7557,36),(22068,7557,4),(22069,7557,7),(22070,7558,149),(22071,7558,7),(22072,7559,7),(22073,7560,10),(22074,7560,34),(22075,7560,147),(22076,7560,150),(22077,7560,8),(22078,7560,101),(22079,7560,12),(22080,7561,147),(22081,7561,5),(22082,7561,30),(22083,7562,10),(22084,7562,34),(22085,7562,150),(22086,7562,7),(22087,7563,150),(22088,7563,7),(22089,7564,5),(22090,7565,149),(22091,7565,5),(22092,7566,7),(22093,7567,5),(22094,7567,30),(22095,7568,5),(22096,7569,10),(22097,7569,147),(22098,7569,150),(22099,7569,7),(22100,7569,12),(22101,7570,10),(22102,7570,21),(22103,7571,149),(22104,7571,150),(22105,7571,4),(22106,7571,12),(22107,7572,36),(22108,7572,8),(22109,7572,95),(22110,7572,21),(22111,7572,15),(22112,7573,149),(22113,7573,8),(22114,7573,21),(22115,7573,7),(22116,7573,6),(22117,7574,36),(22118,7574,30),(22119,7574,6),(22120,7575,7),(22121,7575,6),(22122,7576,4),(22123,7577,34),(22124,7577,7),(22125,7577,5),(22126,7577,30),(22127,7578,147),(22128,7578,7),(22129,7579,4),(22130,7580,4),(22131,7581,4),(22132,7581,5),(22133,7582,35),(22134,7582,4),(22135,7582,5),(22136,7582,60),(22137,7583,4),(22138,7583,21),(22139,7583,7),(22140,7583,5),(22141,7583,60),(22142,7584,34),(22143,7584,147),(22144,7584,8),(22145,7584,4),(22146,7584,21),(22147,7584,47),(22148,7585,147),(22149,7585,154),(22150,7585,7),(22151,7585,101),(22152,7586,8),(22153,7586,95),(22154,7586,154),(22155,7586,21),(22156,7586,47),(22157,7586,12),(22158,7587,149),(22159,7587,7),(22160,7588,10),(22161,7588,7),(22162,7588,5),(22163,7588,15),(22164,7589,10),(22165,7589,6),(22166,7590,7),(22167,7590,101),(22168,7590,15),(22169,7591,101),(22170,7591,5),(22171,7592,147),(22172,7592,7),(22173,7592,5),(22174,7593,147),(22175,7593,101),(22176,7594,147),(22177,7594,7),(22178,7594,5),(22179,7595,8),(22180,7595,95),(22181,7595,21),(22182,7595,101),(22183,7595,5),(22184,7596,10),(22185,7596,34),(22186,7596,150),(22187,7596,4),(22188,7597,5),(22189,7598,5),(22190,7598,30),(22191,7599,7),(22192,7599,101),(22193,7600,147),(22194,7600,7),(22195,7600,5),(22196,7601,150),(22197,7601,21),(22198,7601,7),(22199,7601,12),(22200,7602,150),(22201,7603,10),(22202,7603,5),(22203,7604,34),(22204,7604,147),(22205,7604,4),(22206,7604,47),(22207,7605,7),(22208,7605,101),(22209,7605,6),(22210,7606,10),(22211,7606,150),(22212,7606,4),(22213,7606,101),(22214,7606,5),(22215,7606,15),(22216,7607,34),(22217,7607,7),(22218,7607,5),(22219,7608,149),(22220,7608,7),(22221,7608,5),(22222,7609,40),(22223,7609,5),(22224,7609,47),(22225,7609,6),(22226,7610,149),(22227,7611,150),(22228,7611,7),(22229,7611,101),(22230,7612,149),(22231,7612,4),(22232,7612,7),(22233,7613,149),(22234,7613,21),(22235,7613,7),(22236,7613,101),(22237,7613,12),(22238,7614,36),(22239,7614,4),(22240,7614,101),(22241,7614,5),(22242,7614,12),(22243,7615,34),(22244,7615,149),(22245,7615,4),(22246,7615,7),(22247,7615,101),(22248,7615,5),(22249,7616,34),(22250,7616,149),(22251,7616,21),(22252,7616,7),(22253,7616,101),(22254,7616,5),(22255,7617,149),(22256,7617,101),(22257,7618,147),(22258,7618,149),(22259,7618,8),(22260,7618,7),(22261,7618,3),(22262,7619,149),(22263,7619,50),(22264,7620,149),(22265,7620,50),(22266,7620,5),(22267,7621,147),(22268,7621,149),(22269,7621,8),(22270,7621,21),(22271,7621,7),(22272,7621,101),(22273,7622,149),(22274,7622,150),(22275,7622,154),(22276,7622,7),(22277,7622,50),(22278,7623,34),(22279,7623,149),(22280,7623,2),(22281,7624,149),(22282,7624,6),(22283,7625,147),(22284,7625,36),(22285,7625,4),(22286,7625,5),(22287,7625,60),(22288,7626,10),(22289,7626,147),(22290,7626,5),(22291,7627,10),(22292,7627,150),(22293,7627,4),(22294,7627,40),(22295,7627,21),(22296,7627,101),(22297,7627,12),(22298,7628,4),(22299,7629,4),(22300,7629,154),(22301,7629,15),(22302,7630,36),(22303,7631,10),(22304,7631,150),(22305,7631,4),(22306,7631,153),(22307,7631,7),(22308,7632,10),(22309,7632,150),(22310,7632,6),(22311,7633,4),(22312,7634,4),(22313,7634,7),(22314,7635,8),(22315,7635,4),(22316,7635,21),(22317,7636,36),(22318,7636,5),(22319,7636,30),(22320,7637,5),(22321,7638,21),(22322,7638,7),(22323,7639,4),(22324,7639,5),(22325,7639,11),(22326,7640,36),(22327,7640,149),(22328,7640,101),(22329,7641,150),(22330,7641,101),(22331,7641,6),(22332,7642,34),(22333,7642,150),(22334,7642,154),(22335,7642,5),(22336,7642,60),(22337,7642,6),(22338,7642,2),(22339,7642,12),(22340,7643,147),(22341,7643,149),(22342,7643,150),(22343,7643,4),(22344,7643,7),(22345,7643,5),(22346,7644,34),(22347,7644,149),(22348,7644,5),(22349,7644,30),(22350,7645,149),(22351,7645,7),(22352,7645,6),(22353,7645,2),(22354,7646,149),(22355,7646,7),(22356,7646,101),(22357,7646,5),(22358,7647,149),(22359,7647,4),(22360,7647,12),(22361,7648,4),(22362,7648,12),(22363,7649,36),(22364,7649,4),(22365,7649,21),(22366,7649,5),(22367,7650,34),(22368,7650,4),(22369,7650,5),(22370,7651,147),(22371,7651,8),(22372,7651,4),(22373,7651,21),(22374,7651,7),(22375,7651,5),(22376,7651,6),(22377,7651,15),(22378,7652,149),(22379,7652,7),(22380,7653,101),(22381,7653,5),(22382,7654,7),(22383,7654,5),(22384,7654,6),(22385,7655,7),(22386,7655,101),(22387,7656,10),(22388,7656,150),(22389,7656,5),(22390,7656,6),(22391,7657,10),(22392,7657,34),(22393,7657,147),(22394,7657,4),(22395,7658,149),(22396,7658,150),(22397,7658,7),(22398,7659,10),(22399,7659,36),(22400,7659,149),(22401,7659,5),(22402,7660,10),(22403,7660,150),(22404,7660,101),(22405,7660,6),(22406,7661,149),(22407,7662,4),(22408,7662,7),(22409,7662,101),(22410,7662,2),(22411,7663,10),(22412,7663,34),(22413,7663,153),(22414,7663,7),(22415,7664,36),(22416,7664,4),(22417,7664,101),(22418,7664,5),(22419,7665,4),(22420,7665,7),(22421,7666,150),(22422,7666,8),(22423,7666,101),(22424,7666,2),(22425,7666,12),(22426,7667,149),(22427,7667,4),(22428,7667,7),(22429,7668,149),(22430,7668,5),(22431,7669,150),(22432,7669,40),(22433,7669,101),(22434,7669,5),(22435,7669,6),(22436,7670,150),(22437,7670,8),(22438,7670,21),(22439,7670,47),(22440,7671,4),(22441,7672,150),(22442,7672,4),(22443,7672,154),(22444,7672,7),(22445,7673,10),(22446,7673,147),(22447,7673,7),(22448,7673,5),(22449,7674,149),(22450,7674,2),(22451,7675,150),(22452,7675,8),(22453,7675,35),(22454,7675,21),(22455,7675,47),(22456,7675,12),(22457,7676,147),(22458,7676,4),(22459,7676,5),(22460,7677,10),(22461,7677,150),(22462,7677,4),(22463,7677,95),(22464,7677,7),(22465,7677,6),(22466,7678,147),(22467,7678,4),(22468,7678,7),(22469,7678,5),(22470,7679,149),(22471,7679,7),(22472,7679,5),(22473,7679,6),(22474,7680,149),(22475,7680,5),(22476,7680,30),(22477,7681,150),(22478,7681,50),(22479,7681,12),(22480,7682,147),(22481,7682,150),(22482,7682,8),(22483,7682,12),(22484,7683,147),(22485,7683,150),(22486,7683,4),(22487,7683,7),(22488,7683,15),(22489,7684,149),(22490,7684,7),(22491,7684,5),(22492,7684,30),(22493,7685,147),(22494,7685,4),(22495,7685,7),(22496,7685,5),(22497,7685,30),(22498,7686,154),(22499,7686,7),(22500,7686,5),(22501,7687,36),(22502,7687,35),(22503,7687,95),(22504,7687,21),(22505,7687,7),(22506,7687,6),(22507,7687,12),(22508,7688,10),(22509,7688,150),(22510,7688,5),(22511,7689,5),(22512,7689,6),(22513,7690,5),(22514,7690,6),(22515,7690,12),(22516,7691,7),(22517,7691,6),(22518,7692,7),(22519,7692,101),(22520,7692,5),(22521,7693,7),(22522,7693,5),(22523,7694,34),(22524,7694,8),(22525,7694,4),(22526,7694,152),(22527,7694,7),(22528,7694,101),(22529,7694,5),(22530,7694,12),(22531,7695,8),(22532,7695,4),(22533,7695,12),(22534,7696,35),(22535,7696,50),(22536,7697,10),(22537,7697,147),(22538,7697,150),(22539,7697,4),(22540,7698,101),(22541,7698,5),(22542,7699,101),(22543,7700,147),(22544,7700,36),(22545,7700,7),(22546,7700,5),(22547,7700,30),(22548,7701,7),(22549,7701,5),(22550,7702,147),(22551,7702,4),(22552,7703,147),(22553,7703,149),(22554,7703,4),(22555,7703,7),(22556,7703,5),(22557,7704,10),(22558,7704,50),(22559,7704,12),(22560,7705,36),(22561,7705,4),(22562,7705,5),(22563,7705,60),(22564,7706,34),(22565,7706,147),(22566,7706,4),(22567,7707,149),(22568,7707,5),(22569,7708,149),(22570,7708,5),(22571,7709,10),(22572,7709,147),(22573,7709,5),(22574,7710,147),(22575,7710,7),(22576,7710,5),(22577,7711,150),(22578,7711,4),(22579,7711,153),(22580,7712,149),(22581,7712,150),(22582,7712,7),(22583,7713,149),(22584,7713,4),(22585,7713,7),(22586,7714,150),(22587,7714,4),(22588,7714,7),(22589,7714,5),(22590,7715,149),(22591,7715,21),(22592,7715,7),(22593,7715,5),(22594,7715,6),(22595,7715,15),(22596,7716,10),(22597,7716,5),(22598,7716,30),(22599,7717,10),(22600,7717,150),(22601,7717,95),(22602,7717,21),(22603,7717,101),(22604,7717,6),(22605,7717,12),(22606,7717,15),(22607,7718,34),(22608,7718,7),(22609,7718,5),(22610,7718,2),(22611,7718,12),(22612,7719,8),(22613,7719,4),(22614,7719,21),(22615,7719,6),(22616,7720,101),(22617,7720,5),(22618,7721,7),(22619,7722,7),(22620,7722,6),(22621,7722,15),(22622,7723,147),(22623,7723,149),(22624,7723,5),(22625,7724,8),(22626,7724,95),(22627,7724,21),(22628,7724,7),(22629,7724,101),(22630,7725,36),(22631,7725,150),(22632,7725,40),(22633,7725,101),(22634,7725,5),(22635,7725,6),(22636,7726,147),(22637,7726,101),(22638,7726,5),(22639,7726,30),(22640,7727,10),(22641,7727,40),(22642,7727,101),(22643,7727,5),(22644,7728,147),(22645,7728,7),(22646,7728,101),(22647,7728,6),(22648,7729,101),(22649,7729,2),(22650,7730,101),(22651,7730,6),(22652,7731,101),(22653,7731,6),(22654,7732,10),(22655,7732,34),(22656,7732,150),(22657,7732,35),(22658,7732,7),(22659,7732,12),(22660,7733,10),(22661,7733,150),(22662,7733,35),(22663,7733,4),(22664,7733,95),(22665,7733,15),(22666,7734,149),(22667,7734,7),(22668,7734,15),(22669,7735,10),(22670,7735,147),(22671,7735,150),(22672,7735,3),(22673,7735,2),(22674,7736,7),(22675,7736,5),(22676,7736,6),(22677,7737,101),(22678,7737,5),(22679,7738,10),(22680,7738,34),(22681,7738,36),(22682,7738,35),(22683,7738,4),(22684,7738,5),(22685,7739,147),(22686,7739,101),(22687,7739,5),(22688,7739,30),(22689,7740,10),(22690,7740,147),(22691,7740,5),(22692,7740,160),(22693,7741,5),(22694,7741,30),(22695,7742,10),(22696,7742,150),(22697,7742,7),(22698,7742,101),(22699,7742,5),(22700,7742,6),(22701,7743,154),(22702,7743,5),(22703,7744,10),(22704,7744,34),(22705,7744,150),(22706,7744,8),(22707,7744,7),(22708,7744,5),(22709,7744,6),(22710,7745,147),(22711,7745,36),(22712,7745,101),(22713,7745,50),(22714,7745,5),(22715,7745,60),(22716,7746,150),(22717,7746,95),(22718,7746,7),(22719,7746,101),(22720,7746,2),(22721,7747,34),(22722,7747,147),(22723,7747,4),(22724,7747,7),(22725,7748,34),(22726,7748,7),(22727,7748,15),(22728,7749,7),(22729,7749,6),(22730,7750,34),(22731,7750,4),(22732,7750,21),(22733,7750,7),(22734,7750,47),(22735,7751,149),(22736,7751,101),(22737,7751,50),(22738,7752,10),(22739,7752,147),(22740,7752,101),(22741,7752,5),(22742,7753,147),(22743,7753,101),(22744,7753,5),(22745,7754,149),(22746,7754,40),(22747,7754,5),(22748,7755,149),(22749,7755,150),(22750,7755,4),(22751,7755,7),(22752,7755,6),(22753,7756,147),(22754,7756,101),(22755,7756,2),(22756,7757,101),(22757,7757,5),(22758,7758,4),(22759,7758,152),(22760,7758,5),(22761,7758,30),(22762,7759,4),(22763,7759,101),(22764,7759,5),(22765,7760,10),(22766,7760,147),(22767,7760,150),(22768,7760,4),(22769,7760,95),(22770,7760,7),(22771,7760,5),(22772,7760,15),(22773,7761,10),(22774,7761,4),(22775,7761,7),(22776,7761,2),(22777,7762,40),(22778,7762,101),(22779,7762,5),(22780,7763,149),(22781,7763,101),(22782,7763,5),(22783,7763,30),(22784,7764,36),(22785,7764,150),(22786,7764,4),(22787,7764,95),(22788,7764,5),(22789,7765,34),(22790,7765,149),(22791,7765,150),(22792,7765,8),(22793,7765,101),(22794,7765,5),(22795,7765,11),(22796,7765,30),(22797,7765,12),(22798,7766,10),(22799,7766,149),(22800,7766,150),(22801,7766,7),(22802,7766,5),(22803,7766,6),(22804,7767,147),(22805,7767,149),(22806,7767,7),(22807,7767,5),(22808,7768,146),(22809,7768,149),(22810,7768,8),(22811,7768,95),(22812,7768,21),(22813,7769,149),(22814,7769,7),(22815,7769,5),(22816,7769,30),(22817,7769,2),(22818,7770,4),(22819,7770,7),(22820,7770,101),(22821,7770,5),(22822,7771,149),(22823,7771,5),(22824,7772,149),(22825,7772,154),(22826,7773,150),(22827,7773,8),(22828,7773,35),(22829,7773,4),(22830,7773,5),(22831,7773,12),(22832,7774,150),(22833,7774,8),(22834,7774,4),(22835,7774,21),(22836,7774,7),(22837,7774,5),(22838,7774,12),(22839,7775,10),(22840,7775,147),(22841,7775,150),(22842,7775,15),(22843,7776,36),(22844,7776,8),(22845,7776,4),(22846,7776,5),(22847,7776,12),(22848,7777,34),(22849,7777,36),(22850,7777,5),(22851,7777,12),(22852,7778,7),(22853,7778,5),(22854,7778,15),(22855,7779,7),(22856,7779,6),(22857,7779,15),(22858,7780,35),(22859,7780,4),(22860,7780,7),(22861,7781,34),(22862,7781,4),(22863,7781,21),(22864,7781,5),(22865,7781,60),(22866,7782,36),(22867,7782,4),(22868,7782,5),(22869,7782,60),(22870,7783,8),(22871,7783,7),(22872,7783,47),(22873,7783,6),(22874,7783,12),(22875,7784,150),(22876,7784,4),(22877,7784,40),(22878,7784,7),(22879,7784,5),(22880,7785,149),(22881,7785,21),(22882,7785,7),(22883,7786,4),(22884,7787,34),(22885,7787,7),(22886,7787,5),(22887,7788,154),(22888,7788,5),(22889,7789,40),(22890,7789,6),(22891,7789,15),(22892,7790,150),(22893,7790,7),(22894,7790,5),(22895,7791,150),(22896,7791,7),(22897,7791,6),(22898,7791,15),(22899,7792,147),(22900,7792,4),(22901,7792,7),(22902,7792,5),(22903,7792,2),(22904,7793,101),(22905,7794,149),(22906,7794,154),(22907,7795,149),(22908,7795,50),(22909,7795,5),(22910,7795,157),(22911,7795,60),(22912,7796,149),(22913,7796,50),(22914,7796,5),(22915,7796,157),(22916,7796,60),(22917,7797,147),(22918,7797,8),(22919,7797,4),(22920,7797,21),(22921,7798,150),(22922,7798,3),(22923,7798,101),(22924,7799,10),(22925,7799,7),(22926,7799,6),(22927,7800,36),(22928,7800,5),(22929,7800,15),(22930,7801,34),(22931,7801,36),(22932,7801,5),(22933,7802,101),(22934,7802,2),(22935,7802,15),(22936,7803,149),(22937,7803,8),(22938,7803,4),(22939,7803,7),(22940,7803,50),(22941,7804,150),(22942,7804,4),(22943,7804,6),(22944,7805,149),(22945,7806,7),(22946,7806,6),(22947,7807,7),(22948,7807,101),(22949,7807,5),(22950,7808,10),(22951,7808,149),(22952,7808,50),(22953,7809,36),(22954,7809,4),(22955,7809,5),(22956,7810,150),(22957,7810,7),(22958,7810,2),(22959,7811,149),(22960,7811,5),(22961,7811,30),(22962,7812,149),(22963,7812,5),(22964,7813,149),(22965,7813,5),(22966,7814,10),(22967,7814,150),(22968,7814,7),(22969,7814,101),(22970,7815,36),(22971,7815,12),(22972,7816,149),(22973,7816,7),(22974,7817,149),(22975,7817,7),(22976,7818,7),(22977,7819,149),(22978,7819,5),(22979,7820,7),(22980,7820,5),(22981,7821,101),(22982,7821,6),(22983,7822,34),(22984,7822,8),(22985,7822,155),(22986,7822,21),(22987,7822,101),(22988,7823,36),(22989,7823,4),(22990,7823,60),(22991,7824,8),(22992,7824,21),(22993,7824,5),(22994,7824,30),(22995,7825,34),(22996,7825,147),(22997,7825,149),(22998,7825,5),(22999,7825,60),(23000,7826,10),(23001,7826,147),(23002,7826,7),(23003,7826,5),(23004,7826,15),(23005,7827,147),(23006,7827,101),(23007,7827,5),(23008,7828,147),(23009,7828,5),(23010,7829,10),(23011,7829,150),(23012,7829,101),(23013,7829,5),(23014,7829,30),(23015,7830,147),(23016,7830,150),(23017,7830,7),(23018,7830,101),(23019,7830,6),(23020,7831,154),(23021,7831,7),(23022,7831,5),(23023,7831,2),(23024,7832,7),(23025,7832,5),(23026,7833,7),(23027,7833,5),(23028,7834,149),(23029,7834,8),(23030,7834,4),(23031,7834,95),(23032,7834,7),(23033,7834,101),(23034,7834,12),(23035,7835,36),(23036,7835,149),(23037,7835,150),(23038,7835,101),(23039,7835,5),(23040,7835,6),(23041,7835,15),(23042,7836,8),(23043,7836,95),(23044,7836,21),(23045,7836,47),(23046,7837,147),(23047,7837,149),(23048,7837,7),(23049,7838,7),(23050,7838,5),(23051,7839,7),(23052,7839,6),(23053,7840,101),(23054,7840,2),(23055,7841,10),(23056,7841,4),(23057,7842,147),(23058,7842,36),(23059,7842,4),(23060,7843,10),(23061,7843,149),(23062,7843,7),(23063,7843,101),(23064,7843,5),(23065,7844,10),(23066,7844,7),(23067,7844,101),(23068,7844,5),(23069,7845,7),(23070,7845,101),(23071,7846,147),(23072,7846,6),(23073,7846,15),(23074,7847,2),(23075,7848,149),(23076,7848,7),(23077,7849,149),(23078,7850,150),(23079,7850,4),(23080,7851,150),(23081,7851,5),(23082,7852,147),(23083,7852,4),(23084,7852,12),(23085,7853,36),(23086,7853,7),(23087,7853,3),(23088,7853,5),(23089,7853,30),(23090,7853,6),(23091,7854,147),(23092,7854,5),(23093,7855,8),(23094,7855,4),(23095,7855,21),(23096,7855,12),(23097,7856,34),(23098,7856,36),(23099,7856,4),(23100,7856,5),(23101,7857,150),(23102,7857,4),(23103,7857,101),(23104,7857,5),(23105,7858,8),(23106,7858,21),(23107,7858,5),(23108,7859,8),(23109,7859,95),(23110,7859,21),(23111,7859,101),(23112,7860,147),(23113,7860,8),(23114,7860,4),(23115,7860,101),(23116,7861,34),(23117,7861,7),(23118,7861,101),(23119,7862,101),(23120,7863,101),(23121,7863,2),(23122,7864,5),(23123,7864,30),(23124,7865,149),(23125,7865,5),(23126,7866,149),(23127,7866,150),(23128,7866,7),(23129,7867,10),(23130,7867,149),(23131,7867,8),(23132,7867,7),(23133,7867,12),(23134,7868,150),(23135,7868,8),(23136,7868,7),(23137,7868,12),(23138,7869,10),(23139,7869,147),(23140,7869,150),(23141,7869,4),(23142,7869,3),(23143,7869,2),(23144,7870,10),(23145,7870,150),(23146,7870,4),(23147,7870,7),(23148,7871,10),(23149,7871,4),(23150,7871,95),(23151,7871,7),(23152,7871,12),(23153,7871,15),(23154,7872,36),(23155,7872,5),(23156,7872,6),(23157,7872,15),(23158,7873,40),(23159,7873,50),(23160,7873,5),(23161,7873,60),(23162,7874,34),(23163,7874,147),(23164,7874,150),(23165,7874,4),(23166,7874,21),(23167,7874,101),(23168,7874,6),(23169,7875,147),(23170,7875,4),(23171,7875,7),(23172,7876,7),(23173,7876,5),(23174,7876,30),(23175,7877,5),(23176,7877,30),(23177,7878,147),(23178,7878,7),(23179,7878,101),(23180,7878,6),(23181,7879,7),(23182,7879,5),(23183,7880,7),(23184,7880,2),(23185,7881,150),(23186,7881,12),(23187,7882,150),(23188,7883,150),(23189,7883,8),(23190,7883,4),(23191,7883,95),(23192,7883,7),(23193,7883,12),(23194,7884,36),(23195,7884,8),(23196,7884,5),(23197,7884,60),(23198,7884,12),(23199,7885,36),(23200,7885,5),(23201,7885,60),(23202,7885,12),(23203,7886,7),(23204,7886,101),(23205,7887,4),(23206,7887,21),(23207,7887,5),(23208,7887,60),(23209,7887,12),(23210,7888,147),(23211,7888,4),(23212,7888,154),(23213,7888,21),(23214,7888,5),(23215,7889,149),(23216,7889,5),(23217,7889,2),(23218,7890,7),(23219,7890,5),(23220,7890,30),(23221,7891,147),(23222,7891,5),(23223,7891,6),(23224,7892,36),(23225,7892,149),(23226,7892,5),(23227,7893,147),(23228,7893,150),(23229,7893,5),(23230,7893,30),(23231,7894,147),(23232,7894,150),(23233,7894,5),(23234,7894,30),(23235,7895,147),(23236,7895,8),(23237,7895,4),(23238,7895,21),(23239,7895,12),(23240,7896,7),(23241,7896,5),(23242,7896,2),(23243,7897,149),(23244,7897,5),(23245,7898,5),(23246,7899,7),(23247,7899,5),(23248,7899,6),(23249,7900,147),(23250,7900,101),(23251,7901,36),(23252,7901,4),(23253,7901,152),(23254,7901,5),(23255,7902,147),(23256,7902,4),(23257,7902,7),(23258,7902,6),(23259,7902,2),(23260,7903,10),(23261,7903,147),(23262,7903,7),(23263,7903,5),(23264,7904,147),(23265,7904,101),(23266,7904,5),(23267,7904,2),(23268,7905,147),(23269,7905,7),(23270,7906,36),(23271,7906,5),(23272,7907,5),(23273,7907,2),(23274,7907,15),(23275,7908,101),(23276,7908,2),(23277,7909,150),(23278,7909,4),(23279,7910,50),(23280,7910,5),(23281,7910,60),(23282,7910,12),(23283,7911,147),(23284,7911,150),(23285,7911,4),(23286,7911,15),(23287,7912,149),(23288,7912,4),(23289,7912,101),(23290,7912,5),(23291,7912,12),(23292,7913,40),(23293,7913,7),(23294,7913,101),(23295,7913,6),(23296,7913,15),(23297,7914,147),(23298,7914,7),(23299,7915,149),(23300,7916,7),(23301,7916,101),(23302,7917,159),(23303,7917,2),(23304,7918,147),(23305,7918,35),(23306,7918,7),(23307,7919,149),(23308,7919,154),(23309,7919,101),(23310,7920,36),(23311,7920,5),(23312,7921,147),(23313,7921,149),(23314,7921,8),(23315,7921,21),(23316,7922,10),(23317,7922,150),(23318,7922,7),(23319,7923,149),(23320,7923,7),(23321,7924,149),(23322,7924,40),(23323,7924,30),(23324,7925,149),(23325,7925,21),(23326,7925,5),(23327,7926,4),(23328,7926,5),(23329,7926,30),(23330,7926,2),(23331,7927,34),(23332,7927,36),(23333,7927,4),(23334,7927,5),(23335,7928,149),(23336,7928,8),(23337,7928,21),(23338,7928,7),(23339,7929,147),(23340,7929,149),(23341,7929,21),(23342,7929,101),(23343,7929,50),(23344,7929,47),(23345,7929,12),(23346,7930,7),(23347,7930,5),(23348,7931,147),(23349,7931,35),(23350,7931,95),(23351,7932,150),(23352,7932,4),(23353,7932,11),(23354,7933,10),(23355,7933,147),(23356,7933,150),(23357,7933,5),(23358,7933,15),(23359,7934,149),(23360,7934,7),(23361,7934,6),(23362,7935,147),(23363,7935,5),(23364,7936,101),(23365,7936,5),(23366,7937,145),(23367,7937,149),(23368,7937,2),(23369,7938,145),(23370,7939,145),(23371,7939,50),(23372,7940,145),(23373,7940,101),(23374,7941,145),(23375,7941,30),(23376,7942,145),(23377,7942,145),(23378,7942,149),(23379,7942,40),(23380,7942,5),(23381,7943,145),(23382,7943,149),(23383,7943,5),(23384,7943,30),(23385,7944,145),(23386,7945,145),(23387,7945,145),(23388,7945,145),(23389,7945,147),(23390,7945,101),(23391,7946,145),(23392,7946,145),(23393,7946,145),(23394,7946,151),(23395,7946,2),(23396,7947,10),(23397,7947,36),(23398,7947,150),(23399,7947,4),(23400,7947,5),(23401,7947,15),(23402,7948,36),(23403,7948,4),(23404,7948,5),(23405,7949,8),(23406,7949,21),(23407,7949,101),(23408,7950,10),(23409,7950,4),(23410,7950,5),(23411,7950,30),(23412,7951,149),(23413,7951,101),(23414,7951,5),(23415,7952,149),(23416,7952,7),(23417,7953,101),(23418,7953,5),(23419,7954,7),(23420,7954,5),(23421,7954,2),(23422,7955,36),(23423,7955,5),(23424,7956,4),(23425,7957,150),(23426,7957,5),(23427,7957,6),(23428,7957,12),(23429,7958,147),(23430,7958,150),(23431,7958,8),(23432,7958,95),(23433,7958,21),(23434,7958,7),(23435,7959,10),(23436,7959,5),(23437,7960,147),(23438,7960,7),(23439,7960,6),(23440,7961,149),(23441,7961,5),(23442,7961,30),(23443,7962,147),(23444,7962,7),(23445,7963,36),(23446,7963,4),(23447,7963,5),(23448,7964,10),(23449,7964,150),(23450,7964,21),(23451,7964,7),(23452,7964,101),(23453,7965,10),(23454,7965,4),(23455,7965,101),(23456,7965,5),(23457,7966,149),(23458,7966,7),(23459,7967,149),(23460,7967,7),(23461,7967,5),(23462,7968,10),(23463,7968,7),(23464,7968,5),(23465,7969,101),(23466,7970,147),(23467,7970,36),(23468,7970,4),(23469,7970,5),(23470,7971,36),(23471,7971,35),(23472,7971,4),(23473,7971,11),(23474,7972,36),(23475,7972,35),(23476,7972,4),(23477,7973,10),(23478,7973,147),(23479,7973,150),(23480,7973,15),(23481,7974,147),(23482,7974,4),(23483,7974,7),(23484,7974,101),(23485,7975,5),(23486,7975,6),(23487,7976,147),(23488,7976,101),(23489,7977,34),(23490,7977,4),(23491,7977,7),(23492,7977,101),(23493,7977,6),(23494,7978,147),(23495,7978,150),(23496,7978,4),(23497,7978,7),(23498,7978,101),(23499,7978,6),(23500,7979,147),(23501,7979,8),(23502,7979,101),(23503,7980,10),(23504,7980,101),(23505,7980,50),(23506,7981,150),(23507,7981,101),(23508,7982,7),(23509,7982,101),(23510,7982,2),(23511,7983,7),(23512,7984,101),(23513,7985,7),(23514,7985,5),(23515,7985,6),(23516,7986,7),(23517,7986,5),(23518,7986,30),(23519,7986,6),(23520,7987,147),(23521,7987,150),(23522,7987,8),(23523,7987,12),(23524,7988,36),(23525,7988,4),(23526,7988,95),(23527,7988,5),(23528,7989,147),(23529,7989,149),(23530,7989,5),(23531,7990,149),(23532,7990,7),(23533,7991,40),(23534,7991,7),(23535,7991,5),(23536,7992,7),(23537,7992,5),(23538,7992,6),(23539,7992,15),(23540,7993,10),(23541,7993,147),(23542,7993,101),(23543,7993,5),(23544,7993,6),(23545,7994,147),(23546,7994,150),(23547,7994,8),(23548,7994,4),(23549,7994,12),(23550,7994,15),(23551,7995,8),(23552,7995,4),(23553,7995,21),(23554,7995,7),(23555,7995,12),(23556,7996,10),(23557,7996,150),(23558,7996,40),(23559,7996,5),(23560,7997,7),(23561,7997,2),(23562,7998,34),(23563,7998,147),(23564,7999,34),(23565,7999,4),(23566,8000,150),(23567,8000,95),(23568,8000,101),(23569,8001,10),(23570,8001,35),(23571,8001,21),(23572,8001,47),(23573,8002,34),(23574,8002,147),(23575,8002,8),(23576,8002,4),(23577,8002,21),(23578,8003,147),(23579,8003,4),(23580,8003,7),(23581,8003,101),(23582,8004,147),(23583,8004,7),(23584,8004,5),(23585,8004,30),(23586,8005,7),(23587,8005,101),(23588,8006,7),(23589,8006,5),(23590,8007,7),(23591,8007,101),(23592,8007,5),(23593,8008,7),(23594,8008,101),(23595,8009,150),(23596,8009,159),(23597,8009,2),(23598,8010,4),(23599,8010,5),(23600,8010,157),(23601,8010,30),(23602,8011,150),(23603,8011,35),(23604,8011,95),(23605,8011,3),(23606,8011,12),(23607,8012,10),(23608,8012,150),(23609,8012,4),(23610,8012,21),(23611,8012,7),(23612,8012,47),(23613,8012,6),(23614,8013,10),(23615,8013,150),(23616,8013,4),(23617,8013,7),(23618,8013,6),(23619,8014,150),(23620,8014,7),(23621,8014,6),(23622,8015,34),(23623,8015,149),(23624,8016,8),(23625,8016,3),(23626,8016,101),(23627,8016,12),(23628,8017,34),(23629,8017,3),(23630,8017,157),(23631,8017,2),(23632,8018,147),(23633,8018,149),(23634,8018,8),(23635,8018,95),(23636,8018,21),(23637,8018,7),(23638,8018,2),(23639,8019,147),(23640,8019,149),(23641,8019,95),(23642,8019,21),(23643,8019,7),(23644,8019,2),(23645,8020,150),(23646,8020,7),(23647,8020,3),(23648,8020,2),(23649,8021,150),(23650,8021,7),(23651,8022,150),(23652,8022,7),(23653,8023,7),(23654,8023,2),(23655,8024,101),(23656,8024,2),(23657,8025,34),(23658,8025,8),(23659,8025,4),(23660,8026,36),(23661,8026,4),(23662,8026,5),(23663,8027,10),(23664,8027,147),(23665,8027,4),(23666,8027,7),(23667,8027,6),(23668,8028,149),(23669,8028,8),(23670,8028,95),(23671,8028,40),(23672,8028,7),(23673,8028,101),(23674,8028,5),(23675,8029,150),(23676,8029,4),(23677,8030,4),(23678,8031,7),(23679,8031,2),(23680,8032,147),(23681,8032,149),(23682,8032,7),(23683,8032,5),(23684,8033,150),(23685,8033,7),(23686,8033,101),(23687,8033,5),(23688,8034,4),(23689,8034,5),(23690,8034,30),(23691,8035,147),(23692,8035,4),(23693,8036,149),(23694,8036,7),(23695,8036,5),(23696,8037,7),(23697,8037,5),(23698,8037,30),(23699,8038,147),(23700,8038,150),(23701,8038,7),(23702,8038,101),(23703,8039,7),(23704,8039,101),(23705,8039,6),(23706,8040,150),(23707,8040,8),(23708,8040,35),(23709,8040,95),(23710,8040,12),(23711,8041,147),(23712,8041,150),(23713,8041,95),(23714,8041,5),(23715,8041,30),(23716,8041,15),(23717,8042,147),(23718,8042,150),(23719,8042,8),(23720,8042,4),(23721,8042,101),(23722,8042,12),(23723,8043,149),(23724,8043,7),(23725,8043,50),(23726,8044,149),(23727,8044,7),(23728,8045,149),(23729,8045,153),(23730,8045,21),(23731,8045,7),(23732,8045,101),(23733,8046,147),(23734,8046,5),(23735,8046,30),(23736,8047,8),(23737,8047,4),(23738,8047,154),(23739,8047,7),(23740,8047,12),(23741,8048,150),(23742,8048,4),(23743,8048,7),(23744,8048,15),(23745,8049,10),(23746,8049,5),(23747,8050,101),(23748,8050,2),(23749,8051,147),(23750,8051,101),(23751,8051,2),(23752,8052,34),(23753,8052,8),(23754,8052,21),(23755,8053,10),(23756,8053,149),(23757,8053,8),(23758,8053,7),(23759,8053,12),(23760,8054,10),(23761,8054,150),(23762,8054,4),(23763,8054,7),(23764,8054,5),(23765,8055,36),(23766,8055,5),(23767,8056,10),(23768,8056,150),(23769,8056,101),(23770,8057,147),(23771,8057,40),(23772,8057,7),(23773,8058,147),(23774,8058,101),(23775,8058,2),(23776,8059,150),(23777,8059,4),(23778,8059,7),(23779,8059,3),(23780,8059,101),(23781,8059,12),(23782,8060,36),(23783,8060,35),(23784,8060,4),(23785,8060,5),(23786,8060,30),(23787,8061,10),(23788,8061,7),(23789,8061,5),(23790,8061,15),(23791,8062,149),(23792,8062,7),(23793,8062,5),(23794,8063,2),(23795,8064,147),(23796,8064,150),(23797,8064,35),(23798,8064,101),(23799,8065,10),(23800,8065,150),(23801,8065,4),(23802,8065,7),(23803,8065,6),(23804,8065,15),(23805,8066,10),(23806,8066,4),(23807,8066,7),(23808,8066,101),(23809,8066,5),(23810,8066,15),(23811,8067,149),(23812,8067,150),(23813,8067,15),(23814,8068,149),(23815,8068,5),(23816,8069,7),(23817,8069,5),(23818,8070,147),(23819,8070,36),(23820,8070,35),(23821,8070,4),(23822,8070,152),(23823,8070,21),(23824,8071,36),(23825,8071,4),(23826,8071,21),(23827,8072,147),(23828,8072,8),(23829,8072,4),(23830,8072,30),(23831,8073,10),(23832,8073,34),(23833,8073,150),(23834,8073,3),(23835,8073,5),(23836,8073,6),(23837,8074,10),(23838,8074,147),(23839,8074,7),(23840,8074,5),(23841,8074,15),(23842,8075,7),(23843,8075,5),(23844,8076,7),(23845,8076,6),(23846,8077,10),(23847,8077,7),(23848,8077,6),(23849,8078,7),(23850,8078,6),(23851,8079,10),(23852,8079,147),(23853,8079,150),(23854,8080,4),(23855,8080,7),(23856,8080,6),(23857,8081,147),(23858,8081,7),(23859,8081,2),(23860,8082,101),(23861,8082,15),(23862,8083,40),(23863,8083,101),(23864,8084,101),(23865,8084,2),(23866,8085,149),(23867,8085,8),(23868,8085,21),(23869,8085,47),(23870,8086,147),(23871,8086,8),(23872,8086,35),(23873,8086,21),(23874,8086,7),(23875,8086,5),(23876,8086,47),(23877,8086,12),(23878,8087,34),(23879,8087,149),(23880,8088,150),(23881,8088,7),(23882,8088,6),(23883,8089,147),(23884,8089,101),(23885,8089,5),(23886,8090,7),(23887,8090,7),(23888,8090,5),(23889,8091,101),(23890,8091,5),(23891,8091,2),(23892,8092,34),(23893,8092,147),(23894,8092,4),(23895,8092,7),(23896,8092,101),(23897,8092,2),(23898,8093,147),(23899,8093,4),(23900,8093,101),(23901,8093,5),(23902,8093,30),(23903,8094,34),(23904,8094,147),(23905,8094,149),(23906,8094,101),(23907,8095,36),(23908,8095,4),(23909,8095,101),(23910,8095,5),(23911,8096,147),(23912,8096,101),(23913,8096,2),(23914,8096,15),(23915,8097,147),(23916,8097,5),(23917,8097,30),(23918,8098,34),(23919,8098,149),(23920,8098,8),(23921,8098,95),(23922,8098,21),(23923,8098,7),(23924,8098,101),(23925,8098,12),(23926,8099,150),(23927,8099,8),(23928,8099,4),(23929,8100,10),(23930,8100,147),(23931,8100,36),(23932,8100,5),(23933,8100,15),(23934,8101,149),(23935,8101,7),(23936,8101,5),(23937,8102,149),(23938,8102,7),(23939,8102,101),(23940,8102,5),(23941,8102,60),(23942,8103,147),(23943,8103,101),(23944,8103,5),(23945,8104,150),(23946,8104,35),(23947,8104,15),(23948,8105,10),(23949,8105,150),(23950,8105,4),(23951,8105,40),(23952,8106,147),(23953,8106,150),(23954,8106,12),(23955,8107,149),(23956,8107,101),(23957,8107,5),(23958,8108,34),(23959,8108,149),(23960,8108,7),(23961,8108,5),(23962,8109,36),(23963,8109,8),(23964,8109,95),(23965,8109,21),(23966,8109,101),(23967,8110,4),(23968,8110,7),(23969,8110,5),(23970,8111,7),(23971,8111,5),(23972,8111,30),(23973,8112,149),(23974,8112,5),(23975,8113,147),(23976,8113,6),(23977,8114,101),(23978,8115,101),(23979,8117,147),(23980,8117,36),(23981,8117,4),(23982,8117,154),(23983,8117,60),(23984,8118,36),(23985,8118,4),(23986,8119,150),(23987,8119,7),(23988,8120,149),(23989,8121,147),(23990,8121,7),(23991,8122,150),(23992,8122,35),(23993,8122,101),(23994,8122,12),(23995,8123,8),(23996,8123,153),(23997,8123,155),(23998,8123,21),(23999,8124,147),(24000,8124,150),(24001,8124,5),(24002,8124,30),(24003,8125,147),(24004,8125,4),(24005,8125,101),(24006,8126,10),(24007,8126,7),(24008,8126,6),(24009,8127,149),(24010,8127,5),(24011,8128,149),(24012,8128,5),(24013,8128,6),(24014,8131,149),(24015,8131,12),(24016,8132,36),(24017,8132,4),(24018,8132,5),(24019,8132,12),(24020,8133,10),(24021,8133,147),(24022,8133,150),(24023,8133,7),(24024,8133,101),(24025,8133,15),(24026,8134,147),(24027,8134,5),(24028,8134,30),(24029,8135,147),(24030,8135,149),(24031,8135,7),(24032,8135,101),(24033,8135,6),(24034,8135,2),(24035,8136,147),(24036,8136,7),(24037,8136,6),(24038,8137,40),(24039,8137,5),(24040,8138,10),(24041,8138,95),(24042,8138,3),(24043,8138,5),(24044,8138,30),(24045,8138,159),(24046,8139,34),(24047,8139,147),(24048,8139,36),(24049,8139,150),(24050,8139,4),(24051,8139,30),(24052,8139,6),(24053,8140,10),(24054,8140,147),(24055,8140,150),(24056,8140,5),(24057,8140,30),(24058,8141,10),(24059,8141,34),(24060,8141,149),(24061,8141,50),(24062,8142,147),(24063,8142,7),(24064,8142,5),(24065,8142,30),(24066,8143,149),(24067,8143,7),(24068,8144,147),(24069,8144,157),(24070,8145,149),(24071,8145,21),(24072,8145,47),(24073,8146,34),(24074,8146,149),(24075,8146,4),(24076,8146,12),(24077,8147,149),(24078,8147,21),(24079,8147,7),(24080,8147,50),(24081,8147,6),(24082,8148,149),(24083,8148,150),(24084,8148,4),(24085,8148,95),(24086,8148,7),(24087,8148,6),(24088,8149,150),(24089,8149,7),(24090,8150,149),(24091,8150,5),(24092,8151,149),(24093,8151,7),(24094,8151,2),(24095,8152,8),(24096,8152,4),(24097,8152,21),(24098,8152,5),(24099,8152,30),(24100,8152,12),(24101,8153,34),(24102,8153,8),(24103,8153,5),(24104,8153,12),(24105,8154,36),(24106,8154,4),(24107,8154,5),(24108,8154,60),(24109,8155,34),(24110,8155,147),(24111,8155,2),(24112,8156,7),(24113,8156,5),(24114,8157,7),(24115,8157,101),(24116,8158,34),(24117,8158,150),(24118,8158,35),(24119,8158,2),(24120,8158,12),(24121,8159,10),(24122,8159,8),(24123,8159,21),(24124,8159,12),(24125,8160,34),(24126,8160,36),(24127,8160,8),(24128,8160,4),(24129,8160,5),(24130,8160,60),(24131,8160,12),(24132,8161,10),(24133,8161,5),(24134,8161,30),(24135,8161,6),(24136,8161,15),(24137,8162,36),(24138,8162,7),(24139,8162,5),(24140,8163,7),(24141,8163,5),(24142,8164,5),(24143,8165,10),(24144,8165,4),(24145,8165,7),(24146,8165,12),(24147,8166,10),(24148,8166,5),(24149,8167,4),(24150,8167,5),(24151,8168,21),(24152,8168,47),(24153,8169,154),(24154,8169,40),(24155,8169,7),(24156,8169,50),(24157,8170,15),(24158,8171,36),(24159,8171,149),(24160,8171,5),(24161,8171,2),(24162,8172,149),(24163,8172,21),(24164,8172,7),(24165,8173,150),(24166,8173,4),(24167,8174,149),(24168,8174,7),(24169,8174,5),(24170,8175,154),(24171,8175,7),(24172,8175,50),(24173,8175,6),(24174,8176,4),(24175,8176,40),(24176,8177,7),(24177,8178,149),(24178,8178,4),(24179,8178,7),(24180,8178,5),(24181,8179,7),(24182,8179,101),(24183,8180,8),(24184,8180,21),(24185,8180,5),(24186,8180,30),(24187,8180,47),(24188,8181,34),(24189,8181,5),(24190,8182,34),(24191,8182,149),(24192,8183,149),(24193,8183,7),(24194,8184,147),(24195,8184,149),(24196,8184,101),(24197,8185,149),(24198,8186,147),(24199,8186,36),(24200,8186,149),(24201,8186,150),(24202,8186,4),(24203,8186,12),(24204,8187,10),(24205,8187,147),(24206,8187,150),(24207,8187,101),(24208,8188,147),(24209,8188,150),(24210,8188,101),(24211,8189,8),(24212,8189,4),(24213,8189,7),(24214,8189,12),(24215,8190,147),(24216,8190,149),(24217,8190,7),(24218,8190,101),(24219,8190,15),(24220,8191,149),(24221,8191,4),(24222,8191,7),(24223,8192,149),(24224,8192,7),(24225,8192,5),(24226,8193,149),(24227,8193,5),(24228,8194,4),(24229,8195,149),(24230,8196,149),(24231,8196,5),(24232,8197,147),(24233,8197,154),(24234,8197,101),(24235,8197,50),(24236,8198,10),(24237,8198,50),(24238,8199,34),(24239,8199,36),(24240,8199,4),(24241,8199,152),(24242,8199,5),(24243,8199,60),(24244,8200,149),(24245,8201,7),(24246,8201,6),(24247,8202,36),(24248,8202,153),(24249,8202,155),(24250,8202,7),(24251,8204,10),(24252,8204,35),(24253,8204,3),(24254,8204,101),(24255,8204,60),(24256,8204,12),(24257,8205,149),(24258,8205,155),(24259,8205,5),(24260,8205,60),(24261,8206,10),(24262,8206,7),(24263,8206,101),(24264,8206,5),(24265,8206,6),(24266,8206,15),(24267,8207,149),(24268,8207,8),(24269,8207,21),(24270,8207,101),(24271,8207,6),(24272,8208,154),(24273,8209,149),(24274,8209,5),(24275,8210,149),(24276,8210,7),(24277,8210,5),(24278,8211,147),(24279,8211,101),(24280,8212,101),(24281,8213,10),(24282,8213,34),(24283,8213,150),(24284,8213,3),(24285,8213,60),(24286,8213,2),(24287,8213,12),(24288,8214,147),(24289,8214,4),(24290,8214,101),(24291,8214,15),(24292,8215,147),(24293,8215,150),(24294,8215,8),(24295,8215,4),(24296,8215,2),(24297,8215,12),(24298,8216,7),(24299,8216,5),(24300,8216,30),(24301,8217,10),(24302,8217,149),(24303,8217,4),(24304,8217,15),(24305,8218,36),(24306,8218,5),(24307,8218,6),(24308,8219,149),(24309,8220,35),(24310,8220,152),(24311,8220,5),(24312,8221,34),(24313,8221,36),(24314,8221,4),(24315,8221,5),(24316,8221,30),(24317,8222,36),(24318,8222,8),(24319,8222,4),(24320,8222,95),(24321,8222,5),(24322,8222,60),(24323,8222,12),(24324,8223,149),(24325,8223,150),(24326,8223,8),(24327,8223,95),(24328,8223,153),(24329,8223,154),(24330,8223,155),(24331,8223,21),(24332,8223,101),(24333,8224,147),(24334,8224,148),(24335,8224,5),(24336,8224,30),(24337,8225,149),(24338,8226,147),(24339,8226,7),(24340,8227,145),(24341,8227,147),(24342,8228,145),(24343,8228,147),(24344,8229,145),(24345,8229,147),(24346,8229,4),(24347,8230,145),(24348,8230,4),(24349,8231,145),(24350,8231,147),(24351,8231,4),(24352,8231,7),(24353,8232,145),(24354,8232,10),(24355,8232,147),(24356,8232,5),(24357,8233,145),(24358,8233,147),(24359,8233,101),(24360,8233,5),(24361,8234,145),(24362,8234,5),(24363,8235,4),(24364,8235,7),(24365,8236,36),(24366,8236,5),(24367,8236,30),(24368,8237,149),(24369,8237,8),(24370,8237,21),(24371,8237,7),(24372,8238,149),(24373,8238,7),(24374,8238,101),(24375,8238,6),(24376,8239,7),(24377,8239,5),(24378,8240,7),(24379,8240,5),(24380,8240,30),(24381,8241,150),(24382,8241,12),(24383,8242,34),(24384,8242,147),(24385,8242,4),(24386,8242,21),(24387,8242,5),(24388,8242,157),(24389,8242,12),(24390,8243,36),(24391,8243,149),(24392,8243,4),(24393,8243,7),(24394,8243,5),(24395,8244,150),(24396,8244,4),(24397,8245,150),(24398,8245,7),(24399,8245,6),(24400,8246,101),(24401,8247,153),(24402,8248,10),(24403,8248,147),(24404,8248,150),(24405,8248,35),(24406,8248,4),(24407,8248,15),(24408,8249,5),(24409,8249,30),(24410,8250,4),(24411,8250,101),(24412,8251,101),(24413,8252,147),(24414,8252,101),(24415,8253,7),(24416,8254,5),(24417,8254,30),(24418,8255,147),(24419,8255,150),(24420,8255,101),(24421,8256,7),(24422,8256,5),(24423,8257,155),(24424,8257,5),(24425,8258,101),(24426,8258,47),(24427,8259,10),(24428,8259,21),(24429,8259,7),(24430,8259,101),(24431,8260,149),(24432,8260,50),(24433,8260,60),(24434,8261,4),(24435,8261,40),(24436,8261,60),(24437,8262,147),(24438,8262,5),(24439,8263,10),(24440,8263,149),(24441,8263,15),(24442,8264,36),(24443,8264,4),(24444,8264,60),(24445,8265,7),(24446,8266,34),(24447,8266,95),(24448,8266,153),(24449,8266,155),(24450,8267,150),(24451,8268,10),(24452,8268,50),(24453,8269,10),(24454,8269,50),(24455,8270,10),(24456,8270,50),(24457,8271,147),(24458,8271,149),(24459,8271,8),(24460,8271,95),(24461,8271,6),(24462,8271,12),(24463,8272,4),(24464,8272,7),(24465,8272,6),(24466,8273,36),(24467,8273,4),(24468,8273,5),(24469,8274,21),(24470,8274,7),(24471,8275,5),(24472,8275,30),(24473,8276,7),(24474,8277,150),(24475,8277,8),(24476,8277,4),(24477,8277,95),(24478,8277,21),(24479,8277,12),(24480,8278,4),(24481,8278,21),(24482,8278,5),(24483,8278,30),(24484,8279,36),(24485,8279,4),(24486,8279,101),(24487,8279,5),(24488,8279,30),(24489,8280,147),(24490,8280,149),(24491,8280,7),(24492,8281,10),(24493,8281,147),(24494,8281,150),(24495,8281,101),(24496,8281,5),(24497,8281,6),(24498,8282,34),(24499,8282,149),(24500,8282,7),(24501,8282,5),(24502,8283,149),(24503,8283,6),(24504,8284,10),(24505,8284,150),(24506,8284,4),(24507,8285,36),(24508,8285,5),(24509,8285,12),(24510,8286,149),(24511,8286,50),(24512,8286,30),(24513,8287,36),(24514,8287,5),(24515,8288,149),(24516,8288,101),(24517,8288,30),(24518,8288,6),(24519,8289,7),(24520,8289,5),(24521,8289,30),(24522,8290,50),(24523,8290,60),(24524,8290,12),(24525,8291,36),(24526,8291,4),(24527,8291,5),(24528,8292,4),(24529,8292,5),(24530,8293,10),(24531,8293,147),(24532,8293,149),(24533,8293,95),(24534,8293,21),(24535,8293,7),(24536,8293,11),(24537,8293,12),(24538,8293,15),(24539,8294,36),(24540,8294,5),(24541,8295,149),(24542,8295,8),(24543,8295,21),(24544,8295,7),(24545,8296,149),(24546,8296,7),(24547,8296,101),(24548,8297,147),(24549,8297,149),(24550,8298,34),(24551,8298,8),(24552,8298,21),(24553,8299,10),(24554,8299,7),(24555,8299,6),(24556,8300,150),(24557,8300,7),(24558,8300,5),(24559,8301,101),(24560,8301,15),(24561,8302,150),(24562,8302,101),(24563,8302,6),(24564,8303,7),(24565,8303,101),(24566,8303,2),(24567,8304,101),(24568,8304,6),(24569,8305,10),(24570,8305,149),(24571,8305,150),(24572,8305,7),(24573,8305,5),(24574,8306,10),(24575,8306,150),(24576,8306,7),(24577,8306,5),(24578,8306,30),(24579,8307,147),(24580,8307,4),(24581,8307,6),(24582,8308,147),(24583,8308,30),(24584,8309,7),(24585,8309,5),(24586,8309,47),(24587,8310,5),(24588,8311,101),(24589,8311,2),(24590,8312,149),(24591,8312,150),(24592,8313,36),(24593,8313,8),(24594,8313,95),(24595,8313,21),(24596,8314,10),(24597,8314,147),(24598,8314,149),(24599,8314,5),(24600,8314,15),(24601,8315,7),(24602,8315,30),(24603,8316,149),(24604,8317,149),(24605,8317,2),(24606,8318,149),(24607,8318,7),(24608,8318,5),(24609,8319,7),(24610,8320,147),(24611,8320,15),(24612,8321,10),(24613,8321,147),(24614,8321,7),(24615,8322,149),(24616,8322,8),(24617,8322,21),(24618,8322,47),(24619,8323,4),(24620,8323,5),(24621,8323,60),(24622,8324,5),(24623,8324,30),(24624,8325,149),(24625,8325,4),(24626,8325,7),(24627,8326,149),(24628,8326,4),(24629,8326,7),(24630,8327,149),(24631,8327,150),(24632,8327,4),(24633,8328,36),(24634,8328,4),(24635,8328,5),(24636,8329,36),(24637,8329,4),(24638,8329,5),(24639,8329,2),(24640,8330,10),(24641,8330,150),(24642,8330,35),(24643,8330,4),(24644,8330,7),(24645,8330,2),(24646,8331,36),(24647,8331,5),(24648,8331,30),(24649,8332,149),(24650,8332,101),(24651,8333,147),(24652,8333,7),(24653,8333,101),(24654,8334,149),(24655,8334,101),(24656,8334,5),(24657,8335,150),(24658,8335,8),(24659,8335,12),(24660,8336,149),(24661,8336,8),(24662,8336,21),(24663,8336,47),(24664,8337,36),(24665,8337,4),(24666,8337,5),(24667,8337,30),(24668,8338,10),(24669,8338,150),(24670,8338,154),(24671,8338,7),(24672,8338,101),(24673,8339,7),(24674,8340,7),(24675,8340,101),(24676,8341,34),(24677,8341,149),(24678,8342,10),(24679,8342,150),(24680,8342,35),(24681,8342,4),(24682,8342,153),(24683,8342,5),(24684,8342,12),(24685,8343,34),(24686,8343,148),(24687,8343,36),(24688,8343,149),(24689,8343,5),(24690,8343,30),(24691,8344,147),(24692,8344,150),(24693,8344,4),(24694,8344,7),(24695,8344,101),(24696,8345,147),(24697,8345,101),(24698,8345,2),(24699,8346,5),(24700,8347,36),(24701,8347,4),(24702,8347,5),(24703,8348,10),(24704,8348,34),(24705,8348,149),(24706,8348,150),(24707,8349,154),(24708,8350,149),(24709,8351,149),(24710,8351,7),(24711,8352,10),(24712,8352,150),(24713,8352,4),(24714,8352,153),(24715,8352,40),(24716,8352,101),(24717,8352,6),(24718,8353,150),(24719,8353,3),(24720,8353,60),(24721,8354,4),(24722,8354,50),(24723,8355,10),(24724,8355,149),(24725,8355,50),(24726,8355,160),(24727,8356,8),(24728,8356,4),(24729,8356,7),(24730,8356,6),(24731,8356,12),(24732,8357,149),(24733,8357,7),(24734,8357,101),(24735,8357,5),(24736,8358,149),(24737,8358,7),(24738,8358,15),(24739,8359,149),(24740,8359,7),(24741,8360,5),(24742,8360,15),(24743,8361,147),(24744,8361,5),(24745,8361,30),(24746,8362,147),(24747,8362,5),(24748,8362,30),(24749,8363,7),(24750,8363,5),(24751,8363,6),(24752,8364,10),(24753,8364,101),(24754,8364,15),(24755,8365,101),(24756,8365,5),(24757,8366,7),(24758,8366,101),(24759,8367,34),(24760,8367,36),(24761,8367,149),(24762,8367,150),(24763,8367,4),(24764,8367,3),(24765,8367,5),(24766,8368,150),(24767,8368,4),(24768,8368,11),(24769,8368,60),(24770,8369,10),(24771,8369,4),(24772,8370,147),(24773,8370,4),(24774,8370,7),(24775,8370,60),(24776,8371,149),(24777,8371,4),(24778,8371,7),(24779,8372,149),(24780,8372,7),(24781,8373,147),(24782,8373,36),(24783,8373,101),(24784,8373,5),(24785,8374,34),(24786,8374,147),(24787,8374,7),(24788,8374,5),(24789,8374,6),(24790,8375,149),(24791,8375,7),(24792,8375,2),(24793,8376,10),(24794,8376,7),(24795,8376,5),(24796,8377,147),(24797,8377,7),(24798,8377,30),(24799,8378,101),(24800,8379,7),(24801,8379,101),(24802,8379,6),(24803,8380,101),(24804,8381,34),(24805,8381,147),(24806,8381,8),(24807,8381,4),(24808,8381,153),(24809,8381,21),(24810,8381,47),(24811,8382,10),(24812,8382,150),(24813,8382,5),(24814,8382,6),(24815,8383,4),(24816,8384,8),(24817,8384,35),(24818,8384,21),(24819,8384,6),(24820,8384,12),(24821,8385,147),(24822,8385,7),(24823,8385,5),(24824,8385,15),(24825,8386,149),(24826,8386,5),(24827,8387,101),(24828,8387,101),(24829,8387,2),(24830,8388,150),(24831,8388,35),(24832,8388,35),(24833,8388,4),(24834,8388,40),(24835,8388,21),(24836,8388,30),(24837,8389,150),(24838,8389,12),(24839,8390,149),(24840,8390,95),(24841,8390,6),(24842,8391,36),(24843,8391,4),(24844,8391,5),(24845,8392,149),(24846,8392,150),(24847,8392,8),(24848,8392,4),(24849,8392,7),(24850,8392,12),(24851,8393,149),(24852,8393,150),(24853,8394,149),(24854,8394,154),(24855,8394,7),(24856,8394,6),(24857,8395,40),(24858,8395,7),(24859,8395,6),(24860,8396,149),(24861,8396,30),(24862,8397,34),(24863,8397,150),(24864,8397,4),(24865,8397,159),(24866,8397,2),(24867,8398,34),(24868,8398,4),(24869,8399,10),(24870,8399,150),(24871,8399,8),(24872,8399,21),(24873,8399,7),(24874,8399,12),(24875,8400,36),(24876,8400,149),(24877,8400,4),(24878,8400,154),(24879,8401,149),(24880,8401,7),(24881,8401,5),(24882,8402,101),(24883,8403,150),(24884,8403,2),(24885,8404,149),(24886,8404,4),(24887,8404,7),(24888,8404,5),(24889,8405,149),(24890,8405,95),(24891,8405,21),(24892,8405,7),(24893,8405,50),(24894,8405,47),(24895,8405,12),(24896,8406,36),(24897,8406,4),(24898,8406,5),(24899,8406,15),(24900,8407,149),(24901,8407,150),(24902,8407,8),(24903,8407,95),(24904,8407,21),(24905,8407,12),(24906,8408,4),(24907,8408,154),(24908,8408,7),(24909,8408,5),(24910,8409,149),(24911,8409,7),(24912,8409,5),(24913,8409,6),(24914,8410,7),(24915,8410,101),(24916,8410,6),(24917,8411,10),(24918,8411,150),(24919,8412,149),(24920,8412,5),(24921,8412,30),(24922,8413,36),(24923,8413,4),(24924,8413,5),(24925,8413,60),(24926,8414,147),(24927,8414,4),(24928,8414,21),(24929,8414,7),(24930,8414,101),(24931,8414,47),(24932,8415,149),(24933,8415,154),(24934,8415,101),(24935,8415,5),(24936,8416,10),(24937,8416,101),(24938,8416,5),(24939,8417,7),(24940,8417,101),(24941,8417,2),(24942,8418,4),(24943,8418,7),(24944,8419,149),(24945,8419,40),(24946,8419,7),(24947,8419,101),(24948,8419,2),(24949,8420,10),(24950,8420,150),(24951,8420,4),(24952,8420,15),(24953,8421,10),(24954,8421,150),(24955,8421,158),(24956,8421,15),(24957,8422,5),(24958,8422,30),(24959,8423,147),(24960,8423,7),(24961,8423,6),(24962,8424,150),(24963,8424,40),(24964,8425,149),(24965,8425,150),(24966,8425,155),(24967,8425,7),(24968,8426,147),(24969,8426,36),(24970,8426,150),(24971,8426,3),(24972,8426,5),(24973,8427,8),(24974,8427,95),(24975,8427,21),(24976,8427,7),(24977,8427,101),(24978,8427,2),(24979,8428,7),(24980,8428,5),(24981,8429,149),(24982,8429,7),(24983,8429,5),(24984,8430,34),(24985,8430,35),(24986,8430,4),(24987,8430,5),(24988,8431,149),(24989,8431,30),(24990,8432,150),(24991,8432,4),(24992,8432,7),(24993,8432,15),(24994,8433,7),(24995,8433,5),(24996,8434,149),(24997,8435,147),(24998,8435,7),(24999,8435,6),(25000,8436,149),(25001,8436,4),(25002,8436,5),(25003,8437,4),(25004,8437,7),(25005,8438,149),(25006,8438,7),(25007,8438,5),(25008,8439,149),(25009,8439,6),(25010,8440,149),(25011,8440,5),(25012,8441,7),(25013,8441,6),(25014,8442,150),(25015,8442,4),(25016,8442,5),(25017,8442,30),(25018,8443,147),(25019,8443,150),(25020,8443,30),(25021,8444,147),(25022,8444,150),(25023,8444,101),(25024,8444,30),(25025,8445,10),(25026,8445,34),(25027,8445,147),(25028,8445,7),(25029,8445,101),(25030,8445,15),(25031,8446,10),(25032,8446,34),(25033,8446,7),(25034,8446,15),(25035,8447,147),(25036,8447,4),(25037,8447,7),(25038,8447,101),(25039,8448,147),(25040,8448,36),(25041,8448,149),(25042,8448,101),(25043,8448,5),(25044,8448,30),(25045,8449,147),(25046,8449,36),(25047,8449,4),(25048,8449,152),(25049,8449,5),(25050,8450,4),(25051,8450,7),(25052,8450,5),(25053,8450,30),(25054,8451,10),(25055,8451,147),(25056,8451,150),(25057,8451,4),(25058,8451,15),(25059,8452,34),(25060,8452,147),(25061,8452,3),(25062,8452,5),(25063,8452,30),(25064,8453,7),(25065,8453,5),(25066,8454,7),(25067,8454,5),(25068,8455,34),(25069,8455,150),(25070,8455,4),(25071,8456,36),(25072,8456,150),(25073,8456,35),(25074,8456,30),(25075,8457,149),(25076,8457,2),(25077,8457,15),(25078,8458,150),(25079,8458,7),(25080,8458,5),(25081,8458,6),(25082,8459,10),(25083,8459,40),(25084,8459,7),(25085,8459,101),(25086,8459,5),(25087,8459,160),(25088,8460,150),(25089,8460,7),(25090,8460,6),(25091,8461,36),(25092,8461,4),(25093,8461,3),(25094,8461,2),(25095,8461,15),(25096,8462,3),(25097,8462,5),(25098,8463,50),(25099,8463,60),(25100,8464,7),(25101,8464,6),(25102,8464,15),(25103,8465,149),(25104,8465,2),(25105,8466,7),(25106,8466,2),(25107,8467,5),(25108,8468,10),(25109,8468,34),(25110,8468,147),(25111,8468,36),(25112,8468,4),(25113,8468,5),(25114,8468,15),(25115,8469,153),(25116,8469,155),(25117,8469,7),(25118,8470,147),(25119,8470,150),(25120,8470,7),(25121,8470,5),(25122,8470,30),(25123,8471,149),(25124,8471,4),(25125,8471,154),(25126,8471,15),(25127,8472,150),(25128,8472,7),(25129,8472,6),(25130,8473,149),(25131,8473,7),(25132,8474,147),(25133,8474,7),(25134,8474,101),(25135,8474,6),(25136,8475,10),(25137,8475,40),(25138,8475,101),(25139,8475,5),(25140,8476,36),(25141,8476,150),(25142,8476,7),(25143,8476,6),(25144,8477,150),(25145,8477,7),(25146,8477,158),(25147,8477,47),(25148,8478,36),(25149,8478,152),(25150,8478,5),(25151,8479,147),(25152,8479,149),(25153,8479,8),(25154,8479,95),(25155,8479,21),(25156,8479,60),(25157,8479,12),(25158,8480,150),(25159,8480,95),(25160,8480,21),(25161,8480,7),(25162,8481,34),(25163,8481,149),(25164,8481,5),(25165,8482,7),(25166,8482,5),(25167,8483,4),(25168,8483,21),(25169,8483,47),(25170,8484,150),(25171,8485,150),(25172,8485,95),(25173,8486,4),(25174,8486,12),(25175,8487,36),(25176,8487,95),(25177,8487,12),(25178,8488,149),(25179,8488,5),(25180,8489,10),(25181,8489,40),(25182,8489,5),(25183,8490,34),(25184,8490,150),(25185,8490,6),(25186,8491,36),(25187,8491,150),(25188,8491,4),(25189,8491,5),(25190,8491,30),(25191,8491,12),(25192,8492,10),(25193,8492,34),(25194,8492,5),(25195,8493,10),(25196,8493,36),(25197,8493,40),(25198,8493,5),(25199,8493,15),(25200,8494,10),(25201,8494,7),(25202,8494,6),(25203,8495,5),(25204,8496,34),(25205,8496,149),(25206,8496,7),(25207,8497,8),(25208,8497,101),(25209,8498,147),(25210,8498,150),(25211,8498,4),(25212,8498,101),(25213,8499,7),(25214,8499,6),(25215,8500,150),(25216,8500,101),(25217,8501,101),(25218,8502,101),(25219,8503,147),(25220,8503,149),(25221,8503,8),(25222,8503,153),(25223,8503,155),(25224,8503,21),(25225,8503,50),(25226,8504,8),(25227,8504,4),(25228,8504,3),(25229,8504,159),(25230,8504,2),(25231,8504,12),(25232,8505,34),(25233,8505,8),(25234,8505,35),(25235,8505,7),(25236,8505,6),(25237,8506,10),(25238,8506,7),(25239,8506,15),(25240,8507,101),(25241,8508,7),(25242,8508,101),(25243,8509,149),(25244,8509,150),(25245,8509,7),(25246,8509,101),(25247,8509,5),(25248,8510,34),(25249,8510,150),(25250,8510,4),(25251,8510,2),(25252,8510,12),(25253,8511,34),(25254,8511,147),(25255,8511,4),(25256,8511,2),(25257,8511,12),(25258,8511,15),(25259,8512,7),(25260,8512,101),(25261,8513,147),(25262,8513,150),(25263,8513,7),(25264,8513,5),(25265,8513,6),(25266,8514,5),(25267,8514,30),(25268,8515,10),(25269,8515,150),(25270,8515,101),(25271,8515,15),(25272,8516,149),(25273,8516,5),(25274,8517,154),(25275,8517,5),(25276,8518,150),(25277,8518,5),(25278,8518,30),(25279,8519,149),(25280,8519,21),(25281,8519,101),(25282,8519,5),(25283,8520,150),(25284,8520,155),(25285,8520,7),(25286,8520,5),(25287,8520,12),(25288,8521,150),(25289,8521,7),(25290,8521,5),(25291,8521,30),(25292,8522,7),(25293,8522,101),(25294,8522,5),(25295,8522,30),(25296,8523,150),(25297,8523,4),(25298,8523,7),(25299,8524,4),(25300,8524,7),(25301,8525,149),(25302,8525,153),(25303,8525,155),(25304,8525,21),(25305,8525,101),(25306,8526,5),(25307,8526,30),(25308,8527,36),(25309,8527,149),(25310,8527,7),(25311,8527,5),(25312,8528,7),(25313,8529,149),(25314,8529,101),(25315,8530,5),(25316,8530,30),(25317,8531,36),(25318,8531,4),(25319,8531,5),(25320,8531,30),(25321,8532,34),(25322,8532,150),(25323,8532,8),(25324,8532,35),(25325,8532,4),(25326,8533,147),(25327,8533,4),(25328,8533,5),(25329,8534,150),(25330,8534,4),(25331,8534,7),(25332,8534,101),(25333,8534,160),(25334,8535,149),(25335,8535,5),(25336,8536,7),(25337,8536,5),(25338,8537,149),(25339,8537,40),(25340,8537,50),(25341,8537,5),(25342,8538,150),(25343,8538,35),(25344,8538,4),(25345,8538,40),(25346,8538,21),(25347,8538,7),(25348,8538,47),(25349,8539,146),(25350,8539,34),(25351,8539,21),(25352,8539,7),(25353,8540,36),(25354,8540,150),(25355,8540,101),(25356,8540,5),(25357,8541,149),(25358,8541,7),(25359,8541,5),(25360,8542,149),(25361,8542,7),(25362,8542,5),(25363,8543,10),(25364,8543,150),(25365,8543,8),(25366,8543,12),(25367,8544,149),(25368,8544,101),(25369,8544,12),(25370,8545,147),(25371,8545,5),(25372,8545,30),(25373,8546,147),(25374,8546,150),(25375,8546,4),(25376,8546,7),(25377,8546,2),(25378,8547,7),(25379,8548,150),(25380,8548,7),(25381,8548,101),(25382,8549,101),(25383,8549,5),(25384,8550,34),(25385,8550,36),(25386,8550,149),(25387,8550,4),(25388,8550,5),(25389,8551,146),(25390,8551,150),(25391,8551,95),(25392,8551,7),(25393,8551,11),(25394,8552,149),(25395,8552,7),(25396,8552,50),(25397,8552,30),(25398,8552,60),(25399,8553,149),(25400,8553,4),(25401,8553,5),(25402,8554,149),(25403,8554,6),(25404,8555,40),(25405,8555,7),(25406,8555,101),(25407,8556,10),(25408,8556,150),(25409,8556,8),(25410,8556,12),(25411,8557,147),(25412,8557,150),(25413,8557,5),(25414,8557,30),(25415,8557,15),(25416,8558,10),(25417,8558,147),(25418,8558,36),(25419,8558,5),(25420,8558,30),(25421,8558,15),(25422,8559,10),(25423,8559,149),(25424,8559,150),(25425,8559,7),(25426,8559,47),(25427,8560,7),(25428,8560,6),(25429,8561,149),(25430,8561,7),(25431,8561,30),(25432,8562,7),(25433,8562,101),(25434,8563,147),(25435,8563,21),(25436,8564,149),(25437,8565,10),(25438,8565,154),(25439,8565,155),(25440,8566,149),(25441,8566,12),(25442,8567,34),(25443,8567,147),(25444,8567,149),(25445,8567,4),(25446,8567,7),(25447,8567,5),(25448,8568,10),(25449,8568,147),(25450,8568,150),(25451,8568,40),(25452,8568,7),(25453,8568,101),(25454,8568,5),(25455,8569,149),(25456,8569,7),(25457,8569,5),(25458,8570,34),(25459,8570,147),(25460,8570,4),(25461,8570,152),(25462,8570,153),(25463,8570,21),(25464,8570,5),(25465,8570,157),(25466,8570,12),(25467,8571,34),(25468,8571,150),(25469,8571,8),(25470,8571,95),(25471,8571,7),(25472,8571,12),(25473,8572,10),(25474,8572,150),(25475,8572,7),(25476,8572,5),(25477,8573,149),(25478,8573,7),(25479,8573,101),(25480,8573,2),(25481,8574,150),(25482,8574,4),(25483,8574,101),(25484,8575,147),(25485,8575,7),(25486,8575,101),(25487,8575,5),(25488,8576,149),(25489,8576,5),(25490,8577,7),(25491,8577,5),(25492,8578,34),(25493,8578,149),(25494,8578,4),(25495,8578,30),(25496,8579,10),(25497,8579,150),(25498,8580,36),(25499,8580,8),(25500,8580,4),(25501,8580,5),(25502,8580,12),(25503,8581,8),(25504,8581,95),(25505,8581,21),(25506,8581,7),(25507,8581,6),(25508,8581,12),(25509,8582,147),(25510,8582,150),(25511,8582,101),(25512,8582,6),(25513,8583,10),(25514,8583,149),(25515,8583,7),(25516,8583,101),(25517,8584,10),(25518,8584,150),(25519,8584,8),(25520,8584,35),(25521,8584,95),(25522,8584,7),(25523,8584,12),(25524,8585,147),(25525,8585,149),(25526,8585,150),(25527,8585,4),(25528,8585,7),(25529,8585,5),(25530,8585,30),(25531,8585,15),(25532,8586,10),(25533,8586,147),(25534,8586,149),(25535,8586,7),(25536,8586,30),(25537,8587,4),(25538,8587,153),(25539,8587,7),(25540,8587,101),(25541,8588,4),(25542,8588,7),(25543,8588,5),(25544,8589,146),(25545,8589,149),(25546,8589,7),(25547,8589,159),(25548,8589,2),(25549,8590,34),(25550,8590,149),(25551,8590,50),(25552,8590,60),(25553,8591,10),(25554,8591,34),(25555,8591,147),(25556,8591,36),(25557,8591,150),(25558,8591,7),(25559,8592,36),(25560,8592,149),(25561,8592,7),(25562,8592,5),(25563,8592,6),(25564,8593,147),(25565,8593,101),(25566,8594,149),(25567,8594,7),(25568,8594,101),(25569,8595,7),(25570,8595,6),(25571,8596,36),(25572,8596,152),(25573,8596,5),(25574,8597,36),(25575,8597,149),(25576,8597,4),(25577,8597,152),(25578,8597,5),(25579,8598,149),(25580,8598,152),(25581,8598,5),(25582,8598,2),(25583,8599,149),(25584,8599,4),(25585,8599,154),(25586,8600,147),(25587,8600,149),(25588,8600,4),(25589,8600,21),(25590,8600,101),(25591,8600,5),(25592,8601,149),(25593,8601,3),(25594,8601,101),(25595,8601,5),(25596,8602,7),(25597,8602,101),(25598,8602,6),(25599,8603,147),(25600,8603,7),(25601,8603,101),(25602,8604,149),(25603,8604,7),(25604,8605,34),(25605,8605,147),(25606,8605,4),(25607,8605,7),(25608,8605,5),(25609,8606,10),(25610,8606,150),(25611,8606,4),(25612,8606,7),(25613,8606,6),(25614,8607,101),(25615,8608,147),(25616,8608,150),(25617,8608,2),(25618,8609,147),(25619,8609,101),(25620,8609,2),(25621,8610,150),(25622,8610,101),(25623,8611,147),(25624,8611,101),(25625,8611,2),(25626,8612,150),(25627,8612,8),(25628,8612,12),(25629,8613,8),(25630,8613,12),(25631,8614,149),(25632,8614,150),(25633,8614,7),(25634,8614,5),(25635,8614,30),(25636,8615,8),(25637,8615,95),(25638,8615,21),(25639,8616,7),(25640,8617,150),(25641,8617,7),(25642,8618,7),(25643,8619,149),(25644,8620,36),(25645,8620,150),(25646,8620,101),(25647,8620,5),(25648,8620,11),(25649,8621,147),(25650,8621,4),(25651,8621,7),(25652,8621,2),(25653,8622,10),(25654,8622,150),(25655,8622,7),(25656,8622,5),(25657,8622,6),(25658,8622,15),(25659,8623,10),(25660,8623,7),(25661,8623,101),(25662,8623,15),(25663,8624,7),(25664,8625,101),(25665,8626,149),(25666,8626,4),(25667,8626,7),(25668,8627,147),(25669,8627,149),(25670,8628,10),(25671,8628,4),(25672,8628,7),(25673,8628,5),(25674,8629,149),(25675,8629,150),(25676,8629,7),(25677,8630,149),(25678,8630,101),(25679,8630,5),(25680,8631,149),(25681,8631,7),(25682,8631,5),(25683,8632,150),(25684,8632,4),(25685,8632,7),(25686,8632,5),(25687,8632,30),(25688,8632,15),(25689,8633,150),(25690,8633,4),(25691,8633,7),(25692,8634,36),(25693,8634,149),(25694,8634,5),(25695,8635,34),(25696,8635,149),(25697,8635,11),(25698,8636,149),(25699,8636,5),(25700,8637,34),(25701,8637,5),(25702,8637,11),(25703,8637,157),(25704,8637,30),(25705,8638,149),(25706,8638,21),(25707,8638,101),(25708,8638,5),(25709,8639,147),(25710,8639,36),(25711,8639,7),(25712,8639,6),(25713,8639,12),(25714,8639,15),(25715,8640,10),(25716,8640,149),(25717,8640,50),(25718,8641,147),(25719,8641,150),(25720,8642,149),(25721,8642,7),(25722,8642,101),(25723,8643,34),(25724,8643,147),(25725,8644,146),(25726,8644,149),(25727,8644,21),(25728,8644,101),(25729,8645,147),(25730,8645,36),(25731,8645,149),(25732,8645,4),(25733,8645,40),(25734,8645,21),(25735,8645,7),(25736,8645,101),(25737,8645,5),(25738,8646,10),(25739,8646,149),(25740,8646,50),(25741,8647,10),(25742,8647,149),(25743,8647,150),(25744,8647,7),(25745,8647,101),(25746,8647,2),(25747,8647,15),(25748,8648,7),(25749,8648,6),(25750,8649,7),(25751,8649,101),(25752,8650,147),(25753,8650,36),(25754,8650,4),(25755,8650,7),(25756,8650,101),(25757,8650,5),(25758,8650,15),(25759,8651,147),(25760,8651,150),(25761,8651,40),(25762,8651,5),(25763,8652,147),(25764,8652,149),(25765,8652,8),(25766,8652,95),(25767,8652,21),(25768,8652,12),(25769,8653,36),(25770,8653,5),(25771,8654,10),(25772,8654,149),(25773,8654,150),(25774,8654,35),(25775,8654,7),(25776,8654,47),(25777,8655,149),(25778,8655,7),(25779,8655,101),(25780,8655,5),(25781,8656,7),(25782,8657,34),(25783,8657,7),(25784,8658,149),(25785,8658,8),(25786,8658,21),(25787,8659,149),(25788,8659,8),(25789,8659,4),(25790,8659,7),(25791,8659,12),(25792,8660,147),(25793,8660,149),(25794,8660,8),(25795,8660,4),(25796,8660,7),(25797,8660,12),(25798,8661,147),(25799,8661,150),(25800,8661,4),(25801,8661,21),(25802,8661,7),(25803,8661,47),(25804,8662,154),(25805,8662,7),(25806,8663,154),(25807,8664,149),(25808,8664,7),(25809,8665,7),(25810,8665,101),(25811,8666,10),(25812,8666,7),(25813,8666,15),(25814,8667,150),(25815,8667,7),(25816,8668,147),(25817,8668,150),(25818,8668,35),(25819,8668,4),(25820,8668,7),(25821,8669,21),(25822,8669,7),(25823,8669,47),(25824,8670,8),(25825,8670,4),(25826,8670,7),(25827,8670,12),(25828,8671,7),(25829,8672,150),(25830,8672,4),(25831,8672,7),(25832,8672,5),(25833,8673,150),(25834,8673,4),(25835,8673,6),(25836,8673,15),(25837,8674,147),(25838,8674,5),(25839,8675,10),(25840,8675,101),(25841,8675,15),(25842,8676,147),(25843,8676,101),(25844,8677,101),(25845,8678,7),(25846,8678,6),(25847,8679,101),(25848,8680,36),(25849,8680,8),(25850,8680,4),(25851,8680,5),(25852,8680,12),(25853,8681,150),(25854,8681,8),(25855,8681,95),(25856,8681,21),(25857,8681,7),(25858,8681,6),(25859,8682,10),(25860,8682,149),(25861,8682,150),(25862,8682,35),(25863,8682,101),(25864,8682,15),(25865,8683,147),(25866,8683,149),(25867,8683,7),(25868,8683,5),(25869,8683,2),(25870,8684,149),(25871,8684,7),(25872,8684,101),(25873,8684,15),(25874,8685,147),(25875,8685,7),(25876,8685,5),(25877,8686,10),(25878,8686,150),(25879,8686,7),(25880,8686,6),(25881,8687,21),(25882,8687,5),(25883,8687,30),(25884,8687,2),(25885,8688,10),(25886,8688,7),(25887,8688,5),(25888,8688,15),(25889,8689,101),(25890,8689,15),(25891,8690,150),(25892,8690,7),(25893,8690,101),(25894,8691,7),(25895,8691,101),(25896,8692,149),(25897,8692,7),(25898,8693,34),(25899,8693,147),(25900,8693,149),(25901,8693,8),(25902,8693,95),(25903,8693,21),(25904,8694,150),(25905,8694,4),(25906,8694,40),(25907,8694,47),(25908,8695,8),(25909,8695,4),(25910,8695,12),(25911,8696,150),(25912,8696,7),(25913,8697,147),(25914,8697,7),(25915,8697,101),(25916,8697,6),(25917,8697,15),(25918,8698,149),(25919,8698,7),(25920,8698,2),(25921,8699,34),(25922,8699,149),(25923,8699,7),(25924,8699,6),(25925,8700,34),(25926,8700,147),(25927,8701,152),(25928,8701,5),(25929,8702,36),(25930,8702,149),(25931,8702,7),(25932,8702,5),(25933,8702,30),(25934,8703,10),(25935,8703,147),(25936,8703,150),(25937,8703,95),(25938,8703,101),(25939,8703,5),(25940,8704,10),(25941,8704,147),(25942,8704,150),(25943,8704,95),(25944,8704,7),(25945,8704,6),(25946,8705,149),(25947,8705,21),(25948,8705,7),(25949,8705,50),(25950,8705,6),(25951,8706,147),(25952,8706,7),(25953,8707,4),(25954,8707,7),(25955,8708,7),(25956,8709,150),(25957,8709,7),(25958,8710,149),(25959,8710,7),(25960,8711,149),(25961,8711,8),(25962,8711,95),(25963,8712,147),(25964,8712,149),(25965,8712,7),(25966,8713,7),(25967,8713,101),(25968,8713,6),(25969,8713,2),(25970,8714,149),(25971,8714,7),(25972,8714,6),(25973,8715,149),(25974,8715,8),(25975,8715,35),(25976,8715,5),(25977,8716,149),(25978,8716,153),(25979,8716,155),(25980,8716,5),(25981,8716,30),(25982,8717,150),(25983,8717,15),(25984,8718,10),(25985,8718,147),(25986,8718,149),(25987,8718,150),(25988,8718,7),(25989,8718,15),(25990,8719,149),(25991,8719,7),(25992,8719,6),(25993,8720,147),(25994,8720,149),(25995,8720,7),(25996,8720,101),(25997,8720,6),(25998,8721,149),(25999,8721,5),(26000,8722,149),(26001,8722,154),(26002,8722,5),(26003,8722,2),(26004,8723,150),(26005,8723,153),(26006,8723,21),(26007,8723,7),(26008,8723,6),(26009,8723,15),(26010,8724,149),(26011,8724,8),(26012,8724,21),(26013,8724,7),(26014,8724,5),(26015,8724,6),(26016,8724,12),(26017,8725,149),(26018,8725,101),(26019,8725,12),(26020,8726,149),(26021,8726,7),(26022,8726,101),(26023,8726,5),(26024,8727,34),(26025,8727,149),(26026,8727,6),(26027,8728,7),(26028,8728,2),(26029,8729,150),(26030,8729,8),(26031,8729,35),(26032,8729,4),(26033,8729,95),(26034,8729,12),(26035,8730,150),(26036,8730,4),(26037,8730,11),(26038,8730,47),(26039,8731,147),(26040,8731,8),(26041,8731,4),(26042,8731,3),(26043,8731,47),(26044,8732,101),(26045,8732,6),(26046,8733,101),(26047,8733,5),(26048,8734,154),(26049,8734,7),(26050,8735,8),(26051,8735,35),(26052,8735,95),(26053,8735,21),(26054,8735,12),(26055,8736,34),(26056,8736,4),(26057,8736,7),(26058,8737,147),(26059,8737,7),(26060,8737,5),(26061,8738,10),(26062,8738,7),(26063,8738,2),(26064,8738,15),(26065,8739,101),(26066,8740,147),(26067,8740,5),(26068,8741,34),(26069,8741,4),(26070,8741,5),(26071,8742,34),(26072,8742,36),(26073,8742,4),(26074,8742,2),(26075,8743,10),(26076,8743,8),(26077,8743,4),(26078,8743,21),(26079,8744,150),(26080,8744,101),(26081,8745,150),(26082,8745,101),(26083,8746,147),(26084,8746,7),(26085,8746,5),(26086,8746,30),(26087,8747,4),(26088,8747,7),(26089,8747,101),(26090,8748,101),(26091,8749,101),(26092,8750,4),(26093,8750,5),(26094,8751,150),(26095,8752,4),(26096,8752,5),(26097,8753,149),(26098,8753,8),(26099,8753,21),(26100,8753,7),(26101,8754,150),(26102,8754,101),(26103,8754,5),(26104,8755,147),(26105,8755,150),(26106,8755,4),(26107,8756,150),(26108,8756,35),(26109,8756,6),(26110,8757,147),(26111,8758,8),(26112,8758,4),(26113,8758,21),(26114,8758,12),(26115,8759,150),(26116,8759,7),(26117,8759,101),(26118,8759,6),(26119,8759,15),(26120,8760,10),(26121,8760,7),(26122,8760,6),(26123,8761,147),(26124,8761,7),(26125,8761,101),(26126,8762,147),(26127,8762,7),(26128,8762,101),(26129,8762,101),(26130,8762,5),(26131,8762,2),(26132,8763,7),(26133,8763,5),(26134,8763,6),(26135,8764,101),(26136,8765,4),(26137,8766,8),(26138,8766,4),(26139,8766,7),(26140,8766,12),(26141,8767,95),(26142,8767,7),(26143,8767,2),(26144,8768,21),(26145,8768,101),(26146,8768,12),(26147,8769,101),(26148,8770,7),(26149,8770,101),(26150,8771,7),(26151,8771,5),(26152,8772,8),(26153,8772,4),(26154,8772,21),(26155,8773,150),(26156,8773,7),(26157,8773,101),(26158,8774,10),(26159,8774,147),(26160,8774,149),(26161,8774,7),(26162,8774,5),(26163,8775,149),(26164,8775,101),(26165,8775,6),(26166,8776,36),(26167,8776,101),(26168,8776,2),(26169,8777,36),(26170,8777,5),(26171,8778,149),(26172,8778,5),(26173,8779,34),(26174,8779,149),(26175,8779,35),(26176,8779,7),(26177,8779,50),(26178,8779,5),(26179,8780,34),(26180,8780,36),(26181,8780,5),(26182,8780,30),(26183,8781,36),(26184,8781,5),(26185,8781,30),(26186,8782,147),(26187,8782,4),(26188,8782,5),(26189,8782,30),(26190,8783,147),(26191,8783,7),(26192,8783,2),(26193,8784,154),(26194,8784,7),(26195,8784,2),(26196,8785,150),(26197,8785,7),(26198,8786,149),(26199,8786,150),(26200,8786,7),(26201,8787,149),(26202,8787,21),(26203,8787,5),(26204,8787,11),(26205,8788,149),(26206,8788,8),(26207,8788,21),(26208,8789,149),(26209,8789,21),(26210,8789,7),(26211,8790,10),(26212,8790,149),(26213,8790,7),(26214,8790,50),(26215,8791,149),(26216,8791,7),(26217,8791,101),(26218,8791,15),(26219,8792,149),(26220,8792,7),(26221,8792,101),(26222,8793,149),(26223,8793,101),(26224,8794,154),(26225,8794,101),(26226,8794,5),(26227,8795,147),(26228,8795,36),(26229,8795,4),(26230,8795,152),(26231,8795,5),(26232,8796,36),(26233,8796,35),(26234,8796,4),(26235,8796,95),(26236,8796,3),(26237,8796,6),(26238,8796,12),(26239,8797,147),(26240,8797,149),(26241,8797,7),(26242,8798,10),(26243,8798,147),(26244,8798,7),(26245,8798,5),(26246,8799,147),(26247,8799,5),(26248,8799,6),(26249,8800,101),(26250,8801,34),(26251,8801,36),(26252,8801,4),(26253,8802,34),(26254,8802,149),(26255,8802,8),(26256,8802,12),(26257,8803,10),(26258,8803,147),(26259,8803,40),(26260,8803,7),(26261,8803,101),(26262,8803,5),(26263,8804,150),(26264,8804,8),(26265,8804,95),(26266,8804,21),(26267,8804,101),(26268,8804,5),(26269,8805,147),(26270,8805,101),(26271,8805,2),(26272,8806,7),(26273,8806,101),(26274,8806,6),(26275,8807,34),(26276,8807,7),(26277,8807,5),(26278,8808,8),(26279,8808,101),(26280,8809,10),(26281,8809,150),(26282,8809,7),(26283,8809,15),(26284,8810,150),(26285,8810,5),(26286,8810,2),(26287,8811,101),(26288,8812,7),(26289,8812,7),(26290,8812,101),(26291,8812,5),(26292,8813,101),(26293,8813,6),(26294,8814,101),(26295,8815,7),(26296,8815,5),(26297,8815,6),(26298,8816,101),(26299,8816,5),(26300,8817,101),(26301,8818,36),(26302,8818,4),(26303,8818,152),(26304,8818,5),(26305,8819,149),(26306,8819,8),(26307,8819,4),(26308,8819,12),(26309,8820,149),(26310,8820,5),(26311,8821,150),(26312,8821,4),(26313,8822,147),(26314,8822,7),(26315,8822,5),(26316,8823,8),(26317,8823,21),(26318,8824,153),(26319,8825,149),(26320,8825,4),(26321,8825,47),(26322,8825,12),(26323,8826,147),(26324,8826,149),(26325,8826,40),(26326,8826,50),(26327,8826,5),(26328,8827,5),(26329,8828,40),(26330,8828,5),(26331,8829,36),(26332,8829,4),(26333,8829,101),(26334,8830,10),(26335,8830,149),(26336,8830,7),(26337,8830,5),(26338,8831,7),(26339,8832,147),(26340,8832,149),(26341,8832,40),(26342,8835,34),(26343,8835,147),(26344,8835,150),(26345,8835,35),(26346,8835,7),(26347,8835,101),(26348,8835,15),(26349,8836,34),(26350,8836,148),(26351,8836,149),(26352,8836,154),(26353,8836,50),(26354,8836,5),(26355,8836,30),(26356,8837,10),(26357,8837,7),(26358,8837,6),(26359,8837,12),(26360,8838,149),(26361,8838,7),(26362,8838,6),(26363,8839,149),(26364,8839,5),(26365,8840,145),(26366,8840,149),(26367,8841,145),(26368,8841,149),(26369,8841,2),(26370,8842,145),(26371,8842,2),(26372,8843,145),(26373,8843,101),(26374,8844,145),(26375,8844,36),(26376,8844,4),(26377,8844,5),(26378,8845,145),(26379,8845,101),(26380,8845,5),(26381,8846,145),(26382,8846,35),(26383,8846,101),(26384,8846,5),(26385,8847,145),(26386,8847,151),(26387,8847,12),(26388,8848,147),(26389,8848,8),(26390,8848,21),(26391,8848,101),(26392,8849,36),(26393,8849,5),(26394,8849,6),(26395,8850,149),(26396,8851,150),(26397,8851,4),(26398,8851,5),(26399,8852,40),(26400,8852,160),(26401,8853,153),(26402,8853,21),(26403,8854,147),(26404,8854,101),(26405,8854,6),(26406,8855,147),(26407,8855,5),(26408,8856,4),(26409,8856,7),(26410,8856,12),(26411,8857,150),(26412,8857,8),(26413,8857,21),(26414,8857,21),(26415,8857,101),(26416,8857,101),(26417,8857,47),(26418,8857,47),(26419,8858,5),(26420,8859,7),(26421,8859,101),(26422,8859,2),(26423,8860,4),(26424,8860,21),(26425,8860,5),(26426,8860,11),(26427,8861,7),(26428,8861,2),(26429,8862,147),(26430,8862,101),(26431,8863,10),(26432,8863,7),(26433,8864,147),(26434,8864,150),(26435,8864,4),(26436,8864,95),(26437,8864,5),(26438,8864,12),(26439,8865,150),(26440,8865,7),(26441,8866,10),(26442,8866,7),(26443,8866,5),(26444,8867,34),(26445,8867,147),(26446,8867,8),(26447,8867,4),(26448,8867,21),(26449,8867,7),(26450,8867,47),(26451,8868,7),(26452,8868,5),(26453,8869,150),(26454,8869,101),(26455,8869,5),(26456,8869,2),(26457,8870,147),(26458,8870,101),(26459,8870,5),(26460,8870,2),(26461,8871,147),(26462,8871,149),(26463,8871,7),(26464,8871,101),(26465,8872,147),(26466,8872,101),(26467,8872,5),(26468,8872,15),(26469,8873,4),(26470,8873,7),(26471,8873,2),(26472,8874,5),(26473,8875,7),(26474,8875,5),(26475,8876,8),(26476,8876,154),(26477,8876,21),(26478,8876,12),(26479,8877,34),(26480,8877,147),(26481,8877,149),(26482,8877,8),(26483,8877,95),(26484,8877,21),(26485,8878,149),(26486,8878,150),(26487,8878,7),(26488,8878,101),(26489,8878,5),(26490,8878,15),(26491,8879,10),(26492,8879,147),(26493,8879,4),(26494,8879,7),(26495,8879,101),(26496,8879,5),(26497,8880,34),(26498,8880,149),(26499,8880,7),(26500,8880,2),(26501,8881,149),(26502,8881,7),(26503,8881,101),(26504,8881,5),(26505,8882,147),(26506,8882,149),(26507,8882,7),(26508,8882,5),(26509,8883,150),(26510,8883,4),(26511,8883,154),(26512,8883,3),(26513,8883,101),(26514,8883,5),(26515,8883,30),(26516,8883,6),(26517,8884,34),(26518,8884,147),(26519,8884,150),(26520,8884,5),(26521,8885,34),(26522,8885,5),(26523,8886,149),(26524,8886,5),(26525,8887,36),(26526,8887,5),(26527,8887,30),(26528,8888,149),(26529,8888,101),(26530,8888,5),(26531,8889,146),(26532,8889,8),(26533,8889,95),(26534,8889,21),(26535,8889,12),(26536,8890,36),(26537,8890,4),(26538,8890,155),(26539,8890,5),(26540,8891,10),(26541,8891,147),(26542,8891,7),(26543,8891,5),(26544,8891,6),(26545,8892,7),(26546,8892,101),(26547,8893,7),(26548,8894,147),(26549,8894,5),(26550,8895,149),(26551,8895,21),(26552,8896,150),(26553,8896,5),(26554,8896,30),(26555,8897,149),(26556,8897,21),(26557,8897,5),(26558,8898,10),(26559,8898,149),(26560,8898,21),(26561,8898,7),(26562,8898,5),(26563,8898,6),(26564,8899,149),(26565,8899,8),(26566,8899,5),(26567,8899,12),(26568,8900,149),(26569,8900,5),(26570,8900,30),(26571,8901,149),(26572,8901,5),(26573,8901,30),(26574,8901,6),(26575,8902,150),(26576,8902,7),(26577,8902,5),(26578,8902,15),(26579,8903,5),(26580,8903,6),(26581,8904,36),(26582,8904,149),(26583,8904,35),(26584,8904,4),(26585,8904,152),(26586,8904,5),(26587,8905,150),(26588,8905,8),(26589,8905,21),(26590,8905,7),(26591,8905,47),(26592,8905,12),(26593,8906,34),(26594,8906,150),(26595,8906,35),(26596,8906,7),(26597,8906,3),(26598,8906,6),(26599,8906,2),(26600,8907,147),(26601,8907,150),(26602,8907,21),(26603,8907,5),(26604,8908,8),(26605,8908,5),(26606,8908,30),(26607,8908,12),(26608,8909,150),(26609,8909,7),(26610,8909,101),(26611,8909,6),(26612,8910,2),(26613,8911,147),(26614,8911,7),(26615,8911,101),(26616,8911,6),(26617,8912,10),(26618,8912,147),(26619,8912,150),(26620,8913,147),(26621,8913,36),(26622,8913,149),(26623,8913,8),(26624,8913,155),(26625,8913,7),(26626,8913,5),(26627,8914,10),(26628,8914,150),(26629,8914,8),(26630,8914,21),(26631,8914,47),(26632,8915,147),(26633,8915,150),(26634,8915,101),(26635,8916,149),(26636,8916,7),(26637,8917,101),(26638,8918,150),(26639,8918,8),(26640,8918,4),(26641,8918,21),(26642,8918,47),(26643,8919,4),(26644,8919,7),(26645,8919,101),(26646,8920,10),(26647,8920,150),(26648,8920,7),(26649,8920,101),(26650,8920,5),(26651,8920,6),(26652,8921,147),(26653,8921,149),(26654,8921,101),(26655,8921,5),(26656,8922,7),(26657,8922,3),(26658,8922,101),(26659,8922,6),(26660,8923,5),(26661,8924,101),(26662,8924,2),(26663,8925,7),(26664,8925,101),(26665,8926,101),(26666,8927,150),(26667,8927,8),(26668,8927,21),(26669,8928,150),(26670,8928,8),(26671,8928,35),(26672,8928,95),(26673,8928,21),(26674,8928,101),(26675,8928,12),(26676,8929,150),(26677,8929,35),(26678,8929,4),(26679,8929,101),(26680,8929,47),(26681,8930,36),(26682,8930,150),(26683,8930,101),(26684,8931,147),(26685,8931,149),(26686,8931,150),(26687,8931,5),(26688,8932,36),(26689,8932,150),(26690,8932,40),(26691,8932,5),(26692,8932,11),(26693,8932,6),(26694,8933,4),(26695,8933,7),(26696,8934,150),(26697,8934,8),(26698,8934,7),(26699,8935,149),(26700,8935,4),(26701,8935,5),(26702,8935,30),(26703,8936,149),(26704,8936,7),(26705,8937,147),(26706,8937,149),(26707,8937,21),(26708,8937,101),(26709,8938,101),(26710,8938,5),(26711,8939,149),(26712,8939,7),(26713,8939,101),(26714,8940,147),(26715,8940,4),(26716,8940,5),(26717,8940,30),(26718,8941,149),(26719,8941,8),(26720,8941,4),(26721,8941,101),(26722,8941,12),(26723,8942,34),(26724,8942,147),(26725,8942,149),(26726,8942,4),(26727,8942,5),(26728,8943,147),(26729,8943,149),(26730,8943,7),(26731,8943,6),(26732,8943,15),(26733,8944,5),(26734,8945,36),(26735,8945,152),(26736,8945,5),(26737,8945,30),(26738,8946,147),(26739,8946,36),(26740,8946,150),(26741,8946,101),(26742,8946,5),(26743,8947,150),(26744,8947,101),(26745,8947,5),(26746,8948,147),(26747,8948,4),(26748,8948,7),(26749,8948,101),(26750,8949,147),(26751,8949,149),(26752,8949,101),(26753,8950,101),(26754,8951,7),(26755,8952,40),(26756,8953,40),(26757,8954,36),(26758,8954,35),(26759,8954,152),(26760,8954,5),(26761,8955,34),(26762,8955,147),(26763,8955,36),(26764,8955,7),(26765,8955,3),(26766,8955,5),(26767,8955,15),(26768,8956,10),(26769,8956,147),(26770,8956,150),(26771,8956,95),(26772,8956,7),(26773,8956,6),(26774,8957,149),(26775,8957,101),(26776,8957,6),(26777,8958,147),(26778,8958,7),(26779,8958,6),(26780,8959,21),(26781,8959,50),(26782,8960,21),(26783,8960,50),(26784,8961,21),(26785,8961,50),(26786,8962,21),(26787,8962,50),(26788,8963,21),(26789,8963,50),(26790,8964,21),(26791,8964,50),(26792,8965,21),(26793,8965,50),(26794,8966,21),(26795,8966,50),(26796,8967,21),(26797,8967,50),(26798,8968,21),(26799,8968,50),(26800,8969,21),(26801,8969,50),(26802,8970,147),(26803,8970,150),(26804,8970,7),(26805,8970,15),(26806,8971,147),(26807,8971,150),(26808,8971,101),(26809,8972,149),(26810,8972,150),(26811,8972,7),(26812,8972,101),(26813,8973,150),(26814,8973,95),(26815,8973,21),(26816,8973,5),(26817,8974,150),(26818,8974,5),(26819,8974,6),(26820,8975,149),(26821,8975,7),(26822,8975,5),(26823,8976,150),(26824,8976,7),(26825,8976,5),(26826,8976,6),(26827,8977,149),(26828,8977,7),(26829,8977,5),(26830,8978,149),(26831,8978,8),(26832,8978,4),(26833,8978,7),(26834,8978,12),(26835,8979,10),(26836,8979,147),(26837,8979,101),(26838,8980,4),(26839,8980,7),(26840,8980,5),(26841,8981,7),(26842,8981,101),(26843,8982,147),(26844,8982,4),(26845,8982,7),(26846,8982,5),(26847,8983,147),(26848,8983,6),(26849,8984,150),(26850,8984,7),(26851,8985,146),(26852,8985,149),(26853,8985,8),(26854,8985,95),(26855,8985,21),(26856,8985,7),(26857,8985,6),(26858,8986,34),(26859,8986,4),(26860,8986,5),(26861,8986,11),(26862,8986,30),(26863,8986,2),(26864,8987,149),(26865,8987,7),(26866,8988,7),(26867,8989,34),(26868,8989,7),(26869,8990,147),(26870,8990,150),(26871,8990,3),(26872,8990,101),(26873,8990,5),(26874,8991,149),(26875,8991,150),(26876,8991,8),(26877,8991,155),(26878,8991,21),(26879,8992,149),(26880,8992,50),(26881,8992,5),(26882,8993,149),(26883,8994,34),(26884,8994,5),(26885,8995,7),(26886,8995,2),(26887,8996,150),(26888,8996,35),(26889,8996,50),(26890,8996,12),(26891,8997,10),(26892,8997,150),(26893,8997,8),(26894,8997,95),(26895,8997,21),(26896,8997,7),(26897,8997,5),(26898,8997,6),(26899,8997,12),(26900,8998,4),(26901,8998,7),(26902,8999,147),(26903,8999,5),(26904,9000,7),(26905,9001,147),(26906,9002,10),(26907,9002,8),(26908,9002,47),(26909,9002,12),(26910,9003,10),(26911,9003,150),(26912,9003,8),(26913,9003,21),(26914,9003,47),(26915,9003,12),(26916,9004,10),(26917,9004,150),(26918,9004,7),(26919,9004,5),(26920,9004,30),(26921,9004,15),(26922,9005,10),(26923,9005,34),(26924,9005,147),(26925,9005,4),(26926,9005,5),(26927,9006,34),(26928,9006,149),(26929,9007,101),(26930,9008,4),(26931,9008,7),(26932,9009,7),(26933,9010,153),(26934,9010,155),(26935,9010,21),(26936,9010,30),(26937,9011,36),(26938,9011,5),(26939,9011,30),(26940,9011,60),(26941,9012,149),(26942,9012,4),(26943,9012,7),(26944,9012,30),(26945,9013,4),(26946,9013,7),(26947,9013,6),(26948,9013,15),(26949,9014,10),(26950,9014,149),(26951,9014,150),(26952,9014,7),(26953,9014,15),(26954,9015,34),(26955,9015,149),(26956,9016,7),(26957,9016,5),(26958,9016,30),(26959,9017,147),(26960,9017,7),(26961,9017,6),(26962,9018,10),(26963,9018,150),(26964,9018,40),(26965,9018,6),(26966,9019,10),(26967,9019,150),(26968,9019,95),(26969,9019,12),(26970,9020,36),(26971,9020,4),(26972,9020,154),(26973,9020,5),(26974,9021,36),(26975,9021,4),(26976,9021,154),(26977,9021,5),(26978,9022,149),(26979,9022,7),(26980,9022,101),(26981,9022,50),(26982,9022,5),(26983,9023,7),(26984,9023,2),(26985,9024,10),(26986,9024,149),(26987,9024,7),(26988,9024,101),(26989,9024,5),(26990,9024,15),(26991,9025,40),(26992,9025,21),(26993,9025,7),(26994,9025,101),(26995,9025,47),(26996,9026,150),(26997,9026,4),(26998,9026,101),(26999,9026,47),(27000,9026,15),(27001,9027,147),(27002,9027,4),(27003,9027,5),(27004,9027,30),(27005,9028,149),(27006,9028,8),(27007,9028,30),(27008,9028,12),(27009,9029,154),(27010,9029,7),(27011,9029,6),(27012,9030,149),(27013,9030,101),(27014,9031,36),(27015,9031,4),(27016,9031,5),(27017,9031,30),(27018,9031,60),(27019,9032,8),(27020,9032,7),(27021,9032,12),(27022,9033,10),(27023,9033,147),(27024,9033,7),(27025,9033,5),(27026,9034,10),(27027,9034,150),(27028,9034,4),(27029,9034,7),(27030,9034,101),(27031,9034,5),(27032,9034,15),(27033,9035,7),(27034,9035,2),(27035,9036,149),(27036,9036,6),(27037,9037,10),(27038,9037,150),(27039,9037,8),(27040,9037,21),(27041,9037,12),(27042,9038,147),(27043,9038,150),(27044,9038,8),(27045,9038,35),(27046,9038,4),(27047,9038,21),(27048,9038,12),(27049,9039,34),(27050,9039,150),(27051,9039,101),(27052,9039,5),(27053,9039,6),(27054,9039,12),(27055,9040,4),(27056,9041,147),(27057,9041,7),(27058,9041,6),(27059,9042,34),(27060,9042,7),(27061,9042,5),(27062,9043,34),(27063,9043,8),(27064,9043,95),(27065,9043,21),(27066,9043,7),(27067,9044,10),(27068,9044,149),(27069,9044,50),(27070,9045,147),(27071,9045,149),(27072,9045,4),(27073,9045,3),(27074,9045,101),(27075,9045,2),(27076,9046,10),(27077,9046,7),(27078,9046,6),(27079,9046,2),(27080,9047,149),(27081,9047,153),(27082,9047,155),(27083,9047,7),(27084,9047,5),(27085,9048,101),(27086,9048,5),(27087,9049,5),(27088,9050,150),(27089,9050,8),(27090,9050,7),(27091,9050,2),(27092,9050,12),(27093,9051,101),(27094,9051,5),(27095,9051,60),(27096,9052,10),(27097,9052,7),(27098,9053,147),(27099,9053,8),(27100,9053,101),(27101,9053,6),(27102,9054,147),(27103,9054,101),(27104,9054,5),(27105,9055,149),(27106,9055,3),(27107,9055,5),(27108,9055,30),(27109,9056,34),(27110,9056,147),(27111,9056,7),(27112,9057,36),(27113,9057,5),(27114,9057,15),(27115,9058,10),(27116,9058,147),(27117,9058,7),(27118,9058,6),(27119,9059,150),(27120,9059,7),(27121,9059,5),(27122,9059,6),(27123,9060,40),(27124,9060,5),(27125,9061,150),(27126,9061,3),(27127,9061,159),(27128,9062,8),(27129,9062,21),(27130,9062,47),(27131,9062,12),(27132,9063,150),(27133,9063,4),(27134,9063,5),(27135,9064,150),(27136,9064,7),(27137,9064,101),(27138,9065,10),(27139,9065,150),(27140,9065,4),(27141,9065,7),(27142,9065,101),(27143,9065,6),(27144,9066,149),(27145,9066,7),(27146,9066,5),(27147,9067,8),(27148,9067,50),(27149,9067,5),(27150,9068,150),(27151,9068,7),(27152,9068,101),(27153,9069,149),(27154,9070,34),(27155,9070,36),(27156,9070,4),(27157,9071,4),(27158,9071,7),(27159,9072,149),(27160,9072,150),(27161,9072,95),(27162,9072,101),(27163,9073,147),(27164,9073,149),(27165,9073,7),(27166,9074,147),(27167,9074,4),(27168,9074,7),(27169,9074,101),(27170,9074,5),(27171,9075,40),(27172,9075,7),(27173,9075,5),(27174,9076,149),(27175,9076,95),(27176,9076,101),(27177,9077,147),(27178,9077,150),(27179,9077,35),(27180,9077,15),(27181,9078,10),(27182,9078,8),(27183,9078,95),(27184,9078,7),(27185,9078,6),(27186,9079,147),(27187,9079,149),(27188,9079,7),(27189,9079,5),(27190,9080,149),(27191,9080,150),(27192,9080,4),(27193,9080,7),(27194,9080,101),(27195,9080,5),(27196,9080,6),(27197,9081,10),(27198,9081,7),(27199,9081,6),(27200,9082,101),(27201,9083,101),(27202,9083,5),(27203,9084,101),(27204,9084,2),(27205,9085,150),(27206,9085,95),(27207,9085,7),(27208,9085,6),(27209,9086,34),(27210,9086,149),(27211,9086,8),(27212,9086,101),(27213,9086,5),(27214,9086,2),(27215,9087,149),(27216,9087,5),(27217,9088,4),(27218,9088,7),(27219,9088,5),(27220,9089,5),(27221,9090,101),(27222,9091,5),(27223,9091,6),(27224,9092,8),(27225,9092,4),(27226,9092,154),(27227,9092,21),(27228,9092,101),(27229,9092,5),(27230,9092,30),(27231,9092,47),(27232,9092,12),(27233,9093,149),(27234,9093,101),(27235,9093,50),(27236,9093,5),(27237,9094,149),(27238,9094,101),(27239,9094,50),(27240,9095,10),(27241,9095,7),(27242,9095,5),(27243,9095,6),(27244,9096,147),(27245,9096,149),(27246,9096,5),(27247,9096,30),(27248,9097,149),(27249,9097,7),(27250,9097,6),(27251,9097,2),(27252,9098,34),(27253,9098,36),(27254,9098,150),(27255,9098,35),(27256,9098,4),(27257,9098,5),(27258,9099,8),(27259,9099,4),(27260,9099,21),(27261,9100,147),(27262,9100,21),(27263,9100,5),(27264,9100,11),(27265,9101,147),(27266,9101,150),(27267,9101,7),(27268,9101,2),(27269,9102,4),(27270,9102,7),(27271,9102,5),(27272,9103,147),(27273,9103,40),(27274,9103,101),(27275,9103,5),(27276,9104,7),(27277,9104,2),(27278,9105,101),(27279,9106,10),(27280,9106,149),(27281,9106,150),(27282,9106,35),(27283,9106,153),(27284,9106,21),(27285,9106,47),(27286,9107,149),(27287,9107,155),(27288,9108,36),(27289,9108,4),(27290,9108,5),(27291,9109,150),(27292,9109,8),(27293,9109,154),(27294,9109,21),(27295,9109,7),(27296,9109,5),(27297,9109,6),(27298,9109,12),(27299,9110,34),(27300,9110,8),(27301,9110,95),(27302,9110,21),(27303,9110,12),(27304,9111,147),(27305,9111,21),(27306,9111,7),(27307,9111,5),(27308,9112,34),(27309,9112,7),(27310,9112,5),(27311,9113,7),(27312,9113,5),(27313,9114,10),(27314,9114,150),(27315,9115,4),(27316,9115,30),(27317,9116,4),(27318,9116,30),(27319,9117,34),(27320,9117,36),(27321,9117,149),(27322,9117,4),(27323,9117,5),(27324,9118,149),(27325,9118,6),(27326,9119,147),(27327,9119,149),(27328,9119,7),(27329,9120,36),(27330,9120,35),(27331,9120,152),(27332,9121,8),(27333,9121,21),(27334,9122,4),(27335,9122,5),(27336,9123,10),(27337,9124,7),(27338,9124,101),(27339,9124,6),(27340,9125,101),(27341,9125,5),(27342,9126,36),(27343,9126,149),(27344,9126,7),(27345,9126,6),(27346,9127,147),(27347,9127,4),(27348,9127,7),(27349,9127,47),(27350,9128,147),(27351,9128,4),(27352,9128,7),(27353,9128,60),(27354,9128,6),(27355,9129,5),(27356,9129,30),(27357,9130,10),(27358,9130,5),(27359,9131,149),(27360,9131,7),(27361,9132,147),(27362,9132,149),(27363,9133,150),(27364,9133,155),(27365,9133,7),(27366,9134,10),(27367,9134,150),(27368,9134,15),(27369,9135,8),(27370,9135,4),(27371,9135,7),(27372,9135,47),(27373,9135,12),(27374,9136,8),(27375,9136,7),(27376,9136,47),(27377,9136,12),(27378,9136,15),(27379,9137,149),(27380,9137,12),(27381,9138,149),(27382,9139,10),(27383,9139,149),(27384,9139,5),(27385,9140,149),(27386,9140,5),(27387,9141,154),(27388,9141,12),(27389,9142,150),(27390,9142,8),(27391,9142,7),(27392,9142,12),(27393,9143,150),(27394,9143,7),(27395,9143,3),(27396,9144,149),(27397,9144,8),(27398,9144,21),(27399,9145,10),(27400,9145,147),(27401,9145,7),(27402,9145,101),(27403,9145,5),(27404,9146,36),(27405,9146,4),(27406,9146,5),(27407,9146,30),(27408,9147,10),(27409,9147,7),(27410,9148,7),(27411,9148,15),(27412,9149,5),(27413,9151,150),(27414,9151,7),(27415,9151,5),(27416,9152,150),(27417,9152,35),(27418,9152,157),(27419,9152,15),(27420,9153,34),(27421,9153,150),(27422,9153,4),(27423,9153,11),(27424,9154,95),(27425,9154,21),(27426,9154,7),(27427,9154,101),(27428,9154,12),(27429,9155,10),(27430,9155,4),(27431,9155,101),(27432,9155,30),(27433,9155,158),(27434,9155,15),(27435,9156,101),(27436,9156,2),(27437,9157,7),(27438,9157,101),(27439,9157,5),(27440,9157,30),(27441,9158,10),(27442,9158,150),(27443,9158,8),(27444,9158,3),(27445,9158,159),(27446,9158,2),(27447,9158,12),(27448,9159,36),(27449,9159,4),(27450,9159,101),(27451,9160,10),(27452,9160,101),(27453,9160,6),(27454,9161,36),(27455,9161,152),(27456,9161,21),(27457,9161,5),(27458,9161,30),(27459,9162,150),(27460,9162,8),(27461,9162,4),(27462,9162,21),(27463,9162,7),(27464,9162,15),(27465,9163,149),(27466,9163,7),(27467,9164,149),(27468,9164,5),(27469,9165,7),(27470,9165,6),(27471,9165,15),(27472,9166,7),(27473,9167,147),(27474,9167,8),(27475,9167,21),(27476,9167,101),(27477,9168,101),(27478,9169,7),(27479,9169,5),(27480,9169,6),(27481,9170,147),(27482,9170,6),(27483,9171,5),(27484,9172,101),(27485,9172,2),(27486,9173,147),(27487,9173,4),(27488,9173,12),(27489,9174,36),(27490,9174,4),(27491,9174,5),(27492,9175,147),(27493,9175,149),(27494,9175,101),(27495,9175,6),(27496,9176,7),(27497,9176,30),(27498,9177,7),(27499,9177,101),(27500,9177,5),(27501,9178,2),(27502,9179,36),(27503,9179,4),(27504,9180,10),(27505,9180,7),(27506,9180,101),(27507,9180,5),(27508,9180,30),(27509,9180,6),(27510,9180,15),(27511,9181,34),(27512,9181,149),(27513,9181,8),(27514,9181,154),(27515,9181,7),(27516,9181,101),(27517,9181,12),(27518,9182,147),(27519,9182,7),(27520,9182,101),(27521,9182,2),(27522,9183,7),(27523,9183,6),(27524,9184,5),(27525,9184,30),(27526,9186,7),(27527,9187,36),(27528,9187,4),(27529,9187,101),(27530,9187,5),(27531,9188,36),(27532,9188,4),(27533,9188,5),(27534,9189,35),(27535,9189,4),(27536,9189,30),(27537,9190,4),(27538,9190,7),(27539,9190,5),(27540,9190,30),(27541,9191,149),(27542,9191,5),(27543,9191,30),(27544,9192,149),(27545,9192,5),(27546,9192,30),(27547,9193,149),(27548,9193,101),(27549,9194,101),(27550,9195,10),(27551,9195,8),(27552,9195,5),(27553,9195,157),(27554,9196,150),(27555,9196,4),(27556,9196,7),(27557,9197,150),(27558,9197,4),(27559,9197,7),(27560,9197,6),(27561,9198,150),(27562,9198,35),(27563,9198,4),(27564,9198,7),(27565,9198,6),(27566,9199,150),(27567,9199,8),(27568,9199,4),(27569,9199,21),(27570,9199,47),(27571,9199,15),(27572,9200,34),(27573,9200,7),(27574,9200,5),(27575,9200,30),(27576,9201,34),(27577,9201,8),(27578,9202,147),(27579,9202,5),(27580,9202,60),(27581,9203,154),(27582,9203,7),(27583,9203,15),(27584,9204,34),(27585,9204,147),(27586,9204,7),(27587,9205,150),(27588,9205,21),(27589,9206,50),(27590,9206,5),(27591,9207,147),(27592,9207,40),(27593,9207,5),(27594,9207,47),(27595,9208,3),(27596,9209,150),(27597,9209,11),(27598,9211,36),(27599,9211,5),(27600,9211,60),(27601,9211,160),(27602,9213,149),(27603,9213,7),(27604,9213,15),(27605,9214,3),(27606,9214,5),(27607,9214,159),(27608,9214,2),(27609,9215,10),(27610,9215,34),(27611,9215,147),(27612,9215,150),(27613,9215,4),(27614,9216,147),(27615,9216,36),(27616,9216,150),(27617,9216,8),(27618,9216,4),(27619,9216,101),(27620,9216,5),(27621,9217,36),(27622,9217,150),(27623,9217,40),(27624,9217,101),(27625,9217,5),(27626,9218,150),(27627,9218,4),(27628,9218,101),(27629,9218,5),(27630,9218,15),(27631,9219,147),(27632,9219,101),(27633,9220,147),(27634,9220,8),(27635,9220,4),(27636,9220,101),(27637,9221,149),(27638,9221,5),(27639,9222,147),(27640,9222,4),(27641,9222,101),(27642,9222,5),(27643,9222,12),(27644,9223,36),(27645,9223,5),(27646,9224,149),(27647,9224,8),(27648,9224,4),(27649,9224,95),(27650,9224,21),(27651,9225,147),(27652,9225,7),(27653,9225,5),(27654,9225,2),(27655,9226,34),(27656,9226,5),(27657,9227,5),(27658,9228,149),(27659,9228,150),(27660,9228,4),(27661,9228,7),(27662,9229,8),(27663,9229,4),(27664,9229,101),(27665,9229,5),(27666,9229,157),(27667,9230,147),(27668,9230,150),(27669,9230,8),(27670,9230,7),(27671,9230,101),(27672,9230,12),(27673,9231,147),(27674,9231,5),(27675,9231,30),(27676,9232,5),(27677,9232,30),(27678,9233,10),(27679,9233,7),(27680,9233,7),(27681,9234,8),(27682,9234,4),(27683,9234,7),(27684,9234,5),(27685,9234,5),(27686,9235,5),(27687,9236,149),(27688,9236,153),(27689,9236,155),(27690,9236,7),(27691,9237,149),(27692,9237,7),(27693,9238,34),(27694,9238,7),(27695,9238,5),(27696,9238,15),(27697,9239,10),(27698,9239,8),(27699,9239,101),(27700,9239,50),(27701,9239,5),(27702,9239,30),(27703,9239,12),(27704,9240,34),(27705,9240,149),(27706,9240,8),(27707,9240,4),(27708,9240,21),(27709,9240,12),(27710,9241,149),(27711,9241,95),(27712,9241,5),(27713,9241,6),(27714,9242,10),(27715,9242,7),(27716,9242,5),(27717,9242,6),(27718,9243,10),(27719,9243,150),(27720,9243,21),(27721,9243,15),(27722,9244,36),(27723,9244,149),(27724,9244,5),(27725,9245,4),(27726,9245,154),(27727,9245,21),(27728,9245,12),(27729,9246,36),(27730,9246,4),(27731,9246,5),(27732,9247,150),(27733,9247,8),(27734,9247,12),(27735,9248,150),(27736,9248,5),(27737,9249,7),(27738,9250,7),(27739,9251,101),(27740,9252,40),(27741,9253,34),(27742,9253,4),(27743,9253,21),(27744,9253,7),(27745,9253,2),(27746,9254,10),(27747,9254,150),(27748,9254,154),(27749,9254,7),(27750,9255,10),(27751,9255,36),(27752,9255,50),(27753,9255,5),(27754,9256,7),(27755,9256,5),(27756,9256,6),(27757,9257,7),(27758,9257,5),(27759,9258,5),(27760,9259,150),(27761,9259,35),(27762,9259,6),(27763,9259,12),(27764,9260,150),(27765,9260,5),(27766,9261,34),(27767,9261,149),(27768,9261,35),(27769,9262,149),(27770,9262,8),(27771,9262,155),(27772,9262,21),(27773,9262,7),(27774,9262,12),(27775,9263,149),(27776,9263,7),(27777,9263,50),(27778,9264,150),(27779,9264,4),(27780,9265,149),(27781,9265,12),(27782,9266,5),(27783,9266,30),(27784,9267,150),(27785,9267,30),(27786,9268,10),(27787,9268,147),(27788,9268,4),(27789,9268,7),(27790,9268,15),(27791,9269,34),(27792,9269,4),(27793,9269,7),(27794,9270,10),(27795,9270,150),(27796,9270,4),(27797,9270,7),(27798,9270,5),(27799,9271,149),(27800,9271,5),(27801,9272,147),(27802,9272,150),(27803,9272,7),(27804,9272,2),(27805,9272,15),(27806,9273,36),(27807,9273,5),(27808,9274,5),(27809,9275,149),(27810,9275,21),(27811,9275,7),(27812,9275,5),(27813,9276,36),(27814,9276,5),(27815,9276,30),(27816,9277,36),(27817,9277,152),(27818,9277,5),(27819,9278,147),(27820,9278,149),(27821,9278,150),(27822,9278,21),(27823,9278,47),(27824,9279,147),(27825,9279,35),(27826,9279,4),(27827,9279,7),(27828,9279,12),(27829,9280,147),(27830,9280,150),(27831,9280,101),(27832,9281,147),(27833,9281,36),(27834,9281,4),(27835,9281,12),(27836,9282,147),(27837,9282,150),(27838,9282,4),(27839,9282,7),(27840,9282,101),(27841,9283,4),(27842,9284,147),(27843,9284,21),(27844,9284,5),(27845,9284,30),(27846,9284,47),(27847,9285,150),(27848,9285,7),(27849,9286,149),(27850,9286,7),(27851,9286,5),(27852,9287,149),(27853,9287,21),(27854,9287,7),(27855,9288,7),(27856,9288,101),(27857,9289,101),(27858,9289,6),(27859,9290,5),(27860,9290,2),(27861,9291,149),(27862,9291,50),(27863,9291,60),(27864,9292,10),(27865,9292,95),(27866,9292,7),(27867,9293,147),(27868,9293,21),(27869,9293,101),(27870,9294,147),(27871,9294,150),(27872,9294,8),(27873,9295,40),(27874,9295,50),(27875,9296,101),(27876,9296,2),(27877,9297,5),(27878,9297,60),(27879,9298,40),(27880,9299,101),(27881,9299,5),(27882,9302,150),(27883,9302,95),(27884,9303,149),(27885,9303,21),(27886,9303,47),(27887,9304,145),(27888,9305,150),(27889,9305,40),(27890,9306,150),(27891,9306,35),(27892,9306,4),(27893,9306,6),(27894,9307,101),(27895,9307,5),(27896,9308,10),(27897,9308,147),(27898,9308,95),(27899,9308,101),(27900,9309,150),(27901,9309,12),(27902,9310,4),(27903,9310,2),(27904,9311,5),(27905,9311,30),(27906,9312,5),(27907,9313,150),(27908,9313,12),(27909,9314,147),(27910,9314,8),(27911,9314,4),(27912,9315,150),(27913,9315,152),(27914,9315,30),(27915,9316,10),(27916,9316,40),(27917,9317,150),(27918,9317,6),(27919,9317,2),(27920,9318,36),(27921,9318,8),(27922,9318,4),(27923,9318,95),(27924,9318,152),(27925,9318,21),(27926,9319,36),(27927,9319,149),(27928,9319,101),(27929,9319,5),(27930,9320,10),(27931,9320,147),(27932,9320,150),(27933,9320,8),(27934,9320,21),(27935,9320,7),(27936,9320,3),(27937,9320,101),(27938,9321,10),(27939,9321,7),(27940,9321,6),(27941,9321,160),(27942,9322,36),(27943,9322,7),(27944,9322,5),(27945,9323,149),(27946,9324,7),(27947,9324,5),(27948,9324,6),(27949,9325,7),(27950,9326,150),(27951,9327,10),(27952,9327,4),(27953,9327,40),(27954,9328,153),(27955,9328,155),(27956,9328,21),(27957,9328,7),(27958,9329,4),(27959,9329,7),(27960,9330,147),(27961,9330,149),(27962,9330,7),(27963,9330,15),(27964,9331,10),(27965,9331,147),(27966,9331,150),(27967,9331,4),(27968,9331,21),(27969,9331,101),(27970,9331,6),(27971,9332,145),(27972,9333,145),(27973,9333,10),(27974,9333,150),(27975,9334,145),(27976,9334,40),(27977,9334,60),(27978,9335,145),(27979,9335,150),(27980,9335,4),(27981,9336,145),(27982,9336,149),(27983,9336,4),(27984,9337,145),(27985,9337,34),(27986,9337,4),(27987,9337,7),(27988,9338,145),(27989,9338,147),(27990,9338,149),(27991,9338,101),(27992,9338,5),(27993,9339,145),(27994,9339,101),(27995,9340,145),(27996,9340,5),(27997,9341,145),(27998,9342,147),(27999,9342,8),(28000,9342,4),(28001,9342,21),(28002,9342,3),(28003,9343,34),(28004,9343,147),(28005,9343,3),(28006,9343,101),(28007,9343,157),(28008,9344,10),(28009,9344,150),(28010,9344,101),(28011,9344,6),(28012,9344,15),(28013,9345,36),(28014,9345,5),(28015,9346,149),(28016,9347,101),(28017,9348,146),(28018,9348,149),(28019,9348,8),(28020,9348,95),(28021,9348,21),(28022,9348,101),(28023,9349,150),(28024,9349,35),(28025,9349,5),(28026,9350,149),(28027,9350,7),(28028,9350,101),(28029,9350,5),(28030,9351,34),(28031,9351,36),(28032,9351,4),(28033,9351,5),(28034,9352,34),(28035,9352,7),(28036,9353,101),(28037,9353,2),(28038,9354,149),(28039,9354,4),(28040,9354,50),(28041,9354,5),(28042,9354,30),(28043,9355,149),(28044,9355,150),(28045,9355,21),(28046,9355,7),(28047,9355,101),(28048,9355,47),(28049,9356,150),(28050,9356,4),(28051,9356,7),(28052,9356,101),(28053,9356,6),(28054,9357,149),(28055,9357,8),(28056,9357,4),(28057,9357,7),(28058,9357,12),(28059,9358,150),(28060,9358,7),(28061,9358,101),(28062,9358,6),(28063,9358,15),(28064,9359,150),(28065,9359,7),(28066,9359,6),(28067,9360,34),(28068,9360,149),(28069,9360,4),(28070,9360,7),(28071,9361,34),(28072,9361,149),(28073,9361,4),(28074,9361,7),(28075,9362,10),(28076,9362,7),(28077,9362,5),(28078,9363,50),(28079,9363,5),(28080,9363,30),(28081,9363,60),(28082,9364,4),(28083,9364,7),(28084,9364,159),(28085,9364,2),(28086,9365,150),(28087,9365,5),(28088,9366,150),(28089,9366,4),(28090,9366,5),(28091,9367,149),(28092,9367,5),(28093,9368,147),(28094,9368,149),(28095,9368,101),(28096,9368,5),(28097,9368,30),(28098,9369,7),(28099,9369,5),(28100,9370,147),(28101,9370,150),(28102,9370,4),(28103,9370,5),(28104,9370,30),(28105,9371,10),(28106,9371,7),(28107,9371,6),(28108,9372,147),(28109,9372,101),(28110,9372,6),(28111,9373,34),(28112,9373,147),(28113,9373,149),(28114,9373,8),(28115,9373,4),(28116,9373,7),(28117,9374,10),(28118,9374,34),(28119,9374,147),(28120,9374,149),(28121,9374,8),(28122,9374,7),(28123,9375,10),(28124,9375,101),(28125,9375,6),(28126,9375,2),(28127,9376,7),(28128,9376,5),(28129,9376,2),(28130,9377,101),(28131,9377,5),(28132,9378,5),(28133,9379,101),(28134,9380,36),(28135,9380,4),(28136,9380,152),(28137,9380,5),(28138,9380,30),(28139,9381,147),(28140,9381,149),(28141,9381,8),(28142,9381,95),(28143,9381,21),(28144,9381,7),(28145,9381,12),(28146,9381,15),(28147,9382,147),(28148,9382,149),(28149,9382,95),(28150,9382,21),(28151,9382,7),(28152,9382,12),(28153,9383,149),(28154,9383,21),(28155,9384,4),(28156,9384,7),(28157,9385,34),(28158,9385,149),(28159,9385,5),(28160,9386,150),(28161,9386,6),(28162,9387,10),(28163,9387,8),(28164,9387,21),(28165,9387,7),(28166,9387,157),(28167,9387,47),(28168,9388,36),(28169,9388,150),(28170,9389,149),(28171,9389,7),(28172,9390,147),(28173,9390,4),(28174,9390,5),(28175,9390,30),(28176,9390,15),(28177,9391,147),(28178,9391,5),(28179,9392,147),(28180,9392,149),(28181,9392,50),(28182,9393,150),(28183,9393,4),(28184,9393,7),(28185,9394,34),(28186,9394,36),(28187,9394,4),(28188,9394,5),(28189,9394,11),(28190,9395,7),(28191,9395,6),(28192,9396,147),(28193,9396,5),(28194,9396,6),(28195,9397,21),(28196,9397,7),(28197,9397,5),(28198,9397,60),(28199,9398,34),(28200,9398,150),(28201,9398,95),(28202,9398,15),(28203,9399,34),(28204,9399,36),(28205,9399,4),(28206,9399,21),(28207,9399,5),(28208,9399,60),(28209,9400,150),(28210,9400,4),(28211,9400,7),(28212,9401,34),(28213,9401,149),(28214,9401,50),(28215,9401,5),(28216,9402,147),(28217,9402,101),(28218,9403,101),(28219,9404,5),(28220,9405,150),(28221,9405,95),(28222,9405,21),(28223,9405,12),(28224,9406,150),(28225,9406,6),(28226,9406,12),(28227,9406,15),(28228,9407,147),(28229,9407,149),(28230,9407,4),(28231,9407,2),(28232,9408,147),(28233,9408,149),(28234,9408,4),(28235,9408,101),(28236,9409,147),(28237,9410,147),(28238,9410,5),(28239,9411,8),(28240,9411,4),(28241,9411,5),(28242,9411,30),(28243,9412,149),(28244,9412,7),(28245,9412,2),(28246,9413,10),(28247,9413,34),(28248,9413,7),(28249,9413,101),(28250,9414,34),(28251,9414,147),(28252,9414,7),(28253,9414,5),(28254,9415,7),(28255,9416,36),(28256,9416,35),(28257,9416,4),(28258,9416,152),(28259,9416,5),(28260,9417,34),(28261,9417,35),(28262,9417,12),(28263,9418,147),(28264,9418,149),(28265,9418,95),(28266,9418,21),(28267,9418,3),(28268,9418,5),(28269,9418,30),(28270,9419,150),(28271,9419,5),(28272,9420,147),(28273,9420,36),(28274,9420,149),(28275,9420,8),(28276,9420,95),(28277,9420,21),(28278,9420,5),(28279,9421,4),(28280,9421,7),(28281,9421,2),(28282,9421,15),(28283,9422,34),(28284,9422,147),(28285,9422,4),(28286,9422,7),(28287,9423,147),(28288,9423,4),(28289,9423,3),(28290,9423,101),(28291,9423,2),(28292,9424,5),(28293,9424,30),(28294,9425,8),(28295,9425,5),(28296,9426,10),(28297,9426,50),(28298,9426,30),(28299,9427,34),(28300,9427,147),(28301,9427,8),(28302,9427,6),(28303,9428,10),(28304,9428,150),(28305,9428,4),(28306,9428,6),(28307,9429,149),(28308,9429,150),(28309,9429,7),(28310,9429,6),(28311,9430,34),(28312,9430,147),(28313,9430,149),(28314,9430,8),(28315,9430,4),(28316,9430,21),(28317,9430,5),(28318,9431,36),(28319,9431,149),(28320,9431,40),(28321,9431,7),(28322,9431,6),(28323,9432,36),(28324,9432,21),(28325,9432,7),(28326,9432,6),(28327,9433,6),(28328,9433,2),(28329,9434,147),(28330,9434,36),(28331,9434,8),(28332,9434,4),(28333,9434,12),(28334,9435,10),(28335,9435,147),(28336,9435,4),(28337,9436,149),(28338,9436,101),(28339,9436,5),(28340,9437,149),(28341,9437,5),(28342,9438,7),(28343,9438,6),(28344,9438,2),(28345,9439,10),(28346,9439,149),(28347,9439,150),(28348,9439,7),(28349,9440,7),(28350,9440,2),(28351,9441,7),(28352,9441,5),(28353,9442,10),(28354,9442,150),(28355,9442,35),(28356,9442,4),(28357,9442,95),(28358,9442,21),(28359,9442,47),(28360,9443,10),(28361,9443,34),(28362,9443,147),(28363,9443,4),(28364,9443,2),(28365,9443,15),(28366,9444,10),(28367,9444,36),(28368,9444,149),(28369,9444,101),(28370,9444,5),(28371,9444,6),(28372,9444,15),(28373,9445,147),(28374,9445,40),(28375,9445,7),(28376,9445,101),(28377,9446,7),(28378,9446,5),(28379,9447,7),(28380,9447,5),(28381,9448,8),(28382,9448,4),(28383,9448,153),(28384,9448,155),(28385,9448,21),(28386,9448,7),(28387,9448,101),(28388,9449,5),(28389,9449,30),(28390,9450,150),(28391,9450,35),(28392,9450,21),(28393,9450,7),(28394,9450,5),(28395,9451,147),(28396,9451,40),(28397,9451,5),(28398,9451,30),(28399,9452,34),(28400,9452,40),(28401,9452,5),(28402,9452,30),(28403,9453,36),(28404,9453,4),(28405,9453,152),(28406,9453,5),(28407,9454,10),(28408,9454,150),(28409,9454,35),(28410,9454,5),(28411,9454,30),(28412,9454,15),(28413,9455,147),(28414,9455,21),(28415,9455,7),(28416,9456,8),(28417,9456,4),(28418,9456,21),(28419,9456,12),(28420,9457,10),(28421,9457,147),(28422,9457,150),(28423,9457,35),(28424,9457,30),(28425,9457,15),(28426,9458,150),(28427,9458,4),(28428,9458,101),(28429,9458,47),(28430,9458,6),(28431,9458,15),(28432,9459,34),(28433,9459,149),(28434,9459,7),(28435,9460,7),(28436,9460,15),(28437,9461,7),(28438,9461,101),(28439,9461,2),(28440,9462,101),(28441,9462,5),(28442,9463,50),(28443,9463,5),(28444,9464,147),(28445,9464,7),(28446,9465,147),(28447,9465,150),(28448,9465,4),(28449,9466,150),(28450,9466,4),(28451,9467,150),(28452,9467,4),(28453,9468,149),(28454,9468,50),(28455,9468,5),(28456,9469,146),(28457,9469,147),(28458,9469,36),(28459,9469,149),(28460,9469,155),(28461,9469,21),(28462,9470,36),(28463,9470,5),(28464,9471,6),(28465,9472,34),(28466,9472,149),(28467,9472,35),(28468,9472,21),(28469,9472,7),(28470,9472,5),(28471,9473,147),(28472,9473,149),(28473,9473,50),(28474,9473,5),(28475,9474,34),(28476,9474,149),(28477,9474,50),(28478,9474,5),(28479,9475,34),(28480,9475,147),(28481,9475,8),(28482,9475,101),(28483,9475,5),(28484,9475,60),(28485,9476,36),(28486,9476,7),(28487,9476,5),(28488,9477,7),(28489,9477,5),(28490,9477,30),(28491,9478,36),(28492,9478,4),(28493,9478,152),(28494,9478,5),(28495,9479,36),(28496,9479,4),(28497,9479,152),(28498,9479,5),(28499,9480,36),(28500,9480,4),(28501,9480,101),(28502,9480,5),(28503,9480,160),(28504,9481,5),(28505,9481,30),(28506,9482,149),(28507,9482,5),(28508,9482,30),(28509,9483,5),(28510,9484,147),(28511,9484,101),(28512,9484,5),(28513,9484,30),(28514,9485,149),(28515,9485,7),(28516,9485,101),(28517,9486,5),(28518,9486,11),(28519,9487,10),(28520,9487,147),(28521,9487,150),(28522,9488,4),(28523,9488,5),(28524,9489,4),(28525,9489,5),(28526,9490,147),(28527,9490,36),(28528,9490,4),(28529,9490,21),(28530,9490,5),(28531,9490,60),(28532,9490,12),(28533,9491,149),(28534,9491,21),(28535,9491,7),(28536,9491,47),(28537,9491,6),(28538,9492,150),(28539,9492,7),(28540,9492,6),(28541,9493,10),(28542,9493,149),(28543,9493,150),(28544,9493,4),(28545,9493,7),(28546,9493,101),(28547,9494,10),(28548,9494,7),(28549,9494,101),(28550,9494,6),(28551,9494,15),(28552,9495,7),(28553,9495,6),(28554,9496,4),(28555,9496,101),(28556,9496,2),(28557,9497,36),(28558,9497,40),(28559,9497,7),(28560,9497,5),(28561,9498,10),(28562,9498,7),(28563,9498,5),(28564,9498,160),(28565,9499,10),(28566,9499,4),(28567,9499,5),(28568,9499,30),(28569,9500,150),(28570,9500,3),(28571,9500,101),(28572,9500,11),(28573,9500,2),(28574,9501,149),(28575,9501,5),(28576,9501,30),(28577,9502,10),(28578,9502,150),(28579,9502,5),(28580,9502,15),(28581,9503,7),(28582,9503,5),(28583,9504,147),(28584,9504,4),(28585,9504,7),(28586,9505,149),(28587,9505,8),(28588,9505,95),(28589,9505,21),(28590,9505,7),(28591,9505,5),(28592,9506,10),(28593,9506,150),(28594,9506,7),(28595,9506,3),(28596,9506,159),(28597,9506,2),(28598,9506,15),(28599,9507,10),(28600,9507,147),(28601,9507,4),(28602,9507,7),(28603,9507,3),(28604,9507,101),(28605,9507,159),(28606,9507,2),(28607,9507,15),(28608,9508,154),(28609,9508,5),(28610,9508,30),(28611,9509,149),(28612,9509,7),(28613,9509,101),(28614,9509,5),(28615,9510,149),(28616,9510,7),(28617,9510,5),(28618,9511,7),(28619,9511,5),(28620,9512,148),(28621,9512,36),(28622,9512,149),(28623,9512,152),(28624,9512,154),(28625,9512,40),(28626,9512,5),(28627,9512,157),(28628,9512,159),(28629,9513,36),(28630,9513,21),(28631,9513,5),(28632,9513,47),(28633,9514,150),(28634,9514,7),(28635,9514,101),(28636,9515,150),(28637,9515,4),(28638,9515,3),(28639,9515,30),(28640,9516,147),(28641,9516,149),(28642,9516,2),(28643,9517,147),(28644,9517,149),(28645,9518,10),(28646,9518,147),(28647,9518,150),(28648,9518,3),(28649,9518,101),(28650,9518,2),(28651,9519,10),(28652,9519,150),(28653,9519,4),(28654,9519,7),(28655,9519,50),(28656,9519,12),(28657,9520,150),(28658,9520,8),(28659,9520,4),(28660,9520,101),(28661,9520,12),(28662,9521,10),(28663,9521,4),(28664,9521,7),(28665,9521,101),(28666,9521,2),(28667,9521,15),(28668,9522,147),(28669,9522,7),(28670,9522,5),(28671,9522,30),(28672,9522,6),(28673,9523,147),(28674,9523,101),(28675,9524,149),(28676,9524,4),(28677,9524,21),(28678,9524,50),(28679,9524,6),(28680,9524,12),(28681,9525,150),(28682,9525,4),(28683,9525,40),(28684,9525,6),(28685,9526,8),(28686,9526,4),(28687,9526,21),(28688,9526,7),(28689,9527,8),(28690,9527,21),(28691,9527,7),(28692,9528,21),(28693,9528,7),(28694,9528,50),(28695,9528,47),(28696,9529,149),(28697,9529,50),(28698,9529,12),(28699,9530,36),(28700,9530,4),(28701,9530,95),(28702,9530,21),(28703,9530,5),(28704,9531,7),(28705,9531,101),(28706,9531,5),(28707,9532,147),(28708,9532,101),(28709,9533,145),(28710,9534,145),(28711,9534,149),(28712,9534,8),(28713,9534,153),(28714,9534,155),(28715,9534,21),(28716,9535,145),(28717,9535,34),(28718,9535,150),(28719,9535,4),(28720,9536,145),(28721,9536,149),(28722,9536,8),(28723,9536,21),(28724,9537,145),(28725,9537,10),(28726,9537,7),(28727,9538,145),(28728,9538,10),(28729,9538,150),(28730,9538,7),(28731,9539,145),(28732,9539,3),(28733,9540,145),(28734,9540,150),(28735,9540,101),(28736,9541,145),(28737,9541,101),(28738,9542,145),(28739,9542,101),(28740,9542,5),(28741,9543,145),(28742,9543,2),(28743,9544,145),(28744,9545,145),(28745,9545,6),(28746,9546,145),(28747,9546,101),(28748,9547,145),(28749,9547,5),(28750,9548,145),(28751,9549,145),(28752,9549,10),(28753,9550,145),(28754,9550,145),(28755,9550,147),(28756,9551,145),(28757,9552,145),(28758,9552,145),(28759,9553,145),(28760,9553,149),(28761,9553,4),(28762,9554,145),(28763,9555,145),(28764,9555,145),(28765,9556,145),(28766,9556,101),(28767,9557,150),(28768,9557,4),(28769,9558,149),(28770,9559,34),(28771,9559,36),(28772,9559,4),(28773,9559,5),(28774,9559,60),(28775,9560,149),(28776,9560,7),(28777,9560,2),(28778,9561,149),(28779,9561,153),(28780,9561,21),(28781,9561,7),(28782,9561,5),(28783,9562,10),(28784,9562,147),(28785,9562,7),(28786,9562,6),(28787,9563,149),(28788,9563,101),(28789,9564,7),(28790,9564,5),(28791,9565,7),(28792,9565,5),(28793,9565,6),(28794,9566,149),(28795,9566,7),(28796,9566,5),(28797,9567,36),(28798,9567,152),(28799,9567,5),(28800,9568,36),(28801,9568,4),(28802,9568,12),(28803,9569,149),(28804,9569,21),(28805,9569,47),(28806,9570,150),(28807,9570,8),(28808,9570,7),(28809,9570,12),(28810,9571,36),(28811,9571,4),(28812,9571,5),(28813,9572,8),(28814,9572,35),(28815,9572,4),(28816,9572,7),(28817,9572,12),(28818,9573,10),(28819,9573,150),(28820,9573,35),(28821,9573,4),(28822,9574,36),(28823,9574,8),(28824,9574,101),(28825,9574,5),(28826,9574,12),(28827,9575,3),(28828,9575,101),(28829,9575,5),(28830,9576,149),(28831,9576,154),(28832,9577,149),(28833,9577,154),(28834,9578,34),(28835,9579,149),(28836,9579,50),(28837,9579,60),(28838,9580,36),(28839,9580,149),(28840,9580,5),(28841,9581,147),(28842,9581,149),(28843,9581,150),(28844,9581,5),(28845,9581,2),(28846,9582,150),(28847,9582,7),(28848,9583,147),(28849,9583,150),(28850,9583,4),(28851,9583,7),(28852,9584,4),(28853,9584,5),(28854,9584,30),(28855,9585,149),(28856,9585,6),(28857,9586,147),(28858,9586,4),(28859,9586,153),(28860,9586,155),(28861,9587,36),(28862,9587,4),(28863,9587,5),(28864,9587,60),(28865,9587,15),(28866,9588,4),(28867,9588,153),(28868,9588,155),(28869,9588,7),(28870,9589,150),(28871,9589,7),(28872,9589,101),(28873,9589,6),(28874,9590,149),(28875,9590,7),(28876,9591,5),(28877,9591,30),(28878,9592,150),(28879,9592,4),(28880,9593,150),(28881,9593,35),(28882,9594,34),(28883,9594,4),(28884,9595,36),(28885,9595,4),(28886,9595,5),(28887,9595,60),(28888,9596,34),(28889,9596,147),(28890,9596,4),(28891,9596,60),(28892,9597,147),(28893,9597,150),(28894,9597,7),(28895,9597,101),(28896,9597,12),(28897,9598,149),(28898,9599,101),(28899,9600,10),(28900,9600,149),(28901,9600,4),(28902,9600,7),(28903,9601,149),(28904,9601,150),(28905,9601,8),(28906,9601,4),(28907,9601,95),(28908,9601,7),(28909,9601,101),(28910,9601,12),(28911,9602,149),(28912,9602,50),(28913,9603,149),(28914,9603,5),(28915,9603,30),(28916,9604,149),(28917,9604,5),(28918,9604,30),(28919,9605,147),(28920,9605,8),(28921,9605,21),(28922,9605,7),(28923,9605,101),(28924,9605,47),(28925,9606,10),(28926,9606,149),(28927,9606,150),(28928,9606,50),(28929,9607,10),(28930,9607,50),(28931,9608,7),(28932,9608,5),(28933,9609,150),(28934,9609,3),(28935,9609,5),(28936,9610,149),(28937,9611,147),(28938,9611,5),(28939,9611,30),(28940,9612,147),(28941,9612,101),(28942,9613,34),(28943,9613,147),(28944,9613,8),(28945,9613,4),(28946,9613,153),(28947,9614,149),(28948,9614,8),(28949,9614,40),(28950,9614,21),(28951,9614,6),(28952,9614,12),(28953,9615,147),(28954,9615,4),(28955,9615,101),(28956,9615,5),(28957,9615,15),(28958,9616,147),(28959,9616,150),(28960,9616,7),(28961,9616,30),(28962,9616,6),(28963,9617,4),(28964,9617,5),(28965,9618,5),(28966,9619,4),(28967,9619,40),(28968,9620,149),(28969,9620,153),(28970,9620,21),(28971,9621,36),(28972,9621,4),(28973,9621,12),(28974,9622,10),(28975,9622,150),(28976,9622,101),(28977,9622,15),(28978,9623,4),(28979,9623,21),(28980,9623,47),(28981,9624,149),(28982,9624,8),(28983,9624,7),(28984,9624,101),(28985,9625,149),(28986,9625,7),(28987,9625,6),(28988,9626,7),(28989,9626,5),(28990,9627,36),(28991,9627,4),(28992,9627,5),(28993,9628,10),(28994,9628,150),(28995,9628,4),(28996,9628,21),(28997,9628,30),(28998,9628,15),(28999,9629,34),(29000,9629,149),(29001,9629,4),(29002,9629,5),(29003,9630,34),(29004,9630,147),(29005,9630,4),(29006,9630,7),(29007,9631,7),(29008,9632,10),(29009,9632,150),(29010,9632,6),(29011,9633,34),(29012,9633,147),(29013,9633,150),(29014,9633,6),(29015,9634,8),(29016,9634,21),(29017,9634,5),(29018,9634,30),(29019,9635,149),(29020,9635,8),(29021,9635,95),(29022,9635,21),(29023,9635,7),(29024,9635,12),(29025,9636,36),(29026,9636,4),(29027,9636,5),(29028,9637,7),(29029,9637,6),(29030,9637,15),(29031,9638,149),(29032,9638,150),(29033,9638,7),(29034,9639,147),(29035,9639,40),(29036,9639,5),(29037,9639,30),(29038,9640,149),(29039,9640,7),(29040,9640,5),(29041,9641,10),(29042,9641,21),(29043,9641,50),(29044,9641,6),(29045,9641,15),(29046,9642,10),(29047,9642,150),(29048,9642,7),(29049,9642,101),(29050,9642,6),(29051,9643,7),(29052,9643,30),(29053,9644,34),(29054,9644,36),(29055,9644,5),(29056,9645,5),(29057,9645,30),(29058,9646,147),(29059,9646,149),(29060,9646,150),(29061,9646,6),(29062,9647,36),(29063,9647,149),(29064,9647,5),(29065,9647,6),(29066,9648,149),(29067,9648,95),(29068,9648,21),(29069,9648,7),(29070,9648,30),(29071,9648,6),(29072,9649,4),(29073,9649,11),(29074,9650,34),(29075,9650,36),(29076,9650,149),(29077,9650,5),(29078,9651,149),(29079,9651,101),(29080,9652,147),(29081,9652,4),(29082,9652,5),(29083,9652,30),(29084,9653,147),(29085,9653,4),(29086,9653,7),(29087,9653,101),(29088,9654,147),(29089,9654,7),(29090,9654,5),(29091,9655,149),(29092,9655,150),(29093,9655,7),(29094,9656,149),(29095,9656,101),(29096,9656,2),(29097,9657,101),(29098,9658,147),(29099,9658,101),(29100,9659,34),(29101,9659,147),(29102,9659,150),(29103,9659,4),(29104,9659,154),(29105,9659,15),(29106,9660,147),(29107,9660,150),(29108,9660,4),(29109,9660,11),(29110,9660,159),(29111,9660,2),(29112,9661,36),(29113,9661,4),(29114,9661,7),(29115,9661,5),(29116,9662,147),(29117,9662,149),(29118,9662,21),(29119,9662,7),(29120,9662,2),(29121,9663,147),(29122,9663,150),(29123,9663,101),(29124,9663,12),(29125,9664,149),(29126,9664,5),(29127,9664,30),(29128,9665,7),(29129,9666,147),(29130,9666,21),(29131,9666,101),(29132,9667,149),(29133,9667,5),(29134,9668,7),(29135,9668,50),(29136,9668,5),(29137,9668,60),(29138,9669,4),(29139,9673,4),(29140,9673,5),(29141,9673,30),(29142,9674,8),(29143,9674,155),(29144,9674,21),(29145,9675,153),(29146,9675,155),(29147,9675,21),(29148,9677,4),(29149,9677,7),(29150,9678,7),(29151,9679,149),(29152,9680,147),(29153,9680,150),(29154,9681,147),(29155,9681,149),(29156,9681,150),(29157,9681,8),(29158,9681,6),(29159,9681,12),(29160,9682,149),(29161,9682,40),(29162,9682,6),(29163,9683,34),(29164,9683,147),(29165,9683,150),(29166,9683,8),(29167,9683,95),(29168,9683,21),(29169,9683,7),(29170,9683,12),(29171,9684,10),(29172,9684,36),(29173,9684,149),(29174,9684,101),(29175,9685,149),(29176,9685,7),(29177,9685,101),(29178,9685,2),(29179,9685,15),(29180,9686,147),(29181,9686,150),(29182,9686,4),(29183,9686,7),(29184,9686,2),(29185,9687,149),(29186,9687,21),(29187,9687,5),(29188,9687,47),(29189,9687,6),(29190,9688,149),(29191,9688,101),(29192,9689,149),(29193,9689,150),(29194,9689,7),(29195,9690,147),(29196,9690,101),(29197,9690,2),(29198,9691,7),(29199,9691,101),(29200,9692,5),(29201,9693,145),(29202,9694,145),(29203,9695,145),(29204,9695,101),(29205,9696,145),(29206,9696,5),(29207,9697,145),(29208,9697,7),(29209,9697,101),(29210,9697,47),(29211,9698,145),(29212,9698,30),(29213,9699,145),(29214,9699,101),(29215,9700,145),(29216,9700,101),(29217,9700,30),(29218,9701,145),(29219,9701,101),(29220,9701,50),(29221,9702,149),(29222,9702,7),(29223,9702,101),(29224,9702,5),(29225,9703,149),(29226,9703,2),(29227,9704,149),(29228,9704,150),(29229,9704,35),(29230,9704,40),(29231,9704,21),(29232,9704,101),(29233,9705,36),(29234,9705,4),(29235,9705,5),(29236,9706,146),(29237,9706,149),(29238,9706,150),(29239,9706,7),(29240,9706,6),(29241,9706,15),(29242,9707,10),(29243,9707,150),(29244,9707,4),(29245,9707,7),(29246,9707,47),(29247,9707,6),(29248,9707,15),(29249,9708,149),(29250,9708,154),(29251,9708,50),(29252,9709,149),(29253,9709,7),(29254,9710,4),(29255,9710,101),(29256,9710,6),(29257,9711,101),(29258,9712,4),(29259,9713,10),(29260,9713,150),(29261,9714,150),(29262,9714,6),(29263,9714,15),(29264,9715,34),(29265,9715,147),(29266,9715,149),(29267,9715,7),(29268,9715,15),(29269,9716,10),(29270,9716,147),(29271,9716,148),(29272,9716,5),(29273,9716,30),(29274,9717,147),(29275,9717,3),(29276,9717,101),(29277,9717,5),(29278,9718,150),(29279,9718,21),(29280,9718,50),(29281,9719,36),(29282,9719,8),(29283,9719,4),(29284,9719,12),(29285,9720,36),(29286,9720,4),(29287,9720,5),(29288,9720,2),(29289,9721,4),(29290,9721,5),(29291,9721,30),(29292,9722,147),(29293,9722,150),(29294,9722,7),(29295,9722,5),(29296,9723,147),(29297,9723,4),(29298,9723,7),(29299,9723,101),(29300,9724,36),(29301,9724,149),(29302,9724,5),(29303,9725,34),(29304,9725,150),(29305,9725,8),(29306,9725,4),(29307,9725,154),(29308,9725,5),(29309,9725,12),(29310,9726,147),(29311,9726,21),(29312,9726,7),(29313,9726,50),(29314,9726,6),(29315,9727,8),(29316,9727,4),(29317,9727,21),(29318,9727,101),(29319,9728,147),(29320,9728,150),(29321,9728,4),(29322,9729,10),(29323,9729,34),(29324,9729,150),(29325,9729,7),(29326,9730,147),(29327,9730,5),(29328,9731,150),(29329,9731,4),(29330,9731,7),(29331,9731,5),(29332,9731,30),(29333,9731,15),(29334,9732,150),(29335,9732,4),(29336,9732,7),(29337,9732,5),(29338,9732,30),(29339,9732,15),(29340,9733,34),(29341,9733,4),(29342,9733,21),(29343,9733,30),(29344,9734,149),(29345,9734,5),(29346,9735,149),(29347,9735,5),(29348,9736,149),(29349,9736,7),(29350,9736,5),(29351,9737,147),(29352,9737,150),(29353,9737,7),(29354,9737,6),(29355,9738,5),(29356,9739,147),(29357,9739,149),(29358,9739,7),(29359,9739,2),(29360,9740,149),(29361,9740,150),(29362,9740,4),(29363,9740,21),(29364,9740,12),(29365,9741,147),(29366,9741,150),(29367,9741,7),(29368,9741,101),(29369,9742,36),(29370,9742,8),(29371,9742,21),(29372,9742,5),(29373,9742,47),(29374,9742,12),(29375,9743,149),(29376,9743,21),(29377,9744,154),(29378,9744,7),(29379,9745,40),(29380,9745,7),(29381,9745,5),(29382,9745,6),(29383,9746,147),(29384,9746,149),(29385,9746,8),(29386,9746,21),(29387,9746,101),(29388,9747,149),(29389,9747,150),(29390,9747,21),(29391,9747,3),(29392,9748,149),(29393,9748,150),(29394,9748,8),(29395,9748,35),(29396,9748,95),(29397,9748,7),(29398,9748,6),(29399,9748,12),(29400,9749,10),(29401,9749,4),(29402,9749,7),(29403,9749,101),(29404,9749,15),(29405,9750,34),(29406,9750,147),(29407,9750,7),(29408,9750,101),(29409,9751,34),(29410,9751,147),(29411,9751,101),(29412,9752,34),(29413,9752,50),(29414,9752,30),(29415,9753,34),(29416,9753,149),(29417,9753,7),(29418,9753,5),(29419,9753,2),(29420,9753,15),(29421,9754,147),(29422,9754,150),(29423,9754,3),(29424,9754,101),(29425,9754,5),(29426,9754,30),(29427,9754,6),(29428,9754,15),(29429,9755,10),(29430,9755,147),(29431,9755,149),(29432,9755,7),(29433,9755,2),(29434,9756,147),(29435,9756,101),(29436,9757,149),(29437,9757,7),(29438,9758,147),(29439,9758,149),(29440,9758,8),(29441,9758,7),(29442,9758,101),(29443,9759,34),(29444,9759,149),(29445,9759,7),(29446,9759,5),(29447,9760,10),(29448,9760,150),(29449,9760,4),(29450,9760,7),(29451,9760,15),(29452,9761,150),(29453,9761,7),(29454,9761,5),(29455,9762,5),(29456,9763,147),(29457,9763,150),(29458,9764,150),(29459,9764,12),(29460,9765,149),(29461,9765,21),(29462,9765,5),(29463,9766,10),(29464,9766,149),(29465,9766,50),(29466,9767,147),(29467,9767,8),(29468,9767,35),(29469,9767,30),(29470,9767,12),(29471,9768,34),(29472,9768,149),(29473,9768,4),(29474,9768,7),(29475,9768,5),(29476,9769,147),(29477,9769,150),(29478,9769,4),(29479,9769,7),(29480,9769,101),(29481,9770,147),(29482,9770,5),(29483,9771,147),(29484,9771,7),(29485,9771,101),(29486,9772,10),(29487,9772,150),(29488,9772,5),(29489,9773,10),(29490,9773,150),(29491,9773,7),(29492,9773,5),(29493,9773,6),(29494,9774,10),(29495,9774,150),(29496,9774,7),(29497,9775,8),(29498,9775,35),(29499,9775,101),(29500,9776,10),(29501,9776,147),(29502,9776,147),(29503,9776,5),(29504,9777,147),(29505,9777,149),(29506,9777,5),(29507,9778,7),(29508,9778,5),(29509,9779,145),(29510,9779,150),(29511,9779,152),(29512,9779,5),(29513,9780,145),(29514,9780,153),(29515,9781,145),(29516,9781,36),(29517,9781,150),(29518,9782,145),(29519,9782,150),(29520,9782,7),(29521,9782,30),(29522,9783,145),(29523,9783,145),(29524,9783,10),(29525,9783,150),(29526,9784,145),(29527,9784,150),(29528,9784,4),(29529,9785,145),(29530,9785,10),(29531,9785,7),(29532,9786,145),(29533,9786,10),(29534,9786,147),(29535,9786,5),(29536,9787,145),(29537,9787,7),(29538,9788,145),(29539,9788,5),(29540,9789,36),(29541,9789,4),(29542,9789,152),(29543,9789,5),(29544,9790,4),(29545,9790,7),(29546,9790,47),(29547,9791,147),(29548,9791,150),(29549,9791,21),(29550,9791,7),(29551,9791,101),(29552,9791,6),(29553,9791,15),(29554,9792,10),(29555,9792,147),(29556,9792,5),(29557,9792,30),(29558,9793,147),(29559,9793,149),(29560,9793,8),(29561,9793,21),(29562,9793,7),(29563,9793,101),(29564,9793,5),(29565,9794,5),(29566,9794,30),(29567,9795,101),(29568,9795,6),(29569,9796,36),(29570,9796,150),(29571,9796,8),(29572,9796,4),(29573,9796,12),(29574,9797,10),(29575,9797,147),(29576,9797,149),(29577,9797,4),(29578,9797,153),(29579,9797,21),(29580,9797,47),(29581,9798,10),(29582,9798,150),(29583,9798,4),(29584,9799,10),(29585,9799,50),(29586,9800,10),(29587,9800,50),(29588,9801,10),(29589,9801,40),(29590,9801,47),(29591,9801,6),(29592,9802,7),(29593,9802,101),(29594,9803,36),(29595,9803,150),(29596,9803,4),(29597,9803,6),(29598,9804,8),(29599,9804,4),(29600,9804,7),(29601,9804,12),(29602,9805,149),(29603,9805,21),(29604,9805,5),(29605,9805,30),(29606,9806,10),(29607,9806,147),(29608,9806,5),(29609,9806,30),(29610,9807,4),(29611,9807,101),(29612,9807,5),(29613,9808,147),(29614,9808,7),(29615,9808,5),(29616,9808,30),(29617,9809,150),(29618,9809,159),(29619,9809,12),(29620,9810,10),(29621,9810,50),(29622,9811,21),(29623,9811,47),(29624,9812,150),(29625,9812,35),(29626,9812,4),(29627,9813,150),(29628,9813,95),(29629,9813,101),(29630,9813,47),(29631,9814,147),(29632,9814,149),(29633,9814,7),(29634,9814,101),(29635,9815,101),(29636,9815,5),(29637,9816,5),(29638,9817,4),(29639,9817,7),(29640,9817,12),(29641,9818,150),(29642,9818,4),(29643,9818,7),(29644,9819,147),(29645,9819,149),(29646,9819,21),(29647,9819,7),(29648,9819,101),(29649,9820,147),(29650,9820,149),(29651,9820,7),(29652,9821,147),(29653,9821,7),(29654,9821,101),(29655,9822,7),(29656,9822,2),(29657,9823,7),(29658,9823,101),(29659,9823,6),(29660,9824,154),(29661,9824,7),(29662,9824,2),(29663,9825,4),(29664,9825,152),(29665,9825,5),(29666,9825,30),(29667,9825,60),(29668,9826,10),(29669,9826,34),(29670,9826,147),(29671,9826,150),(29672,9826,60),(29673,9826,12),(29674,9827,34),(29675,9827,149),(29676,9828,149),(29677,9828,150),(29678,9828,4),(29679,9828,7),(29680,9828,101),(29681,9829,149),(29682,9829,150),(29683,9829,4),(29684,9829,7),(29685,9829,101),(29686,9830,10),(29687,9830,50),(29688,9830,160),(29689,9831,101),(29690,9831,5),(29691,9831,6),(29692,9832,147),(29693,9832,4),(29694,9832,7),(29695,9832,5),(29696,9833,147),(29697,9833,7),(29698,9834,36),(29699,9834,152),(29700,9834,5),(29701,9834,60),(29702,9835,150),(29703,9835,7),(29704,9836,149),(29705,9836,8),(29706,9836,21),(29707,9837,149),(29708,9837,40),(29709,9837,7),(29710,9837,5),(29711,9837,6),(29712,9838,150),(29713,9838,7),(29714,9839,149),(29715,9839,5),(29716,9839,30),(29717,9840,150),(29718,9840,3),(29719,9840,6),(29720,9840,15),(29721,9841,10),(29722,9841,150),(29723,9841,4),(29724,9842,34),(29725,9842,150),(29726,9842,8),(29727,9842,21),(29728,9842,3),(29729,9842,6),(29730,9842,2),(29731,9843,8),(29732,9843,4),(29733,9843,95),(29734,9843,101),(29735,9844,4),(29736,9844,21),(29737,9844,7),(29738,9845,10),(29739,9845,147),(29740,9845,7),(29741,9845,5),(29742,9846,10),(29743,9846,149),(29744,9846,7),(29745,9846,5),(29746,9847,4),(29747,9847,5),(29748,9847,30),(29749,9847,6),(29750,9848,146),(29751,9848,147),(29752,9848,149),(29753,9849,36),(29754,9849,5),(29755,9849,6),(29756,9850,10),(29757,9850,4),(29758,9850,6),(29759,9850,15),(29760,9851,36),(29761,9851,21),(29762,9851,5),(29763,9852,147),(29764,9852,4),(29765,9852,5),(29766,9853,5),(29767,9853,30),(29768,9854,4),(29769,9854,5),(29770,9854,11),(29771,9855,149),(29772,9855,7),(29773,9856,150),(29774,9856,4),(29775,9856,7),(29776,9856,5),(29777,9857,147),(29778,9857,149),(29779,9857,150),(29780,9857,7),(29781,9857,101),(29782,9857,6),(29783,9858,10),(29784,9858,149),(29785,9858,7),(29786,9858,5),(29787,9858,30),(29788,9859,7),(29789,9860,36),(29790,9860,4),(29791,9860,152),(29792,9860,5),(29793,9861,153),(29794,9861,5),(29795,9862,21),(29796,9862,47),(29797,9863,150),(29798,9863,4),(29799,9863,101),(29800,9863,2),(29801,9864,149),(29802,9864,5),(29803,9865,147),(29804,9865,5),(29805,9865,30),(29806,9865,2),(29807,9866,7),(29808,9866,101),(29809,9866,5),(29810,9866,6),(29811,9867,8),(29812,9867,4),(29813,9867,21),(29814,9867,47),(29815,9868,147),(29816,9868,4),(29817,9868,155),(29818,9868,7),(29819,9868,6),(29820,9869,10),(29821,9869,150),(29822,9869,4),(29823,9869,6),(29824,9869,15),(29825,9870,4),(29826,9870,154),(29827,9870,7),(29828,9870,6),(29829,9871,4),(29830,9871,21),(29831,9872,4),(29832,9872,7),(29833,9872,5),(29834,9873,7),(29835,9873,5),(29836,9874,147),(29837,9874,7),(29838,9874,101),(29839,9874,5),(29840,9875,7),(29841,9875,5),(29842,9875,30),(29843,9876,35),(29844,9877,10),(29845,9877,36),(29846,9877,150),(29847,9877,4),(29848,9877,21),(29849,9877,101),(29850,9877,15),(29851,9878,149),(29852,9878,8),(29853,9878,155),(29854,9878,21),(29855,9878,7),(29856,9879,10),(29857,9879,147),(29858,9879,149),(29859,9879,50),(29860,9880,34),(29861,9880,21),(29862,9880,3),(29863,9880,5),(29864,9880,30),(29865,9881,10),(29866,9881,4),(29867,9881,7),(29868,9881,6),(29869,9881,15),(29870,9882,10),(29871,9882,150),(29872,9882,7),(29873,9883,34),(29874,9883,147),(29875,9883,3),(29876,9883,159),(29877,9883,2),(29878,9883,15),(29879,9884,147),(29880,9884,149),(29881,9884,5),(29882,9884,30),(29883,9885,4),(29884,9885,7),(29885,9885,101),(29886,9885,15),(29887,9886,4),(29888,9886,7),(29889,9887,149),(29890,9887,7),(29891,9888,7),(29892,9888,101),(29893,9889,150),(29894,9889,21),(29895,9889,101),(29896,9890,10),(29897,9890,7),(29898,9890,5),(29899,9890,30),(29900,9891,147),(29901,9891,101),(29902,9892,95),(29903,9892,21),(29904,9892,7),(29905,9893,40),(29906,9893,101),(29907,9893,5),(29908,9894,149),(29909,9894,7),(29910,9894,5),(29911,9895,10),(29912,9895,40),(29913,9896,40),(29914,9896,3),(29915,9896,30),(29916,9897,7),(29917,9898,10),(29918,9898,6),(29919,9899,150),(29920,9899,101),(29921,9900,150),(29922,9900,95),(29923,9901,150),(29924,9901,4),(29925,9901,7),(29926,9902,150),(29927,9902,8),(29928,9902,4),(29929,9902,12),(29930,9903,36),(29931,9903,4),(29932,9903,5),(29933,9904,149),(29934,9904,7),(29935,9905,147),(29936,9905,101),(29937,9906,149),(29938,9906,7),(29939,9906,5),(29940,9907,10),(29941,9907,150),(29942,9907,150),(29943,9907,50),(29944,9908,36),(29945,9908,4),(29946,9908,21),(29947,9908,7),(29948,9908,5),(29949,9909,36),(29950,9909,35),(29951,9909,3),(29952,9909,5),(29953,9909,159),(29954,9909,2),(29955,9910,34),(29956,9910,8),(29957,9910,95),(29958,9910,21),(29959,9910,7),(29960,9910,5),(29961,9910,6),(29962,9911,34),(29963,9911,147),(29964,9911,5),(29965,9912,150),(29966,9912,7),(29967,9912,6),(29968,9912,12),(29969,9913,4),(29970,9913,7),(29971,9913,2),(29972,9914,4),(29973,9914,7),(29974,9915,147),(29975,9915,40),(29976,9915,5),(29977,9916,150),(29978,9916,12),(29979,9917,34),(29980,9917,4),(29981,9917,5),(29982,9918,149),(29983,9918,8),(29984,9918,95),(29985,9918,21),(29986,9918,101),(29987,9918,6),(29988,9918,12),(29989,9919,10),(29990,9919,149),(29991,9919,7),(29992,9919,15),(29993,9920,101),(29994,9921,34),(29995,9921,149),(29996,9921,7),(29997,9922,10),(29998,9922,5),(29999,9923,10),(30000,9923,150),(30001,9923,7),(30002,9924,10),(30003,9924,36),(30004,9924,101),(30005,9924,5),(30006,9924,6),(30007,9924,15),(30008,9925,10),(30009,9925,36),(30010,9925,5),(30011,9925,6),(30012,9925,15),(30013,9926,7),(30014,9926,5),(30015,9926,30),(30016,9927,147),(30017,9927,7),(30018,9927,5),(30019,9928,4),(30020,9928,101),(30021,9928,2),(30022,9929,101),(30023,9929,15),(30024,9930,149),(30025,9930,4),(30026,9930,7),(30027,9931,147),(30028,9931,21),(30029,9931,7),(30030,9931,101),(30031,9931,5),(30032,9932,10),(30033,9932,147),(30034,9932,150),(30035,9932,35),(30036,9932,101),(30037,9932,6),(30038,9933,4),(30039,9933,5),(30040,9933,60),(30041,9934,147),(30042,9934,4),(30043,9934,101),(30044,9935,149),(30045,9935,7),(30046,9936,4),(30047,9936,5),(30048,9937,5),(30049,9937,60),(30050,9938,150),(30051,9938,12),(30052,9939,150),(30053,9939,154),(30054,9940,150),(30055,9940,21),(30056,9940,7),(30057,9941,5),(30058,9941,11),(30059,9942,4),(30060,9943,5),(30061,9943,30),(30062,9944,4),(30063,9944,7),(30064,9945,150),(30065,9945,4),(30066,9946,4),(30067,9946,7),(30068,9947,147),(30069,9947,149),(30070,9947,153),(30071,9947,40),(30072,9947,7),(30073,9947,101),(30074,9947,5),(30075,9947,160),(30076,9948,4),(30077,9948,7),(30078,9948,6),(30079,9949,149),(30080,9949,154),(30081,9949,5),(30082,9950,149),(30083,9950,5),(30084,9951,5),(30085,9951,30),(30086,9952,10),(30087,9952,150),(30088,9952,7),(30089,9952,15),(30090,9953,36),(30091,9953,8),(30092,9953,21),(30093,9953,12),(30094,9954,149),(30095,9954,5),(30096,9954,30),(30097,9955,7),(30098,9955,101),(30099,9956,101),(30100,9957,149),(30101,9957,60),(30102,9958,4),(30103,9959,10),(30104,9959,8),(30105,9959,4),(30106,9959,7),(30107,9959,12),(30108,9960,147),(30109,9960,149),(30110,9960,7),(30111,9960,5),(30112,9960,60),(30113,9961,7),(30114,9961,101),(30115,9962,149),(30116,9962,101),(30117,9963,101),(30118,9964,150),(30119,9964,8),(30120,9964,7),(30121,9964,12),(30122,9965,149),(30123,9965,7),(30124,9966,147),(30125,9966,4),(30126,9966,7),(30127,9966,6),(30128,9966,15),(30129,9967,36),(30130,9967,4),(30131,9967,5),(30132,9968,7),(30133,9969,10),(30134,9969,7),(30135,9969,5),(30136,9969,6),(30137,9970,5),(30138,9971,149),(30139,9971,154),(30140,9972,34),(30141,9972,149),(30142,9972,50),(30143,9972,5),(30144,9973,34),(30145,9973,149),(30146,9973,50),(30147,9973,5),(30148,9974,154),(30149,9974,40),(30150,9974,5),(30151,9975,4),(30152,9975,7),(30153,9975,3),(30154,9975,101),(30155,9975,2),(30156,9976,4),(30157,9976,7),(30158,9976,101),(30159,9976,2),(30160,9977,7),(30161,9977,5),(30162,9978,36),(30163,9978,101),(30164,9978,5),(30165,9979,36),(30166,9979,152),(30167,9979,5),(30168,9980,34),(30169,9980,4),(30170,9980,12),(30171,9981,149),(30172,9981,7),(30173,9982,149),(30174,9982,8),(30175,9982,21),(30176,9982,47),(30177,9983,10),(30178,9983,150),(30179,9983,7),(30180,9983,101),(30181,9983,15),(30182,9984,149),(30183,9984,5),(30184,9985,149),(30185,9985,5),(30186,9986,147),(30187,9986,40),(30188,9986,7),(30189,9987,149),(30190,9987,6),(30191,9988,7),(30192,9988,5),(30193,9989,149),(30194,9989,5),(30195,9990,10),(30196,9990,150),(30197,9990,40),(30198,9991,149),(30199,9991,8),(30200,9992,150),(30201,9992,7),(30202,9992,15),(30203,9993,150),(30204,9993,7),(30205,9994,10),(30206,9994,34),(30207,9994,150),(30208,9994,35),(30209,9994,4),(30210,9994,12),(30211,9995,4),(30212,9995,2),(30213,9996,149),(30214,9996,7),(30215,9996,6),(30216,9997,7),(30217,9997,5),(30218,9998,7),(30219,9998,6),(30220,9999,147),(30221,9999,8),(30222,9999,4),(30223,9999,50),(30224,9999,12),(30225,10000,149),(30226,10000,4),(30227,10000,40),(30228,10001,150),(30229,10001,8),(30230,10001,95),(30231,10001,21),(30232,10002,36),(30233,10002,5),(30234,10002,6),(30235,10003,147),(30236,10003,5),(30237,10003,30),(30238,10004,147),(30239,10004,5),(30240,10004,15),(30241,10005,10),(30242,10005,7),(30243,10005,6),(30244,10006,4),(30245,10006,7),(30246,10006,5),(30247,10006,6),(30248,10007,149),(30249,10007,5),(30250,10008,154),(30251,10008,50),(30252,10009,10),(30253,10009,149),(30254,10009,8),(30255,10009,4),(30256,10009,7),(30257,10009,12),(30258,10010,150),(30259,10010,35),(30260,10010,4),(30261,10010,7),(30262,10011,8),(30263,10011,21),(30264,10011,7),(30265,10011,47),(30266,10012,36),(30267,10012,150),(30268,10012,95),(30269,10012,7),(30270,10012,101),(30271,10013,149),(30272,10013,4),(30273,10013,7),(30274,10014,7),(30275,10014,5),(30276,10015,101),(30277,10015,5),(30278,10016,34),(30279,10016,150),(30280,10016,154),(30281,10016,12),(30282,10017,36),(30283,10017,4),(30284,10017,152),(30285,10018,10),(30286,10018,150),(30287,10018,35),(30288,10018,7),(30289,10018,101),(30290,10019,149),(30291,10019,150),(30292,10019,21),(30293,10020,149),(30294,10020,21),(30295,10020,7),(30296,10020,101),(30297,10021,149),(30298,10021,101),(30299,10022,50),(30300,10022,60),(30301,10022,12),(30302,10023,10),(30303,10023,34),(30304,10023,147),(30305,10023,149),(30306,10023,35),(30307,10023,15),(30308,10024,34),(30309,10024,149),(30310,10024,5),(30311,10025,146),(30312,10025,148),(30313,10025,149),(30314,10025,152),(30315,10025,153),(30316,10026,149),(30317,10026,150),(30318,10026,7),(30319,10026,6),(30320,10027,149),(30321,10027,101),(30322,10028,150),(30323,10028,159),(30324,10028,2),(30325,10028,12),(30326,10029,36),(30327,10029,4),(30328,10029,5),(30329,10029,15),(30330,10030,10),(30331,10030,149),(30332,10030,150),(30333,10030,4),(30334,10030,101),(30335,10031,21),(30336,10031,7),(30337,10031,47),(30338,10031,12),(30339,10032,4),(30340,10032,153),(30341,10032,155),(30342,10032,7),(30343,10032,5),(30344,10032,6),(30345,10033,149),(30346,10033,7),(30347,10034,147),(30348,10034,149),(30349,10034,7),(30350,10034,5),(30351,10035,36),(30352,10035,5),(30353,10035,30),(30354,10036,10),(30355,10036,150),(30356,10036,15),(30357,10037,10),(30358,10037,8),(30359,10037,21),(30360,10037,7),(30361,10037,12),(30362,10038,10),(30363,10038,36),(30364,10039,149),(30365,10039,5),(30366,10040,5),(30367,10041,95),(30368,10041,154),(30369,10042,147),(30370,10042,21),(30371,10042,47),(30372,10043,4),(30373,10044,36),(30374,10044,5),(30375,10045,149),(30376,10045,8),(30377,10046,149),(30378,10046,7),(30379,10047,7),(30380,10047,101),(30381,10048,101),(30382,10048,5),(30383,10049,145),(30384,10049,4),(30385,10050,145),(30386,10050,2),(30387,10051,145),(30388,10051,147),(30389,10051,7),(30390,10051,15),(30391,10052,145),(30392,10052,4),(30393,10052,154),(30394,10052,7),(30395,10053,145),(30396,10053,10),(30397,10053,7),(30398,10054,145),(30399,10055,145),(30400,10055,7),(30401,10056,145),(30402,10056,101),(30403,10057,145),(30404,10057,101),(30405,10057,15),(30406,10058,145),(30407,10059,34),(30408,10059,8),(30409,10059,4),(30410,10059,153),(30411,10059,21),(30412,10059,5),(30413,10060,4),(30414,10060,7),(30415,10061,150),(30416,10061,7),(30417,10061,2),(30418,10062,10),(30419,10062,150),(30420,10062,7),(30421,10062,15),(30422,10063,149),(30423,10063,150),(30424,10063,7),(30425,10063,101),(30426,10063,5),(30427,10064,7),(30428,10064,101),(30429,10064,6),(30430,10065,147),(30431,10065,149),(30432,10065,5),(30433,10066,10),(30434,10066,50),(30435,10067,4),(30436,10067,7),(30437,10068,4),(30438,10068,7),(30439,10069,10),(30440,10069,150),(30441,10069,35),(30442,10069,4),(30443,10069,15),(30444,10070,10),(30445,10070,150),(30446,10070,7),(30447,10070,5),(30448,10070,6),(30449,10071,149),(30450,10071,7),(30451,10071,101),(30452,10072,147),(30453,10072,150),(30454,10072,7),(30455,10072,2),(30456,10073,21),(30457,10073,101),(30458,10074,5),(30459,10075,10),(30460,10075,154),(30461,10075,40),(30462,10075,160),(30463,10076,153),(30464,10076,21),(30465,10077,150),(30466,10077,7),(30467,10077,12),(30468,10078,34),(30469,10078,149),(30470,10078,5),(30471,10078,11),(30472,10078,30),(30473,10079,149),(30474,10079,101),(30475,10080,4),(30476,10081,7),(30477,10081,101),(30478,10081,6),(30479,10082,5),(30480,10082,6),(30481,10083,36),(30482,10083,4),(30483,10083,2),(30484,10084,147),(30485,10084,149),(30486,10084,153),(30487,10084,7),(30488,10084,5),(30489,10085,149),(30490,10085,150),(30491,10085,7),(30492,10085,6),(30493,10086,10),(30494,10086,149),(30495,10086,5),(30496,10087,101),(30497,10088,101),(30498,10088,5),(30499,10089,150),(30500,10090,149),(30501,10091,50),(30502,10092,7),(30503,10092,101),(30504,10093,36),(30505,10093,4),(30506,10093,5),(30507,10094,5),(30508,10095,35),(30509,10095,4),(30510,10096,154),(30511,10096,7),(30512,10097,21),(30513,10097,6),(30514,10098,150),(30515,10098,6),(30516,10100,50),(30517,10101,157),(30518,10102,10),(30519,10102,5),(30520,10102,30),(30521,10102,15),(30522,10103,34),(30523,10103,149),(30524,10103,4),(30525,10103,5),(30526,10104,34),(30527,10105,150),(30528,10105,35),(30529,10105,95),(30530,10105,21),(30531,10106,150),(30532,10107,5),(30533,10108,40),(30534,10110,35),(30535,10110,21),(30536,10110,12),(30537,10111,10),(30538,10111,153),(30539,10111,155),(30540,10111,21),(30541,10113,150),(30542,10113,5),(30543,10113,30),(30544,10114,4),(30545,10114,7),(30546,10114,101),(30547,10114,2),(30548,10115,21),(30549,10115,47),(30550,10115,6),(30551,10116,36),(30552,10116,4),(30553,10116,5),(30554,10117,7),(30555,10117,101),(30556,10117,5),(30557,10118,40),(30558,10118,5),(30559,10119,147),(30560,10119,4),(30561,10119,101),(30562,10120,147),(30563,10120,149),(30564,10120,7),(30565,10120,101),(30566,10120,5),(30567,10120,47),(30568,10121,149),(30569,10121,2),(30570,10122,149),(30571,10122,101),(30572,10123,34),(30573,10123,7),(30574,10123,5),(30575,10124,4),(30576,10124,7),(30577,10125,36),(30578,10125,150),(30579,10125,6),(30580,10126,150),(30581,10126,35),(30582,10126,4),(30583,10126,7),(30584,10126,101),(30585,10127,149),(30586,10127,4),(30587,10127,7),(30588,10128,34),(30589,10128,5),(30590,10129,5),(30591,10129,6),(30592,10130,10),(30593,10130,150),(30594,10130,8),(30595,10130,95),(30596,10130,21),(30597,10130,101),(30598,10131,149),(30599,10131,101),(30600,10131,5),(30601,10131,30),(30602,10132,10),(30603,10132,147),(30604,10132,149),(30605,10132,7),(30606,10132,6),(30607,10132,15),(30608,10133,10),(30609,10133,149),(30610,10133,7),(30611,10133,6),(30612,10134,7),(30613,10134,101),(30614,10134,5),(30615,10135,147),(30616,10135,149),(30617,10135,7),(30618,10135,101),(30619,10135,5),(30620,10136,154),(30621,10136,7),(30622,10136,101),(30623,10137,150),(30624,10137,35),(30625,10137,3),(30626,10137,15),(30627,10138,150),(30628,10138,5),(30629,10138,30),(30630,10138,15),(30631,10139,10),(30632,10139,36),(30633,10139,60),(30634,10140,150),(30635,10140,101),(30636,10141,4),(30637,10141,21),(30638,10141,7),(30639,10141,47),(30640,10142,7),(30641,10142,6),(30642,10143,5),(30643,10144,7),(30644,10144,5),(30645,10144,6),(30646,10145,7),(30647,10145,5),(30648,10146,153),(30649,10146,155),(30650,10146,7),(30651,10146,101),(30652,10147,10),(30653,10147,150),(30654,10147,4),(30655,10147,7),(30656,10148,150),(30657,10148,95),(30658,10148,21),(30659,10148,101),(30660,10148,12),(30661,10149,34),(30662,10149,150),(30663,10149,35),(30664,10149,4),(30665,10149,7),(30666,10149,5),(30667,10149,6),(30668,10149,2),(30669,10149,12),(30670,10150,149),(30671,10150,7),(30672,10150,5),(30673,10151,10),(30674,10151,150),(30675,10151,101),(30676,10151,15),(30677,10152,4),(30678,10153,149),(30679,10153,7),(30680,10153,5),(30681,10154,34),(30682,10154,147),(30683,10154,149),(30684,10155,147),(30685,10155,4),(30686,10155,101),(30687,10156,147),(30688,10156,147),(30689,10156,7),(30690,10157,147),(30691,10157,5),(30692,10158,150),(30693,10158,12),(30694,10159,7),(30695,10159,5),(30696,10159,160),(30697,10160,150),(30698,10160,7),(30699,10160,101),(30700,10161,10),(30701,10161,147),(30702,10161,4),(30703,10161,101),(30704,10161,6),(30705,10161,15),(30706,10162,101),(30707,10163,149),(30708,10163,5),(30709,10164,34),(30710,10164,154),(30711,10164,5),(30712,10164,11),(30713,10165,7),(30714,10165,5),(30715,10166,34),(30716,10166,7),(30717,10166,5),(30718,10166,2),(30719,10167,147),(30720,10167,7),(30721,10167,101),(30722,10167,2),(30723,10168,8),(30724,10168,95),(30725,10168,21),(30726,10169,147),(30727,10169,30),(30728,10170,101),(30729,10171,4),(30730,10171,2),(30731,10172,10),(30732,10172,4),(30733,10172,6),(30734,10172,15),(30735,10173,7),(30736,10173,5),(30737,10174,147),(30738,10174,5),(30739,10174,30),(30740,10175,147),(30741,10175,7),(30742,10175,5),(30743,10176,7),(30744,10176,5),(30745,10177,4),(30746,10177,5),(30747,10178,10),(30748,10178,150),(30749,10178,153),(30750,10178,7),(30751,10179,36),(30752,10179,4),(30753,10179,95),(30754,10179,152),(30755,10179,21),(30756,10179,12),(30757,10180,149),(30758,10180,35),(30759,10181,150),(30760,10181,95),(30761,10181,21),(30762,10181,7),(30763,10181,6),(30764,10181,12),(30765,10182,10),(30766,10182,147),(30767,10182,150),(30768,10182,4),(30769,10182,101),(30770,10182,6),(30771,10182,15),(30772,10183,10),(30773,10183,4),(30774,10183,101),(30775,10183,5),(30776,10183,15),(30777,10184,149),(30778,10184,7),(30779,10184,5),(30780,10185,149),(30781,10186,149),(30782,10186,8),(30783,10186,4),(30784,10186,21),(30785,10186,7),(30786,10186,47),(30787,10187,150),(30788,10187,4),(30789,10187,21),(30790,10188,149),(30791,10188,50),(30792,10188,5),(30793,10188,15),(30794,10189,147),(30795,10189,7),(30796,10189,5),(30797,10189,30),(30798,10190,149),(30799,10190,5),(30800,10191,50),(30801,10191,5),(30802,10191,30),(30803,10192,149),(30804,10192,150),(30805,10192,7),(30806,10192,5),(30807,10193,149),(30808,10193,8),(30809,10193,21),(30810,10193,12),(30811,10194,147),(30812,10194,4),(30813,10194,7),(30814,10194,101),(30815,10194,6),(30816,10195,7),(30817,10195,101),(30818,10195,5),(30819,10196,149),(30820,10196,101),(30821,10197,149),(30822,10198,153),(30823,10198,155),(30824,10198,21),(30825,10199,149),(30826,10199,8),(30827,10199,50),(30828,10199,5),(30829,10199,30),(30830,10200,10),(30831,10200,149),(30832,10200,150),(30833,10200,7),(30834,10200,15),(30835,10201,8),(30836,10201,4),(30837,10201,154),(30838,10201,12),(30839,10202,101),(30840,10202,2),(30841,10203,145),(30842,10203,36),(30843,10203,4),(30844,10203,101),(30845,10203,5),(30846,10204,145),(30847,10204,150),(30848,10204,8),(30849,10204,21),(30850,10204,12),(30851,10205,145),(30852,10205,146),(30853,10205,10),(30854,10205,150),(30855,10205,21),(30856,10205,50),(30857,10205,6),(30858,10205,15),(30859,10206,145),(30860,10206,36),(30861,10206,8),(30862,10206,4),(30863,10206,154),(30864,10206,21),(30865,10206,11),(30866,10206,12),(30867,10207,145),(30868,10207,40),(30869,10207,6),(30870,10208,145),(30871,10208,150),(30872,10208,95),(30873,10208,101),(30874,10208,5),(30875,10208,6),(30876,10209,10),(30877,10209,34),(30878,10209,150),(30879,10210,150),(30880,10210,40),(30881,10210,101),(30882,10210,6),(30883,10211,8),(30884,10211,4),(30885,10211,7),(30886,10211,101),(30887,10211,5),(30888,10211,30),(30889,10211,6),(30890,10211,12),(30891,10212,149),(30892,10212,5),(30893,10212,30),(30894,10212,6),(30895,10213,149),(30896,10213,7),(30897,10213,5),(30898,10214,149),(30899,10214,5),(30900,10215,34),(30901,10215,147),(30902,10215,36),(30903,10215,4),(30904,10215,95),(30905,10215,5),(30906,10215,15),(30907,10216,147),(30908,10216,8),(30909,10216,4),(30910,10216,159),(30911,10216,2),(30912,10217,150),(30913,10217,35),(30914,10217,4),(30915,10217,7),(30916,10218,147),(30917,10218,36),(30918,10218,150),(30919,10218,5),(30920,10218,15),(30921,10219,146),(30922,10219,147),(30923,10219,149),(30924,10219,7),(30925,10220,147),(30926,10220,7),(30927,10220,5),(30928,10221,149),(30929,10221,2),(30930,10222,150),(30931,10222,4),(30932,10222,21),(30933,10222,6),(30934,10223,10),(30935,10223,8),(30936,10223,7),(30937,10223,6),(30938,10223,12),(30939,10223,15),(30940,10224,150),(30941,10224,8),(30942,10224,7),(30943,10224,12),(30944,10225,149),(30945,10225,150),(30946,10225,7),(30947,10225,101),(30948,10226,147),(30949,10226,7),(30950,10226,15),(30951,10227,7),(30952,10228,7),(30953,10228,6),(30954,10229,34),(30955,10229,152),(30956,10229,5),(30957,10229,30),(30958,10230,10),(30959,10230,150),(30960,10230,4),(30961,10230,7),(30962,10230,15),(30963,10231,10),(30964,10231,150),(30965,10231,7),(30966,10231,101),(30967,10231,5),(30968,10231,6),(30969,10232,4),(30970,10232,7),(30971,10232,6),(30972,10233,150),(30973,10233,4),(30974,10233,5),(30975,10234,154),(30976,10234,7),(30977,10234,6),(30978,10235,40),(30979,10235,5),(30980,10236,147),(30981,10236,5),(30982,10236,30),(30983,10236,6),(30984,10237,7),(30985,10237,2),(30986,10238,149),(30987,10238,8),(30988,10238,12),(30989,10239,150),(30990,10239,6),(30991,10239,15),(30992,10240,4),(30993,10240,7),(30994,10240,101),(30995,10241,147),(30996,10241,149),(30997,10241,154),(30998,10241,7),(30999,10242,149),(31000,10242,7),(31001,10242,30),(31002,10243,34),(31003,10243,147),(31004,10243,4),(31005,10243,7),(31006,10244,149),(31007,10245,147),(31008,10245,5),(31009,10246,2),(31010,10247,4),(31011,10247,7),(31012,10247,6),(31013,10247,12),(31014,10248,10),(31015,10248,40),(31016,10248,160),(31017,10249,147),(31018,10249,8),(31019,10249,21),(31020,10249,3),(31021,10250,4),(31022,10250,7),(31023,10250,6),(31024,10250,15),(31025,10251,4),(31026,10251,3),(31027,10251,101),(31028,10251,159),(31029,10251,2),(31030,10251,15),(31031,10252,4),(31032,10252,3),(31033,10252,101),(31034,10252,159),(31035,10252,2),(31036,10253,8),(31037,10253,4),(31038,10253,101),(31039,10253,47),(31040,10254,149),(31041,10254,7),(31042,10254,5),(31043,10254,6),(31044,10255,149),(31045,10255,150),(31046,10255,7),(31047,10255,101),(31048,10256,7),(31049,10256,5),(31050,10257,152),(31051,10257,21),(31052,10257,5),(31053,10258,36),(31054,10258,4),(31055,10258,5),(31056,10258,60),(31057,10259,34),(31058,10259,8),(31059,10259,4),(31060,10259,5),(31061,10259,47),(31062,10260,10),(31063,10260,149),(31064,10260,150),(31065,10260,7),(31066,10260,5),(31067,10261,34),(31068,10261,149),(31069,10261,50),(31070,10261,5),(31071,10262,4),(31072,10262,7),(31073,10263,7),(31074,10263,101),(31075,10264,101),(31076,10264,5),(31077,10265,7),(31078,10265,5),(31079,10266,149),(31080,10266,8),(31081,10266,21),(31082,10266,7),(31083,10266,12),(31084,10267,34),(31085,10267,147),(31086,10267,149),(31087,10267,4),(31088,10267,7),(31089,10267,101),(31090,10268,36),(31091,10268,4),(31092,10268,21),(31093,10268,5),(31094,10269,147),(31095,10269,7),(31096,10269,101),(31097,10270,149),(31098,10270,5),(31099,10271,8),(31100,10271,4),(31101,10271,21),(31102,10271,12),(31103,10272,150),(31104,10272,4),(31105,10272,155),(31106,10272,6),(31107,10273,5),(31108,10273,30),(31109,10274,147),(31110,10274,7),(31111,10274,101),(31112,10274,5),(31113,10275,147),(31114,10275,4),(31115,10275,7),(31116,10275,15),(31117,10276,147),(31118,10276,4),(31119,10276,7),(31120,10277,149),(31121,10277,7),(31122,10277,5),(31123,10277,30),(31124,10278,150),(31125,10278,40),(31126,10278,6),(31127,10279,150),(31128,10279,8),(31129,10279,21),(31130,10279,7),(31131,10279,101),(31132,10279,12),(31133,10280,8),(31134,10280,7),(31135,10280,5),(31136,10280,12),(31137,10281,7),(31138,10281,5),(31139,10282,147),(31140,10282,7),(31141,10282,5),(31142,10282,30),(31143,10283,145),(31144,10283,4),(31145,10283,47),(31146,10283,159),(31147,10284,145),(31148,10284,8),(31149,10284,12),(31150,10285,145),(31151,10285,4),(31152,10285,7),(31153,10285,12),(31154,10286,145),(31155,10286,10),(31156,10286,8),(31157,10286,4),(31158,10286,5),(31159,10286,160),(31160,10287,145),(31161,10287,34),(31162,10287,150),(31163,10287,35),(31164,10287,95),(31165,10288,145),(31166,10288,150),(31167,10288,40),(31168,10288,5),(31169,10288,6),(31170,10289,145),(31171,10289,10),(31172,10289,149),(31173,10289,50),(31174,10290,146),(31175,10290,8),(31176,10290,95),(31177,10290,21),(31178,10290,101),(31179,10291,150),(31180,10291,7),(31181,10291,101),(31182,10291,12),(31183,10292,149),(31184,10292,8),(31185,10292,21),(31186,10293,34),(31187,10293,147),(31188,10293,35),(31189,10293,4),(31190,10293,101),(31191,10294,7),(31192,10295,7),(31193,10296,5),(31194,10297,149),(31195,10297,4),(31196,10297,7),(31197,10297,101),(31198,10298,147),(31199,10298,4),(31200,10298,7),(31201,10299,149),(31202,10299,7),(31203,10299,2),(31204,10300,153),(31205,10300,21),(31206,10301,36),(31207,10301,150),(31208,10301,4),(31209,10302,147),(31210,10302,149),(31211,10302,21),(31212,10302,7),(31213,10302,6),(31214,10303,34),(31215,10303,4),(31216,10303,21),(31217,10303,12),(31218,10304,34),(31219,10304,149),(31220,10304,4),(31221,10304,154),(31222,10304,7),(31223,10304,5),(31224,10305,95),(31225,10305,21),(31226,10305,7),(31227,10305,6),(31228,10305,2),(31229,10305,12),(31230,10305,15),(31231,10306,4),(31232,10306,154),(31233,10307,147),(31234,10308,40),(31235,10308,5),(31236,10308,6),(31237,10309,8),(31238,10309,4),(31239,10309,7),(31240,10309,12),(31241,10309,15),(31242,10310,149),(31243,10310,155),(31244,10310,7),(31245,10310,101),(31246,10310,6),(31247,10310,15),(31248,10311,4),(31249,10312,149),(31250,10312,150),(31251,10312,101),(31252,10312,2),(31253,10312,15),(31254,10313,149),(31255,10313,150),(31256,10313,2),(31257,10314,7),(31258,10314,5),(31259,10314,60),(31260,10315,150),(31261,10315,4),(31262,10315,11),(31263,10316,150),(31264,10316,95),(31265,10316,101),(31266,10316,12),(31267,10317,149),(31268,10317,7),(31269,10317,101),(31270,10317,5),(31271,10317,15),(31272,10318,147),(31273,10318,4),(31274,10318,7),(31275,10318,101),(31276,10318,6),(31277,10319,7),(31278,10320,147),(31279,10320,150),(31280,10321,150),(31281,10321,35),(31282,10322,10),(31283,10322,150),(31284,10323,149),(31285,10323,35),(31286,10323,4),(31287,10323,5),(31288,10323,12),(31289,10324,10),(31290,10324,147),(31291,10324,150),(31292,10324,6),(31293,10324,15),(31294,10325,10),(31295,10325,147),(31296,10325,150),(31297,10325,8),(31298,10325,4),(31299,10325,7),(31300,10325,6),(31301,10325,15),(31302,10326,10),(31303,10326,147),(31304,10326,5),(31305,10326,30),(31306,10327,147),(31307,10327,101),(31308,10327,2),(31309,10328,40),(31310,10328,5),(31311,10328,11),(31312,10328,30),(31313,10329,149),(31314,10329,35),(31315,10330,147),(31316,10330,149),(31317,10330,8),(31318,10330,155),(31319,10330,21),(31320,10330,12),(31321,10331,149),(31322,10331,154),(31323,10331,50),(31324,10331,5),(31325,10332,149),(31326,10332,7),(31327,10332,6),(31328,10333,147),(31329,10333,149),(31330,10333,6),(31331,10334,149),(31332,10334,150),(31333,10334,7),(31334,10335,149),(31335,10335,7),(31336,10336,149),(31337,10336,5),(31338,10337,147),(31339,10337,149),(31340,10337,101),(31341,10337,6),(31342,10338,150),(31343,10338,7),(31344,10338,101),(31345,10338,6),(31346,10338,160),(31347,10338,15),(31348,10339,150),(31349,10339,7),(31350,10339,6),(31351,10340,5),(31352,10340,6),(31353,10340,15),(31354,10341,7),(31355,10341,2),(31356,10342,5),(31357,10343,5),(31358,10344,150),(31359,10344,35),(31360,10344,7),(31361,10345,10),(31362,10345,149),(31363,10345,150),(31364,10345,7),(31365,10346,147),(31366,10346,149),(31367,10346,4),(31368,10346,7),(31369,10347,35),(31370,10347,4),(31371,10347,7),(31372,10347,101),(31373,10348,5),(31374,10349,154),(31375,10350,7),(31376,10350,101),(31377,10350,5),(31378,10351,10),(31379,10351,35),(31380,10351,50),(31381,10352,4),(31382,10352,7),(31383,10352,15),(31384,10353,147),(31385,10353,4),(31386,10353,154),(31387,10353,7),(31388,10354,149),(31389,10354,5),(31390,10355,7),(31391,10355,5),(31392,10355,30),(31393,10356,149),(31394,10356,101),(31395,10357,150),(31396,10357,35),(31397,10357,101),(31398,10358,10),(31399,10358,36),(31400,10358,4),(31401,10358,5),(31402,10358,30),(31403,10358,6),(31404,10359,10),(31405,10359,147),(31406,10359,36),(31407,10359,5),(31408,10359,30),(31409,10359,6),(31410,10360,149),(31411,10360,7),(31412,10360,101),(31413,10361,7),(31414,10361,101),(31415,10361,5),(31416,10362,5),(31417,10363,5),(31418,10364,10),(31419,10364,8),(31420,10364,21),(31421,10364,50),(31422,10364,47),(31423,10364,12),(31424,10365,10),(31425,10365,8),(31426,10365,21),(31427,10365,50),(31428,10365,47),(31429,10365,12),(31430,10366,10),(31431,10366,149),(31432,10366,150),(31433,10366,7),(31434,10367,10),(31435,10367,4),(31436,10367,95),(31437,10367,7),(31438,10367,101),(31439,10368,154),(31440,10368,5),(31441,10368,30),(31442,10369,149),(31443,10369,5),(31444,10369,30),(31445,10370,7),(31446,10370,101),(31447,10370,5),(31448,10370,30),(31449,10371,8),(31450,10371,4),(31451,10371,154),(31452,10372,150),(31453,10372,8),(31454,10372,7),(31455,10372,101),(31456,10372,6),(31457,10373,4),(31458,10373,21),(31459,10373,7),(31460,10373,5),(31461,10373,12),(31462,10374,7),(31463,10374,5),(31464,10374,6),(31465,10374,15),(31466,10375,7),(31467,10375,101),(31468,10375,2),(31469,10376,40),(31470,10376,5),(31471,10378,4),(31472,10378,153),(31473,10378,7),(31474,10379,150),(31475,10379,40),(31476,10379,21),(31477,10379,12),(31478,10380,154),(31479,10380,101),(31480,10380,50),(31481,10380,5),(31482,10381,149),(31483,10381,21),(31484,10381,7),(31485,10382,34),(31486,10382,7),(31487,10382,5),(31488,10383,149),(31489,10384,147),(31490,10384,149),(31491,10384,7),(31492,10384,5),(31493,10384,2),(31494,10385,147),(31495,10385,7),(31496,10385,101),(31497,10385,5),(31498,10386,10),(31499,10386,150),(31500,10386,4),(31501,10386,7),(31502,10386,6),(31503,10386,15),(31504,10387,4),(31505,10387,7),(31506,10387,15),(31507,10388,147),(31508,10388,8),(31509,10388,4),(31510,10388,21),(31511,10388,7),(31512,10388,30),(31513,10389,149),(31514,10389,7),(31515,10389,101),(31516,10389,6),(31517,10390,149),(31518,10390,7),(31519,10390,5),(31520,10391,7),(31521,10391,5),(31522,10392,101),(31523,10392,2),(31524,10393,150),(31525,10393,4),(31526,10393,2),(31527,10394,10),(31528,10394,4),(31529,10394,40),(31530,10394,21),(31531,10395,10),(31532,10395,147),(31533,10395,36),(31534,10395,149),(31535,10395,4),(31536,10395,15),(31537,10396,149),(31538,10396,5),(31539,10396,30),(31540,10397,7),(31541,10397,5),(31542,10398,5),(31543,10398,15),(31544,10399,10),(31545,10399,7),(31546,10399,5),(31547,10400,34),(31548,10400,36),(31549,10400,149),(31550,10400,50),(31551,10400,5),(31552,10401,149),(31553,10401,101),(31554,10401,6),(31555,10402,147),(31556,10402,149),(31557,10403,149),(31558,10403,8),(31559,10403,95),(31560,10403,21),(31561,10403,7),(31562,10403,101),(31563,10403,47),(31564,10404,149),(31565,10404,150),(31566,10404,7),(31567,10404,101),(31568,10405,149),(31569,10405,101),(31570,10406,154),(31571,10406,7),(31572,10406,101),(31573,10407,34),(31574,10407,149),(31575,10407,35),(31576,10407,50),(31577,10407,60),(31578,10408,149),(31579,10408,8),(31580,10408,21),(31581,10408,7),(31582,10408,101),(31583,10408,12),(31584,10409,147),(31585,10409,149),(31586,10409,7),(31587,10410,7),(31588,10410,15),(31589,10411,147),(31590,10411,150),(31591,10411,30),(31592,10411,15),(31593,10412,4),(31594,10412,2),(31595,10413,8),(31596,10413,4),(31597,10413,7),(31598,10413,12),(31599,10414,10),(31600,10414,101),(31601,10414,50),(31602,10414,5),(31603,10415,154),(31604,10415,12),(31605,10416,101),(31606,10416,2),(31607,10417,147),(31608,10417,101),(31609,10417,5),(31610,10418,34),(31611,10418,7),(31612,10418,5),(31613,10419,34),(31614,10419,147),(31615,10420,101),(31616,10421,150),(31617,10421,101),(31618,10421,5),(31619,10422,8),(31620,10422,21),(31621,10422,60),(31622,10422,12),(31623,10423,7),(31624,10423,101),(31625,10423,5),(31626,10423,12),(31627,10424,10),(31628,10424,34),(31629,10424,149),(31630,10424,8),(31631,10424,95),(31632,10424,21),(31633,10425,7),(31634,10425,101),(31635,10425,5),(31636,10425,6),(31637,10426,149),(31638,10426,21),(31639,10426,7),(31640,10426,6),(31641,10427,10),(31642,10427,34),(31643,10427,147),(31644,10427,149),(31645,10428,149),(31646,10428,7),(31647,10428,5),(31648,10429,34),(31649,10429,147),(31650,10429,149),(31651,10429,4),(31652,10429,3),(31653,10429,2),(31654,10430,4),(31655,10430,21),(31656,10430,101),(31657,10430,47),(31658,10431,5),(31659,10431,30),(31660,10432,149),(31661,10432,155),(31662,10432,7),(31663,10432,6),(31664,10433,7),(31665,10433,6),(31666,10434,7),(31667,10434,5),(31668,10435,10),(31669,10435,147),(31670,10435,150),(31671,10435,40),(31672,10435,5),(31673,10436,36),(31674,10436,5),(31675,10436,30),(31676,10437,150),(31677,10437,4),(31678,10437,101),(31679,10437,15),(31680,10438,10),(31681,10438,5),(31682,10439,147),(31683,10439,4),(31684,10439,7),(31685,10439,101),(31686,10439,15),(31687,10440,147),(31688,10440,7),(31689,10440,5),(31690,10441,10),(31691,10441,149),(31692,10441,7),(31693,10441,101),(31694,10442,149),(31695,10442,150),(31696,10442,7),(31697,10442,101),(31698,10443,10),(31699,10443,147),(31700,10443,7),(31701,10443,101),(31702,10443,15),(31703,10444,5),(31704,10445,7),(31705,10445,6),(31706,10446,7),(31707,10446,5),(31708,10447,145),(31709,10448,145),(31710,10449,145),(31711,10450,145),(31712,10451,145),(31713,10452,145),(31714,10453,145),(31715,10454,145),(31716,10455,145),(31717,10456,145),(31718,10457,145),(31719,10458,145),(31720,10459,145),(31721,10460,145),(31722,10461,145),(31723,10462,145),(31724,10463,145),(31725,10464,145),(31726,10465,145),(31727,10466,145),(31728,10467,145),(31729,10468,145),(31730,10469,145),(31731,10470,145),(31732,10471,145),(31733,10472,145),(31734,10473,145),(31735,10474,145),(31736,10475,149),(31737,10475,50),(31738,10475,30),(31739,10476,10),(31740,10476,7),(31741,10476,5),(31742,10476,6),(31743,10476,160),(31744,10477,149),(31745,10477,5),(31746,10478,10),(31747,10478,101),(31748,10478,5),(31749,10478,15),(31750,10479,4),(31751,10479,7),(31752,10479,6),(31753,10480,147),(31754,10480,101),(31755,10480,5),(31756,10481,10),(31757,10481,50),(31758,10481,60),(31759,10482,149),(31760,10482,4),(31761,10482,153),(31762,10482,155),(31763,10482,7),(31764,10482,6),(31765,10483,8),(31766,10483,4),(31767,10483,21),(31768,10484,10),(31769,10484,150),(31770,10485,10),(31771,10485,147),(31772,10485,40),(31773,10485,5),(31774,10486,10),(31775,10486,40),(31776,10486,5),(31777,10486,160),(31778,10487,10),(31779,10487,4),(31780,10487,101),(31781,10487,15),(31782,10488,5),(31783,10489,147),(31784,10489,4),(31785,10490,147),(31786,10490,4),(31787,10490,7),(31788,10491,149),(31789,10491,150),(31790,10491,6),(31791,10492,5),(31792,10493,7),(31793,10493,6),(31794,10494,149),(31795,10494,7),(31796,10494,5),(31797,10495,149),(31798,10496,149),(31799,10496,8),(31800,10496,5),(31801,10497,147),(31802,10497,101),(31803,10497,15),(31804,10498,101),(31805,10499,10),(31806,10499,5),(31807,10500,149),(31808,10500,5),(31809,10501,101),(31810,10501,5),(31811,10502,150),(31812,10502,101),(31813,10503,147),(31814,10503,101),(31815,10503,5),(31816,10504,101),(31817,10505,4),(31818,10505,5),(31819,10505,30),(31820,10506,5),(31821,10507,4),(31822,10507,152),(31823,10507,5),(31824,10508,4),(31825,10508,152),(31826,10508,5),(31827,10509,149),(31828,10509,4),(31829,10509,7),(31830,10510,5),(31831,10510,60),(31832,10511,8),(31833,10511,21),(31834,10511,101),(31835,10511,47),(31836,10512,149),(31837,10512,7),(31838,10512,5),(31839,10513,150),(31840,10513,5),(31841,10513,30),(31842,10514,150),(31843,10514,8),(31844,10514,21),(31845,10514,7),(31846,10515,147),(31847,10515,4),(31848,10515,7),(31849,10515,5),(31850,10516,10),(31851,10516,149),(31852,10516,7),(31853,10516,101),(31854,10516,5),(31855,10517,149),(31856,10517,7),(31857,10517,6),(31858,10517,2),(31859,10518,149),(31860,10518,150),(31861,10518,7),(31862,10518,6),(31863,10519,7),(31864,10519,5),(31865,10520,145),(31866,10520,4),(31867,10521,145),(31868,10521,150),(31869,10521,154),(31870,10522,145),(31871,10522,5),(31872,10522,30),(31873,10523,145),(31874,10523,150),(31875,10523,7),(31876,10523,5),(31877,10524,145),(31878,10524,4),(31879,10524,21),(31880,10525,145),(31881,10525,21),(31882,10525,7),(31883,10526,145),(31884,10526,7),(31885,10526,6),(31886,10527,145),(31887,10527,7),(31888,10528,145),(31889,10528,5),(31890,10529,10),(31891,10529,147),(31892,10529,4),(31893,10529,5),(31894,10530,5),(31895,10531,11),(31896,10532,150),(31897,10532,12),(31898,10533,10),(31899,10533,7),(31900,10533,5),(31901,10534,8),(31902,10534,4),(31903,10534,21),(31904,10534,5),(31905,10535,149),(31906,10535,8),(31907,10535,95),(31908,10535,21),(31909,10536,5),(31910,10536,30),(31911,10536,6),(31912,10537,147),(31913,10537,149),(31914,10537,150),(31915,10537,7),(31916,10537,101),(31917,10538,147),(31918,10538,21),(31919,10538,7),(31920,10538,47),(31921,10538,6),(31922,10539,147),(31923,10539,150),(31924,10539,7),(31925,10539,15),(31926,10540,4),(31927,10540,7),(31928,10540,15),(31929,10541,149),(31930,10541,5),(31931,10542,147),(31932,10542,5),(31933,10543,34),(31934,10543,147),(31935,10543,4),(31936,10544,36),(31937,10544,152),(31938,10544,5),(31939,10545,10),(31940,10545,149),(31941,10545,150),(31942,10545,7),(31943,10545,6),(31944,10545,15),(31945,10546,5),(31946,10546,30),(31947,10547,149),(31948,10547,2),(31949,10548,7),(31950,10548,5),(31951,10549,7),(31952,10549,101),(31953,10550,5),(31954,10551,147),(31955,10551,150),(31956,10551,3),(31957,10552,21),(31958,10552,50),(31959,10552,60),(31960,10553,149),(31961,10553,8),(31962,10553,21),(31963,10553,12),(31964,10554,8),(31965,10554,4),(31966,10554,21),(31967,10554,47),(31968,10555,34),(31969,10555,4),(31970,10555,21),(31971,10555,7),(31972,10556,147),(31973,10556,150),(31974,10556,7),(31975,10556,101),(31976,10557,149),(31977,10557,6),(31978,10558,147),(31979,10558,4),(31980,10558,101),(31981,10558,5),(31982,10559,21),(31983,10560,149),(31984,10560,8),(31985,10560,4),(31986,10560,5),(31987,10560,12),(31988,10561,34),(31989,10561,147),(31990,10561,149),(31991,10561,35),(31992,10561,5),(31993,10562,34),(31994,10562,149),(31995,10562,8),(31996,10562,7),(31997,10562,5),(31998,10562,12),(31999,10563,7),(32000,10563,5),(32001,10564,7),(32002,10564,101),(32003,10564,5),(32004,10565,149),(32005,10565,5),(32006,10566,150),(32007,10566,35),(32008,10566,21),(32009,10566,12),(32010,10567,34),(32011,10567,147),(32012,10567,36),(32013,10567,5),(32014,10568,34),(32015,10568,147),(32016,10568,36),(32017,10568,5),(32018,10569,149),(32019,10569,50),(32020,10570,4),(32021,10570,2),(32022,10571,10),(32023,10571,7),(32024,10571,5),(32025,10571,6),(32026,10571,15),(32027,10572,8),(32028,10572,4),(32029,10572,7),(32030,10572,6),(32031,10572,12),(32032,10573,150),(32033,10573,8),(32034,10573,95),(32035,10573,21),(32036,10573,7),(32037,10573,11),(32038,10574,147),(32039,10574,150),(32040,10574,4),(32041,10574,15),(32042,10575,10),(32043,10575,147),(32044,10575,150),(32045,10575,4),(32046,10575,15),(32047,10576,149),(32048,10576,101),(32049,10577,10),(32050,10577,7),(32051,10577,101),(32052,10577,6),(32053,10578,149),(32054,10579,5),(32055,10580,34),(32056,10580,147),(32057,10580,152),(32058,10581,10),(32059,10581,150),(32060,10581,4),(32061,10581,7),(32062,10582,36),(32063,10582,21),(32064,10582,7),(32065,10582,5),(32066,10582,30),(32067,10583,149),(32068,10583,21),(32069,10583,7),(32070,10583,101),(32071,10584,147),(32072,10584,149),(32073,10584,7),(32074,10584,5),(32075,10585,7),(32076,10585,6),(32077,10586,101),(32078,10586,5),(32079,10587,7),(32080,10587,101),(32081,10587,5),(32082,10587,30),(32083,10587,6),(32084,10587,15),(32085,10588,147),(32086,10588,149),(32087,10589,147),(32088,10589,149),(32089,10589,154),(32090,10589,21),(32091,10589,7),(32092,10589,101),(32093,10589,6),(32094,10590,10),(32095,10590,150),(32096,10590,101),(32097,10590,15),(32098,10591,7),(32099,10591,101),(32100,10592,149),(32101,10593,150),(32102,10594,8),(32103,10594,4),(32104,10594,12),(32105,10595,36),(32106,10595,149),(32107,10595,5),(32108,10595,11),(32109,10596,34),(32110,10596,149),(32111,10596,5),(32112,10597,8),(32113,10597,95),(32114,10597,7),(32115,10597,101),(32116,10597,2),(32117,10598,147),(32118,10598,149),(32119,10598,7),(32120,10598,5),(32121,10598,30),(32122,10599,7),(32123,10599,101),(32124,10599,5),(32125,10600,145),(32126,10601,145),(32127,10602,145),(32128,10602,147),(32129,10602,4),(32130,10602,2),(32131,10603,145),(32132,10603,8),(32133,10603,40),(32134,10603,101),(32135,10604,145),(32136,10604,101),(32137,10605,145),(32138,10605,34),(32139,10606,145),(32140,10606,5),(32141,10606,30),(32142,10607,145),(32143,10608,101),(32144,10608,5),(32145,10609,101),(32146,10610,10),(32147,10610,7),(32148,10611,149),(32149,10611,150),(32150,10612,149),(32151,10612,150),(32152,10612,7),(32153,10612,101),(32154,10613,34),(32155,10613,36),(32156,10613,5),(32157,10614,149),(32158,10614,7),(32159,10614,101),(32160,10614,5),(32161,10615,7),(32162,10616,8),(32163,10616,21),(32164,10616,12),(32165,10617,149),(32166,10617,4),(32167,10617,21),(32168,10617,7),(32169,10617,5),(32170,10618,7),(32171,10618,101),(32172,10619,10),(32173,10619,147),(32174,10619,36),(32175,10619,101),(32176,10619,5),(32177,10620,5),(32178,10621,34),(32179,10621,4),(32180,10621,159),(32181,10622,34),(32182,10622,36),(32183,10622,150),(32184,10622,4),(32185,10622,15),(32186,10623,36),(32187,10623,4),(32188,10623,5),(32189,10624,147),(32190,10624,8),(32191,10624,21),(32192,10624,5),(32193,10624,30),(32194,10625,149),(32195,10625,101),(32196,10626,147),(32197,10626,21),(32198,10626,7),(32199,10627,5),(32200,10628,4),(32201,10628,40),(32202,10628,12),(32203,10629,34),(32204,10629,4),(32205,10629,5),(32206,10630,34),(32207,10630,147),(32208,10630,4),(32209,10630,157),(32210,10631,150),(32211,10631,15),(32212,10632,10),(32213,10632,7),(32214,10632,3),(32215,10632,159),(32216,10632,2),(32217,10633,3),(32218,10633,159),(32219,10633,2),(32220,10634,36),(32221,10634,7),(32222,10634,5),(32223,10635,101),(32224,10635,5),(32225,10636,149),(32226,10636,30),(32227,10637,149),(32228,10637,8),(32229,10637,21),(32230,10637,7),(32231,10638,147),(32232,10638,8),(32233,10638,21),(32234,10638,30),(32235,10638,47),(32236,10639,34),(32237,10639,149),(32238,10639,7),(32239,10639,30),(32240,10640,149),(32241,10640,8),(32242,10640,7),(32243,10640,12),(32244,10641,7),(32245,10641,101),(32246,10642,149),(32247,10642,7),(32248,10642,30),(32249,10643,8),(32250,10643,4),(32251,10643,21),(32252,10643,12),(32253,10644,4),(32254,10644,101),(32255,10645,10),(32256,10645,150),(32257,10645,6),(32258,10645,15),(32259,10646,10),(32260,10646,150),(32261,10646,8),(32262,10646,7),(32263,10646,101),(32264,10647,147),(32265,10647,2),(32266,10648,101),(32267,10648,30),(32268,10649,10),(32269,10649,7),(32270,10649,101),(32271,10650,147),(32272,10650,4),(32273,10650,7),(32274,10650,101),(32275,10651,4),(32276,10651,12),(32277,10652,150),(32278,10653,34),(32279,10653,4),(32280,10654,21),(32281,10654,3),(32282,10654,5),(32283,10654,30),(32284,10655,10),(32285,10655,34),(32286,10655,149),(32287,10655,150),(32288,10655,5),(32289,10655,6),(32290,10656,7),(32291,10657,147),(32292,10657,149),(32293,10657,7),(32294,10657,2),(32295,10658,7),(32296,10659,147),(32297,10660,150),(32298,10660,8),(32299,10660,4),(32300,10660,47),(32301,10660,12),(32302,10661,150),(32303,10661,3),(32304,10661,2),(32305,10662,147),(32306,10662,150),(32307,10662,6),(32308,10663,8),(32309,10663,21),(32310,10663,47),(32311,10664,150),(32312,10664,4),(32313,10664,7),(32314,10664,5),(32315,10664,6),(32316,10665,150),(32317,10665,35),(32318,10665,60),(32319,10666,34),(32320,10666,4),(32321,10666,7),(32322,10666,6),(32323,10667,149),(32324,10667,8),(32325,10667,21),(32326,10667,101),(32327,10668,149),(32328,10668,5),(32329,10668,160),(32330,10669,147),(32331,10669,149),(32332,10669,101),(32333,10669,6),(32334,10669,2),(32335,10670,101),(32336,10671,7),(32337,10672,10),(32338,10672,4),(32339,10672,7),(32340,10672,2),(32341,10673,101),(32342,10674,150),(32343,10674,3),(32344,10674,2),(32345,10674,15),(32346,10675,34),(32347,10675,4),(32348,10675,101),(32349,10676,150),(32350,10676,4),(32351,10676,7),(32352,10677,147),(32353,10677,150),(32354,10677,4),(32355,10677,7),(32356,10678,149),(32357,10678,7),(32358,10678,101),(32359,10678,5),(32360,10679,147),(32361,10679,7),(32362,10679,101),(32363,10680,150),(32364,10680,8),(32365,10680,4),(32366,10681,154),(32367,10681,15),(32368,10682,4),(32369,10682,7),(32370,10683,36),(32371,10683,5),(32372,10684,34),(32373,10684,7),(32374,10684,101),(32375,10684,5),(32376,10684,30),(32377,10684,160),(32378,10685,149),(32379,10685,6),(32380,10686,40),(32381,10686,7),(32382,10686,5),(32383,10686,30),(32384,10687,150),(32385,10687,35),(32386,10687,101),(32387,10687,6),(32388,10688,147),(32389,10688,149),(32390,10688,12),(32391,10689,147),(32392,10689,5),(32393,10690,147),(32394,10691,8),(32395,10691,6),(32396,10692,7),(32397,10692,101),(32398,10692,5),(32399,10693,5),(32400,10693,30),(32401,10694,4),(32402,10695,4),(32403,10695,21),(32404,10695,60),(32405,10696,10),(32406,10696,4),(32407,10696,2),(32408,10697,4),(32409,10697,101),(32410,10698,150),(32411,10698,7),(32412,10698,6),(32413,10699,153),(32414,10699,21),(32415,10699,47),(32416,10700,8),(32417,10700,95),(32418,10700,12),(32419,10701,10),(32420,10701,36),(32421,10701,4),(32422,10701,7),(32423,10701,101),(32424,10701,5),(32425,10702,10),(32426,10702,150),(32427,10702,8),(32428,10702,21),(32429,10702,7),(32430,10702,47),(32431,10702,6),(32432,10703,147),(32433,10703,4),(32434,10703,5),(32435,10703,2),(32436,10704,40),(32437,10704,7),(32438,10704,5),(32439,10705,7),(32440,10705,101),(32441,10706,10),(32442,10706,7),(32443,10707,34),(32444,10707,147),(32445,10707,4),(32446,10707,95),(32447,10707,21),(32448,10708,5),(32449,10708,30),(32450,10708,60),(32451,10709,149),(32452,10709,7),(32453,10709,101),(32454,10709,5),(32455,10710,149),(32456,10710,8),(32457,10710,50),(32458,10710,12),(32459,10711,147),(32460,10711,36),(32461,10711,5),(32462,10711,30),(32463,10712,149),(32464,10712,7),(32465,10712,2),(32466,10712,15),(32467,10713,147),(32468,10713,149),(32469,10713,7),(32470,10713,6),(32471,10714,150),(32472,10714,4),(32473,10714,7),(32474,10715,150),(32475,10715,4),(32476,10716,150),(32477,10716,8),(32478,10716,47),(32479,10716,12),(32480,10717,149),(32481,10717,21),(32482,10717,7),(32483,10717,15),(32484,10718,4),(32485,10718,7),(32486,10718,101),(32487,10718,6),(32488,10718,15),(32489,10719,147),(32490,10719,149),(32491,10719,7),(32492,10719,101),(32493,10719,2),(32494,10720,5),(32495,10721,150),(32496,10721,35),(32497,10721,40),(32498,10721,12),(32499,10722,95),(32500,10722,101),(32501,10723,4),(32502,10723,2),(32503,10724,34),(32504,10724,7),(32505,10725,8),(32506,10725,7),(32507,10725,101),(32508,10726,5),(32509,10727,101),(32510,10727,2),(32511,10732,34),(32512,10732,147),(32513,10732,151),(32514,10735,150),(32515,10736,149),(32516,10738,8),(32517,10738,21),(32518,10738,101),(32519,10738,47),(32520,10739,10),(32521,10739,150),(32522,10739,4),(32523,10739,101),(32524,10740,149),(32525,10740,21),(32526,10740,101),(32527,10741,10),(32528,10741,36),(32529,10741,7),(32530,10741,5),(32531,10741,2),(32532,10742,10),(32533,10742,7),(32534,10742,160),(32535,10743,101),(32536,10743,2),(32537,10744,7),(32538,10744,101),(32539,10744,6),(32540,10745,101),(32541,10745,5),(32542,10746,50),(32543,10746,5),(32544,10747,34),(32545,10747,36),(32546,10747,8),(32547,10747,4),(32548,10747,21),(32549,10747,21),(32550,10747,5),(32551,10747,12),(32552,10748,150),(32553,10748,40),(32554,10748,7),(32555,10749,40),(32556,10750,147),(32557,10750,7),(32558,10750,5),(32559,10751,145),(32560,10751,150),(32561,10752,145),(32562,10752,4),(32563,10752,2),(32564,10753,145),(32565,10753,4),(32566,10753,5),(32567,10754,145),(32568,10754,150),(32569,10754,7),(32570,10754,101),(32571,10754,6),(32572,10755,145),(32573,10755,8),(32574,10755,12),(32575,10756,145),(32576,10756,10),(32577,10756,7),(32578,10756,6),(32579,10757,145),(32580,10757,7),(32581,10758,145),(32582,10758,101),(32583,10758,6),(32584,10759,145),(32585,10759,101),(32586,10760,149),(32587,10760,8),(32588,10760,7),(32589,10760,6),(32590,10760,12),(32591,10761,150),(32592,10761,4),(32593,10762,149),(32594,10762,4),(32595,10762,21),(32596,10762,7),(32597,10762,6),(32598,10763,7),(32599,10763,6),(32600,10764,150),(32601,10764,101),(32602,10765,5),(32603,10766,5),(32604,10767,36),(32605,10767,4),(32606,10767,60),(32607,10768,150),(32608,10768,35),(32609,10769,5),(32610,10769,30),(32611,10770,4),(32612,10770,7),(32613,10770,2),(32614,10771,5),(32615,10771,2),(32616,10772,7),(32617,10773,8),(32618,10773,4),(32619,10773,7),(32620,10773,12),(32621,10774,7),(32622,10774,101),(32623,10774,5),(32624,10775,150),(32625,10775,7),(32626,10775,101),(32627,10775,5),(32628,10776,7),(32629,10776,5),(32630,10776,30),(32631,10777,101),(32632,10777,6),(32633,10778,5),(32634,10779,36),(32635,10779,7),(32636,10779,5),(32637,10780,10),(32638,10780,147),(32639,10780,101),(32640,10781,34),(32641,10781,36),(32642,10781,4),(32643,10782,149),(32644,10782,7),(32645,10782,50),(32646,10782,5),(32647,10783,4),(32648,10783,21),(32649,10783,7),(32650,10783,5),(32651,10783,30),(32652,10783,12),(32653,10784,36),(32654,10784,8),(32655,10784,4),(32656,10784,7),(32657,10784,12),(32658,10785,147),(32659,10785,149),(32660,10785,40),(32661,10785,7),(32662,10785,101),(32663,10786,150),(32664,10786,95),(32665,10786,101),(32666,10787,21),(32667,10787,50),(32668,10788,7),(32669,10788,101),(32670,10789,7),(32671,10789,5),(32672,10789,2),(32673,10790,4),(32674,10791,150),(32675,10792,149),(32676,10792,21),(32677,10792,50),(32678,10793,8),(32679,10793,95),(32680,10793,21),(32681,10794,10),(32682,10794,149),(32683,10794,150),(32684,10794,2),(32685,10794,15),(32686,10795,147),(32687,10795,150),(32688,10795,101),(32689,10796,149),(32690,10796,153),(32691,10797,150),(32692,10798,10),(32693,10798,34),(32694,10798,4),(32695,10799,36),(32696,10799,4),(32697,10800,5),(32698,10801,10),(32699,10801,147),(32700,10801,5),(32701,10801,160),(32702,10802,147),(32703,10802,150),(32704,10802,101),(32705,10803,7),(32706,10803,101),(32707,10804,147),(32708,10804,149),(32709,10804,4),(32710,10804,152),(32711,10804,101),(32712,10804,5),(32713,10805,150),(32714,10805,2),(32715,10806,150),(32716,10806,5),(32717,10806,11),(32718,10806,60),(32719,10807,147),(32720,10807,149),(32721,10807,3),(32722,10807,50),(32723,10807,5),(32724,10808,147),(32725,10808,149),(32726,10808,50),(32727,10808,5),(32728,10809,149),(32729,10809,150),(32730,10809,8),(32731,10809,21),(32732,10809,7),(32733,10809,12),(32734,10810,4),(32735,10810,7),(32736,10810,6),(32737,10811,10),(32738,10811,36),(32739,10811,30),(32740,10812,147),(32741,10812,149),(32742,10812,150),(32743,10812,4),(32744,10812,21),(32745,10812,6),(32746,10812,12),(32747,10812,15),(32748,10813,34),(32749,10813,147),(32750,10813,8),(32751,10813,35),(32752,10813,4),(32753,10813,7),(32754,10813,2),(32755,10813,12),(32756,10814,147),(32757,10814,5),(32758,10814,30),(32759,10815,4),(32760,10815,7),(32761,10815,101),(32762,10816,5),(32763,10817,21),(32764,10818,150),(32765,10818,155),(32766,10818,21),(32767,10818,5),(32768,10818,12),(32769,10819,36),(32770,10819,40),(32771,10819,5),(32772,10819,6),(32773,10820,10),(32774,10820,150),(32775,10820,3),(32776,10820,6),(32777,10821,36),(32778,10821,5),(32779,10822,10),(32780,10822,36),(32781,10822,150),(32782,10822,4),(32783,10822,101),(32784,10822,6),(32785,10823,101),(32786,10823,2),(32787,10824,149),(32788,10824,7),(32789,10824,12),(32790,10825,4),(32791,10825,7),(32792,10826,21),(32793,10826,7),(32794,10826,47),(32795,10827,149),(32796,10827,150),(32797,10827,5),(32798,10828,5),(32799,10829,5),(32800,10830,149),(32801,10830,150),(32802,10830,8),(32803,10830,21),(32804,10831,149),(32805,10831,50),(32806,10831,2),(32807,10832,7),(32808,10832,6),(32809,10832,15),(32810,10833,4),(32811,10833,7),(32812,10833,6),(32813,10834,4),(32814,10834,7),(32815,10834,6),(32816,10835,101),(32817,10835,5),(32818,10836,7),(32819,10837,101),(32820,10838,36),(32821,10838,149),(32822,10838,5),(32823,10839,5),(32824,10840,4),(32825,10840,7),(32826,10840,12),(32827,10841,8),(32828,10841,21),(32829,10841,7),(32830,10841,12),(32831,10842,101),(32832,10842,5),(32833,10843,101),(32834,10843,5),(32835,10844,10),(32836,10844,4),(32837,10845,36),(32838,10845,4),(32839,10846,36),(32840,10846,5),(32841,10846,60),(32842,10847,150),(32843,10847,101),(32844,10848,10),(32845,10848,147),(32846,10848,101),(32847,10849,5),(32848,10850,36),(32849,10850,4),(32850,10850,5),(32851,10850,30),(32852,10850,60),(32853,10851,149),(32854,10851,8),(32855,10851,35),(32856,10851,12),(32857,10852,150),(32858,10852,95),(32859,10852,21),(32860,10852,12),(32861,10853,150),(32862,10853,4),(32863,10853,7),(32864,10853,101),(32865,10854,7),(32866,10854,5),(32867,10855,147),(32868,10855,101),(32869,10855,2),(32870,10856,150),(32871,10856,3),(32872,10856,101),(32873,10856,5),(32874,10857,7),(32875,10857,30),(32876,10858,101),(32877,10859,159),(32878,10860,149),(32879,10861,4),(32880,10861,12),(32881,10862,147),(32882,10862,36),(32883,10862,149),(32884,10862,150),(32885,10862,7),(32886,10862,5),(32887,10863,36),(32888,10863,8),(32889,10863,95),(32890,10863,21),(32891,10864,4),(32892,10864,7),(32893,10865,145),(32894,10865,10),(32895,10865,50),(32896,10866,145),(32897,10867,145),(32898,10868,145),(32899,10869,145),(32900,10870,145),(32901,10871,145),(32902,10872,145),(32903,10873,4),(32904,10873,2),(32905,10873,15),(32906,10874,8),(32907,10874,21),(32908,10874,47),(32909,10875,147),(32910,10875,4),(32911,10876,36),(32912,10876,4),(32913,10876,101),(32914,10877,149),(32915,10877,7),(32916,10877,101),(32917,10878,147),(32918,10878,7),(32919,10878,5),(32920,10878,6),(32921,10879,147),(32922,10880,10),(32923,10880,36),(32924,10880,4),(32925,10880,5),(32926,10881,150),(32927,10881,4),(32928,10881,7),(32929,10881,101),(32930,10881,6),(32931,10882,147),(32932,10882,40),(32933,10882,7),(32934,10882,101),(32935,10883,7),(32936,10883,5),(32937,10884,147),(32938,10884,7),(32939,10884,5),(32940,10885,149),(32941,10885,152),(32942,10885,5),(32943,10886,150),(32944,10887,149),(32945,10887,8),(32946,10887,21),(32947,10887,5),(32948,10888,5),(32949,10888,2),(32950,10889,149),(32951,10889,40),(32952,10889,5),(32953,10890,149),(32954,10890,50),(32955,10890,5),(32956,10890,6),(32957,10891,34),(32958,10891,149),(32959,10891,5),(32960,10892,149),(32961,10892,7),(32962,10892,5),(32963,10893,154),(32964,10893,7),(32965,10893,5),(32966,10894,147),(32967,10894,6),(32968,10895,147),(32969,10895,5),(32970,10896,4),(32971,10897,147),(32972,10897,35),(32973,10897,21),(32974,10897,5),(32975,10898,10),(32976,10898,150),(32977,10899,4),(32978,10899,7),(32979,10899,5),(32980,10900,149),(32981,10900,7),(32982,10900,101),(32983,10900,2),(32984,10901,149),(32985,10901,2),(32986,10902,36),(32987,10902,5),(32988,10903,7),(32989,10903,101),(32990,10903,5),(32991,10904,147),(32992,10904,149),(32993,10904,101),(32994,10904,50),(32995,10904,6),(32996,10905,149),(32997,10906,5),(32998,10906,60),(32999,10907,21),(33000,10908,7),(33001,10909,149),(33002,10910,149),(33003,10913,4),(33004,10913,21),(33005,10913,5),(33006,10913,11),(33007,10913,157),(33008,10914,159),(33009,10915,8),(33010,10915,21),(33011,10916,150),(33012,10916,7),(33013,10916,101),(33014,10917,149),(33015,10917,150),(33016,10917,21),(33017,10917,7),(33018,10917,101),(33019,10917,5),(33020,10917,15),(33021,10918,149),(33022,10918,7),(33023,10918,5),(33024,10918,30),(33025,10919,149),(33026,10919,5),(33027,10920,148),(33028,10920,5),(33029,10921,150),(33030,10921,4),(33031,10921,5),(33032,10921,60),(33033,10922,150),(33034,10922,101),(33035,10922,5),(33036,10922,15),(33037,10923,149),(33038,10923,7),(33039,10924,149),(33040,10924,30),(33041,10925,149),(33042,10925,153),(33043,10925,155),(33044,10926,36),(33045,10926,60),(33046,10927,36),(33047,10927,4),(33048,10927,60),(33049,10928,150),(33050,10928,60),(33051,10929,147),(33052,10929,149),(33053,10929,7),(33054,10930,7),(33055,10930,101),(33056,10931,150),(33057,10931,8),(33058,10931,4),(33059,10931,153),(33060,10931,21),(33061,10931,12),(33062,10932,150),(33063,10932,101),(33064,10933,8),(33065,10933,95),(33066,10933,21),(33067,10934,10),(33068,10934,5),(33069,10934,157),(33070,10934,30),(33071,10935,7),(33072,10935,101),(33073,10936,5),(33074,10937,34),(33075,10937,35),(33076,10937,5),(33077,10938,150),(33078,10938,12),(33079,10939,147),(33080,10939,4),(33081,10939,7),(33082,10940,10),(33083,10940,4),(33084,10940,7),(33085,10940,6),(33086,10941,7),(33087,10941,5),(33088,10941,30),(33089,10942,10),(33090,10942,5),(33091,10943,5),(33092,10944,35),(33093,10944,152),(33094,10944,7),(33095,10944,5),(33096,10944,30),(33097,10945,34),(33098,10945,147),(33099,10945,3),(33100,10945,157),(33101,10946,150),(33102,10946,4),(33103,10946,7),(33104,10947,10),(33105,10947,150),(33106,10947,4),(33107,10947,7),(33108,10947,6),(33109,10947,15),(33110,10948,7),(33111,10948,101),(33112,10948,6),(33113,10948,2),(33114,10948,15),(33115,10949,5),(33116,10950,7),(33117,10950,5),(33118,10951,149),(33119,10951,6),(33120,10951,2),(33121,10952,4),(33122,10952,7),(33123,10952,6),(33124,10953,7),(33125,10954,7),(33126,10955,7),(33127,10956,5),(33128,10957,149),(33129,10957,101),(33130,10958,21),(33131,10958,101),(33132,10959,5),(33133,10960,36),(33134,10960,8),(33135,10960,95),(33136,10960,12),(33137,10961,150),(33138,10961,60),(33139,10961,12),(33140,10962,149),(33141,10962,40),(33142,10962,50),(33143,10962,5),(33144,10963,149),(33145,10963,7),(33146,10963,5),(33147,10963,30),(33148,10963,160),(33149,10963,15),(33150,10964,149),(33151,10964,7),(33152,10964,5),(33153,10964,30),(33154,10964,160),(33155,10964,15),(33156,10965,149),(33157,10965,7),(33158,10965,101),(33159,10966,10),(33160,10966,95),(33161,10966,21),(33162,10966,47),(33163,10966,12),(33164,10967,150),(33165,10967,4),(33166,10967,7),(33167,10967,6),(33168,10968,149),(33169,10968,8),(33170,10968,95),(33171,10968,21),(33172,10968,7),(33173,10968,6),(33174,10969,4),(33175,10969,7),(33176,10969,5),(33177,10969,6),(33178,10970,7),(33179,10970,101),(33180,10971,101),(33181,10972,153),(33182,10972,21),(33183,10973,150),(33184,10973,5),(33185,10973,11),(33186,10974,147),(33187,10974,4),(33188,10976,7),(33189,10976,101),(33190,10977,150),(33191,10978,3),(33192,10978,12),(33193,10979,7),(33194,10979,15),(33195,10980,150),(33196,10980,4),(33197,10980,2),(33198,10980,12),(33199,10981,150),(33200,10981,101),(33201,10982,4),(33202,10982,12),(33203,10984,36),(33204,10984,152),(33205,10985,10),(33206,10985,150),(33207,10985,7),(33208,10986,150),(33209,10986,4),(33210,10986,7),(33211,10987,10),(33212,10987,7),(33213,10987,6),(33214,10988,7),(33215,10988,15),(33216,10989,7),(33217,10989,2),(33218,10990,147),(33219,10990,2),(33220,10990,15),(33221,10991,8),(33222,10991,21),(33223,10991,7),(33224,10992,149),(33225,10992,35),(33226,10993,10),(33227,10993,7),(33228,10993,5),(33229,10994,153),(33230,10994,21),(33231,10995,10),(33232,10995,7),(33233,10996,10),(33234,10996,147),(33235,10996,7),(33236,10996,47),(33237,10997,5),(33238,10998,4),(33239,10998,7),(33240,10998,15),(33241,10999,147),(33242,10999,101),(33243,11000,21),(33244,11000,101),(33245,11001,4),(33246,11002,150),(33247,11003,147),(33248,11003,149),(33249,11003,7),(33250,11003,5),(33251,11004,101),(33252,11005,4),(33253,11005,12),(33254,11006,4),(33255,11006,47),(33256,11007,150),(33257,11007,7),(33258,11007,6),(33259,11008,7),(33260,11009,10),(33261,11009,7),(33262,11009,5),(33263,11009,157),(33264,11010,147),(33265,11010,7),(33266,11010,101),(33267,11011,8),(33268,11011,95),(33269,11011,5),(33270,11012,95),(33271,11012,5),(33272,11013,5),(33273,11014,147),(33274,11014,4),(33275,11014,7),(33276,11014,101),(33277,11015,7),(33278,11015,5),(33279,11015,6),(33280,11016,40),(33281,11016,5),(33282,11018,34),(33283,11018,147),(33284,11018,36),(33285,11018,4),(33286,11019,4),(33287,11019,60),(33288,11019,47),(33289,11020,95),(33290,11020,21),(33291,11020,7),(33292,11020,47),(33293,11020,12),(33294,11021,4),(33295,11022,149),(33296,11022,4),(33297,11022,7),(33298,11023,5),(33299,11023,30),(33300,11024,149),(33301,11024,7),(33302,11024,5),(33303,11025,149),(33304,11025,101),(33305,11026,10),(33306,11026,149),(33307,11026,7),(33308,11026,6),(33309,11026,160),(33310,11026,15),(33311,11027,147),(33312,11027,149),(33313,11027,4),(33314,11027,21),(33315,11027,101),(33316,11027,12),(33317,11028,147),(33318,11028,5),(33319,11028,30),(33320,11029,147),(33321,11029,101),(33322,11030,5),(33323,11031,2),(33324,11032,2),(33325,11033,101),(33326,11034,149),(33327,11034,21),(33328,11035,5),(33329,11036,34),(33330,11036,8),(33331,11036,4),(33332,11036,21),(33333,11037,8),(33334,11037,95),(33335,11037,21),(33336,11037,6),(33337,11038,149),(33338,11038,5),(33339,11038,30),(33340,11039,21),(33341,11040,21),(33342,11040,101),(33343,11041,4),(33344,11041,101),(33345,11042,146),(33346,11042,8),(33347,11042,155),(33348,11042,21),(33349,11043,150),(33350,11043,7),(33351,11043,101),(33352,11044,101),(33353,11045,36),(33354,11045,4),(33355,11045,5),(33356,11046,150),(33357,11046,7),(33358,11046,6),(33359,11047,8),(33360,11047,4),(33361,11047,21),(33362,11047,12),(33363,11048,34),(33364,11048,4),(33365,11049,10),(33366,11049,36),(33367,11049,4),(33368,11049,2),(33369,11050,4),(33370,11050,7),(33371,11050,5),(33372,11051,7),(33373,11051,6),(33374,11052,5),(33375,11052,30),(33376,11053,149),(33377,11054,150),(33378,11054,4),(33379,11054,7),(33380,11055,36),(33381,11055,4),(33382,11056,4),(33383,11056,5),(33384,11057,10),(33385,11057,150),(33386,11057,101),(33387,11058,10),(33388,11058,149),(33389,11058,35),(33390,11058,7),(33391,11058,101),(33392,11058,6),(33393,11059,149),(33394,11059,40),(33395,11059,7),(33396,11060,150),(33397,11060,6),(33398,11060,15),(33399,11061,101),(33400,11061,5),(33401,11062,8),(33402,11062,21),(33403,11062,5),(33404,11062,60),(33405,11063,10),(33406,11063,150),(33407,11063,4),(33408,11063,95),(33409,11064,147),(33410,11064,150),(33411,11064,7),(33412,11064,101),(33413,11065,149),(33414,11065,7),(33415,11065,101),(33416,11066,36),(33417,11066,5),(33418,11067,147),(33419,11067,7),(33420,11067,5),(33421,11068,34),(33422,11068,4),(33423,11069,5),(33424,11070,150),(33425,11071,4),(33426,11071,101),(33427,11072,150),(33428,11072,101),(33429,11073,101),(33430,11074,5),(33431,11075,149),(33432,11075,7),(33433,11075,2),(33434,11076,7),(33435,11077,7),(33436,11077,101),(33437,11078,147),(33438,11078,101),(33439,11079,149),(33440,11079,101),(33441,11079,12),(33442,11080,36),(33443,11080,4),(33444,11080,5),(33445,11081,147),(33446,11081,149),(33447,11081,21),(33448,11081,3),(33449,11081,101),(33450,11082,5),(33451,11082,30),(33452,11083,101),(33453,11083,5),(33454,11084,147),(33455,11084,101),(33456,11085,149),(33457,11086,36),(33458,11086,5),(33459,11087,4),(33460,11088,10),(33461,11088,21),(33462,11088,21),(33463,11088,47),(33464,11089,150),(33465,11089,7),(33466,11090,150),(33467,11090,7),(33468,11091,149),(33469,11092,149),(33470,11093,5),(33471,11094,34),(33472,11094,149),(33473,11094,4),(33474,11094,7),(33475,11094,30),(33476,11095,149),(33477,11095,7),(33478,11095,12),(33479,11096,10),(33480,11096,4),(33481,11097,3),(33482,11097,5),(33483,11097,30),(33484,11098,34),(33485,11098,147),(33486,11098,5),(33487,11099,101),(33488,11099,15),(33489,11100,101),(33490,11101,5),(33491,11102,10),(33492,11102,5),(33493,11102,30),(33494,11103,150),(33495,11103,35),(33496,11103,4),(33497,11103,3),(33498,11104,4),(33499,11104,6),(33500,11104,12),(33501,11105,4),(33502,11105,7),(33503,11105,15),(33504,11106,10),(33505,11106,7),(33506,11107,2),(33507,11108,5),(33508,11109,34),(33509,11109,147),(33510,11109,36),(33511,11109,4),(33512,11109,157),(33513,11110,10),(33514,11110,150),(33515,11110,6),(33516,11111,154),(33517,11112,4),(33518,11113,10),(33519,11113,5),(33520,11114,149),(33521,11114,7),(33522,11115,147),(33523,11115,7),(33524,11115,5),(33525,11116,40),(33526,11117,10),(33527,11117,150),(33528,11118,8),(33529,11118,4),(33530,11118,95),(33531,11118,21),(33532,11118,7),(33533,11118,12),(33534,11119,34),(33535,11119,5),(33536,11119,30),(33537,11120,154),(33538,11120,7),(33539,11120,2),(33540,11121,5),(33541,11121,30),(33542,11122,101),(33543,11122,6),(33544,11122,2),(33545,11123,101),(33546,11124,101),(33547,11124,2),(33548,11125,146),(33549,11125,8),(33550,11125,7),(33551,11126,8),(33552,11127,149),(33553,11127,21),(33554,11127,47),(33555,11128,150),(33556,11128,7),(33557,11129,35),(33558,11129,152),(33559,11130,35),(33560,11130,152),(33561,11130,21),(33562,11131,4),(33563,11132,150),(33564,11132,40),(33565,11133,4),(33566,11133,21),(33567,11134,150),(33568,11134,35),(33569,11134,95),(33570,11134,21),(33571,11134,12),(33572,11135,150),(33573,11135,7),(33574,11135,101),(33575,11135,5),(33576,11136,149),(33577,11136,8),(33578,11136,21),(33579,11137,10),(33580,11137,34),(33581,11137,147),(33582,11138,7),(33583,11138,5),(33584,11139,10),(33585,11139,5),(33586,11140,150),(33587,11140,4),(33588,11140,7),(33589,11141,10),(33590,11141,5),(33591,11142,10),(33592,11142,147),(33593,11142,5),(33594,11143,5),(33595,11144,40),(33596,11144,5),(33597,11145,7),(33598,11145,101),(33599,11145,6),(33600,11146,2),(33601,11147,146),(33602,11148,34),(33603,11148,4),(33604,11149,154),(33605,11149,7),(33606,11149,5),(33607,11150,149),(33608,11150,7),(33609,11151,36),(33610,11151,4),(33611,11151,101),(33612,11152,7),(33613,11152,101),(33614,11152,5),(33615,11153,149),(33616,11153,8),(33617,11153,12),(33618,11154,34),(33619,11154,150),(33620,11155,7),(33621,11155,6),(33622,11156,149),(33623,11156,21),(33624,11156,5),(33625,11156,6),(33626,11156,12),(33627,11157,8),(33628,11157,4),(33629,11157,153),(33630,11157,3),(33631,11158,150),(33632,11158,7),(33633,11159,147),(33634,11159,5),(33635,11160,147),(33636,11160,5),(33637,11161,35),(33638,11161,95),(33639,11161,21),(33640,11161,6),(33641,11161,12),(33642,11162,150),(33643,11162,8),(33644,11162,95),(33645,11162,21),(33646,11162,7),(33647,11162,101),(33648,11162,2),(33649,11163,147),(33650,11163,149),(33651,11164,147),(33652,11164,5),(33653,11164,6),(33654,11165,147),(33655,11165,101),(33656,11166,5),(33657,11167,150),(33658,11167,101),(33659,11168,5),(33660,11169,145),(33661,11169,21),(33662,11170,145),(33663,11170,10),(33664,11170,4),(33665,11170,12),(33666,11171,145),(33667,11171,5),(33668,11171,12),(33669,11172,145),(33670,11172,21),(33671,11172,101),(33672,11172,2),(33673,11173,145),(33674,11173,10),(33675,11173,7),(33676,11174,145),(33677,11174,10),(33678,11174,7),(33679,11174,5),(33680,11175,145),(33681,11175,7),(33682,11175,6),(33683,11176,145),(33684,11176,101),(33685,11177,145),(33686,11177,101),(33687,11178,4),(33688,11179,147),(33689,11179,60),(33690,11180,147),(33691,11180,60),(33692,11181,5),(33693,11182,21),(33694,11183,5),(33695,11183,30),(33696,11183,12),(33697,11184,147),(33698,11184,7),(33699,11185,147),(33700,11185,21),(33701,11186,150),(33702,11186,7),(33703,11186,5),(33704,11187,150),(33705,11188,150),(33706,11188,95),(33707,11188,7),(33708,11188,101),(33709,11188,15),(33710,11189,150),(33711,11189,8),(33712,11189,21),(33713,11189,47),(33714,11189,2),(33715,11189,12),(33716,11190,34),(33717,11190,4),(33718,11190,7),(33719,11190,6),(33720,11191,34),(33721,11191,147),(33722,11191,4),(33723,11191,7),(33724,11191,6),(33725,11192,8),(33726,11192,95),(33727,11192,21),(33728,11193,149),(33729,11193,7),(33730,11193,101),(33731,11194,101),(33732,11194,5),(33733,11194,30),(33734,11195,7),(33735,11195,101),(33736,11195,5),(33737,11196,150),(33738,11196,101),(33739,11196,12),(33740,11197,7),(33741,11197,5),(33742,11197,30),(33743,11198,34),(33744,11198,8),(33745,11198,4),(33746,11198,7),(33747,11199,150),(33748,11199,101),(33749,11200,10),(33750,11200,150),(33751,11200,7),(33752,11200,101),(33753,11201,149),(33754,11202,10),(33755,11202,147),(33756,11202,101),(33757,11202,15),(33758,11203,5),(33759,11204,150),(33760,11204,8),(33761,11204,3),(33762,11204,159),(33763,11204,2),(33764,11204,12),(33765,11205,147),(33766,11205,150),(33767,11205,101),(33768,11206,34),(33769,11206,50),(33770,11206,5),(33771,11207,36),(33772,11208,4),(33773,11208,7),(33774,11209,149),(33775,11209,7),(33776,11209,101),(33777,11210,147),(33778,11210,7),(33779,11210,101),(33780,11210,5),(33781,11211,4),(33782,11211,101),(33783,11212,5),(33784,11212,6),(33785,11213,149),(33786,11213,5),(33787,11214,36),(33788,11214,2),(33789,11215,149),(33790,11215,12),(33791,11216,101),(33792,11216,50),(33793,11217,34),(33794,11217,147),(33795,11217,21),(33796,11217,47),(33797,11218,149),(33798,11218,7),(33799,11218,5),(33800,11219,36),(33801,11219,4),(33802,11219,5),(33803,11219,30),(33804,11220,150),(33805,11220,7),(33806,11220,5),(33807,11220,2),(33808,11221,147),(33809,11221,7),(33810,11221,2),(33811,11222,4),(33812,11222,21),(33813,11222,7),(33814,11222,47),(33815,11223,7),(33816,11223,5),(33817,11224,5),(33818,11225,4),(33819,11225,7),(33820,11226,7),(33821,11227,7),(33822,11227,6),(33823,11228,10),(33824,11228,7),(33825,11228,101),(33826,11228,15),(33827,11229,7),(33828,11229,101),(33829,11230,101),(33830,11230,5),(33831,11231,7),(33832,11231,5),(33833,11232,101),(33834,11233,10),(33835,11233,101),(33836,11233,5),(33837,11234,147),(33838,11234,159),(33839,11234,2),(33840,11235,36),(33841,11235,149),(33842,11235,5),(33843,11235,2),(33844,11236,147),(33845,11236,150),(33846,11236,4),(33847,11236,7),(33848,11236,101),(33849,11236,5),(33850,11236,2),(33851,11237,147),(33852,11237,4),(33853,11237,47),(33854,11238,34),(33855,11238,7),(33856,11239,21),(33857,11239,50),(33858,11239,47),(33859,11240,21),(33860,11240,50),(33861,11240,47),(33862,11241,10),(33863,11241,4),(33864,11241,7),(33865,11241,101),(33866,11242,10),(33867,11242,7),(33868,11242,5),(33869,11242,6),(33870,11243,7),(33871,11243,5),(33872,11244,101),(33873,11244,2),(33874,11245,147),(33875,11245,150),(33876,11245,8),(33877,11245,4),(33878,11245,21),(33879,11245,101),(33880,11245,5),(33881,11245,30),(33882,11246,147),(33883,11246,3),(33884,11246,101),(33885,11246,159),(33886,11246,2),(33887,11247,147),(33888,11247,150),(33889,11247,4),(33890,11247,101),(33891,11247,15),(33892,11248,5),(33893,11248,30),(33894,11249,4),(33895,11249,7),(33896,11250,147),(33897,11250,150),(33898,11250,101),(33899,11251,40),(33900,11251,5),(33901,11252,101),(33902,11253,7),(33903,11253,30),(33904,11253,60),(33905,11254,153),(33906,11254,155),(33907,11254,21),(33908,11255,4),(33909,11256,149),(33910,11256,21),(33911,11256,7),(33912,11256,6),(33913,11257,10),(33914,11257,147),(33915,11257,150),(33916,11257,6),(33917,11258,6),(33918,11258,15),(33919,11259,4),(33920,11259,154),(33921,11259,11),(33922,11260,10),(33923,11260,36),(33924,11260,150),(33925,11260,4),(33926,11260,47),(33927,11260,6),(33928,11261,4),(33929,11261,7),(33930,11261,5),(33931,11262,7),(33932,11262,6),(33933,11263,7),(33934,11263,101),(33935,11264,7),(33936,11264,5),(33937,11264,6),(33938,11265,147),(33939,11265,149),(33940,11265,47),(33941,11265,6),(33942,11266,149),(33943,11266,101),(33944,11267,150),(33945,11267,4),(33946,11267,101),(33947,11267,15),(33948,11268,101),(33949,11269,101),(33950,11270,149),(33951,11270,5),(33952,11271,147),(33953,11271,149),(33954,11271,5),(33955,11272,150),(33956,11272,40),(33957,11272,5),(33958,11272,6),(33959,11273,150),(33960,11273,15),(33961,11274,36),(33962,11274,5),(33963,11274,30),(33964,11275,36),(33965,11275,5),(33966,11275,30),(33967,11276,4),(33968,11277,10),(33969,11277,147),(33970,11277,5),(33971,11278,7),(33972,11278,5),(33973,11279,4),(33974,11280,36),(33975,11280,4),(33976,11280,30),(33977,11280,60),(33978,11280,15),(33979,11281,34),(33980,11281,147),(33981,11281,150),(33982,11281,40),(33983,11281,6),(33984,11282,154),(33985,11282,5),(33986,11283,101),(33987,11283,2),(33988,11284,101),(33989,11285,5),(33990,11286,145),(33991,11286,149),(33992,11286,40),(33993,11287,145),(33994,11287,150),(33995,11287,4),(33996,11287,12),(33997,11288,145),(33998,11288,4),(33999,11288,5),(34000,11289,145),(34001,11289,147),(34002,11289,4),(34003,11289,157),(34004,11290,145),(34005,11290,150),(34006,11290,8),(34007,11290,35),(34008,11290,12),(34009,11291,145),(34010,11292,147),(34011,11292,101),(34012,11293,147),(34013,11294,30),(34014,11294,60),(34015,11295,10),(34016,11295,7),(34017,11296,150),(34018,11296,35),(34019,11296,6),(34020,11296,15),(34021,11297,147),(34022,11297,154),(34023,11297,7),(34024,11298,154),(34025,11299,101),(34026,11299,15),(34027,11300,150),(34028,11300,4),(34029,11300,101),(34030,11300,5),(34031,11301,7),(34032,11301,5),(34033,11301,6),(34034,11302,2),(34035,11303,36),(34036,11304,4),(34037,11305,4),(34038,11306,5),(34039,11306,11),(34040,11306,30),(34041,11306,15),(34042,11307,149),(34043,11307,8),(34044,11307,101),(34045,11307,12),(34046,11308,12),(34047,11309,153),(34048,11309,21),(34049,11310,4),(34050,11310,5),(34051,11310,60),(34052,11311,8),(34053,11311,4),(34054,11311,12),(34055,11312,150),(34056,11312,6),(34057,11313,149),(34058,11313,7),(34059,11313,101),(34060,11314,10),(34061,11314,101),(34062,11314,2),(34063,11315,5),(34064,11316,8),(34065,11316,21),(34066,11316,7),(34067,11316,101),(34068,11317,35),(34069,11317,101),(34070,11317,5),(34071,11318,149),(34072,11318,7),(34073,11318,5),(34074,11319,101),(34075,11319,5),(34076,11320,101),(34077,11321,36),(34078,11321,4),(34079,11322,34),(34080,11322,36),(34081,11322,4),(34082,11323,34),(34083,11323,147),(34084,11324,147),(34085,11324,101),(34086,11325,101),(34087,11325,5),(34088,11326,147),(34089,11326,150),(34090,11326,7),(34091,11326,5),(34092,11327,7),(34093,11327,6),(34094,11328,101),(34095,11328,2),(34096,11329,5),(34097,11330,150),(34098,11330,95),(34099,11330,21),(34100,11330,12),(34101,11331,8),(34102,11331,21),(34103,11331,47),(34104,11331,12),(34105,11332,21),(34106,11332,12),(34107,11333,5),(34108,11333,11),(34109,11334,101),(34110,11336,150),(34111,11337,101),(34112,11338,153),(34113,11338,47),(34114,11339,153),(34115,11339,155),(34116,11339,21),(34117,11339,47),(34118,11339,6),(34119,11340,10),(34120,11340,6),(34121,11341,152),(34122,11341,5),(34123,11341,30),(34124,11342,147),(34125,11342,30),(34126,11343,147),(34127,11343,5),(34128,11343,30),(34129,11344,4),(34130,11344,2),(34131,11345,7),(34132,11345,101),(34133,11345,6),(34134,11346,147),(34135,11346,5),(34136,11346,6),(34137,11347,4),(34138,11347,21),(34139,11347,101),(34140,11347,47),(34141,11348,7),(34142,11348,6),(34143,11349,10),(34144,11349,5),(34145,11350,5),(34146,11351,101),(34147,11352,10),(34148,11352,150),(34149,11352,30),(34150,11353,4),(34151,11353,5),(34152,11353,11),(34153,11353,30),(34154,11354,149),(34155,11354,8),(34156,11354,4),(34157,11354,3),(34158,11354,101),(34159,11354,12),(34160,11355,150),(34161,11355,7),(34162,11355,2),(34163,11356,8),(34164,11356,101),(34165,11356,2),(34166,11357,4),(34167,11357,5),(34168,11358,147),(34169,11358,7),(34170,11358,6),(34171,11359,147),(34172,11359,35),(34173,11359,6),(34174,11360,10),(34175,11360,150),(34176,11360,101),(34177,11360,6),(34178,11360,12),(34179,11360,15),(34180,11361,147),(34181,11361,36),(34182,11361,4),(34183,11361,101),(34184,11362,7),(34185,11362,101),(34186,11362,2),(34187,11363,7),(34188,11363,5),(34189,11364,7),(34190,11364,101),(34191,11365,4),(34192,11365,101),(34193,11365,5),(34194,11366,35),(34195,11366,50),(34196,11367,150),(34197,11367,4),(34198,11367,12),(34199,11368,10),(34200,11368,150),(34201,11368,155),(34202,11368,7),(34203,11368,101),(34204,11368,5),(34205,11368,12),(34206,11369,149),(34207,11370,150),(34208,11370,101),(34209,11371,10),(34210,11371,153),(34211,11371,21),(34212,11372,150),(34213,11372,8),(34214,11373,4),(34215,11374,36),(34216,11374,8),(34217,11374,4),(34218,11375,147),(34219,11375,149),(34220,11375,7),(34221,11375,2),(34222,11376,149),(34223,11376,7),(34224,11376,5),(34225,11376,30),(34226,11377,36),(34227,11377,7),(34228,11377,5),(34229,11378,4),(34230,11378,2),(34231,11379,7),(34232,11380,10),(34233,11380,35),(34234,11380,101),(34235,11381,101),(34236,11382,4),(34237,11382,101),(34238,11382,6),(34239,11383,8),(34240,11383,95),(34241,11383,21),(34242,11383,47),(34243,11383,12),(34244,11384,8),(34245,11384,21),(34246,11384,7),(34247,11384,30),(34248,11384,6),(34249,11385,4),(34250,11385,7),(34251,11385,101),(34252,11386,5),(34253,11387,147),(34254,11387,7),(34255,11387,101),(34256,11388,150),(34257,11388,35),(34258,11388,4),(34259,11388,40),(34260,11388,15),(34261,11389,147),(34262,11389,150),(34263,11389,35),(34264,11389,3),(34265,11389,5),(34266,11390,150),(34267,11390,8),(34268,11390,35),(34269,11390,4),(34270,11390,7),(34271,11390,101),(34272,11390,12),(34273,11391,7),(34274,11391,6),(34275,11392,10),(34276,11392,147),(34277,11392,7),(34278,11393,150),(34279,11393,151),(34280,11393,101),(34281,11394,101),(34282,11394,5),(34283,11395,149),(34284,11395,35),(34285,11395,21),(34286,11395,101),(34287,11395,50),(34288,11395,12),(34289,11396,36),(34290,11396,4),(34291,11396,5),(34292,11396,30),(34293,11397,34),(34294,11397,149),(34295,11398,149),(34296,11398,30),(34297,11399,6),(34298,11400,149),(34299,11400,7),(34300,11400,6),(34301,11401,149),(34302,11401,7),(34303,11402,7),(34304,11403,150),(34305,11404,150),(34306,11405,149),(34307,11406,4),(34308,11406,60),(34309,11407,4),(34310,11407,60),(34311,11408,36),(34312,11408,8),(34313,11408,4),(34314,11408,12),(34315,11409,7),(34316,11409,101),(34317,11410,145),(34318,11410,4),(34319,11411,145),(34320,11411,149),(34321,11412,145),(34322,11412,21),(34323,11413,145),(34324,11413,10),(34325,11413,7),(34326,11414,145),(34327,11414,10),(34328,11415,145),(34329,11415,150),(34330,11415,101),(34331,11416,145),(34332,11416,101),(34333,11416,2),(34334,11417,145),(34335,11417,101),(34336,11418,145),(34337,11418,5),(34338,11419,21),(34339,11419,101),(34340,11420,101),(34341,11420,5),(34342,11421,149),(34343,11421,5),(34344,11422,4),(34345,11422,101),(34346,11422,12),(34347,11423,34),(34348,11423,4),(34349,11424,147),(34350,11424,15),(34351,11425,10),(34352,11425,7),(34353,11426,147),(34354,11426,40),(34355,11427,36),(34356,11427,150),(34357,11427,5),(34358,11427,6),(34359,11428,10),(34360,11428,36),(34361,11428,150),(34362,11428,15),(34363,11429,149),(34364,11429,7),(34365,11430,8),(34366,11430,95),(34367,11430,21),(34368,11431,147),(34369,11431,35),(34370,11431,50),(34371,11431,5),(34372,11432,147),(34373,11432,7),(34374,11432,2),(34375,11433,150),(34376,11433,95),(34377,11433,21),(34378,11433,3),(34379,11434,34),(34380,11434,147),(34381,11434,149),(34382,11434,5),(34383,11434,30),(34384,11435,10),(34385,11435,147),(34386,11435,7),(34387,11435,5),(34388,11436,10),(34389,11436,6),(34390,11436,15),(34391,11437,149),(34392,11437,5),(34393,11437,30),(34394,11438,36),(34395,11438,7),(34396,11439,10),(34397,11439,7),(34398,11439,101),(34399,11440,10),(34400,11440,7),(34401,11441,7),(34402,11441,5),(34403,11441,6),(34404,11442,5),(34405,11442,30),(34406,11443,7),(34407,11444,150),(34408,11444,7),(34409,11444,6),(34410,11445,101),(34411,11445,5),(34412,11446,150),(34413,11446,21),(34414,11446,47),(34415,11447,34),(34416,11447,147),(34417,11447,149),(34418,11447,150),(34419,11447,21),(34420,11447,5),(34421,11448,4),(34422,11448,2),(34423,11449,150),(34424,11449,40),(34425,11449,101),(34426,11449,5),(34427,11450,147),(34428,11450,40),(34429,11451,150),(34430,11451,101),(34431,11452,150),(34432,11452,101),(34433,11453,7),(34434,11453,5),(34435,11454,147),(34436,11454,7),(34437,11455,101),(34438,11456,145),(34439,11457,101),(34440,11457,5),(34441,11458,101),(34442,11458,5),(34443,11459,4),(34444,11459,5),(34445,11460,10),(34446,11460,50),(34447,11460,5),(34448,11460,12),(34449,11461,149),(34450,11461,40),(34451,11461,7),(34452,11461,5),(34453,11462,149),(34454,11462,150),(34455,11462,8),(34456,11462,21),(34457,11462,7),(34458,11462,5),(34459,11462,6),(34460,11463,149),(34461,11463,5),(34462,11463,2),(34463,11464,10),(34464,11464,149),(34465,11464,7),(34466,11464,101),(34467,11464,5),(34468,11464,6),(34469,11464,15),(34470,11465,147),(34471,11465,149),(34472,11466,149),(34473,11466,4),(34474,11466,7),(34475,11466,15),(34476,11467,10),(34477,11467,150),(34478,11467,7),(34479,11468,149),(34480,11468,7),(34481,11468,5),(34482,11469,7),(34483,11470,7),(34484,11471,7),(34485,11472,101),(34486,11473,21),(34487,11473,7),(34488,11473,3),(34489,11473,101),(34490,11474,4),(34491,11474,5),(34492,11474,60),(34493,11475,150),(34494,11475,35),(34495,11475,95),(34496,11475,15),(34497,11476,8),(34498,11476,35),(34499,11476,4),(34500,11476,95),(34501,11476,12),(34502,11477,10),(34503,11477,7),(34504,11477,6),(34505,11477,160),(34506,11477,15),(34507,11478,8),(34508,11478,7),(34509,11478,101),(34510,11478,6),(34511,11478,2),(34512,11479,40),(34513,11480,147),(34514,11480,4),(34515,11480,21),(34516,11481,147),(34517,11481,50),(34518,11481,5),(34519,11482,147),(34520,11482,150),(34521,11482,35),(34522,11482,4),(34523,11482,7),(34524,11483,5),(34525,11483,30),(34526,11484,154),(34527,11484,7),(34528,11484,101),(34529,11485,101),(34530,11485,6),(34531,11485,2),(34532,11486,147),(34533,11486,7),(34534,11486,5),(34535,11486,30),(34536,11487,4),(34537,11487,7),(34538,11487,6),(34539,11488,150),(34540,11488,101),(34541,11488,6),(34542,11489,7),(34543,11490,101),(34544,11490,5),(34545,11491,5),(34546,11492,5),(34547,11493,36),(34548,11493,4),(34549,11493,5),(34550,11493,60),(34551,11494,10),(34552,11494,147),(34553,11494,50),(34554,11495,10),(34555,11495,8),(34556,11495,4),(34557,11495,7),(34558,11495,12),(34559,11496,7),(34560,11496,2),(34561,11497,149),(34562,11497,7),(34563,11498,147),(34564,11498,5),(34565,11499,34),(34566,11499,4),(34567,11499,11),(34568,11500,34),(34569,11500,4),(34570,11500,11),(34571,11501,149),(34572,11501,8),(34573,11501,21),(34574,11502,4),(34575,11502,7),(34576,11502,12),(34577,11503,147),(34578,11503,5),(34579,11503,30),(34580,11504,34),(34581,11504,149),(34582,11504,8),(34583,11504,5),(34584,11505,7),(34585,11505,101),(34586,11505,5),(34587,11506,36),(34588,11506,4),(34589,11506,11),(34590,11506,60),(34591,11507,36),(34592,11507,150),(34593,11507,4),(34594,11507,5),(34595,11508,7),(34596,11508,5),(34597,11508,6),(34598,11509,149),(34599,11509,5),(34600,11510,34),(34601,11510,147),(34602,11510,149),(34603,11510,4),(34604,11511,147),(34605,11511,2),(34606,11512,7),(34607,11512,101),(34608,11513,7),(34609,11513,101),(34610,11514,154),(34611,11514,21),(34612,11515,147),(34613,11515,4),(34614,11515,21),(34615,11515,7),(34616,11516,150),(34617,11516,101),(34618,11516,12),(34619,11517,4),(34620,11517,101),(34621,11517,2),(34622,11518,149),(34623,11518,7),(34624,11518,5),(34625,11518,30),(34626,11519,150),(34627,11520,149),(34628,11520,21),(34629,11520,5),(34630,11520,30),(34631,11520,60),(34632,11521,34),(34633,11521,149),(34634,11522,149),(34635,11522,7),(34636,11522,5),(34637,11522,6),(34638,11522,15),(34639,11523,7),(34640,11523,6),(34641,11524,149),(34642,11524,6),(34643,11525,10),(34644,11525,147),(34645,11525,15),(34646,11526,7),(34647,11527,154),(34648,11527,50),(34649,11528,50),(34650,11529,8),(34651,11529,21),(34652,11530,154),(34653,11531,147),(34654,11531,2),(34655,11532,21),(34656,11533,4),(34657,11533,40),(34658,11534,4),(34659,11534,153),(34660,11534,21),(34661,11535,4),(34662,11535,12),(34663,11536,34),(34664,11536,150),(34665,11536,35),(34666,11536,101),(34667,11537,8),(34668,11537,5),(34669,11537,30),(34670,11538,34),(34671,11538,21),(34672,11538,50),(34673,11539,101),(34674,11539,2),(34675,11540,101),(34676,11540,2),(34677,11541,50),(34678,11544,101),(34679,11545,34),(34680,11545,147),(34681,11546,147),(34682,11547,101),(34683,11548,4),(34684,11548,7),(34685,11549,8),(34686,11549,21),(34687,11550,34),(34688,11550,5),(34689,11550,30),(34690,11550,2),(34691,11551,149),(34692,11551,7),(34693,11552,149),(34694,11552,6),(34695,11553,7),(34696,11553,101),(34697,11553,6),(34698,11554,101),(34699,11554,2),(34700,11555,8),(34701,11555,12),(34702,11556,147),(34703,11556,5),(34704,11556,30),(34705,11557,101),(34706,11558,21),(34707,11558,50),(34708,11559,4),(34709,11560,40),(34710,11561,150),(34711,11561,8),(34712,11561,4),(34713,11561,5),(34714,11561,12),(34715,11562,147),(34716,11562,5),(34717,11563,10),(34718,11563,149),(34719,11563,8),(34720,11563,21),(34721,11563,7),(34722,11563,12),(34723,11564,150),(34724,11564,7),(34725,11565,7),(34726,11566,5),(34727,11567,7),(34728,11567,101),(34729,11568,5),(34730,11569,101),(34731,11570,101),(34732,11570,5),(34733,11571,150),(34734,11571,35),(34735,11571,47),(34736,11571,12),(34737,11572,150),(34738,11572,35),(34739,11572,95),(34740,11573,36),(34741,11573,35),(34742,11573,4),(34743,11574,4),(34744,11574,7),(34745,11574,5),(34746,11575,147),(34747,11575,150),(34748,11575,6),(34749,11576,101),(34750,11576,2),(34751,11577,101),(34752,11578,150),(34753,11578,35),(34754,11579,153),(34755,11579,155),(34756,11579,21),(34757,11580,4),(34758,11580,5),(34759,11580,30),(34760,11580,60),(34761,11581,8),(34762,11581,95),(34763,11581,21),(34764,11581,5),(34765,11581,12),(34766,11582,7),(34767,11582,101),(34768,11583,101),(34769,11583,2),(34770,11584,147),(34771,11584,7),(34772,11584,5),(34773,11584,2),(34774,11585,10),(34775,11585,7),(34776,11585,101),(34777,11586,150),(34778,11586,12),(34779,11587,150),(34780,11587,7),(34781,11588,149),(34782,11588,50),(34783,11588,30),(34784,11589,4),(34785,11589,21),(34786,11589,101),(34787,11590,7),(34788,11590,3),(34789,11590,2),(34790,11591,101),(34791,11591,6),(34792,11592,10),(34793,11592,150),(34794,11593,7),(34795,11594,149),(34796,11594,6),(34797,11595,149),(34798,11595,5),(34799,11596,101),(34800,11597,149),(34801,11597,8),(34802,11597,95),(34803,11597,21),(34804,11597,7),(34805,11598,21),(34806,11599,4),(34807,11599,6),(34808,11599,15),(34809,11600,3),(34810,11600,5),(34811,11600,30),(34812,11601,6),(34813,11601,15),(34814,11602,5),(34815,11602,30),(34816,11603,101),(34817,11604,150),(34818,11604,4),(34819,11604,12),(34820,11605,4),(34821,11606,8),(34822,11606,4),(34823,11606,7),(34824,11607,10),(34825,11607,7),(34826,11608,147),(34827,11609,7),(34828,11609,6),(34829,11610,7),(34830,11610,101),(34831,11611,150),(34832,11611,4),(34833,11611,15),(34834,11612,149),(34835,11612,95),(34836,11613,4),(34837,11613,7),(34838,11613,2),(34839,11614,8),(34840,11614,4),(34841,11614,95),(34842,11614,21),(34843,11614,7),(34844,11615,10),(34845,11615,7),(34846,11615,6),(34847,11616,7),(34848,11616,101),(34849,11617,5),(34850,11618,147),(34851,11618,8),(34852,11618,95),(34853,11619,7),(34854,11620,101),(34855,11621,10),(34856,11621,50),(34857,11621,12),(34858,11622,150),(34859,11622,4),(34860,11623,10),(34861,11623,150),(34862,11623,4),(34863,11623,3),(34864,11623,6),(34865,11623,159),(34866,11623,2),(34867,11624,149),(34868,11625,147),(34869,11625,7),(34870,11626,147),(34871,11626,7),(34872,11627,101),(34873,11628,147),(34874,11628,101),(34875,11629,101),(34876,11629,6),(34877,11630,150),(34878,11630,4),(34879,11630,7),(34880,11631,147),(34881,11632,8),(34882,11632,4),(34883,11632,95),(34884,11632,21),(34885,11632,7),(34886,11632,12),(34887,11633,4),(34888,11633,2),(34889,11634,149),(34890,11634,7),(34891,11634,101),(34892,11634,5),(34893,11635,7),(34894,11635,101),(34895,11635,15),(34896,11636,152),(34897,11636,5),(34898,11637,149),(34899,11637,101),(34900,11638,150),(34901,11638,4),(34902,11638,12),(34903,11639,147),(34904,11639,4),(34905,11639,152),(34906,11639,7),(34907,11639,160),(34908,11640,10),(34909,11640,6),(34910,11641,149),(34911,11641,7),(34912,11641,101),(34913,11641,5),(34914,11642,10),(34915,11642,153),(34916,11642,7),(34917,11642,6),(34918,11643,7),(34919,11643,101),(34920,11644,36),(34921,11644,8),(34922,11644,4),(34923,11644,12),(34924,11645,8),(34925,11645,12),(34926,11646,149),(34927,11646,101),(34928,11647,10),(34929,11647,7),(34930,11648,147),(34931,11648,7),(34932,11649,149),(34933,11649,101),(34934,11650,101),(34935,11651,5),(34936,11652,150),(34937,11653,34),(34938,11653,4),(34939,11654,34),(34940,11654,148),(34941,11654,149),(34942,11654,50),(34943,11654,5),(34944,11655,4),(34945,11655,5),(34946,11655,11),(34947,11656,10),(34948,11657,7),(34949,11657,5),(34950,11657,6),(34951,11658,101),(34952,11658,5),(34953,11659,145),(34954,11660,145),(34955,11661,145),(34956,11662,145),(34957,11663,145),(34958,11664,145),(34959,11665,145),(34960,11666,145),(34961,11667,145),(34962,11668,145),(34963,11669,145),(34964,11670,145),(34965,11671,145),(34966,11672,145),(34967,11673,145),(34968,11674,145),(34969,11675,145),(34970,11676,145),(34971,11677,145),(34972,11678,34),(34973,11678,150),(34974,11678,35),(34975,11678,5),(34976,11678,30),(34977,11679,10),(34978,11679,50),(34979,11679,30),(34980,11679,60),(34981,11680,4),(34982,11681,147),(34983,11681,101),(34984,11681,5),(34985,11681,30),(34986,11682,149),(34987,11682,7),(34988,11682,6),(34989,11683,147),(34990,11683,7),(34991,11683,101),(34992,11684,7),(34993,11684,30),(34994,11685,4),(34995,11685,7),(34996,11685,5),(34997,11686,150),(34998,11686,8),(34999,11686,4),(35000,11686,21),(35001,11686,12),(35002,11687,36),(35003,11687,4),(35004,11687,5),(35005,11688,10),(35006,11688,147),(35007,11688,35),(35008,11688,5),(35009,11689,147),(35010,11689,101),(35011,11689,5),(35012,11690,101),(35013,11690,2),(35014,11691,4),(35015,11691,2),(35016,11692,149),(35017,11692,154),(35018,11692,12),(35019,11693,150),(35020,11693,12),(35021,11694,149),(35022,11694,5),(35023,11694,6),(35024,11695,4),(35025,11696,149),(35026,11696,5),(35027,11696,30),(35028,11697,7),(35029,11697,6),(35030,11698,5),(35031,11699,150),(35032,11699,12),(35033,11700,150),(35034,11700,30),(35035,11701,147),(35036,11701,36),(35037,11701,4),(35038,11701,5),(35039,11701,12),(35040,11702,10),(35041,11702,150),(35042,11702,101),(35043,11703,149),(35044,11703,3),(35045,11703,2),(35046,11704,4),(35047,11704,101),(35048,11705,10),(35049,11705,95),(35050,11705,21),(35051,11705,7),(35052,11706,150),(35053,11706,101),(35054,11707,147),(35055,11707,7),(35056,11707,101),(35057,11708,149),(35058,11708,4),(35059,11708,7),(35060,11709,147),(35061,11709,7),(35062,11709,5),(35063,11710,147),(35064,11710,7),(35065,11710,5),(35066,11710,30),(35067,11711,101),(35068,11712,10),(35069,11712,149),(35070,11712,150),(35071,11712,4),(35072,11712,95),(35073,11713,4),(35074,11713,153),(35075,11713,155),(35076,11713,21),(35077,11713,6),(35078,11714,4),(35079,11715,4),(35080,11715,101),(35081,11715,5),(35082,11715,30),(35083,11716,7),(35084,11716,6),(35085,11716,15),(35086,11717,5),(35087,11717,30),(35088,11718,7),(35089,11718,2),(35090,11719,5),(35091,11719,11),(35092,11719,30),(35093,11720,150),(35094,11720,4),(35095,11721,150),(35096,11721,8),(35097,11721,21),(35098,11721,7),(35099,11721,47),(35100,11722,7),(35101,11722,101),(35102,11722,5),(35103,11722,6),(35104,11723,150),(35105,11723,101),(35106,11724,101),(35107,11725,34),(35108,11725,147),(35109,11725,4),(35110,11725,157),(35111,11726,8),(35112,11726,21),(35113,11726,101),(35114,11726,47),(35115,11727,36),(35116,11727,4),(35117,11727,5),(35118,11728,147),(35119,11728,101),(35120,11728,2),(35121,11729,147),(35122,11729,101),(35123,11730,150),(35124,11730,101),(35125,11730,5),(35126,11731,149),(35127,11731,101),(35128,11731,5),(35129,11732,152),(35130,11732,5),(35131,11732,30),(35132,11733,34),(35133,11733,4),(35134,11734,149),(35135,11734,8),(35136,11734,21),(35137,11734,5),(35138,11735,10),(35139,11735,149),(35140,11735,50),(35141,11736,149),(35142,11736,101),(35143,11737,10),(35144,11737,34),(35145,11737,147),(35146,11737,4),(35147,11737,21),(35148,11738,36),(35149,11738,6),(35150,11739,7),(35151,11739,2),(35152,11740,154),(35153,11741,7),(35154,11741,6),(35155,11742,5),(35156,11743,5),(35157,11743,11),(35158,11744,10),(35159,11744,4),(35160,11745,101),(35161,11746,150),(35162,11746,8),(35163,11746,4),(35164,11746,30),(35165,11746,12),(35166,11747,6),(35167,11748,7),(35168,11748,101),(35169,11749,5),(35170,11750,150),(35171,11750,35),(35172,11750,7),(35173,11750,5),(35174,11751,10),(35175,11751,8),(35176,11751,21),(35177,11752,149),(35178,11752,154),(35179,11752,50),(35180,11753,10),(35181,11753,40),(35182,11753,5),(35183,11754,150),(35184,11754,101),(35185,11755,101),(35186,11756,10),(35187,11756,150),(35188,11756,8),(35189,11756,4),(35190,11756,154),(35191,11756,12),(35192,11757,149),(35193,11757,101),(35194,11758,10),(35195,11758,149),(35196,11758,5),(35197,11759,101),(35198,11760,159),(35199,11760,2),(35200,11761,10),(35201,11761,101),(35202,11761,5),(35203,11761,30),(35204,11762,150),(35205,11763,10),(35206,11763,149),(35207,11763,8),(35208,11763,21),(35209,11763,7),(35210,11763,12),(35211,11764,147),(35212,11764,149),(35213,11764,7),(35214,11764,5),(35215,11765,149),(35216,11765,8),(35217,11765,7),(35218,11765,12),(35219,11766,34),(35220,11766,147),(35221,11766,4),(35222,11766,2),(35223,11767,36),(35224,11767,4),(35225,11767,12),(35226,11768,34),(35227,11768,36),(35228,11768,30),(35229,11769,149),(35230,11769,7),(35231,11770,4),(35232,11770,5),(35233,11770,30),(35234,11770,60),(35235,11771,7),(35236,11771,101),(35237,11772,34),(35238,11772,147),(35239,11772,4),(35240,11773,147),(35241,11773,101),(35242,11774,35),(35243,11774,4),(35244,11774,152),(35245,11775,4),(35246,11775,5),(35247,11775,60),(35248,11776,36),(35249,11776,4),(35250,11776,5),(35251,11776,60),(35252,11777,4),(35253,11778,147),(35254,11778,40),(35255,11779,36),(35256,11779,5),(35257,11779,2),(35258,11780,7),(35259,11780,101),(35260,11780,5),(35261,11781,95),(35262,11781,21),(35263,11781,7),(35264,11782,101),(35265,11783,101),(35266,11784,34),(35267,11784,7),(35268,11785,101),(35269,11786,101),(35270,11787,34),(35271,11787,150),(35272,11788,4),(35273,11789,150),(35274,11790,8),(35275,11790,21),(35276,11791,7),(35277,11792,149),(35278,11792,7),(35279,11792,6),(35280,11792,2),(35281,11793,5),(35282,11794,8),(35283,11794,4),(35284,11794,12),(35285,11795,149),(35286,11795,8),(35287,11795,7),(35288,11795,12),(35289,11796,150),(35290,11796,101),(35291,11797,7),(35292,11797,101),(35293,11797,5),(35294,11798,2),(35295,11799,6),(35296,11800,101),(35297,11801,154),(35298,11802,50),(35299,11802,5),(35300,11802,30),(35301,11803,149),(35302,11803,7),(35303,11804,10),(35304,11804,150),(35305,11804,21),(35306,11804,7),(35307,11804,101),(35308,11804,5),(35309,11804,6),(35310,11805,36),(35311,11805,4),(35312,11805,5),(35313,11806,5),(35314,11806,30),(35315,11807,147),(35316,11807,149),(35317,11807,7),(35318,11807,101),(35319,11808,147),(35320,11808,101),(35321,11808,5),(35322,11809,101),(35323,11810,7),(35324,11810,5),(35325,11811,5),(35326,11812,2),(35327,11814,21),(35328,11815,154),(35329,11815,101),(35330,11816,149),(35331,11816,50),(35332,11817,153),(35333,11817,21),(35334,11818,149),(35335,11819,149),(35336,11819,150),(35337,11821,7),(35338,11822,149),(35339,11822,21),(35340,11824,150),(35341,11825,7),(35342,11825,101),(35343,11826,36),(35344,11827,146),(35345,11827,8),(35346,11827,21),(35347,11828,5),(35348,11829,5),(35349,11830,149),(35350,11831,21),(35351,11832,50),(35352,11833,21),(35353,11834,4),(35354,11835,150),(35355,11835,12),(35356,11836,4),(35357,11836,7),(35358,11836,5),(35359,11836,12),(35360,11837,34),(35361,11837,149),(35362,11837,101),(35363,11837,50),(35364,11838,149),(35365,11838,7),(35366,11838,5),(35367,11839,101),(35368,11839,6),(35369,11840,147),(35370,11840,149),(35371,11841,5),(35372,11842,36),(35373,11842,150),(35374,11842,4),(35375,11844,7),(35376,11844,101),(35377,11844,2),(35378,11845,149),(35379,11845,101),(35380,11845,12),(35381,11846,101),(35382,11846,5),(35383,11847,5),(35384,11848,101),(35385,11848,2),(35386,11849,36),(35387,11849,4),(35388,11849,101),(35389,11850,7),(35390,11850,101),(35391,11851,147),(35392,11851,101),(35393,11852,150),(35394,11853,150),(35395,11853,4),(35396,11853,40),(35397,11854,150),(35398,11854,101),(35399,11855,150),(35400,11855,12),(35401,11856,7),(35402,11856,2),(35403,11857,150),(35404,11857,4),(35405,11857,12),(35406,11858,153),(35407,11858,21),(35408,11859,4),(35409,11859,2),(35410,11859,12),(35411,11860,10),(35412,11860,4),(35413,11860,7),(35414,11861,149),(35415,11861,21),(35416,11861,101),(35417,11862,7),(35418,11862,6),(35419,11863,7),(35420,11864,101),(35421,11864,5),(35422,11865,150),(35423,11865,3),(35424,11865,2),(35425,11866,5),(35426,11866,60),(35427,11867,149),(35428,11867,101),(35429,11867,50),(35430,11868,10),(35431,11868,149),(35432,11868,7),(35433,11868,5),(35434,11868,30),(35435,11869,95),(35436,11869,21),(35437,11869,47),(35438,11869,6),(35439,11870,36),(35440,11870,4),(35441,11870,5),(35442,11871,149),(35443,11871,101),(35444,11872,149),(35445,11872,5),(35446,11873,150),(35447,11873,50),(35448,11873,6),(35449,11874,2),(35450,11875,149),(35451,11875,101),(35452,11875,5),(35453,11876,101),(35454,11877,5),(35455,11878,5),(35456,11879,149),(35457,11880,150),(35458,11880,4),(35459,11881,4),(35460,11882,7),(35461,11882,6),(35462,11883,10),(35463,11883,6),(35464,11885,7),(35465,11886,5),(35466,11887,150),(35467,11887,154),(35468,11888,4),(35469,11888,7),(35470,11889,150),(35471,11889,12),(35472,11890,21),(35473,11890,7),(35474,11890,47),(35475,11891,10),(35476,11891,5),(35477,11892,101),(35478,11892,5),(35479,11892,30),(35480,11893,7),(35481,11893,2),(35482,11894,101),(35483,11894,6),(35484,11895,101),(35485,11895,5),(35486,11896,150),(35487,11896,159),(35488,11897,8),(35489,11897,4),(35490,11897,7),(35491,11897,12),(35492,11898,34),(35493,11898,36),(35494,11898,4),(35495,11898,5),(35496,11899,10),(35497,11899,147),(35498,11899,150),(35499,11899,7),(35500,11900,10),(35501,11900,15),(35502,11901,101),(35503,11901,5),(35504,11902,101),(35505,11902,2),(35506,11903,10),(35507,11903,40),(35508,11904,149),(35509,11904,35),(35510,11904,40),(35511,11905,149),(35512,11906,101),(35513,11907,4),(35514,11908,153),(35515,11908,155),(35516,11908,21),(35517,11909,147),(35518,11909,101),(35519,11910,147),(35520,11910,4),(35521,11910,7),(35522,11910,101),(35523,11911,7),(35524,11912,10),(35525,11912,150),(35526,11913,7),(35527,11914,150),(35528,11914,7),(35529,11915,150),(35530,11915,7),(35531,11916,4),(35532,11916,21),(35533,11916,30),(35534,11916,47),(35535,11917,149),(35536,11917,21),(35537,11918,5),(35538,11918,30),(35539,11919,5),(35540,11920,4),(35541,11920,155),(35542,11920,5),(35543,11920,12),(35544,11921,4),(35545,11921,7),(35546,11921,5),(35547,11921,60),(35548,11922,149),(35549,11923,8),(35550,11923,21),(35551,11923,47),(35552,11924,4),(35553,11925,4),(35554,11926,150),(35555,11926,101),(35556,11926,5),(35557,11927,10),(35558,11927,101),(35559,11928,101),(35560,11929,7),(35561,11929,15),(35562,11930,5),(35563,11931,2),(35564,11932,8),(35565,11932,4),(35566,11932,12),(35567,11933,36),(35568,11933,2),(35569,11934,8),(35570,11934,4),(35571,11934,47),(35572,11935,7),(35573,11936,149),(35574,11936,21),(35575,11937,101),(35576,11937,5),(35577,11938,5),(35578,11939,147),(35579,11939,40),(35580,11939,5),(35581,11940,150),(35582,11940,4),(35583,11940,159),(35584,11941,149),(35585,11941,5),(35586,11942,147),(35587,11942,5),(35588,11943,10),(35589,11943,149),(35590,11943,40),(35591,11943,50),(35592,11944,21),(35593,11944,47),(35594,11945,149),(35595,11945,2),(35596,11946,8),(35597,11946,21),(35598,11947,10),(35599,11947,150),(35600,11947,8),(35601,11947,7),(35602,11947,12),(35603,11948,8),(35604,11948,21),(35605,11948,101),(35606,11948,5),(35607,11949,7),(35608,11949,101),(35609,11949,5),(35610,11950,7),(35611,11950,5),(35612,11950,30),(35613,11951,7),(35614,11951,101),(35615,11952,50),(35616,11952,60),(35617,11953,153),(35618,11953,21),(35619,11954,150),(35620,11954,7),(35621,11954,101),(35622,11954,6),(35623,11955,150),(35624,11955,4),(35625,11955,101),(35626,11955,5),(35627,11955,30),(35628,11956,7),(35629,11956,101),(35630,11956,6),(35631,11957,7),(35632,11957,101),(35633,11957,5),(35634,11958,149),(35635,11959,150),(35636,11960,36),(35637,11960,4),(35638,11961,8),(35639,11961,4),(35640,11961,12),(35641,11962,7),(35642,11962,5),(35643,11963,10),(35644,11963,101),(35645,11963,15),(35646,11964,7),(35647,11965,147),(35648,11966,10),(35649,11966,150),(35650,11966,4),(35651,11966,7),(35652,11966,12),(35653,11967,10),(35654,11967,40),(35655,11967,160),(35656,11968,149),(35657,11968,5),(35658,11969,101),(35659,11970,101),(35660,11971,145),(35661,11971,4),(35662,11972,145),(35663,11972,147),(35664,11973,145),(35665,11973,8),(35666,11973,12),(35667,11974,150),(35668,11974,2),(35669,11975,147),(35670,11975,150),(35671,11975,21),(35672,11976,10),(35673,11976,4),(35674,11976,5),(35675,11977,147),(35676,11977,150),(35677,11977,3),(35678,11977,2),(35679,11978,149),(35680,11978,8),(35681,11978,4),(35682,11978,21),(35683,11978,7),(35684,11978,6),(35685,11978,12),(35686,11979,7),(35687,11979,101),(35688,11979,50),(35689,11979,6),(35690,11980,5),(35691,11980,30),(35692,11981,101),(35693,11983,2),(35694,11983,12),(35695,11984,10),(35696,11984,4),(35697,11985,7),(35698,11985,101),(35699,11985,2),(35700,11986,5),(35701,11986,30),(35702,11987,95),(35703,11987,101),(35704,11988,21),(35705,11989,148),(35706,11989,152),(35707,11989,5),(35708,11989,30),(35709,11990,149),(35710,11990,7),(35711,11990,5),(35712,11991,153),(35713,11991,155),(35714,11992,149),(35715,11992,101),(35716,11992,5),(35717,11993,7),(35718,11993,101),(35719,11994,149),(35720,11994,101),(35721,11995,101),(35722,11996,101),(35723,11997,149),(35724,11997,12),(35725,11998,150),(35726,11998,95),(35727,11998,7),(35728,11999,21),(35729,11999,47),(35730,11999,12),(35731,12000,10),(35732,12000,150),(35733,12000,4),(35734,12000,3),(35735,12000,2),(35736,12001,34),(35737,12001,4),(35738,12002,147),(35739,12002,4),(35740,12002,7),(35741,12002,101),(35742,12002,5),(35743,12003,7),(35744,12003,5),(35745,12003,30),(35746,12004,7),(35747,12004,101),(35748,12004,2),(35749,12005,40),(35750,12005,5),(35751,12006,5),(35752,12007,40),(35753,12008,101),(35754,12009,7),(35755,12010,150),(35756,12010,2),(35757,12010,12),(35758,12011,3),(35759,12011,2),(35760,12012,5),(35761,12013,150),(35762,12014,40),(35763,12014,5),(35764,12015,149),(35765,12015,40),(35766,12016,5),(35767,12016,60),(35768,12016,12),(35769,12017,8),(35770,12017,21),(35771,12017,12),(35772,12018,3),(35773,12018,30),(35774,12019,150),(35775,12019,153),(35776,12019,155),(35777,12019,21),(35778,12019,12),(35779,12020,150),(35780,12021,101),(35781,12022,150),(35782,12022,95),(35783,12023,4),(35784,12023,40),(35785,12024,8),(35786,12024,50),(35787,12024,12),(35788,12025,10),(35789,12025,15),(35790,12026,150),(35791,12026,35),(35792,12026,3),(35793,12026,159),(35794,12026,2),(35795,12027,34),(35796,12027,36),(35797,12027,4),(35798,12027,5),(35799,12027,30),(35800,12027,47),(35801,12028,149),(35802,12028,7),(35803,12028,5),(35804,12028,6),(35805,12029,147),(35806,12029,36),(35807,12029,5),(35808,12029,157),(35809,12029,15),(35810,12030,149),(35811,12030,7),(35812,12030,101),(35813,12031,101),(35814,12032,101),(35815,12032,5),(35816,12033,150),(35817,12033,8),(35818,12033,95),(35819,12033,21),(35820,12033,7),(35821,12033,6),(35822,12033,12),(35823,12034,4),(35824,12034,5),(35825,12034,60),(35826,12035,150),(35827,12035,35),(35828,12035,15),(35829,12036,149),(35830,12036,7),(35831,12036,5),(35832,12037,34),(35833,12037,147),(35834,12037,4),(35835,12037,101),(35836,12038,10),(35837,12038,101),(35838,12039,150),(35839,12039,35),(35840,12039,4),(35841,12039,5),(35842,12040,149),(35843,12040,150),(35844,12040,21),(35845,12040,7),(35846,12041,10),(35847,12041,150),(35848,12041,15),(35849,12042,10),(35850,12042,150),(35851,12042,7),(35852,12042,15),(35853,12043,5),(35854,12044,7),(35855,12044,101),(35856,12044,6),(35857,12045,4),(35858,12045,7),(35859,12045,5),(35860,12046,7),(35861,12047,150),(35862,12048,150),(35863,12048,4),(35864,12048,12),(35865,12049,8),(35866,12049,95),(35867,12049,21),(35868,12049,5),(35869,12049,6),(35870,12050,10),(35871,12050,50),(35872,12050,60),(35873,12051,149),(35874,12051,150),(35875,12051,7),(35876,12051,5),(35877,12052,4),(35878,12052,2),(35879,12053,34),(35880,12053,147),(35881,12053,8),(35882,12053,4),(35883,12053,21),(35884,12054,4),(35885,12054,7),(35886,12054,101),(35887,12055,7),(35888,12055,6),(35889,12056,149),(35890,12056,5),(35891,12057,101),(35892,12057,2),(35893,12058,150),(35894,12058,159),(35895,12059,154),(35896,12060,36),(35897,12060,150),(35898,12060,5),(35899,12061,21),(35900,12062,8),(35901,12062,21),(35902,12062,47),(35903,12062,12),(35904,12063,4),(35905,12063,7),(35906,12063,2),(35907,12064,7),(35908,12065,149),(35909,12065,7),(35910,12065,5),(35911,12066,34),(35912,12066,147),(35913,12066,8),(35914,12067,36),(35915,12067,5),(35916,12067,30),(35917,12068,152),(35918,12068,40),(35919,12068,30),(35920,12069,7),(35921,12069,15),(35922,12070,36),(35923,12070,4),(35924,12071,5),(35925,12072,5),(35926,12073,34),(35927,12073,4),(35928,12073,5),(35929,12074,10),(35930,12074,150),(35931,12074,15),(35932,12075,36),(35933,12075,4),(35934,12075,30),(35935,12075,12),(35936,12076,147),(35937,12076,149),(35938,12076,153),(35939,12076,155),(35940,12077,30),(35941,12078,154),(35942,12079,34),(35943,12079,147),(35944,12079,152),(35945,12079,5),(35946,12080,10),(35947,12080,149),(35948,12080,8),(35949,12080,21),(35950,12080,50),(35951,12081,50),(35952,12081,5),(35953,12081,30),(35954,12082,147),(35955,12082,4),(35956,12082,154),(35957,12083,5),(35958,12083,30),(35959,12084,8),(35960,12084,21),(35961,12084,101),(35962,12086,4),(35963,12086,12),(35964,12087,4),(35965,12087,5),(35966,12088,40),(35967,12088,101),(35968,12089,149),(35969,12089,4),(35970,12092,147),(35971,12092,21),(35972,12092,5),(35973,12093,149),(35974,12094,7),(35975,12095,7),(35976,12097,101),(35977,12097,5),(35978,12098,30),(35979,12099,150),(35980,12100,34),(35981,12100,4),(35982,12101,40),(35983,12101,30),(35984,12102,101),(35985,12103,40),(35986,12104,101),(35987,12105,10),(35988,12105,147),(35989,12105,5),(35990,12105,30),(35991,12106,4),(35992,12106,21),(35993,12106,7),(35994,12107,101),(35995,12107,5),(35996,12108,7),(35997,12108,5),(35998,12108,6),(35999,12109,4),(36000,12109,7),(36001,12109,5),(36002,12110,101),(36003,12110,2),(36004,12111,5),(36005,12112,4),(36006,12112,50),(36007,12113,147),(36008,12114,149),(36009,12115,36),(36010,12115,150),(36011,12115,7),(36012,12116,40),(36013,12116,101),(36014,12116,6),(36015,12117,149),(36016,12117,5),(36017,12118,101),(36018,12119,34),(36019,12119,5),(36020,12119,30),(36021,12120,10),(36022,12120,8),(36023,12120,95),(36024,12120,155),(36025,12120,21),(36026,12121,36),(36027,12121,4),(36028,12121,5),(36029,12122,8),(36030,12122,21),(36031,12123,7),(36032,12124,101),(36033,12124,5),(36034,12125,101),(36035,12125,2),(36036,12126,149),(36037,12126,5),(36038,12127,40),(36039,12128,149),(36040,12128,101),(36041,12128,11),(36042,12129,147),(36043,12129,4),(36044,12129,5),(36045,12129,30),(36046,12129,12),(36047,12130,149),(36048,12130,101),(36049,12131,147),(36050,12131,7),(36051,12131,30),(36052,12132,101),(36053,12132,6),(36054,12133,150),(36055,12133,153),(36056,12133,12),(36057,12134,8),(36058,12134,95),(36059,12134,21),(36060,12134,12),(36061,12135,149),(36062,12135,50),(36063,12135,11),(36064,12136,149),(36065,12136,150),(36066,12137,7),(36067,12138,5),(36068,12139,147),(36069,12139,101),(36070,12139,2),(36071,12140,147),(36072,12140,8),(36073,12140,21),(36074,12141,5),(36075,12142,150),(36076,12142,35),(36077,12142,12),(36078,12143,10),(36079,12143,40),(36080,12143,6),(36081,12144,149),(36082,12144,21),(36083,12145,10),(36084,12145,50),(36085,12146,147),(36086,12146,7),(36087,12147,147),(36088,12148,150),(36089,12149,147),(36090,12149,5),(36091,12150,40),(36092,12150,3),(36093,12150,2),(36094,12151,34),(36095,12151,147),(36096,12151,150),(36097,12152,149),(36098,12152,7),(36099,12153,101),(36100,12153,5),(36101,12154,101),(36102,12155,34),(36103,12155,5),(36104,12155,30),(36105,12156,8),(36106,12156,4),(36107,12156,12),(36108,12157,10),(36109,12157,40),(36110,12158,149),(36111,12158,153),(36112,12158,5),(36113,12159,4),(36114,12159,101),(36115,12160,147),(36116,12160,101),(36117,12161,7),(36118,12161,101),(36119,12161,5),(36120,12162,4),(36121,12162,2),(36122,12163,10),(36123,12163,4),(36124,12163,7),(36125,12164,147),(36126,12164,4),(36127,12164,7),(36128,12165,149),(36129,12165,7),(36130,12166,6),(36131,12167,101),(36132,12168,101),(36133,12169,7),(36134,12170,5),(36135,12171,4),(36136,12171,101),(36137,12172,95),(36138,12172,5),(36139,12173,149),(36140,12173,2),(36141,12174,4),(36142,12175,149),(36143,12175,8),(36144,12175,95),(36145,12175,21),(36146,12175,11),(36147,12176,147),(36148,12176,101),(36149,12176,5),(36150,12176,6),(36151,12177,10),(36152,12177,147),(36153,12177,101),(36154,12178,7),(36155,12178,101),(36156,12178,6),(36157,12179,152),(36158,12179,21),(36159,12179,12),(36160,12180,150),(36161,12181,8),(36162,12181,21),(36163,12181,101),(36164,12181,12),(36165,12182,30),(36166,12183,10),(36167,12183,50),(36168,12184,10),(36169,12184,5),(36170,12185,34),(36171,12185,153),(36172,12185,155),(36173,12185,21),(36174,12185,7),(36175,12186,150),(36176,12186,95),(36177,12186,12),(36178,12187,36),(36179,12187,5),(36180,12187,60),(36181,12188,147),(36182,12188,149),(36183,12188,21),(36184,12188,7),(36185,12188,5),(36186,12189,7),(36187,12189,5),(36188,12190,7),(36189,12190,101),(36190,12191,101),(36191,12192,7),(36192,12192,6),(36193,12193,101),(36194,12193,2),(36195,12194,4),(36196,12195,146),(36197,12195,150),(36198,12195,12),(36199,12196,10),(36200,12196,50),(36201,12197,34),(36202,12197,147),(36203,12197,36),(36204,12197,5),(36205,12197,30),(36206,12198,36),(36207,12198,150),(36208,12198,5),(36209,12198,6),(36210,12198,15),(36211,12199,34),(36212,12199,147),(36213,12199,4),(36214,12199,157),(36215,12200,8),(36216,12200,21),(36217,12200,12),(36218,12201,101),(36219,12202,10),(36220,12202,150),(36221,12202,15),(36222,12203,7),(36223,12203,101),(36224,12203,6),(36225,12204,101),(36226,12205,147),(36227,12205,8),(36228,12205,21),(36229,12205,47),(36230,12206,6),(36231,12207,6),(36232,12208,4),(36233,12208,7),(36234,12208,30),(36235,12209,147),(36236,12209,7),(36237,12209,101),(36238,12210,147),(36239,12210,101),(36240,12210,2),(36241,12211,101),(36242,12212,34),(36243,12212,150),(36244,12212,35),(36245,12213,10),(36246,12213,150),(36247,12213,4),(36248,12213,7),(36249,12213,47),(36250,12213,12),(36251,12214,147),(36252,12214,149),(36253,12214,101),(36254,12215,149),(36255,12215,101),(36256,12216,149),(36257,12216,7),(36258,12216,101),(36259,12216,5),(36260,12217,101),(36261,12218,4),(36262,12218,3),(36263,12218,2),(36264,12219,149),(36265,12219,21),(36266,12220,7),(36267,12221,147),(36268,12221,101),(36269,12221,5),(36270,12222,149),(36271,12223,101),(36272,12224,145),(36273,12225,145),(36274,12226,145),(36275,12227,145),(36276,12228,145),(36277,12229,145),(36278,12230,145),(36279,12231,145),(36280,12232,145),(36281,12233,145),(36282,12234,145),(36283,12235,145),(36284,12236,145),(36285,12237,145),(36286,12238,145),(36287,12239,145),(36288,12240,145),(36289,12241,145),(36290,12242,145),(36291,12243,145),(36292,12244,145),(36293,12245,145),(36294,12246,145),(36295,12247,145),(36296,12248,150),(36297,12248,4),(36298,12248,12),(36299,12249,150),(36300,12249,35),(36301,12250,8),(36302,12250,21),(36303,12250,12),(36304,12251,36),(36305,12251,4),(36306,12252,150),(36307,12252,101),(36308,12252,6),(36309,12253,7),(36310,12254,7),(36311,12254,101),(36312,12255,4),(36313,12256,8),(36314,12256,21),(36315,12256,7),(36316,12257,150),(36317,12257,7),(36318,12257,101),(36319,12258,101),(36320,12259,101),(36321,12260,147),(36322,12260,101),(36323,12261,4),(36324,12261,7),(36325,12261,6),(36326,12262,149),(36327,12262,101),(36328,12263,150),(36329,12264,36),(36330,12264,35),(36331,12264,12),(36332,12265,36),(36333,12265,5),(36334,12266,147),(36335,12266,36),(36336,12266,4),(36337,12266,7),(36338,12266,5),(36339,12267,147),(36340,12267,7),(36341,12267,101),(36342,12267,5),(36343,12268,10),(36344,12268,5),(36345,12269,4),(36346,12269,7),(36347,12270,36),(36348,12270,4),(36349,12270,5),(36350,12270,12),(36351,12271,35),(36352,12271,21),(36353,12271,157),(36354,12271,30),(36355,12272,5),(36356,12273,147),(36357,12273,150),(36358,12273,40),(36359,12273,7),(36360,12273,5),(36361,12273,6),(36362,12274,7),(36363,12274,101),(36364,12274,5),(36365,12275,149),(36366,12275,101),(36367,12276,7),(36368,12276,101),(36369,12276,6),(36370,12277,101),(36371,12279,148),(36372,12279,152),(36373,12279,5),(36374,12280,10),(36375,12280,4),(36376,12280,7),(36377,12281,34),(36378,12281,147),(36379,12281,40),(36380,12282,34),(36381,12282,147),(36382,12283,40),(36383,12283,101),(36384,12284,10),(36385,12284,150),(36386,12285,147),(36387,12285,101),(36388,12285,5),(36389,12286,5),(36390,12287,5),(36391,12287,30),(36392,12288,101),(36393,12288,6),(36394,12289,147),(36395,12289,7),(36396,12289,101),(36397,12289,5),(36398,12290,147),(36399,12290,36),(36400,12290,5),(36401,12291,4),(36402,12291,7),(36403,12292,10),(36404,12292,101),(36405,12293,7),(36406,12293,6),(36407,12294,101),(36408,12295,35),(36409,12295,4),(36410,12295,95),(36411,12295,30),(36412,12295,12),(36413,12296,8),(36414,12296,4),(36415,12296,7),(36416,12296,12),(36417,12297,147),(36418,12297,7),(36419,12298,149),(36420,12298,21),(36421,12298,101),(36422,12299,101),(36423,12300,7),(36424,12300,6),(36425,12301,101),(36426,12301,5),(36427,12302,4),(36428,12302,40),(36429,12302,11),(36430,12302,60),(36431,12303,10),(36432,12303,40),(36433,12303,5),(36434,12303,6),(36435,12303,15),(36436,12304,149),(36437,12304,21),(36438,12305,149),(36439,12305,2),(36440,12306,101),(36441,12306,2),(36442,12307,4),(36443,12308,147),(36444,12308,7),(36445,12309,147),(36446,12309,5),(36447,12310,101),(36448,12310,6),(36449,12311,6),(36450,12311,2),(36451,12312,147),(36452,12312,101),(36453,12313,147),(36454,12313,4),(36455,12313,101),(36456,12314,5),(36457,12315,101),(36458,12316,21),(36459,12316,5),(36460,12316,30),(36461,12316,47),(36462,12317,147),(36463,12317,150),(36464,12317,5),(36465,12317,30),(36466,12317,12),(36467,12318,152),(36468,12318,5),(36469,12319,34),(36470,12319,8),(36471,12319,95),(36472,12319,21),(36473,12320,36),(36474,12320,5),(36475,12321,21),(36476,12321,7),(36477,12321,30),(36478,12321,47),(36479,12322,36),(36480,12323,3),(36481,12323,2),(36482,12324,10),(36483,12324,150),(36484,12324,4),(36485,12324,7),(36486,12324,15),(36487,12325,10),(36488,12325,149),(36489,12325,5),(36490,12326,7),(36491,12327,101),(36492,12328,101),(36493,12329,101),(36494,12330,6),(36495,12331,10),(36496,12331,150),(36497,12331,12),(36498,12332,150),(36499,12333,4),(36500,12333,21),(36501,12333,47),(36502,12334,4),(36503,12335,101),(36504,12335,5),(36505,12336,8),(36506,12336,21),(36507,12337,40),(36508,12337,30),(36509,12338,147),(36510,12338,150),(36511,12338,95),(36512,12338,12),(36513,12339,8),(36514,12339,4),(36515,12339,21),(36516,12339,7),(36517,12339,12),(36518,12340,150),(36519,12340,7),(36520,12340,101),(36521,12341,147),(36522,12341,149),(36523,12342,36),(36524,12342,150),(36525,12342,4),(36526,12342,152),(36527,12342,5),(36528,12343,150),(36529,12344,10),(36530,12344,155),(36531,12344,7),(36532,12345,34),(36533,12345,150),(36534,12345,35),(36535,12345,4),(36536,12346,34),(36537,12346,4),(36538,12346,7),(36539,12347,101),(36540,12347,12),(36541,12348,6),(36542,12349,147),(36543,12349,101),(36544,12349,2),(36545,12350,4),(36546,12350,21),(36547,12350,12),(36548,12351,150),(36549,12351,7),(36550,12351,12),(36551,12352,4),(36552,12352,5),(36553,12352,30),(36554,12353,154),(36555,12353,7),(36556,12354,149),(36557,12355,101),(36558,12355,5),(36559,12356,4),(36560,12357,10),(36561,12357,34),(36562,12357,147),(36563,12357,150),(36564,12357,4),(36565,12357,95),(36566,12357,7),(36567,12357,5),(36568,12357,30),(36569,12357,2),(36570,12357,12),(36571,12358,8),(36572,12358,12),(36573,12359,7),(36574,12360,5),(36575,12361,7),(36576,12361,101),(36577,12361,6),(36578,12362,10),(36579,12362,150),(36580,12362,101),(36581,12363,36),(36582,12363,5),(36583,12364,147),(36584,12364,101),(36585,12364,5),(36586,12365,10),(36587,12365,101),(36588,12365,15),(36589,12366,7),(36590,12366,2),(36591,12367,101),(36592,12368,4),(36593,12369,8),(36594,12369,95),(36595,12369,21),(36596,12370,8),(36597,12370,5),(36598,12370,6),(36599,12371,6),(36600,12372,101),(36601,12372,2),(36602,12373,101),(36603,12374,153),(36604,12374,21),(36605,12375,7),(36606,12375,6),(36607,12376,149),(36608,12376,21),(36609,12376,101),(36610,12377,7),(36611,12377,101),(36612,12377,6),(36613,12378,101),(36614,12378,5),(36615,12379,101),(36616,12380,40),(36617,12381,40),(36618,12381,5),(36619,12382,10),(36620,12383,147),(36621,12383,101),(36622,12384,101),(36623,12384,2),(36624,12385,5),(36625,12385,6),(36626,12386,101),(36627,12387,150),(36628,12387,4),(36629,12387,7),(36630,12387,2),(36631,12387,12),(36632,12388,10),(36633,12388,153),(36634,12388,7),(36635,12388,15),(36636,12389,5),(36637,12390,101),(36638,12391,5),(36639,12392,5),(36640,12393,5),(36641,12394,5),(36642,12395,3),(36643,12395,159),(36644,12395,2),(36645,12396,147),(36646,12396,5),(36647,12396,30),(36648,12397,149),(36649,12397,8),(36650,12397,4),(36651,12397,7),(36652,12397,12),(36653,12398,5),(36654,12398,30),(36655,12399,150),(36656,12399,95),(36657,12399,40),(36658,12399,12),(36659,12400,8),(36660,12400,21),(36661,12400,12),(36662,12401,149),(36663,12401,7),(36664,12402,150),(36665,12402,101),(36666,12403,147),(36667,12403,101),(36668,12403,5),(36669,12404,149),(36670,12404,7),(36671,12404,101),(36672,12405,101),(36673,12406,36),(36674,12406,5),(36675,12406,30),(36676,12407,10),(36677,12407,3),(36678,12407,159),(36679,12408,150),(36680,12409,40),(36681,12410,34),(36682,12410,147),(36683,12410,101),(36684,12411,150),(36685,12411,4),(36686,12411,101),(36687,12411,15),(36688,12412,101),(36689,12413,150),(36690,12413,12),(36691,12414,36),(36692,12414,4),(36693,12414,152),(36694,12414,5),(36695,12415,150),(36696,12415,4),(36697,12415,21),(36698,12416,36),(36699,12416,8),(36700,12416,35),(36701,12416,4),(36702,12416,60),(36703,12416,12),(36704,12417,147),(36705,12417,101),(36706,12417,12),(36707,12418,34),(36708,12418,149),(36709,12418,7),(36710,12418,101),(36711,12419,150),(36712,12419,7),(36713,12419,6),(36714,12420,101),(36715,12421,34),(36716,12421,4),(36717,12421,5),(36718,12421,11),(36719,12422,34),(36720,12422,4),(36721,12422,21),(36722,12422,101),(36723,12422,5),(36724,12423,149),(36725,12423,7),(36726,12423,5),(36727,12423,30),(36728,12424,149),(36729,12424,12),(36730,12425,95),(36731,12425,7),(36732,12425,101),(36733,12426,154),(36734,12426,5),(36735,12427,152),(36736,12428,10),(36737,12428,15),(36738,12429,101),(36739,12430,40),(36740,12431,10),(36741,12431,4),(36742,12431,7),(36743,12431,6),(36744,12432,147),(36745,12432,40),(36746,12432,7),(36747,12432,5),(36748,12434,151),(36749,12434,5),(36750,12435,150),(36751,12435,4),(36752,12436,4),(36753,12437,147),(36754,12438,150),(36755,12438,8),(36756,12438,21),(36757,12438,7),(36758,12438,12),(36759,12439,101),(36760,12441,3),(36761,12441,2),(36762,12442,101),(36763,12443,101),(36764,12444,4),(36765,12444,12),(36766,12446,147),(36767,12446,2),(36768,12447,10),(36769,12447,5),(36770,12447,30),(36771,12448,101),(36772,12449,7),(36773,12449,5),(36774,12450,152),(36775,12450,5),(36776,12451,36),(36777,12451,4),(36778,12452,10),(36779,12452,150),(36780,12452,7),(36781,12452,15),(36782,12453,4),(36783,12453,11),(36784,12453,6),(36785,12454,10),(36786,12454,7),(36787,12454,6),(36788,12455,8),(36789,12455,21),(36790,12455,47),(36791,12456,101),(36792,12457,101),(36793,12457,2),(36794,12458,101),(36795,12459,149),(36796,12462,60),(36797,12463,101),(36798,12464,147),(36799,12464,50),(36800,12465,5),(36801,12466,7),(36802,12466,101),(36803,12467,101),(36804,12467,5),(36805,12468,40),(36806,12468,60),(36807,12469,147),(36808,12470,10),(36809,12470,147),(36810,12470,7),(36811,12470,6),(36812,12471,8),(36813,12471,21),(36814,12472,149),(36815,12472,5),(36816,12473,7),(36817,12474,147),(36818,12474,8),(36819,12474,21),(36820,12474,101),(36821,12475,150),(36822,12475,4),(36823,12476,36),(36824,12476,4),(36825,12476,11),(36826,12477,7),(36827,12477,101),(36828,12478,4),(36829,12479,7),(36830,12479,2),(36831,12480,5),(36832,12480,30),(36833,12481,7),(36834,12482,147),(36835,12482,150),(36836,12483,150),(36837,12483,4),(36838,12483,7),(36839,12483,5),(36840,12484,10),(36841,12484,101),(36842,12485,149),(36843,12485,101),(36844,12485,2),(36845,12486,4),(36846,12486,7),(36847,12487,147),(36848,12487,7),(36849,12487,6),(36850,12488,150),(36851,12488,4),(36852,12489,10),(36853,12489,7),(36854,12489,160),(36855,12489,15),(36856,12490,8),(36857,12490,95),(36858,12490,21),(36859,12490,7),(36860,12490,2),(36861,12491,10),(36862,12491,15),(36863,12492,101),(36864,12493,21),(36865,12494,34),(36866,12494,150),(36867,12494,95),(36868,12494,21),(36869,12495,34),(36870,12495,4),(36871,12495,7),(36872,12496,36),(36873,12496,5),(36874,12497,150),(36875,12497,21),(36876,12497,47),(36877,12498,10),(36878,12498,147),(36879,12498,149),(36880,12499,147),(36881,12499,7),(36882,12500,101),(36883,12501,147),(36884,12501,5),(36885,12501,30),(36886,12502,101),(36887,12502,6),(36888,12503,150),(36889,12503,8),(36890,12503,35),(36891,12503,95),(36892,12503,47),(36893,12503,12),(36894,12504,4),(36895,12504,7),(36896,12505,149),(36897,12505,101),(36898,12505,2),(36899,12506,8),(36900,12506,4),(36901,12506,154),(36902,12506,21),(36903,12507,10),(36904,12507,101),(36905,12507,5),(36906,12508,150),(36907,12508,7),(36908,12509,8),(36909,12509,4),(36910,12509,12),(36911,12510,5),(36912,12510,60),(36913,12511,40),(36914,12512,101),(36915,12513,147),(36916,12513,101),(36917,12514,149),(36918,12514,101),(36919,12515,147),(36920,12515,154),(36921,12516,149),(36922,12516,4),(36923,12517,147),(36924,12517,36),(36925,12517,5),(36926,12518,40),(36927,12518,21),(36928,12519,5),(36929,12520,4),(36930,12521,4),(36931,12521,159),(36932,12521,2),(36933,12522,150),(36934,12522,4),(36935,12522,40),(36936,12523,36),(36937,12523,4),(36938,12523,5),(36939,12524,10),(36940,12524,4),(36941,12524,12),(36942,12525,147),(36943,12525,149),(36944,12526,10),(36945,12526,150),(36946,12526,8),(36947,12527,149),(36948,12528,101),(36949,12528,5),(36950,12529,149),(36951,12529,101),(36952,12530,147),(36953,12530,7),(36954,12530,101),(36955,12530,5),(36956,12531,150),(36957,12531,4),(36958,12531,5),(36959,12532,150),(36960,12532,154),(36961,12532,101),(36962,12533,150),(36963,12533,4),(36964,12534,101),(36965,12534,60),(36966,12534,2),(36967,12535,8),(36968,12535,21),(36969,12535,12),(36970,12537,145),(36971,12537,36),(36972,12537,5),(36973,12538,145),(36974,12538,101),(36975,12539,145),(36976,12539,7),(36977,12539,101),(36978,12540,145),(36979,12540,2),(36980,12540,12),(36981,12541,145),(36982,12541,21),(36983,12541,101),(36984,12542,145),(36985,12542,4),(36986,12543,145),(36987,12543,2),(36988,12544,145),(36989,12544,50),(36990,12545,150),(36991,12550,149),(36992,12550,150),(36993,12552,101),(36994,12553,5),(36995,12553,30),(36996,12554,101),(36997,12554,5),(36998,12555,10),(36999,12555,153),(37000,12556,150),(37001,12556,12),(37002,12557,149),(37003,12558,149),(37004,12558,5),(37005,12559,10),(37006,12559,101),(37007,12559,6),(37008,12560,10),(37009,12561,4),(37010,12562,4),(37011,12562,7),(37012,12564,150),(37013,12564,4),(37014,12564,7),(37015,12565,10),(37016,12565,7),(37017,12565,15),(37018,12566,7),(37019,12566,101),(37020,12567,149),(37021,12567,21),(37022,12567,12),(37023,12568,152),(37024,12568,5),(37025,12568,11),(37026,12569,149),(37027,12569,101),(37028,12569,2),(37029,12570,150),(37030,12570,7),(37031,12570,2),(37032,12570,12),(37033,12571,10),(37034,12571,150),(37035,12572,5),(37036,12572,30),(37037,12573,149),(37038,12573,4),(37039,12573,7),(37040,12573,30),(37041,12574,4),(37042,12575,7),(37043,12575,6),(37044,12576,147),(37045,12576,30),(37046,12577,147),(37047,12578,101),(37048,12593,10),(37049,12593,34),(37050,12593,147),(37051,12593,36),(37052,12593,5),(37053,12593,30),(37054,12594,147),(37055,12594,150),(37056,12594,95),(37057,12594,30),(37058,12595,150),(37059,12595,8),(37060,12595,95),(37061,12595,21),(37062,12596,4),(37063,12596,7),(37064,12596,101),(37065,12597,8),(37066,12597,7),(37067,12597,5),(37068,12597,6),(37069,12597,15),(37070,12598,101),(37071,12599,101),(37072,12600,154),(37073,12600,21),(37074,12600,47),(37075,12601,148),(37076,12601,5),(37077,12601,30),(37078,12602,8),(37079,12602,4),(37080,12602,21),(37081,12603,147),(37082,12603,101),(37083,12604,10),(37084,12604,147),(37085,12604,4),(37086,12604,101),(37087,12604,30),(37088,12605,147),(37089,12605,7),(37090,12605,101),(37091,12606,101),(37092,12606,2),(37093,12607,147),(37094,12607,101),(37095,12608,150),(37096,12608,159),(37097,12608,2),(37098,12608,12),(37099,12609,4),(37100,12609,5),(37101,12609,11),(37102,12609,12),(37103,12610,36),(37104,12610,4),(37105,12610,11),(37106,12611,8),(37107,12611,4),(37108,12611,154),(37109,12611,21),(37110,12612,4),(37111,12612,7),(37112,12612,101),(37113,12612,5),(37114,12613,150),(37115,12613,12),(37116,12614,150),(37117,12614,50),(37118,12614,12),(37119,12615,149),(37120,12615,21),(37121,12615,47),(37122,12616,34),(37123,12616,7),(37124,12616,5),(37125,12617,147),(37126,12617,101),(37127,12617,5),(37128,12618,5),(37129,12618,30),(37130,12619,150),(37131,12619,95),(37132,12619,21),(37133,12619,12),(37134,12620,150),(37135,12620,101),(37136,12620,6),(37137,12621,8),(37138,12621,21),(37139,12622,4),(37140,12622,7),(37141,12623,101),(37142,12624,101),(37143,12625,36),(37144,12625,4),(37145,12625,154),(37146,12625,12),(37147,12626,34),(37148,12626,35),(37149,12626,4),(37150,12626,152),(37151,12626,5),(37152,12627,34),(37153,12627,147),(37154,12627,150),(37155,12627,159),(37156,12627,2),(37157,12628,34),(37158,12628,150),(37159,12628,35),(37160,12628,12),(37161,12629,150),(37162,12629,30),(37163,12630,147),(37164,12630,36),(37165,12630,4),(37166,12631,154),(37167,12631,7),(37168,12631,101),(37169,12632,147),(37170,12632,101),(37171,12632,5),(37172,12633,5),(37173,12633,60),(37174,12634,5),(37175,12634,30),(37176,12635,4),(37177,12635,21),(37178,12635,5),(37179,12635,60),(37180,12636,34),(37181,12636,4),(37182,12636,47),(37183,12637,10),(37184,12637,147),(37185,12637,150),(37186,12637,7),(37187,12637,6),(37188,12638,34),(37189,12638,4),(37190,12638,7),(37191,12639,101),(37192,12639,12),(37193,12640,101),(37194,12640,5),(37195,12641,10),(37196,12641,8),(37197,12641,5),(37198,12641,157),(37199,12641,30),(37200,12641,15),(37201,12642,150),(37202,12642,21),(37203,12642,7),(37204,12642,60),(37205,12642,47),(37206,12643,147),(37207,12643,7),(37208,12643,6),(37209,12644,34),(37210,12644,149),(37211,12644,30),(37212,12645,101),(37213,12646,150),(37214,12647,149),(37215,12647,8),(37216,12647,21),(37217,12647,7),(37218,12647,12),(37219,12648,149),(37220,12648,150),(37221,12648,7),(37222,12648,101),(37223,12649,147),(37224,12649,5),(37225,12650,147),(37226,12650,149),(37227,12651,10),(37228,12651,147),(37229,12651,101),(37230,12652,101),(37231,12653,149),(37232,12653,7),(37233,12653,5),(37234,12654,7),(37235,12654,101),(37236,12655,8),(37237,12655,4),(37238,12655,7),(37239,12655,101),(37240,12656,149),(37241,12657,8),(37242,12657,4),(37243,12657,21),(37244,12657,7),(37245,12658,150),(37246,12658,7),(37247,12658,101),(37248,12659,4),(37249,12660,149),(37250,12660,5),(37251,12661,147),(37252,12661,7),(37253,12661,6),(37254,12663,4),(37255,12663,5),(37256,12664,21),(37257,12664,7),(37258,12664,101),(37259,12665,34),(37260,12665,36),(37261,12665,4),(37262,12665,5),(37263,12666,4),(37264,12666,5),(37265,12666,60),(37266,12667,147),(37267,12667,40),(37268,12667,101),(37269,12667,5),(37270,12668,147),(37271,12668,101),(37272,12669,147),(37273,12669,101),(37274,12670,101),(37275,12671,147),(37276,12671,101),(37277,12672,4),(37278,12672,159),(37279,12672,2),(37280,12673,148),(37281,12673,5),(37282,12673,30),(37283,12674,34),(37284,12674,147),(37285,12674,4),(37286,12674,21),(37287,12675,147),(37288,12675,149),(37289,12675,5),(37290,12676,101),(37291,12676,2),(37292,12677,150),(37293,12677,153),(37294,12677,21),(37295,12678,34),(37296,12678,4),(37297,12679,147),(37298,12679,3),(37299,12679,101),(37300,12679,2),(37301,12680,150),(37302,12680,5),(37303,12681,7),(37304,12682,7),(37305,12682,101),(37306,12683,7),(37307,12683,101),(37308,12684,8),(37309,12684,95),(37310,12684,7),(37311,12685,7),(37312,12685,101),(37313,12686,152),(37314,12686,5),(37315,12687,149),(37316,12687,8),(37317,12687,21),(37318,12688,10),(37319,12688,150),(37320,12688,8),(37321,12688,95),(37322,12688,21),(37323,12688,15),(37324,12689,149),(37325,12689,5),(37326,12690,149),(37327,12690,12),(37328,12691,150),(37329,12691,4),(37330,12691,2),(37331,12692,34),(37332,12692,36),(37333,12692,4),(37334,12692,5),(37335,12692,30),(37336,12693,147),(37337,12693,150),(37338,12693,5),(37339,12694,5),(37340,12694,30),(37341,12695,40),(37342,12695,101),(37343,12696,150),(37344,12696,2),(37345,12697,150),(37346,12697,95),(37347,12697,153),(37348,12697,101),(37349,12697,15),(37350,12698,149),(37351,12698,5),(37352,12699,149),(37353,12699,21),(37354,12699,5),(37355,12700,101),(37356,12701,149),(37357,12701,7),(37358,12701,5),(37359,12702,147),(37360,12702,3),(37361,12702,5),(37362,12703,149),(37363,12703,7),(37364,12704,7),(37365,12705,101),(37366,12705,2),(37367,12706,147),(37368,12706,101),(37369,12706,30),(37370,12707,101),(37371,12707,5),(37372,12708,147),(37373,12709,101),(37374,12710,150),(37375,12710,95),(37376,12711,148),(37377,12711,36),(37378,12711,5),(37379,12711,30),(37380,12712,150),(37381,12712,60),(37382,12713,10),(37383,12713,149),(37384,12713,154),(37385,12713,7),(37386,12713,50),(37387,12714,10),(37388,12714,8),(37389,12715,150),(37390,12715,60),(37391,12716,36),(37392,12716,5),(37393,12716,2),(37394,12717,34),(37395,12717,36),(37396,12717,4),(37397,12717,5),(37398,12718,10),(37399,12718,5),(37400,12718,6),(37401,12718,15),(37402,12719,147),(37403,12719,101),(37404,12720,4),(37405,12720,21),(37406,12721,147),(37407,12721,150),(37408,12721,12),(37409,12722,149),(37410,12722,5),(37411,12723,36),(37412,12723,149),(37413,12723,5),(37414,12723,30),(37415,12724,147),(37416,12724,4),(37417,12725,150),(37418,12725,12),(37419,12726,36),(37420,12726,4),(37421,12726,5),(37422,12726,30),(37423,12727,150),(37424,12727,4),(37425,12727,7),(37426,12727,101),(37427,12728,8),(37428,12728,21),(37429,12728,7),(37430,12729,147),(37431,12729,101),(37432,12730,101),(37433,12731,7),(37434,12731,101),(37435,12731,15),(37436,12732,7),(37437,12732,101),(37438,12733,36),(37439,12733,5),(37440,12733,11),(37441,12734,8),(37442,12734,4),(37443,12734,155),(37444,12734,12),(37445,12735,150),(37446,12735,95),(37447,12735,21),(37448,12736,149),(37449,12736,7),(37450,12737,147),(37451,12737,4),(37452,12737,7),(37453,12737,5),(37454,12737,30),(37455,12738,10),(37456,12738,4),(37457,12738,5),(37458,12739,34),(37459,12739,149),(37460,12739,150),(37461,12740,4),(37462,12740,21),(37463,12741,34),(37464,12741,35),(37465,12741,157),(37466,12742,36),(37467,12742,4),(37468,12742,5),(37469,12743,10),(37470,12743,101),(37471,12743,15),(37472,12744,7),(37473,12745,147),(37474,12745,101),(37475,12746,7),(37476,12746,6),(37477,12747,10),(37478,12747,40),(37479,12747,6),(37480,12748,150),(37481,12748,15),(37482,12749,147),(37483,12749,101),(37484,12750,147),(37485,12750,101),(37486,12751,101),(37487,12752,40),(37488,12753,36),(37489,12753,4),(37490,12753,5),(37491,12754,149),(37492,12754,21),(37493,12754,101),(37494,12755,95),(37495,12755,7),(37496,12755,101),(37497,12755,12),(37498,12757,147),(37499,12758,153),(37500,12758,21),(37501,12758,7),(37502,12759,95),(37503,12760,150),(37504,12760,7),(37505,12761,8),(37506,12761,7),(37507,12761,5),(37508,12762,101),(37509,12763,101),(37510,12764,7),(37511,12764,5),(37512,12765,150),(37513,12766,149),(37514,12766,7),(37515,12766,101),(37516,12767,149),(37517,12767,7),(37518,12767,6),(37519,12768,10),(37520,12768,4),(37521,12769,147),(37522,12769,101),(37523,12769,2),(37524,12770,8),(37525,12770,21),(37526,12771,101),(37527,12772,101),(37528,12772,2),(37529,12773,10),(37530,12773,4),(37531,12773,5),(37532,12774,10),(37533,12774,101),(37534,12775,149),(37535,12775,21),(37536,12775,7),(37537,12776,101),(37538,12777,150),(37539,12777,101),(37540,12778,101),(37541,12779,36),(37542,12779,4),(37543,12780,34),(37544,12781,150),(37545,12781,21),(37546,12782,150),(37547,12782,101),(37548,12783,34),(37549,12783,149),(37550,12784,150),(37551,12784,153),(37552,12784,3),(37553,12785,34),(37554,12785,150),(37555,12785,12),(37556,12786,150),(37557,12786,8),(37558,12786,21),(37559,12786,47),(37560,12787,149),(37561,12788,147),(37562,12788,4),(37563,12789,101),(37564,12789,2),(37565,12790,101),(37566,12790,5),(37567,12790,30),(37568,12791,5),(37569,12792,95),(37570,12792,21),(37571,12792,7),(37572,12793,10),(37573,12793,150),(37574,12793,4),(37575,12794,10),(37576,12794,34),(37577,12794,36),(37578,12794,150),(37579,12794,35),(37580,12795,146),(37581,12795,8),(37582,12795,21),(37583,12795,101),(37584,12796,95),(37585,12796,101),(37586,12796,6),(37587,12796,15),(37588,12797,147),(37589,12797,5),(37590,12798,95),(37591,12798,159),(37592,12798,2),(37593,12799,147),(37594,12799,150),(37595,12799,4),(37596,12800,149),(37597,12800,35),(37598,12801,7),(37599,12801,15),(37600,12802,4),(37601,12802,101),(37602,12803,101),(37603,12804,21),(37604,12804,7),(37605,12804,12),(37606,12805,150),(37607,12805,30),(37608,12806,8),(37609,12806,95),(37610,12806,21),(37611,12806,12),(37612,12807,147),(37613,12807,50),(37614,12807,60),(37615,12808,4),(37616,12808,7),(37617,12808,5),(37618,12808,30),(37619,12809,7),(37620,12810,147),(37621,12810,101),(37622,12811,150),(37623,12811,3),(37624,12812,147),(37625,12812,8),(37626,12812,21),(37627,12813,36),(37628,12813,4),(37629,12813,5),(37630,12814,5),(37631,12815,147),(37632,12815,101),(37633,12816,5),(37634,12817,35),(37635,12817,4),(37636,12818,4),(37637,12818,21),(37638,12818,12),(37639,12819,34),(37640,12819,147),(37641,12819,4),(37642,12819,101),(37643,12819,2),(37644,12820,34),(37645,12820,147),(37646,12820,149),(37647,12820,4),(37648,12821,101),(37649,12822,147),(37650,12822,101),(37651,12822,2),(37652,12823,101),(37653,12824,36),(37654,12824,5),(37655,12824,11),(37656,12825,34),(37657,12825,147),(37658,12825,35),(37659,12825,5),(37660,12825,157),(37661,12826,34),(37662,12826,147),(37663,12826,4),(37664,12826,21),(37665,12827,149),(37666,12827,150),(37667,12827,7),(37668,12828,10),(37669,12828,4),(37670,12829,10),(37671,12829,6),(37672,12829,160),(37673,12830,149),(37674,12831,8),(37675,12831,21),(37676,12831,12),(37677,12832,4),(37678,12832,6),(37679,12833,7),(37680,12833,101),(37681,12833,5),(37682,12834,7),(37683,12834,101),(37684,12834,5),(37685,12835,147),(37686,12835,101),(37687,12835,2),(37688,12836,101),(37689,12836,6),(37690,12838,153),(37691,12839,150),(37692,12839,6),(37693,12840,150),(37694,12840,101),(37695,12841,21),(37696,12841,101),(37697,12842,147),(37698,12842,7),(37699,12842,6),(37700,12843,147),(37701,12843,101),(37702,12844,150),(37703,12844,2),(37704,12845,10),(37705,12845,150),(37706,12845,6),(37707,12846,10),(37708,12846,35),(37709,12846,50),(37710,12847,149),(37711,12848,8),(37712,12848,21),(37713,12848,12),(37714,12849,7),(37715,12849,101),(37716,12850,150),(37717,12850,8),(37718,12850,12),(37719,12851,5),(37720,12852,7),(37721,12853,36),(37722,12853,8),(37723,12853,95),(37724,12853,21),(37725,12853,12),(37726,12854,4),(37727,12854,60),(37728,12854,12),(37729,12855,4),(37730,12855,154),(37731,12856,147),(37732,12856,40),(37733,12856,5),(37734,12857,7),(37735,12857,101),(37736,12858,149),(37737,12858,8),(37738,12858,21),(37739,12859,7),(37740,12859,101),(37741,12860,150),(37742,12860,101),(37743,12860,6),(37744,12861,4),(37745,12861,7),(37746,12861,101),(37747,12862,147),(37748,12862,101),(37749,12863,147),(37750,12863,5),(37751,12863,30),(37752,12864,7),(37753,12866,4),(37754,12866,12),(37755,12867,36),(37756,12867,4),(37757,12867,5),(37758,12868,4),(37759,12868,3),(37760,12868,2),(37761,12868,12),(37762,12869,147),(37763,12869,149),(37764,12870,8),(37765,12870,4),(37766,12870,21),(37767,12870,12),(37768,12871,10),(37769,12871,150),(37770,12872,34),(37771,12872,4),(37772,12873,12),(37773,12874,4),(37774,12874,12),(37775,12875,147),(37776,12875,150),(37777,12875,4),(37778,12876,147),(37779,12876,101),(37780,12876,2),(37781,12877,149),(37782,12877,5),(37783,12878,147),(37784,12878,149),(37785,12878,5),(37786,12879,150),(37787,12879,40),(37788,12880,10),(37789,12880,4),(37790,12880,7),(37791,12881,150),(37792,12882,7),(37793,12882,6),(37794,12882,15),(37795,12883,7),(37796,12884,147),(37797,12884,8),(37798,12884,21),(37799,12884,12),(37800,12885,4),(37801,12885,40),(37802,12886,101),(37803,12887,36),(37804,12887,5),(37805,12887,30),(37806,12888,4),(37807,12889,10),(37808,12889,153),(37809,12889,155),(37810,12889,47),(37811,12890,7),(37812,12890,6),(37813,12891,4),(37814,12891,11),(37815,12892,147),(37816,12892,101),(37817,12892,5),(37818,12893,40),(37819,12893,5),(37820,12894,101),(37821,12894,5),(37822,12895,5),(37823,12896,34),(37824,12896,147),(37825,12896,35),(37826,12896,152),(37827,12896,5),(37828,12897,149),(37829,12897,4),(37830,12897,21),(37831,12897,7),(37832,12897,5),(37833,12898,34),(37834,12898,4),(37835,12898,154),(37836,12899,101),(37837,12899,30),(37838,12900,147),(37839,12900,40),(37840,12900,5),(37841,12901,147),(37842,12901,40),(37843,12902,101),(37844,12903,36),(37845,12903,35),(37846,12903,4),(37847,12903,152),(37848,12903,5),(37849,12904,36),(37850,12904,4),(37851,12904,153),(37852,12904,21),(37853,12905,150),(37854,12905,35),(37855,12906,149),(37856,12906,150),(37857,12906,40),(37858,12906,101),(37859,12906,6),(37860,12906,15),(37861,12907,149),(37862,12908,101),(37863,12908,5),(37864,12909,149),(37865,12909,8),(37866,12909,21),(37867,12909,3),(37868,12909,12),(37869,12910,7),(37870,12910,101),(37871,12910,6),(37872,12911,10),(37873,12911,153),(37874,12911,21),(37875,12912,8),(37876,12912,101),(37877,12912,5),(37878,12913,7),(37879,12914,101),(37880,12915,7),(37881,12915,6),(37882,12916,10),(37883,12916,4),(37884,12917,149),(37885,12917,150),(37886,12917,7),(37887,12918,149),(37888,12919,10),(37889,12919,150),(37890,12920,101),(37891,12921,150),(37892,12921,5),(37893,12921,60),(37894,12921,15),(37895,12922,8),(37896,12922,7),(37897,12922,12),(37898,12923,10),(37899,12923,150),(37900,12924,147),(37901,12924,150),(37902,12924,4),(37903,12925,147),(37904,12925,7),(37905,12926,147),(37906,12926,101),(37907,12927,8),(37908,12927,21),(37909,12927,5),(37910,12928,34),(37911,12928,4),(37912,12929,10),(37913,12929,150),(37914,12930,150),(37915,12930,4),(37916,12930,7),(37917,12931,150),(37918,12931,7),(37919,12931,6),(37920,12932,147),(37921,12932,7),(37922,12932,101),(37923,12933,101),(37924,12933,6),(37925,12934,36),(37926,12934,5),(37927,12935,7),(37928,12935,101),(37929,12935,2),(37930,12936,153),(37931,12936,21),(37932,12937,21),(37933,12937,47),(37934,12938,149),(37935,12938,8),(37936,12938,21),(37937,12938,5),(37938,12938,12),(37939,12939,147),(37940,12939,50),(37941,12939,60),(37942,12940,8),(37943,12940,95),(37944,12940,101),(37945,12940,5),(37946,12940,6),(37947,12941,10),(37948,12941,8),(37949,12941,35),(37950,12941,21),(37951,12941,12),(37952,12942,10),(37953,12942,150),(37954,12943,8),(37955,12943,21),(37956,12943,5),(37957,12943,30),(37958,12943,12),(37959,12944,40),(37960,12945,147),(37961,12945,15),(37962,12946,154),(37963,12946,5),(37964,12947,147),(37965,12947,101),(37966,12948,12),(37967,12949,150),(37968,12949,60),(37969,12950,36),(37970,12950,4),(37971,12951,149),(37972,12951,150),(37973,12951,8),(37974,12951,4),(37975,12951,21),(37976,12952,36),(37977,12952,7),(37978,12952,5),(37979,12952,30),(37980,12952,6),(37981,12953,147),(37982,12953,21),(37983,12953,5),(37984,12953,157),(37985,12954,36),(37986,12954,4),(37987,12954,5),(37988,12954,30),(37989,12955,8),(37990,12955,4),(37991,12955,21),(37992,12955,60),(37993,12955,12),(37994,12956,147),(37995,12956,7),(37996,12956,101),(37997,12957,101),(37998,12959,4),(37999,12960,5),(38000,12960,30),(38001,12961,4),(38002,12961,154),(38003,12962,150),(38004,12962,8),(38005,12962,12),(38006,12963,147),(38007,12964,150),(38008,12965,10),(38009,12965,147),(38010,12965,36),(38011,12965,5),(38012,12965,11),(38013,12966,10),(38014,12966,101),(38015,12966,5),(38016,12967,4),(38017,12967,5),(38018,12968,147),(38019,12968,101),(38020,12969,147),(38021,12969,101),(38022,12970,101),(38023,12971,8),(38024,12971,4),(38025,12971,21),(38026,12971,12),(38027,12972,10),(38028,12972,149),(38029,12972,50),(38030,12973,147),(38031,12973,4),(38032,12973,3),(38033,12973,2),(38034,12974,4),(38035,12974,101),(38036,12975,7),(38037,12976,5),(38038,12977,150),(38039,12977,101),(38040,12978,101),(38041,12979,150),(38042,12979,4),(38043,12979,6),(38044,12980,150),(38045,12980,35),(38046,12980,101),(38047,12980,12),(38048,12981,147),(38049,12981,36),(38050,12981,7),(38051,12981,5),(38052,12982,10),(38053,12982,150),(38054,12982,35),(38055,12982,4),(38056,12982,15),(38057,12983,5),(38058,12983,30),(38059,12984,11),(38060,12985,8),(38061,12985,21),(38062,12985,12),(38063,12986,10),(38064,12986,101),(38065,12986,5),(38066,12987,101),(38067,12987,2),(38068,12988,154),(38069,12988,5),(38070,12989,147),(38071,12989,149),(38072,12990,101),(38073,12990,2),(38074,12991,101),(38075,12992,149),(38076,12992,4),(38077,12992,21),(38078,12992,101),(38079,12992,5),(38080,12992,12),(38081,12993,36),(38082,12993,4),(38083,12993,21),(38084,12993,12),(38085,12994,147),(38086,12994,150),(38087,12994,101),(38088,12994,5),(38089,12994,30),(38090,12994,6),(38091,12994,15),(38092,12995,150),(38093,12995,101),(38094,12995,6),(38095,12996,10),(38096,12996,147),(38097,12996,4),(38098,12996,7),(38099,12996,6),(38100,12997,101),(38101,12998,101),(38102,12999,150),(38103,12999,4),(38104,12999,21),(38105,12999,47),(38106,13000,152),(38107,13000,5),(38108,13000,2),(38109,13001,150),(38110,13001,8),(38111,13001,21),(38112,13001,12),(38113,13002,150),(38114,13002,2),(38115,13003,149),(38116,13003,7),(38117,13003,101),(38118,13003,12),(38119,13004,150),(38120,13004,7),(38121,13004,6),(38122,13004,2),(38123,13005,8),(38124,13005,21),(38125,13005,12),(38126,13006,4),(38127,13006,3),(38128,13006,159),(38129,13006,2),(38130,13007,150),(38131,13007,8),(38132,13007,21),(38133,13007,7),(38134,13008,10),(38135,13008,7),(38136,13008,101),(38137,13009,7),(38138,13009,101),(38139,13010,147),(38140,13010,101),(38141,13011,101),(38142,13012,149),(38143,13012,8),(38144,13012,12),(38145,13013,10),(38146,13013,4),(38147,13013,3),(38148,13013,159),(38149,13014,147),(38150,13014,4),(38151,13014,7),(38152,13014,5),(38153,13014,30),(38154,13015,10),(38155,13015,7),(38156,13015,101),(38157,13015,6),(38158,13016,147),(38159,13016,101),(38160,13016,2),(38161,13017,101),(38162,13017,5),(38163,13017,30),(38164,13018,4),(38165,13018,11),(38166,13019,8),(38167,13019,21),(38168,13019,47),(38169,13020,150),(38170,13020,7),(38171,13020,12),(38172,13021,147),(38173,13021,5),(38174,13022,101),(38175,13023,149),(38176,13023,40),(38177,13023,5),(38178,13024,101),(38179,13025,149),(38180,13025,21),(38181,13026,30),(38182,13027,30),(38183,13028,150),(38184,13028,101),(38185,13028,5),(38186,13029,154),(38187,13029,7),(38188,13030,153),(38189,13030,21),(38190,13031,10),(38191,13031,5),(38192,13031,160),(38193,13032,10),(38194,13032,150),(38195,13032,30),(38196,13032,15),(38197,13033,150),(38198,13033,101),(38199,13034,147),(38200,13034,101),(38201,13035,101),(38202,13036,101),(38203,13036,5),(38204,13037,10),(38205,13037,150),(38206,13037,12),(38207,13038,34),(38208,13038,150),(38209,13038,12),(38210,13039,150),(38211,13039,35),(38212,13039,95),(38213,13039,6),(38214,13040,10),(38215,13040,147),(38216,13040,4),(38217,13040,5),(38218,13041,36),(38219,13041,101),(38220,13041,5),(38221,13041,6),(38222,13042,101),(38223,13042,5),(38224,13042,30),(38225,13043,10),(38226,13043,150),(38227,13043,101),(38228,13044,147),(38229,13044,101),(38230,13045,10),(38231,13045,149),(38232,13045,101),(38233,13046,10),(38234,13046,36),(38235,13046,150),(38236,13046,40),(38237,13047,147),(38238,13047,4),(38239,13047,12),(38240,13048,147),(38241,13048,36),(38242,13048,149),(38243,13048,5),(38244,13049,147),(38245,13049,7),(38246,13049,101),(38247,13050,36),(38248,13050,4),(38249,13050,21),(38250,13050,47),(38251,13051,8),(38252,13051,4),(38253,13051,40),(38254,13051,7),(38255,13051,12),(38256,13052,147),(38257,13052,4),(38258,13052,2),(38259,13052,15),(38260,13053,149),(38261,13054,149),(38262,13054,7),(38263,13054,101),(38264,13054,6),(38265,13055,150),(38266,13055,95),(38267,13055,21),(38268,13056,10),(38269,13056,150),(38270,13057,4),(38271,13057,153),(38272,13058,8),(38273,13058,21),(38274,13059,147),(38275,13059,5),(38276,13060,101),(38277,13061,154),(38278,13061,12),(38279,13062,8),(38280,13062,21),(38281,13062,101),(38282,13062,12),(38283,13063,10),(38284,13063,6),(38285,13064,34),(38286,13064,147),(38287,13064,4),(38288,13065,101),(38289,13066,150),(38290,13066,95),(38291,13066,21),(38292,13067,149),(38293,13067,8),(38294,13067,21),(38295,13067,50),(38296,13068,4),(38297,13068,101),(38298,13069,101),(38299,13069,6),(38300,13070,147),(38301,13070,101),(38302,13071,7),(38303,13071,6),(38304,13072,101),(38305,13072,5),(38306,13073,35),(38307,13073,5),(38308,13073,30),(38309,13073,12),(38310,13074,150),(38311,13074,4),(38312,13075,36),(38313,13075,35),(38314,13075,4),(38315,13076,10),(38316,13076,50),(38317,13077,101),(38318,13077,5),(38319,13077,6),(38320,13078,4),(38321,13078,2),(38322,13079,10),(38323,13079,153),(38324,13079,21),(38325,13080,10),(38326,13080,4),(38327,13080,7),(38328,13080,160),(38329,13081,10),(38330,13081,150),(38331,13081,101),(38332,13082,149),(38333,13082,7),(38334,13082,6),(38335,13083,150),(38336,13083,101),(38337,13083,5),(38338,13084,101),(38339,13085,147),(38340,13085,101),(38341,13086,101),(38342,13086,6),(38343,13087,149),(38344,13088,7),(38345,13088,5),(38346,13089,36),(38347,13089,8),(38348,13089,4),(38349,13089,21),(38350,13089,30),(38351,13090,149),(38352,13091,10),(38353,13091,147),(38354,13091,8),(38355,13091,4),(38356,13091,6),(38357,13091,12),(38358,13092,149),(38359,13092,8),(38360,13092,7),(38361,13093,36),(38362,13093,7),(38363,13093,101),(38364,13093,5),(38365,13094,149),(38366,13094,7),(38367,13094,5),(38368,13095,150),(38369,13096,34),(38370,13096,36),(38371,13096,30),(38372,13097,4),(38373,13097,21),(38374,13098,10),(38375,13098,7),(38376,13099,149),(38377,13099,7),(38378,13099,5),(38379,13100,149),(38380,13101,149),(38381,13102,10),(38382,13102,150),(38383,13102,153),(38384,13103,10),(38385,13103,153),(38386,13103,21),(38387,13104,7),(38388,13104,6),(38389,13105,8),(38390,13105,4),(38391,13105,5),(38392,13105,12),(38393,13106,4),(38394,13106,12),(38395,13107,8),(38396,13107,21),(38397,13107,12),(38398,13108,159),(38399,13109,149),(38400,13109,2),(38401,13110,101),(38402,13110,2),(38403,13111,5),(38404,13111,60),(38405,13112,5),(38406,13113,5),(38407,13114,153),(38408,13115,150),(38409,13115,7),(38410,13116,7),(38411,13117,149),(38412,13117,7),(38413,13117,2),(38414,13118,147),(38415,13119,10),(38416,13119,150),(38417,13119,40),(38418,13120,150),(38419,13121,150),(38420,13121,7),(38421,13121,15),(38422,13122,147),(38423,13122,4),(38424,13122,157),(38425,13123,10),(38426,13123,150),(38427,13123,101),(38428,13124,150),(38429,13124,101),(38430,13125,147),(38431,13125,101),(38432,13126,149),(38433,13126,150),(38434,13126,21),(38435,13126,6),(38436,13127,149),(38437,13127,6),(38438,13128,4),(38439,13128,7),(38440,13128,30),(38441,13129,147),(38442,13129,4),(38443,13129,2),(38444,13130,147),(38445,13130,149),(38446,13130,2),(38447,13131,150),(38448,13131,4),(38449,13131,7),(38450,13131,6),(38451,13132,147),(38452,13132,150),(38453,13132,4),(38454,13133,150),(38455,13133,8),(38456,13134,150),(38457,13134,7),(38458,13134,2),(38459,13135,4),(38460,13135,7),(38461,13135,101),(38462,13136,101),(38463,13136,5),(38464,13136,30),(38465,13137,34),(38466,13137,150),(38467,13137,7),(38468,13138,10),(38469,13138,4),(38470,13139,149),(38471,13139,8),(38472,13139,4),(38473,13139,21),(38474,13139,47),(38475,13139,12),(38476,13140,149),(38477,13140,150),(38478,13140,4),(38479,13140,12),(38480,13141,101),(38481,13142,147),(38482,13142,101),(38483,13143,36),(38484,13143,4),(38485,13143,5),(38486,13144,150),(38487,13145,154),(38488,13145,5),(38489,13146,8),(38490,13146,21),(38491,13146,3),(38492,13147,154),(38493,13147,7),(38494,13147,6),(38495,13148,40),(38496,13148,5),(38497,13149,147),(38498,13149,101),(38499,13150,150),(38500,13150,35),(38501,13150,153),(38502,13150,155),(38503,13151,150),(38504,13151,35),(38505,13151,4),(38506,13152,149),(38507,13152,8),(38508,13152,4),(38509,13152,12),(38510,13153,4),(38511,13153,21),(38512,13153,47),(38513,13154,40),(38514,13154,101),(38515,13154,5),(38516,13154,6),(38517,13155,8),(38518,13155,21),(38519,13155,101),(38520,13155,47),(38521,13156,101),(38522,13156,5),(38523,13157,150),(38524,13157,40),(38525,13158,7),(38526,13158,5),(38527,13158,30),(38528,13159,34),(38529,13159,12),(38530,13160,4),(38531,13160,7),(38532,13160,5),(38533,13160,30),(38534,13161,101),(38535,13162,101),(38536,13162,6),(38537,13163,101),(38538,13164,147),(38539,13164,101),(38540,13164,5),(38541,13165,101),(38542,13165,5),(38543,13166,150),(38544,13167,149),(38545,13167,35),(38546,13167,50),(38547,13168,8),(38548,13168,21),(38549,13168,47),(38550,13169,36),(38551,13169,149),(38552,13169,8),(38553,13169,95),(38554,13169,21),(38555,13170,4),(38556,13170,15),(38557,13171,7),(38558,13171,101),(38559,13171,5),(38560,13172,147),(38561,13172,5),(38562,13172,30),(38563,13173,150),(38564,13173,153),(38565,13173,21),(38566,13173,12),(38567,13174,150),(38568,13174,8),(38569,13174,3),(38570,13174,2),(38571,13174,12),(38572,13175,150),(38573,13175,35),(38574,13176,150),(38575,13176,21),(38576,13176,47),(38577,13177,8),(38578,13177,4),(38579,13177,154),(38580,13178,147),(38581,13178,150),(38582,13179,36),(38583,13179,4),(38584,13179,5),(38585,13179,30),(38586,13180,10),(38587,13180,5),(38588,13181,7),(38589,13181,6),(38590,13182,101),(38591,13182,2),(38592,13183,145),(38593,13184,145),(38594,13184,101),(38595,13185,145),(38596,13185,147),(38597,13185,101),(38598,13186,145),(38599,13186,101),(38600,13187,145),(38601,13187,101),(38602,13188,145),(38603,13189,145),(38604,13190,10),(38605,13190,40),(38606,13190,101),(38607,13190,15),(38608,13191,150),(38609,13191,4),(38610,13192,34),(38611,13192,4),(38612,13192,21),(38613,13192,11),(38614,13193,149),(38615,13193,8),(38616,13193,21),(38617,13194,146),(38618,13194,21),(38619,13194,7),(38620,13194,101),(38621,13194,47),(38622,13194,2),(38623,13195,8),(38624,13195,21),(38625,13195,7),(38626,13195,12),(38627,13196,10),(38628,13197,101),(38629,13198,149),(38630,13198,7),(38631,13198,6),(38632,13199,147),(38633,13199,7),(38634,13200,149),(38635,13200,5),(38636,13201,4),(38637,13201,6),(38638,13202,149),(38639,13203,147),(38640,13203,8),(38641,13203,95),(38642,13203,3),(38643,13203,2),(38644,13203,12),(38645,13204,34),(38646,13204,147),(38647,13204,8),(38648,13204,151),(38649,13204,101),(38650,13205,10),(38651,13205,7),(38652,13205,2),(38653,13206,147),(38654,13206,150),(38655,13206,4),(38656,13206,7),(38657,13206,6),(38658,13207,10),(38659,13207,7),(38660,13207,101),(38661,13207,2),(38662,13208,10),(38663,13208,150),(38664,13208,4),(38665,13208,7),(38666,13208,101),(38667,13208,15),(38668,13209,150),(38669,13209,4),(38670,13209,7),(38671,13209,6),(38672,13210,149),(38673,13210,101),(38674,13210,5),(38675,13211,34),(38676,13211,36),(38677,13211,4),(38678,13212,149),(38679,13212,150),(38680,13212,35),(38681,13212,40),(38682,13212,21),(38683,13212,101),(38684,13212,12),(38685,13213,5),(38686,13213,30),(38687,13214,146),(38688,13214,8),(38689,13214,95),(38690,13214,21),(38691,13215,10),(38692,13215,147),(38693,13215,150),(38694,13215,101),(38695,13215,5),(38696,13216,149),(38697,13216,30),(38698,13217,147),(38699,13217,101),(38700,13217,2),(38701,13218,145),(38702,13219,145),(38703,13219,10),(38704,13220,145),(38705,13220,101),(38706,13220,2),(38707,13221,145),(38708,13221,4),(38709,13222,145),(38710,13222,4),(38711,13223,145),(38712,13223,149),(38713,13224,145),(38714,13224,30),(38715,13225,145),(38716,13225,10),(38717,13225,30),(38718,13226,145),(38719,13226,5),(38720,13226,30),(38721,13227,145),(38722,13227,149),(38723,13227,101),(38724,13227,6),(38725,13228,145),(38726,13228,149),(38727,13228,7),(38728,13228,101),(38729,13229,145),(38730,13229,10),(38731,13229,150),(38732,13229,15),(38733,13230,145),(38734,13230,160),(38735,13231,36),(38736,13231,35),(38737,13231,4),(38738,13231,152),(38739,13231,5),(38740,13231,30),(38741,13232,150),(38742,13232,6),(38743,13233,4),(38744,13233,21),(38745,13233,47),(38746,13234,10),(38747,13234,149),(38748,13234,7),(38749,13234,5),(38750,13235,147),(38751,13235,7),(38752,13236,10),(38753,13236,5),(38754,13237,10),(38755,13237,35),(38756,13237,50),(38757,13237,12),(38758,13238,34),(38759,13238,4),(38760,13239,149),(38761,13239,4),(38762,13239,21),(38763,13239,5),(38764,13239,30),(38765,13240,40),(38766,13241,10),(38767,13241,5),(38768,13242,40),(38769,13242,15),(38770,13243,4),(38771,13243,7),(38772,13244,4),(38773,13245,8),(38774,13245,4),(38775,13245,12),(38776,13246,149),(38777,13246,7),(38778,13247,8),(38779,13247,95),(38780,13247,21),(38781,13248,145),(38782,13248,101),(38783,13249,145),(38784,13249,8),(38785,13249,21),(38786,13249,101),(38787,13250,145),(38788,13250,101),(38789,13250,5),(38790,13251,145),(38791,13251,101),(38792,13252,145),(38793,13252,34),(38794,13252,147),(38795,13252,157),(38796,13253,145),(38797,13253,8),(38798,13253,21),(38799,13253,7),(38800,13253,47),(38801,13254,145),(38802,13254,7),(38803,13254,15),(38804,13255,145),(38805,13255,101),(38806,13255,6),(38807,13256,10),(38808,13256,150),(38809,13257,147),(38810,13257,36),(38811,13257,5),(38812,13257,30),(38813,13257,60),(38814,13258,34),(38815,13258,4),(38816,13258,154),(38817,13259,4),(38818,13259,5),(38819,13259,60),(38820,13260,147),(38821,13260,4),(38822,13260,101),(38823,13260,6),(38824,13261,149),(38825,13261,8),(38826,13261,35),(38827,13262,149),(38828,13262,6),(38829,13263,7),(38830,13264,10),(38831,13264,150),(38832,13264,7),(38833,13264,6),(38834,13264,15),(38835,13265,8),(38836,13265,21),(38837,13265,7),(38838,13265,12),(38839,13266,147),(38840,13266,7),(38841,13267,150),(38842,13267,101),(38843,13268,34),(38844,13268,149),(38845,13268,150),(38846,13268,8),(38847,13268,4),(38848,13268,5),(38849,13268,12),(38850,13269,150),(38851,13269,8),(38852,13269,4),(38853,13269,95),(38854,13269,21),(38855,13270,147),(38856,13270,4),(38857,13270,7),(38858,13270,2),(38859,13271,149),(38860,13271,40),(38861,13271,7),(38862,13271,5),(38863,13271,30),(38864,13271,6),(38865,13272,149),(38866,13272,2),(38867,13273,147),(38868,13273,4),(38869,13273,5),(38870,13273,157),(38871,13273,30),(38872,13274,150),(38873,13275,8),(38874,13275,4),(38875,13275,7),(38876,13275,101),(38877,13275,12),(38878,13276,149),(38879,13276,95),(38880,13276,5),(38881,13277,5),(38882,13278,7),(38883,13278,101),(38884,13278,2),(38885,13279,101),(38886,13279,5),(38887,13280,149),(38888,13280,101),(38889,13281,147),(38890,13281,101),(38891,13281,5),(38892,13282,150),(38893,13282,35),(38894,13282,95),(38895,13283,150),(38896,13283,21),(38897,13283,3),(38898,13283,47),(38899,13283,12),(38900,13284,147),(38901,13284,101),(38902,13284,5),(38903,13284,30),(38904,13285,149),(38905,13285,40),(38906,13286,8),(38907,13286,4),(38908,13286,95),(38909,13286,21),(38910,13286,101),(38911,13286,12),(38912,13287,36),(38913,13287,21),(38914,13287,12),(38915,13288,10),(38916,13288,150),(38917,13289,4),(38918,13289,7),(38919,13289,101),(38920,13290,10),(38921,13290,3),(38922,13290,2),(38923,13290,15),(38924,13291,7),(38925,13291,101),(38926,13291,6),(38927,13291,15),(38928,13292,5),(38929,13292,30),(38930,13293,147),(38931,13293,150),(38932,13293,4),(38933,13293,101),(38934,13294,149),(38935,13294,8),(38936,13294,21),(38937,13294,7),(38938,13294,12),(38939,13295,10),(38940,13295,147),(38941,13295,149),(38942,13295,7),(38943,13295,6),(38944,13296,147),(38945,13296,4),(38946,13296,101),(38947,13297,147),(38948,13297,101),(38949,13297,5),(38950,13298,147),(38951,13298,149),(38952,13298,101),(38953,13298,5),(38954,13299,10),(38955,13299,7),(38956,13300,101),(38957,13300,5),(38958,13301,147),(38959,13301,5),(38960,13301,30),(38961,13302,8),(38962,13302,4),(38963,13302,21),(38964,13302,7),(38965,13302,12),(38966,13303,149),(38967,13303,4),(38968,13303,7),(38969,13303,5),(38970,13303,2),(38971,13304,10),(38972,13304,149),(38973,13304,101),(38974,13304,5),(38975,13305,147),(38976,13305,101),(38977,13305,30),(38978,13306,101),(38979,13306,5),(38980,13307,150),(38981,13307,35),(38982,13307,21),(38983,13307,12),(38984,13308,150),(38985,13308,21),(38986,13308,47),(38987,13309,147),(38988,13309,36),(38989,13309,4),(38990,13309,30),(38991,13310,34),(38992,13310,4),(38993,13311,150),(38994,13311,3),(38995,13311,6),(38996,13311,2),(38997,13312,7),(38998,13312,5),(38999,13312,30),(39000,13313,101),(39001,13314,151),(39002,13314,5),(39003,13314,30),(39004,13315,36),(39005,13315,4),(39006,13315,5),(39007,13316,147),(39008,13316,36),(39009,13316,4),(39010,13316,159),(39011,13317,150),(39012,13318,10),(39013,13318,4),(39014,13319,149),(39015,13319,8),(39016,13320,36),(39017,13320,35),(39018,13320,4),(39019,13320,152),(39020,13320,5),(39021,13320,30),(39022,13321,34),(39023,13321,4),(39024,13321,7),(39025,13322,149),(39026,13322,21),(39027,13322,47),(39028,13323,150),(39029,13324,8),(39030,13324,95),(39031,13324,21),(39032,13324,50),(39033,13324,12),(39034,13325,10),(39035,13325,150),(39036,13325,154),(39037,13325,7),(39038,13325,6),(39039,13325,2),(39040,13326,147),(39041,13326,21),(39042,13326,5),(39043,13326,30),(39044,13327,34),(39045,13327,147),(39046,13327,152),(39047,13327,2),(39048,13327,12),(39049,13328,10),(39050,13328,150),(39051,13328,7),(39052,13328,6),(39053,13329,147),(39054,13329,149),(39055,13329,4),(39056,13329,101),(39057,13329,2),(39058,13330,147),(39059,13330,101),(39060,13331,149),(39061,13331,7),(39062,13331,101),(39063,13332,147),(39064,13332,149),(39065,13332,50),(39066,13333,147),(39067,13333,149),(39068,13333,101),(39069,13334,4),(39070,13334,7),(39071,13334,5),(39072,13335,8),(39073,13335,95),(39074,13335,21),(39075,13335,50),(39076,13336,34),(39077,13336,147),(39078,13336,36),(39079,13336,4),(39080,13337,149),(39081,13337,101),(39082,13337,50),(39083,13337,12),(39084,13338,150),(39085,13338,35),(39086,13338,4),(39087,13338,11),(39088,13339,147),(39089,13339,150),(39090,13339,8),(39091,13339,4),(39092,13339,101),(39093,13340,10),(39094,13340,7),(39095,13340,5),(39096,13341,40),(39097,13341,101),(39098,13342,10),(39099,13342,147),(39100,13342,101),(39101,13342,5),(39102,13343,150),(39103,13343,60),(39104,13344,10),(39105,13344,150),(39106,13345,7),(39107,13345,101),(39108,13345,15),(39109,13346,147),(39110,13346,149),(39111,13346,40),(39112,13347,7),(39113,13347,101),(39114,13347,5),(39115,13347,30),(39116,13348,149),(39117,13348,8),(39118,13348,21),(39119,13348,12),(39120,13349,10),(39121,13349,150),(39122,13349,7),(39123,13349,15),(39124,13350,149),(39125,13350,150),(39126,13350,7),(39127,13351,149),(39128,13351,5),(39129,13352,101),(39130,13352,2),(39131,13353,101),(39132,13353,5),(39133,13354,147),(39134,13354,36),(39135,13354,4),(39136,13354,5),(39137,13355,8),(39138,13355,151),(39139,13355,101),(39140,13355,2),(39141,13356,4),(39142,13356,7),(39143,13356,6),(39144,13357,101),(39145,13358,101),(39146,13358,2),(39147,13359,147),(39148,13359,5),(39149,13360,149),(39150,13360,21),(39151,13360,12),(39152,13361,150),(39153,13361,7),(39154,13361,15),(39155,13362,7),(39156,13362,101),(39157,13362,5),(39158,13363,149),(39159,13363,7),(39160,13363,5),(39161,13364,149),(39162,13364,101),(39163,13364,5),(39164,13365,101),(39165,13365,2),(39166,13366,101),(39167,13366,5),(39168,13367,101),(39169,13368,101),(39170,13368,2),(39171,13369,2),(39172,13369,15),(39173,13370,40),(39174,13371,34),(39175,13371,147),(39176,13371,4),(39177,13372,34),(39178,13372,35),(39179,13372,50),(39180,13373,8),(39181,13373,21),(39182,13374,10),(39183,13374,34),(39184,13374,147),(39185,13374,4),(39186,13375,8),(39187,13375,4),(39188,13375,21),(39189,13375,12),(39190,13376,147),(39191,13376,149),(39192,13376,5),(39193,13376,30),(39194,13377,10),(39195,13377,34),(39196,13377,149),(39197,13377,101),(39198,13378,149),(39199,13378,7),(39200,13378,101),(39201,13379,147),(39202,13379,5),(39203,13379,30),(39204,13380,101),(39205,13380,5),(39206,13380,30),(39207,13381,150),(39208,13381,159),(39209,13382,150),(39210,13382,8),(39211,13382,12),(39212,13383,149),(39213,13383,8),(39214,13383,21),(39215,13384,8),(39216,13384,4),(39217,13384,95),(39218,13385,8),(39219,13385,5),(39220,13386,149),(39221,13387,147),(39222,13387,101),(39223,13388,147),(39224,13388,150),(39225,13388,4),(39226,13388,153),(39227,13388,5),(39228,13388,60),(39229,13388,6),(39230,13389,155),(39231,13390,150),(39232,13391,10),(39233,13391,150),(39234,13391,8),(39235,13391,21),(39236,13391,12),(39237,13392,149),(39238,13392,7),(39239,13393,149),(39240,13393,5),(39241,13394,155),(39242,13394,21),(39243,13394,7),(39244,13394,158),(39245,13395,149),(39246,13395,153),(39247,13395,7),(39248,13395,5),(39249,13396,5),(39250,13396,11),(39251,13397,4),(39252,13397,12),(39253,13398,5),(39254,13398,30),(39255,13399,36),(39256,13399,149),(39257,13399,7),(39258,13399,5),(39259,13400,7),(39260,13400,30),(39261,13400,6),(39262,13401,101),(39263,13401,2),(39264,13402,34),(39265,13402,149),(39266,13402,101),(39267,13402,5),(39268,13403,8),(39269,13403,4),(39270,13403,12),(39271,13404,101),(39272,13405,10),(39273,13405,4),(39274,13405,7),(39275,13405,15),(39276,13406,147),(39277,13406,7),(39278,13406,101),(39279,13406,5),(39280,13407,101),(39281,13407,2),(39282,13408,150),(39283,13408,95),(39284,13408,21),(39285,13408,12),(39286,13409,149),(39287,13409,150),(39288,13409,5),(39289,13409,15),(39290,13410,150),(39291,13410,3),(39292,13411,149),(39293,13411,4),(39294,13411,7),(39295,13411,15),(39296,13412,5),(39297,13413,101),(39298,13414,8),(39299,13414,21),(39300,13415,7),(39301,13415,6),(39302,13416,10),(39303,13416,7),(39304,13416,6),(39305,13417,10),(39306,13417,149),(39307,13417,7),(39308,13417,101),(39309,13417,5),(39310,13418,4),(39311,13418,7),(39312,13419,147),(39313,13419,149),(39314,13419,101),(39315,13419,5),(39316,13420,147),(39317,13420,150),(39318,13420,101),(39319,13420,5),(39320,13420,30),(39321,13421,4),(39322,13421,154),(39323,13422,147),(39324,13422,150),(39325,13422,7),(39326,13422,6),(39327,13423,8),(39328,13423,95),(39329,13423,21),(39330,13423,7),(39331,13424,149),(39332,13424,7),(39333,13425,101),(39334,13425,2),(39335,13426,150),(39336,13427,21),(39337,13428,4),(39338,13429,4),(39339,13429,153),(39340,13429,21),(39341,13429,7),(39342,13430,149),(39343,13430,101),(39344,13431,101),(39345,13433,7),(39346,13433,101),(39347,13434,7),(39348,13434,101),(39349,13434,5),(39350,13435,10),(39351,13435,8),(39352,13436,149),(39353,13436,50),(39354,13437,7),(39355,13437,101),(39356,13438,4),(39357,13439,149),(39358,13439,150),(39359,13439,21),(39360,13439,7),(39361,13439,6),(39362,13440,149),(39363,13440,7),(39364,13440,5),(39365,13441,10),(39366,13441,7),(39367,13441,6),(39368,13442,4),(39369,13442,101),(39370,13443,101),(39371,13443,2),(39372,13444,10),(39373,13444,4),(39374,13444,7),(39375,13445,150),(39376,13445,3),(39377,13445,159),(39378,13445,2),(39379,13446,149),(39380,13446,153),(39381,13446,7),(39382,13447,149),(39383,13447,50),(39384,13447,5),(39385,13448,151),(39386,13448,101),(39387,13448,2),(39388,13449,147),(39389,13449,8),(39390,13449,5),(39391,13451,154),(39392,13451,7),(39393,13452,147),(39394,13452,7),(39395,13453,150),(39396,13453,7),(39397,13454,147),(39398,13454,149),(39399,13454,101),(39400,13454,2),(39401,13455,101),(39402,13455,5),(39403,13456,101),(39404,13457,34),(39405,13457,21),(39406,13457,5),(39407,13457,30),(39408,13457,12),(39409,13458,36),(39410,13458,4),(39411,13458,12),(39412,13459,4),(39413,13459,153),(39414,13459,7),(39415,13460,150),(39416,13460,7),(39417,13460,2),(39418,13461,7),(39419,13461,3),(39420,13461,101),(39421,13461,5),(39422,13461,30),(39423,13461,6),(39424,13462,147),(39425,13462,7),(39426,13462,101),(39427,13462,5),(39428,13463,101),(39429,13464,95),(39430,13464,21),(39431,13464,7),(39432,13464,101),(39433,13465,149),(39434,13465,8),(39435,13465,153),(39436,13465,21),(39437,13465,7),(39438,13466,8),(39439,13466,95),(39440,13466,21),(39441,13466,7),(39442,13466,101),(39443,13467,7),(39444,13468,151),(39445,13468,101),(39446,13468,2),(39447,13469,101),(39448,13469,5),(39449,13469,6),(39450,13470,148),(39451,13470,150),(39452,13470,101),(39453,13470,30),(39454,13470,15),(39455,13471,36),(39456,13471,4),(39457,13472,10),(39458,13472,150),(39459,13472,8),(39460,13472,7),(39461,13472,2),(39462,13472,12),(39463,13473,150),(39464,13473,95),(39465,13474,101),(39466,13474,2),(39467,13475,147),(39468,13475,101),(39469,13476,10),(39470,13476,4),(39471,13477,149),(39472,13477,150),(39473,13477,7),(39474,13477,5),(39475,13478,4),(39476,13478,21),(39477,13479,101),(39478,13479,5),(39479,13479,6),(39480,13479,2),(39481,13480,101),(39482,13481,150),(39483,13482,101),(39484,13483,150),(39485,13483,4),(39486,13483,6),(39487,13484,149),(39488,13485,8),(39489,13485,153),(39490,13486,7),(39491,13487,7),(39492,13488,101),(39493,13489,34),(39494,13489,21),(39495,13490,4),(39496,13490,3),(39497,13490,12),(39498,13491,150),(39499,13491,5),(39500,13491,11),(39501,13492,4),(39502,13492,101),(39503,13492,5),(39504,13493,40),(39505,13494,5),(39506,13494,60),(39507,13495,153),(39508,13496,150),(39509,13497,8),(39510,13498,154),(39511,13498,11),(39512,13498,60),(39513,13499,101),(39514,13499,6),(39515,13500,4),(39516,13500,7),(39517,13501,36),(39518,13501,5),(39519,13501,30),(39520,13502,7),(39521,13502,15),(39522,13503,101),(39523,13504,36),(39524,13504,152),(39525,13504,21),(39526,13504,5),(39527,13505,149),(39528,13506,8),(39529,13506,35),(39530,13506,95),(39531,13506,12),(39532,13507,10),(39533,13507,149),(39534,13507,21),(39535,13507,47),(39536,13508,149),(39537,13508,5),(39538,13509,101),(39539,13509,6),(39540,13510,101),(39541,13510,5),(39542,13511,10),(39543,13511,4),(39544,13512,10),(39545,13512,150),(39546,13513,4),(39547,13513,6),(39548,13514,10),(39549,13514,149),(39550,13514,50),(39551,13515,150),(39552,13515,101),(39553,13516,150),(39554,13516,5),(39555,13516,60),(39556,13517,36),(39557,13517,4),(39558,13517,5),(39559,13518,7),(39560,13518,5),(39561,13519,101),(39562,13519,2),(39563,13520,101),(39564,13520,5),(39565,13521,5),(39566,13521,30),(39567,13521,60),(39568,13522,36),(39569,13522,8),(39570,13522,21),(39571,13522,5),(39572,13523,4),(39573,13524,149),(39574,13524,101),(39575,13525,147),(39576,13525,101),(39577,13526,147),(39578,13526,150),(39579,13526,3),(39580,13526,50),(39581,13526,159),(39582,13526,2),(39583,13527,8),(39584,13527,4),(39585,13528,5),(39586,13528,30),(39587,13529,149),(39588,13529,5),(39589,13530,147),(39590,13530,6),(39591,13531,101),(39592,13532,7),(39593,13532,101),(39594,13532,6),(39595,13533,101),(39596,13534,4),(39597,13534,5),(39598,13535,153),(39599,13536,150),(39600,13536,8),(39601,13536,4),(39602,13536,21),(39603,13536,7),(39604,13536,12),(39605,13537,149),(39606,13537,7),(39607,13537,101),(39608,13537,5),(39609,13538,149),(39610,13538,7),(39611,13538,101),(39612,13538,2),(39613,13539,150),(39614,13540,34),(39615,13540,150),(39616,13540,8),(39617,13540,101),(39618,13541,5),(39619,13541,30),(39620,13542,21),(39621,13543,101),(39622,13544,150),(39623,13544,101),(39624,13545,10),(39625,13545,34),(39626,13545,150),(39627,13545,12),(39628,13546,4),(39629,13546,2),(39630,13547,10),(39631,13547,4),(39632,13547,101),(39633,13548,147),(39634,13548,40),(39635,13548,101),(39636,13549,154),(39637,13549,5),(39638,13550,101),(39639,13551,150),(39640,13551,40),(39641,13551,12),(39642,13552,153),(39643,13552,7),(39644,13553,4),(39645,13553,21),(39646,13553,101),(39647,13553,5),(39648,13554,4),(39649,13554,21),(39650,13554,7),(39651,13555,147),(39652,13555,150),(39653,13555,101),(39654,13556,4),(39655,13556,30),(39656,13557,150),(39657,13558,40),(39658,13558,101),(39659,13559,101),(39660,13559,5),(39661,13560,101),(39662,13561,150),(39663,13562,150),(39664,13562,21),(39665,13563,5),(39666,13564,10),(39667,13564,101),(39668,13564,15),(39669,13565,147),(39670,13565,150),(39671,13565,101),(39672,13565,5),(39673,13566,4),(39674,13566,7),(39675,13566,101),(39676,13567,10),(39677,13567,2),(39678,13567,15),(39679,13568,150),(39680,13568,5),(39681,13569,7),(39682,13569,101),(39683,13570,159),(39684,13570,2),(39685,13571,150),(39686,13571,7),(39687,13572,8),(39688,13572,21),(39689,13573,8),(39690,13573,4),(39691,13573,21),(39692,13573,12),(39693,13574,10),(39694,13574,5),(39695,13575,101),(39696,13576,101),(39697,13577,36),(39698,13577,30),(39699,13579,147),(39700,13579,40),(39701,13579,5),(39702,13580,34),(39703,13580,4),(39704,13580,5),(39705,13580,60),(39706,13581,149),(39707,13581,8),(39708,13581,95),(39709,13581,21),(39710,13581,12),(39711,13582,4),(39712,13583,147),(39713,13583,101),(39714,13583,5),(39715,13583,2),(39716,13584,101),(39717,13584,5),(39718,13585,10),(39719,13585,40),(39720,13585,15),(39721,13586,150),(39722,13586,95),(39723,13586,12),(39724,13587,150),(39725,13587,4),(39726,13587,11),(39727,13587,2),(39728,13588,36),(39729,13588,4),(39730,13588,101),(39731,13588,5),(39732,13588,11),(39733,13589,8),(39734,13589,5),(39735,13589,60),(39736,13589,12),(39737,13590,147),(39738,13590,150),(39739,13590,101),(39740,13590,12),(39741,13591,147),(39742,13591,4),(39743,13591,30),(39744,13592,11),(39745,13593,8),(39746,13593,95),(39747,13593,5),(39748,13594,101),(39749,13594,2),(39750,13595,101),(39751,13595,2),(39752,13596,101),(39753,13597,12),(39754,13598,149),(39755,13598,3),(39756,13598,12),(39757,13602,4),(39758,13603,36),(39759,13605,12),(39760,13606,8),(39761,13606,21),(39762,13606,12),(39763,13608,150),(39764,13609,40),(39765,13614,36),(39766,13614,150),(39767,13614,4),(39768,13614,40),(39769,13614,101),(39770,13615,10),(39771,13615,150),(39772,13616,10),(39773,13616,36),(39774,13616,5),(39775,13617,8),(39776,13617,21),(39777,13617,7),(39778,13617,47),(39779,13618,147),(39780,13618,149),(39781,13618,101),(39782,13619,149),(39783,13619,5),(39784,13620,101),(39785,13621,8),(39786,13621,21),(39787,13622,147),(39788,13622,150),(39789,13622,95),(39790,13622,21),(39791,13622,6),(39792,13623,4),(39793,13624,148),(39794,13624,5),(39795,13624,30),(39796,13625,8),(39797,13625,21),(39798,13626,149),(39799,13626,101),(39800,13626,6),(39801,13627,149),(39802,13627,101),(39803,13628,34),(39804,13628,147),(39805,13628,35),(39806,13628,21),(39807,13629,147),(39808,13629,101),(39809,13629,6),(39810,13630,10),(39811,13630,5),(39812,13631,150),(39813,13631,8),(39814,13631,4),(39815,13631,12),(39816,13632,147),(39817,13632,36),(39818,13632,4),(39819,13632,5),(39820,13633,145),(39821,13634,145),(39822,13634,21),(39823,13635,145),(39824,13636,145),(39825,13637,145),(39826,13638,145),(39827,13639,145),(39828,13639,5),(39829,13640,145),(39830,13641,145),(39831,13642,145),(39832,13642,40),(39833,13643,40),(39834,13643,15),(39835,13644,4),(39836,13644,2),(39837,13645,8),(39838,13645,4),(39839,13645,21),(39840,13645,12),(39841,13646,6),(39842,13647,149),(39843,13647,5),(39844,13647,30),(39845,13648,40),(39846,13648,6),(39847,13649,149),(39848,13649,8),(39849,13649,21),(39850,13649,12),(39851,13650,149),(39852,13650,150),(39853,13650,7),(39854,13651,147),(39855,13652,101),(39856,13653,149),(39857,13653,101),(39858,13654,149),(39859,13654,101),(39860,13655,150),(39861,13656,147),(39862,13656,8),(39863,13656,21),(39864,13656,101),(39865,13656,5),(39866,13656,60),(39867,13657,8),(39868,13657,95),(39869,13657,101),(39870,13658,10),(39871,13658,4),(39872,13658,7),(39873,13659,149),(39874,13659,50),(39875,13659,5),(39876,13660,150),(39877,13660,35),(39878,13660,40),(39879,13661,34),(39880,13661,4),(39881,13661,5),(39882,13661,60),(39883,13662,5),(39884,13662,30),(39885,13663,101),(39886,13663,5),(39887,13663,30),(39888,13664,101),(39889,13665,101),(39890,13665,5),(39891,13666,10),(39892,13666,147),(39893,13666,4),(39894,13666,101),(39895,13667,150),(39896,13667,4),(39897,13667,21),(39898,13667,47),(39899,13668,34),(39900,13668,36),(39901,13668,101),(39902,13668,2),(39903,13669,101),(39904,13669,5),(39905,13670,101),(39906,13671,5),(39907,13672,21),(39908,13672,101),(39909,13672,47),(39910,13673,10),(39911,13673,4),(39912,13673,2),(39913,13673,15),(39914,13674,101),(39915,13674,5),(39916,13674,5),(39917,13675,149),(39918,13675,101),(39919,13676,150),(39920,13676,4),(39921,13676,7),(39922,13677,150),(39923,13677,12),(39924,13678,149),(39925,13678,150),(39926,13678,7),(39927,13678,6),(39928,13679,147),(39929,13679,149),(39930,13679,5),(39931,13680,5),(39932,13681,7),(39933,13681,101),(39934,13682,101),(39935,13683,149),(39936,13683,101),(39937,13683,2),(39938,13684,101),(39939,13685,150),(39940,13685,7),(39941,13686,150),(39942,13686,4),(39943,13686,7),(39944,13687,150),(39945,13687,30),(39946,13688,10),(39947,13688,7),(39948,13689,4),(39949,13689,40),(39950,13689,7),(39951,13689,101),(39952,13690,147),(39953,13690,149),(39954,13690,2),(39955,13691,150),(39956,13691,95),(39957,13691,2),(39958,13692,10),(39959,13692,101),(39960,13693,10),(39961,13693,147),(39962,13693,101),(39963,13694,101),(39964,13694,6),(39965,13695,101),(39966,13696,147),(39967,13696,149),(39968,13696,7),(39969,13696,5),(39970,13697,5),(39971,13698,149),(39972,13698,40),(39973,13699,40),(39974,13699,5),(39975,13700,150),(39976,13700,159),(39977,13701,147),(39978,13701,40),(39979,13702,36),(39980,13702,2),(39981,13703,21),(39982,13703,47),(39983,13704,4),(39984,13704,101),(39985,13704,2),(39986,13705,150),(39987,13705,4),(39988,13705,5),(39989,13705,30),(39990,13705,6),(39991,13705,15),(39992,13706,150),(39993,13706,35),(39994,13706,2),(39995,13706,12),(39996,13707,149),(39997,13707,7),(39998,13707,30),(39999,13708,4),(40000,13708,7),(40001,13708,2),(40002,13709,147),(40003,13710,101),(40004,13711,5),(40005,13711,30),(40006,13712,149),(40007,13712,151),(40008,13712,7),(40009,13712,5),(40010,13713,147),(40011,13713,4),(40012,13713,7),(40013,13714,149),(40014,13714,7),(40015,13714,101),(40016,13714,5),(40017,13715,34),(40018,13715,147),(40019,13715,35),(40020,13715,4),(40021,13715,152),(40022,13715,5),(40023,13716,8),(40024,13716,21),(40025,13717,34),(40026,13717,5),(40027,13717,11),(40028,13717,60),(40029,13718,145),(40030,13719,145),(40031,13720,145),(40032,13721,145),(40033,13722,145),(40034,13723,145),(40035,13724,145),(40036,13725,145),(40037,13726,10),(40038,13726,150),(40039,13726,35),(40040,13726,40),(40041,13726,160),(40042,13727,36),(40043,13727,5),(40044,13728,40),(40045,13729,10),(40046,13729,4),(40047,13729,15),(40048,13730,101),(40049,13731,7),(40050,13731,101),(40051,13731,5),(40052,13731,30),(40053,13732,36),(40054,13732,4),(40055,13732,30),(40056,13733,8),(40057,13733,95),(40058,13733,21),(40059,13733,7),(40060,13733,6),(40061,13734,150),(40062,13734,8),(40063,13734,95),(40064,13734,21),(40065,13734,7),(40066,13735,40),(40067,13735,101),(40068,13735,5),(40069,13736,7),(40070,13736,101),(40071,13737,149),(40072,13737,6),(40073,13738,101),(40074,13738,5),(40075,13739,101),(40076,13740,145),(40077,13741,145),(40078,13742,145),(40079,13743,145),(40080,13744,145),(40081,13745,145),(40082,13745,101),(40083,13746,145),(40084,13747,36),(40085,13747,5),(40086,13747,30),(40087,13748,150),(40088,13748,159),(40089,13748,2),(40090,13749,8),(40091,13749,95),(40092,13749,21),(40093,13749,12),(40094,13750,10),(40095,13750,153),(40096,13750,21),(40097,13751,147),(40098,13751,101),(40099,13752,147),(40100,13752,8),(40101,13752,4),(40102,13752,2),(40103,13753,147),(40104,13753,101),(40105,13753,6),(40106,13754,149),(40107,13754,5),(40108,13755,8),(40109,13755,95),(40110,13755,21),(40111,13755,12),(40112,13756,150),(40113,13756,6),(40114,13757,36),(40115,13757,6),(40116,13757,15),(40117,13758,6),(40118,13759,101),(40119,13759,5),(40120,13760,7),(40121,13760,6),(40122,13761,4),(40123,13761,7),(40124,13761,101),(40125,13761,5),(40126,13762,150),(40127,13762,8),(40128,13762,95),(40129,13762,7),(40130,13762,12),(40131,13763,10),(40132,13763,150),(40133,13763,4),(40134,13763,3),(40135,13764,8),(40136,13764,4),(40137,13764,95),(40138,13764,21),(40139,13764,7),(40140,13765,10),(40141,13765,147),(40142,13765,4),(40143,13765,15),(40144,13766,150),(40145,13766,40),(40146,13766,5),(40147,13767,10),(40148,13767,150),(40149,13767,7),(40150,13767,6),(40151,13768,149),(40152,13768,7),(40153,13768,101),(40154,13769,149),(40155,13769,7),(40156,13769,6),(40157,13770,149),(40158,13771,149),(40159,13771,101),(40160,13772,21),(40161,13772,47),(40162,13773,150),(40163,13773,7),(40164,13773,6),(40165,13774,149),(40166,13774,8),(40167,13774,21),(40168,13775,149),(40169,13775,6),(40170,13776,149),(40171,13776,101),(40172,13777,10),(40173,13777,40),(40174,13778,36),(40175,13778,5),(40176,13778,30),(40177,13779,4),(40178,13779,7),(40179,13779,2),(40180,13780,10),(40181,13780,4),(40182,13780,21),(40183,13781,10),(40184,13781,15),(40185,13782,7),(40186,13782,5),(40187,13783,147),(40188,13783,149),(40189,13783,101),(40190,13784,145),(40191,13784,10),(40192,13784,150),(40193,13784,101),(40194,13784,6),(40195,13784,2),(40196,13785,145),(40197,13785,149),(40198,13785,150),(40199,13785,15),(40200,13786,145),(40201,13786,149),(40202,13787,150),(40203,13788,4),(40204,13788,5),(40205,13788,157),(40206,13789,4),(40207,13789,5),(40208,13789,60),(40209,13789,12),(40210,13791,4),(40211,13792,149),(40212,13792,21),(40213,13793,101),(40214,13796,150),(40215,13797,4),(40216,13797,101),(40217,13797,5),(40218,13797,60),(40219,13798,147),(40220,13798,149),(40221,13798,101),(40222,13799,101),(40223,13800,101),(40224,13801,150),(40225,13801,8),(40226,13801,21),(40227,13801,12),(40228,13802,10),(40229,13802,7),(40230,13802,5),(40231,13802,6),(40232,13803,150),(40233,13803,7),(40234,13803,6),(40235,13803,15),(40236,13804,3),(40237,13804,101),(40238,13804,5),(40239,13805,149),(40240,13805,21),(40241,13805,12),(40242,13806,101),(40243,13807,147),(40244,13807,8),(40245,13807,21),(40246,13808,145),(40247,13808,8),(40248,13808,21),(40249,13808,7),(40250,13808,12),(40251,13809,145),(40252,13809,8),(40253,13809,2),(40254,13810,145),(40255,13810,149),(40256,13810,5),(40257,13811,145),(40258,13811,150),(40259,13811,4),(40260,13811,7),(40261,13812,145),(40262,13812,147),(40263,13812,149),(40264,13812,101),(40265,13813,145),(40266,13813,10),(40267,13813,149),(40268,13813,150),(40269,13813,6),(40270,13814,145),(40271,13814,149),(40272,13814,101),(40273,13815,147),(40274,13815,101),(40275,13816,149),(40276,13816,101),(40277,13817,150),(40278,13817,101),(40279,13818,34),(40280,13818,150),(40281,13818,8),(40282,13818,5),(40283,13818,30),(40284,13819,8),(40285,13819,4),(40286,13819,21),(40287,13819,12),(40288,13820,10),(40289,13820,149),(40290,13820,150),(40291,13820,60),(40292,13820,15),(40293,13821,147),(40294,13821,4),(40295,13821,3),(40296,13821,101),(40297,13821,5),(40298,13822,150),(40299,13822,4),(40300,13822,3),(40301,13822,101),(40302,13822,6),(40303,13822,159),(40304,13822,2),(40305,13823,147),(40306,13823,149),(40307,13823,5),(40308,13823,30),(40309,13824,147),(40310,13824,5),(40311,13824,30),(40312,13825,147),(40313,13825,35),(40314,13825,21),(40315,13825,11),(40316,13825,12),(40317,13826,35),(40318,13826,4),(40319,13826,152),(40320,13826,5),(40321,13827,147),(40322,13827,5),(40323,13827,30),(40324,13828,6),(40325,13828,2),(40326,13829,147),(40327,13829,149),(40328,13831,150),(40329,13831,4),(40330,13831,40),(40331,13832,150),(40332,13832,3),(40333,13832,101),(40334,13832,159),(40335,13832,2),(40336,13833,150),(40337,13833,6),(40338,13834,149),(40339,13834,101),(40340,13835,147),(40341,13835,101),(40342,13836,154),(40343,13836,5),(40344,13837,40),(40345,13837,5),(40346,13838,40),(40347,13839,40),(40348,13840,5),(40349,13841,40),(40350,13841,5),(40351,13842,101),(40352,13842,5),(40353,13843,5),(40354,13843,30),(40355,13844,5),(40356,13844,30),(40357,13845,36),(40358,13845,5),(40359,13846,36),(40360,13846,5),(40361,13847,36),(40362,13847,5),(40363,13848,36),(40364,13848,5),(40365,13849,5),(40366,13850,5),(40367,13851,36),(40368,13851,5),(40369,13852,5),(40370,13853,30),(40371,13854,36),(40372,13854,150),(40373,13854,8),(40374,13854,4),(40375,13854,60),(40376,13854,12),(40377,13855,150),(40378,13855,4),(40379,13856,4),(40380,13856,2),(40381,13857,147),(40382,13858,147),(40383,13858,36),(40384,13858,149),(40385,13858,101),(40386,13859,153),(40387,13859,21),(40388,13860,150),(40389,13860,101),(40390,13861,4),(40391,13862,7),(40392,13862,2),(40393,13863,4),(40394,13864,101),(40395,13864,5),(40396,13865,8),(40397,13865,95),(40398,13865,21),(40399,13865,12),(40400,13866,15),(40401,13867,10),(40402,13867,8),(40403,13867,4),(40404,13867,21),(40405,13867,7),(40406,13867,12),(40407,13868,150),(40408,13868,35),(40409,13868,7),(40410,13869,150),(40411,13870,4),(40412,13870,5),(40413,13871,150),(40414,13871,4),(40415,13871,7),(40416,13871,5),(40417,13872,4),(40418,13873,10),(40419,13873,5),(40420,13873,160),(40421,13874,147),(40422,13874,36),(40423,13874,4),(40424,13874,60),(40425,13875,147),(40426,13875,7),(40427,13875,5),(40428,13875,30),(40429,13876,149),(40430,13876,4),(40431,13876,5),(40432,13877,147),(40433,13877,101),(40434,13878,150),(40435,13878,7),(40436,13879,149),(40437,13879,101),(40438,13879,5),(40439,13880,149),(40440,13880,101),(40441,13881,149),(40442,13881,7),(40443,13881,2),(40444,13882,101),(40445,13882,5),(40446,13883,7),(40447,13883,6),(40448,13884,5),(40449,13885,36),(40450,13885,4),(40451,13885,152),(40452,13885,5),(40453,13886,7),(40454,13886,5),(40455,13886,60),(40456,13887,10),(40457,13887,4),(40458,13888,4),(40459,13888,7),(40460,13888,30),(40461,13889,149),(40462,13889,21),(40463,13890,5),(40464,13891,8),(40465,13891,7),(40466,13891,6),(40467,13891,12),(40468,13892,149),(40469,13893,150),(40470,13893,101),(40471,13894,101),(40472,13895,101),(40473,13895,5),(40474,13896,4),(40475,13896,11),(40476,13897,147),(40477,13897,149),(40478,13897,5),(40479,13898,36),(40480,13898,5),(40481,13898,30),(40482,13898,60),(40483,13899,36),(40484,13899,101),(40485,13900,101),(40486,13901,150),(40487,13901,2),(40488,13901,12),(40489,13902,34),(40490,13902,150),(40491,13902,12),(40492,13903,10),(40493,13903,15),(40494,13904,7),(40495,13905,101),(40496,13906,101),(40497,13906,5),(40498,13907,4),(40499,13907,5),(40500,13907,11),(40501,13907,60),(40502,13908,149),(40503,13908,15),(40504,13909,150),(40505,13909,40),(40506,13910,8),(40507,13910,4),(40508,13910,155),(40509,13910,7),(40510,13910,12),(40511,13911,40),(40512,13911,101),(40513,13912,149),(40514,13913,101),(40515,13914,150),(40516,13915,149),(40517,13915,101),(40518,13916,101),(40519,13917,36),(40520,13918,5),(40521,13919,150),(40522,13919,6),(40523,13919,159),(40524,13919,2),(40525,13920,101),(40526,13920,5),(40527,13920,30),(40528,13921,10),(40529,13921,150),(40530,13921,15),(40531,13922,8),(40532,13923,154),(40533,13923,7),(40534,13924,101),(40535,13924,2),(40536,13925,10),(40537,13925,101),(40538,13925,5),(40539,13926,5),(40540,13926,30),(40541,13927,4),(40542,13927,7),(40543,13927,2),(40544,13927,12),(40545,13928,4),(40546,13928,21),(40547,13929,101),(40548,13930,101),(40549,13930,5),(40550,13931,147),(40551,13931,101),(40552,13932,4),(40553,13932,3),(40554,13932,2),(40555,13933,8),(40556,13933,35),(40557,13933,4),(40558,13933,21),(40559,13933,6),(40560,13933,12),(40561,13934,149),(40562,13934,5),(40563,13935,10),(40564,13935,147),(40565,13935,4),(40566,13935,7),(40567,13935,6),(40568,13935,15),(40569,13936,10),(40570,13936,40),(40571,13936,160),(40572,13937,4),(40573,13938,36),(40574,13938,149),(40575,13938,8),(40576,13938,21),(40577,13938,5),(40578,13939,7),(40579,13939,6),(40580,13940,150),(40581,13940,151),(40582,13940,5),(40583,13941,101),(40584,13941,5),(40585,13942,147),(40586,13942,101),(40587,13942,2),(40588,13943,149),(40589,13943,153),(40590,13943,21),(40591,13944,40),(40592,13944,15),(40593,13945,10),(40594,13945,101),(40595,13946,150),(40596,13946,7),(40597,13946,6),(40598,13947,4),(40599,13947,3),(40600,13947,2),(40601,13948,4),(40602,13948,101),(40603,13949,34),(40604,13949,147),(40605,13949,101),(40606,13950,101),(40607,13951,150),(40608,13951,2),(40609,13952,149),(40610,13952,150),(40611,13952,40),(40612,13952,15),(40613,13953,149),(40614,13954,149),(40615,13954,101),(40616,13955,36),(40617,13955,5),(40618,13956,150),(40619,13956,7),(40620,13957,150),(40621,13957,8),(40622,13957,95),(40623,13957,21),(40624,13957,12),(40625,13958,10),(40626,13958,7),(40627,13958,15),(40628,13959,101),(40629,13959,5),(40630,13960,149),(40631,13960,101),(40632,13961,7),(40633,13961,101),(40634,13961,6),(40635,13962,36),(40636,13962,2),(40637,13963,101),(40638,13963,5),(40639,13964,10),(40640,13964,40),(40641,13965,150),(40642,13965,12),(40643,13966,3),(40644,13966,2),(40645,13967,4),(40646,13968,10),(40647,13968,4),(40648,13969,101),(40649,13970,101),(40650,13971,60),(40651,13971,47),(40652,13972,150),(40653,13972,8),(40654,13973,40),(40655,13974,149),(40656,13974,150),(40657,13974,21),(40658,13975,149),(40659,13975,7),(40660,13976,10),(40661,13976,7),(40662,13977,101),(40663,13978,150),(40664,13978,35),(40665,13978,95),(40666,13978,5),(40667,13978,12),(40668,13979,40),(40669,13979,5),(40670,13980,154),(40671,13980,5),(40672,13981,36),(40673,13981,8),(40674,13981,95),(40675,13981,5),(40676,13981,30),(40677,13982,4),(40678,13982,7),(40679,13982,5),(40680,13983,4),(40681,13983,101),(40682,13983,15),(40683,13984,147),(40684,13984,101),(40685,13985,150),(40686,13985,4),(40687,13986,150),(40688,13986,8),(40689,13986,95),(40690,13986,3),(40691,13986,2),(40692,13986,12),(40693,13987,4),(40694,13987,5),(40695,13987,60),(40696,13988,150),(40697,13988,5),(40698,13989,21),(40699,13989,47),(40700,13990,21),(40701,13991,150),(40702,13991,8),(40703,13991,95),(40704,13991,12),(40705,13992,40),(40706,13993,149),(40707,13993,7),(40708,13993,2),(40709,13994,10),(40710,13994,150),(40711,13994,6),(40712,13994,15),(40713,13995,101),(40714,13995,2),(40715,13996,34),(40716,13996,4),(40717,13996,12),(40718,13997,147),(40719,13997,5),(40720,13998,6),(40721,13999,101),(40722,14000,101),(40723,14001,40),(40724,14002,147),(40725,14002,4),(40726,14003,8),(40727,14003,21),(40728,14003,47),(40729,14004,40),(40730,14004,6),(40731,14005,101),(40732,14005,2),(40733,14006,5),(40734,14007,150),(40735,14007,4),(40736,14008,4),(40737,14008,7),(40738,14008,6),(40739,14009,5),(40740,14010,8),(40741,14010,4),(40742,14010,21),(40743,14010,2),(40744,14011,4),(40745,14011,5),(40746,14011,60),(40747,14011,6),(40748,14012,36),(40749,14012,7),(40750,14012,6),(40751,14013,7),(40752,14013,101),(40753,14014,40),(40754,14014,101),(40755,14015,10),(40756,14015,5),(40757,14016,149),(40758,14016,101),(40759,14017,159),(40760,14017,2),(40761,14018,150),(40762,14018,30),(40763,14019,147),(40764,14019,7),(40765,14019,101),(40766,14019,15),(40767,14020,10),(40768,14020,40),(40769,14021,154),(40770,14022,4),(40771,14022,11),(40772,14023,150),(40773,14023,8),(40774,14023,21),(40775,14023,5),(40776,14023,12),(40777,14024,149),(40778,14024,5),(40779,14025,40),(40780,14025,6),(40781,14026,147),(40782,14026,101),(40783,14027,10),(40784,14027,40),(40785,14027,15),(40786,14028,8),(40787,14028,4),(40788,14028,21),(40789,14028,12),(40790,14029,5),(40791,14030,5),(40792,14031,101),(40793,14032,101),(40794,14032,2),(40795,14033,101),(40796,14033,5),(40797,14034,155),(40798,14034,2),(40799,14035,4),(40800,14036,8),(40801,14036,21),(40802,14036,47),(40803,14037,10),(40804,14037,40),(40805,14037,5),(40806,14038,101),(40807,14039,5),(40808,14040,7),(40809,14041,150),(40810,14041,2),(40811,14042,150),(40812,14043,146),(40813,14043,10),(40814,14044,150),(40815,14044,12),(40816,14045,4),(40817,14046,7),(40818,14047,101),(40819,14048,101),(40820,14049,4),(40821,14049,101),(40822,14049,2),(40823,14050,36),(40824,14050,5),(40825,14050,30),(40826,14051,157),(40827,14052,30),(40828,14053,8),(40829,14053,21),(40830,14053,47),(40831,14054,147),(40832,14054,101),(40833,14055,149),(40834,14055,7),(40835,14055,5),(40836,14056,147),(40837,14056,5),(40838,14056,30),(40839,14057,149),(40840,14057,7),(40841,14057,2),(40842,14058,36),(40843,14059,5),(40844,14060,7),(40845,14060,101),(40846,14061,101),(40847,14062,34),(40848,14062,4),(40849,14062,151),(40850,14063,4),(40851,14063,5),(40852,14063,30),(40853,14064,30),(40854,14065,149),(40855,14065,4),(40856,14065,11),(40857,14066,149),(40858,14066,7),(40859,14066,30),(40860,14067,4),(40861,14067,12),(40862,14067,15),(40863,14068,4),(40864,14068,7),(40865,14069,34),(40866,14069,147),(40867,14069,149),(40868,14069,40),(40869,14069,101),(40870,14069,5),(40871,14070,101),(40872,14070,5),(40873,14070,6),(40874,14071,101),(40875,14071,5),(40876,14072,101),(40877,14072,5),(40878,14073,150),(40879,14073,3),(40880,14073,2),(40881,14074,34),(40882,14074,4),(40883,14075,8),(40884,14075,21),(40885,14075,12),(40886,14076,10),(40887,14076,6),(40888,14076,15),(40889,14077,147),(40890,14077,4),(40891,14077,101),(40892,14078,147),(40893,14078,101),(40894,14078,6),(40895,14079,34),(40896,14080,11),(40897,14080,12),(40898,14081,149),(40899,14081,7),(40900,14082,4),(40901,14082,7),(40902,14083,160),(40903,14084,147),(40904,14084,7),(40905,14085,40),(40906,14085,5),(40907,14086,36),(40908,14086,150),(40909,14086,4),(40910,14086,15),(40911,14087,101),(40912,14087,30),(40913,14088,10),(40914,14088,150),(40915,14089,4),(40916,14089,11),(40917,14090,149),(40918,14090,35),(40919,14090,40),(40920,14090,7),(40921,14090,6),(40922,14091,149),(40923,14091,8),(40924,14091,7),(40925,14091,12),(40926,14092,5),(40927,14092,30),(40928,14093,150),(40929,14094,36),(40930,14094,4),(40931,14094,5),(40932,14094,30),(40933,14095,8),(40934,14095,47),(40935,14096,4),(40936,14096,7),(40937,14097,40),(40938,14098,149),(40939,14098,101),(40940,14099,34),(40941,14099,147),(40942,14099,155),(40943,14100,8),(40944,14100,21),(40945,14100,12),(40946,14101,150),(40947,14101,5),(40948,14101,11),(40949,14102,147),(40950,14102,8),(40951,14102,21),(40952,14102,3),(40953,14103,7),(40954,14103,101),(40955,14104,150),(40956,14104,7),(40957,14105,150),(40958,14105,35),(40959,14105,4),(40960,14106,149),(40961,14106,8),(40962,14106,12),(40963,14107,10),(40964,14107,150),(40965,14107,4),(40966,14107,5),(40967,14108,101),(40968,14108,5),(40969,14108,30),(40970,14109,150),(40971,14109,7),(40972,14109,101),(40973,14109,6),(40974,14110,6),(40975,14111,5),(40976,14112,10),(40977,14112,150),(40978,14112,95),(40979,14112,12),(40980,14113,149),(40981,14113,8),(40982,14113,21),(40983,14113,7),(40984,14114,4),(40985,14114,7),(40986,14114,6),(40987,14115,36),(40988,14115,101),(40989,14115,5),(40990,14116,36),(40991,14116,4),(40992,14117,10),(40993,14117,34),(40994,14117,149),(40995,14117,8),(40996,14117,21),(40997,14117,12),(40998,14118,149),(40999,14118,150),(41000,14118,101),(41001,14119,149),(41002,14119,154),(41003,14119,7),(41004,14119,101),(41005,14119,5),(41006,14120,101),(41007,14121,7),(41008,14121,5),(41009,14122,101),(41010,14122,5),(41011,14123,150),(41012,14123,4),(41013,14124,147),(41014,14124,40),(41015,14124,5),(41016,14125,146),(41017,14125,7),(41018,14126,36),(41019,14126,4),(41020,14126,5),(41021,14127,147),(41022,14127,101),(41023,14127,5),(41024,14127,30),(41025,14128,4),(41026,14129,8),(41027,14129,21),(41028,14129,3),(41029,14129,47),(41030,14130,10),(41031,14130,150),(41032,14130,7),(41033,14130,6),(41034,14131,10),(41035,14131,150),(41036,14131,4),(41037,14132,101),(41038,14133,7),(41039,14133,101),(41040,14134,40),(41041,14135,4),(41042,14135,5),(41043,14135,30),(41044,14136,34),(41045,14136,149),(41046,14136,12),(41047,14137,150),(41048,14137,95),(41049,14138,8),(41050,14138,35),(41051,14138,12),(41052,14139,149),(41053,14139,7),(41054,14140,8),(41055,14140,2),(41056,14140,12),(41057,14141,149),(41058,14141,101),(41059,14142,101),(41060,14142,6),(41061,14143,4),(41062,14143,6),(41063,14144,36),(41064,14144,40),(41065,14144,60),(41066,14145,36),(41067,14145,4),(41068,14145,5),(41069,14145,30),(41070,14146,35),(41071,14146,3),(41072,14146,6),(41073,14146,2),(41074,14147,147),(41075,14147,40),(41076,14147,5),(41077,14148,150),(41078,14148,6),(41079,14148,2),(41080,14149,150),(41081,14149,101),(41082,14149,6),(41083,14150,147),(41084,14150,21),(41085,14150,7),(41086,14150,5),(41087,14150,47),(41088,14151,101),(41089,14152,147),(41090,14152,101),(41091,14152,6),(41092,14153,150),(41093,14153,4),(41094,14153,21),(41095,14153,159),(41096,14153,2),(41097,14153,12),(41098,14154,36),(41099,14154,8),(41100,14154,21),(41101,14154,5),(41102,14155,147),(41103,14155,150),(41104,14155,4),(41105,14155,7),(41106,14155,5),(41107,14155,6),(41108,14156,149),(41109,14156,101),(41110,14156,5),(41111,14156,6),(41112,14157,7),(41113,14157,101),(41114,14157,5),(41115,14158,147),(41116,14158,101),(41117,14159,7),(41118,14160,8),(41119,14160,21),(41120,14160,12),(41121,14161,10),(41122,14161,101),(41123,14161,5),(41124,14162,150),(41125,14163,150),(41126,14163,7),(41127,14163,6),(41128,14164,101),(41129,14165,147),(41130,14165,7),(41131,14165,2),(41132,14166,147),(41133,14166,5),(41134,14166,2),(41135,14167,4),(41136,14167,152),(41137,14167,21),(41138,14167,5),(41139,14167,60),(41140,14168,10),(41141,14168,21),(41142,14168,7),(41143,14169,8),(41144,14169,95),(41145,14169,21),(41146,14170,10),(41147,14170,36),(41148,14170,149),(41149,14170,7),(41150,14170,101),(41151,14170,5),(41152,14171,36),(41153,14171,4),(41154,14171,5),(41155,14172,147),(41156,14172,4),(41157,14172,151),(41158,14172,7),(41159,14172,101),(41160,14172,2),(41161,14173,147),(41162,14173,36),(41163,14173,150),(41164,14173,40),(41165,14173,5),(41166,14173,6),(41167,14174,147),(41168,14174,4),(41169,14174,7),(41170,14174,5),(41171,14174,157),(41172,14174,30),(41173,14175,101),(41174,14175,5),(41175,14176,101),(41176,14176,5),(41177,14177,10),(41178,14177,150),(41179,14177,101),(41180,14178,36),(41181,14178,101),(41182,14178,5),(41183,14178,11),(41184,14178,30),(41185,14179,10),(41186,14179,7),(41187,14180,147),(41188,14180,149),(41189,14180,101),(41190,14180,2),(41191,14181,147),(41192,14181,101),(41193,14181,6),(41194,14182,149),(41195,14182,7),(41196,14182,101),(41197,14182,5),(41198,14183,149),(41199,14183,21),(41200,14183,101),(41201,14184,147),(41202,14184,4),(41203,14184,5),(41204,14185,34),(41205,14185,147),(41206,14186,147),(41207,14186,4),(41208,14186,7),(41209,14186,101),(41210,14186,2),(41211,14187,10),(41212,14187,5),(41213,14188,149),(41214,14188,7),(41215,14188,6),(41216,14189,150),(41217,14189,35),(41218,14190,40),(41219,14190,5),(41220,14191,7),(41221,14191,101),(41222,14192,154),(41223,14193,149),(41224,14193,8),(41225,14193,21),(41226,14193,7),(41227,14194,101),(41228,14194,2),(41229,14195,147),(41230,14195,4),(41231,14195,7),(41232,14195,101),(41233,14196,147),(41234,14196,101),(41235,14196,2),(41236,14197,150),(41237,14197,159),(41238,14197,2),(41239,14197,12),(41240,14198,149),(41241,14198,8),(41242,14198,21),(41243,14199,34),(41244,14199,36),(41245,14199,4),(41246,14199,5),(41247,14199,30),(41248,14200,10),(41249,14200,150),(41250,14200,4),(41251,14200,95),(41252,14201,147),(41253,14201,7),(41254,14201,101),(41255,14201,5),(41256,14202,153),(41257,14202,21),(41258,14202,5),(41259,14203,149),(41260,14203,4),(41261,14203,5),(41262,14203,30),(41263,14204,147),(41264,14204,8),(41265,14204,154),(41266,14205,147),(41267,14205,7),(41268,14205,101),(41269,14205,6),(41270,14206,147),(41271,14206,101),(41272,14206,5),(41273,14207,21),(41274,14207,7),(41275,14207,47),(41276,14208,7),(41277,14208,101),(41278,14208,6),(41279,14209,4),(41280,14209,7),(41281,14210,7),(41282,14211,101),(41283,14212,149),(41284,14212,101),(41285,14213,101),(41286,14213,2),(41287,14214,149),(41288,14214,150),(41289,14215,4),(41290,14215,12),(41291,14216,34),(41292,14216,4),(41293,14217,149),(41294,14217,21),(41295,14217,47),(41296,14218,4),(41297,14219,4),(41298,14219,7),(41299,14220,21),(41300,14220,47),(41301,14221,8),(41302,14221,4),(41303,14221,3),(41304,14221,5),(41305,14221,30),(41306,14222,149),(41307,14222,21),(41308,14222,5),(41309,14223,150),(41310,14224,150),(41311,14224,6),(41312,14225,10),(41313,14225,150),(41314,14225,101),(41315,14225,6),(41316,14225,12),(41317,14226,4),(41318,14226,60),(41319,14227,8),(41320,14228,7),(41321,14228,101),(41322,14229,101),(41323,14230,146),(41324,14230,150),(41325,14230,8),(41326,14230,7),(41327,14231,149),(41328,14231,5),(41329,14231,6),(41330,14232,147),(41331,14232,150),(41332,14232,5),(41333,14232,6),(41334,14233,8),(41335,14233,4),(41336,14233,5),(41337,14233,12),(41338,14234,147),(41339,14234,149),(41340,14234,101),(41341,14235,10),(41342,14235,147),(41343,14235,7),(41344,14235,101),(41345,14235,5),(41346,14236,149),(41347,14236,4),(41348,14236,7),(41349,14236,101),(41350,14237,147),(41351,14237,101),(41352,14238,150),(41353,14238,35),(41354,14238,12),(41355,14239,4),(41356,14239,154),(41357,14240,40),(41358,14240,5),(41359,14241,7),(41360,14241,3),(41361,14241,159),(41362,14241,2),(41363,14242,10),(41364,14242,7),(41365,14242,5),(41366,14243,34),(41367,14243,147),(41368,14243,36),(41369,14243,101),(41370,14244,147),(41371,14244,101),(41372,14245,34),(41373,14245,4),(41374,14245,3),(41375,14245,157),(41376,14246,149),(41377,14246,7),(41378,14246,3),(41379,14246,101),(41380,14247,10),(41381,14247,149),(41382,14247,150),(41383,14247,7),(41384,14248,5),(41385,14249,4),(41386,14249,7),(41387,14249,5),(41388,14250,149),(41389,14250,101),(41390,14250,5),(41391,14251,3),(41392,14251,159),(41393,14251,2),(41394,14252,149),(41395,14252,4),(41396,14252,7),(41397,14252,3),(41398,14252,2),(41399,14252,15),(41400,14253,150),(41401,14253,4),(41402,14254,154),(41403,14254,7),(41404,14254,101),(41405,14254,5),(41406,14255,8),(41407,14255,4),(41408,14255,21),(41409,14255,2),(41410,14255,12),(41411,14256,10),(41412,14256,150),(41413,14256,8),(41414,14256,7),(41415,14256,12),(41416,14257,145),(41417,14258,145),(41418,14258,40),(41419,14259,145),(41420,14260,145),(41421,14261,145),(41422,14262,145),(41423,14263,145),(41424,14264,145),(41425,14265,145),(41426,14266,147),(41427,14266,7),(41428,14266,6),(41429,14267,40),(41430,14267,6),(41431,14268,34),(41432,14268,147),(41433,14268,152),(41434,14269,8),(41435,14269,21),(41436,14270,150),(41437,14270,4),(41438,14270,7),(41439,14270,101),(41440,14270,6),(41441,14271,10),(41442,14271,150),(41443,14271,101),(41444,14272,7),(41445,14273,101),(41446,14273,5),(41447,14274,7),(41448,14274,12),(41449,14275,150),(41450,14275,35),(41451,14276,4),(41452,14276,101),(41453,14277,3),(41454,14277,159),(41455,14277,2),(41456,14278,147),(41457,14278,7),(41458,14278,5),(41459,14279,8),(41460,14279,7),(41461,14279,101),(41462,14280,147),(41463,14280,101),(41464,14281,10),(41465,14281,34),(41466,14281,147),(41467,14281,4),(41468,14281,5),(41469,14281,157),(41470,14282,149),(41471,14282,150),(41472,14282,21),(41473,14282,7),(41474,14282,47),(41475,14283,7),(41476,14283,5),(41477,14283,6),(41478,14284,149),(41479,14284,7),(41480,14284,5),(41481,14284,2),(41482,14285,7),(41483,14285,3),(41484,14285,2),(41485,14286,150),(41486,14286,7),(41487,14286,3),(41488,14286,159),(41489,14286,2),(41490,14287,150),(41491,14287,6),(41492,14288,7),(41493,14288,15),(41494,14289,10),(41495,14289,6),(41496,14290,4),(41497,14290,7),(41498,14291,101),(41499,14292,145),(41500,14292,150),(41501,14292,101),(41502,14293,145),(41503,14293,7),(41504,14294,145),(41505,14294,101),(41506,14295,145),(41507,14295,101),(41508,14296,145),(41509,14296,150),(41510,14297,7),(41511,14298,145),(41512,14298,150),(41513,14298,4),(41514,14298,101),(41515,14299,145),(41516,14299,8),(41517,14299,4),(41518,14299,21),(41519,14299,12),(41520,14300,8),(41521,14300,21),(41522,14301,7),(41523,14302,36),(41524,14302,4),(41525,14302,5),(41526,14302,30),(41527,14303,154),(41528,14303,7),(41529,14303,101),(41530,14304,5),(41531,14304,2),(41532,14305,8),(41533,14305,21),(41534,14305,7),(41535,14305,101),(41536,14305,5),(41537,14305,47),(41538,14306,101),(41539,14306,2),(41540,14307,10),(41541,14307,150),(41542,14307,8),(41543,14307,4),(41544,14307,12),(41545,14308,150),(41546,14308,4),(41547,14308,15),(41548,14309,7),(41549,14309,101),(41550,14309,5),(41551,14309,30),(41552,14310,150),(41553,14310,101),(41554,14310,6),(41555,14311,101),(41556,14312,10),(41557,14312,147),(41558,14312,36),(41559,14312,4),(41560,14312,101),(41561,14313,7),(41562,14313,101),(41563,14313,5),(41564,14313,160),(41565,14314,36),(41566,14314,4),(41567,14314,5),(41568,14314,60),(41569,14315,149),(41570,14315,150),(41571,14315,101),(41572,14316,7),(41573,14316,101),(41574,14316,2),(41575,14317,149),(41576,14317,2),(41577,14318,5),(41578,14318,30),(41579,14319,8),(41580,14319,4),(41581,14319,95),(41582,14319,12),(41583,14319,15),(41584,14320,150),(41585,14321,149),(41586,14321,7),(41587,14322,7),(41588,14322,5),(41589,14322,6),(41590,14323,147),(41591,14323,95),(41592,14323,157),(41593,14323,30),(41594,14324,5),(41595,14325,4),(41596,14325,11),(41597,14326,10),(41598,14326,150),(41599,14326,15),(41600,14327,10),(41601,14327,150),(41602,14327,3),(41603,14327,159),(41604,14327,2),(41605,14328,147),(41606,14328,150),(41607,14328,40),(41608,14328,101),(41609,14328,5),(41610,14329,7),(41611,14329,101),(41612,14330,4),(41613,14331,4),(41614,14331,60),(41615,14332,147),(41616,14332,8),(41617,14332,4),(41618,14332,157),(41619,14333,153),(41620,14334,153),(41621,14335,4),(41622,14336,4),(41623,14337,149),(41624,14337,150),(41625,14338,8),(41626,14339,34),(41627,14339,60),(41628,14340,34),(41629,14340,35),(41630,14340,5),(41631,14341,147),(41632,14342,149),(41633,14342,5),(41634,14343,149),(41635,14343,35),(41636,14344,4),(41637,14344,12),(41638,14345,153),(41639,14346,34),(41640,14346,147),(41641,14346,4),(41642,14346,5),(41643,14347,8),(41644,14347,21),(41645,14347,6),(41646,14348,8),(41647,14349,101),(41648,14350,4),(41649,14350,12),(41650,14351,5),(41651,14351,2),(41652,14352,149),(41653,14352,5),(41654,14353,4),(41655,14353,7),(41656,14353,101),(41657,14354,149),(41658,14354,7),(41659,14354,101),(41660,14355,147),(41661,14355,101),(41662,14356,4),(41663,14356,7),(41664,14357,8),(41665,14357,21),(41666,14358,149),(41667,14358,7),(41668,14359,7),(41669,14359,5),(41670,14359,2),(41671,14360,147),(41672,14361,8),(41673,14361,4),(41674,14361,21),(41675,14361,47),(41676,14362,4),(41677,14362,101),(41678,14363,101),(41679,14363,5),(41680,14363,12),(41681,14364,40),(41682,14364,5),(41683,14365,7),(41684,14365,101),(41685,14365,6),(41686,14366,36),(41687,14366,4),(41688,14366,11),(41689,14366,2),(41690,14367,147),(41691,14367,8),(41692,14367,95),(41693,14367,21),(41694,14368,10),(41695,14368,7),(41696,14369,8),(41697,14370,8),(41698,14370,4),(41699,14370,15),(41700,14371,8),(41701,14371,4),(41702,14371,95),(41703,14371,21),(41704,14372,147),(41705,14372,101),(41706,14372,2),(41707,14373,10),(41708,14373,8),(41709,14373,3),(41710,14373,159),(41711,14373,12),(41712,14374,34),(41713,14375,10),(41714,14375,36),(41715,14375,101),(41716,14376,150),(41717,14377,149),(41718,14377,150),(41719,14377,7),(41720,14377,6),(41721,14377,12),(41722,14378,150),(41723,14378,95),(41724,14378,2),(41725,14379,101),(41726,14380,30),(41727,14380,12),(41728,14381,35),(41729,14381,4),(41730,14382,150),(41731,14382,4),(41732,14382,95),(41733,14383,36),(41734,14383,8),(41735,14383,21),(41736,14383,12),(41737,14384,149),(41738,14384,7),(41739,14384,101),(41740,14384,5),(41741,14385,8),(41742,14385,95),(41743,14385,21),(41744,14385,7),(41745,14385,5),(41746,14385,6),(41747,14386,8),(41748,14386,21),(41749,14386,101),(41750,14387,101),(41751,14387,2),(41752,14388,7),(41753,14388,101),(41754,14389,4),(41755,14389,11),(41756,14390,150),(41757,14390,4),(41758,14390,30),(41759,14391,153),(41760,14391,155),(41761,14391,30),(41762,14392,4),(41763,14392,60),(41764,14392,15),(41765,14393,40),(41766,14394,4),(41767,14394,11),(41768,14395,147),(41769,14395,40),(41770,14395,5),(41771,14396,7),(41772,14396,6),(41773,14397,10),(41774,14398,147),(41775,14398,149),(41776,14398,101),(41777,14399,147),(41778,14399,149),(41779,14399,101),(41780,14400,147),(41781,14400,101),(41782,14400,5),(41783,14401,5),(41784,14401,30),(41785,14402,101),(41786,14403,150),(41787,14403,154),(41788,14404,150),(41789,14404,8),(41790,14404,4),(41791,14404,12),(41792,14405,4),(41793,14405,60),(41794,14406,4),(41795,14406,2),(41796,14407,7),(41797,14408,5),(41798,14409,149),(41799,14409,154),(41800,14409,5),(41801,14410,10),(41802,14410,147),(41803,14410,150),(41804,14410,101),(41805,14410,6),(41806,14410,15),(41807,14411,101),(41808,14412,101),(41809,14413,5),(41810,14414,10),(41811,14414,101),(41812,14414,5),(41813,14414,6),(41814,14415,7),(41815,14415,6),(41816,14416,10),(41817,14416,101),(41818,14416,5),(41819,14416,6),(41820,14417,101),(41821,14418,153),(41822,14418,155),(41823,14419,7),(41824,14419,5),(41825,14420,149),(41826,14420,101),(41827,14421,150),(41828,14421,8),(41829,14421,4),(41830,14421,12),(41831,14422,10),(41832,14422,147),(41833,14422,7),(41834,14422,101),(41835,14423,147),(41836,14423,8),(41837,14423,5),(41838,14423,157),(41839,14423,30),(41840,14424,147),(41841,14424,5),(41842,14424,30),(41843,14424,2),(41844,14425,95),(41845,14425,101),(41846,14426,7),(41847,14426,101),(41848,14426,6),(41849,14427,36),(41850,14427,4),(41851,14428,10),(41852,14428,4),(41853,14429,147),(41854,14429,36),(41855,14429,8),(41856,14429,21),(41857,14430,4),(41858,14430,7),(41859,14430,101),(41860,14431,8),(41861,14431,4),(41862,14431,155),(41863,14431,7),(41864,14431,6),(41865,14431,15),(41866,14432,7),(41867,14432,101),(41868,14432,6),(41869,14433,147),(41870,14433,149),(41871,14433,5),(41872,14434,147),(41873,14435,150),(41874,14435,8),(41875,14435,21),(41876,14435,12),(41877,14436,150),(41878,14437,149),(41879,14437,5),(41880,14437,30),(41881,14438,10),(41882,14438,150),(41883,14438,4),(41884,14438,15),(41885,14439,10),(41886,14439,147),(41887,14439,101),(41888,14440,150),(41889,14440,4),(41890,14440,7),(41891,14440,3),(41892,14440,5),(41893,14441,8),(41894,14441,4),(41895,14441,5),(41896,14441,12),(41897,14442,147),(41898,14442,7),(41899,14442,101),(41900,14443,7),(41901,14443,3),(41902,14443,101),(41903,14444,101),(41904,14444,5),(41905,14445,147),(41906,14445,7),(41907,14446,101),(41908,14446,5),(41909,14446,11),(41910,14447,10),(41911,14447,149),(41912,14447,150),(41913,14448,150),(41914,14448,4),(41915,14448,7),(41916,14449,101),(41917,14449,5),(41918,14450,10),(41919,14450,5),(41920,14450,6),(41921,14450,15),(41922,14451,34),(41923,14451,149),(41924,14452,10),(41925,14452,5),(41926,14453,147),(41927,14453,101),(41928,14453,5),(41929,14453,30),(41930,14454,150),(41931,14454,12),(41932,14455,36),(41933,14455,4),(41934,14455,12),(41935,14456,34),(41936,14456,4),(41937,14456,60),(41938,14457,149),(41939,14457,150),(41940,14457,12),(41941,14458,149),(41942,14458,7),(41943,14459,150),(41944,14459,35),(41945,14460,4),(41946,14460,21),(41947,14461,36),(41948,14461,4),(41949,14462,10),(41950,14462,7),(41951,14462,101),(41952,14463,7),(41953,14463,6),(41954,14464,147),(41955,14464,149),(41956,14464,7),(41957,14464,101),(41958,14464,6),(41959,14465,147),(41960,14465,5),(41961,14466,147),(41962,14466,8),(41963,14466,157),(41964,14466,6),(41965,14467,4),(41966,14468,7),(41967,14469,36),(41968,14469,149),(41969,14469,7),(41970,14469,5),(41971,14470,101),(41972,14471,150),(41973,14472,4),(41974,14472,2),(41975,14473,4),(41976,14473,2),(41977,14474,149),(41978,14474,7),(41979,14474,5),(41980,14475,5),(41981,14476,34),(41982,14476,147),(41983,14476,36),(41984,14476,4),(41985,14476,5),(41986,14476,60),(41987,14477,101),(41988,14477,5),(41989,14478,150),(41990,14479,8),(41991,14480,147),(41992,14480,150),(41993,14480,5),(41994,14481,147),(41995,14481,149),(41996,14481,7),(41997,14482,147),(41998,14482,8),(41999,14482,21),(42000,14482,101),(42001,14483,101),(42002,14484,150),(42003,14484,5),(42004,14484,30),(42005,14485,10),(42006,14485,150),(42007,14485,4),(42008,14485,6),(42009,14485,12),(42010,14486,4),(42011,14487,147),(42012,14487,40),(42013,14488,10),(42014,14488,101),(42015,14489,101),(42016,14490,34),(42017,14490,150),(42018,14490,152),(42019,14491,149),(42020,14491,5),(42021,14491,11),(42022,14492,149),(42023,14492,101),(42024,14493,8),(42025,14493,95),(42026,14493,47),(42027,14493,12),(42028,14494,7),(42029,14496,5),(42030,14496,30),(42031,14497,150),(42032,14497,95),(42033,14498,159),(42034,14498,2),(42035,14499,10),(42036,14499,147),(42037,14499,7),(42038,14499,5),(42039,14500,101),(42040,14500,6),(42041,14501,101),(42042,14502,145),(42043,14503,145),(42044,14504,145),(42045,14505,145),(42046,14506,145),(42047,14507,145),(42048,14508,145),(42049,14509,145),(42050,14509,101),(42051,14510,101),(42052,14511,7),(42053,14511,101),(42054,14512,4),(42055,14512,155),(42056,14512,5),(42057,14512,157),(42058,14513,155),(42059,14514,10),(42060,14514,149),(42061,14514,5),(42062,14515,146),(42063,14515,8),(42064,14515,95),(42065,14515,155),(42066,14515,7),(42067,14516,149),(42068,14516,7),(42069,14516,5),(42070,14517,150),(42071,14517,4),(42072,14517,7),(42073,14518,8),(42074,14518,4),(42075,14518,21),(42076,14518,3),(42077,14518,2),(42078,14519,4),(42079,14519,101),(42080,14520,34),(42081,14520,147),(42082,14520,149),(42083,14520,101),(42084,14521,101),(42085,14522,8),(42086,14522,95),(42087,14522,21),(42088,14522,12),(42089,14523,36),(42090,14523,4),(42091,14524,10),(42092,14524,147),(42093,14524,150),(42094,14524,4),(42095,14524,15),(42096,14525,147),(42097,14525,5),(42098,14526,101),(42099,14527,101),(42100,14528,101),(42101,14529,150),(42102,14529,21),(42103,14529,47),(42104,14530,4),(42105,14530,60),(42106,14531,4),(42107,14532,147),(42108,14532,40),(42109,14533,7),(42110,14533,2),(42111,14534,147),(42112,14534,8),(42113,14534,5),(42114,14534,30),(42115,14534,12),(42116,14535,8),(42117,14535,4),(42118,14535,21),(42119,14535,101),(42120,14536,7),(42121,14536,3),(42122,14536,101),(42123,14537,147),(42124,14537,101),(42125,14537,5),(42126,14538,147),(42127,14538,101),(42128,14539,7),(42129,14540,147),(42130,14540,101),(42131,14541,10),(42132,14541,47),(42133,14541,2),(42134,14542,95),(42135,14542,5),(42136,14543,150),(42137,14543,101),(42138,14544,8),(42139,14544,4),(42140,14544,12),(42141,14545,7),(42142,14545,6),(42143,14546,147),(42144,14546,40),(42145,14546,5),(42146,14546,6),(42147,14547,147),(42148,14547,149),(42149,14547,5),(42150,14548,10),(42151,14548,150),(42152,14548,7),(42153,14549,147),(42154,14549,101),(42155,14549,5),(42156,14549,30),(42157,14550,147),(42158,14550,101),(42159,14550,5),(42160,14551,4),(42161,14551,6),(42162,14552,150),(42163,14552,35),(42164,14552,6),(42165,14553,36),(42166,14553,149),(42167,14553,5),(42168,14554,36),(42169,14554,101),(42170,14554,6),(42171,14555,101),(42172,14556,4),(42173,14556,154),(42174,14556,7),(42175,14556,12),(42176,14557,149),(42177,14557,153),(42178,14557,5),(42179,14558,36),(42180,14558,5),(42181,14558,60),(42182,14559,147),(42183,14560,7),(42184,14561,5),(42185,14561,157),(42186,14562,5),(42187,14562,30),(42188,14563,6),(42189,14564,150),(42190,14565,150),(42191,14566,8),(42192,14566,4),(42193,14566,95),(42194,14566,160),(42195,14566,12),(42196,14567,8),(42197,14567,4),(42198,14567,154),(42199,14567,101),(42200,14567,2),(42201,14567,12),(42202,14568,4),(42203,14569,101),(42204,14570,101),(42205,14571,150),(42206,14572,4),(42207,14572,11),(42208,14573,149),(42209,14573,8),(42210,14573,21),(42211,14574,34),(42212,14574,147),(42213,14574,4),(42214,14575,60),(42215,14576,150),(42216,14576,35),(42217,14576,3),(42218,14577,150),(42219,14577,95),(42220,14577,159),(42221,14577,2),(42222,14578,7),(42223,14578,101),(42224,14579,36),(42225,14579,5),(42226,14579,60),(42227,14580,147),(42228,14580,149),(42229,14580,40),(42230,14580,12),(42231,14581,147),(42232,14581,101),(42233,14581,2),(42234,14582,34),(42235,14582,36),(42236,14582,30),(42237,14583,5),(42238,14584,147),(42239,14584,101),(42240,14584,5),(42241,14585,101),(42242,14585,6),(42243,14586,101),(42244,14587,101),(42245,14587,5),(42246,14588,101),(42247,14589,4),(42248,14589,5),(42249,14589,30),(42250,14590,34),(42251,14590,36),(42252,14590,4),(42253,14591,149),(42254,14591,30),(42255,14592,21),(42256,14592,7),(42257,14592,47),(42258,14593,7),(42259,14593,5),(42260,14594,147),(42261,14594,8),(42262,14594,101),(42263,14594,30),(42264,14595,10),(42265,14595,147),(42266,14596,35),(42267,14596,4),(42268,14596,7),(42269,14597,101),(42270,14597,2),(42271,14598,101),(42272,14599,7),(42273,14599,101),(42274,14600,101),(42275,14601,5),(42276,14601,11),(42277,14602,5),(42278,14602,11),(42279,14602,60),(42280,14603,150),(42281,14603,5),(42282,14603,30),(42283,14604,147),(42284,14604,150),(42285,14604,7),(42286,14605,4),(42287,14605,101),(42288,14605,15),(42289,14606,8),(42290,14606,95),(42291,14606,7),(42292,14607,8),(42293,14607,101),(42294,14608,10),(42295,14608,95),(42296,14608,12),(42297,14609,10),(42298,14609,3),(42299,14609,2),(42300,14609,15),(42301,14610,150),(42302,14611,60),(42303,14612,7),(42304,14612,5),(42305,14613,147),(42306,14613,101),(42307,14613,2),(42308,14614,149),(42309,14614,101),(42310,14615,40),(42311,14616,150),(42312,14616,12),(42313,14617,150),(42314,14617,7),(42315,14618,7),(42316,14618,5),(42317,14618,60),(42318,14619,34),(42319,14619,147),(42320,14619,101),(42321,14620,34),(42322,14620,4),(42323,14620,5),(42324,14620,60),(42325,14621,149),(42326,14621,95),(42327,14621,21),(42328,14621,101),(42329,14621,5),(42330,14621,159),(42331,14622,149),(42332,14622,8),(42333,14622,101),(42334,14623,7),(42335,14623,101),(42336,14624,101),(42337,14625,4),(42338,14625,12),(42339,14626,147),(42340,14626,8),(42341,14626,35),(42342,14627,7),(42343,14627,101),(42344,14628,101),(42345,14629,36),(42346,14629,4),(42347,14629,5),(42348,14630,10),(42349,14630,6),(42350,14630,160),(42351,14630,15),(42352,14631,147),(42353,14631,149),(42354,14631,101),(42355,14631,30),(42356,14632,101),(42357,14632,6),(42358,14633,7),(42359,14633,101),(42360,14634,36),(42361,14634,35),(42362,14634,152),(42363,14634,30),(42364,14635,150),(42365,14635,5),(42366,14636,4),(42367,14636,40),(42368,14637,95),(42369,14637,6),(42370,14638,21),(42371,14638,7),(42372,14638,6),(42373,14639,34),(42374,14639,7),(42375,14639,101),(42376,14639,6),(42377,14640,101),(42378,14641,147),(42379,14641,150),(42380,14641,4),(42381,14642,150),(42382,14642,7),(42383,14643,4),(42384,14644,95),(42385,14644,21),(42386,14644,7),(42387,14644,12),(42388,14645,101),(42389,14645,5),(42390,14646,7),(42391,14648,147),(42392,14648,4),(42393,14648,7),(42394,14649,101),(42395,14650,7),(42396,14651,101),(42397,14652,10),(42398,14652,35),(42399,14652,6),(42400,14652,12),(42401,14653,153),(42402,14654,4),(42403,14655,95),(42404,14655,101),(42405,14656,101),(42406,14656,5),(42407,14656,6),(42408,14657,4),(42409,14657,101),(42410,14657,6),(42411,14658,147),(42412,14658,101),(42413,14659,149),(42414,14659,7),(42415,14660,4),(42416,14660,159),(42417,14660,2),(42418,14660,15),(42419,14661,7),(42420,14661,6),(42421,14662,147),(42422,14662,7),(42423,14662,101),(42424,14663,7),(42425,14663,101),(42426,14663,6),(42427,14664,10),(42428,14664,150),(42429,14664,160),(42430,14665,10),(42431,14665,34),(42432,14665,36),(42433,14665,4),(42434,14665,5),(42435,14666,4),(42436,14666,101),(42437,14666,12),(42438,14667,147),(42439,14667,101),(42440,14668,101),(42441,14669,147),(42442,14669,15),(42443,14670,149),(42444,14670,6),(42445,14671,21),(42446,14672,150),(42447,14672,35),(42448,14672,40),(42449,14673,34),(42450,14673,149),(42451,14673,4),(42452,14673,7),(42453,14673,12),(42454,14674,4),(42455,14675,8),(42456,14675,12),(42457,14676,7),(42458,14676,101),(42459,14676,5),(42460,14676,160),(42461,14677,4),(42462,14677,159),(42463,14677,2),(42464,14678,8),(42465,14678,21),(42466,14678,15),(42467,14679,150),(42468,14679,101),(42469,14680,101),(42470,14681,101),(42471,14682,101),(42472,14683,4),(42473,14684,10),(42474,14684,150),(42475,14684,3),(42476,14685,150),(42477,14685,4),(42478,14686,34),(42479,14686,7),(42480,14687,147),(42481,14687,6),(42482,14688,8),(42483,14688,4),(42484,14688,60),(42485,14689,10),(42486,14689,147),(42487,14689,149),(42488,14689,150),(42489,14689,4),(42490,14690,5),(42491,14691,10),(42492,14691,7),(42493,14691,101),(42494,14691,6),(42495,14692,101),(42496,14693,10),(42497,14693,150),(42498,14693,6),(42499,14694,149),(42500,14694,101),(42501,14695,40),(42502,14696,150),(42503,14697,150),(42504,14697,21),(42505,14697,101),(42506,14697,15),(42507,14698,101),(42508,14699,101),(42509,14700,150),(42510,14701,150),(42511,14701,21),(42512,14701,12),(42513,14702,149),(42514,14702,5),(42515,14702,60),(42516,14703,34),(42517,14703,4),(42518,14703,7),(42519,14703,6),(42520,14704,149),(42521,14704,21),(42522,14704,101),(42523,14705,101),(42524,14706,4),(42525,14706,101),(42526,14706,5),(42527,14707,4),(42528,14707,21),(42529,14707,47),(42530,14708,7),(42531,14708,101),(42532,14708,5),(42533,14709,10),(42534,14709,4),(42535,14709,7),(42536,14709,101),(42537,14710,147),(42538,14710,4),(42539,14710,101),(42540,14711,7),(42541,14711,101),(42542,14711,15),(42543,14712,10),(42544,14712,7),(42545,14712,101),(42546,14712,5),(42547,14713,101),(42548,14714,150),(42549,14715,10),(42550,14715,150),(42551,14715,7),(42552,14715,12),(42553,14715,15),(42554,14716,36),(42555,14716,35),(42556,14717,36),(42557,14717,4),(42558,14717,30),(42559,14718,149),(42560,14718,30),(42561,14719,150),(42562,14719,35),(42563,14720,34),(42564,14720,4),(42565,14721,7),(42566,14721,5),(42567,14722,101),(42568,14723,101),(42569,14724,101),(42570,14725,8),(42571,14726,101),(42572,14726,2),(42573,14727,7),(42574,14727,6),(42575,14728,7),(42576,14728,101),(42577,14729,145),(42578,14729,101),(42579,14730,101),(42580,14731,145),(42581,14731,101),(42582,14732,145),(42583,14733,145),(42584,14733,147),(42585,14733,149),(42586,14733,95),(42587,14733,101),(42588,14734,145),(42589,14734,40),(42590,14735,145),(42591,14736,145),(42592,14737,145),(42593,14738,145),(42594,14739,145),(42595,14740,145),(42596,14741,101),(42597,14742,101),(42598,14743,150),(42599,14744,4),(42600,14744,3),(42601,14745,147),(42602,14745,36),(42603,14745,101),(42604,14745,5),(42605,14746,4),(42606,14746,101),(42607,14747,147),(42608,14747,40),(42609,14747,101),(42610,14747,5),(42611,14748,101),(42612,14748,5),(42613,14748,15),(42614,14749,8),(42615,14749,40),(42616,14749,12),(42617,14750,8),(42618,14750,21),(42619,14751,7),(42620,14751,101),(42621,14751,5),(42622,14752,101),(42623,14752,5),(42624,14754,7),(42625,14754,101),(42626,14754,6),(42627,14755,10),(42628,14755,7),(42629,14755,101),(42630,14756,4),(42631,14756,101),(42632,14757,8),(42633,14757,21),(42634,14757,6),(42635,14758,101),(42636,14758,5),(42637,14759,101),(42638,14760,150),(42639,14760,101),(42640,14760,12),(42641,14761,36),(42642,14761,4),(42643,14762,21),(42644,14762,5),(42645,14763,4),(42646,14763,7),(42647,14763,5),(42648,14763,30),(42649,14764,147),(42650,14764,149),(42651,14764,21),(42652,14765,147),(42653,14765,101),(42654,14766,7),(42655,14766,5),(42656,14767,5),(42657,14768,34),(42658,14768,147),(42659,14768,36),(42660,14768,4),(42661,14768,30),(42662,14769,149),(42663,14769,7),(42664,14769,101),(42665,14770,7),(42666,14770,101),(42667,14770,5),(42668,14771,101),(42669,14771,5),(42670,14772,10),(42671,14772,34),(42672,14772,150),(42673,14773,95),(42674,14773,21),(42675,14773,47),(42676,14774,101),(42677,14774,5),(42678,14775,147),(42679,14775,101),(42680,14775,158),(42681,14776,101),(42682,14778,101),(42683,14780,150),(42684,14781,149),(42685,14782,4),(42686,14782,60),(42687,14783,149),(42688,14783,101),(42689,14784,149),(42690,14784,101),(42691,14784,5),(42692,14785,101),(42693,14786,5),(42694,14787,36),(42695,14787,5),(42696,14788,150),(42697,14788,21),(42698,14788,12),(42699,14789,5),(42700,14789,30),(42701,14790,36),(42702,14790,5),(42703,14790,30),(42704,14791,40),(42705,14792,147),(42706,14792,101),(42707,14792,5),(42708,14793,149),(42709,14793,7),(42710,14794,5),(42711,14795,147),(42712,14795,101),(42713,14799,150),(42714,14800,36),(42715,14800,5),(42716,14800,11),(42717,14801,4),(42718,14802,5),(42719,14804,7),(42720,14805,4),(42721,14808,150),(42722,14809,147),(42723,14811,7),(42724,14812,147),(42725,14813,147),(42726,14814,101),(42727,14814,15),(42728,14816,149),(42729,14817,150),(42730,14818,101),(42731,14819,101),(42732,14820,7),(42733,14820,101),(42734,14821,7),(42735,14821,5),(42736,14822,40),(42737,14823,5),(42738,14824,154),(42739,14824,7),(42740,14824,6),(42741,14825,34),(42742,14825,149),(42743,14825,21),(42744,14825,101),(42745,14825,5),(42746,14826,7),(42747,14826,6),(42748,14827,10),(42749,14827,150),(42750,14828,155),(42751,14829,7),(42752,14829,101),(42753,14830,147),(42754,14830,7),(42755,14830,15),(42756,14831,101),(42757,14832,4),(42758,14832,21),(42759,14832,101),(42760,14832,47),(42761,14833,4),(42762,14833,2),(42763,14833,15),(42764,14834,10),(42765,14834,147),(42766,14834,101),(42767,14835,101),(42768,14836,5),(42769,14836,11),(42770,14837,34),(42771,14837,4),(42772,14837,40),(42773,14838,10),(42774,14838,147),(42775,14838,150),(42776,14838,4),(42777,14838,101),(42778,14838,5),(42779,14838,30),(42780,14839,147),(42781,14839,7),(42782,14839,101),(42783,14839,5),(42784,14839,2),(42785,14840,147),(42786,14840,7),(42787,14840,101),(42788,14841,7),(42789,14841,101),(42790,14841,6),(42791,14841,15),(42792,14842,101),(42793,14843,36),(42794,14843,35),(42795,14843,4),(42796,14844,4),(42797,14845,150),(42798,14845,8),(42799,14845,12),(42800,14846,10),(42801,14846,101),(42802,14846,6),(42803,14846,15),(42804,14847,150),(42805,14847,7),(42806,14848,36),(42807,14848,4),(42808,14849,8),(42809,14849,21),(42810,14849,101),(42811,14849,12),(42812,14850,101),(42813,14850,6),(42814,14851,10),(42815,14851,5),(42816,14852,7),(42817,14852,101),(42818,14853,7),(42819,14853,101),(42820,14853,6),(42821,14854,7),(42822,14854,101),(42823,14854,15),(42824,14855,150),(42825,14856,36),(42826,14856,5),(42827,14857,150),(42828,14857,158),(42829,14858,21),(42830,14858,101),(42831,14859,10),(42832,14859,147),(42833,14860,4),(42834,14861,150),(42835,14861,35),(42836,14861,12),(42837,14862,40),(42838,14862,158),(42839,14862,6),(42840,14863,34),(42841,14863,147),(42842,14863,4),(42843,14864,7),(42844,14864,6),(42845,14865,149),(42846,14865,101),(42847,14866,101),(42848,14867,101),(42849,14867,6),(42850,14868,147),(42851,14869,4),(42852,14869,40),(42853,14870,150),(42854,14871,34),(42855,14871,4),(42856,14871,154),(42857,14872,10),(42858,14872,150),(42859,14872,7),(42860,14872,6),(42861,14873,8),(42862,14874,101),(42863,14875,101),(42864,14875,5),(42865,14876,4),(42866,14876,101),(42867,14876,5),(42868,14877,150),(42869,14877,8),(42870,14877,12),(42871,14878,34),(42872,14878,47),(42873,14879,150),(42874,14879,4),(42875,14879,101),(42876,14879,6),(42877,14880,5),(42878,14880,30),(42879,14881,10),(42880,14881,150),(42881,14881,95),(42882,14881,40),(42883,14881,101),(42884,14882,10),(42885,14882,150),(42886,14882,4),(42887,14882,12),(42888,14883,8),(42889,14883,4),(42890,14883,21),(42891,14883,101),(42892,14884,36),(42893,14884,7),(42894,14885,7),(42895,14885,101),(42896,14886,10),(42897,14886,101),(42898,14886,5),(42899,14887,101),(42900,14888,36),(42901,14888,40),(42902,14889,10),(42903,14889,150),(42904,14889,8),(42905,14889,12),(42906,14889,15),(42907,14890,150),(42908,14890,4),(42909,14890,5),(42910,14891,147),(42911,14891,35),(42912,14891,4),(42913,14892,10),(42914,14892,7),(42915,14892,6),(42916,14892,15),(42917,14893,7),(42918,14893,5),(42919,14893,15),(42920,14894,150),(42921,14894,95),(42922,14894,101),(42923,14894,12),(42924,14895,10),(42925,14895,147),(42926,14896,5),(42927,14896,30),(42928,14897,7),(42929,14897,101),(42930,14897,5),(42931,14898,4),(42932,14898,7),(42933,14899,147),(42934,14899,149),(42935,14899,7),(42936,14899,101),(42937,14900,149),(42938,14900,7),(42939,14900,6),(42940,14901,101),(42941,14902,21),(42942,14902,5),(42943,14902,47),(42944,14903,10),(42945,14903,150),(42946,14904,8),(42947,14904,4),(42948,14904,21),(42949,14904,47),(42950,14905,8),(42951,14905,21),(42952,14905,12),(42953,14906,149),(42954,14906,101),(42955,14906,5),(42956,14907,7),(42957,14907,101),(42958,14908,150),(42959,14908,4),(42960,14909,101),(42961,14910,36),(42962,14910,4),(42963,14911,34),(42964,14911,8),(42965,14912,21),(42966,14912,7),(42967,14912,6),(42968,14913,10),(42969,14913,150),(42970,14914,150),(42971,14914,101),(42972,14915,147),(42973,14915,101),(42974,14915,5),(42975,14916,10),(42976,14916,150),(42977,14916,8),(42978,14916,95),(42979,14916,47),(42980,14916,15),(42981,14917,4),(42982,14918,147),(42983,14918,101),(42984,14919,101),(42985,14920,101),(42986,14921,101),(42987,14922,35),(42988,14922,15),(42989,14923,147),(42990,14923,5),(42991,14923,60),(42992,14924,147),(42993,14924,30),(42994,14925,4),(42995,14925,7),(42996,14926,36),(42997,14926,150),(42998,14926,101),(42999,14927,147),(43000,14927,150),(43001,14927,101),(43002,14928,10),(43003,14928,7),(43004,14929,7),(43005,14929,101),(43006,14930,147),(43007,14930,4),(43008,14931,101),(43009,14932,153),(43010,14932,21),(43011,14932,47),(43012,14933,150),(43013,14933,8),(43014,14933,95),(43015,14933,21),(43016,14933,7),(43017,14934,150),(43018,14934,4),(43019,14934,101),(43020,14934,5),(43021,14935,101),(43022,14935,6),(43023,14936,7),(43024,14936,5),(43025,14937,149),(43026,14937,5),(43027,14937,30),(43028,14938,149),(43029,14938,101),(43030,14939,21),(43031,14939,7),(43032,14939,47),(43033,14940,30),(43034,14941,36),(43035,14941,4),(43036,14942,10),(43037,14942,4),(43038,14943,7),(43039,14943,101),(43040,14944,149),(43041,14944,8),(43042,14945,10),(43043,14945,147),(43044,14945,150),(43045,14945,5),(43046,14945,15),(43047,14946,5),(43048,14946,30),(43049,14947,149),(43050,14947,4),(43051,14947,5),(43052,14948,149),(43053,14948,7),(43054,14948,101),(43055,14949,147),(43056,14949,95),(43057,14949,21),(43058,14949,101),(43059,14950,4),(43060,14950,7),(43061,14951,149),(43062,14951,7),(43063,14951,101),(43064,14952,147),(43065,14952,2),(43066,14953,147),(43067,14953,101),(43068,14954,149),(43069,14954,101),(43070,14955,147),(43071,14955,7),(43072,14955,101),(43073,14956,4),(43074,14956,3),(43075,14956,101),(43076,14956,159),(43077,14956,2),(43078,14957,34),(43079,14957,149),(43080,14957,4),(43081,14957,7),(43082,14958,36),(43083,14958,149),(43084,14958,7),(43085,14958,101),(43086,14959,101),(43087,14959,5),(43088,14960,150),(43089,14960,95),(43090,14961,7),(43091,14961,101),(43092,14962,149),(43093,14962,101),(43094,14963,149),(43095,14963,8),(43096,14963,4),(43097,14964,4),(43098,14965,147),(43099,14965,4),(43100,14965,30),(43101,14966,34),(43102,14966,4),(43103,14966,154),(43104,14967,147),(43105,14967,7),(43106,14967,5),(43107,14968,4),(43108,14968,155),(43109,14968,7),(43110,14969,149),(43111,14969,4),(43112,14970,101),(43113,14970,5),(43114,14970,30),(43115,14971,36),(43116,14971,149),(43117,14971,7),(43118,14971,101),(43119,14971,5),(43120,14971,6),(43121,14972,101),(43122,14972,5),(43123,14973,101),(43124,14973,6),(43125,14974,147),(43126,14974,101),(43127,14974,5),(43128,14975,7),(43129,14976,150),(43130,14977,4),(43131,14977,11),(43132,14978,36),(43133,14978,4),(43134,14978,60),(43135,14979,4),(43136,14979,7),(43137,14979,101),(43138,14979,5),(43139,14980,147),(43140,14980,149),(43141,14980,8),(43142,14980,21),(43143,14981,10),(43144,14981,150),(43145,14981,40),(43146,14981,3),(43147,14981,6),(43148,14982,7),(43149,14982,101),(43150,14982,6),(43151,14983,21),(43152,14984,147),(43153,14984,7),(43154,14984,101),(43155,14985,150),(43156,14985,4),(43157,14985,7),(43158,14985,101),(43159,14986,7),(43160,14986,101),(43161,14987,8),(43162,14987,4),(43163,14987,12),(43164,14988,4),(43165,14988,11),(43166,14989,147),(43167,14989,150),(43168,14990,8),(43169,14990,30),(43170,14990,12),(43171,14991,10),(43172,14991,5),(43173,14991,6),(43174,14992,147),(43175,14992,101),(43176,14992,5),(43177,14993,149),(43178,14993,101),(43179,14993,6),(43180,14994,5),(43181,14994,30),(43182,14995,4),(43183,14995,21),(43184,14995,47),(43185,14996,7),(43186,14996,5),(43187,14997,4),(43188,14997,2),(43189,14998,154),(43190,14998,5),(43191,14998,30),(43192,14999,145),(43193,14999,2),(43194,15000,145),(43195,15001,145),(43196,15002,145),(43197,15002,8),(43198,15002,21),(43199,15003,145),(43200,15004,145),(43201,15005,145),(43202,15005,60),(43203,15006,147),(43204,15006,21),(43205,15006,5),(43206,15007,101),(43207,15008,147),(43208,15008,8),(43209,15008,35),(43210,15008,153),(43211,15008,21),(43212,15008,7),(43213,15008,12),(43214,15009,150),(43215,15009,8),(43216,15009,21),(43217,15009,12),(43218,15010,10),(43219,15010,7),(43220,15010,15),(43221,15011,150),(43222,15011,7),(43223,15011,101),(43224,15012,5),(43225,15012,30),(43226,15013,150),(43227,15013,35),(43228,15013,12),(43229,15014,34),(43230,15014,8),(43231,15014,4),(43232,15015,40),(43233,15016,147),(43234,15016,7),(43235,15016,101),(43236,15017,7),(43237,15017,101),(43238,15018,149),(43239,15018,7),(43240,15019,150),(43241,15020,36),(43242,15020,5),(43243,15021,10),(43244,15021,150),(43245,15021,4),(43246,15022,36),(43247,15022,101),(43248,15022,5),(43249,15023,147),(43250,15023,40),(43251,15024,5),(43252,15025,149),(43253,15025,8),(43254,15025,7),(43255,15026,150),(43256,15026,12),(43257,15027,149),(43258,15027,8),(43259,15027,4),(43260,15027,21),(43261,15027,7),(43262,15027,47),(43263,15028,101),(43264,15029,7),(43265,15029,101),(43266,15029,6),(43267,15029,2),(43268,15030,150),(43269,15031,148),(43270,15031,5),(43271,15031,30),(43272,15032,147),(43273,15032,30),(43274,15032,12),(43275,15033,8),(43276,15033,35),(43277,15033,4),(43278,15033,12),(43279,15034,10),(43280,15034,7),(43281,15034,5),(43282,15034,11),(43283,15034,30),(43284,15035,7),(43285,15035,5),(43286,15035,30),(43287,15036,7),(43288,15037,34),(43289,15037,36),(43290,15037,4),(43291,15037,101),(43292,15038,36),(43293,15038,5),(43294,15038,30),(43295,15039,147),(43296,15039,7),(43297,15039,101),(43298,15039,30),(43299,15040,5),(43300,15041,101),(43301,15041,5),(43302,15042,4),(43303,15042,7),(43304,15043,4),(43305,15043,5),(43306,15043,60),(43307,15044,147),(43308,15044,4),(43309,15045,154),(43310,15046,149),(43311,15046,4),(43312,15047,10),(43313,15047,149),(43314,15047,7),(43315,15048,6),(43316,15049,101),(43317,15050,10),(43318,15050,34),(43319,15050,147),(43320,15050,40),(43321,15050,6),(43322,15051,10),(43323,15051,34),(43324,15051,147),(43325,15051,101),(43326,15051,6),(43327,15052,147),(43328,15052,149),(43329,15053,7),(43330,15054,7),(43331,15055,4),(43332,15055,7),(43333,15055,101),(43334,15056,21),(43335,15056,5),(43336,15057,150),(43337,15057,7),(43338,15057,6),(43339,15058,150),(43340,15058,4),(43341,15058,101),(43342,15059,101),(43343,15060,149),(43344,15060,4),(43345,15061,149),(43346,15061,21),(43347,15061,101),(43348,15062,150),(43349,15062,101),(43350,15062,12),(43351,15063,21),(43352,15064,8),(43353,15064,101),(43354,15065,4),(43355,15066,4),(43356,15067,4),(43357,15068,150),(43358,15069,101),(43359,15070,150),(43360,15070,6),(43361,15071,147),(43362,15071,101),(43363,15072,149),(43364,15072,21),(43365,15073,147),(43366,15073,101),(43367,15074,5),(43368,15075,149),(43369,15076,149),(43370,15077,8),(43371,15077,47),(43372,15078,149),(43373,15078,7),(43374,15079,7),(43375,15080,101),(43376,15081,34),(43377,15081,36),(43378,15081,149),(43379,15081,4),(43380,15081,157),(43381,15082,149),(43382,15082,8),(43383,15082,21),(43384,15083,36),(43385,15083,5),(43386,15084,5),(43387,15085,147),(43388,15085,4),(43389,15085,101),(43390,15086,36),(43391,15086,8),(43392,15086,95),(43393,15086,21),(43394,15086,7),(43395,15087,95),(43396,15088,8),(43397,15088,21),(43398,15088,47),(43399,15089,10),(43400,15089,5),(43401,15090,101),(43402,15091,150),(43403,15092,149),(43404,15092,21),(43405,15093,36),(43406,15093,149),(43407,15094,36),(43408,15094,5),(43409,15095,7),(43410,15096,150),(43411,15096,35),(43412,15096,4),(43413,15097,4),(43414,15097,7),(43415,15097,5),(43416,15098,149),(43417,15098,8),(43418,15098,35),(43419,15098,7),(43420,15098,12),(43421,15099,4),(43422,15099,153),(43423,15099,7),(43424,15100,10),(43425,15100,101),(43426,15100,5),(43427,15101,8),(43428,15101,21),(43429,15102,147),(43430,15102,7),(43431,15103,150),(43432,15104,7),(43433,15104,3),(43434,15104,159),(43435,15104,2),(43436,15105,4),(43437,15105,40),(43438,15106,150),(43439,15106,101),(43440,15107,36),(43441,15107,5),(43442,15108,101),(43443,15108,2),(43444,15108,15),(43445,15109,5),(43446,15110,149),(43447,15110,47),(43448,15111,4),(43449,15111,154),(43450,15112,149),(43451,15112,8),(43452,15112,21),(43453,15112,12),(43454,15113,147),(43455,15113,101),(43456,15114,147),(43457,15115,159),(43458,15116,159),(43459,15117,3),(43460,15117,2),(43461,15118,149),(43462,15118,8),(43463,15118,101),(43464,15120,8),(43465,15120,101),(43466,15121,150),(43467,15121,5),(43468,15122,150),(43469,15122,5),(43470,15123,147),(43471,15123,150),(43472,15124,4),(43473,15124,5),(43474,15125,4),(43475,15126,147),(43476,15126,4),(43477,15127,153),(43478,15127,155),(43479,15128,153),(43480,15129,8),(43481,15129,4),(43482,15130,147),(43483,15130,8),(43484,15131,5),(43485,15132,7),(43486,15133,101),(43487,15134,147),(43488,15135,4),(43489,15136,10),(43490,15136,150),(43491,15136,40),(43492,15136,6),(43493,15136,15),(43494,15137,150),(43495,15137,4),(43496,15138,10),(43497,15138,8),(43498,15138,2),(43499,15139,101),(43500,15140,149),(43501,15140,150),(43502,15140,95),(43503,15140,7),(43504,15141,4),(43505,15142,149),(43506,15142,7),(43507,15142,101),(43508,15142,6),(43509,15143,4),(43510,15143,101),(43511,15144,101),(43512,15144,30),(43513,15145,5),(43514,15145,60),(43515,15146,101),(43516,15146,2),(43517,15147,153),(43518,15148,150),(43519,15148,5),(43520,15149,147),(43521,15149,150),(43522,15149,21),(43523,15149,47),(43524,15150,150),(43525,15150,4),(43526,15151,149),(43527,15151,101),(43528,15152,10),(43529,15152,7),(43530,15153,147),(43531,15153,40),(43532,15154,10),(43533,15154,34),(43534,15154,7),(43535,15155,4),(43536,15155,15),(43537,15156,10),(43538,15156,5),(43539,15156,15),(43540,15157,149),(43541,15157,40),(43542,15158,36),(43543,15158,30),(43544,15159,150),(43545,15159,7),(43546,15159,6),(43547,15160,101),(43548,15161,154),(43549,15162,36),(43550,15162,5),(43551,15163,7),(43552,15163,101),(43553,15164,147),(43554,15164,101),(43555,15164,5),(43556,15165,147),(43557,15165,149),(43558,15165,101),(43559,15166,147),(43560,15166,101),(43561,15167,147),(43562,15167,5),(43563,15168,4),(43564,15168,5),(43565,15168,60),(43566,15169,5),(43567,15169,30),(43568,15170,147),(43569,15170,21),(43570,15170,5),(43571,15170,30),(43572,15171,101),(43573,15171,5),(43574,15172,149),(43575,15172,101),(43576,15172,5),(43577,15173,10),(43578,15173,101),(43579,15173,15),(43580,15174,101),(43581,15175,4),(43582,15176,150),(43583,15177,149),(43584,15178,10),(43585,15178,21),(43586,15178,47),(43587,15179,149),(43588,15180,10),(43589,15180,5),(43590,15180,30),(43591,15181,4),(43592,15181,152),(43593,15182,147),(43594,15182,36),(43595,15183,147),(43596,15183,8),(43597,15183,21),(43598,15184,147),(43599,15184,149),(43600,15184,101),(43601,15185,147),(43602,15185,101),(43603,15186,147),(43604,15186,30),(43605,15186,6),(43606,15187,147),(43607,15187,7),(43608,15187,101),(43609,15188,7),(43610,15188,101),(43611,15189,150),(43612,15190,149),(43613,15191,149),(43614,15192,149),(43615,15192,7),(43616,15193,149),(43617,15194,36),(43618,15194,4),(43619,15195,7),(43620,15195,5),(43621,15196,150),(43622,15197,36),(43623,15197,4),(43624,15198,36),(43625,15198,4),(43626,15198,21),(43627,15198,47),(43628,15199,4),(43629,15199,21),(43630,15199,47),(43631,15200,150),(43632,15200,101),(43633,15201,4),(43634,15201,12),(43635,15202,147),(43636,15202,101),(43637,15202,30),(43638,15203,36),(43639,15203,30),(43640,15204,4),(43641,15204,7),(43642,15205,101),(43643,15205,5),(43644,15206,150),(43645,15206,35),(43646,15206,12),(43647,15207,40),(43648,15207,5),(43649,15207,60),(43650,15207,15),(43651,15208,147),(43652,15208,5),(43653,15208,30),(43654,15209,147),(43655,15209,36),(43656,15210,154),(43657,15210,7),(43658,15211,150),(43659,15212,150),(43660,15212,8),(43661,15212,4),(43662,15212,95),(43663,15213,147),(43664,15214,21),(43665,15214,101),(43666,15215,101),(43667,15216,145),(43668,15216,8),(43669,15216,3),(43670,15216,2),(43671,15217,145),(43672,15217,7),(43673,15218,145),(43674,15218,34),(43675,15218,147),(43676,15218,101),(43677,15219,145),(43678,15219,101),(43679,15219,2),(43680,15220,145),(43681,15220,101),(43682,15220,6),(43683,15221,145),(43684,15221,8),(43685,15221,21),(43686,15221,7),(43687,15222,145),(43688,15222,149),(43689,15223,145),(43690,15223,101),(43691,15224,145),(43692,15224,155),(43693,15224,101),(43694,15224,12),(43695,15225,145),(43696,15225,101),(43697,15226,145),(43698,15226,101),(43699,15227,147),(43700,15227,4),(43701,15227,101),(43702,15227,6),(43703,15227,160),(43704,15228,147),(43705,15228,101),(43706,15229,4),(43707,15229,101),(43708,15229,5),(43709,15230,36),(43710,15230,8),(43711,15230,12),(43712,15231,101),(43713,15231,5),(43714,15232,36),(43715,15233,7),(43716,15234,10),(43717,15234,5),(43718,15235,147),(43719,15235,101),(43720,15236,149),(43721,15236,152),(43722,15236,5),(43723,15237,150),(43724,15237,6),(43725,15238,7),(43726,15238,101),(43727,15239,101),(43728,15240,149),(43729,15240,5),(43730,15241,36),(43731,15241,4),(43732,15241,5),(43733,15242,34),(43734,15242,36),(43735,15242,4),(43736,15242,101),(43737,15242,157),(43738,15243,7),(43739,15243,101),(43740,15243,6),(43741,15244,101),(43742,15245,7),(43743,15245,101),(43744,15246,147),(43745,15246,101),(43746,15247,101),(43747,15247,5),(43748,15247,30),(43749,15248,36),(43750,15248,150),(43751,15248,5),(43752,15249,4),(43753,15249,5),(43754,15249,30),(43755,15250,4),(43756,15251,8),(43757,15251,4),(43758,15251,21),(43759,15252,149),(43760,15252,150),(43761,15252,101),(43762,15253,34),(43763,15253,150),(43764,15253,12),(43765,15254,4),(43766,15254,154),(43767,15255,149),(43768,15255,101),(43769,15255,5),(43770,15256,7),(43771,15256,5),(43772,15257,101),(43773,15258,147),(43774,15258,101),(43775,15258,15),(43776,15259,101),(43777,15259,2),(43778,15260,147),(43779,15260,150),(43780,15260,4),(43781,15260,101),(43782,15260,5),(43783,15261,150),(43784,15261,153),(43785,15261,21),(43786,15261,101),(43787,15262,101),(43788,15262,5),(43789,15262,60),(43790,15262,12),(43791,15263,150),(43792,15263,101),(43793,15263,15),(43794,15264,40),(43795,15265,4),(43796,15265,154),(43797,15265,7),(43798,15265,30),(43799,15266,34),(43800,15266,4),(43801,15267,4),(43802,15267,101),(43803,15267,15),(43804,15268,10),(43805,15268,147),(43806,15268,101),(43807,15268,15),(43808,15269,147),(43809,15269,40),(43810,15269,101),(43811,15270,147),(43812,15270,2),(43813,15271,101),(43814,15272,153),(43815,15272,12),(43816,15273,4),(43817,15273,60),(43818,15274,154),(43819,15274,101),(43820,15275,149),(43821,15275,40),(43822,15276,8),(43823,15276,95),(43824,15277,150),(43825,15277,21),(43826,15277,12),(43827,15278,34),(43828,15278,4),(43829,15278,7),(43830,15278,101),(43831,15278,5),(43832,15279,150),(43833,15279,7),(43834,15279,101),(43835,15279,6),(43836,15280,154),(43837,15280,7),(43838,15281,101),(43839,15282,149),(43840,15282,101),(43841,15283,101),(43842,15284,150),(43843,15284,101),(43844,15285,8),(43845,15285,21),(43846,15285,7),(43847,15285,6),(43848,15286,147),(43849,15286,40),(43850,15287,8),(43851,15287,4),(43852,15287,7),(43853,15287,12),(43854,15288,10),(43855,15288,7),(43856,15288,6),(43857,15289,4),(43858,15289,154),(43859,15290,4),(43860,15291,36),(43861,15291,149),(43862,15291,21),(43863,15292,36),(43864,15292,5),(43865,15292,6),(43866,15293,150),(43867,15293,101),(43868,15294,101),(43869,15294,5),(43870,15295,101),(43871,15295,5),(43872,15296,149),(43873,15296,5),(43874,15296,30),(43875,15297,150),(43876,15297,2),(43877,15298,149),(43878,15298,101),(43879,15299,10),(43880,15299,147),(43881,15299,5),(43882,15299,30),(43883,15300,147),(43884,15301,150),(43885,15301,7),(43886,15301,101),(43887,15302,40),(43888,15302,101),(43889,15302,5),(43890,15303,40),(43891,15303,5),(43892,15303,2),(43893,15304,150),(43894,15304,4),(43895,15304,21),(43896,15304,6),(43897,15305,149),(43898,15305,153),(43899,15305,21),(43900,15305,7),(43901,15306,4),(43902,15307,7),(43903,15307,5),(43904,15308,5),(43905,15308,60),(43906,15308,6),(43907,15309,4),(43908,15310,149),(43909,15310,101),(43910,15311,101),(43911,15311,5),(43912,15312,147),(43913,15313,5),(43914,15313,11),(43915,15314,8),(43916,15314,21),(43917,15315,5),(43918,15315,30),(43919,15316,150),(43920,15316,5),(43921,15317,21),(43922,15317,5),(43923,15317,47),(43924,15318,149),(43925,15318,7),(43926,15318,5),(43927,15319,149),(43928,15319,155),(43929,15319,101),(43930,15319,47),(43931,15320,101),(43932,15321,7),(43933,15321,101),(43934,15322,101),(43935,15323,150),(43936,15323,4),(43937,15324,4),(43938,15324,15),(43939,15325,4),(43940,15326,4),(43941,15326,30),(43942,15327,149),(43943,15327,150),(43944,15327,101),(43945,15327,15),(43946,15328,147),(43947,15328,150),(43948,15328,4),(43949,15329,8),(43950,15329,21),(43951,15330,147),(43952,15330,8),(43953,15330,101),(43954,15331,7),(43955,15331,101),(43956,15331,6),(43957,15332,101),(43958,15333,7),(43959,15334,101),(43960,15335,147),(43961,15335,4),(43962,15335,15),(43963,15336,4),(43964,15337,149),(43965,15337,4),(43966,15337,5),(43967,15338,4),(43968,15338,5),(43969,15338,60),(43970,15339,7),(43971,15339,6),(43972,15340,10),(43973,15340,147),(43974,15340,150),(43975,15341,149),(43976,15341,95),(43977,15341,21),(43978,15341,7),(43979,15341,12),(43980,15342,149),(43981,15342,7),(43982,15342,101),(43983,15343,147),(43984,15343,101),(43985,15343,2),(43986,15344,101),(43987,15344,5),(43988,15345,147),(43989,15345,101),(43990,15346,147),(43991,15346,2),(43992,15347,150),(43993,15347,8),(43994,15347,12),(43995,15348,4),(43996,15348,5),(43997,15348,60),(43998,15349,10),(43999,15349,36),(44000,15349,4),(44001,15349,5),(44002,15350,147),(44003,15350,36),(44004,15350,4),(44005,15351,7),(44006,15351,5),(44007,15352,150),(44008,15352,101),(44009,15353,7),(44010,15353,5),(44011,15354,147),(44012,15354,40),(44013,15354,5),(44014,15355,154),(44015,15355,7),(44016,15355,101),(44017,15356,7),(44018,15356,101),(44019,15356,6),(44020,15357,150),(44021,15358,4),(44022,15359,154),(44023,15359,101),(44024,15359,5),(44025,15360,10),(44026,15360,101),(44027,15360,5),(44028,15361,147),(44029,15361,4),(44030,15362,101),(44031,15363,101),(44032,15364,4),(44033,15364,101),(44034,15365,147),(44035,15365,8),(44036,15365,21),(44037,15365,101),(44038,15365,47),(44039,15366,7),(44040,15366,2),(44041,15367,147),(44042,15367,101),(44043,15368,149),(44044,15368,6),(44045,15369,10),(44046,15369,150),(44047,15369,101),(44048,15369,6),(44049,15370,147),(44050,15370,15),(44051,15371,150),(44052,15371,8),(44053,15371,21),(44054,15371,7),(44055,15371,47),(44056,15372,10),(44057,15372,4),(44058,15372,6),(44059,15372,15),(44060,15373,7),(44061,15374,147),(44062,15374,6),(44063,15375,147),(44064,15375,101),(44065,15376,8),(44066,15376,4),(44067,15376,101),(44068,15376,12),(44069,15377,34),(44070,15377,5),(44071,15378,4),(44072,15378,7),(44073,15378,30),(44074,15379,101),(44075,15379,5),(44076,15380,10),(44077,15380,36),(44078,15380,15),(44079,15381,147),(44080,15382,40),(44081,15382,160),(44082,15382,15),(44083,15383,7),(44084,15384,101),(44085,15384,2),(44086,15385,7),(44087,15386,5),(44088,15387,150),(44089,15387,4),(44090,15387,40),(44091,15387,5),(44092,15387,6),(44093,15388,4),(44094,15388,5),(44095,15388,60),(44096,15389,10),(44097,15389,7),(44098,15389,101),(44099,15390,10),(44100,15390,40),(44101,15391,5),(44102,15391,30),(44103,15392,101),(44104,15393,10),(44105,15393,150),(44106,15393,8),(44107,15393,4),(44108,15393,6),(44109,15394,147),(44110,15394,8),(44111,15394,21),(44112,15395,147),(44113,15395,149),(44114,15395,7),(44115,15396,7),(44116,15396,5),(44117,15397,149),(44118,15397,7),(44119,15397,6),(44120,15398,4),(44121,15398,3),(44122,15398,2),(44123,15399,147),(44124,15399,21),(44125,15400,10),(44126,15400,147),(44127,15400,101),(44128,15400,2),(44129,15401,7),(44130,15401,101),(44131,15402,149),(44132,15402,7),(44133,15403,7),(44134,15404,101),(44135,15404,2),(44136,15405,101),(44137,15406,34),(44138,15406,147),(44139,15406,8),(44140,15407,101),(44141,15408,150),(44142,15409,150),(44143,15409,4),(44144,15409,40),(44145,15409,15),(44146,15410,8),(44147,15410,101),(44148,15411,21),(44149,15411,6),(44150,15412,34),(44151,15413,34),(44152,15413,150),(44153,15414,8),(44154,15414,21),(44155,15414,7),(44156,15415,8),(44157,15415,21),(44158,15415,3),(44159,15415,47),(44160,15416,101),(44161,15416,6),(44162,15417,147),(44163,15417,101),(44164,15418,149),(44165,15419,147),(44166,15419,101),(44167,15420,21),(44168,15420,47),(44169,15422,40),(44170,15422,101),(44171,15423,10),(44172,15423,34),(44173,15423,150),(44174,15423,5),(44175,15424,7),(44176,15425,150),(44177,15426,8),(44178,15426,21),(44179,15426,7),(44180,15427,147),(44181,15427,101),(44182,15428,7),(44183,15428,101),(44184,15428,5),(44185,15429,4),(44186,15429,21),(44187,15429,47),(44188,15430,150),(44189,15430,101),(44190,15431,8),(44191,15431,4),(44192,15431,7),(44193,15431,12),(44194,15432,149),(44195,15433,149),(44196,15433,5),(44197,15434,153),(44198,15434,21),(44199,15435,8),(44200,15435,21),(44201,15435,7),(44202,15435,12),(44203,15436,10),(44204,15436,30),(44205,15436,15),(44206,15437,101),(44207,15437,6),(44208,15438,101),(44209,15439,101),(44210,15439,30),(44211,15440,147),(44212,15440,101),(44213,15440,2),(44214,15441,36),(44215,15441,4),(44216,15441,101),(44217,15441,5),(44218,15441,30),(44219,15442,21),(44220,15443,150),(44221,15443,159),(44222,15443,2),(44223,15444,4),(44224,15444,5),(44225,15444,60),(44226,15445,30),(44227,15446,149),(44228,15446,7),(44229,15447,149),(44230,15447,35),(44231,15447,101),(44232,15448,4),(44233,15449,101),(44234,15450,101),(44235,15451,4),(44236,15451,101),(44237,15452,6),(44238,15453,101),(44239,15454,10),(44240,15454,147),(44241,15454,5),(44242,15455,101),(44243,15455,5),(44244,15456,34),(44245,15456,35),(44246,15456,4),(44247,15457,10),(44248,15457,150),(44249,15457,159),(44250,15458,149),(44251,15458,35),(44252,15458,4),(44253,15458,21),(44254,15458,47),(44255,15459,34),(44256,15459,36),(44257,15459,4),(44258,15459,5),(44259,15460,10),(44260,15460,149),(44261,15460,21),(44262,15460,7),(44263,15461,150),(44264,15461,8),(44265,15461,4),(44266,15461,21),(44267,15461,12),(44268,15462,147),(44269,15462,40),(44270,15463,10),(44271,15463,6),(44272,15463,15),(44273,15464,149),(44274,15464,7),(44275,15465,147),(44276,15465,7),(44277,15466,10),(44278,15466,101),(44279,15466,5),(44280,15466,30),(44281,15467,7),(44282,15467,6),(44283,15468,36),(44284,15468,4),(44285,15468,5),(44286,15468,60),(44287,15469,4),(44288,15469,7),(44289,15469,15),(44290,15470,36),(44291,15470,21),(44292,15470,5),(44293,15471,10),(44294,15471,150),(44295,15471,21),(44296,15471,47),(44297,15472,147),(44298,15472,15),(44299,15473,146),(44300,15473,8),(44301,15473,95),(44302,15473,21),(44303,15474,150),(44304,15475,4),(44305,15475,3),(44306,15476,147),(44307,15476,101),(44308,15477,101),(44309,15478,101),(44310,15479,40),(44311,15480,150),(44312,15480,12),(44313,15481,149),(44314,15481,7),(44315,15482,150),(44316,15482,101),(44317,15482,5),(44318,15482,11),(44319,15482,30),(44320,15483,7),(44321,15484,5),(44322,15485,5),(44323,15485,30),(44324,15486,34),(44325,15486,8),(44326,15486,21),(44327,15486,101),(44328,15487,4),(44329,15487,11),(44330,15488,10),(44331,15488,7),(44332,15488,30),(44333,15489,149),(44334,15489,7),(44335,15490,34),(44336,15490,101),(44337,15490,15),(44338,15491,147),(44339,15491,40),(44340,15491,5),(44341,15492,153),(44342,15492,40),(44343,15492,21),(44344,15493,40),(44345,15493,21),(44346,15494,36),(44347,15494,5),(44348,15494,30),(44349,15495,150),(44350,15495,4),(44351,15495,2),(44352,15496,150),(44353,15496,151),(44354,15496,101),(44355,15497,4),(44356,15497,11),(44357,15498,10),(44358,15498,7),(44359,15498,6),(44360,15498,15),(44361,15499,101),(44362,15499,5),(44363,15499,30),(44364,15499,6),(44365,15500,150),(44366,15500,101),(44367,15501,147),(44368,15501,101),(44369,15502,101),(44370,15503,101),(44371,15503,5),(44372,15504,150),(44373,15504,15),(44374,15505,40),(44375,15505,5),(44376,15506,150),(44377,15507,149),(44378,15507,150),(44379,15508,101),(44380,15508,6),(44381,15509,150),(44382,15510,8),(44383,15510,4),(44384,15510,21),(44385,15510,12),(44386,15511,147),(44387,15511,4),(44388,15511,7),(44389,15512,101),(44390,15513,101),(44391,15513,2),(44392,15514,101),(44393,15515,147),(44394,15515,149),(44395,15515,101),(44396,15516,150),(44397,15516,95),(44398,15516,12),(44399,15517,34),(44400,15517,147),(44401,15517,36),(44402,15517,8),(44403,15517,5),(44404,15518,35),(44405,15518,4),(44406,15518,151),(44407,15519,147),(44408,15519,5),(44409,15520,147),(44410,15520,8),(44411,15520,95),(44412,15520,21),(44413,15521,5),(44414,15521,30),(44415,15522,10),(44416,15522,6),(44417,15522,15),(44418,15523,7),(44419,15524,8),(44420,15524,101),(44421,15525,101),(44422,15525,5),(44423,15526,36),(44424,15526,4),(44425,15526,30),(44426,15527,7),(44427,15528,147),(44428,15528,101),(44429,15529,7),(44430,15529,5),(44431,15530,147),(44432,15530,101),(44433,15531,147),(44434,15531,149),(44435,15531,7),(44436,15531,5),(44437,15532,147),(44438,15533,150),(44439,15533,3),(44440,15533,2),(44441,15534,149),(44442,15534,40),(44443,15535,4),(44444,15536,36),(44445,15536,4),(44446,15537,8),(44447,15537,7),(44448,15538,8),(44449,15538,4),(44450,15538,12),(44451,15539,10),(44452,15539,150),(44453,15539,95),(44454,15540,36),(44455,15540,4),(44456,15540,5),(44457,15541,34),(44458,15541,3),(44459,15541,101),(44460,15542,153),(44461,15542,21),(44462,15543,149),(44463,15543,95),(44464,15543,21),(44465,15543,7),(44466,15544,149),(44467,15544,5),(44468,15545,4),(44469,15545,5),(44470,15546,10),(44471,15546,150),(44472,15546,8),(44473,15546,12),(44474,15547,101),(44475,15548,4),(44476,15548,21),(44477,15548,47),(44478,15549,8),(44479,15549,4),(44480,15550,2),(44481,15561,150),(44482,15567,7),(44483,15568,7),(44484,15569,7),(44485,15570,147),(44486,15570,7),(44487,15571,147),(44488,15571,101),(44489,15572,150),(44490,15572,101),(44491,15572,159),(44492,15572,15),(44493,15573,4),(44494,15574,5),(44495,15574,60),(44496,15575,10),(44497,15575,150),(44498,15576,10),(44499,15576,36),(44500,15576,4),(44501,15577,7),(44502,15577,6),(44503,15577,15),(44504,15578,40),(44505,15578,101),(44506,15578,5),(44507,15579,7),(44508,15579,6),(44509,15580,147),(44510,15580,101),(44511,15581,147),(44512,15581,101),(44513,15582,147),(44514,15583,10),(44515,15583,34),(44516,15583,147),(44517,15583,7),(44518,15583,101),(44519,15583,2),(44520,15584,10),(44521,15584,36),(44522,15585,34),(44523,15585,147),(44524,15585,4),(44525,15586,4),(44526,15587,5),(44527,15587,160),(44528,15588,149),(44529,15588,4),(44530,15588,5),(44531,15589,101),(44532,15589,5),(44533,15589,30),(44534,15589,160),(44535,15590,10),(44536,15590,147),(44537,15590,151),(44538,15590,101),(44539,15591,147),(44540,15591,101),(44541,15592,101),(44542,15592,5),(44543,15593,147),(44544,15593,150),(44545,15594,40),(44546,15595,147),(44547,15595,149),(44548,15595,101),(44549,15595,30),(44550,15596,10),(44551,15596,150),(44552,15596,6),(44553,15597,149),(44554,15598,10),(44555,15598,40),(44556,15599,47),(44557,15600,101),(44558,15600,5),(44559,15601,5),(44560,15602,149),(44561,15602,154),(44562,15602,5),(44563,15603,95),(44564,15603,21),(44565,15603,47),(44566,15604,150),(44567,15604,7),(44568,15604,3),(44569,15604,2),(44570,15605,149),(44571,15605,35),(44572,15605,40),(44573,15605,6),(44574,15605,12),(44575,15606,8),(44576,15606,21),(44577,15607,7),(44578,15607,2),(44579,15608,150),(44580,15608,95),(44581,15608,21),(44582,15609,40),(44583,15609,5),(44584,15609,6),(44585,15610,151),(44586,15610,101),(44587,15611,150),(44588,15611,101),(44589,15611,5),(44590,15612,10),(44591,15612,147),(44592,15612,5),(44593,15613,5),(44594,15614,101),(44595,15614,5),(44596,15615,147),(44597,15615,5),(44598,15615,11),(44599,15616,150),(44600,15617,149),(44601,15617,7),(44602,15617,5),(44603,15617,11),(44604,15618,147),(44605,15619,149),(44606,15619,21),(44607,15619,12),(44608,15620,147),(44609,15620,101),(44610,15621,10),(44611,15621,147),(44612,15621,101),(44613,15622,10),(44614,15622,150),(44615,15622,12),(44616,15623,21),(44617,15623,7),(44618,15624,150),(44619,15624,8),(44620,15624,12),(44621,15625,7),(44622,15626,4),(44623,15627,150),(44624,15627,95),(44625,15627,21),(44626,15627,3),(44627,15627,6),(44628,15628,15),(44629,15629,8),(44630,15630,40),(44631,15631,7),(44632,15631,5),(44633,15632,147),(44634,15632,5),(44635,15633,147),(44636,15633,4),(44637,15634,145),(44638,15634,151),(44639,15634,101),(44640,15635,145),(44641,15635,101),(44642,15636,145),(44643,15636,101),(44644,15637,145),(44645,15637,101),(44646,15638,145),(44647,15638,101),(44648,15639,145),(44649,15639,101),(44650,15639,5),(44651,15640,145),(44652,15640,101),(44653,15641,145),(44654,15642,150),(44655,15642,7),(44656,15643,150),(44657,15644,8),(44658,15644,95),(44659,15645,4),(44660,15645,47),(44661,15646,7),(44662,15647,7),(44663,15647,6),(44664,15648,101),(44665,15648,2),(44666,15649,10),(44667,15649,150),(44668,15650,5),(44669,15650,30),(44670,15651,4),(44671,15652,5),(44672,15652,160),(44673,15653,5),(44674,15654,7),(44675,15655,4),(44676,15655,7),(44677,15655,60),(44678,15656,8),(44679,15657,147),(44680,15657,40),(44681,15658,149),(44682,15658,5),(44683,15659,4),(44684,15660,147),(44685,15660,3),(44686,15660,101),(44687,15660,5),(44688,15660,2),(44689,15661,150),(44690,15661,7),(44691,15662,101),(44692,15663,40),(44693,15663,21),(44694,15663,101),(44695,15663,47),(44696,15664,10),(44697,15664,147),(44698,15665,147),(44699,15665,40),(44700,15665,101),(44701,15666,149),(44702,15666,101),(44703,15666,5),(44704,15667,10),(44705,15667,4),(44706,15667,15),(44707,15668,7),(44708,15668,2),(44709,15669,4),(44710,15670,5),(44711,15670,30),(44712,15671,101),(44713,15673,4),(44714,15673,6),(44715,15673,2),(44716,15687,7),(44717,15688,7),(44718,15690,11),(44719,15690,2),(44720,15691,2),(44721,15694,10),(44722,15695,10),(44723,15696,150),(44724,15697,147),(44725,15698,147),(44726,15698,8),(44727,15698,95),(44728,15698,21),(44729,15699,8),(44730,15699,95),(44731,15699,21),(44732,15700,30),(44733,15701,30),(44734,15702,101),(44735,15703,101),(44736,15704,150),(44737,15704,8),(44738,15704,12),(44739,15705,4),(44740,15706,36),(44741,15706,149),(44742,15707,4),(44743,15708,7),(44744,15708,6),(44745,15709,150),(44746,15709,21),(44747,15709,101),(44748,15709,47),(44749,15710,147),(44750,15710,4),(44751,15710,40),(44752,15710,7),(44753,15711,147),(44754,15711,4),(44755,15711,5),(44756,15711,60),(44757,15712,7),(44758,15712,101),(44759,15712,6),(44760,15712,15),(44761,15713,101),(44762,15714,147),(44763,15714,101),(44764,15715,150),(44765,15715,7),(44766,15716,4),(44767,15716,7),(44768,15716,101),(44769,15717,5),(44770,15718,150),(44771,15718,6),(44772,15719,149),(44773,15719,21),(44774,15719,7),(44775,15719,101),(44776,15720,147),(44777,15720,4),(44778,15721,8),(44779,15721,47),(44780,15722,101),(44781,15722,5),(44782,15723,145),(44783,15723,8),(44784,15723,151),(44785,15724,145),(44786,15724,30),(44787,15725,145),(44788,15725,101),(44789,15725,6),(44790,15726,145),(44791,15726,101),(44792,15726,30),(44793,15727,145),(44794,15727,147),(44795,15727,101),(44796,15728,145),(44797,15728,101),(44798,15729,145),(44799,15730,145),(44800,15730,147),(44801,15730,101),(44802,15730,30),(44803,15731,145),(44804,15732,145),(44805,15732,147),(44806,15733,145),(44807,15733,101),(44808,15734,145),(44809,15734,36),(44810,15735,145),(44811,15735,149),(44812,15736,7),(44813,15737,6),(44814,15738,101),(44815,15738,2),(44816,15739,101),(44817,15739,5),(44818,15740,8),(44819,15740,21),(44820,15740,5),(44821,15740,11),(44822,15741,150),(44823,15741,35),(44824,15741,155),(44825,15741,21),(44826,15741,7),(44827,15742,154),(44828,15742,5),(44829,15743,4),(44830,15743,5),(44831,15743,60),(44832,15744,101),(44833,15744,5),(44834,15745,4),(44835,15745,5),(44836,15745,11),(44837,15746,4),(44838,15746,155),(44839,15746,7),(44840,15746,6),(44841,15746,15),(44842,15747,7),(44843,15747,5),(44844,15747,6),(44845,15748,40),(44846,15748,6),(44847,15749,10),(44848,15749,101),(44849,15749,6),(44850,15750,34),(44851,15750,147),(44852,15750,8),(44853,15750,4),(44854,15751,150),(44855,15751,95),(44856,15751,12),(44857,15752,10),(44858,15752,147),(44859,15752,4),(44860,15752,5),(44861,15752,2),(44862,15752,15),(44863,15753,10),(44864,15753,101),(44865,15754,101),(44866,15756,10),(44867,15756,147),(44868,15757,153),(44869,15757,21),(44870,15758,15),(44871,15759,8),(44872,15759,21),(44873,15760,150),(44874,15760,8),(44875,15760,4),(44876,15760,2),(44877,15760,12),(44878,15761,147),(44879,15762,6),(44880,15762,15),(44881,15763,10),(44882,15764,4),(44883,15765,145),(44884,15766,145),(44885,15767,145),(44886,15768,145),(44887,15769,145),(44888,15770,145),(44889,15771,145),(44890,15772,145),(44891,15773,145),(44892,15774,145),(44893,15774,101),(44894,15775,147),(44895,15775,4),(44896,15776,8),(44897,15776,4),(44898,15776,12),(44899,15777,35),(44900,15778,149),(44901,15778,7),(44902,15778,6),(44903,15779,10),(44904,15779,147),(44905,15779,7),(44906,15779,15),(44907,15780,10),(44908,15780,150),(44909,15780,6),(44910,15781,8),(44911,15781,95),(44912,15781,21),(44913,15781,6),(44914,15782,101),(44915,15782,5),(44916,15782,6),(44917,15783,7),(44918,15783,6),(44919,15784,7),(44920,15784,6),(44921,15785,145),(44922,15785,150),(44923,15785,7),(44924,15785,6),(44925,15786,145),(44926,15786,147),(44927,15786,4),(44928,15786,2),(44929,15787,145),(44930,15787,10),(44931,15787,147),(44932,15787,150),(44933,15787,2),(44934,15788,145),(44935,15788,7),(44936,15788,6),(44937,15789,145),(44938,15789,7),(44939,15789,101),(44940,15790,145),(44941,15790,4),(44942,15790,6),(44943,15791,145),(44944,15791,147),(44945,15791,30),(44946,15792,145),(44947,15792,150),(44948,15792,101),(44949,15793,145),(44950,15793,7),(44951,15793,101),(44952,15794,145),(44953,15794,101),(44954,15795,40),(44955,15795,6),(44956,15796,147),(44957,15797,147),(44958,15797,4),(44959,15798,36),(44960,15798,21),(44961,15799,36),(44962,15799,4),(44963,15800,149),(44964,15800,150),(44965,15800,101),(44966,15801,147),(44967,15802,7),(44968,15802,6),(44969,15803,147),(44970,15804,40),(44971,15805,154),(44972,15805,5),(44973,15806,21),(44974,15806,3),(44975,15806,6),(44976,15807,5),(44977,15807,30),(44978,15808,7),(44979,15809,145),(44980,15810,145),(44981,15811,145),(44982,15812,145),(44983,15813,145),(44984,15814,34),(44985,15814,4),(44986,15814,21),(44987,15814,12),(44988,15815,147),(44989,15816,36),(44990,15817,10),(44991,15817,101),(44992,15818,101),(44993,15819,101),(44994,15819,2),(44995,15820,101),(44996,15820,5),(44997,15821,10),(44998,15821,150),(44999,15821,35),(45000,15821,12),(45001,15822,4),(45002,15822,2),(45003,15823,150),(45004,15823,5),(45005,15823,60),(45006,15824,36),(45007,15824,8),(45008,15824,21),(45009,15824,5),(45010,15825,154),(45011,15825,5),(45012,15825,30),(45013,15826,159),(45014,15826,2),(45015,15827,4),(45016,15828,7),(45017,15828,5),(45018,15828,6),(45019,15829,101),(45020,15830,7),(45021,15830,101),(45022,15830,6),(45023,15831,4),(45024,15832,4),(45025,15832,154),(45026,15832,5),(45027,15832,60),(45028,15833,149),(45029,15833,7),(45030,15834,101),(45031,15834,5),(45032,15835,149),(45033,15835,101),(45034,15835,5),(45035,15836,10),(45036,15836,21),(45037,15836,11),(45038,15837,101),(45039,15837,2),(45040,15838,147),(45041,15838,101),(45042,15839,101),(45043,15840,150),(45044,15841,36),(45045,15841,150),(45046,15841,101),(45047,15842,36),(45048,15842,4),(45049,15842,5),(45050,15843,149),(45051,15844,7),(45052,15844,101),(45053,15845,150),(45054,15845,7),(45055,15846,150),(45056,15846,8),(45057,15846,21),(45058,15846,47),(45059,15847,101),(45060,15847,2),(45061,15848,101),(45062,15849,101),(45063,15850,101),(45064,15850,2),(45065,15851,147),(45066,15851,5),(45067,15852,40),(45068,15853,154),(45069,15854,147),(45070,15854,4),(45071,15855,149),(45072,15855,7),(45073,15855,101),(45074,15856,147),(45075,15856,5),(45076,15857,149),(45077,15857,4),(45078,15857,95),(45079,15857,21),(45080,15858,21),(45081,15858,47),(45082,15859,149),(45083,15859,7),(45084,15859,6),(45085,15860,40),(45086,15860,5),(45087,15861,101),(45088,15861,6),(45089,15861,2),(45090,15862,40),(45091,15862,6),(45092,15863,36),(45093,15863,4),(45094,15864,7),(45095,15864,6),(45096,15865,10),(45097,15865,150),(45098,15865,7),(45099,15866,147),(45100,15866,7),(45101,15866,101),(45102,15867,40),(45103,15867,5),(45104,15868,101),(45105,15868,5),(45106,15869,101),(45107,15870,147),(45108,15870,4),(45109,15870,15),(45110,15871,4),(45111,15871,154),(45112,15872,10),(45113,15872,150),(45114,15872,60),(45115,15872,6),(45116,15873,7),(45117,15874,101),(45118,15875,150),(45119,15875,101),(45120,15875,2),(45121,15876,4),(45122,15876,2),(45123,15877,6),(45124,15878,7),(45125,15879,101),(45126,15880,101),(45127,15880,5),(45128,15881,101),(45129,15882,36),(45130,15883,147),(45131,15883,8),(45132,15883,101),(45133,15884,149),(45134,15884,154),(45135,15884,7),(45136,15885,147),(45137,15885,40),(45138,15885,5),(45139,15886,7),(45140,15886,101),(45141,15886,6),(45142,15887,149),(45143,15887,21),(45144,15887,7),(45145,15888,147),(45146,15888,8),(45147,15888,5),(45148,15888,30),(45149,15889,147),(45150,15889,101),(45151,15890,101),(45152,15891,101),(45153,15892,153),(45154,15892,21),(45155,15893,149),(45156,15893,4),(45157,15893,7),(45158,15894,4),(45159,15895,101),(45160,15896,101),(45161,15897,10),(45162,15897,15),(45163,15898,6),(45164,15899,8),(45165,15899,21),(45166,15900,36),(45167,15900,5),(45168,15901,101),(45169,15901,5),(45170,15902,101),(45171,15902,2),(45172,15903,145),(45173,15904,145),(45174,15904,6),(45175,15905,145),(45176,15906,145),(45177,15907,145),(45178,15908,145),(45179,15909,145),(45180,15910,145),(45181,15911,145),(45182,15911,101),(45183,15911,2),(45184,15912,145),(45185,15912,101),(45186,15913,147),(45187,15913,8),(45188,15913,21),(45189,15913,101),(45190,15914,101),(45191,15915,40),(45192,15915,5),(45193,15916,149),(45194,15916,101),(45195,15917,36),(45196,15917,4),(45197,15918,147),(45198,15918,149),(45199,15918,3),(45200,15918,101),(45201,15918,159),(45202,15918,2),(45203,15919,8),(45204,15920,101),(45205,15921,40),(45206,15922,147),(45207,15922,153),(45208,15923,4),(45209,15923,5),(45210,15924,149),(45211,15924,7),(45212,15925,10),(45213,15925,4),(45214,15925,3),(45215,15925,159),(45216,15925,2),(45217,15926,10),(45218,15926,147),(45219,15926,5),(45220,15927,10),(45221,15927,21),(45222,15928,149),(45223,15928,7),(45224,15929,149),(45225,15929,7),(45226,15930,101),(45227,15931,5),(45228,15932,147),(45229,15932,36),(45230,15932,101),(45231,15933,5),(45232,15934,8),(45233,15934,4),(45234,15934,60),(45235,15934,12),(45236,15935,159),(45237,15936,36),(45238,15936,4),(45239,15936,7),(45240,15937,5),(45241,15938,101),(45242,15938,30),(45243,15938,2),(45244,15939,147),(45245,15939,101),(45246,15940,147),(45247,15940,30),(45248,15941,150),(45249,15942,10),(45250,15942,101),(45251,15942,15),(45252,15943,147),(45253,15943,36),(45254,15943,30),(45255,15944,2),(45256,15945,101),(45257,15946,35),(45258,15946,40),(45259,15946,6),(45260,15947,7),(45261,15948,155),(45262,15949,101),(45263,15950,4),(45264,15950,7),(45265,15950,12),(45266,15951,154),(45267,15951,5),(45268,15952,147),(45269,15953,101),(45270,15953,5),(45271,15954,101),(45272,15955,147),(45273,15955,101),(45274,15955,5),(45275,15956,40),(45276,15957,3),(45277,15957,2),(45278,15958,4),(45279,15959,149),(45280,15959,101),(45281,15959,6),(45282,15960,101),(45283,15961,8),(45284,15961,21),(45285,15962,4),(45286,15963,147),(45287,15963,7),(45288,15963,6),(45289,15963,2),(45290,15964,149),(45291,15964,101),(45292,15965,101),(45293,15965,2),(45294,15966,150),(45295,15966,35),(45296,15966,101),(45297,15966,12),(45298,15967,35),(45299,15967,5),(45300,15968,8),(45301,15968,21),(45302,15969,147),(45303,15969,30),(45304,15970,101),(45305,15970,5),(45306,15971,7),(45307,15971,101),(45308,15972,101),(45309,15973,150),(45310,15973,4),(45311,15974,4),(45312,15974,151),(45313,15975,5),(45314,15976,7),(45315,15976,6),(45316,15977,8),(45317,15977,21),(45318,15977,12),(45319,15978,34),(45320,15978,147),(45321,15978,21),(45322,15979,5),(45323,15980,36),(45324,15980,101),(45325,15980,5),(45326,15981,5),(45327,15981,11),(45328,15981,60),(45329,15982,147),(45330,15982,5),(45331,15982,30),(45332,15983,147),(45333,15983,150),(45334,15983,3),(45335,15983,2),(45336,15984,101),(45337,15984,2),(45338,15985,101),(45339,15985,5),(45340,15986,101),(45341,15986,2),(45342,15988,36),(45343,15988,4),(45344,15989,34),(45345,15989,4),(45346,15989,95),(45347,15990,10),(45348,15990,150),(45349,15990,30),(45350,15991,7),(45351,15992,149),(45352,15992,2),(45353,15993,101),(45354,15994,147),(45355,15994,5),(45356,15995,149),(45357,15995,6),(45358,15996,4),(45359,15996,95),(45360,15996,12),(45361,15997,147),(45362,15997,60),(45363,15998,147),(45364,15998,101),(45365,15999,5),(45366,15999,6),(45367,16000,101),(45368,16000,2),(45369,16001,40),(45370,16001,60),(45371,16002,4),(45372,16002,21),(45373,16002,11),(45374,16003,34),(45375,16003,4),(45376,16004,36),(45377,16004,4),(45378,16004,5),(45379,16004,60),(45380,16005,8),(45381,16005,21),(45382,16006,40),(45383,16006,160),(45384,16007,147),(45385,16007,101),(45386,16008,4),(45387,16009,147),(45388,16009,101),(45389,16010,101),(45390,16011,147),(45391,16012,147),(45392,16012,95),(45393,16012,101),(45394,16013,147),(45395,16013,101),(45396,16013,6),(45397,16014,147),(45398,16014,60),(45399,16015,101),(45400,16016,101),(45401,16017,153),(45402,16017,155),(45403,16018,147),(45404,16018,150),(45405,16018,6),(45406,16019,149),(45407,16019,7),(45408,16020,8),(45409,16020,95),(45410,16020,21),(45411,16021,7),(45412,16021,101),(45413,16021,5),(45414,16022,101),(45415,16023,147),(45416,16024,35),(45417,16024,4),(45418,16025,4),(45419,16025,7),(45420,16025,60),(45421,16025,6),(45422,16025,12),(45423,16026,101),(45424,16026,5),(45425,16027,10),(45426,16027,150),(45427,16027,4),(45428,16028,7),(45429,16029,145),(45430,16029,7),(45431,16029,5),(45432,16030,145),(45433,16030,40),(45434,16030,5),(45435,16031,145),(45436,16031,8),(45437,16031,101),(45438,16032,145),(45439,16032,150),(45440,16032,101),(45441,16033,145),(45442,16033,101),(45443,16034,145),(45444,16034,5),(45445,16035,145),(45446,16035,2),(45447,16036,145),(45448,16036,101),(45449,16037,145),(45450,16037,101),(45451,16038,145),(45452,16038,101),(45453,16039,101),(45454,16039,6),(45455,16040,2),(45456,16041,4),(45457,16041,154),(45458,16041,5),(45459,16041,60),(45460,16042,149),(45461,16043,40),(45462,16043,160),(45463,16044,101),(45464,16044,60),(45465,16044,12),(45466,16045,147),(45467,16045,101),(45468,16046,8),(45469,16046,95),(45470,16046,21),(45471,16046,12),(45472,16047,34),(45473,16047,147),(45474,16047,101),(45475,16048,10),(45476,16048,21),(45477,16048,5),(45478,16048,47),(45479,16049,149),(45480,16049,35),(45481,16050,147),(45482,16050,101),(45483,16051,10),(45484,16051,34),(45485,16051,147),(45486,16052,101),(45487,16052,2),(45488,16053,4),(45489,16053,95),(45490,16053,21),(45491,16054,4),(45492,16054,5),(45493,16055,47),(45494,16056,4),(45495,16056,7),(45496,16057,101),(45497,16057,2),(45498,16058,21),(45499,16058,101),(45500,16058,5),(45501,16059,101),(45502,16059,2),(45503,16060,4),(45504,16060,5),(45505,16060,30),(45506,16061,4),(45507,16061,5),(45508,16061,11),(45509,16062,147),(45510,16062,101),(45511,16063,7),(45512,16064,101),(45513,16065,7),(45514,16066,101),(45515,16066,5),(45516,16067,150),(45517,16067,40),(45518,16068,149),(45519,16068,21),(45520,16068,7),(45521,16069,36),(45522,16069,95),(45523,16069,21),(45524,16070,10),(45525,16070,150),(45526,16071,7),(45527,16071,2),(45528,16072,101),(45529,16072,2),(45530,16073,7),(45531,16073,5),(45532,16074,7),(45533,16075,40),(45534,16076,147),(45535,16076,150),(45536,16076,101),(45537,16077,4),(45538,16077,151),(45539,16077,21),(45540,16077,101),(45541,16078,7),(45542,16079,101),(45543,16080,147),(45544,16080,101),(45545,16081,40),(45546,16082,8),(45547,16082,4),(45548,16082,95),(45549,16082,21),(45550,16082,101),(45551,16082,6),(45552,16082,12),(45553,16083,4),(45554,16083,154),(45555,16083,5),(45556,16084,101),(45557,16084,2),(45558,16085,101),(45559,16085,5),(45560,16086,147),(45561,16086,5),(45562,16086,11),(45563,16087,150),(45564,16087,101),(45565,16087,5),(45566,16087,15),(45567,16088,4),(45568,16088,159),(45569,16088,12),(45570,16089,149),(45571,16089,155),(45572,16089,7),(45573,16089,5),(45574,16090,5),(45575,16091,10),(45576,16091,95),(45577,16091,40),(45578,16091,21),(45579,16091,6),(45580,16092,10),(45581,16092,147),(45582,16092,150),(45583,16092,101),(45584,16093,10),(45585,16093,8),(45586,16093,60),(45587,16093,6),(45588,16093,12),(45589,16094,150),(45590,16094,7),(45591,16095,149),(45592,16095,101),(45593,16096,10),(45594,16096,101),(45595,16097,5),(45596,16097,30),(45597,16098,34),(45598,16098,4),(45599,16099,4),(45600,16099,5),(45601,16099,30),(45602,16100,21),(45603,16100,7),(45604,16100,47),(45605,16101,10),(45606,16101,5),(45607,16101,6),(45608,16102,5),(45609,16103,40),(45610,16104,4),(45611,16105,150),(45612,16105,8),(45613,16105,6),(45614,16106,149),(45615,16106,3),(45616,16106,101),(45617,16107,101),(45618,16107,5),(45619,16108,8),(45620,16108,4),(45621,16108,95),(45622,16108,21),(45623,16108,101),(45624,16108,12),(45625,16109,149),(45626,16109,7),(45627,16110,7),(45628,16110,5),(45629,16110,6),(45630,16111,101),(45631,16111,2),(45632,16112,101),(45633,16113,40),(45634,16113,5),(45635,16114,147),(45636,16115,5),(45637,16116,34),(45638,16116,4),(45639,16116,47),(45640,16117,150),(45641,16117,4),(45642,16117,7),(45643,16117,3),(45644,16117,2),(45645,16117,15),(45646,16118,101),(45647,16118,6),(45648,16119,7),(45649,16120,153),(45650,16120,21),(45651,16120,47),(45652,16121,10),(45653,16121,40),(45654,16121,5),(45655,16121,15),(45656,16122,4),(45657,16122,154),(45658,16122,30),(45659,16123,149),(45660,16123,101),(45661,16124,101),(45662,16124,2),(45663,16125,40),(45664,16126,4),(45665,16126,101),(45666,16127,8),(45667,16127,4),(45668,16127,95),(45669,16127,7),(45670,16127,12),(45671,16128,5),(45672,16128,60),(45673,16129,147),(45674,16129,101),(45675,16130,10),(45676,16130,150),(45677,16130,4),(45678,16131,101),(45679,16131,5),(45680,16132,4),(45681,16132,7),(45682,16132,5),(45683,16133,34),(45684,16133,4),(45685,16133,5),(45686,16134,7),(45687,16134,15),(45688,16135,95),(45689,16135,21),(45690,16135,6),(45691,16135,12),(45692,16136,40),(45693,16136,47),(45694,16137,150),(45695,16137,4),(45696,16137,7),(45697,16137,101),(45698,16137,5),(45699,16137,12),(45700,16138,10),(45701,16138,30),(45702,16139,151),(45703,16139,101),(45704,16139,2),(45705,16140,101),(45706,16141,149),(45707,16142,150),(45708,16143,8),(45709,16143,95),(45710,16143,21),(45711,16143,30),(45712,16144,4),(45713,16144,154),(45714,16144,7),(45715,16145,101),(45716,16146,147),(45717,16146,40),(45718,16147,5),(45719,16147,30),(45720,16148,8),(45721,16148,21),(45722,16148,7),(45723,16149,4),(45724,16150,10),(45725,16150,7),(45726,16150,6),(45727,16151,7),(45728,16151,5),(45729,16152,145),(45730,16152,101),(45731,16153,145),(45732,16153,101),(45733,16154,145),(45734,16154,4),(45735,16155,145),(45736,16155,7),(45737,16155,5),(45738,16156,145),(45739,16156,147),(45740,16156,2),(45741,16157,145),(45742,16157,151),(45743,16158,145),(45744,16158,5),(45745,16159,145),(45746,16159,101),(45747,16160,145),(45748,16160,7),(45749,16160,5),(45750,16161,34),(45751,16161,4),(45752,16162,147),(45753,16162,101),(45754,16163,4),(45755,16163,5),(45756,16163,30),(45757,16164,101),(45758,16164,5),(45759,16165,2),(45760,16166,4),(45761,16166,101),(45762,16166,12),(45763,16167,150),(45764,16167,40),(45765,16168,10),(45766,16168,150),(45767,16168,6),(45768,16168,15),(45769,16169,151),(45770,16169,7),(45771,16169,2),(45772,16170,5),(45773,16171,150),(45774,16171,101),(45775,16172,4),(45776,16172,154),(45777,16173,101),(45778,16174,7),(45779,16174,101),(45780,16175,101),(45781,16175,5),(45782,16176,40),(45783,16177,150),(45784,16177,35),(45785,16177,4),(45786,16177,5),(45787,16177,60),(45788,16178,147),(45789,16179,10),(45790,16180,101),(45791,16180,30),(45792,16181,40),(45793,16182,10),(45794,16182,150),(45795,16182,4),(45796,16183,4),(45797,16184,7),(45798,16185,4),(45799,16185,21),(45800,16185,7),(45801,16185,101),(45802,16186,150),(45803,16186,4),(45804,16187,149),(45805,16187,5),(45806,16187,30),(45807,16188,150),(45808,16188,101),(45809,16189,147),(45810,16189,101),(45811,16190,101),(45812,16190,2),(45813,16191,8),(45814,16191,101),(45815,16192,147),(45816,16192,8),(45817,16192,3),(45818,16193,10),(45819,16193,40),(45820,16194,147),(45821,16194,7),(45822,16194,101),(45823,16195,101),(45824,16195,5),(45825,16196,145),(45826,16196,6),(45827,16197,145),(45828,16197,6),(45829,16198,145),(45830,16199,145),(45831,16199,151),(45832,16200,145),(45833,16200,147),(45834,16200,5),(45835,16200,30),(45836,16201,145),(45837,16201,7),(45838,16202,145),(45839,16202,7),(45840,16202,101),(45841,16202,5),(45842,16203,145),(45843,16203,151),(45844,16204,145),(45845,16204,101),(45846,16205,34),(45847,16205,8),(45848,16205,4),(45849,16205,154),(45850,16205,101),(45851,16206,149),(45852,16207,147),(45853,16207,101),(45854,16208,101),(45855,16209,101),(45856,16209,6),(45857,16209,2),(45858,16210,4),(45859,16210,153),(45860,16211,8),(45861,16211,21),(45862,16212,40),(45863,16212,101),(45864,16212,6),(45865,16213,10),(45866,16213,101),(45867,16214,7),(45868,16214,5),(45869,16215,150),(45870,16215,12),(45871,16216,8),(45872,16216,21),(45873,16216,7),(45874,16216,47),(45875,16216,12),(45876,16217,5),(45877,16218,2),(45878,16219,101),(45879,16220,5),(45880,16220,11),(45881,16221,147),(45882,16221,95),(45883,16221,5),(45884,16222,147),(45885,16222,8),(45886,16223,8),(45887,16223,95),(45888,16224,101),(45889,16224,15),(45890,16225,21),(45891,16225,47),(45892,16226,149),(45893,16226,7),(45894,16226,101),(45895,16227,151),(45896,16228,101),(45897,16228,30),(45898,16229,101),(45899,16229,2),(45900,16230,4),(45901,16231,7),(45902,16231,2),(45903,16232,147),(45904,16233,7),(45905,16234,7),(45906,16234,2),(45907,16235,5),(45908,16235,47),(45909,16236,4),(45910,16236,5),(45911,16237,36),(45912,16237,5),(45913,16238,101),(45914,16239,8),(45915,16239,7),(45916,16239,101),(45917,16240,10),(45918,16240,150),(45919,16240,6),(45920,16241,4),(45921,16242,150),(45922,16242,151),(45923,16242,101),(45924,16243,101),(45925,16244,101),(45926,16245,40),(45927,16245,15),(45928,16246,4),(45929,16246,30),(45930,16247,154),(45931,16248,147),(45932,16249,101),(45933,16249,5),(45934,16250,40),(45935,16251,147),(45936,16251,4),(45937,16251,2),(45938,16252,4),(45939,16252,5),(45940,16252,60),(45941,16253,3),(45942,16253,101),(45943,16254,101),(45944,16255,34),(45945,16255,4),(45946,16256,6),(45947,16257,149),(45948,16258,10),(45949,16258,101),(45950,16259,101),(45951,16260,150),(45952,16261,36),(45953,16262,101),(45954,16263,8),(45955,16263,4),(45956,16263,21),(45957,16263,12),(45958,16264,36),(45959,16264,21),(45960,16264,11),(45961,16265,101),(45962,16266,10),(45963,16266,7),(45964,16267,151),(45965,16268,101),(45966,16269,5),(45967,16270,10),(45968,16270,4),(45969,16270,60),(45970,16271,40),(45971,16272,2),(45972,16273,7),(45973,16273,5),(45974,16274,4),(45975,16275,147),(45976,16275,4),(45977,16275,101),(45978,16276,149),(45979,16276,5),(45980,16277,5),(45981,16278,101),(45982,16279,149),(45983,16280,4),(45984,16280,12),(45985,16280,15),(45986,16281,7),(45987,16281,6),(45988,16282,4),(45989,16282,154),(45990,16282,21),(45991,16283,7),(45992,16284,5),(45993,16285,147),(45994,16285,101),(45995,16286,101),(45996,16286,158),(45997,16287,150),(45998,16287,40),(45999,16287,6),(46000,16288,147),(46001,16289,101),(46002,16290,101),(46003,16291,147),(46004,16291,5),(46005,16292,40),(46006,16293,95),(46007,16293,21),(46008,16294,150),(46009,16294,4),(46010,16295,150),(46011,16295,101),(46012,16296,15),(46013,16297,101),(46014,16298,147),(46015,16298,101),(46016,16299,149),(46017,16300,7),(46018,16301,21),(46019,16302,30),(46020,16303,7),(46021,16304,149),(46022,16304,7),(46023,16305,7),(46024,16305,157),(46025,16305,6),(46026,16306,150),(46027,16307,4),(46028,16307,95),(46029,16308,101),(46030,16309,149),(46031,16309,7),(46032,16310,147),(46033,16310,36),(46034,16311,4),(46035,16312,150),(46036,16312,101),(46037,16313,40),(46038,16313,21),(46039,16314,4),(46040,16315,5),(46041,16316,101),(46042,16317,101),(46043,16318,101),(46044,16319,147),(46045,16319,101),(46046,16319,15),(46047,16320,147),(46048,16320,149),(46049,16320,101),(46050,16321,7),(46051,16322,101),(46052,16322,2),(46053,16323,2),(46054,16324,8),(46055,16324,21),(46056,16324,12),(46057,16325,149),(46058,16325,5),(46059,16326,147),(46060,16326,149),(46061,16327,101),(46062,16328,7),(46063,16328,101),(46064,16329,149),(46065,16329,21),(46066,16329,7),(46067,16330,4),(46068,16331,151),(46069,16331,101),(46070,16332,147),(46071,16333,101),(46072,16333,2),(46073,16334,36),(46074,16335,5),(46075,16336,101),(46076,16336,5),(46077,16337,5),(46078,16338,149),(46079,16338,40),(46080,16338,101),(46081,16338,5),(46082,16340,3),(46083,16340,101),(46084,16340,2),(46085,16342,101),(46086,16343,101),(46087,16344,101),(46088,16345,4),(46089,16345,154),(46090,16346,5),(46091,16347,4),(46092,16347,6),(46093,16348,7),(46094,16349,151),(46095,16349,7),(46096,16350,4),(46097,16351,150),(46098,16352,4),(46099,16352,154),(46100,16352,2),(46101,16353,4),(46102,16353,6),(46103,16354,101),(46104,16355,147),(46105,16356,147),(46106,16356,101),(46107,16356,5),(46108,16357,101),(46109,16358,21),(46110,16358,7),(46111,16358,47),(46112,16359,36),(46113,16359,4),(46114,16359,5),(46115,16360,150),(46116,16360,7),(46117,16360,12),(46118,16361,7),(46119,16361,101),(46120,16362,6),(46121,16363,149),(46122,16363,95),(46123,16363,21),(46124,16363,101),(46125,16364,154),(46126,16365,40),(46127,16365,101),(46128,16366,101),(46129,16367,101),(46130,16368,150),(46131,16368,6),(46132,16369,4),(46133,16369,7),(46134,16370,147),(46135,16370,8),(46136,16370,47),(46137,16371,101),(46138,16372,101),(46139,16373,147),(46140,16373,101),(46141,16373,5),(46142,16374,8),(46143,16374,21),(46144,16375,151),(46145,16375,101),(46146,16375,6),(46147,16375,2),(46148,16376,7),(46149,16376,6),(46150,16377,101),(46151,16379,40),(46152,16379,21),(46153,16379,47),(46154,16379,6),(46155,16380,7),(46156,16381,47),(46157,16382,7),(46158,16382,101),(46159,16383,40),(46160,16383,101),(46161,16384,101),(46162,16385,5),(46163,16386,151),(46164,16386,101),(46165,16387,147),(46166,16388,4),(46167,16389,8),(46168,16389,101),(46169,16390,101),(46170,16391,7),(46171,16391,101),(46172,16391,2),(46173,16392,101),(46174,16393,10),(46175,16393,149),(46176,16393,150),(46177,16393,7),(46178,16393,3),(46179,16393,2),(46180,16394,40),(46181,16394,7),(46182,16395,4),(46183,16395,60),(46184,16396,101),(46185,16397,147),(46186,16397,5),(46187,16398,21),(46188,16398,47),(46189,16399,149),(46190,16399,8),(46191,16399,12),(46192,16400,150),(46193,16400,8),(46194,16400,21),(46195,16400,101),(46196,16401,101),(46197,16402,147),(46198,16403,40),(46199,16403,5),(46200,16404,10),(46201,16404,150),(46202,16404,4),(46203,16404,3),(46204,16405,36),(46205,16405,4),(46206,16405,60),(46207,16406,8),(46208,16406,95),(46209,16406,21),(46210,16407,101),(46211,16408,147),(46212,16408,4),(46213,16408,30),(46214,16409,146),(46215,16409,8),(46216,16409,95),(46217,16409,21),(46218,16410,149),(46219,16410,7),(46220,16411,34),(46221,16411,147),(46222,16411,8),(46223,16411,7),(46224,16412,101),(46225,16412,6),(46226,16413,149),(46227,16414,36),(46228,16414,5),(46229,16414,60),(46230,16415,36),(46231,16415,149),(46232,16415,7),(46233,16415,101),(46234,16416,7),(46235,16417,30),(46236,16418,3),(46237,16418,2),(46238,16419,95),(46239,16419,21),(46240,16419,12),(46241,16420,21),(46242,16420,47),(46243,16421,101),(46244,16422,147),(46245,16423,10),(46246,16424,4),(46247,16424,5),(46248,16424,60),(46249,16425,40),(46250,16425,101),(46251,16425,5),(46252,16426,101),(46253,16427,21),(46254,16428,4),(46255,16429,40),(46256,16429,5),(46257,16430,149),(46258,16430,6),(46259,16431,149),(46260,16431,21),(46261,16431,5),(46262,16432,147),(46263,16432,7),(46264,16433,8),(46265,16433,21),(46266,16433,12),(46267,16434,7),(46268,16434,6),(46269,16435,21),(46270,16436,147),(46271,16436,4),(46272,16437,147),(46273,16438,34),(46274,16438,155),(46275,16438,21),(46276,16439,10),(46277,16439,4),(46278,16439,6),(46279,16440,101),(46280,16440,5),(46281,16441,101),(46282,16441,2),(46283,16442,21),(46284,16442,47),(46285,16443,5),(46286,16444,101),(46287,16445,8),(46288,16445,35),(46289,16445,95),(46290,16446,150),(46291,16447,7),(46292,16447,3),(46293,16447,159),(46294,16448,4),(46295,16449,101),(46296,16450,4),(46297,16451,147),(46298,16451,4),(46299,16451,7),(46300,16452,150),(46301,16452,101),(46302,16453,147),(46303,16453,5),(46304,16454,147),(46305,16454,40),(46306,16455,2),(46307,16456,30),(46308,16457,4),(46309,16458,8),(46310,16458,95),(46311,16458,7),(46312,16458,47),(46313,16459,147),(46314,16459,5),(46315,16459,30),(46316,16460,34),(46317,16460,4),(46318,16460,60),(46319,16461,101),(46320,16461,2),(46321,16462,10),(46322,16462,30),(46323,16463,7),(46324,16463,101),(46325,16463,6),(46326,16464,101),(46327,16465,36),(46328,16465,4),(46329,16466,150),(46330,16466,101),(46331,16466,6),(46332,16467,154),(46333,16468,5),(46334,16469,101),(46335,16469,6),(46336,16470,4),(46337,16471,8),(46338,16471,4),(46339,16471,21),(46340,16471,47),(46341,16471,12),(46342,16471,15),(46343,16472,147),(46344,16472,149),(46345,16472,40),(46346,16472,101),(46347,16472,5),(46348,16473,101),(46349,16474,101),(46350,16475,150),(46351,16475,95),(46352,16476,4),(46353,16476,40),(46354,16477,4),(46355,16477,6),(46356,16478,40),(46357,16478,101),(46358,16479,101),(46359,16479,5),(46360,16480,149),(46361,16481,150),(46362,16481,6),(46363,16482,7),(46364,16482,101),(46365,16482,6),(46366,16483,101),(46367,16483,6),(46368,16484,101),(46369,16485,10),(46370,16485,4),(46371,16485,7),(46372,16486,34),(46373,16486,4),(46374,16486,21),(46375,16487,101),(46376,16488,5),(46377,16489,149),(46378,16489,101),(46379,16489,5),(46380,16490,149),(46381,16491,4),(46382,16492,30),(46383,16493,4),(46384,16493,101),(46385,16494,101),(46386,16495,8),(46387,16495,95),(46388,16495,21),(46389,16496,36),(46390,16496,35),(46391,16496,4),(46392,16497,147),(46393,16497,101),(46394,16497,5),(46395,16498,147),(46396,16498,40),(46397,16498,101),(46398,16499,5),(46399,16499,60),(46400,16500,4),(46401,16500,21),(46402,16501,10),(46403,16501,40),(46404,16502,34),(46405,16502,4),(46406,16503,149),(46407,16503,21),(46408,16503,101),(46409,16504,2),(46410,16505,4),(46411,16505,151),(46412,16505,101),(46413,16506,3),(46414,16506,2),(46415,16507,5),(46416,16507,30),(46417,16508,101),(46418,16509,147),(46419,16509,149),(46420,16510,10),(46421,16510,150),(46422,16510,95),(46423,16510,12),(46424,16510,15),(46425,16511,147),(46426,16511,4),(46427,16512,7),(46428,16512,15),(46429,16513,101),(46430,16514,147),(46431,16514,40),(46432,16515,150),(46433,16516,101),(46434,16516,5),(46435,16517,149),(46436,16517,150),(46437,16517,4),(46438,16517,7),(46439,16517,6),(46440,16517,2),(46441,16518,101),(46442,16518,2),(46443,16519,101),(46444,16520,4),(46445,16520,6),(46446,16521,150),(46447,16521,3),(46448,16521,101),(46449,16522,149),(46450,16522,7),(46451,16523,147),(46452,16523,5),(46453,16524,7),(46454,16525,147),(46455,16525,154),(46456,16525,101),(46457,16526,7),(46458,16526,6),(46459,16527,7),(46460,16527,47),(46461,16528,40),(46462,16529,4),(46463,16529,5),(46464,16530,3),(46465,16530,101),(46466,16531,40),(46467,16531,5),(46468,16532,101),(46469,16532,5),(46470,16533,5),(46471,16534,1),(46472,16534,3),(46473,16534,5),(46474,16534,36),(46475,16535,1),(46476,16535,11),(46477,16535,19),(46478,16536,1),(46479,16536,4),(46480,16536,11),(46481,16537,10),(46482,16537,8),(46483,16537,13),(46484,16537,21),(46485,16537,47),(46486,16538,1),(46487,16538,20),(46488,16538,32),(46489,16538,37),(46490,16538,23),(46491,16538,31),(46492,16538,52),(46493,16539,9),(46494,16540,1),(46495,16540,3),(46496,16540,5),(46497,16540,23),(46498,16540,17),(46499,16541,1),(46500,16542,1),(46501,16542,7),(46502,16542,6),(46503,16543,1),(46504,16543,3),(46505,16543,12),(46506,16543,8),(46507,16543,16),(46508,16544,5),(46509,16544,36),(46510,16545,1),(46511,16545,16),(46512,16546,1),(46513,16546,5),(46514,16546,4),(46515,16546,6),(46516,16546,36),(46517,16547,1),(46518,16547,4),(46519,16548,1),(46520,16548,5),(46521,16548,20),(46522,16548,31),(46523,16549,1),(46524,16549,3),(46525,16550,1),(46526,16550,5),(46527,16550,16),(46528,16551,1),(46529,16551,5),(46530,16551,6),(46531,16551,19),(46532,16552,1),(46533,16552,3),(46534,16552,4),(46535,16552,7),(46536,16552,26),(46537,16552,16),(46538,16553,1),(46539,16553,2),(46540,16553,14),(46541,16553,21),(46542,16553,46),(46543,16553,26),(46544,16554,9),(46545,16555,1),(46546,16555,25),(46547,16556,3),(46548,16556,2),(46549,16556,22),(46550,16557,1),(46551,16557,7),(46552,16557,23),(46553,16558,1),(46554,16558,7),(46555,16558,26),(46556,16559,2),(46557,16559,4),(46558,16560,3),(46559,16560,2),(46560,16560,22),(46561,16561,3),(46562,16561,5),(46563,16561,2),(46564,16561,22),(46565,16562,1),(46566,16562,5),(46567,16562,4),(46568,16562,14),(46569,16562,30),(46570,16562,34),(46571,16563,2),(46572,16563,23),(46573,16563,26),(46574,16563,16),(46575,16564,1),(46576,16564,6),(46577,16564,11),(46578,16565,1),(46579,16565,3),(46580,16566,2),(46581,16566,4),(46582,16567,1),(46583,16567,10),(46584,16567,7),(46585,16568,1),(46586,16568,3),(46587,16569,9),(46588,16570,1),(46589,16571,1),(46590,16571,10),(46591,16572,1),(46592,16572,10),(46593,16572,32),(46594,16572,65),(46595,16573,15),(46596,16573,2),(46597,16573,10),(46598,16573,45),(46599,16574,2),(46600,16575,1),(46601,16575,7),(46602,16575,6),(46603,16576,3),(46604,16576,2),(46605,16576,4),(46606,16576,7),(46607,16576,6),(46608,16577,1),(46609,16577,4),(46610,16577,44),(46611,16577,11),(46612,16578,15),(46613,16578,2),(46614,16579,5),(46615,16579,2),(46616,16579,19),(46617,16579,36),(46618,16579,30),(46619,16580,1),(46620,16580,7),(46621,16580,6),(46622,16580,17),(46623,16580,11),(46624,16581,5),(46625,16581,2),(46626,16581,36),(46627,16581,30),(46628,16582,1),(46629,16582,10),(46630,16582,7),(46631,16583,9),(46632,16584,1),(46633,16584,4),(46634,16585,1),(46635,16585,6),(46636,16585,22),(46637,16586,1),(46638,16586,5),(46639,16587,1),(46640,16587,4),(46641,16588,1),(46642,16588,5),(46643,16588,36),(46644,16588,26),(46645,16589,1),(46646,16589,3),(46647,16590,2),(46648,16590,4),(46649,16591,1),(46650,16591,4),(46651,16591,16),(46652,16592,2),(46653,16592,7),(46654,16592,45),(46655,16593,9),(46656,16594,1),(46657,16594,7),(46658,16594,6),(46659,16594,17),(46660,16595,1),(46661,16595,10),(46662,16595,32),(46663,16595,19),(46664,16596,1),(46665,16596,6),(46666,16596,17),(46667,16597,1),(46668,16597,10),(46669,16597,32),(46670,16597,29),(46671,16598,1),(46672,16598,32),(46673,16598,26),(46674,16598,16),(46675,16599,1),(46676,16599,3),(46677,16599,2),(46678,16599,8),(46679,16599,13),(46680,16599,21),(46681,16599,46),(46682,16600,9),(46683,16601,1),(46684,16601,3),(46685,16601,38),(46686,16601,26),(46687,16602,1),(46688,16602,3),(46689,16602,2),(46690,16602,24),(46691,16602,11),(46692,16603,1),(46693,16603,2),(46694,16603,33),(46695,16604,1),(46696,16604,3),(46697,16604,12),(46698,16604,8),(46699,16604,16),(46700,16605,1),(46701,16605,3),(46702,16605,7),(46703,16606,1),(46704,16606,3),(46705,16606,10),(46706,16607,1),(46707,16607,4),(46708,16608,4),(46709,16609,1),(46710,16609,2),(46711,16609,33),(46712,16609,6),(46713,16610,5),(46714,16611,1),(46715,16611,3),(46716,16611,8),(46717,16611,13),(46718,16611,27),(46719,16611,21),(46720,16612,1),(46721,16612,19),(46722,16612,16),(46723,16613,1),(46724,16613,5),(46725,16613,14),(46726,16614,1),(46727,16614,7),(46728,16615,9),(46729,16616,2),(46730,16616,19),(46731,16617,2),(46732,16617,26),(46733,16618,1),(46734,16618,4),(46735,16618,16),(46736,16619,1),(46737,16619,2),(46738,16619,10),(46739,16619,32),(46740,16620,1),(46741,16621,15),(46742,16621,2),(46743,16621,4),(46744,16621,26),(46745,16622,15),(46746,16622,2),(46747,16622,4),(46748,16623,1),(46749,16623,3),(46750,16623,5),(46751,16623,4),(46752,16623,23),(46753,16623,17),(46754,16624,1),(46755,16624,5),(46756,16624,7),(46757,16624,17),(46758,16625,1),(46759,16625,3),(46760,16625,28),(46761,16625,17),(46762,16625,19),(46763,16625,56),(46764,16625,29),(46765,16626,1),(46766,16626,3),(46767,16626,10),(46768,16626,24),(46769,16626,37),(46770,16626,29),(46771,16627,1),(46772,16627,3),(46773,16627,4),(46774,16628,1),(46775,16628,3),(46776,16628,28),(46777,16628,17),(46778,16628,19),(46779,16628,56),(46780,16628,29),(46781,16629,1),(46782,16629,7),(46783,16629,16),(46784,16630,1),(46785,16630,5),(46786,16631,1),(46787,16631,5),(46788,16631,14),(46789,16632,1),(46790,16632,5),(46791,16632,14),(46792,16632,26),(46793,16633,1),(46794,16633,12),(46795,16633,8),(46796,16633,39),(46797,16633,32),(46798,16634,5),(46799,16635,2),(46800,16635,6),(46801,16635,57),(46802,16636,3),(46803,16636,5),(46804,16636,2),(46805,16636,36),(46806,16636,22),(46807,16637,5),(46808,16637,2),(46809,16637,4),(46810,16638,1),(46811,16638,10),(46812,16638,39),(46813,16638,32),(46814,16639,9),(46815,16640,1),(46816,16640,3),(46817,16640,2),(46818,16640,19),(46819,16641,1),(46820,16641,20),(46821,16641,7),(46822,16641,31),(46823,16642,1),(46824,16642,5),(46825,16642,4),(46826,16643,1),(46827,16643,5),(46828,16643,32),(46829,16644,1),(46830,16644,12),(46831,16644,18),(46832,16645,1),(46833,16645,3),(46834,16645,2),(46835,16645,22),(46836,16646,8),(46837,16646,13),(46838,16646,21),(46839,16647,1),(46840,16647,2),(46841,16647,48),(46842,16647,45),(46843,16647,11),(46844,16647,43),(46845,16648,1),(46846,16648,4),(46847,16648,14),(46848,16648,21),(46849,16648,46),(46850,16648,34),(46851,16649,1),(46852,16649,3),(46853,16649,6),(46854,16650,1),(46855,16650,10),(46856,16650,27),(46857,16650,21),(46858,16651,1),(46859,16651,4),(46860,16651,14),(46861,16651,34),(46862,16652,1),(46863,16652,10),(46864,16652,7),(46865,16652,21),(46866,16652,6),(46867,16654,1),(46868,16654,150),(46869,16655,1),(46870,16655,150),(46871,16656,38),(46872,16656,74),(46873,16657,86),(46874,16658,38),(46875,16658,74),(46876,16659,1),(46877,16659,150),(46878,16660,38),(46879,16660,74),(46880,16661,137),(46881,16661,74),(46882,16662,38),(46883,16662,74),(46884,16663,3),(46885,16663,150),(46886,16664,1),(46887,16664,150),(46888,16665,38),(46889,16665,74),(46890,16666,131),(46891,16666,86),(46892,16666,102),(46893,16667,161),(46894,16667,86),(46895,16667,102),(46896,16668,129),(46897,16668,86),(46898,16668,102),(46899,16668,128),(46900,16669,86),(46901,16669,102),(46902,16670,87),(46903,16670,102),(46904,16671,162),(46905,16671,86),(46906,16671,102),(46907,16672,11),(46908,16672,150),(46909,16673,3),(46910,16673,150),(46911,16674,86),(46912,16674,102),(46913,16675,2),(46914,16675,150),(46915,16676,86),(46916,16676,102),(46917,16677,129),(46918,16677,86),(46919,16677,102),(46920,16679,86),(46921,16679,102),(46922,16680,30),(46923,16680,2),(46924,16680,150),(46925,16681,20),(46926,16681,150),(46927,16682,41),(46928,16682,150),(46929,16683,3),(46930,16683,150),(46931,16684,102),(46932,16684,37),(46933,16684,142),(46934,16684,105),(46935,16684,150),(46936,16685,131),(46937,16685,86),(46938,16685,102),(46939,16686,28),(46940,16686,150),(46941,16687,3),(46942,16687,150),(46943,16688,86),(46944,16688,105),(46945,16689,129),(46946,16689,131),(46947,16689,86),(46948,16689,102),(46949,16690,162),(46950,16690,86),(46951,16690,102),(46952,16691,162),(46953,16691,86),(46954,16691,102),(46955,16692,131),(46956,16692,86),(46957,16692,102),(46958,16693,20),(46959,16693,150),(46960,16694,86),(46961,16694,102),(46962,16695,3),(46963,16695,150),(46964,16696,86),(46965,16696,102),(46966,16697,2),(46967,16697,150),(46968,16698,2),(46969,16698,150),(46970,16699,37),(46971,16699,150),(46972,16700,161),(46973,16700,86),(46974,16700,102),(46975,16701,131),(46976,16701,86),(46977,16701,102),(46978,16702,12),(46979,16702,150),(46980,16703,131),(46981,16703,86),(46982,16703,102),(46983,16704,163),(46984,16704,86),(46985,16704,102),(46986,16705,6),(46987,16705,17),(46988,16705,5),(46989,16705,126),(46990,16705,35),(46991,16705,40),(46992,16705,1),(46993,16706,131),(46994,16706,86),(46995,16706,102),(46996,16707,28),(46997,16707,150),(46998,16708,137),(46999,16708,6),(47000,16708,74),(47001,16709,86),(47002,16709,102),(47003,16710,129),(47004,16710,86),(47005,16710,102),(47006,16711,2),(47007,16711,150),(47008,16712,86),(47009,16712,102),(47010,16713,162),(47011,16713,86),(47012,16713,102),(47013,16714,4),(47014,16714,79),(47015,16714,150),(47016,16714,74),(47017,16715,74),(47018,16715,17),(47019,16715,23),(47020,16715,1),(47021,16715,37),(47022,16715,164),(47023,16716,102),(47024,16716,37),(47025,16716,142),(47026,16716,105),(47027,16716,150),(47028,16717,161),(47029,16717,86),(47030,16717,102),(47031,16718,2),(47032,16718,150),(47033,16719,133),(47034,16720,131),(47035,16720,125),(47036,16720,86),(47037,16720,102),(47038,16721,1),(47039,16721,6),(47040,16721,150),(47041,16721,74),(47042,16723,1),(47043,16723,150),(47044,16724,3),(47045,16724,150),(47046,16725,131),(47047,16725,86),(47048,16725,102),(47049,16726,41),(47050,16726,150),(47051,16727,86),(47052,16727,102),(47053,16728,2),(47054,16728,150),(47055,16729,2),(47056,16729,150),(47057,16730,11),(47058,16730,150),(47059,16731,86),(47060,16731,102),(47061,16732,11),(47062,16732,150),(47063,16733,86),(47064,16735,161),(47065,16735,86),(47066,16735,102),(47067,16736,86),(47068,16736,102),(47069,16737,129),(47070,16737,86),(47071,16737,102),(47072,16738,161),(47073,16738,86),(47074,16738,102),(47075,16739,86),(47076,16739,102),(47077,16740,86),(47078,16741,131),(47079,16741,86),(47080,16741,102),(47081,16742,161),(47082,16742,86),(47083,16742,102),(47084,16743,86),(47085,16743,102),(47086,16744,86),(47087,16744,102),(47088,16745,86),(47089,16746,28),(47090,16746,150),(47091,16747,86),(47092,16748,86),(47093,16748,102),(47094,16751,28),(47095,16751,150),(47096,16753,128),(47097,16754,86),(47098,16755,41),(47099,16755,150),(47100,16756,28),(47101,16756,150),(47102,16757,133),(47103,16758,86),(47104,16758,102),(47105,16759,86),(47106,16760,86),(47107,16761,2),(47108,16761,33),(47109,16761,150),(47110,16761,73),(47111,16762,102),(47112,16762,37),(47113,16762,142),(47114,16762,105),(47115,16762,150),(47116,16763,108),(47117,16763,2),(47118,16763,86),(47119,16763,102),(47120,16763,150),(47121,16764,162),(47122,16764,102),(47123,16765,86),(47124,16766,86),(47125,16766,102),(47126,16767,102),(47127,16768,133),(47128,16769,86),(47129,16769,102),(47130,16770,102),(47131,16770,142),(47132,16770,105),(47133,16770,150),(47134,16771,86),(47135,16771,102),(47136,16772,133),(47137,16773,104),(47138,16773,86),(47139,16774,162),(47140,16774,102),(47141,16775,142),(47142,16775,150),(47143,16775,17),(47144,16776,108),(47145,16776,86),(47146,16776,128),(47147,16777,104),(47148,16777,83),(47149,16778,86),(47150,16779,28),(47151,16779,150),(47152,16780,102),(47153,16781,86),(47154,16782,86),(47155,16782,102),(47156,16783,129),(47157,16783,165),(47158,16784,28),(47159,16784,150),(47160,16785,86),(47161,16785,102),(47162,16786,108),(47163,16786,86),(47164,16787,41),(47165,16787,150),(47166,16788,131),(47167,16789,86),(47168,16789,102),(47169,16790,86),(47170,16791,86),(47171,16791,142),(47172,16792,133),(47173,16792,86),(47174,16792,102),(47175,16793,130),(47176,16794,86),(47177,16795,86),(47178,16796,102),(47179,16797,133),(47180,16798,86),(47181,16798,102),(47182,16799,104),(47183,16799,86),(47184,16800,86),(47185,16800,102),(47186,16800,166),(47187,16801,104),(47188,16801,86),(47189,16802,56),(47190,16802,150),(47191,16803,86),(47192,16803,102),(47193,16804,86),(47194,16805,1),(47195,16805,32),(47196,16805,150),(47197,16805,73),(47198,16806,1),(47199,16806,32),(47200,16806,150),(47201,16806,73),(47202,16807,129),(47203,16807,86),(47204,16807,102),(47205,16807,128),(47206,16807,166),(47207,16808,88),(47208,16809,86),(47209,16810,108),(47210,16810,86),(47211,16811,86),(47212,16812,20),(47213,16812,142),(47214,16812,150),(47215,16813,56),(47216,16813,150),(47217,16814,2),(47218,16814,33),(47219,16814,150),(47220,16814,73),(47221,16815,124),(47222,16815,86),(47223,16816,2),(47224,16816,33),(47225,16816,150),(47226,16816,73),(47227,16817,142),(47228,16818,86),(47229,16819,86),(47230,16819,102),(47231,16820,137),(47232,16820,74),(47233,16821,102),(47234,16821,105),(47235,16822,90),(47236,16823,142),(47237,16824,2),(47238,16824,32),(47239,16824,167),(47240,16824,150),(47241,16824,73),(47242,16825,87),(47243,16825,129),(47244,16825,102),(47245,16825,166),(47246,16826,142),(47247,16827,142),(47248,16828,86),(47249,16828,102),(47250,16829,133),(47251,16830,128),(47252,16831,162),(47253,16832,33),(47254,16832,73),(47255,16833,102),(47256,16833,142),(47257,16833,105),(47258,16834,142),(47259,16835,142),(47260,16836,56),(47261,16836,150),(47262,16837,142),(47263,16838,161),(47264,16838,86),(47265,16838,102),(47266,16839,102),(47267,16839,105),(47268,16840,142),(47269,16841,32),(47270,16841,73),(47271,16842,79),(47272,16842,86),(47273,16842,150),(47274,16843,90),(47275,16844,86),(47276,16845,142),(47277,16846,142),(47278,16847,108),(47279,16848,102),(47280,16849,86),(47281,16849,150),(47282,16850,102),(47283,16851,142),(47284,16852,102),(47285,16852,142),(47286,16852,105),(47287,16853,162),(47288,16854,102),(47289,16854,142),(47290,16854,105),(47291,16855,162),(47292,16856,129),(47293,16856,86),(47294,16856,102),(47295,16856,166),(47296,16857,1),(47297,16857,32),(47298,16857,150),(47299,16857,73),(47300,16858,102),(47301,16858,142),(47302,16858,105),(47303,16859,102),(47304,16859,105),(47305,16860,165),(47306,16861,165),(47307,16862,86),(47308,16863,102),(47309,16863,105),(47310,16864,142),(47311,16865,32),(47312,16865,73),(47313,16866,102),(47314,16866,105),(47315,16867,161),(47316,16867,86),(47317,16867,102),(47318,16867,166),(47319,16868,142),(47320,16869,86),(47321,16870,1),(47322,16870,150),(47323,16871,102),(47324,16871,105),(47325,16872,102),(47326,16872,105),(47327,16873,102),(47328,16873,105),(47329,16874,131),(47330,16874,86),(47331,16874,102),(47332,16875,105),(47333,16876,103),(47334,16876,102),(47335,16877,142),(47336,16878,86),(47337,16878,102),(47338,16878,166),(47339,16879,86),(47340,16880,129),(47341,16880,86),(47342,16880,102),(47343,16880,166),(47344,16881,132),(47345,16882,129),(47346,16882,86),(47347,16882,102),(47348,16882,166),(47349,16883,86),(47350,16883,117),(47351,16884,142),(47352,16885,142),(47353,16886,102),(47354,16886,105),(47355,16887,86),(47356,16888,103),(47357,16888,102),(47358,16889,161),(47359,16889,86),(47360,16889,102),(47361,16889,166),(47362,16890,131),(47363,16890,86),(47364,16890,102),(47365,16891,165),(47366,16892,161),(47367,16893,1),(47368,16894,86),(47369,16895,105),(47370,16896,87),(47371,16896,102),(47372,16896,166),(47373,16897,86),(47374,16897,102),(47375,16897,166),(47376,16898,131),(47377,16898,86),(47378,16898,102),(47379,16898,166),(47380,16899,86),(47381,16899,102),(47382,16900,102),(47383,16900,105),(47384,16901,142),(47385,16902,102),(47386,16902,105),(47387,16903,102),(47388,16903,105),(47389,16904,102),(47390,16904,105),(47391,16905,10),(47392,16905,6),(47393,16905,137),(47394,16905,74),(47395,16906,102),(47396,16906,105),(47397,16907,161),(47398,16907,86),(47399,16907,102),(47400,16907,166),(47401,16908,130),(47402,16909,1),(47403,16909,3),(47404,16909,150),(47405,16910,86),(47406,16911,86),(47407,16912,86),(47408,16913,79),(47409,16913,86),(47410,16913,150),(47411,16913,166),(47412,16914,86),(47413,16915,102),(47414,16915,105),(47415,16916,102),(47416,16916,105),(47417,16917,132),(47418,16917,143),(47419,16918,102),(47420,16918,105),(47421,16919,142),(47422,16920,86),(47423,16921,102),(47424,16921,105),(47425,16922,86),(47426,16922,83),(47427,16923,131),(47428,16923,125),(47429,16923,86),(47430,16923,102),(47431,16924,165),(47432,16925,3),(47433,16925,5),(47434,16925,150),(47435,16925,74),(47436,16926,165),(47437,16927,102),(47438,16927,105),(47439,16928,86),(47440,16929,86),(47441,16929,102),(47442,16930,102),(47443,16930,105),(47444,16931,86),(47445,16931,102),(47446,16932,165),(47447,16934,129),(47448,16934,131),(47449,16934,86),(47450,16934,102),(47451,16935,131),(47452,16935,86),(47453,16935,102),(47454,16936,102),(47455,16936,105),(47456,16937,165),(47457,16938,1),(47458,16938,150),(47459,16939,131),(47460,16939,86),(47461,16939,102),(47462,16940,131),(47463,16940,86),(47464,16940,102),(47465,16941,162),(47466,16941,86),(47467,16941,102),(47468,16942,165),(47469,16943,86),(47470,16944,142),(47471,16945,165),(47472,16946,142),(47473,16947,131),(47474,16947,86),(47475,16947,102),(47476,16948,142),(47477,16949,165),(47478,16949,131),(47479,16950,142),(47480,16951,142),(47481,16952,142),(47482,16953,131),(47483,16953,86),(47484,16953,102),(47485,16954,102),(47486,16954,142),(47487,16954,105),(47488,16955,162),(47489,16955,86),(47490,16955,102),(47491,16956,142),(47492,16957,142),(47493,16958,86),(47494,16959,1),(47495,16959,137),(47496,16959,150),(47497,16959,74),(47498,16960,102),(47499,16960,105),(47500,16961,86),(47501,16961,102),(47502,16962,86),(47503,16962,102),(47504,16963,162),(47505,16963,86),(47506,16963,102),(47507,16964,102),(47508,16964,105),(47509,16965,86),(47510,16966,165),(47511,16966,132),(47512,16967,102),(47513,16968,86),(47514,16968,102),(47515,16969,131),(47516,16969,86),(47517,16969,102),(47518,16970,162),(47519,16970,86),(47520,16970,102),(47521,16971,102),(47522,16971,105),(47523,16972,102),(47524,16972,105),(47525,16973,105),(47526,16974,102),(47527,16974,105),(47528,16975,102),(47529,16975,105),(47530,16976,86),(47531,16977,102),(47532,16977,105),(47533,16978,102),(47534,16978,105),(47535,16979,102),(47536,16980,131),(47537,16981,102),(47538,16981,105),(47539,16982,86),(47540,16982,102),(47541,16983,20),(47542,16983,142),(47543,16983,150),(47544,16984,129),(47545,16985,102),(47546,16985,105),(47547,16986,102),(47548,16986,105),(47549,16988,86),(47550,16988,102),(47551,16988,166),(47552,16989,102),(47553,16989,105),(47554,16990,7),(47555,16990,95),(47556,16990,21),(47557,16990,150),(47558,16990,74),(47559,16991,1),(47560,16991,137),(47561,16991,150),(47562,16991,74),(47563,16992,102),(47564,16992,105),(47565,16993,86),(47566,16993,102),(47567,16993,166),(47568,16994,86),(47569,16995,86),(47570,16995,102),(47571,16996,86),(47572,16996,102),(47573,16997,23),(47574,16997,1),(47575,16997,150),(47576,16997,74),(47577,16998,86),(47578,16998,102),(47579,17000,5),(47580,17000,116),(47581,17000,74),(47582,17001,86),(47583,17002,2),(47584,17002,150),(47585,17003,86),(47586,17004,86),(47587,17006,133),(47588,17007,86),(47589,17008,89),(47590,17008,86),(47591,17009,38),(47592,17009,20),(47593,17009,142),(47594,17009,150),(47595,17009,74),(47596,17011,1),(47597,17011,11),(47598,17012,1),(47599,17012,11),(47600,17013,5),(47601,17014,79),(47602,17014,150),(47603,17014,74),(47604,17015,2),(47605,17015,150),(47606,17016,86),(47607,17017,1),(47608,17017,6),(47609,17017,150),(47610,17017,74),(47611,17018,86),(47612,17019,1),(47613,17019,11),(47614,17020,17),(47615,17020,150),(47616,17020,126),(47617,17022,11),(47618,17022,86),(47619,17022,150),(47620,17025,86),(47621,17026,2),(47622,17026,23),(47623,17026,150),(47624,17026,74),(47625,17027,86),(47626,17030,16),(47627,17030,79),(47628,17030,23),(47629,17030,1),(47630,17030,37),(47631,17032,10),(47632,17032,5),(47633,17032,1),(47634,17032,150),(47635,17032,74),(47636,17035,20),(47637,17035,37),(47638,17035,142),(47639,17035,150),(47640,17036,79),(47641,17036,150),(47642,17036,74),(47643,17036,1),(47644,17040,86),(47645,17041,20),(47646,17041,142),(47647,17041,150),(47648,17044,86),(47649,17045,86),(47650,17046,6),(47651,17046,15),(47652,17046,1),(47653,17046,150),(47654,17046,74),(47655,17047,1),(47656,17047,6),(47657,17047,17),(47658,17047,150),(47659,17047,74),(47660,17049,20),(47661,17049,37),(47662,17049,150),(47663,17050,15),(47664,17050,1),(47665,17050,150),(47666,17050,74),(47667,17053,89),(47668,17053,86),(47669,17056,11),(47670,17056,150),(47671,17057,20),(47672,17057,142),(47673,17057,150),(47674,17058,17),(47675,17058,150),(47676,17059,5),(47677,17059,150),(47678,17059,74),(47679,17060,86),(47680,17060,102),(47681,17060,105),(47682,17061,17),(47683,17061,150),(47684,17062,5),(47685,17063,37),(47686,17063,150),(47687,17065,102),(47688,17065,37),(47689,17065,142),(47690,17065,105),(47691,17065,150),(47692,17066,37),(47693,17066,150),(47694,17067,1),(47695,17067,6),(47696,17067,150),(47697,17067,74),(47698,17068,82),(47699,17069,17),(47700,17069,150),(47701,17070,49),(47702,17071,3),(47703,17071,150),(47704,17072,102),(47705,17072,142),(47706,17072,105),(47707,17072,150),(47708,17073,3),(47709,17073,150),(47710,17074,3),(47711,17074,2),(47712,17074,150),(47713,17075,102),(47714,17075,142),(47715,17075,105),(47716,17076,142),(47717,17077,86),(47718,17077,102),(47719,17077,105),(47720,17079,113),(47721,17079,150),(47722,17081,142),(47723,17083,16),(47724,17083,5),(47725,17083,150),(47726,17083,74),(47727,17084,114),(47728,17084,142),(47729,17085,142),(47730,17088,142),(47731,17091,142),(47732,17092,142),(47733,17094,142),(47734,17095,7),(47735,17095,150),(47736,17095,74),(47737,17096,142),(47738,17098,142),(47739,17100,142),(47740,17101,142),(47741,17103,142),(47742,17104,142),(47743,17105,6),(47744,17105,86),(47745,17105,102),(47746,17105,74),(47747,17106,3),(47748,17106,142),(47749,17106,126),(47750,17106,150),(47751,17107,142),(47752,17110,142),(47753,17111,142),(47754,17113,114),(47755,17113,142),(47756,17114,142),(47757,17115,142),(47758,17117,10),(47759,17117,7),(47760,17118,149),(47761,17118,8),(47762,17118,21),(47763,17118,7),(47764,17118,101),(47765,17118,47),(47766,17118,12),(47767,17119,10),(47768,17119,147),(47769,17119,101),(47770,17119,50),(47771,17120,10),(47772,17120,147),(47773,17120,150),(47774,17120,4),(47775,17120,95),(47776,17120,21),(47777,17120,7),(47778,17120,101),(47779,17121,34),(47780,17121,149),(47781,17121,7),(47782,17121,101),(47783,17121,5),(47784,17122,36),(47785,17122,7),(47786,17122,5),(47787,17123,10),(47788,17123,8),(47789,17123,35),(47790,17123,101),(47791,17123,50),(47792,17123,12),(47793,17124,10),(47794,17124,149),(47795,17124,35),(47796,17124,7),(47797,17124,50),(47798,17124,12),(47799,17125,8),(47800,17125,4),(47801,17125,95),(47802,17125,7),(47803,17125,5),(47804,17126,10),(47805,17126,7),(47806,17126,5),(47807,17127,10),(47808,17127,4),(47809,17127,7),(47810,17127,15),(47811,17128,7),(47812,17128,5),(47813,17128,6),(47814,17129,149),(47815,17129,7),(47816,17129,5),(47817,17130,147),(47818,17130,5),(47819,17131,150),(47820,17131,35),(47821,17131,95),(47822,17131,21),(47823,17131,12),(47824,17132,10),(47825,17132,147),(47826,17132,8),(47827,17132,4),(47828,17132,101),(47829,17132,5),(47830,17133,10),(47831,17133,4),(47832,17133,7),(47833,17133,2),(47834,17134,10),(47835,17134,7),(47836,17134,5),(47837,17134,30),(47838,17135,147),(47839,17135,149),(47840,17135,154),(47841,17135,7),(47842,17135,5),(47843,17136,147),(47844,17136,150),(47845,17136,4),(47846,17136,7),(47847,17136,101),(47848,17137,5),(47849,17138,34),(47850,17138,150),(47851,17138,4),(47852,17138,101),(47853,17138,6),(47854,17139,149),(47855,17139,101),(47856,17139,15),(47857,17140,149),(47858,17140,8),(47859,17140,101),(47860,17140,15),(47861,17141,10),(47862,17141,7),(47863,17141,101),(47864,17141,6),(47865,17142,7),(47866,17142,5),(47867,17143,147),(47868,17143,7),(47869,17143,101),(47870,17143,5),(47871,17144,5),(47872,17144,6),(47873,17145,147),(47874,17145,7),(47875,17146,4),(47876,17146,153),(47877,17147,150),(47878,17147,8),(47879,17147,4),(47880,17147,7),(47881,17148,34),(47882,17148,5),(47883,17148,11),(47884,17149,148),(47885,17149,40),(47886,17149,101),(47887,17149,5),(47888,17149,30),(47889,17150,36),(47890,17150,8),(47891,17150,4),(47892,17150,95),(47893,17150,21),(47894,17150,101),(47895,17150,5),(47896,17150,12),(47897,17151,146),(47898,17151,147),(47899,17151,5),(47900,17151,6),(47901,17152,34),(47902,17152,36),(47903,17152,4),(47904,17152,152),(47905,17152,5),(47906,17153,34),(47907,17153,149),(47908,17153,50),(47909,17154,150),(47910,17154,101),(47911,17154,15),(47912,17155,7),(47913,17155,101),(47914,17155,6),(47915,17156,36),(47916,17156,149),(47917,17156,5),(47918,17157,4),(47919,17157,101),(47920,17158,7),(47921,17158,5),(47922,17158,6),(47923,17159,149),(47924,17159,7),(47925,17160,145),(47926,17161,145),(47927,17161,151),(47928,17161,30),(47929,17162,145),(47930,17162,152),(47931,17162,5),(47932,17163,145),(47933,17163,40),(47934,17164,145),(47935,17164,5),(47936,17165,145),(47937,17165,30),(47938,17166,145),(47939,17166,40),(47940,17167,145),(47941,17167,10),(47942,17167,147),(47943,17168,145),(47944,17168,154),(47945,17168,50),(47946,17169,145),(47947,17169,159),(47948,17170,10),(47949,17170,147),(47950,17170,5),(47951,17170,30),(47952,17171,150),(47953,17171,101),(47954,17171,5),(47955,17172,149),(47956,17173,34),(47957,17174,7),(47958,17174,2),(47959,17174,15),(47960,17175,5),(47961,17176,147),(47962,17176,149),(47963,17177,2),(47964,17178,10),(47965,17178,34),(47966,17178,150),(47967,17178,8),(47968,17178,7),(47969,17178,2),(47970,17178,12),(47971,17178,15),(47972,17179,34),(47973,17179,147),(47974,17179,7),(47975,17180,10),(47976,17180,147),(47977,17180,7),(47978,17181,34),(47979,17181,101),(47980,17182,5),(47981,17182,30),(47982,17183,7),(47983,17183,5),(47984,17184,5),(47985,17185,147),(47986,17185,149),(47987,17185,7),(47988,17185,5),(47989,17185,30),(47990,17185,2),(47991,17186,36),(47992,17186,149),(47993,17186,21),(47994,17186,5),(47995,17187,147),(47996,17187,149),(47997,17187,7),(47998,17187,101),(47999,17187,2),(48000,17188,149),(48001,17188,7),(48002,17188,5),(48003,17189,147),(48004,17189,149),(48005,17189,101),(48006,17189,5),(48007,17190,7),(48008,17190,5),(48009,17190,30),(48010,17190,6),(48011,17191,147),(48012,17191,149),(48013,17191,150),(48014,17191,4),(48015,17191,21),(48016,17191,7),(48017,17191,5),(48018,17191,30),(48019,17191,47),(48020,17192,10),(48021,17192,147),(48022,17192,4),(48023,17193,147),(48024,17193,5),(48025,17193,30),(48026,17193,15),(48027,17194,10),(48028,17194,7),(48029,17194,5),(48030,17195,149),(48031,17195,7),(48032,17196,4),(48033,17196,7),(48034,17196,6),(48035,17197,7),(48036,17197,2),(48037,17198,150),(48038,17198,7),(48039,17198,101),(48040,17198,6),(48041,17199,147),(48042,17199,4),(48043,17199,101),(48044,17200,101),(48045,17200,5),(48046,17202,149),(48047,17203,4),(48048,17203,5),(48049,17203,60),(48050,17204,4),(48051,17204,154),(48052,17204,5),(48053,17204,60),(48054,17205,10),(48055,17205,150),(48056,17205,4),(48057,17205,153),(48058,17205,7),(48059,17205,15),(48060,17206,10),(48061,17206,150),(48062,17206,153),(48063,17206,7),(48064,17206,15),(48065,17207,149),(48066,17207,30),(48067,17208,145),(48068,17208,145),(48069,17209,145),(48070,17209,145),(48071,17210,145),(48072,17210,145),(48073,17210,7),(48074,17210,7),(48075,17211,145),(48076,17211,145),(48077,17211,4),(48078,17212,145),(48079,17212,145),(48080,17212,4),(48081,17212,4),(48082,17213,145),(48083,17213,145),(48084,17213,50),(48085,17214,145),(48086,17214,7),(48087,17215,145),(48088,17216,145),(48089,17217,147),(48090,17217,149),(48091,17217,50),(48092,17218,34),(48093,17218,147),(48094,17218,149),(48095,17218,8),(48096,17218,4),(48097,17218,7),(48098,17218,5),(48099,17219,147),(48100,17219,36),(48101,17219,4),(48102,17219,5),(48103,17219,2),(48104,17220,8),(48105,17220,4),(48106,17220,95),(48107,17220,21),(48108,17220,7),(48109,17220,101),(48110,17221,10),(48111,17221,147),(48112,17221,7),(48113,17222,5),(48114,17223,150),(48115,17223,7),(48116,17224,150),(48117,17224,7),(48118,17225,149),(48119,17225,5),(48120,17225,30),(48121,17226,150),(48122,17226,155),(48123,17226,7),(48124,17227,34),(48125,17227,149),(48126,17227,4),(48127,17227,7),(48128,17228,149),(48129,17228,101),(48130,17229,149),(48131,17229,101),(48132,17230,4),(48133,17230,7),(48134,17231,150),(48135,17231,4),(48136,17232,4),(48137,17232,154),(48138,17233,149),(48139,17233,150),(48140,17233,7),(48141,17234,10),(48142,17234,36),(48143,17234,4),(48144,17234,101),(48145,17234,5),(48146,17234,15),(48147,17235,10),(48148,17235,147),(48149,17235,149),(48150,17235,7),(48151,17235,5),(48152,17236,149),(48153,17236,150),(48154,17236,7),(48155,17236,101),(48156,17237,7),(48157,17237,5),(48158,17237,30),(48159,17238,149),(48160,17238,5),(48161,17239,147),(48162,17239,7),(48163,17240,149),(48164,17240,7),(48165,17241,5),(48166,17242,5),(48167,17242,30),(48168,17243,149),(48169,17243,5),(48170,17244,36),(48171,17244,4),(48172,17244,101),(48173,17245,149),(48174,17245,95),(48175,17245,21),(48176,17245,7),(48177,17245,5),(48178,17245,30),(48179,17245,6),(48180,17245,12),(48181,17246,34),(48182,17246,149),(48183,17246,7),(48184,17246,101),(48185,17246,11),(48186,17247,7),(48187,17248,34),(48188,17248,4),(48189,17248,5),(48190,17248,60),(48191,17249,145),(48192,17249,10),(48193,17250,145),(48194,17251,145),(48195,17252,145),(48196,17252,149),(48197,17252,21),(48198,17253,145),(48199,17253,6),(48200,17254,145),(48201,17255,145),(48202,17255,150),(48203,17255,4),(48204,17255,7),(48205,17256,145),(48206,17256,150),(48207,17256,4),(48208,17256,154),(48209,17257,4),(48210,17257,7),(48211,17257,101),(48212,17258,149),(48213,17258,21),(48214,17258,7),(48215,17258,101),(48216,17258,5),(48217,17259,5),(48218,17260,34),(48219,17260,148),(48220,17260,8),(48221,17260,21),(48222,17260,30),(48223,17261,34),(48224,17261,149),(48225,17261,4),(48226,17262,36),(48227,17262,149),(48228,17262,150),(48229,17262,35),(48230,17262,4),(48231,17262,7),(48232,17262,5),(48233,17263,147),(48234,17263,150),(48235,17263,7),(48236,17263,101),(48237,17263,5),(48238,17264,36),(48239,17264,150),(48240,17264,4),(48241,17264,152),(48242,17264,5),(48243,17264,11),(48244,17265,34),(48245,17265,149),(48246,17265,101),(48247,17265,50),(48248,17265,5),(48249,17266,149),(48250,17266,7),(48251,17266,5),(48252,17266,6),(48253,17267,10),(48254,17267,147),(48255,17267,150),(48256,17267,101),(48257,17268,34),(48258,17268,36),(48259,17268,4),(48260,17268,101),(48261,17268,5),(48262,17269,34),(48263,17269,147),(48264,17269,4),(48265,17269,21),(48266,17269,5),(48267,17270,10),(48268,17270,36),(48269,17270,5),(48270,17271,149),(48271,17271,7),(48272,17272,7),(48273,17272,5),(48274,17273,4),(48275,17273,40),(48276,17274,34),(48277,17274,35),(48278,17274,7),(48279,17274,101),(48280,17274,5),(48281,17275,40),(48282,17275,50),(48283,17275,60),(48284,17276,147),(48285,17276,150),(48286,17276,40),(48287,17276,101),(48288,17276,15),(48289,17277,34),(48290,17277,147),(48291,17277,40),(48292,17277,7),(48293,17277,60),(48294,17278,40),(48295,17278,7),(48296,17278,5),(48297,17279,40),(48298,17279,101),(48299,17285,50),(48300,17288,50),(48301,17293,10),(48302,17293,147),(48303,17293,36),(48304,17293,35),(48305,17293,5),(48306,17293,30),(48307,17294,146),(48308,17294,34),(48309,17294,36),(48310,17294,149),(48311,17294,152),(48312,17294,5),(48313,17294,30),(48314,17295,10),(48315,17295,147),(48316,17295,149),(48317,17295,4),(48318,17295,40),(48319,17295,7),(48320,17295,5),(48321,17296,147),(48322,17296,7),(48323,17296,101),(48324,17297,34),(48325,17297,149),(48326,17297,7),(48327,17298,36),(48328,17298,149),(48329,17298,2),(48330,17299,7),(48331,17299,101),(48332,17299,5),(48333,17300,10),(48334,17300,150),(48335,17301,36),(48336,17301,4),(48337,17301,60),(48338,17301,12),(48339,17302,34),(48340,17302,147),(48341,17302,149),(48342,17302,150),(48343,17302,4),(48344,17302,101),(48345,17302,5),(48346,17303,34),(48347,17303,147),(48348,17303,4),(48349,17303,101),(48350,17303,5),(48351,17304,149),(48352,17304,150),(48353,17304,8),(48354,17304,4),(48355,17304,7),(48356,17304,6),(48357,17304,12),(48358,17305,147),(48359,17305,149),(48360,17305,7),(48361,17305,5),(48362,17306,5),(48363,17306,30),(48364,17307,34),(48365,17307,35),(48366,17307,4),(48367,17307,152),(48368,17308,149),(48369,17308,150),(48370,17308,35),(48371,17308,154),(48372,17308,7),(48373,17308,5),(48374,17309,8),(48375,17309,4),(48376,17309,12),(48377,17310,10),(48378,17310,7),(48379,17311,147),(48380,17311,101),(48381,17311,5),(48382,17312,147),(48383,17312,5),(48384,17313,150),(48385,17313,8),(48386,17313,35),(48387,17313,95),(48388,17313,21),(48389,17314,149),(48390,17314,7),(48391,17314,6),(48392,17314,2),(48393,17315,10),(48394,17315,7),(48395,17315,3),(48396,17315,2),(48397,17315,15),(48398,17316,36),(48399,17316,4),(48400,17316,7),(48401,17316,15),(48402,17317,7),(48403,17317,11),(48404,17318,155),(48405,17318,7),(48406,17319,153),(48407,17319,21),(48408,17320,36),(48409,17320,7),(48410,17321,21),(48411,17321,47),(48412,17322,149),(48413,17322,7),(48414,17322,5),(48415,17323,47),(48416,17324,147),(48417,17324,7),(48418,17324,101),(48419,17324,2),(48420,17325,150),(48421,17325,8),(48422,17325,95),(48423,17325,21),(48424,17325,47),(48425,17326,4),(48426,17326,6),(48427,17326,12),(48428,17327,10),(48429,17327,7),(48430,17327,15),(48431,17328,149),(48432,17329,149),(48433,17329,21),(48434,17329,7),(48435,17329,60),(48436,17330,147),(48437,17330,8),(48438,17330,7),(48439,17330,5),(48440,17331,147),(48441,17331,4),(48442,17331,7),(48443,17331,6),(48444,17332,147),(48445,17332,149),(48446,17332,5),(48447,17333,149),(48448,17333,4),(48449,17333,5),(48450,17334,10),(48451,17334,150),(48452,17334,7),(48453,17334,101),(48454,17335,36),(48455,17335,4),(48456,17335,5),(48457,17336,36),(48458,17336,4),(48459,17336,5),(48460,17337,34),(48461,17337,36),(48462,17337,4),(48463,17337,5),(48464,17338,149),(48465,17338,150),(48466,17338,4),(48467,17338,7),(48468,17338,101),(48469,17339,21),(48470,17339,7),(48471,17339,101),(48472,17339,50),(48473,17340,36),(48474,17340,150),(48475,17340,35),(48476,17340,4),(48477,17340,5),(48478,17340,11),(48479,17341,36),(48480,17341,5),(48481,17341,30),(48482,17342,150),(48483,17342,8),(48484,17342,21),(48485,17342,7),(48486,17342,12),(48487,17343,149),(48488,17343,7),(48489,17343,2),(48490,17344,7),(48491,17344,6),(48492,17345,10),(48493,17345,7),(48494,17346,10),(48495,17346,4),(48496,17346,7),(48497,17347,2),(48498,17348,147),(48499,17348,149),(48500,17348,7),(48501,17348,101),(48502,17348,2),(48503,17349,10),(48504,17349,150),(48505,17349,4),(48506,17349,15),(48507,17350,36),(48508,17350,150),(48509,17350,95),(48510,17350,7),(48511,17350,5),(48512,17350,6),(48513,17351,10),(48514,17351,34),(48515,17351,147),(48516,17351,150),(48517,17351,4),(48518,17351,7),(48519,17351,12),(48520,17351,15),(48521,17352,147),(48522,17352,149),(48523,17352,4),(48524,17352,7),(48525,17353,10),(48526,17353,149),(48527,17353,7),(48528,17353,15),(48529,17354,7),(48530,17354,2),(48531,17355,36),(48532,17355,150),(48533,17355,8),(48534,17355,95),(48535,17355,21),(48536,17355,101),(48537,17355,12),(48538,17356,36),(48539,17356,150),(48540,17356,8),(48541,17356,4),(48542,17356,95),(48543,17356,21),(48544,17356,3),(48545,17356,101),(48546,17356,5),(48547,17356,12),(48548,17357,150),(48549,17357,8),(48550,17357,4),(48551,17357,7),(48552,17357,12),(48553,17358,10),(48554,17358,147),(48555,17358,150),(48556,17358,40),(48557,17358,7),(48558,17358,101),(48559,17358,5),(48560,17358,160),(48561,17358,15),(48562,17359,147),(48563,17359,150),(48564,17359,8),(48565,17359,4),(48566,17359,21),(48567,17359,7),(48568,17359,6),(48569,17359,12),(48570,17360,149),(48571,17360,150),(48572,17360,7),(48573,17360,6),(48574,17361,5),(48575,17361,30),(48576,17362,34),(48577,17362,36),(48578,17362,4),(48579,17363,153),(48580,17363,40),(48581,17363,155),(48582,17363,21),(48583,17364,149),(48584,17364,4),(48585,17364,40),(48586,17364,21),(48587,17364,7),(48588,17364,5),(48589,17364,6),(48590,17365,150),(48591,17365,8),(48592,17365,154),(48593,17365,21),(48594,17365,101),(48595,17365,12),(48596,17366,150),(48597,17366,8),(48598,17366,154),(48599,17366,21),(48600,17366,7),(48601,17366,12),(48602,17367,8),(48603,17367,4),(48604,17367,21),(48605,17367,7),(48606,17367,12),(48607,17368,147),(48608,17368,5),(48609,17369,7),(48610,17369,5),(48611,17370,149),(48612,17370,7),(48613,17370,5),(48614,17370,2),(48615,17371,35),(48616,17371,4),(48617,17372,153),(48618,17372,21),(48619,17373,153),(48620,17373,155),(48621,17373,21),(48622,17374,149),(48623,17374,21),(48624,17374,50),(48625,17375,150),(48626,17375,4),(48627,17376,7),(48628,17376,101),(48629,17377,34),(48630,17377,147),(48631,17377,4),(48632,17377,7),(48633,17377,5),(48634,17377,6),(48635,17378,34),(48636,17378,150),(48637,17379,146),(48638,17379,36),(48639,17379,4),(48640,17380,10),(48641,17380,40),(48642,17381,5),(48643,17382,4),(48644,17382,7),(48645,17382,6),(48646,17383,36),(48647,17383,4),(48648,17383,30),(48649,17384,8),(48650,17384,95),(48651,17384,21),(48652,17384,7),(48653,17385,7),(48654,17386,154),(48655,17386,7),(48656,17386,6),(48657,17386,15),(48658,17387,7),(48659,17387,6),(48660,17388,147),(48661,17389,147),(48662,17389,149),(48663,17389,150),(48664,17389,3),(48665,17389,2),(48666,17390,147),(48667,17390,149),(48668,17390,7),(48669,17390,3),(48670,17390,2),(48671,17391,150),(48672,17391,21),(48673,17391,7),(48674,17391,47),(48675,17392,147),(48676,17392,149),(48677,17392,155),(48678,17392,7),(48679,17392,5),(48680,17392,6),(48681,17393,147),(48682,17393,149),(48683,17393,7),(48684,17393,5),(48685,17394,149),(48686,17394,7),(48687,17394,6),(48688,17395,34),(48689,17395,147),(48690,17395,36),(48691,17395,4),(48692,17395,5),(48693,17396,34),(48694,17396,147),(48695,17396,36),(48696,17396,4),(48697,17396,5),(48698,17397,36),(48699,17397,8),(48700,17397,4),(48701,17397,95),(48702,17397,5),(48703,17398,10),(48704,17398,147),(48705,17398,36),(48706,17398,150),(48707,17398,35),(48708,17398,4),(48709,17399,147),(48710,17399,149),(48711,17399,5),(48712,17400,147),(48713,17400,8),(48714,17400,21),(48715,17400,101),(48716,17400,6),(48717,17401,149),(48718,17401,5),(48719,17402,147),(48720,17402,40),(48721,17402,3),(48722,17402,5),(48723,17402,2),(48724,17403,147),(48725,17403,149),(48726,17403,150),(48727,17403,7),(48728,17403,6),(48729,17404,7),(48730,17404,101),(48731,17404,5),(48732,17405,147),(48733,17405,149),(48734,17405,7),(48735,17405,5),(48736,17405,15),(48737,17406,149),(48738,17406,7),(48739,17406,6),(48740,17407,149),(48741,17407,154),(48742,17407,7),(48743,17407,5),(48744,17412,10),(48745,17412,150),(48746,17412,4),(48747,17412,40),(48748,17412,7),(48749,17413,4),(48750,17413,7),(48751,17414,10),(48752,17414,149),(48753,17414,7),(48754,17414,5),(48755,17414,12),(48756,17415,147),(48757,17415,8),(48758,17415,7),(48759,17415,101),(48760,17415,12),(48761,17416,10),(48762,17416,149),(48763,17416,4),(48764,17416,101),(48765,17416,5),(48766,17417,154),(48767,17417,7),(48768,17417,5),(48769,17418,7),(48770,17418,30);
/*!40000 ALTER TABLE `track_problemtags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_problemtype`
--

DROP TABLE IF EXISTS `track_problemtype`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_problemtype` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_problemtype`
--

LOCK TABLES `track_problemtype` WRITE;
/*!40000 ALTER TABLE `track_problemtype` DISABLE KEYS */;
INSERT INTO `track_problemtype` VALUES (2,'Array'),(3,'Fibonacci'),(1,'Simple Math');
/*!40000 ALTER TABLE `track_problemtype` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_profile`
--

DROP TABLE IF EXISTS `track_profile`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_profile` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `mobile_no` varchar(10) NOT NULL,
  `batch_id` bigint(20) NOT NULL,
  `department_id` bigint(20) NOT NULL,
  `institute_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  `github_link` varchar(255) DEFAULT NULL,
  `linkedin_link` varchar(255) DEFAULT NULL,
  `discussion_score` int(11) NOT NULL,
  `integrity_index` double NOT NULL,
  `no_of_discussion` int(11) NOT NULL,
  `discussion_index` double NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_profile_batch_id_38485bc7_fk_track_batch_id` (`batch_id`),
  KEY `track_profile_department_id_69f94fe2_fk_track_department_id` (`department_id`),
  KEY `track_profile_institute_id_754d6f47_fk_track_institution_id` (`institute_id`),
  KEY `track_profile_user_id_3886fe62_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_profile_batch_id_38485bc7_fk_track_batch_id` FOREIGN KEY (`batch_id`) REFERENCES `track_batch` (`id`),
  CONSTRAINT `track_profile_department_id_69f94fe2_fk_track_department_id` FOREIGN KEY (`department_id`) REFERENCES `track_department` (`id`),
  CONSTRAINT `track_profile_institute_id_754d6f47_fk_track_institution_id` FOREIGN KEY (`institute_id`) REFERENCES `track_institution` (`id`),
  CONSTRAINT `track_profile_user_id_3886fe62_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=369 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_profile`
--

LOCK TABLES `track_profile` WRITE;
/*!40000 ALTER TABLE `track_profile` DISABLE KEYS */;
INSERT INTO `track_profile` VALUES (4,'1234567890',1,3,1,5,'https://www.geeksforgeeks.org/url-django-template-tag/','https://www.geeksforgeeks.org/url-django-template-tag/',0,1,0,0),(6,'1234568795',1,3,1,8,'https://github.com/sumith','https://www.linkedin.com/in/ps-1/',0,1,0,0),(7,'1324569785',1,2,2,9,'https://github.com/21ecb44','https://www.linkedin.com/in/ps-2144',0,1,0,0),(8,'1234659871',2,3,3,10,'https://github.com/21ecb43','https://www.linkedin.com/in/ps-2143',0,1,0,0),(9,'5010027129',3,1,2,11,'https://github.com/Puma-2004','https://www.linkedin.com/in/hg-11659b269/',0,1,0,0),(10,'6369471009',1,3,1,12,'https://github.com/Jeeva55t','http://www.linkedin.com/in/jeevanand-v-ba965325a',0,1,0,0),(11,'9789541673',1,5,1,13,'https://github.com/velliyangiri07','https://www.linkedin.com/in/velliyangiri07/',0,1,0,0),(12,'9791717612',1,2,1,14,'https://github.com/Praveenkumar26-S','http://www.linkedin.com/in/praveenkumar-s-7a0635269',0,1,0,0),(13,'6369398220',1,2,1,15,'https://github.com/Raghav0201','http://www.linkedin.com/in/raghav-elumalai-17668626b',0,1,0,0),(14,'9847490995',1,5,1,16,'https://github.com/NandanaNandy','https://www.linkedin.com/in/nandanad1594/',2,2,1,2),(15,'7418525273',1,2,1,17,'https://github.com/Pandiyan5273','https://www.linkedin.com/in/pandiyan-palani-93234225a/',0,1,0,0),(16,'9442310619',1,2,1,18,'https://github.com/VidhyaSri-48','http://www.linkedin.com/in/s-vidhya-sri-529634269',0,1,0,0),(17,'9159277965',1,3,1,19,'https://github.com/Lakshya135','https://www.linkedin.com/in/lakshya005/',0,1,0,0),(18,'7010984250',1,5,1,20,'https://github.com/rajesh096','https://www.linkedin.com/in/rajeshs150405/',0,1,0,0),(19,'9043818518',1,5,1,21,'https://github.com/muralidharan-1708','http://www.linkedin.com/in/muralidharans1708',0,1,0,0),(20,'9344237789',1,5,1,22,'https://github.com/praveenravi01','https://www.linkedin.com/in/praveen-ravi-4948a8269/',0,1,0,0),(21,'8056385817',1,5,1,23,'https://github.com/Naveen8056','https://www.linkedin.com/in/naveen-kumar-r-aba8a5269/',0,1,0,0),(22,'6374243181',1,3,1,24,'https://github.com/Kanishkar16Vijay','http://www.linkedin.com/in/kanishkarvijay',0,1,0,0),(23,'8248567019',1,3,1,25,'https://github.com/k-Mahendran','http://www.linkedin.com/in/mahendran13',0,1,0,0),(24,'9677922913',1,3,1,26,'https://github.com/Loganadan-M','https://www.linkedin.com/in/loganathan-m-undefined-0778a8337?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(25,'8110877913',1,3,1,27,'http://github.com/Mugesh-A/','https://www.linkedin.com/in/mugesh-anbazhagan/',0,1,0,0),(26,'6379584880',1,3,1,28,'https://github.com/naseerahmeds','https://www.linkedin.com/in/naseerahmeds',0,1,0,0),(27,'8072455828',1,2,1,29,'http://github.com/Santhosh1015','http://linkedin.com/in/santhosh-r-8111752a4',0,1,0,0),(28,'9361381365',1,3,1,30,'https://github.com/SuryaV-1331','https://www.linkedin.com/in/surya-v-371a46263/',0,1,0,0),(29,'9345378806',1,1,1,31,'https://github.com/srivanth1210','https://www.linkedin.com/in/srivanth-sekar12?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(30,'6369862502',1,1,1,32,'https://github.com/22-poojashree','https://www.linkedin.com/in/pooja-shree-9a4483236',0,1,0,0),(31,'9500726828',1,2,1,33,'https://github.com/zero-sam','https://www.linkedin.com/in/samuel-e-z3r0',0,1,0,0),(32,'9344848312',2,3,1,34,'https://github.com/G0ps','https://www.linkedin.com/in/gopinaths2005?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(33,'7397184187',2,3,1,35,'https://github.com/Hari-Nivas4','https://www.linkedin.com/in/hari-nivas-6471842a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(34,'9342062721',2,2,1,36,'https://github.com/KAMALAKANNAN-SENTHIL','https://www.linkedin.com/in/kamalakannansenthil',0,1,0,0),(35,'9843266585',1,5,1,37,'https://github.com/Surya-Prabha-18','https://www.linkedin.com/in/surya-prabha-s-383747257/',0,1,0,0),(36,'8270667012',1,1,1,38,'https://github.com/Suhainaa','https://www.linkedin.com/in/suhaina-a-3338bb2a1/',0,1,0,0),(37,'8489732116',1,1,1,39,'https://github.com/Mohan1010raj','http://www.linkedin.com/in/mohanraj004',0,1,0,0),(38,'9894594624',1,5,1,40,'https://github.com/nareshkannasln','https://www.linkedin.com/in/nareshkannasln/',0,1,0,0),(39,'8939089864',1,2,1,41,'https://github.com/Thasneem04-IT','https://www.linkedin.com/in/thasneem-sulthana-btech2026',0,1,0,0),(40,'9342243702',1,5,1,42,'https://github.com/TharunikaaM','http://www.linkedin.com/in/tharunikaa-manokaran',0,1,0,0),(41,'9442352220',1,2,1,43,'https://github.com/manikandan-s-18','https://www.linkedin.com/in/manikandan-s-8328b2269/',0,1,0,0),(42,'9943430408',1,1,1,44,'https://github.com/Hariniesubramani','https://www.linkedin.com/in/harinies-b44139293/',0,1,0,0),(43,'6379074570',1,1,1,45,'https://github.com/Madhushivani?tab=repositories','https://www.linkedin.com/in/madhushivani-thangaraj-78b1972a4/',0,1,0,0),(44,'9894528594',1,5,1,46,'https://github.com/miruthiga','https://www.linkedin.com/in/miruthigavenkatesh22/',0,1,0,0),(45,'9787167470',2,1,1,47,'https://github.com/Dharshana28','https://www.linkedin.com/in/dharshana-d-74751b291/',0,1,0,0),(46,'9786340959',1,1,1,48,'https://github.com/Monica1704','https://www.linkedin.com/in/monica-murugan-2222092a4/',0,1,0,0),(47,'6369918471',1,3,1,49,'https://github.com/Ajay18082004','https://www.linkedin.com/in/ajay-s-bb7640269/',0,1,0,0),(48,'7010347025',1,1,1,50,'https://github.com/Vinothraja2405','https://linkedin.com/in/vinothraja2405',0,1,0,0),(49,'8778987187',1,3,1,51,'https://github.com/arikaran03','https://www.linkedin.com/in/arikaran1195/',0,1,0,0),(50,'6383931484',1,5,1,52,'https://github.com/KAMALESH3021','https://www.linkedin.com/in/kamalesh3021/',0,1,0,0),(51,'7530019437',1,6,1,53,'https://github.com/Sachin1043','https://www.linkedin.com/in/sachin-k-s-0348ba269/',0,1,0,0),(52,'9566367642',1,5,1,54,'https://github.com/Santhurumuthu82','https://www.linkedin.com/in/santhuru-muthu82',0,1,0,0),(53,'7502855578',1,1,1,55,'https://github.com/ervishnucs','https://www.linkedin.com/in/ervishnucs/',0,1,0,0),(54,'7603871064',1,5,1,56,'https://github.com/nstn456','https://www.linkedin.com/in/nishanth-nishanth-a40299258?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(55,'6382154155',1,2,1,57,'https://github.com/sowmiya0406-t','https://www.linkedin.com/in/sowmiya-t-6001022a3',0,1,0,0),(56,'9384504641',1,1,1,58,'https://github.com/Madhumitha2405','https://www.linkedin.com/in/madhumitha-r-64b669269',0,1,0,0),(57,'9361944584',1,2,1,59,'https://github.com/Dharsh292005','https://www.linkedin.com/in/dharshini-saravanakumar-55a1972a4/',0,1,0,0),(58,'9344153719',1,1,1,60,'https://github.com/Anisha-18','https://www.linkedin.com/in/anisha-s-757755259',0,1,0,0),(59,'8220853438',1,1,1,61,'https://github.com/lubitha2212','https://www.linkedin.com/in/lubitha-s-80962b269/',0,1,0,0),(60,'6374942459',1,1,1,62,'https://github.com/Roopasree7','https://www.linkedin.com/in/roopa-sree-s-a988b6269',0,1,0,0),(61,'8921319751',1,3,1,63,'https://github.com/Adithya-KSM','https://in.linkedin.com/in/adi-ksm',0,1,0,0),(62,'9629960565',1,3,1,64,'https://github.com/Hussai-N','https://www.linkedin.com/in/hussain-mohammed-n-bb4641269/',0,1,0,0),(63,'9345360740',1,1,1,65,'https://github.com/SushmithaTG','https://www.linkedin.com/in/sushmitha-t04',0,1,0,0),(64,'9629813723',1,3,1,66,'http://github.com/Vimalraj1411','https://www.linkedin.com/in/vimalrajs1411',0,1,0,0),(65,'9976434739',1,2,1,67,'https://github.com/vel122','http://www.linkedin.com/in/velmurugan-a-0968b1269',0,1,0,0),(66,'9043218618',2,6,1,68,'https://github.com/Sundar0506','https://www.linkedin.com/in/sundara-mahalingam-m-25648b297/',0,1,0,0),(67,'9994849098',2,3,1,69,'https://github.com/Niranjan-77','https://www.linkedin.com/in/niranjan-s-01a825291',0,1,0,0),(68,'9150637634',1,4,1,70,'https://github.com/Praveen616-gif','https://www.linkedin.com/in/praveen-ks-673b5a257/?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(69,'9361280693',1,4,1,71,'https://github.com/Varsha-kart','https://www.linkedin.com/in/varshakarthika/',0,1,0,0),(70,'8637697217',2,1,1,72,'https://github.com/Gokularamanaa','https://www.linkedin.com/in/gokula-ramanaa-7722942a6',0,1,0,0),(71,'9025467754',2,1,1,73,'https://github.com/GURUPRASAD195','https://www.linkedin.com/in/guruprasad-m-3a07b0287/',0,1,0,0),(72,'9344394587',1,1,1,74,'https://github.com/kalaiyarasan1919','https://www.linkedin.com/in/kalai-kalai-4798a7269/',0,1,0,0),(73,'9042810904',2,6,1,75,'https://github.com/arunjarvis0904','https://www.linkedin.com/in/arunpandi-a-813153364/',0,1,0,0),(74,'9043392079',2,4,1,76,'https://github.com/chaithanya746','http://www.linkedin.com/in/chaithanya-rao-b32954291',0,1,0,0),(75,'8098936755',2,4,1,77,'https://github.com/Jakase717','https://www.linkedin.com/in/jakase-m-771487336/',0,1,0,0),(76,'8248887186',2,2,1,78,'https://github.com/Praveen222005','https://www.linkedin.com/in/praveen-kumar-kolanji-699a66291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(77,'6379647993',2,2,1,79,'https://github.com/Sunilakash2006','https://www.linkedin.com/in/sunil-akash-p-598673304?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=ios_app',0,1,0,0),(78,'8870461466',1,1,1,80,'https://github.com/Karthick999999','https://www.linkedin.com/in/karthick-v-81544a240/',0,1,0,0),(79,'9384535551',1,6,1,81,'https://github.com/Mehesh555','https://www.linkedin.com/in/mehesh-p/',0,1,0,0),(80,'9626492413',2,5,1,82,'https://github.com/Barathwaj82','https://www.linkedin.com/in/barath-waj-a261852a4/',0,1,0,0),(81,'7812810032',1,2,1,83,'https://github.com/Dharanisaravanakumar','https://www.linkedin.com/in/dharani-s-0282092a4/',0,1,0,0),(82,'6383894277',1,2,1,84,'https://github.com/Kishore-86','https://www.linkedin.com/in/kishore86/',0,1,0,0),(83,'9342535841',1,5,1,85,'https://github.com/Nivetha-47','https://www.linkedin.com/in/nivetha-s-a67323321/',0,1,0,0),(84,'9994603436',1,4,1,86,'https://github.com/Sridharshinikittusamy','https://www.linkedin.com/in/sri-dharshini-322580258/',0,1,0,0),(85,'7904761774',2,1,1,87,'https://github.com/SABARI-777/','https://www.linkedin.com/in/sabari-d-630983291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(86,'9363385667',1,5,1,88,'https://github.com/Bhaviya22','https://www.linkedin.com/in/bhaviya-m/',0,1,0,0),(87,'6374038598',1,1,1,89,'https://github.com/Magisha07?tab=following','https://www.linkedin.com/in/magisha-g-94172b269/',0,1,0,0),(88,'6374241936',1,1,1,90,'https://github.com/shamshekhar0','https://www.linkedin.com/in/shamshekhar',0,1,0,0),(89,'9344737440',1,1,1,91,'https://github.com/P-Suvetha','https://www.linkedin.com/in/suvetha-periyasamy-9ab390257/',0,1,0,0),(90,'9361808566',1,2,1,92,'https://github.com/22ita23','https://www.linkedin.com/in/kavin-t-b12633269/',0,1,0,0),(91,'9003752099',2,1,1,93,'https://github.com/Kruthickmanickam34','https://www.linkedin.com/in/kruthick-m-15767028a',0,1,0,0),(92,'7010869848',1,3,1,94,'https://github.com/deva565','http://www.linkedin.com/in/devadev565',0,0,1,0),(93,'9207417111',2,1,1,95,'https://github.com/Aavtic','https://www.linkedin.com/in/aadish-m/',0,1,0,0),(94,'9003067585',2,1,1,96,'https://github.com/Hariprasath2011','https://in.linkedin.com/in/hariprasath-j-nathan-1786021b0',0,1,0,0),(95,'9500447547',1,1,1,97,'https://github.com/Saran-2015','https://www.linkedin.com/in/saran-r-9538a7269/',0,1,0,0),(96,'7305040698',2,1,1,98,'https://github.com/Pradeep46713','https://www.linkedin.com/in/pradeep-p-279b10333?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(97,'8111045020',2,1,1,99,'https://github.com/iamajay19','https://www.linkedin.com/in/ajay-chandrasekaran',0,1,0,0),(98,'9952358602',1,3,1,100,'https://github.com/MathavanC','https://www.linkedin.com/in/mathavan-c96/',0,1,0,0),(99,'8015343848',1,1,1,101,'https://github.com/Vishnuprasath18','https://www.linkedin.com/in/vishnuprasathks/',0,1,0,0),(100,'9344237789',1,5,1,102,'https://github.com/praveenravi01','https://www.linkedin.com/in/praveen-ravi-4948a8269/',0,1,0,0),(101,'9360684645',1,5,1,103,'https://github.com/monika123-S','https://www.linkedin.com/in/monika-r-679833202/',0,1,0,0),(102,'9003752099',2,1,1,104,'https://github.com/Kruthickmanickam34','https://www.linkedin.com/in/kruthick-m-15767028a',0,1,0,0),(103,'7904825740',1,1,1,105,'https://github.com/sarathibalamurugan','https://www.linkedin.com/in/parthasarathi-b-212630269/',0,1,0,0),(104,'8056864294',1,5,1,106,'https://github.com/A-P-Dharanya','https://www.linkedin.com/in/dharanya-ap-14-ai/',0,1,0,0),(105,'9361308182',2,1,1,107,'https://github.com/Nivethanisha','https://www.linkedin.com/in/nivetha-venkatesan-62b1862a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(106,'6369312487',2,1,1,108,'http://github.com/ManoMithun','http://linkedin.com/in/mano-m-3981712a3',0,1,0,0),(107,'9443759428',1,1,1,109,'https://github.com/Hemanth-Kumar2005','https://www.linkedin.com/in/hemanth-kumar-v-8292ab258/',0,1,0,0),(108,'6379233708',1,1,1,110,'https://github.com/VijayShankarM/','https://www.linkedin.com/in/vijay-murugan-83962b269/',0,1,0,0),(109,'9842043298',2,1,1,111,'https://github.com/arulselvi0409','https://www.linkedin.com/in/arul-selvi-a452432a4',0,1,0,0),(110,'9025800912',1,1,1,112,'https://github.com/alenreginald','https://www.linkedin.com/in/alen-reginald-884630269/',0,1,0,0),(111,'9787638701',1,1,1,113,'https://github.com/vaishnavikarmegam05','https://www.linkedin.com/in/vaishnavi-karmegam-219734269?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(112,'8754144239',1,1,1,114,'https://github.com/Sakthi1205','https://www.linkedin.com/in/sakthi-s-3063b1257/',0,1,0,0),(113,'6383024594',1,1,1,115,'https://github.com/kavin-44','https://www.linkedin.com/in/kavin-sankar-934631269/',0,1,0,0),(114,'9360647787',1,3,1,116,'https://github.com/duraigurusaran23','https://www.linkedin.com/in/durai-guru-saran/',0,1,0,0),(115,'8807403478',1,3,1,117,'https://github.com/Atchaya-PM','https://www.linkedin.com/in/atchaya-pm-71763b269/',0,1,0,0),(116,'9597623036',2,1,1,118,'https://github.com/account','https://www.linkedin.com/in/keerthimullaivasan',0,1,0,0),(117,'9025924259',1,1,1,119,'https://github.com/Anushasmilee09','https://www.linkedin.com/in/anusha-smilee-a6663526a/',0,1,0,0),(118,'8667878600',2,1,1,120,'https://github.com/praveensaravanan26','https://www.linkedin.com/in/praveen-saravanan-8611912a4',0,1,0,0),(119,'9342409594',1,1,1,121,'https://github.com/suseendran-1234','http://www.linkedin.com/in/suseendranm07',0,1,0,0),(120,'8778326537',2,1,1,122,'https://github.com/thiru-x','https://www.linkedin.com/in/thirugnanam-n-07616a2a3/',0,1,0,0),(121,'8056664279',1,1,1,123,'https://github.com/siva-12-k','https://www.linkedin.com/in/siva-k-271630269/',0,1,0,0),(122,'7871766067',2,5,1,124,'https://github.com/Karthikeyan1345','https://www.linkedin.com/in/karthi-keyan-105427293',0,1,0,0),(123,'8825592480',2,5,1,125,'https://github.com/SOUNDAR42','https://www.linkedin.com/in/soundar-d-b4a1192a4/',0,1,0,0),(124,'9363139849',2,5,1,126,'https://github.com/sai-krishna04','https://www.linkedin.com/in/sai-krishna-9a81812a4/',0,1,0,0),(125,'8015860399',1,1,1,127,'https://github.com/Thiyamahalakshmi','https://www.linkedin.com/in/mahalakshmi-kalaiyarasan-4721952a4/',0,1,0,0),(126,'9345577903',1,1,1,128,'https://github.com/arun2314','https://www.linkedin.com/in/arunkumar-n-57866826a',0,1,0,0),(127,'9944630829',2,4,1,129,'https://github.com/NANDANARAJ511','https://leetcode.com/u/Nandanaraj/',0,1,0,0),(128,'9514325816',1,3,1,130,'https://github.com/Aswin-pranesh','https://www.linkedin.com/in/aswin-pranesh-4b366b269/',0,1,0,0),(129,'6379001540',1,1,1,131,'https://github.com/22csa29','https://www.linkedin.com/in/magudeeshwaran-b-56b8a9269/',0,1,0,0),(130,'6383158948',1,1,1,132,'https://github.com/Venishaa07','http://www.linkedin.com/in/venishaa-natarajan-880931274',0,1,0,0),(131,'7010548475',1,1,1,133,'https://github.com/Birundhakausalya','https://www.linkedin.com/in/birundha-k-5061762a3/',0,1,0,0),(132,'9150788191',2,5,1,134,'https://github.com/AGILAN-S-15','https://www.linkedin.com/in/agilan-s-a9b48030a?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(133,'7558187099',2,5,1,135,'https://github.com/sashanth17','https://www.linkedin.com/in/sashantha',0,1,0,0),(134,'9994589914',2,5,1,136,'https://github.com/shreesha-ai','https://www.linkedin.com/in/shreesha-radhakrishnan-b8116b2a3/',0,1,0,0),(135,'7904761774',2,1,1,137,'https://github.com/SABARI-777','https://www.linkedin.com/in/sabari-d-630983291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(136,'7010692978',1,1,1,138,'https://github.com/Rubinraj08','https://www.linkedin.com/in/rubin-raj-web/',0,1,0,0),(137,'9345388919',1,1,1,139,'https://github.com/poorvickpoorvi','https://www.linkedin.com/in/poorvickpoorvi/',0,1,0,0),(138,'9789255214',2,3,1,140,'https://github.com/DINESHSURRYA','http://www.linkedin.com/in/dinesh-surrya-a5a67a2ba',0,1,0,0),(139,'9344037931',1,1,1,141,'https://github.com/AbishekViper','https://www.linkedin.com/in/abishek-m-5488a6269/',0,1,0,0),(140,'8148556247',1,1,1,142,'https://github.com/chandrud123','http://www.linkedin.com/in/chandru-d-82862b269',0,1,0,0),(141,'9443960990',1,1,1,143,'https://github.com/mohanamahalingam07','https://www.linkedin.com/in/mohana-mahalingam-03a480259/',0,1,0,0),(142,'8098694314',1,1,1,144,'https://github.com/kengathar','https://www.linkedin.com/in/kengathar-g-a918a8269?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(143,'7539916614',1,1,1,145,'https://github.com/VKaaviya','https://www.linkedin.com/in/kaviya-veerapandiyan-77893b257/',0,1,0,0),(144,'7548845788',1,2,1,146,'https://github.com/Ramesh-55788','https://www.linkedin.com/in/ramesht78/',0,1,0,0),(145,'6381826121',1,5,1,147,'https://github.com/sobikaM','https://www.linkedin.com/in/sobika-m-36b536333/',0,1,0,0),(146,'6379117875',2,2,1,148,'https://github.com/Ramymurugan','https://www.linkedin.com/in/ramya-m-3b51672a3/',0,1,0,0),(147,'9566743579',1,1,1,149,'https://github.com/aswinkishore07','https://www.linkedin.com/in/aswin-s-k-33462a269?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(148,'9042627531',2,5,1,150,'https://github.com/iamyuva','https://www.linkedin.com/in/yuvaprasath-k',0,1,0,0),(149,'9843906487',2,1,1,151,'https://github.com/Madhan-29','https://www.linkedin.com/in/madhan-m-3202942a6/',0,1,0,0),(150,'9566595770',2,2,1,152,'https://github.com/Karthikeyan523494','https://www.linkedin.com/in/karthikeyan523?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(151,'9384956869',2,2,1,153,'https://github.com/Dineshbabu855','https://www.linkedin.com/in/dinesh-babu-v-37b1672a3',0,1,0,0),(152,'9698957621',2,3,1,154,'https://github.com/Abijo2005','https://leetcode.com/u/abinaya_2295/',0,1,0,0),(153,'8438240972',1,1,1,155,'https://github.com/Thirunavukarasu-k','https://www.linkedin.com/in/thirunavukarasu-k-460461270',0,1,0,0),(154,'9345769440',1,3,1,156,'https://github.com/dhanusridk2005','https://linkedin.com/in/dhanusri-k-7141972a4',0,1,0,0),(155,'9789282238',1,5,1,157,'https://github.com/prasath-06?tab=repositories','https://www.linkedin.com/in/prasath-raja-k-5609aa25a/',0,1,0,0),(156,'8489611045',1,3,1,158,'https://github.com/Adhamsafir1','https://www.linkedin.com/in/adham-safir-7911b625b/',0,1,0,0),(157,'9344538972',2,2,1,159,'https://github.com/dharunkumar2129','https://www.linkedin.com/in/dharunkumar2129/',0,1,0,0),(158,'8903452081',2,2,1,160,'https://github.com/Sudharsan452','https://www.linkedin.com/in/sudharsan452/',0,1,0,0),(159,'8148796027',2,2,1,161,'https://github.com/kingyuva1510l','https://www.linkedin.com/in/guruvishnu-s-682792316/',0,1,0,0),(160,'9363544551',2,5,1,162,'https://github.com/Shqnmugapriya/Shanmugapriya','http://www.linkedin.com/in/shanmugapriya-s-4a41692a3',0,1,0,0),(161,'8072766459',1,1,1,163,'https://github.com/22csa17','http://www.linkedin.com/in/kalai-arasu-p-r-88806734b',0,1,0,0),(162,'9025158867',2,2,1,164,'https://github.com/Selvakumar04-2005','https://www.linkedin.com/in/selvakumar-k-553b95357?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(163,'7904601673',2,1,1,165,'https://github.com/Mohana25bharathi','https://www.linkedin.com/in/mohana-bharathi-a-mohana-5121692a3',0,1,0,0),(164,'6380332917',2,3,1,166,'https://github.com/DharsanSibi','https://www.linkedin.com/in/dharsan-sibi-b672612a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(165,'8429391626',2,1,1,167,'https://github.com/Aniruthra','https://www.linkedin.com/in/aniruthra-prasad-3862882a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(166,'9363362740',2,1,1,168,'https://github.com/Gopalakrishnan-T','https://www.linkedin.com/in/gopalakrishnan-t-a3a504364?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(167,'62386 9209',2,1,1,169,'https://github.com/Kanyaka05','https://www.linkedin.com/in/kanyaka-pandi-a582942a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(168,'9629813723',1,3,1,170,'https://github.com/Vimalraj1411','https://www.linkedin.com/in/vimalrajs1411',0,1,0,0),(169,'8940097778',2,1,1,171,'https://github.com/ABISHEKUK','https://www.linkedin.com/in/abishekuk',0,1,0,0),(170,'7418438186',1,3,1,172,'https://github.com/Vissnuvardhan','https://www.linkedin.com/in/vissnuvardhan-kumaresan-5aa08624b?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(171,'7806948262',2,1,1,173,'https://github.com/dharunprasath1210','https://www.linkedin.com/in/dharun-prasath-sundharavel-5597312a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(172,'8807172651',2,1,1,174,'https://github.com/jeevi-7','https://www.linkedin.com/in/jeevithan-m-b67703296?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(173,'8754481778',2,3,1,175,'https://github.com/Piruthvin','https://www.linkedin.com/in/piruthvin-m-5071852a4',0,1,0,0),(174,'62386 9209',2,1,1,176,'https://github.com/Kanyaka05','https://www.linkedin.com/in/kanyaka-pandi-a582942a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(175,'9363544551',2,5,1,177,'https://github.com/Shqnmugapriya/Shanmugapriya','http://www.linkedin.com/in/shanmugapriya-s-4a41692a3',0,1,0,0),(176,'6383923285',2,2,1,178,'https://github.com/MariyaIshwarya','https://www.linkedin.com/in/mariya-ishwarya-3741b82a4/',0,1,0,0),(177,'9944695171',2,1,1,179,'https://github.com/Yeswwnth','https://www.linkedin.com/in/yeswanth-s-050179225?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(178,'9944695171',2,1,1,180,'https://github.com/Yeswwnth','https://www.linkedin.com/in/yeswanth-s-050179225?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(179,'6384746758',2,1,1,181,'https://github.com/nivas710','https://www.linkedin.com/in/nivass107?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(180,'9025161363',2,2,1,182,'https://github.com/Varshinisrimurugan','https://www.linkedin.com/in/varshini-sri-99a1852a4/',0,1,0,0),(181,'6385635167',2,1,1,183,'https://github.com/Munishankar15','https://www.linkedin.com/in/munishankar-m-129a18354',0,1,0,0),(182,'6374221871',2,1,1,184,'https://github.com/karthisasi','https://www.linkedin.com/in/dinesh-karthik-17b7312a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(183,'9442083779',2,1,1,185,'https://github.com/sabreesh04','https://www.linkedin.com/in/sabreesh-s-b4b1702a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(184,'6369570454',2,1,1,186,'https://github.com/Yogeshwaran-22','https://www.linkedin.com/in/yogesh-waran-s-66a56a2a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(185,'9489825974',2,1,1,187,'https://github.com/rajamuthukumaranrs','https://www.linkedin.com/in/raja-muthu-kumaran-ba116a2a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(186,'8778864167',2,1,1,188,'https://github.com/Sridharsan123','https://www.linkedin.com/in/sri-dharsan-9b41b72a4/',0,1,0,0),(187,'9342478588',2,5,1,189,'https://github.com/dharshana-r04','https://www.linkedin.com/in/dharshana-r-b818072a1',0,1,0,0),(188,'9042831706',2,1,1,190,'https://github.com/Vimalsankar14','https://www.linkedin.com/vimal-sankar-5896232a7_day158-nxtwave-ccbp4-activity-7315422110170894336-KUEf?utm_source=share&utm_medium=member_android&rcm=ACoAAEnz8XkBb8migI7EWFNQP-_M7duPhWh6xCU',0,1,0,0),(189,'8310982968',2,1,1,191,'https://github.com/SriRamachandiran','https://in.linkedin.com/in/ramachandiran-g-4091b62a4',0,1,0,0),(190,'7695874772',2,1,1,192,'https://github.com/Dharani-0501','https://www.linkedin.com/in/dharani-r-7a29a9292/',0,1,0,0),(191,'7010768742',2,1,1,193,'https://github.com/rahman12112005','https://www.linkedin.com/in/abdul-rahman-a-343b19362?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(192,'9080773347',2,1,1,194,'https://github.com/Nigesh07','http://linkedin.com/in/nigesh-sonaimuthu-b501b92a4',0,1,0,0),(193,'9994458719',2,1,1,195,'https://github.com/Srimonanprabhu','https://www.linkedin.com/in/sri-monan-prabhu-0a809530b?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(194,'7092406020',2,1,1,196,'https://github.com/Rithickrosh','https://www.linkedin.com/in/rithick-roshan-p-00818a2a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(195,'6382619991',2,1,1,197,'https://github.com/SuganeshwaranV','https://www.linkedin.com/in/suganesh-waran-6521892a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(196,'7904601673',2,1,1,198,'https://github.com/Mohana25bharathi','https://www.linkedin.com/in/mohana-bharathi-a-mohana-5121692a3',0,1,0,0),(197,'9361544427',2,1,1,199,'https://github.com/Sibimac','https://www.linkedin.com/in/sibichandar-seetharaman-0531892a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android',0,1,0,0),(198,'9345031576',2,1,1,200,'https://github.com/Nithish1718','https://www.linkedin.com/in/nithish-a-07b1892a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(199,'7845661799',2,1,1,201,'https://github.com/Poopashprasath','https://www.linkedin.com/in/poopash-prasath-n-b451b82a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(200,'8220068949',2,1,1,202,'https://github.com/jeevadharsan28','https://www.linkedin.com/in/jeeva-d-8602932a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(201,'7695874772',2,1,1,203,'https://github.com/Dharani-0501','https://www.linkedin.com/in/dharani-r-7a29a9292/',0,1,0,0),(202,'9344243297',2,1,1,204,'https://github.com/bharani28012','https://www.linkedin.com/in/bharani-bharani-27979729b',0,1,0,0),(203,'7667419111',2,2,1,205,'https://github.com/sriharinip1','https://www.linkedin.com/in/sri-harini-p-b471682a3',0,1,0,0),(204,'8124885254',2,1,1,206,'https://github.com/RevanthrajH','https://in.linkedin.com/in/revanth-haridass-4241b82a4',0,1,0,0),(205,'9363380827',2,1,1,207,'https://github.com/Sedhurathinam','https://www.linkedin.com/in/sedhu-rathinam-a431b82a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(206,'8668074195',2,1,1,208,'https://github.com/Arunachalam9626','https://www.linkedin.com/in/arunachalam-ramesh-8b9151294?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(207,'6379751042',2,1,1,209,'https://github.com/HariniMeena2006','https://www.linkedin.com/in/harini-meena-m-b55714292',0,1,0,0),(208,'6382619991',2,1,1,210,'https://github.com/SuganeshwaranV','https://www.linkedin.com/in/suganesh-waran-6521892a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(209,'8438403239',2,5,1,211,'https://github.com/Yogendthira','https://leetcode.com/u/Yogendthira/',0,1,0,0),(210,'8778333315',2,1,1,212,'https://github.com/mokesh25','https://www.linkedin.com/in/mokeshwar-a-46a1872a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(211,'7845661799',2,1,1,213,'https://github.com/Poopashprasath','https://www.linkedin.com/in/poopash-prasath-n-b451b82a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(212,'9361203053',2,1,1,214,'https://github.com/MadhuHariharanM','https://www.linkedin.com/in/m-madhu-hariharan-03b16a2a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(213,'6369548145',2,1,1,215,'https://github.com/Faisal46666','https://www.linkedin.com/in/faisal-rafi-8a2477294?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(214,'9080907033',2,1,1,216,'https://github.com/mithundeva','https://www.linkedin.com/in/devadharshini-s-007562291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(215,'7904990292',2,3,1,217,'https://github.com/settings/profile','https://www.linkedin.com/in/gopi-m-3601152a4/',0,1,0,0),(216,'8668074195',2,1,1,218,'https://github.com/Arunachalam9626','https://www.linkedin.com/in/arunachalam-ramesh-8b9151294?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(217,'7896038113',2,2,1,219,'https://github.com/s8n0gre','http://www.linkedin.com/in/deborshi-kashyap-3153a7254',0,1,0,0),(218,'6369688970',2,1,1,220,'https://github.com/dineshkaruppannan09','https://www.linkedin.com/in/dinesh-karuppannan-ba57302a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(219,'9360240390',2,1,1,221,'https://github.com/balaji-123869','https://www.linkedin.com/me?trk=p_mwlite_feed-secondary_nav',0,1,0,0),(220,'7094472460',2,1,1,222,'https://github.com/stevekalix','https://www.linkedin.com/in/manikandan-s-133179364',0,1,0,0),(221,'7603963394',2,1,1,223,'https://github.com/','https://www.linkedin.com/in/sudhan-kalimuthu-4a61872a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(222,'7339645582',2,1,1,224,'https://github.com/vetrivelan01','https://www.linkedin.com/in/vetri-velan-61818b2a4',0,1,0,0),(223,'9025986442',2,1,1,225,'https://github.com/Iswaryarengadurai','https://www.linkedin.com/in/iswarya-rengadurai-57570b2a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(224,'8015027848',2,1,1,226,'https://github.com/23csa34','https://www.linkedin.com/in/divya-bharathi-0502912a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(225,'9786977290',2,1,1,227,'https://github.com/23csa37','https://www.linkedin.com/in/gokulapriya-s-3116512a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(226,'8122942946',2,1,1,228,'https://github.com/Hari4825','https://www.linkedin.com/in/a-k-hari-prasad-61a252294?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(227,'8807001367',2,5,1,229,'https://github.com/Visithra14','https://www.linkedin.com/in/visithra-r-58916a2a3',0,1,0,0),(228,'9080105603',2,1,1,230,'https://github.com/Sripriya3','https://www.linkedin.com/in/sri-priya-c-a421692a3',0,1,0,0),(229,'8807423839',2,3,1,231,'https://github.com/Shanjith3235','https://www.linkedin.com/in/shanju6/',0,1,0,0),(230,'9342390990',2,1,1,232,'https://github.com/Yogesh637','https://www.linkedin.com/in/yogesh-perumal-b77526291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=ios_app',0,1,0,0),(231,'6382358309',2,5,1,233,'https://github.com/krishna-kanth143','https://leetcode.com/u/KRISHNA_K_00/',0,1,0,0),(232,'9787960816',2,5,1,234,'https://github.com/Hemapriyamani','https://www.linkedin.com/in/hemapriya-mani-991972291',0,1,0,0),(233,'8667594506',2,1,1,235,'https://github.com/23csb003','https://www.linkedin.com/in/mokeshwar-a-46a1872a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(234,'9597545769',2,1,1,236,'https://github.com/Agestin10','https://www.linkedin.com/in/agestin-daniel-b29712292?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(235,'9042861257',2,1,1,237,'https://github.com/dashboard','https://www.linkedin.com/in/ramjansi-ram-57a1ba2a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(236,'9025516511',2,1,1,238,'https://github.com/Rohithram007','https://www.linkedin.com/in/rohith-ram-a631b82a4',0,1,0,0),(237,'9025786058',2,1,1,239,'https://github.com/Athira436','https://www.linkedin.com/in/athira-rajendran-99164a2a5',0,1,0,0),(238,'9788943365',2,1,1,240,'https://github.com/RubaS05','http://www.linkedin.com/in/ruba-s-6421ba2a4',0,1,0,0),(239,'6380647541',2,1,1,241,'https://github.com/23csb08','https://www.linkedin.com/in/monisha-s-35118a2a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(240,'6384772556',2,5,1,242,'https://github.com/Saleemullah-019','https://in.linkedin.com/in/saleem-ullah-b611192a4',0,1,0,0),(241,'9360364596',2,1,1,243,'https://github.com/Shreyasuresh2005','https://www.linkedin.com/in/shreya-suresh-0a21702a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(242,'9150539835',2,1,1,244,'https://github.com/samueljapan','https://www.linkedin.com/in/samuel-j-15a1712a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(243,'6383240268',2,1,1,245,'https://github.com/prathaban-009','https://www.linkedin.com/in/prathaban-m-b211862a4/',0,1,0,0),(244,'7708414641',2,1,1,246,'https://github.com/santhosh0460','https://www.linkedin.com/in/r-santhosh-b42505364?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(245,'9345793045',2,1,1,247,'https://github.com/23csb39','https://www.linkedin.com/in/sathana-s-b111862a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(246,'6379729990',2,1,1,248,'https://github.com/Divyanand2006','https://www.linkedin.com/in/divyanand-e-82855534a?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(247,'9489532919',2,1,1,249,'https://github.com/Muthu958585','https://www.linkedin.com/in/muthu-kumar-s-94573b358?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_ap',0,1,0,0),(248,'9363483571',2,1,1,250,'https://github.com/dashboard','https://www.linkedin.com/in/abinaya-m-abinaya-m-6344b9293?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(249,'8248941835',1,5,1,251,'https://github.com/Krishnakanthkn-08','https://www.linkedin.com/in/krishnakanth-n-5878a7269/',0,1,0,0),(250,'9363605552',2,5,1,252,'https://leetcode.com/u/kanishka_20/','http://www.linkedin.com/in/kanishka-k-v-8931b62a4',0,1,0,0),(251,'6369859996',2,1,1,253,'https://github.com/lokeshSL25','https://www.linkedin.com/in/lokeshkumar-s-5711b2326',0,1,0,0),(252,'7010170699',2,1,1,254,'https://github.com/Abi164','https://www.linkedin.com/in/abi-p-6302902a6',0,1,0,0),(253,'9384183682',2,2,1,255,'https://github.com/NiroshiniSenthil','https://www.linkedin.com/in/niroshinib8372a2a5/',0,1,0,0),(254,'7418705299',1,5,1,256,'https://github.com/T-GOPIKA1401','https://www.linkedin.com/in/gopika-t',0,1,0,0),(255,'9384998176',2,5,1,257,'https://github.com/preetha2006','https://www.linkedin.com/in/preetha-m-53b2932a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(256,'6379851982',2,5,1,258,'https://github.com/Srijasrijasri','https://www.linkedin.com/in/srija-m-361047292',0,1,0,0),(257,'6380645121',2,1,1,259,'https://github.com/Dharsh2329','https://www.linkedin.com/in/dharsana-gopalakrishnan-960b58292',0,1,0,0),(258,'7904324385',2,1,1,260,'https://github.com/ArunS-17','https://www.linkedin.com/in/arun-prakash-8012942a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(259,'8610844903',2,1,1,261,'https://github.com/Maniesha24','https://www.linkedin.com/in/manieshak-kumar-a3a1b72a4',0,1,0,0),(260,'8344195602',1,5,1,262,'https://github.com/Bharathidhasan06','https://www.linkedin.com/in/bharathidhasan-p-a63304260',0,1,0,0),(261,'93606 4863',1,5,1,263,'https://github.com/sakthisharmithamohan/sakthisharmithamohan','https://www.linkedin.com/in/sakthi-sharmitha-958827269?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(262,'9952157899',2,2,1,264,'https://github.com/Balasundari3','https://www.linkedin.com/in/balasundari-s-b711692a3',0,1,0,0),(263,'93606 4863',1,5,1,265,'https://github.com/sakthisharmithamohan/sakthisharmithamohan','https://www.linkedin.com/in/sakthi-sharmitha-958827269?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(264,'8838414524',2,1,1,266,'https://github.com/23csa24','https://www.linkedin.com/in/dhanalatchumi-t-1b172b2a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(265,'6379488180',2,1,1,267,'https://github.com/dashboard','https://www.linkedin.com/in/subbiah-durai-t-40750a364?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(266,'7904305538',2,2,1,268,'https://github.com/Premnath-M-D','https://www.linkedin.com/in/premnath-md-55b16b2a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(267,'8248162833',2,5,1,269,'https://github.com/account','https://www.linkedin.com/mypreferences/d/settings/language?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base%3Bj4hAfOE5RIqgv5Z6VWl68A%3D%3Djxv2zw%3D%3D',0,1,0,0),(268,'8148033820',1,5,1,270,'https://github.com/ZiyaSherzeen','https://www.linkedin.com/in/ziya-sherzeen/',0,1,0,0),(269,'8148487012',2,2,1,271,'https://github.com/Santhiya2504','https://www.linkedin.com/in/santhiya-senthilkumar-b1b1b92a4/',0,1,0,0),(270,'9150789813',1,5,1,274,'https://github.com/SoundaryaIndusivakumar','https://www.linkedin.com/in/soundarya-indusivakumar-8208662b3',0,1,0,0),(271,'9994589914',2,5,1,275,'https://github.com/shreesha-ai','https://www.linkedin.com/in/shreesha-radhakrishnan-b8116b2a3/',0,1,0,0),(272,'9360364596',2,1,1,276,'https://github.com/Shreyasuresh2005','https://www.linkedin.com/in/shreya-suresh-0a21702a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(273,'8122621771',2,5,1,277,'https://github.com/Mano006-ai','https://www.linkedin.com/in/manothakin-p-b30271343?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(274,'9025214487',2,5,1,278,'https://github.com/Hemavarsharaja','https://www.linkedin.com/in/hemavarsha-raja-1771b62a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(275,'8148487012',2,2,1,279,'https://github.com/Santhiya2504','https://www.linkedin.com/in/santhiya-senthilkumar-b1b1b92a4/',0,1,0,0),(276,'8925375517',2,1,1,280,'https://github.com/sruthiVT','https://www.linkedin.com/in/sruthi-priya-v-t-sruthi-priya-3541b72a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(277,'9498815827',2,1,1,281,'https://search.app/uAJ1BoDaB44uiDna6','https://www.linkedin.com/in/rithika-k-26946434a?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(278,'6374411211',3,3,1,282,'https://github.com/23eca12','https://www.linkedin.com/feed/',0,1,0,0),(279,'7305795053',2,1,1,283,'https://github.com/Sunitha1809','https://www.linkedin.com/in/sunitha-b',0,1,0,0),(280,'7904601673',2,1,1,284,'https://github.com/Mohana25bharathi','https://www.linkedin.com/in/mohana-bharathi-a-mohana-5121692a3',0,1,0,0),(281,'7094884053',2,1,1,285,'https://github.com/23csb20','https://www.linkedin.com/in/s-periya-maruthu-56a1862a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(282,'7904293599',1,5,1,286,'https://github.com/Viki0601','https://www.linkedin.com/in/vignesh-p-15b83a25b',0,1,0,0),(283,'9361502328',2,1,1,287,'https://github.com/23csa27','https://www.linkedin.com/in/dhanush-m-4b36b0321?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(284,'6374965936',2,1,1,288,'https://github.com/Velan1524','https://www.linkedin.com/in/velan-m-55216b2a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(285,'9048459822',2,1,1,289,'https://github.com/krithick2004/krithick2004','http://www.linkedin.com/in/krithick-a-518502276',0,1,0,0),(286,'9385564307',2,1,1,290,'https://github.com/Yash09102005','http://linkedin.com/in/yashila-devi-g-k-aa81862a4',0,1,0,0),(287,'6379562337',1,5,1,291,'https://github.com/MonikaV08','http://www.linkedin.com/in/monika-v-39b2052a4',0,1,0,0),(288,'7010809105',2,1,1,292,'https://github.com/Andrewsdavid2005','https://www.linkedin.com/in/andrews-gnana-selvin-d',0,1,0,0),(289,'6374440697',2,5,1,293,'https://github.com/kavinkumar791','http://www.linkedin.com/in/kavin-kumar-a-r-50b16a2a3',0,1,0,0),(290,'9495412549',2,1,1,294,'https://github.com/Vector3451','https://www.linkedin.com/in/vinay-vijay-6862012a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(291,'8610941429',2,5,1,295,'https://github.com/Muralidharan2712','https://www.linkedin.com/in/murali-dharan',0,1,0,0),(292,'6369470591',2,1,1,296,'https://github.com/account_verifications/confirm/8907e92e-4639-474b-b202-43ffdb04ab24/11715654','https://www.linkedin.com/in/dhanush-kamaraj-9457362a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(293,'9342466083',2,1,1,297,'https://github.com/Harsha-ash19','https://www.linkedin.com/in/harshavardhan-rajkumar-6a3b0b293?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(294,'9361308182',2,1,1,298,'https://github.com/Nivethanisha','https://www.linkedin.com/in/nivetha-venkatesan-62b1862a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(295,'9787416381',1,3,1,299,'https://github.com/Hari-Babu04','https://www.linkedin.com/in/haribabu-m-89366a269/',0,1,0,0),(296,'7010698138',2,5,1,300,'https://github.com/VASAN-M','https://www.linkedin.com/in/m-vasanth-b7016b2a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(297,'9994525385',2,1,1,301,'https://github.com/Kabil-25','https://www.linkedin.com/in/kabil-kumar-6147312a5?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(298,'9342748712',2,5,1,302,'https://github.com/MonijaV','http://www.linkedin.com/in/monija29',0,1,0,0),(299,'6382094290',1,1,1,303,'https://github.com/Shandeepshri26','http://linkedin.com/in/shandeep-shri-32b2052a4',0,1,0,0),(300,'9025568419',2,1,1,304,'https://github.com/Mumthisendhil','https://www.linkedin.com/in/mumthi-s-695958363?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(301,'6381480843',1,1,1,305,'https://github.com/shriram-30','https://www.linkedin.com/in/shriram-n-71162a269/',0,1,0,0),(302,'8489932328',1,1,1,306,'https://github.com/SanjayKing31','https://www.linkedin.com/in/sanjay-king-399631269/',0,1,0,0),(303,'9159451871',1,1,1,307,'https://github.com/thavasi866788','https://www.linkedin.com/in/thavasi-p-776a19302/',0,1,0,0),(304,'8660811870',2,1,1,308,'https://github.com/umakarthika30','https://www.linkedin.com/in/uma-karthikaeni-3046952a2?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(305,'9677054641',1,1,1,309,'https://github.com/Vishal10122004','https://www.linkedin.com/in/vishalramachandran/',0,1,0,0),(306,'8248929638',2,1,1,310,'https://github.com/keerthana242','https://www.linkedin.com/in/keerthana-g-gurueswaran-0202922a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(307,'9003999095',2,5,1,311,'https://github.com/24905','http://www.linkedin.com/in/p-vignesh-9581862a4',0,1,0,0),(308,'888316458',2,5,1,312,'https://github.com/KARTHIKEYAN-GHOST','https://www.linkedin.com/in/karthikeyan-n-bb81662a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(309,'8148717896',2,2,1,313,'https://github.com/Avinaskumar1505','https://www.linkedin.com/in/avinas-kumar-s-0b2960363/',0,1,0,0),(310,'9976956967',2,1,1,314,'https://github.com/Hemavasagam','https://www.linkedin.com/in/hemavasagam-c-0a4662332/',0,1,0,0),(311,'6381865421',1,6,1,315,'https://github.com/Ruthramoorthi-2216','https://www.linkedin.com/in/ruthramoorthig221622/',0,1,0,0),(312,'9840810634',1,1,1,316,'https://github.com/miyhu6326847','https://www.linkedin.com/in/muthu-crk-b02a55257/',0,1,0,0),(313,'7200027906',2,2,1,317,'https://github.com/sudharsing','https://www.linkedin.com/in/sudharsing-manikandan-54a1ba2a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(314,'9443482718',2,2,1,318,'https://github.com/Harinigomathinayagam','https://www.linkedin.com/in/harini-g-535974291?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(315,'7639319085',1,3,1,319,'https://github.com/Sowmiya0605','https://linkedin.com/in/sowmiya-selvakumar-66a2a9258',0,1,0,0),(316,'9524820088',2,5,1,320,'https://github.com/SRICHANDRAKIRTI','http://www.linkedin.com/in/srichandrakirti-prakasham-9421862a4',0,1,0,0),(317,'8072697518',1,1,1,321,'https://github.com/bhavani-b08','https://www.linkedin.com/in/bhavani-b-3a08ab269',0,1,0,0),(318,'8072697518',1,1,1,322,'https://github.com/bhavani-b08','https://www.linkedin.com/in/bhavani-b-3a08ab269',0,1,0,0),(319,'6381771581',1,1,1,323,'https://github.com/Chandrumuthu','https://www.linkedin.com/in/chandru-muthu-9778a7269/',0,1,0,0),(320,'9976943829',2,1,1,324,'https://github.com/Viswath05','https://www.linkedin.com/me?trk=p_mwlite_feed-secondary_nav',0,1,0,0),(321,'9942559232',2,1,1,325,'https://github.com/Yadhu08','https://www.linkedin.com/in/yadhu-nandhini-a3b1b72a4',0,1,0,0),(322,'8122583267',2,5,1,326,'https://github.com/KanikaSuresh17','https://www.linkedin.com/in/kanika-suresh-bb713b2b9?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(323,'9786421717',1,1,1,327,'https://github.com/Joyal-25','https://www.linkedin.com/in/joyal-blessing-a4b2052a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(324,'9698957621',2,3,1,328,'https://github.com/Abijo2005','https://www.linkedin.com/in/abinaya-s-5371172a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(325,'8429391626',2,1,1,329,'https://github.com/Aniruthra','https://www.linkedin.com/in/aniruthra-prasad-3862882a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(326,'6369818044',2,5,1,330,'https://github.com/DineshES4323','https://www.linkedin.com/in/dinesh-e-s-467928286',0,1,0,0),(327,'8015746057',1,3,1,331,'https://github.com/devasri57','https://www.linkedin.com/in/deva-sri-c-890478273/',0,1,0,0),(328,'9487246916',2,3,1,332,'https://github.com/Keerthanas-s','https://www.linkedin.com/in/keerthana-s-a5b2642a6/',0,1,0,0),(329,'8072045820',2,3,1,333,'https://github.com/23ecc26','https://www.linkedin.com/in/shobiya-a-m-4911832a4',0,1,0,0),(330,'9629416238',2,2,1,334,'https://github.com/sanjay2316','https://www.linkedin.com/in/sanjay-k-a951692a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=ios_app',0,1,0,0),(331,'6380938755',2,2,1,337,'https://github.com/Nivetha2203','https://www.linkedin.com/in/nivetha-k-247527364/',0,1,0,0),(332,'8248162833',2,5,1,338,'https://github.com/sarubala322006','https://www.linkedin.com/in/sarubala-m-7211662a3/',0,1,0,0),(333,'8248162833',2,5,1,339,'https://github.com/sarubala322006','https://www.linkedin.com/in/sarubala-m-7211662a3/',0,1,0,0),(334,'9345739079',2,2,1,340,'https://github.com/Lavanya23556','https://www.linkedin.com/in/lavanya-ramachandran-b191882a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(335,'9345739079',2,2,1,341,'https://github.com/Lavanya23556','https://www.linkedin.com/in/lavanya-ramachandran-b191882a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(336,'8072995219',2,1,1,342,'https://github.com/DEVASREE9942282715','https://www.linkedin.com/in/devasree-r-aa1909348/',0,1,0,0),(337,'6385557576',2,3,1,343,'https://github.com/Yuvaraj11E','https://www.linkedin.com/in/yuvaraj-e-a5a1162a4',0,1,0,0),(338,'8838740798',2,3,1,344,'https://github.com/Krish2617','https://www.linkedin.com/in/krishnaveni-m-b06061299?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(339,'9384276463',2,3,1,345,'https://github.com/Sharofiya777','https://www.linkedin.com/in/sharofiya-p-0081652a3/',0,1,0,0),(340,'9360627904',2,5,1,346,'https://github.com/RajesH123S','https://www.linkedin.com/in/rajesh-selvaraj-4936512a5',0,1,0,0),(341,'9363075355',2,1,1,347,'https://github.com/dashboard','https://www.linkedin.com/in/akshay-kumar-b-30b921321?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(342,'6385231567',1,1,1,348,'https://github.com/Mithunkumarr-tech','https://www.linkedin.com/in/mithunkumar-ranganathan-4b38a6269/',0,1,0,0),(343,'6374583271',2,2,1,349,'https://github.com/VishnuvarmaB','https://www.linkedin.com/in/vishnu-varma-1271b62a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(344,'6384574320',2,5,1,350,'https://github.com/Rammeee','http://www.linkedin.com/in/novramna',0,1,0,0),(345,'6379562337',1,5,1,351,'https://github.com/MonikaV08','http://www.linkedin.com/in/monika-v-39b2052a4',0,1,0,0),(346,'9042518542',2,3,1,352,'https://github.com/07062006','https://www.linkedin.com/in/rithika-shree-a041842a4',0,1,0,0),(347,'9842508409',2,3,1,353,'https://github.com/Savitha122','https://www.linkedin.com/in/savitha-g-9921822a4',0,1,0,0),(348,'9994507466',1,1,1,354,'http://github.com/harikamalesh3','http://linkedin.com/in/hariharan-4a28a7269',0,1,0,0),(349,'7639945301',2,3,1,355,'https://github.com/Suruthika10','https://www.linkedin.com/in/suruthika-nagaraj-a881842a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(350,'9361384420',2,2,1,356,'https://github.com/Saravanan3727','https://www.linkedin.com/in/saravanan-s-5081692a3',0,1,0,0),(351,'6369949234',2,2,1,357,'https://github.com/Jananip07','https://www.linkedin.com/in/janani-p-b001692a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(352,'9677647476',2,1,1,358,'https://github.com/Cowsican','http://www.linkedin.com/in/cowsicans',0,1,0,0),(353,'9361384420',2,2,1,359,'https://github.com/Saravanan3727','https://www.linkedin.com/in/saravanan-s-a1224434a/',0,1,0,0),(354,'8825897648',2,2,1,360,'https://github.com/Anujakumaresan','https://www.linkedin.com/in/anuja-kumaresan-2712912a6',0,1,0,0),(355,'6374284559',1,3,1,361,'https://github.com/Sugunath7/Sugunath7.git','http://www.linkedin.com/in/sugunath-t-a25378258',0,1,0,0),(356,'6385433253',2,2,1,362,'https://github.com/Abi9842','https://www.linkedin.com/in/abi-shek-b6bb3427b',0,1,0,0),(357,'7904900425',2,3,1,363,'https://github.com/MDHARANIDHARAN23','http://www.linkedin.com/in/m-dharani-dharan-17b1682a3',0,1,0,0),(358,'9043791092',2,2,1,364,'https://github.com/THALA-AK','https://www.linkedin.com/in/arun-a-802aa7363/',0,1,0,0),(359,'7010893906',2,3,1,365,'https://github.com/Vivin-Arul-27','https://www.linkedin.com/in/vivin-arul-ia-a241812a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(360,'9578408237',2,3,1,366,'https://github.com/JayaprasanthVS','https://www.linkedin.com/in/jayaprasanth-v-s-7141652a3?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(361,'6379279975',2,3,1,367,'https://github.com/Nivithashree05/Nivitha-shree','https://www.linkedin.com/in/nivi-nivitha-6211192a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(362,'7871193717',2,3,1,368,'https://github.com/SELVASRI1115','https://www.linkedin.com/in/p-selvasri-%E2%9C%A8-8771562a5',0,1,0,0),(363,'7010801168',2,3,1,369,'https://github.com/KASINATHAN3269','https://www.linkedin.com/in/kasi-nathan-6ab1852a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(364,'875483750',3,3,1,370,'https://github.com/Gowri28','https://www.linkedin.com/in/gowri-m-6201172a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(365,'8525917336',2,3,1,371,'https://github.com/SAkshaya-08','https://www.linkedin.com/in/akshaya-sathianarayanan-5461852a4?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(366,'8870980369',2,3,1,372,'https://github.com/Ezhilarasan0369','http://www.linkedin.com/in/ezhilarasan-prabakaran-ezhil0369',0,1,0,0),(367,'9361171950',2,3,1,373,'https://github.com/Dharshini2-5','https://www.linkedin.com/in/dharshini-a-9252732a6?utm_source=share&utm_campaign=share_via&utm_content=profile&utm_medium=android_app',0,1,0,0),(368,'8489345637',1,1,1,336,'NA','NA',0,1,0,0);
/*!40000 ALTER TABLE `track_profile` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_solved_problem`
--

DROP TABLE IF EXISTS `track_solved_problem`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_solved_problem` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `problem_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  `date` date DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `track_solved_problem_problem_id_219d0fee_fk_track_problem_id` (`problem_id`),
  KEY `track_solved_problem_user_id_8069d526_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_solved_problem_problem_id_219d0fee_fk_track_problem_id` FOREIGN KEY (`problem_id`) REFERENCES `track_problem` (`id`),
  CONSTRAINT `track_solved_problem_user_id_8069d526_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=35381 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_solved_problem`
--

LOCK TABLES `track_solved_problem` WRITE;
/*!40000 ALTER TABLE `track_solved_problem` DISABLE KEYS */;
INSERT INTO `track_solved_problem` VALUES (949,412,8,NULL),(950,125,8,NULL),(951,9,8,NULL),(952,1,8,NULL),(953,16595,12,NULL),(954,16579,12,NULL),(955,16596,12,NULL),(956,16560,12,NULL),(957,16556,12,NULL),(958,16545,12,NULL),(959,16574,12,NULL),(960,16589,12,NULL),(961,16550,12,NULL),(962,3392,12,NULL),(963,3393,12,NULL),(964,3364,12,NULL),(965,3355,12,NULL),(966,3412,12,NULL),(967,3345,12,NULL),(968,3330,12,NULL),(969,3349,12,NULL),(970,3300,12,NULL),(971,3314,12,NULL),(972,3304,12,NULL),(973,3285,12,NULL),(974,3289,12,NULL),(975,3309,12,NULL),(976,3270,12,NULL),(977,3280,12,NULL),(978,3274,12,NULL),(979,3258,12,NULL),(980,3295,12,NULL),(981,3271,12,NULL),(982,3232,12,NULL),(983,3190,12,NULL),(984,3194,12,NULL),(985,3227,12,NULL),(986,3162,12,NULL),(987,3151,12,NULL),(988,3158,12,NULL),(989,3184,12,NULL),(990,3159,12,NULL),(991,3120,12,NULL),(992,3136,12,NULL),(993,3110,12,NULL),(994,3115,12,NULL),(995,3099,12,NULL),(996,3100,12,NULL),(997,3065,12,NULL),(998,3028,12,NULL),(999,3042,12,NULL),(1000,2965,12,NULL),(1001,2974,12,NULL),(1002,2942,12,NULL),(1003,2894,12,NULL),(1004,2859,12,NULL),(1005,2828,12,NULL),(1006,2824,12,NULL),(1007,2807,12,NULL),(1008,2785,12,NULL),(1009,2810,12,NULL),(1010,2798,12,NULL),(1011,2761,12,NULL),(1012,2769,12,NULL),(1013,2696,12,NULL),(1014,2657,12,NULL),(1015,2658,12,NULL),(1016,2652,12,NULL),(1017,2610,12,NULL),(1018,2574,12,NULL),(1019,2570,12,NULL),(1020,2559,12,NULL),(1021,2579,12,NULL),(1022,2554,12,NULL),(1023,2545,12,NULL),(1024,2535,12,NULL),(1025,2529,12,NULL),(1026,2523,12,NULL),(1027,2520,12,NULL),(1028,2491,12,NULL),(1029,2469,12,NULL),(1030,2461,12,NULL),(1031,2460,12,NULL),(1032,2433,12,NULL),(1033,2427,12,NULL),(1034,2419,12,NULL),(1035,2418,12,NULL),(1036,2410,12,NULL),(1037,2413,12,NULL),(1038,2396,12,NULL),(1039,2381,12,NULL),(1040,2379,12,NULL),(1041,2367,12,NULL),(1042,2360,12,NULL),(1043,2235,12,NULL),(1044,2284,12,NULL),(1045,2270,12,NULL),(1046,2255,12,NULL),(1047,2220,12,NULL),(1048,2185,12,NULL),(1049,2149,12,NULL),(1050,2161,12,NULL),(1051,2130,12,NULL),(1052,2109,12,NULL),(1053,2108,12,NULL),(1054,2106,12,NULL),(1055,2114,12,NULL),(1056,2095,12,NULL),(1057,2078,12,NULL),(1058,2044,12,NULL),(1059,2011,12,NULL),(1060,2000,12,NULL),(1061,2006,12,NULL),(1062,1980,12,NULL),(1063,1991,12,NULL),(1064,1945,12,NULL),(1065,1930,12,NULL),(1066,1929,12,NULL),(1067,1920,12,NULL),(1068,1910,12,NULL),(1069,1894,12,NULL),(1070,1863,12,NULL),(1071,1876,12,NULL),(1072,1816,12,NULL),(1073,1800,12,NULL),(1074,1791,12,NULL),(1075,1773,12,NULL),(1076,1769,12,NULL),(1077,1768,12,NULL),(1078,1765,12,NULL),(1079,1749,12,NULL),(1080,1748,12,NULL),(1081,1720,12,NULL),(1082,1688,12,NULL),(1083,1680,12,NULL),(1084,1678,12,NULL),(1085,1672,12,NULL),(1086,1684,12,NULL),(1087,1662,12,NULL),(1088,1647,12,NULL),(1089,1641,12,NULL),(1090,1561,12,NULL),(1091,1572,12,NULL),(1092,1545,12,NULL),(1093,1528,12,NULL),(1094,1518,12,NULL),(1095,1512,12,NULL),(1096,1487,12,NULL),(1097,1486,12,NULL),(1098,1480,12,NULL),(1099,1470,12,NULL),(1100,1455,12,NULL),(1101,1422,12,NULL),(1102,1431,12,NULL),(1103,1408,12,NULL),(1104,1365,12,NULL),(1105,1351,12,NULL),(1106,1358,12,NULL),(1107,1345,12,NULL),(1108,1343,12,NULL),(1109,1342,12,NULL),(1110,1306,12,NULL),(1111,1296,12,NULL),(1112,1290,12,NULL),(1113,1282,12,NULL),(1114,1281,12,NULL),(1115,1254,12,NULL),(1116,1227,12,NULL),(1117,2225,12,NULL),(1118,1221,12,NULL),(1119,1207,12,NULL),(1120,2079,12,NULL),(1121,1143,12,NULL),(1122,1289,12,NULL),(1123,1109,12,NULL),(1124,1108,12,NULL),(1125,1094,12,NULL),(1126,1091,12,NULL),(1127,1038,12,NULL),(1128,1025,12,NULL),(1129,1020,12,NULL),(1130,1014,12,NULL),(1131,1011,12,NULL),(1132,1004,12,NULL),(1133,994,12,NULL),(1134,988,12,NULL),(1135,980,12,NULL),(1136,978,12,NULL),(1137,977,12,NULL),(1138,509,12,NULL),(1139,962,12,NULL),(1140,948,12,NULL),(1141,931,12,NULL),(1142,930,12,NULL),(1143,921,12,NULL),(1144,917,12,NULL),(1145,916,12,NULL),(1146,904,12,NULL),(1147,885,12,NULL),(1148,884,12,NULL),(1149,881,12,NULL),(1150,877,12,NULL),(1151,876,12,NULL),(1152,875,12,NULL),(1153,852,12,NULL),(1154,848,12,NULL),(1155,846,12,NULL),(1156,841,12,NULL),(1157,840,12,NULL),(1158,832,12,NULL),(1159,827,12,NULL),(1160,807,12,NULL),(1161,802,12,NULL),(1162,797,12,NULL),(1163,785,12,NULL),(1164,704,12,NULL),(1165,771,12,NULL),(1166,766,12,NULL),(1167,429,12,NULL),(1168,746,12,NULL),(1169,709,12,NULL),(1170,733,12,NULL),(1171,724,12,NULL),(1172,713,12,NULL),(1173,695,12,NULL),(1174,692,12,NULL),(1175,643,12,NULL),(1176,561,12,NULL),(1177,560,12,NULL),(1178,557,12,NULL),(1179,547,12,NULL),(1180,543,12,NULL),(1181,542,12,NULL),(1182,540,12,NULL),(1183,538,12,NULL),(1184,1721,12,NULL),(1185,520,12,NULL),(1186,494,12,NULL),(1187,476,12,NULL),(1188,461,12,NULL),(1189,455,12,NULL),(1190,453,12,NULL),(1191,451,12,NULL),(1192,443,12,NULL),(1193,442,12,NULL),(1194,441,12,NULL),(1195,419,12,NULL),(1196,416,12,NULL),(1197,410,12,NULL),(1198,397,12,NULL),(1199,389,12,NULL),(1200,374,12,NULL),(1201,367,12,NULL),(1202,347,12,NULL),(1203,344,12,NULL),(1204,342,12,NULL),(1205,338,12,NULL),(1206,326,12,NULL),(1207,322,12,NULL),(1208,319,12,NULL),(1209,300,12,NULL),(1210,287,12,NULL),(1211,283,12,NULL),(1212,274,12,NULL),(1213,268,12,NULL),(1214,260,12,NULL),(1215,258,12,NULL),(1216,240,12,NULL),(1217,239,12,NULL),(1218,238,12,NULL),(1219,237,12,NULL),(1220,231,12,NULL),(1221,229,12,NULL),(1222,219,12,NULL),(1223,217,12,NULL),(1224,216,12,NULL),(1225,215,12,NULL),(1226,213,12,NULL),(1227,210,12,NULL),(1228,209,12,NULL),(1229,207,12,NULL),(1230,206,12,NULL),(1231,204,12,NULL),(1232,200,12,NULL),(1233,198,12,NULL),(1234,191,12,NULL),(1235,190,12,NULL),(1236,189,12,NULL),(1237,172,12,NULL),(1238,169,12,NULL),(1239,167,12,NULL),(1240,164,12,NULL),(1241,162,12,NULL),(1242,154,12,NULL),(1243,153,12,NULL),(1244,151,12,NULL),(1245,150,12,NULL),(1246,145,12,NULL),(1247,144,12,NULL),(1248,141,12,NULL),(1249,137,12,NULL),(1250,136,12,NULL),(1251,135,12,NULL),(1252,134,12,NULL),(1253,131,12,NULL),(1254,130,12,NULL),(1255,129,12,NULL),(1256,128,12,NULL),(1257,124,12,NULL),(1258,122,12,NULL),(1259,121,12,NULL),(1260,120,12,NULL),(1261,119,12,NULL),(1262,118,12,NULL),(1263,112,12,NULL),(1264,110,12,NULL),(1265,107,12,NULL),(1266,104,12,NULL),(1267,103,12,NULL),(1268,102,12,NULL),(1269,100,12,NULL),(1270,94,12,NULL),(1271,90,12,NULL),(1272,88,12,NULL),(1273,83,12,NULL),(1274,82,12,NULL),(1275,81,12,NULL),(1276,80,12,NULL),(1277,79,12,NULL),(1278,78,12,NULL),(1279,77,12,NULL),(1280,75,12,NULL),(1281,74,12,NULL),(1282,73,12,NULL),(1283,72,12,NULL),(1284,70,12,NULL),(1285,69,12,NULL),(1286,66,12,NULL),(1287,64,12,NULL),(1288,63,12,NULL),(1289,62,12,NULL),(1290,61,12,NULL),(1291,59,12,NULL),(1292,58,12,NULL),(1293,57,12,NULL),(1294,56,12,NULL),(1295,55,12,NULL),(1296,54,12,NULL),(1297,53,12,NULL),(1298,50,12,NULL),(1299,49,12,NULL),(1300,48,12,NULL),(1301,47,12,NULL),(1302,46,12,NULL),(1303,45,12,NULL),(1304,43,12,NULL),(1305,42,12,NULL),(1306,41,12,NULL),(1307,40,12,NULL),(1308,39,12,NULL),(1309,37,12,NULL),(1310,36,12,NULL),(1311,35,12,NULL),(1312,34,12,NULL),(1313,33,12,NULL),(1314,31,12,NULL),(1315,27,12,NULL),(1316,26,12,NULL),(1317,24,12,NULL),(1318,22,12,NULL),(1319,21,12,NULL),(1320,20,12,NULL),(1321,19,12,NULL),(1322,18,12,NULL),(1323,17,12,NULL),(1324,16,12,NULL),(1325,15,12,NULL),(1326,14,12,NULL),(1327,12,12,NULL),(1328,11,12,NULL),(1329,9,12,NULL),(1330,7,12,NULL),(1331,5,12,NULL),(1332,4,12,NULL),(1333,3,12,NULL),(1334,2,12,NULL),(1335,1,12,NULL),(1336,3436,12,NULL),(1337,3531,12,NULL),(1338,3556,12,NULL),(1339,3585,12,NULL),(1340,3610,12,NULL),(1341,3486,12,NULL),(1342,3593,12,NULL),(1343,3479,12,NULL),(1344,3418,12,NULL),(1345,3416,12,NULL),(1346,3837,12,NULL),(1347,3437,12,NULL),(1348,3760,12,NULL),(1349,3578,12,NULL),(1350,3440,12,NULL),(1351,3737,12,NULL),(1352,3795,12,NULL),(1353,3543,12,NULL),(1354,3879,12,NULL),(1355,3647,12,NULL),(1356,3759,12,NULL),(1357,3767,12,NULL),(1358,4773,12,NULL),(1359,3690,12,NULL),(1360,4507,12,NULL),(1361,3613,12,NULL),(1362,3514,12,NULL),(1363,4073,12,NULL),(1364,3813,12,NULL),(1365,3668,12,NULL),(1366,4159,12,NULL),(1367,4224,12,NULL),(1368,3776,12,NULL),(1369,3639,12,NULL),(1370,3730,12,NULL),(1371,3766,12,NULL),(1372,4401,12,NULL),(1373,3640,12,NULL),(1374,4769,12,NULL),(1375,3700,12,NULL),(1376,3947,12,NULL),(1377,4045,12,NULL),(1378,4484,12,NULL),(1379,3664,12,NULL),(1380,3802,12,NULL),(1381,3493,12,NULL),(1382,3444,12,NULL),(1383,3525,12,NULL),(1384,3494,12,NULL),(1385,3417,12,NULL),(1386,3419,12,NULL),(1387,3473,12,NULL),(1388,5375,12,NULL),(1389,3821,12,NULL),(1390,4443,12,NULL),(1391,4210,12,NULL),(1392,4587,12,NULL),(1393,4582,12,NULL),(1394,4620,12,NULL),(1395,4588,12,NULL),(1396,3729,12,NULL),(1397,3435,12,NULL),(1398,15085,12,NULL),(1399,10487,12,NULL),(1400,9872,12,NULL),(1401,13547,12,NULL),(1402,16634,13,NULL),(1403,16595,13,NULL),(1404,16579,13,NULL),(1405,16560,13,NULL),(1406,16556,13,NULL),(1407,16545,13,NULL),(1408,16574,13,NULL),(1409,16645,13,NULL),(1410,16589,13,NULL),(1411,16550,13,NULL),(1412,3411,13,NULL),(1413,3392,13,NULL),(1414,3355,13,NULL),(1415,3345,13,NULL),(1416,3330,13,NULL),(1417,3300,13,NULL),(1418,3304,13,NULL),(1419,3334,13,NULL),(1420,3285,13,NULL),(1421,3289,13,NULL),(1422,3280,13,NULL),(1423,3271,13,NULL),(1424,3282,13,NULL),(1425,3254,13,NULL),(1426,3190,13,NULL),(1427,3163,13,NULL),(1428,3162,13,NULL),(1429,3151,13,NULL),(1430,3158,13,NULL),(1431,3146,13,NULL),(1432,3110,13,NULL),(1433,3046,13,NULL),(1434,3028,13,NULL),(1435,3005,13,NULL),(1436,2974,13,NULL),(1437,2956,13,NULL),(1438,2928,13,NULL),(1439,2938,13,NULL),(1440,2942,13,NULL),(1441,2932,13,NULL),(1442,2914,13,NULL),(1443,2859,13,NULL),(1444,2869,13,NULL),(1445,2848,13,NULL),(1446,2824,13,NULL),(1447,2807,13,NULL),(1448,2798,13,NULL),(1449,2658,13,NULL),(1450,2574,13,NULL),(1451,2559,13,NULL),(1452,2595,13,NULL),(1453,2587,13,NULL),(1454,2579,13,NULL),(1455,2540,13,NULL),(1456,2530,13,NULL),(1457,2500,13,NULL),(1458,2491,13,NULL),(1459,2485,13,NULL),(1460,2461,13,NULL),(1461,2433,13,NULL),(1462,2418,13,NULL),(1463,2342,13,NULL),(1464,2389,13,NULL),(1465,2374,13,NULL),(1466,2352,13,NULL),(1467,2351,13,NULL),(1468,2299,13,NULL),(1469,2270,13,NULL),(1470,2275,13,NULL),(1471,2260,13,NULL),(1472,2248,13,NULL),(1473,2220,13,NULL),(1474,2208,13,NULL),(1475,2206,13,NULL),(1476,2129,13,NULL),(1477,2109,13,NULL),(1478,2108,13,NULL),(1479,2114,13,NULL),(1480,2095,13,NULL),(1481,2044,13,NULL),(1482,2011,13,NULL),(1483,2022,13,NULL),(1484,2000,13,NULL),(1485,1991,13,NULL),(1486,1962,13,NULL),(1487,1946,13,NULL),(1488,1945,13,NULL),(1489,1929,13,NULL),(1490,1920,13,NULL),(1491,1926,13,NULL),(1492,1903,13,NULL),(1493,1910,13,NULL),(1494,1893,13,NULL),(1495,1863,13,NULL),(1496,1876,13,NULL),(1497,1854,13,NULL),(1498,1832,13,NULL),(1499,1816,13,NULL),(1500,1829,13,NULL),(1501,1800,13,NULL),(1502,1790,13,NULL),(1503,1769,13,NULL),(1504,1768,13,NULL),(1505,1765,13,NULL),(1506,1748,13,NULL),(1507,1720,13,NULL),(1508,1732,13,NULL),(1509,1679,13,NULL),(1510,1678,13,NULL),(1511,1684,13,NULL),(1512,1662,13,NULL),(1513,1647,13,NULL),(1514,1588,13,NULL),(1515,1572,13,NULL),(1516,1528,13,NULL),(1517,1539,13,NULL),(1518,1512,13,NULL),(1519,1486,13,NULL),(1520,1480,13,NULL),(1521,1464,13,NULL),(1522,1455,13,NULL),(1523,1460,13,NULL),(1524,1436,13,NULL),(1525,1423,13,NULL),(1526,1422,13,NULL),(1527,1408,13,NULL),(1528,1414,13,NULL),(1529,1413,13,NULL),(1530,1380,13,NULL),(1531,1365,13,NULL),(1532,1351,13,NULL),(1533,1346,13,NULL),(1534,1356,13,NULL),(1535,1342,13,NULL),(1536,2269,13,NULL),(1537,2215,13,NULL),(1538,1227,13,NULL),(1539,1221,13,NULL),(1540,2191,13,NULL),(1541,1219,13,NULL),(1542,1207,13,NULL),(1543,1189,13,NULL),(1544,1109,13,NULL),(1545,1108,13,NULL),(1546,1094,13,NULL),(1547,1091,13,NULL),(1548,1089,13,NULL),(1549,1074,13,NULL),(1550,1046,13,NULL),(1551,1020,13,NULL),(1552,1011,13,NULL),(1553,997,13,NULL),(1554,994,13,NULL),(1555,980,13,NULL),(1556,977,13,NULL),(1557,976,13,NULL),(1558,974,13,NULL),(1559,509,13,NULL),(1560,961,13,NULL),(1561,934,13,NULL),(1562,930,13,NULL),(1563,917,13,NULL),(1564,884,13,NULL),(1565,881,13,NULL),(1566,877,13,NULL),(1567,876,13,NULL),(1568,875,13,NULL),(1569,867,13,NULL),(1570,860,13,NULL),(1571,848,13,NULL),(1572,841,13,NULL),(1573,832,13,NULL),(1574,827,13,NULL),(1575,802,13,NULL),(1576,705,13,NULL),(1577,797,13,NULL),(1578,796,13,NULL),(1579,785,13,NULL),(1580,704,13,NULL),(1581,771,13,NULL),(1582,762,13,NULL),(1583,747,13,NULL),(1584,709,13,NULL),(1585,733,13,NULL),(1586,724,13,NULL),(1587,713,13,NULL),(1588,695,13,NULL),(1589,693,13,NULL),(1590,670,13,NULL),(1591,643,13,NULL),(1592,628,13,NULL),(1593,599,13,NULL),(1594,575,13,NULL),(1595,566,13,NULL),(1596,561,13,NULL),(1597,560,13,NULL),(1598,557,13,NULL),(1599,547,13,NULL),(1600,542,13,NULL),(1601,541,13,NULL),(1602,507,13,NULL),(1603,500,13,NULL),(1604,498,13,NULL),(1605,485,13,NULL),(1606,477,13,NULL),(1607,463,13,NULL),(1608,461,13,NULL),(1609,455,13,NULL),(1610,448,13,NULL),(1611,441,13,NULL),(1612,434,13,NULL),(1613,414,13,NULL),(1614,412,13,NULL),(1615,409,13,NULL),(1616,397,13,NULL),(1617,392,13,NULL),(1618,389,13,NULL),(1619,387,13,NULL),(1620,386,13,NULL),(1621,383,13,NULL),(1622,378,13,NULL),(1623,374,13,NULL),(1624,367,13,NULL),(1625,363,13,NULL),(1626,350,13,NULL),(1627,349,13,NULL),(1628,345,13,NULL),(1629,344,13,NULL),(1630,342,13,NULL),(1631,338,13,NULL),(1632,326,13,NULL),(1633,292,13,NULL),(1634,290,13,NULL),(1635,283,13,NULL),(1636,275,13,NULL),(1637,268,13,NULL),(1638,263,13,NULL),(1639,260,13,NULL),(1640,258,13,NULL),(1641,242,13,NULL),(1642,238,13,NULL),(1643,231,13,NULL),(1644,219,13,NULL),(1645,217,13,NULL),(1646,215,13,NULL),(1647,210,13,NULL),(1648,209,13,NULL),(1649,207,13,NULL),(1650,206,13,NULL),(1651,202,13,NULL),(1652,200,13,NULL),(1653,198,13,NULL),(1654,191,13,NULL),(1655,190,13,NULL),(1656,189,13,NULL),(1657,169,13,NULL),(1658,153,13,NULL),(1659,151,13,NULL),(1660,141,13,NULL),(1661,136,13,NULL),(1662,130,13,NULL),(1663,127,13,NULL),(1664,125,13,NULL),(1665,122,13,NULL),(1666,121,13,NULL),(1667,120,13,NULL),(1668,119,13,NULL),(1669,118,13,NULL),(1670,90,13,NULL),(1671,88,13,NULL),(1672,78,13,NULL),(1673,77,13,NULL),(1674,75,13,NULL),(1675,74,13,NULL),(1676,73,13,NULL),(1677,70,13,NULL),(1678,67,13,NULL),(1679,66,13,NULL),(1680,64,13,NULL),(1681,63,13,NULL),(1682,62,13,NULL),(1683,59,13,NULL),(1684,58,13,NULL),(1685,55,13,NULL),(1686,54,13,NULL),(1687,53,13,NULL),(1688,51,13,NULL),(1689,49,13,NULL),(1690,48,13,NULL),(1691,46,13,NULL),(1692,43,13,NULL),(1693,41,13,NULL),(1694,40,13,NULL),(1695,39,13,NULL),(1696,37,13,NULL),(1697,36,13,NULL),(1698,35,13,NULL),(1699,34,13,NULL),(1700,28,13,NULL),(1701,27,13,NULL),(1702,26,13,NULL),(1703,20,13,NULL),(1704,15,13,NULL),(1705,11,13,NULL),(1706,9,13,NULL),(1707,7,13,NULL),(1708,5,13,NULL),(1709,4,13,NULL),(1710,3,13,NULL),(1711,1,13,NULL),(1712,3442,13,NULL),(1713,3436,13,NULL),(1714,3531,13,NULL),(1715,3556,13,NULL),(1716,3438,13,NULL),(1717,3585,13,NULL),(1718,3471,13,NULL),(1719,3486,13,NULL),(1720,3593,13,NULL),(1721,3416,13,NULL),(1722,3837,13,NULL),(1723,4000,13,NULL),(1724,3676,13,NULL),(1725,3879,13,NULL),(1726,3647,13,NULL),(1727,3960,13,NULL),(1728,3423,13,NULL),(1729,3534,13,NULL),(1730,4507,13,NULL),(1731,4215,13,NULL),(1732,4073,13,NULL),(1733,3793,13,NULL),(1734,3733,13,NULL),(1735,4646,13,NULL),(1736,3813,13,NULL),(1737,4089,13,NULL),(1738,4159,13,NULL),(1739,3871,13,NULL),(1740,3776,13,NULL),(1741,3730,13,NULL),(1742,4769,13,NULL),(1743,3700,13,NULL),(1744,3956,13,NULL),(1745,3877,13,NULL),(1746,4045,13,NULL),(1747,4484,13,NULL),(1748,3664,13,NULL),(1749,4562,13,NULL),(1750,3484,13,NULL),(1751,3454,13,NULL),(1752,3469,13,NULL),(1753,3521,13,NULL),(1754,3493,13,NULL),(1755,3444,13,NULL),(1756,3431,13,NULL),(1757,3643,13,NULL),(1758,3559,13,NULL),(1759,3914,13,NULL),(1760,3456,13,NULL),(1761,3801,13,NULL),(1762,3450,13,NULL),(1763,3463,13,NULL),(1764,3417,13,NULL),(1765,3750,13,NULL),(1766,3453,13,NULL),(1767,3626,13,NULL),(1768,3528,13,NULL),(1769,3696,13,NULL),(1770,3419,13,NULL),(1771,3510,13,NULL),(1772,4397,13,NULL),(1773,4920,13,NULL),(1774,3894,13,NULL),(1775,3881,13,NULL),(1776,3621,13,NULL),(1777,3472,13,NULL),(1778,3901,13,NULL),(1779,5256,13,NULL),(1780,5768,13,NULL),(1781,4443,13,NULL),(1782,4210,13,NULL),(1783,4161,13,NULL),(1784,4587,13,NULL),(1785,3674,13,NULL),(1786,4582,13,NULL),(1787,4214,13,NULL),(1788,3455,13,NULL),(1789,3446,13,NULL),(1790,5472,13,NULL),(1791,3457,13,NULL),(1792,3483,13,NULL),(1793,3830,13,NULL),(1794,4028,13,NULL),(1795,3762,13,NULL),(1796,5009,13,NULL),(1797,5838,13,NULL),(1798,4649,13,NULL),(1799,5122,13,NULL),(1800,3695,13,NULL),(1801,4032,13,NULL),(1802,4767,13,NULL),(1803,3833,13,NULL),(1804,4074,13,NULL),(1805,4170,13,NULL),(1806,4217,13,NULL),(1807,5043,13,NULL),(1808,3948,13,NULL),(1809,4383,13,NULL),(1810,9807,13,NULL),(1811,15085,13,NULL),(1812,10487,13,NULL),(1813,13566,13,NULL),(1814,9872,13,NULL),(1815,12269,13,NULL),(1816,6727,13,NULL),(1817,3771,14,NULL),(1818,3740,14,NULL),(1819,3618,14,NULL),(1820,3581,14,NULL),(1821,3830,14,NULL),(1822,3762,14,NULL),(1823,3833,14,NULL),(1824,3482,14,NULL),(1825,3436,14,NULL),(1826,3531,14,NULL),(1827,3556,14,NULL),(1828,3585,14,NULL),(1829,3660,14,NULL),(1830,3610,14,NULL),(1831,3593,14,NULL),(1832,3479,14,NULL),(1833,3418,14,NULL),(1834,3416,14,NULL),(1835,3837,14,NULL),(1836,3420,14,NULL),(1837,3879,14,NULL),(1838,3647,14,NULL),(1839,3759,14,NULL),(1840,3613,14,NULL),(1841,5962,14,NULL),(1842,3793,14,NULL),(1843,3733,14,NULL),(1844,3441,14,NULL),(1845,4646,14,NULL),(1846,3776,14,NULL),(1847,3639,14,NULL),(1848,3730,14,NULL),(1849,3766,14,NULL),(1850,3640,14,NULL),(1851,4769,14,NULL),(1852,3700,14,NULL),(1853,3877,14,NULL),(1854,3664,14,NULL),(1855,16715,14,NULL),(1856,3469,14,NULL),(1857,3444,14,NULL),(1858,3421,14,NULL),(1859,3450,14,NULL),(1860,3417,14,NULL),(1861,3473,14,NULL),(1862,3465,14,NULL),(1863,4443,14,NULL),(1864,4210,14,NULL),(1865,4587,14,NULL),(1866,4582,14,NULL),(1867,4620,14,NULL),(1868,4588,14,NULL),(1869,15085,14,NULL),(1870,10487,14,NULL),(1871,16610,17,NULL),(1872,16579,17,NULL),(1873,16560,17,NULL),(1874,16556,17,NULL),(1875,16545,17,NULL),(1876,16574,17,NULL),(1877,16550,17,NULL),(1878,3411,17,NULL),(1879,3340,17,NULL),(1880,3345,17,NULL),(1881,3300,17,NULL),(1882,3285,17,NULL),(1883,3289,17,NULL),(1884,3280,17,NULL),(1885,3258,17,NULL),(1886,3295,17,NULL),(1887,3290,17,NULL),(1888,3217,17,NULL),(1889,3191,17,NULL),(1890,3163,17,NULL),(1891,3151,17,NULL),(1892,3133,17,NULL),(1893,3110,17,NULL),(1894,3105,17,NULL),(1895,3042,17,NULL),(1896,3011,17,NULL),(1897,2971,17,NULL),(1898,2938,17,NULL),(1899,2914,17,NULL),(1900,2870,17,NULL),(1901,2807,17,NULL),(1902,2810,17,NULL),(1903,2706,17,NULL),(1904,2610,17,NULL),(1905,2570,17,NULL),(1906,2537,17,NULL),(1907,2501,17,NULL),(1908,2460,17,NULL),(1909,2419,17,NULL),(1910,2416,17,NULL),(1911,2405,17,NULL),(1912,2401,17,NULL),(1913,2373,17,NULL),(1914,2364,17,NULL),(1915,2348,17,NULL),(1916,2326,17,NULL),(1917,2235,17,NULL),(1918,2270,17,NULL),(1919,2275,17,NULL),(1920,2264,17,NULL),(1921,2251,17,NULL),(1922,2248,17,NULL),(1923,2220,17,NULL),(1924,2206,17,NULL),(1925,2149,17,NULL),(1926,2161,17,NULL),(1927,2125,17,NULL),(1928,2108,17,NULL),(1929,2106,17,NULL),(1930,2073,17,NULL),(1931,2057,17,NULL),(1932,2027,17,NULL),(1933,2038,17,NULL),(1934,1984,17,NULL),(1935,1980,17,NULL),(1936,1963,17,NULL),(1937,1968,17,NULL),(1938,1929,17,NULL),(1939,1922,17,NULL),(1940,1901,17,NULL),(1941,1913,17,NULL),(1942,1905,17,NULL),(1943,1903,17,NULL),(1944,1899,17,NULL),(1945,1849,17,NULL),(1946,1838,17,NULL),(1947,1844,17,NULL),(1948,1822,17,NULL),(1949,1829,17,NULL),(1950,1800,17,NULL),(1951,1790,17,NULL),(1952,1769,17,NULL),(1953,1768,17,NULL),(1954,1758,17,NULL),(1955,1752,17,NULL),(1956,1765,17,NULL),(1957,1750,17,NULL),(1958,1700,17,NULL),(1959,1679,17,NULL),(1960,1685,17,NULL),(1961,1684,17,NULL),(1962,1662,17,NULL),(1963,1647,17,NULL),(1964,1652,17,NULL),(1965,1624,17,NULL),(1966,1636,17,NULL),(1967,1614,17,NULL),(1968,1608,17,NULL),(1969,1603,17,NULL),(1970,1572,17,NULL),(1971,1552,17,NULL),(1972,1544,17,NULL),(1973,1539,17,NULL),(1974,1512,17,NULL),(1975,1523,17,NULL),(1976,1498,17,NULL),(1977,1497,17,NULL),(1978,1496,17,NULL),(1979,1482,17,NULL),(1980,1461,17,NULL),(1981,1436,17,NULL),(1982,1423,17,NULL),(1983,1422,17,NULL),(1984,1431,17,NULL),(1985,1408,17,NULL),(1986,1352,17,NULL),(1987,1351,17,NULL),(1988,1371,17,NULL),(1989,1358,17,NULL),(1990,1283,17,NULL),(1991,2215,17,NULL),(1992,1254,17,NULL),(1993,1249,17,NULL),(1994,1248,17,NULL),(1995,1726,17,NULL),(1996,1239,17,NULL),(1997,1514,17,NULL),(1998,1189,17,NULL),(1999,1331,17,NULL),(2000,1299,17,NULL),(2001,1291,17,NULL),(2002,1109,17,NULL),(2003,1094,17,NULL),(2004,1071,17,NULL),(2005,1160,17,NULL),(2006,1029,17,NULL),(2007,1021,17,NULL),(2008,1020,17,NULL),(2009,1011,17,NULL),(2010,1009,17,NULL),(2011,1004,17,NULL),(2012,997,17,NULL),(2013,994,17,NULL),(2014,981,17,NULL),(2015,978,17,NULL),(2016,977,17,NULL),(2017,509,17,NULL),(2018,953,17,NULL),(2019,948,17,NULL),(2020,947,17,NULL),(2021,934,17,NULL),(2022,930,17,NULL),(2023,929,17,NULL),(2024,921,17,NULL),(2025,912,17,NULL),(2026,905,17,NULL),(2027,896,17,NULL),(2028,884,17,NULL),(2029,881,17,NULL),(2030,875,17,NULL),(2031,874,17,NULL),(2032,867,17,NULL),(2033,860,17,NULL),(2034,853,17,NULL),(2035,848,17,NULL),(2036,846,17,NULL),(2037,844,17,NULL),(2038,706,17,NULL),(2039,705,17,NULL),(2040,796,17,NULL),(2041,785,17,NULL),(2042,779,17,NULL),(2043,704,17,NULL),(2044,701,17,NULL),(2045,746,17,NULL),(2046,744,17,NULL),(2047,739,17,NULL),(2048,733,17,NULL),(2049,729,17,NULL),(2050,725,17,NULL),(2051,724,17,NULL),(2052,719,17,NULL),(2053,698,17,NULL),(2054,695,17,NULL),(2055,680,17,NULL),(2056,678,17,NULL),(2057,672,17,NULL),(2058,670,17,NULL),(2059,665,17,NULL),(2060,664,17,NULL),(2061,658,17,NULL),(2062,650,17,NULL),(2063,645,17,NULL),(2064,643,17,NULL),(2065,605,17,NULL),(2066,592,17,NULL),(2067,567,17,NULL),(2068,564,17,NULL),(2069,561,17,NULL),(2070,560,17,NULL),(2071,557,17,NULL),(2072,554,17,NULL),(2073,547,17,NULL),(2074,542,17,NULL),(2075,540,17,NULL),(2076,539,17,NULL),(2077,525,17,NULL),(2078,523,17,NULL),(2079,496,17,NULL),(2080,493,17,NULL),(2081,485,17,NULL),(2082,476,17,NULL),(2083,463,17,NULL),(2084,455,17,NULL),(2085,451,17,NULL),(2086,448,17,NULL),(2087,442,17,NULL),(2088,441,17,NULL),(2089,440,17,NULL),(2090,438,17,NULL),(2091,435,17,NULL),(2092,424,17,NULL),(2093,417,17,NULL),(2094,416,17,NULL),(2095,414,17,NULL),(2096,410,17,NULL),(2097,392,17,NULL),(2098,389,17,NULL),(2099,387,17,NULL),(2100,386,17,NULL),(2101,380,17,NULL),(2102,374,17,NULL),(2103,371,17,NULL),(2104,367,17,NULL),(2105,363,17,NULL),(2106,349,17,NULL),(2107,347,17,NULL),(2108,345,17,NULL),(2109,344,17,NULL),(2110,342,17,NULL),(2111,319,17,NULL),(2112,304,17,NULL),(2113,303,17,NULL),(2114,300,17,NULL),(2115,290,17,NULL),(2116,287,17,NULL),(2117,283,17,NULL),(2118,282,17,NULL),(2119,268,17,NULL),(2120,258,17,NULL),(2121,242,17,NULL),(2122,241,17,NULL),(2123,240,17,NULL),(2124,239,17,NULL),(2125,238,17,NULL),(2126,231,17,NULL),(2127,229,17,NULL),(2128,225,17,NULL),(2129,219,17,NULL),(2130,217,17,NULL),(2131,215,17,NULL),(2132,214,17,NULL),(2133,212,17,NULL),(2134,210,17,NULL),(2135,209,17,NULL),(2136,207,17,NULL),(2137,205,17,NULL),(2138,204,17,NULL),(2139,202,17,NULL),(2140,200,17,NULL),(2141,191,17,NULL),(2142,189,17,NULL),(2143,179,17,NULL),(2144,169,17,NULL),(2145,168,17,NULL),(2146,167,17,NULL),(2147,162,17,NULL),(2148,160,17,NULL),(2149,155,17,NULL),(2150,154,17,NULL),(2151,153,17,NULL),(2152,152,17,NULL),(2153,151,17,NULL),(2154,150,17,NULL),(2155,145,17,NULL),(2156,144,17,NULL),(2157,141,17,NULL),(2158,139,17,NULL),(2159,136,17,NULL),(2160,135,17,NULL),(2161,134,17,NULL),(2162,133,17,NULL),(2163,131,17,NULL),(2164,130,17,NULL),(2165,128,17,NULL),(2166,125,17,NULL),(2167,122,17,NULL),(2168,121,17,NULL),(2169,119,17,NULL),(2170,118,17,NULL),(2171,110,17,NULL),(2172,108,17,NULL),(2173,104,17,NULL),(2174,103,17,NULL),(2175,102,17,NULL),(2176,94,17,NULL),(2177,90,17,NULL),(2178,88,17,NULL),(2179,84,17,NULL),(2180,81,17,NULL),(2181,80,17,NULL),(2182,79,17,NULL),(2183,78,17,NULL),(2184,77,17,NULL),(2185,76,17,NULL),(2186,75,17,NULL),(2187,74,17,NULL),(2188,73,17,NULL),(2189,70,17,NULL),(2190,69,17,NULL),(2191,67,17,NULL),(2192,66,17,NULL),(2193,58,17,NULL),(2194,57,17,NULL),(2195,56,17,NULL),(2196,55,17,NULL),(2197,54,17,NULL),(2198,53,17,NULL),(2199,52,17,NULL),(2200,51,17,NULL),(2201,50,17,NULL),(2202,49,17,NULL),(2203,48,17,NULL),(2204,47,17,NULL),(2205,46,17,NULL),(2206,45,17,NULL),(2207,43,17,NULL),(2208,42,17,NULL),(2209,41,17,NULL),(2210,40,17,NULL),(2211,39,17,NULL),(2212,36,17,NULL),(2213,35,17,NULL),(2214,34,17,NULL),(2215,33,17,NULL),(2216,31,17,NULL),(2217,29,17,NULL),(2218,28,17,NULL),(2219,27,17,NULL),(2220,26,17,NULL),(2221,22,17,NULL),(2222,21,17,NULL),(2223,20,17,NULL),(2224,18,17,NULL),(2225,17,17,NULL),(2226,16,17,NULL),(2227,15,17,NULL),(2228,14,17,NULL),(2229,13,17,NULL),(2230,12,17,NULL),(2231,11,17,NULL),(2232,9,17,NULL),(2233,7,17,NULL),(2234,5,17,NULL),(2235,4,17,NULL),(2236,3,17,NULL),(2237,2,17,NULL),(2238,1,17,NULL),(2239,3564,17,NULL),(2240,3436,17,NULL),(2241,3503,17,NULL),(2242,3466,17,NULL),(2243,3531,17,NULL),(2244,3556,17,NULL),(2245,3929,17,NULL),(2246,3438,17,NULL),(2247,3585,17,NULL),(2248,3610,17,NULL),(2249,3486,17,NULL),(2250,3476,17,NULL),(2251,3576,17,NULL),(2252,3539,17,NULL),(2253,3418,17,NULL),(2254,3424,17,NULL),(2255,3428,17,NULL),(2256,3462,17,NULL),(2257,3416,17,NULL),(2258,3511,17,NULL),(2259,4529,17,NULL),(2260,3474,17,NULL),(2261,3496,17,NULL),(2262,3420,17,NULL),(2263,3578,17,NULL),(2264,3425,17,NULL),(2265,3647,17,NULL),(2266,3710,17,NULL),(2267,3582,17,NULL),(2268,3423,17,NULL),(2269,3630,17,NULL),(2270,3478,17,NULL),(2271,3747,17,NULL),(2272,3488,17,NULL),(2273,5962,17,NULL),(2274,3514,17,NULL),(2275,3733,17,NULL),(2276,3565,17,NULL),(2277,4646,17,NULL),(2278,3668,17,NULL),(2279,4159,17,NULL),(2280,3755,17,NULL),(2281,3687,17,NULL),(2282,4036,17,NULL),(2283,4925,17,NULL),(2284,4769,17,NULL),(2285,3700,17,NULL),(2286,4484,17,NULL),(2287,3802,17,NULL),(2288,4755,17,NULL),(2289,3740,17,NULL),(2290,3545,17,NULL),(2291,5006,17,NULL),(2292,3489,17,NULL),(2293,4103,17,NULL),(2294,4505,17,NULL),(2295,5305,17,NULL),(2296,3459,17,NULL),(2297,3830,17,NULL),(2298,3762,17,NULL),(2299,4216,17,NULL),(2300,4941,17,NULL),(2301,3948,17,NULL),(2302,5126,17,NULL),(2303,3535,17,NULL),(2304,3624,17,NULL),(2305,3584,17,NULL),(2306,3493,17,NULL),(2307,3444,17,NULL),(2308,3505,17,NULL),(2309,3431,17,NULL),(2310,4055,17,NULL),(2311,3525,17,NULL),(2312,3421,17,NULL),(2313,3643,17,NULL),(2314,3559,17,NULL),(2315,3785,17,NULL),(2316,3570,17,NULL),(2317,3477,17,NULL),(2318,3468,17,NULL),(2319,3450,17,NULL),(2320,3417,17,NULL),(2321,3599,17,NULL),(2322,3432,17,NULL),(2323,3538,17,NULL),(2324,3522,17,NULL),(2325,4009,17,NULL),(2326,4317,17,NULL),(2327,3419,17,NULL),(2328,3473,17,NULL),(2329,3510,17,NULL),(2330,3553,17,NULL),(2331,3825,17,NULL),(2332,5444,17,NULL),(2333,3692,17,NULL),(2334,3465,17,NULL),(2335,5474,17,NULL),(2336,3675,17,NULL),(2337,3621,17,NULL),(2338,3842,17,NULL),(2339,3590,17,NULL),(2340,4135,17,NULL),(2341,5021,17,NULL),(2342,4517,17,NULL),(2343,3603,17,NULL),(2344,4210,17,NULL),(2345,4309,17,NULL),(2346,4250,17,NULL),(2347,4113,17,NULL),(2348,4587,17,NULL),(2349,4403,17,NULL),(2350,16925,17,NULL),(2351,3880,17,NULL),(2352,3650,17,NULL),(2353,3718,17,NULL),(2354,4620,17,NULL),(2355,4588,17,NULL),(2356,6395,17,NULL),(2357,3532,18,NULL),(2358,3563,18,NULL),(2359,3501,18,NULL),(2360,3442,18,NULL),(2361,3512,18,NULL),(2362,3502,18,NULL),(2363,3491,18,NULL),(2364,3635,18,NULL),(2365,3526,18,NULL),(2366,3451,18,NULL),(2367,3436,18,NULL),(2368,3503,18,NULL),(2369,3466,18,NULL),(2370,3531,18,NULL),(2371,3556,18,NULL),(2372,3533,18,NULL),(2373,3896,18,NULL),(2374,3509,18,NULL),(2375,3438,18,NULL),(2376,3585,18,NULL),(2377,3560,18,NULL),(2378,3610,18,NULL),(2379,3471,18,NULL),(2380,3823,18,NULL),(2381,3731,18,NULL),(2382,4167,18,NULL),(2383,3476,18,NULL),(2384,3470,18,NULL),(2385,3748,18,NULL),(2386,3734,18,NULL),(2387,3804,18,NULL),(2388,3949,18,NULL),(2389,3614,18,NULL),(2390,3979,18,NULL),(2391,3642,18,NULL),(2392,3479,18,NULL),(2393,3539,18,NULL),(2394,3513,18,NULL),(2395,3445,18,NULL),(2396,3418,18,NULL),(2397,3424,18,NULL),(2398,3462,18,NULL),(2399,3416,18,NULL),(2400,3487,18,NULL),(2401,3511,18,NULL),(2402,4529,18,NULL),(2403,3492,18,NULL),(2404,3723,18,NULL),(2405,3837,18,NULL),(2406,4000,18,NULL),(2407,3507,18,NULL),(2408,3474,18,NULL),(2409,3583,18,NULL),(2410,3449,18,NULL),(2411,3467,18,NULL),(2412,3681,18,NULL),(2413,3496,18,NULL),(2414,3437,18,NULL),(2415,3420,18,NULL),(2416,3552,18,NULL),(2417,3578,18,NULL),(2418,3481,18,NULL),(2419,3506,18,NULL),(2420,3691,18,NULL),(2421,3879,18,NULL),(2422,3425,18,NULL),(2423,3647,18,NULL),(2424,4198,18,NULL),(2425,3852,18,NULL),(2426,3710,18,NULL),(2427,3960,18,NULL),(2428,3423,18,NULL),(2429,3767,18,NULL),(2430,3534,18,NULL),(2431,3448,18,NULL),(2432,3478,18,NULL),(2433,3690,18,NULL),(2434,4592,18,NULL),(2435,4305,18,NULL),(2436,3627,18,NULL),(2437,3713,18,NULL),(2438,3612,18,NULL),(2439,3488,18,NULL),(2440,3613,18,NULL),(2441,5962,18,NULL),(2442,3666,18,NULL),(2443,3426,18,NULL),(2444,3514,18,NULL),(2445,3805,18,NULL),(2446,3793,18,NULL),(2447,3517,18,NULL),(2448,3733,18,NULL),(2449,3565,18,NULL),(2450,3540,18,NULL),(2451,3668,18,NULL),(2452,4159,18,NULL),(2453,3687,18,NULL),(2454,3871,18,NULL),(2455,3776,18,NULL),(2456,4036,18,NULL),(2457,4565,18,NULL),(2458,4007,18,NULL),(2459,3730,18,NULL),(2460,3766,18,NULL),(2461,4681,18,NULL),(2462,4401,18,NULL),(2463,5657,18,NULL),(2464,4332,18,NULL),(2465,3499,18,NULL),(2466,4340,18,NULL),(2467,4981,18,NULL),(2468,3640,18,NULL),(2469,4026,18,NULL),(2470,4769,18,NULL),(2471,3700,18,NULL),(2472,3782,18,NULL),(2473,3956,18,NULL),(2474,4393,18,NULL),(2475,3877,18,NULL),(2476,3999,18,NULL),(2477,3947,18,NULL),(2478,4045,18,NULL),(2479,4254,18,NULL),(2480,4484,18,NULL),(2481,3745,18,NULL),(2482,5476,18,NULL),(2483,3802,18,NULL),(2484,4090,18,NULL),(2485,4446,18,NULL),(2486,6351,18,NULL),(2487,4521,18,NULL),(2488,4603,18,NULL),(2489,4513,18,NULL),(2490,5972,18,NULL),(2491,6355,18,NULL),(2492,4272,18,NULL),(2493,16678,18,NULL),(2494,16705,18,NULL),(2495,3484,18,NULL),(2496,3629,18,NULL),(2497,3632,18,NULL),(2498,3535,18,NULL),(2499,3624,18,NULL),(2500,3584,18,NULL),(2501,3430,18,NULL),(2502,3596,18,NULL),(2503,3569,18,NULL),(2504,3910,18,NULL),(2505,3574,18,NULL),(2506,3500,18,NULL),(2507,3480,18,NULL),(2508,3454,18,NULL),(2509,3469,18,NULL),(2510,3620,18,NULL),(2511,3433,18,NULL),(2512,3705,18,NULL),(2513,3521,18,NULL),(2514,3495,18,NULL),(2515,3679,18,NULL),(2516,3493,18,NULL),(2517,3628,18,NULL),(2518,3444,18,NULL),(2519,3516,18,NULL),(2520,3716,18,NULL),(2521,3505,18,NULL),(2522,3431,18,NULL),(2523,3876,18,NULL),(2524,3525,18,NULL),(2525,3983,18,NULL),(2526,3568,18,NULL),(2527,3633,18,NULL),(2528,3549,18,NULL),(2529,3421,18,NULL),(2530,3566,18,NULL),(2531,3643,18,NULL),(2532,3645,18,NULL),(2533,3559,18,NULL),(2534,5713,18,NULL),(2535,3970,18,NULL),(2536,3785,18,NULL),(2537,3615,18,NULL),(2538,3754,18,NULL),(2539,3570,18,NULL),(2540,4011,18,NULL),(2541,3452,18,NULL),(2542,3529,18,NULL),(2543,3477,18,NULL),(2544,3429,18,NULL),(2545,3422,18,NULL),(2546,3456,18,NULL),(2547,3861,18,NULL),(2548,3652,18,NULL),(2549,3464,18,NULL),(2550,3550,18,NULL),(2551,3586,18,NULL),(2552,3468,18,NULL),(2553,3523,18,NULL),(2554,3427,18,NULL),(2555,3551,18,NULL),(2556,3494,18,NULL),(2557,16656,18,NULL),(2558,3519,18,NULL),(2559,3450,18,NULL),(2560,3463,18,NULL),(2561,3417,18,NULL),(2562,3536,18,NULL),(2563,3561,18,NULL),(2564,3508,18,NULL),(2565,3432,18,NULL),(2566,3538,18,NULL),(2567,3453,18,NULL),(2568,3522,18,NULL),(2569,3806,18,NULL),(2570,3856,18,NULL),(2571,3577,18,NULL),(2572,3528,18,NULL),(2573,5562,18,NULL),(2574,3573,18,NULL),(2575,5965,18,NULL),(2576,4114,18,NULL),(2577,4644,18,NULL),(2578,3898,18,NULL),(2579,3419,18,NULL),(2580,3473,18,NULL),(2581,3510,18,NULL),(2582,3553,18,NULL),(2583,4156,18,NULL),(2584,3497,18,NULL),(2585,3439,18,NULL),(2586,3777,18,NULL),(2587,5207,18,NULL),(2588,3465,18,NULL),(2589,4131,18,NULL),(2590,3881,18,NULL),(2591,3796,18,NULL),(2592,5474,18,NULL),(2593,3675,18,NULL),(2594,3621,18,NULL),(2595,3611,18,NULL),(2596,3472,18,NULL),(2597,3685,18,NULL),(2598,3901,18,NULL),(2599,3590,18,NULL),(2600,3592,18,NULL),(2601,3797,18,NULL),(2602,4888,18,NULL),(2603,3603,18,NULL),(2604,4223,18,NULL),(2605,3597,18,NULL),(2606,4443,18,NULL),(2607,4210,18,NULL),(2608,4640,18,NULL),(2609,4695,18,NULL),(2610,4623,18,NULL),(2611,3875,18,NULL),(2612,3857,18,NULL),(2613,4161,18,NULL),(2614,4016,18,NULL),(2615,4371,18,NULL),(2616,4331,18,NULL),(2617,4459,18,NULL),(2618,4549,18,NULL),(2619,4206,18,NULL),(2620,4587,18,NULL),(2621,4570,18,NULL),(2622,4475,18,NULL),(2623,4403,18,NULL),(2624,6319,18,NULL),(2625,4803,18,NULL),(2626,4532,18,NULL),(2627,4639,18,NULL),(2628,4415,18,NULL),(2629,3829,18,NULL),(2630,4227,18,NULL),(2631,3443,18,NULL),(2632,3607,18,NULL),(2633,3816,18,NULL),(2634,4582,18,NULL),(2635,3650,18,NULL),(2636,3718,18,NULL),(2637,4909,18,NULL),(2638,4620,18,NULL),(2639,4588,18,NULL),(2640,3554,18,NULL),(2641,3771,18,NULL),(2642,3740,18,NULL),(2643,3545,18,NULL),(2644,3694,18,NULL),(2645,3618,18,NULL),(2646,3594,18,NULL),(2647,3608,18,NULL),(2648,3435,18,NULL),(2649,3498,18,NULL),(2650,3581,18,NULL),(2651,3623,18,NULL),(2652,3587,18,NULL),(2653,3524,18,NULL),(2654,3475,18,NULL),(2655,3455,18,NULL),(2656,3489,18,NULL),(2657,3541,18,NULL),(2658,4903,18,NULL),(2659,3446,18,NULL),(2660,3557,18,NULL),(2661,3601,18,NULL),(2662,4239,18,NULL),(2663,3459,18,NULL),(2664,3504,18,NULL),(2665,3457,18,NULL),(2666,3741,18,NULL),(2667,3483,18,NULL),(2668,5134,18,NULL),(2669,3762,18,NULL),(2670,4530,18,NULL),(2671,4216,18,NULL),(2672,3669,18,NULL),(2673,3595,18,NULL),(2674,5380,18,NULL),(2675,6056,18,NULL),(2676,3482,18,NULL),(2677,4941,18,NULL),(2678,3625,18,NULL),(2679,4088,18,NULL),(2680,3948,18,NULL),(2681,3971,18,NULL),(2682,3862,18,NULL),(2683,17041,18,NULL),(2684,14854,18,NULL),(2685,15085,18,NULL),(2686,9872,18,NULL),(2687,12269,18,NULL),(2688,16579,14,NULL),(2689,16580,14,NULL),(2690,16560,14,NULL),(2691,16556,14,NULL),(2692,16545,14,NULL),(2693,16574,14,NULL),(2694,16550,14,NULL),(2695,3411,14,NULL),(2696,3355,14,NULL),(2697,3345,14,NULL),(2698,3330,14,NULL),(2699,3354,14,NULL),(2700,3349,14,NULL),(2701,3300,14,NULL),(2702,3334,14,NULL),(2703,3285,14,NULL),(2704,3331,14,NULL),(2705,3280,14,NULL),(2706,3258,14,NULL),(2707,3295,14,NULL),(2708,3254,14,NULL),(2709,3222,14,NULL),(2710,3210,14,NULL),(2711,3163,14,NULL),(2712,3186,14,NULL),(2713,3151,14,NULL),(2714,3146,14,NULL),(2715,3105,14,NULL),(2716,3011,14,NULL),(2717,2970,14,NULL),(2718,2938,14,NULL),(2719,2914,14,NULL),(2720,2843,14,NULL),(2721,2807,14,NULL),(2722,2699,14,NULL),(2723,2698,14,NULL),(2724,2696,14,NULL),(2725,2717,14,NULL),(2726,2706,14,NULL),(2727,2653,14,NULL),(2728,2601,14,NULL),(2729,2563,14,NULL),(2730,2641,14,NULL),(2731,2583,14,NULL),(2732,2540,14,NULL),(2733,2530,14,NULL),(2734,2529,14,NULL),(2735,2516,14,NULL),(2736,2461,14,NULL),(2737,2379,14,NULL),(2738,2383,14,NULL),(2739,2235,14,NULL),(2740,2275,14,NULL),(2741,2257,14,NULL),(2742,2220,14,NULL),(2743,2125,14,NULL),(2744,2106,14,NULL),(2745,2064,14,NULL),(2746,2057,14,NULL),(2747,2070,14,NULL),(2748,2044,14,NULL),(2749,2028,14,NULL),(2750,2038,14,NULL),(2751,2022,14,NULL),(2752,1971,14,NULL),(2753,1945,14,NULL),(2754,1921,14,NULL),(2755,1920,14,NULL),(2756,1905,14,NULL),(2757,1899,14,NULL),(2758,1894,14,NULL),(2759,1861,14,NULL),(2760,1791,14,NULL),(2761,1647,14,NULL),(2762,1670,14,NULL),(2763,1652,14,NULL),(2764,1636,14,NULL),(2765,1620,14,NULL),(2766,1593,14,NULL),(2767,1566,14,NULL),(2768,1574,14,NULL),(2769,1545,14,NULL),(2770,1534,14,NULL),(2771,1528,14,NULL),(2772,1524,14,NULL),(2773,1352,14,NULL),(2774,1370,14,NULL),(2775,1275,14,NULL),(2776,1254,14,NULL),(2777,1726,14,NULL),(2778,1514,14,NULL),(2779,1405,14,NULL),(2780,1175,14,NULL),(2781,1140,14,NULL),(2782,1109,14,NULL),(2783,1094,14,NULL),(2784,1079,14,NULL),(2785,1072,14,NULL),(2786,1048,14,NULL),(2787,1029,14,NULL),(2788,997,14,NULL),(2789,994,14,NULL),(2790,978,14,NULL),(2791,977,14,NULL),(2792,976,14,NULL),(2793,509,14,NULL),(2794,965,14,NULL),(2795,951,14,NULL),(2796,947,14,NULL),(2797,930,14,NULL),(2798,896,14,NULL),(2799,884,14,NULL),(2800,881,14,NULL),(2801,875,14,NULL),(2802,874,14,NULL),(2803,868,14,NULL),(2804,862,14,NULL),(2805,848,14,NULL),(2806,846,14,NULL),(2807,844,14,NULL),(2808,819,14,NULL),(2809,706,14,NULL),(2810,705,14,NULL),(2811,798,14,NULL),(2812,796,14,NULL),(2813,704,14,NULL),(2814,700,14,NULL),(2815,590,14,NULL),(2816,733,14,NULL),(2817,696,14,NULL),(2818,674,14,NULL),(2819,664,14,NULL),(2820,643,14,NULL),(2821,594,14,NULL),(2822,592,14,NULL),(2823,564,14,NULL),(2824,563,14,NULL),(2825,561,14,NULL),(2826,542,14,NULL),(2827,541,14,NULL),(2828,520,14,NULL),(2829,507,14,NULL),(2830,500,14,NULL),(2831,476,14,NULL),(2832,463,14,NULL),(2833,448,14,NULL),(2834,438,14,NULL),(2835,415,14,NULL),(2836,414,14,NULL),(2837,410,14,NULL),(2838,409,14,NULL),(2839,404,14,NULL),(2840,401,14,NULL),(2841,397,14,NULL),(2842,392,14,NULL),(2843,386,14,NULL),(2844,374,14,NULL),(2845,367,14,NULL),(2846,363,14,NULL),(2847,350,14,NULL),(2848,349,14,NULL),(2849,347,14,NULL),(2850,345,14,NULL),(2851,344,14,NULL),(2852,342,14,NULL),(2853,338,14,NULL),(2854,326,14,NULL),(2855,310,14,NULL),(2856,306,14,NULL),(2857,303,14,NULL),(2858,292,14,NULL),(2859,290,14,NULL),(2860,283,14,NULL),(2861,278,14,NULL),(2862,268,14,NULL),(2863,263,14,NULL),(2864,258,14,NULL),(2865,257,14,NULL),(2866,242,14,NULL),(2867,240,14,NULL),(2868,239,14,NULL),(2869,234,14,NULL),(2870,232,14,NULL),(2871,231,14,NULL),(2872,228,14,NULL),(2873,226,14,NULL),(2874,225,14,NULL),(2875,222,14,NULL),(2876,219,14,NULL),(2877,217,14,NULL),(2878,210,14,NULL),(2879,209,14,NULL),(2880,207,14,NULL),(2881,206,14,NULL),(2882,205,14,NULL),(2883,203,14,NULL),(2884,202,14,NULL),(2885,191,14,NULL),(2886,190,14,NULL),(2887,189,14,NULL),(2888,171,14,NULL),(2889,169,14,NULL),(2890,168,14,NULL),(2891,167,14,NULL),(2892,162,14,NULL),(2893,160,14,NULL),(2894,155,14,NULL),(2895,153,14,NULL),(2896,152,14,NULL),(2897,151,14,NULL),(2898,145,14,NULL),(2899,144,14,NULL),(2900,141,14,NULL),(2901,139,14,NULL),(2902,136,14,NULL),(2903,133,14,NULL),(2904,131,14,NULL),(2905,125,14,NULL),(2906,122,14,NULL),(2907,121,14,NULL),(2908,120,14,NULL),(2909,119,14,NULL),(2910,118,14,NULL),(2911,117,14,NULL),(2912,116,14,NULL),(2913,113,14,NULL),(2914,112,14,NULL),(2915,111,14,NULL),(2916,110,14,NULL),(2917,108,14,NULL),(2918,104,14,NULL),(2919,101,14,NULL),(2920,100,14,NULL),(2921,97,14,NULL),(2922,96,14,NULL),(2923,95,14,NULL),(2924,94,14,NULL),(2925,92,14,NULL),(2926,91,14,NULL),(2927,90,14,NULL),(2928,89,14,NULL),(2929,88,14,NULL),(2930,86,14,NULL),(2931,84,14,NULL),(2932,83,14,NULL),(2933,82,14,NULL),(2934,81,14,NULL),(2935,80,14,NULL),(2936,79,14,NULL),(2937,78,14,NULL),(2938,77,14,NULL),(2939,75,14,NULL),(2940,74,14,NULL),(2941,73,14,NULL),(2942,72,14,NULL),(2943,71,14,NULL),(2944,70,14,NULL),(2945,69,14,NULL),(2946,67,14,NULL),(2947,66,14,NULL),(2948,64,14,NULL),(2949,63,14,NULL),(2950,62,14,NULL),(2951,61,14,NULL),(2952,59,14,NULL),(2953,58,14,NULL),(2954,57,14,NULL),(2955,56,14,NULL),(2956,55,14,NULL),(2957,54,14,NULL),(2958,53,14,NULL),(2959,52,14,NULL),(2960,51,14,NULL),(2961,50,14,NULL),(2962,49,14,NULL),(2963,48,14,NULL),(2964,47,14,NULL),(2965,46,14,NULL),(2966,45,14,NULL),(2967,43,14,NULL),(2968,42,14,NULL),(2969,40,14,NULL),(2970,39,14,NULL),(2971,38,14,NULL),(2972,36,14,NULL),(2973,35,14,NULL),(2974,34,14,NULL),(2975,33,14,NULL),(2976,32,14,NULL),(2977,31,14,NULL),(2978,29,14,NULL),(2979,28,14,NULL),(2980,27,14,NULL),(2981,26,14,NULL),(2982,25,14,NULL),(2983,24,14,NULL),(2984,22,14,NULL),(2985,21,14,NULL),(2986,20,14,NULL),(2987,19,14,NULL),(2988,18,14,NULL),(2989,17,14,NULL),(2990,16,14,NULL),(2991,15,14,NULL),(2992,14,14,NULL),(2993,13,14,NULL),(2994,12,14,NULL),(2995,11,14,NULL),(2996,9,14,NULL),(2997,7,14,NULL),(2998,6,14,NULL),(2999,5,14,NULL),(3000,4,14,NULL),(3001,3,14,NULL),(3002,2,14,NULL),(3003,1,14,NULL),(3004,3682,16,NULL),(3005,3554,16,NULL),(3006,3435,16,NULL),(3007,3498,16,NULL),(3008,3800,16,NULL),(3009,3524,16,NULL),(3010,3489,16,NULL),(3011,4903,16,NULL),(3012,3446,16,NULL),(3013,3714,16,NULL),(3014,4103,16,NULL),(3015,3459,16,NULL),(3016,5446,16,NULL),(3017,3830,16,NULL),(3018,4028,16,NULL),(3019,3993,16,NULL),(3020,3595,16,NULL),(3021,4934,16,NULL),(3022,4649,16,NULL),(3023,4840,16,NULL),(3024,4612,16,NULL),(3025,3695,16,NULL),(3026,4506,16,NULL),(3027,4032,16,NULL),(3028,4767,16,NULL),(3029,4560,16,NULL),(3030,3833,16,NULL),(3031,4720,16,NULL),(3032,3482,16,NULL),(3033,4074,16,NULL),(3034,5088,16,NULL),(3035,4941,16,NULL),(3036,3625,16,NULL),(3037,4170,16,NULL),(3038,4423,16,NULL),(3039,4217,16,NULL),(3040,3948,16,NULL),(3041,5126,16,NULL),(3042,4383,16,NULL),(3043,3484,16,NULL),(3044,3500,16,NULL),(3045,3469,16,NULL),(3046,3495,16,NULL),(3047,3493,16,NULL),(3048,3444,16,NULL),(3049,3505,16,NULL),(3050,3525,16,NULL),(3051,3421,16,NULL),(3052,4228,16,NULL),(3053,4023,16,NULL),(3054,3754,16,NULL),(3055,3570,16,NULL),(3056,3452,16,NULL),(3057,3456,16,NULL),(3058,3468,16,NULL),(3059,3427,16,NULL),(3060,3551,16,NULL),(3061,3463,16,NULL),(3062,3417,16,NULL),(3063,3508,16,NULL),(3064,4939,16,NULL),(3065,4663,16,NULL),(3066,3680,16,NULL),(3067,3522,16,NULL),(3068,4317,16,NULL),(3069,3419,16,NULL),(3070,3473,16,NULL),(3071,3510,16,NULL),(3072,4397,16,NULL),(3073,3553,16,NULL),(3074,4920,16,NULL),(3075,3769,16,NULL),(3076,3465,16,NULL),(3077,3881,16,NULL),(3078,5474,16,NULL),(3079,3621,16,NULL),(3080,3472,16,NULL),(3081,3842,16,NULL),(3082,3590,16,NULL),(3083,5256,16,NULL),(3084,3797,16,NULL),(3085,5768,16,NULL),(3086,4443,16,NULL),(3087,4210,16,NULL),(3088,3875,16,NULL),(3089,3857,16,NULL),(3090,4161,16,NULL),(3091,4113,16,NULL),(3092,4016,16,NULL),(3093,4238,16,NULL),(3094,4459,16,NULL),(3095,4587,16,NULL),(3096,4564,16,NULL),(3097,4415,16,NULL),(3098,3532,16,NULL),(3099,3436,16,NULL),(3100,3503,16,NULL),(3101,3531,16,NULL),(3102,3556,16,NULL),(3103,3509,16,NULL),(3104,3585,16,NULL),(3105,3660,16,NULL),(3106,3610,16,NULL),(3107,3823,16,NULL),(3108,3476,16,NULL),(3109,3513,16,NULL),(3110,3418,16,NULL),(3111,3424,16,NULL),(3112,3712,16,NULL),(3113,3416,16,NULL),(3114,3487,16,NULL),(3115,3511,16,NULL),(3116,4529,16,NULL),(3117,3492,16,NULL),(3118,3837,16,NULL),(3119,3474,16,NULL),(3120,3467,16,NULL),(3121,3437,16,NULL),(3122,3578,16,NULL),(3123,3481,16,NULL),(3124,3440,16,NULL),(3125,3879,16,NULL),(3126,3425,16,NULL),(3127,3647,16,NULL),(3128,3759,16,NULL),(3129,3423,16,NULL),(3130,3773,16,NULL),(3131,3448,16,NULL),(3132,3488,16,NULL),(3133,3613,16,NULL),(3134,3514,16,NULL),(3135,4073,16,NULL),(3136,3793,16,NULL),(3137,3733,16,NULL),(3138,4646,16,NULL),(3139,4048,16,NULL),(3140,3813,16,NULL),(3141,4089,16,NULL),(3142,4159,16,NULL),(3143,4224,16,NULL),(3144,3776,16,NULL),(3145,3766,16,NULL),(3146,4681,16,NULL),(3147,4753,16,NULL),(3148,4872,16,NULL),(3149,4401,16,NULL),(3150,3499,16,NULL),(3151,4769,16,NULL),(3152,3700,16,NULL),(3153,3999,16,NULL),(3154,3947,16,NULL),(3155,4045,16,NULL),(3156,4484,16,NULL),(3157,3892,16,NULL),(3158,5464,16,NULL),(3159,3802,16,NULL),(3160,4029,16,NULL),(3161,6351,16,NULL),(3162,6362,16,NULL),(3163,16678,16,NULL),(3164,3443,16,NULL),(3165,4582,16,NULL),(3166,4214,16,NULL),(3167,4620,16,NULL),(3168,4588,16,NULL),(3169,3436,15,NULL),(3170,3531,15,NULL),(3171,3556,15,NULL),(3172,3585,15,NULL),(3173,3660,15,NULL),(3174,3823,15,NULL),(3175,3476,15,NULL),(3176,3479,15,NULL),(3177,3487,15,NULL),(3178,3647,15,NULL),(3179,3423,15,NULL),(3180,3488,15,NULL),(3181,4186,15,NULL),(3182,4981,15,NULL),(3183,4026,15,NULL),(3184,4769,15,NULL),(3185,3664,15,NULL),(3186,3455,15,NULL),(3187,3459,15,NULL),(3188,3504,15,NULL),(3189,3483,15,NULL),(3190,3830,15,NULL),(3191,3762,15,NULL),(3192,3833,15,NULL),(3193,3482,15,NULL),(3194,3493,15,NULL),(3195,3444,15,NULL),(3196,3505,15,NULL),(3197,3525,15,NULL),(3198,3711,15,NULL),(3199,4237,15,NULL),(3200,3477,15,NULL),(3201,3652,15,NULL),(3202,3450,15,NULL),(3203,3463,15,NULL),(3204,3417,15,NULL),(3205,3561,15,NULL),(3206,4181,15,NULL),(3207,3577,15,NULL),(3208,3419,15,NULL),(3209,3473,15,NULL),(3210,5474,15,NULL),(3211,3621,15,NULL),(3212,3842,15,NULL),(3213,3592,15,NULL),(3214,4210,15,NULL),(3215,4620,15,NULL),(3216,4588,15,NULL),(3217,16634,15,NULL),(3218,16610,15,NULL),(3219,16560,15,NULL),(3220,16641,15,NULL),(3221,16556,15,NULL),(3222,16640,15,NULL),(3223,16546,15,NULL),(3224,16574,15,NULL),(3225,16550,15,NULL),(3226,3411,15,NULL),(3227,3335,15,NULL),(3228,3345,15,NULL),(3229,3354,15,NULL),(3230,3349,15,NULL),(3231,3304,15,NULL),(3232,3334,15,NULL),(3233,3289,15,NULL),(3234,3280,15,NULL),(3235,3254,15,NULL),(3236,3290,15,NULL),(3237,3217,15,NULL),(3238,2864,15,NULL),(3239,2684,15,NULL),(3240,2641,15,NULL),(3241,2583,15,NULL),(3242,2540,15,NULL),(3243,2529,15,NULL),(3244,2516,15,NULL),(3245,2461,15,NULL),(3246,2257,15,NULL),(3247,2149,15,NULL),(3248,2106,15,NULL),(3249,2064,15,NULL),(3250,2028,15,NULL),(3251,1930,15,NULL),(3252,1899,15,NULL),(3253,1848,15,NULL),(3254,1861,15,NULL),(3255,1832,15,NULL),(3256,1822,15,NULL),(3257,1652,15,NULL),(3258,1539,15,NULL),(3259,1247,15,NULL),(3260,1514,15,NULL),(3261,1091,15,NULL),(3262,977,15,NULL),(3263,509,15,NULL),(3264,951,15,NULL),(3265,942,15,NULL),(3266,930,15,NULL),(3267,884,15,NULL),(3268,874,15,NULL),(3269,873,15,NULL),(3270,848,15,NULL),(3271,823,15,NULL),(3272,705,15,NULL),(3273,704,15,NULL),(3274,700,15,NULL),(3275,768,15,NULL),(3276,761,15,NULL),(3277,669,15,NULL),(3278,662,15,NULL),(3279,654,15,NULL),(3280,643,15,NULL),(3281,617,15,NULL),(3282,564,15,NULL),(3283,560,15,NULL),(3284,476,15,NULL),(3285,452,15,NULL),(3286,442,15,NULL),(3287,414,15,NULL),(3288,401,15,NULL),(3289,363,15,NULL),(3290,329,15,NULL),(3291,268,15,NULL),(3292,199,15,NULL),(3293,179,15,NULL),(3294,148,15,NULL),(3295,144,15,NULL),(3296,136,15,NULL),(3297,132,15,NULL),(3298,124,15,NULL),(3299,119,15,NULL),(3300,118,15,NULL),(3301,111,15,NULL),(3302,104,15,NULL),(3303,102,15,NULL),(3304,99,15,NULL),(3305,98,15,NULL),(3306,96,15,NULL),(3307,88,15,NULL),(3308,81,15,NULL),(3309,70,15,NULL),(3310,69,15,NULL),(3311,67,15,NULL),(3312,66,15,NULL),(3313,58,15,NULL),(3314,53,15,NULL),(3315,46,15,NULL),(3316,45,15,NULL),(3317,42,15,NULL),(3318,39,15,NULL),(3319,35,15,NULL),(3320,33,15,NULL),(3321,32,15,NULL),(3322,31,15,NULL),(3323,28,15,NULL),(3324,27,15,NULL),(3325,26,15,NULL),(3326,25,15,NULL),(3327,23,15,NULL),(3328,21,15,NULL),(3329,20,15,NULL),(3330,17,15,NULL),(3331,16,15,NULL),(3332,15,15,NULL),(3333,14,15,NULL),(3334,13,15,NULL),(3335,12,15,NULL),(3336,11,15,NULL),(3337,10,15,NULL),(3338,9,15,NULL),(3339,7,15,NULL),(3340,6,15,NULL),(3341,5,15,NULL),(3342,4,15,NULL),(3343,3,15,NULL),(3344,2,15,NULL),(3345,1,15,NULL),(3346,16620,16,NULL),(3347,16634,16,NULL),(3348,16625,16,NULL),(3349,16560,16,NULL),(3350,16641,16,NULL),(3351,16556,16,NULL),(3352,16640,16,NULL),(3353,16545,16,NULL),(3354,16574,16,NULL),(3355,16645,16,NULL),(3356,16550,16,NULL),(3357,3411,16,NULL),(3358,3392,16,NULL),(3359,3370,16,NULL),(3360,3396,16,NULL),(3361,3340,16,NULL),(3362,3335,16,NULL),(3363,3345,16,NULL),(3364,3360,16,NULL),(3365,3330,16,NULL),(3366,3354,16,NULL),(3367,3300,16,NULL),(3368,3304,16,NULL),(3369,3334,16,NULL),(3370,3285,16,NULL),(3371,3289,16,NULL),(3372,3270,16,NULL),(3373,3280,16,NULL),(3374,3286,16,NULL),(3375,3274,16,NULL),(3376,3295,16,NULL),(3377,3271,16,NULL),(3378,3248,16,NULL),(3379,3232,16,NULL),(3380,3325,16,NULL),(3381,3217,16,NULL),(3382,3190,16,NULL),(3383,3194,16,NULL),(3384,3206,16,NULL),(3385,3227,16,NULL),(3386,3223,16,NULL),(3387,3211,16,NULL),(3388,3163,16,NULL),(3389,3174,16,NULL),(3390,3160,16,NULL),(3391,3151,16,NULL),(3392,3158,16,NULL),(3393,3152,16,NULL),(3394,3159,16,NULL),(3395,3121,16,NULL),(3396,3136,16,NULL),(3397,3110,16,NULL),(3398,3105,16,NULL),(3399,3099,16,NULL),(3400,3079,16,NULL),(3401,3066,16,NULL),(3402,3043,16,NULL),(3403,3024,16,NULL),(3404,3042,16,NULL),(3405,3011,16,NULL),(3406,3016,16,NULL),(3407,3014,16,NULL),(3408,3005,16,NULL),(3409,2965,16,NULL),(3410,2951,16,NULL),(3411,2938,16,NULL),(3412,2942,16,NULL),(3413,2914,16,NULL),(3414,2894,16,NULL),(3415,2873,16,NULL),(3416,2859,16,NULL),(3417,2828,16,NULL),(3418,2807,16,NULL),(3419,2815,16,NULL),(3420,2785,16,NULL),(3421,2810,16,NULL),(3422,2798,16,NULL),(3423,2733,16,NULL),(3424,2729,16,NULL),(3425,2769,16,NULL),(3426,2699,16,NULL),(3427,2696,16,NULL),(3428,2684,16,NULL),(3429,2657,16,NULL),(3430,2706,16,NULL),(3431,2707,16,NULL),(3432,2652,16,NULL),(3433,2651,16,NULL),(3434,2678,16,NULL),(3435,2575,16,NULL),(3436,2570,16,NULL),(3437,2558,16,NULL),(3438,2559,16,NULL),(3439,2550,16,NULL),(3440,2641,16,NULL),(3441,2608,16,NULL),(3442,2579,16,NULL),(3443,2583,16,NULL),(3444,2582,16,NULL),(3445,2553,16,NULL),(3446,2535,16,NULL),(3447,2530,16,NULL),(3448,2529,16,NULL),(3449,2523,16,NULL),(3450,2520,16,NULL),(3451,2506,16,NULL),(3452,2501,16,NULL),(3453,2500,16,NULL),(3454,2491,16,NULL),(3455,2490,16,NULL),(3456,2481,16,NULL),(3457,2485,16,NULL),(3458,2469,16,NULL),(3459,2463,16,NULL),(3460,2461,16,NULL),(3461,2460,16,NULL),(3462,2458,16,NULL),(3463,2442,16,NULL),(3464,2419,16,NULL),(3465,2418,16,NULL),(3466,2416,16,NULL),(3467,2415,16,NULL),(3468,2413,16,NULL),(3469,2406,16,NULL),(3470,2405,16,NULL),(3471,2404,16,NULL),(3472,2396,16,NULL),(3473,2342,16,NULL),(3474,2390,16,NULL),(3475,2381,16,NULL),(3476,2374,16,NULL),(3477,2364,16,NULL),(3478,2360,16,NULL),(3479,2351,16,NULL),(3480,2326,16,NULL),(3481,2315,16,NULL),(3482,2302,16,NULL),(3483,2300,16,NULL),(3484,2299,16,NULL),(3485,2235,16,NULL),(3486,2284,16,NULL),(3487,2270,16,NULL),(3488,2275,16,NULL),(3489,2264,16,NULL),(3490,2260,16,NULL),(3491,2221,16,NULL),(3492,2220,16,NULL),(3493,2208,16,NULL),(3494,2185,16,NULL),(3495,2169,16,NULL),(3496,2177,16,NULL),(3497,2148,16,NULL),(3498,2161,16,NULL),(3499,2140,16,NULL),(3500,2134,16,NULL),(3501,2125,16,NULL),(3502,2119,16,NULL),(3503,2109,16,NULL),(3504,2106,16,NULL),(3505,2103,16,NULL),(3506,2044,16,NULL),(3507,2053,16,NULL),(3508,2028,16,NULL),(3509,2038,16,NULL),(3510,2037,16,NULL),(3511,2011,16,NULL),(3512,2023,16,NULL),(3513,2022,16,NULL),(3514,2001,16,NULL),(3515,2000,16,NULL),(3516,1995,16,NULL),(3517,1971,16,NULL),(3518,1980,16,NULL),(3519,1963,16,NULL),(3520,1962,16,NULL),(3521,1953,16,NULL),(3522,1945,16,NULL),(3523,1937,16,NULL),(3524,1930,16,NULL),(3525,1929,16,NULL),(3526,1942,16,NULL),(3527,1941,16,NULL),(3528,1920,16,NULL),(3529,1926,16,NULL),(3530,1905,16,NULL),(3531,1899,16,NULL),(3532,1910,16,NULL),(3533,1894,16,NULL),(3534,1869,16,NULL),(3535,1876,16,NULL),(3536,1861,16,NULL),(3537,1837,16,NULL),(3538,1833,16,NULL),(3539,1823,16,NULL),(3540,1822,16,NULL),(3541,1816,16,NULL),(3542,1800,16,NULL),(3543,1813,16,NULL),(3544,1812,16,NULL),(3545,1791,16,NULL),(3546,1790,16,NULL),(3547,1784,16,NULL),(3548,1768,16,NULL),(3549,1780,16,NULL),(3550,1752,16,NULL),(3551,1765,16,NULL),(3552,1748,16,NULL),(3553,1742,16,NULL),(3554,1732,16,NULL),(3555,1695,16,NULL),(3556,1672,16,NULL),(3557,1684,16,NULL),(3558,1662,16,NULL),(3559,1647,16,NULL),(3560,1671,16,NULL),(3561,1652,16,NULL),(3562,1593,16,NULL),(3563,1590,16,NULL),(3564,1568,16,NULL),(3565,1572,16,NULL),(3566,1551,16,NULL),(3567,1545,16,NULL),(3568,1528,16,NULL),(3569,1539,16,NULL),(3570,1518,16,NULL),(3571,1512,16,NULL),(3572,1497,16,NULL),(3573,1508,16,NULL),(3574,1482,16,NULL),(3575,1480,16,NULL),(3576,1493,16,NULL),(3577,1492,16,NULL),(3578,1470,16,NULL),(3579,1456,16,NULL),(3580,1460,16,NULL),(3581,1436,16,NULL),(3582,1446,16,NULL),(3583,1423,16,NULL),(3584,1422,16,NULL),(3585,1431,16,NULL),(3586,1408,16,NULL),(3587,1400,16,NULL),(3588,1381,16,NULL),(3589,1387,16,NULL),(3590,1367,16,NULL),(3591,1365,16,NULL),(3592,1352,16,NULL),(3593,1351,16,NULL),(3594,1371,16,NULL),(3595,1346,16,NULL),(3596,1358,16,NULL),(3597,1342,16,NULL),(3598,1319,16,NULL),(3599,1310,16,NULL),(3600,1295,16,NULL),(3601,1293,16,NULL),(3602,1290,16,NULL),(3603,1282,16,NULL),(3604,1281,16,NULL),(3605,1277,16,NULL),(3606,1267,16,NULL),(3607,2215,16,NULL),(3608,1254,16,NULL),(3609,1726,16,NULL),(3610,1233,16,NULL),(3611,2191,16,NULL),(3612,1514,16,NULL),(3613,1207,16,NULL),(3614,1202,16,NULL),(3615,1405,16,NULL),(3616,1957,16,NULL),(3617,1550,16,NULL),(3618,1382,16,NULL),(3619,1331,16,NULL),(3620,1302,16,NULL),(3621,1143,16,NULL),(3622,1140,16,NULL),(3623,1137,16,NULL),(3624,1109,16,NULL),(3625,1108,16,NULL),(3626,1106,16,NULL),(3627,1094,16,NULL),(3628,1091,16,NULL),(3629,1081,16,NULL),(3630,1054,16,NULL),(3631,1051,16,NULL),(3632,1046,16,NULL),(3633,1161,16,NULL),(3634,1037,16,NULL),(3635,1038,16,NULL),(3636,1020,16,NULL),(3637,1011,16,NULL),(3638,1004,16,NULL),(3639,997,16,NULL),(3640,994,16,NULL),(3641,992,16,NULL),(3642,978,16,NULL),(3643,977,16,NULL),(3644,509,16,NULL),(3645,962,16,NULL),(3646,961,16,NULL),(3647,959,16,NULL),(3648,951,16,NULL),(3649,947,16,NULL),(3650,931,16,NULL),(3651,930,16,NULL),(3652,921,16,NULL),(3653,917,16,NULL),(3654,912,16,NULL),(3655,904,16,NULL),(3656,885,16,NULL),(3657,884,16,NULL),(3658,881,16,NULL),(3659,877,16,NULL),(3660,876,16,NULL),(3661,875,16,NULL),(3662,874,16,NULL),(3663,872,16,NULL),(3664,860,16,NULL),(3665,852,16,NULL),(3666,848,16,NULL),(3667,846,16,NULL),(3668,841,16,NULL),(3669,840,16,NULL),(3670,641,16,NULL),(3671,827,16,NULL),(3672,802,16,NULL),(3673,798,16,NULL),(3674,797,16,NULL),(3675,796,16,NULL),(3676,787,16,NULL),(3677,786,16,NULL),(3678,785,16,NULL),(3679,704,16,NULL),(3680,703,16,NULL),(3681,771,16,NULL),(3682,767,16,NULL),(3683,766,16,NULL),(3684,590,16,NULL),(3685,429,16,NULL),(3686,743,16,NULL),(3687,733,16,NULL),(3688,731,16,NULL),(3689,729,16,NULL),(3690,728,16,NULL),(3691,725,16,NULL),(3692,724,16,NULL),(3693,719,16,NULL),(3694,713,16,NULL),(3695,695,16,NULL),(3696,693,16,NULL),(3697,692,16,NULL),(3698,684,16,NULL),(3699,680,16,NULL),(3700,672,16,NULL),(3701,670,16,NULL),(3702,665,16,NULL),(3703,664,16,NULL),(3704,654,16,NULL),(3705,650,16,NULL),(3706,646,16,NULL),(3707,643,16,NULL),(3708,637,16,NULL),(3709,633,16,NULL),(3710,632,16,NULL),(3711,624,16,NULL),(3712,605,16,NULL),(3713,594,16,NULL),(3714,592,16,NULL),(3715,567,16,NULL),(3716,564,16,NULL),(3717,561,16,NULL),(3718,560,16,NULL),(3719,557,16,NULL),(3720,547,16,NULL),(3721,542,16,NULL),(3722,540,16,NULL),(3723,539,16,NULL),(3724,538,16,NULL),(3725,535,16,NULL),(3726,520,16,NULL),(3727,515,16,NULL),(3728,506,16,NULL),(3729,494,16,NULL),(3730,485,16,NULL),(3731,476,16,NULL),(3732,468,16,NULL),(3733,463,16,NULL),(3734,462,16,NULL),(3735,461,16,NULL),(3736,455,16,NULL),(3737,453,16,NULL),(3738,451,16,NULL),(3739,448,16,NULL),(3740,443,16,NULL),(3741,442,16,NULL),(3742,441,16,NULL),(3743,440,16,NULL),(3744,438,16,NULL),(3745,434,16,NULL),(3746,432,16,NULL),(3747,419,16,NULL),(3748,416,16,NULL),(3749,414,16,NULL),(3750,412,16,NULL),(3751,409,16,NULL),(3752,405,16,NULL),(3753,392,16,NULL),(3754,390,16,NULL),(3755,389,16,NULL),(3756,387,16,NULL),(3757,386,16,NULL),(3758,383,16,NULL),(3759,378,16,NULL),(3760,374,16,NULL),(3761,371,16,NULL),(3762,367,16,NULL),(3763,363,16,NULL),(3764,350,16,NULL),(3765,349,16,NULL),(3766,347,16,NULL),(3767,345,16,NULL),(3768,344,16,NULL),(3769,342,16,NULL),(3770,338,16,NULL),(3771,334,16,NULL),(3772,326,16,NULL),(3773,322,16,NULL),(3774,319,16,NULL),(3775,316,16,NULL),(3776,300,16,NULL),(3777,290,16,NULL),(3778,287,16,NULL),(3779,283,16,NULL),(3780,278,16,NULL),(3781,273,16,NULL),(3782,268,16,NULL),(3783,264,16,NULL),(3784,258,16,NULL),(3785,257,16,NULL),(3786,242,16,NULL),(3787,241,16,NULL),(3788,240,16,NULL),(3789,238,16,NULL),(3790,231,16,NULL),(3791,230,16,NULL),(3792,229,16,NULL),(3793,226,16,NULL),(3794,224,16,NULL),(3795,222,16,NULL),(3796,221,16,NULL),(3797,219,16,NULL),(3798,217,16,NULL),(3799,215,16,NULL),(3800,214,16,NULL),(3801,213,16,NULL),(3802,209,16,NULL),(3803,207,16,NULL),(3804,206,16,NULL),(3805,205,16,NULL),(3806,204,16,NULL),(3807,202,16,NULL),(3808,201,16,NULL),(3809,200,16,NULL),(3810,199,16,NULL),(3811,198,16,NULL),(3812,191,16,NULL),(3813,190,16,NULL),(3814,189,16,NULL),(3815,179,16,NULL),(3816,172,16,NULL),(3817,171,16,NULL),(3818,169,16,NULL),(3819,168,16,NULL),(3820,164,16,NULL),(3821,162,16,NULL),(3822,153,16,NULL),(3823,152,16,NULL),(3824,151,16,NULL),(3825,145,16,NULL),(3826,144,16,NULL),(3827,141,16,NULL),(3828,139,16,NULL),(3829,136,16,NULL),(3830,134,16,NULL),(3831,130,16,NULL),(3832,129,16,NULL),(3833,127,16,NULL),(3834,125,16,NULL),(3835,122,16,NULL),(3836,121,16,NULL),(3837,120,16,NULL),(3838,118,16,NULL),(3839,113,16,NULL),(3840,112,16,NULL),(3841,108,16,NULL),(3842,107,16,NULL),(3843,106,16,NULL),(3844,104,16,NULL),(3845,102,16,NULL),(3846,100,16,NULL),(3847,94,16,NULL),(3848,90,16,NULL),(3849,81,16,NULL),(3850,79,16,NULL),(3851,78,16,NULL),(3852,77,16,NULL),(3853,75,16,NULL),(3854,74,16,NULL),(3855,73,16,NULL),(3856,70,16,NULL),(3857,69,16,NULL),(3858,67,16,NULL),(3859,66,16,NULL),(3860,64,16,NULL),(3861,63,16,NULL),(3862,62,16,NULL),(3863,59,16,NULL),(3864,58,16,NULL),(3865,56,16,NULL),(3866,55,16,NULL),(3867,54,16,NULL),(3868,53,16,NULL),(3869,52,16,NULL),(3870,51,16,NULL),(3871,50,16,NULL),(3872,49,16,NULL),(3873,48,16,NULL),(3874,47,16,NULL),(3875,46,16,NULL),(3876,43,16,NULL),(3877,42,16,NULL),(3878,40,16,NULL),(3879,39,16,NULL),(3880,38,16,NULL),(3881,37,16,NULL),(3882,36,16,NULL),(3883,35,16,NULL),(3884,34,16,NULL),(3885,33,16,NULL),(3886,31,16,NULL),(3887,28,16,NULL),(3888,27,16,NULL),(3889,26,16,NULL),(3890,22,16,NULL),(3891,20,16,NULL),(3892,17,16,NULL),(3893,15,16,NULL),(3894,14,16,NULL),(3895,13,16,NULL),(3896,12,16,NULL),(3897,11,16,NULL),(3898,9,16,NULL),(3899,7,16,NULL),(3900,4,16,NULL),(3901,3,16,NULL),(3902,1,16,NULL),(3903,3484,19,NULL),(3904,3632,19,NULL),(3905,3535,19,NULL),(3906,3624,19,NULL),(3907,3584,19,NULL),(3908,3469,19,NULL),(3909,3493,19,NULL),(3910,3444,19,NULL),(3911,3431,19,NULL),(3912,3525,19,NULL),(3913,3421,19,NULL),(3914,3765,19,NULL),(3915,3863,19,NULL),(3916,3904,19,NULL),(3917,3788,19,NULL),(3918,3914,19,NULL),(3919,3785,19,NULL),(3920,3452,19,NULL),(3921,3429,19,NULL),(3922,3422,19,NULL),(3923,3652,19,NULL),(3924,3464,19,NULL),(3925,3468,19,NULL),(3926,3908,19,NULL),(3927,3523,19,NULL),(3928,4746,19,NULL),(3929,3450,19,NULL),(3930,3417,19,NULL),(3931,3536,19,NULL),(3932,3750,19,NULL),(3933,3453,19,NULL),(3934,3680,19,NULL),(3935,3522,19,NULL),(3936,3667,19,NULL),(3937,3419,19,NULL),(3938,4920,19,NULL),(3939,3579,19,NULL),(3940,5024,19,NULL),(3941,3769,19,NULL),(3942,3465,19,NULL),(3943,4850,19,NULL),(3944,3611,19,NULL),(3945,3472,19,NULL),(3946,5256,19,NULL),(3947,5768,19,NULL),(3948,4443,19,NULL),(3949,4210,19,NULL),(3950,4161,19,NULL),(3951,4587,19,NULL),(3952,3740,19,NULL),(3953,3618,19,NULL),(3954,3435,19,NULL),(3955,3623,19,NULL),(3956,4903,19,NULL),(3957,3739,19,NULL),(3958,5472,19,NULL),(3959,3459,19,NULL),(3960,3504,19,NULL),(3961,3483,19,NULL),(3962,4028,19,NULL),(3963,3762,19,NULL),(3964,3669,19,NULL),(3965,3749,19,NULL),(3966,5009,19,NULL),(3967,3595,19,NULL),(3968,4934,19,NULL),(3969,4612,19,NULL),(3970,4032,19,NULL),(3971,3833,19,NULL),(3972,4170,19,NULL),(3973,4423,19,NULL),(3974,4217,19,NULL),(3975,5043,19,NULL),(3976,3948,19,NULL),(3977,4383,19,NULL),(3978,3564,19,NULL),(3979,3512,19,NULL),(3980,3436,19,NULL),(3981,3953,19,NULL),(3982,3531,19,NULL),(3983,3556,19,NULL),(3984,3585,19,NULL),(3985,3610,19,NULL),(3986,3823,19,NULL),(3987,3486,19,NULL),(3988,3593,19,NULL),(3989,3731,19,NULL),(3990,3642,19,NULL),(3991,3418,19,NULL),(3992,3424,19,NULL),(3993,3416,19,NULL),(3994,3837,19,NULL),(3995,3507,19,NULL),(3996,4129,19,NULL),(3997,3474,19,NULL),(3998,3760,19,NULL),(3999,4293,19,NULL),(4000,4075,19,NULL),(4001,3578,19,NULL),(4002,3425,19,NULL),(4003,3647,19,NULL),(4004,3423,19,NULL),(4005,3644,19,NULL),(4006,3613,19,NULL),(4007,5962,19,NULL),(4008,4215,19,NULL),(4009,3514,19,NULL),(4010,4073,19,NULL),(4011,3793,19,NULL),(4012,4646,19,NULL),(4013,3813,19,NULL),(4014,4089,19,NULL),(4015,3668,19,NULL),(4016,4668,19,NULL),(4017,4753,19,NULL),(4018,3640,19,NULL),(4019,4769,19,NULL),(4020,3700,19,NULL),(4021,4429,19,NULL),(4022,5641,19,NULL),(4023,3999,19,NULL),(4024,4045,19,NULL),(4025,5476,19,NULL),(4026,3802,19,NULL),(4027,4012,19,NULL),(4028,4242,19,NULL),(4029,4582,19,NULL),(4030,3763,19,NULL),(4031,3843,19,NULL),(4032,4620,19,NULL),(4033,4588,19,NULL),(4034,16579,19,NULL),(4035,16580,19,NULL),(4036,16556,19,NULL),(4037,16574,19,NULL),(4038,16550,19,NULL),(4039,3392,19,NULL),(4040,3340,19,NULL),(4041,3342,19,NULL),(4042,3341,19,NULL),(4043,3345,19,NULL),(4044,3360,19,NULL),(4045,3318,19,NULL),(4046,3300,19,NULL),(4047,3285,19,NULL),(4048,3289,19,NULL),(4049,3280,19,NULL),(4050,3286,19,NULL),(4051,3295,19,NULL),(4052,3271,19,NULL),(4053,3325,19,NULL),(4054,3194,19,NULL),(4055,3211,19,NULL),(4056,3174,19,NULL),(4057,3151,19,NULL),(4058,3158,19,NULL),(4059,3146,19,NULL),(4060,3110,19,NULL),(4061,3099,19,NULL),(4062,3066,19,NULL),(4063,3028,19,NULL),(4064,3042,19,NULL),(4065,3005,19,NULL),(4066,2974,19,NULL),(4067,2942,19,NULL),(4068,2914,19,NULL),(4069,2894,19,NULL),(4070,2848,19,NULL),(4071,2824,19,NULL),(4072,2785,19,NULL),(4073,2798,19,NULL),(4074,2778,19,NULL),(4075,2685,19,NULL),(4076,2683,19,NULL),(4077,2656,19,NULL),(4078,2657,19,NULL),(4079,2658,19,NULL),(4080,2652,19,NULL),(4081,2574,19,NULL),(4082,2559,19,NULL),(4083,2661,19,NULL),(4084,2549,19,NULL),(4085,2608,19,NULL),(4086,2579,19,NULL),(4087,2545,19,NULL),(4088,2535,19,NULL),(4089,2529,19,NULL),(4090,2498,19,NULL),(4091,2486,19,NULL),(4092,2485,19,NULL),(4093,2469,19,NULL),(4094,2461,19,NULL),(4095,2425,19,NULL),(4096,2433,19,NULL),(4097,2418,19,NULL),(4098,2410,19,NULL),(4099,2415,19,NULL),(4100,2406,19,NULL),(4101,2404,19,NULL),(4102,2396,19,NULL),(4103,2342,19,NULL),(4104,2390,19,NULL),(4105,2381,19,NULL),(4106,2379,19,NULL),(4107,2374,19,NULL),(4108,2367,19,NULL),(4109,2360,19,NULL),(4110,2359,19,NULL),(4111,2325,19,NULL),(4112,2299,19,NULL),(4113,2236,19,NULL),(4114,2235,19,NULL),(4115,2270,19,NULL),(4116,2257,19,NULL),(4117,2260,19,NULL),(4118,2221,19,NULL),(4119,2220,19,NULL),(4120,2208,19,NULL),(4121,2181,19,NULL),(4122,2185,19,NULL),(4123,2149,19,NULL),(4124,2161,19,NULL),(4125,2133,19,NULL),(4126,2125,19,NULL),(4127,2106,19,NULL),(4128,2114,19,NULL),(4129,2044,19,NULL),(4130,2053,19,NULL),(4131,2037,19,NULL),(4132,2024,19,NULL),(4133,2022,19,NULL),(4134,2000,19,NULL),(4135,1971,19,NULL),(4136,1980,19,NULL),(4137,1979,19,NULL),(4138,1991,19,NULL),(4139,1967,19,NULL),(4140,1945,19,NULL),(4141,1930,19,NULL),(4142,1929,19,NULL),(4143,1920,19,NULL),(4144,1899,19,NULL),(4145,1894,19,NULL),(4146,1863,19,NULL),(4147,1861,19,NULL),(4148,1839,19,NULL),(4149,1837,19,NULL),(4150,1832,19,NULL),(4151,1844,19,NULL),(4152,1822,19,NULL),(4153,1817,19,NULL),(4154,1816,19,NULL),(4155,1800,19,NULL),(4156,1791,19,NULL),(4157,1790,19,NULL),(4158,1769,19,NULL),(4159,1768,19,NULL),(4160,1752,19,NULL),(4161,1749,19,NULL),(4162,1748,19,NULL),(4163,1732,19,NULL),(4164,1688,19,NULL),(4165,1672,19,NULL),(4166,1684,19,NULL),(4167,1662,19,NULL),(4168,1657,19,NULL),(4169,1647,19,NULL),(4170,1652,19,NULL),(4171,1631,19,NULL),(4172,1636,19,NULL),(4173,1614,19,NULL),(4174,1593,19,NULL),(4175,1582,19,NULL),(4176,1588,19,NULL),(4177,1572,19,NULL),(4178,1552,19,NULL),(4179,1528,19,NULL),(4180,1523,19,NULL),(4181,1509,19,NULL),(4182,1486,19,NULL),(4183,1480,19,NULL),(4184,1470,19,NULL),(4185,1456,19,NULL),(4186,1462,19,NULL),(4187,1431,19,NULL),(4188,1408,19,NULL),(4189,1389,19,NULL),(4190,1400,19,NULL),(4191,1380,19,NULL),(4192,1365,19,NULL),(4193,1352,19,NULL),(4194,1351,19,NULL),(4195,1323,19,NULL),(4196,1343,19,NULL),(4197,1310,19,NULL),(4198,1282,19,NULL),(4199,2215,19,NULL),(4200,1261,19,NULL),(4201,1254,19,NULL),(4202,1248,19,NULL),(4203,1227,19,NULL),(4204,2202,19,NULL),(4205,1514,19,NULL),(4206,1207,19,NULL),(4207,1550,19,NULL),(4208,1331,19,NULL),(4209,1302,19,NULL),(4210,1314,19,NULL),(4211,1299,19,NULL),(4212,1109,19,NULL),(4213,1108,19,NULL),(4214,1094,19,NULL),(4215,1091,19,NULL),(4216,1079,19,NULL),(4217,1071,19,NULL),(4218,1161,19,NULL),(4219,1038,19,NULL),(4220,1029,19,NULL),(4221,1020,19,NULL),(4222,1014,19,NULL),(4223,1011,19,NULL),(4224,1009,19,NULL),(4225,1002,19,NULL),(4226,994,19,NULL),(4227,980,19,NULL),(4228,978,19,NULL),(4229,977,19,NULL),(4230,974,19,NULL),(4231,509,19,NULL),(4232,965,19,NULL),(4233,938,19,NULL),(4234,930,19,NULL),(4235,922,19,NULL),(4236,912,19,NULL),(4237,905,19,NULL),(4238,904,19,NULL),(4239,884,19,NULL),(4240,881,19,NULL),(4241,875,19,NULL),(4242,872,19,NULL),(4243,848,19,NULL),(4244,841,19,NULL),(4245,802,19,NULL),(4246,797,19,NULL),(4247,791,19,NULL),(4248,785,19,NULL),(4249,784,19,NULL),(4250,704,19,NULL),(4251,771,19,NULL),(4252,746,19,NULL),(4253,743,19,NULL),(4254,709,19,NULL),(4255,733,19,NULL),(4256,724,19,NULL),(4257,713,19,NULL),(4258,695,19,NULL),(4259,684,19,NULL),(4260,643,19,NULL),(4261,637,19,NULL),(4262,606,19,NULL),(4263,605,19,NULL),(4264,599,19,NULL),(4265,561,19,NULL),(4266,560,19,NULL),(4267,557,19,NULL),(4268,547,19,NULL),(4269,542,19,NULL),(4270,538,19,NULL),(4271,523,19,NULL),(4272,521,19,NULL),(4273,515,19,NULL),(4274,513,19,NULL),(4275,494,19,NULL),(4276,485,19,NULL),(4277,476,19,NULL),(4278,455,19,NULL),(4279,453,19,NULL),(4280,451,19,NULL),(4281,448,19,NULL),(4282,442,19,NULL),(4283,441,19,NULL),(4284,438,19,NULL),(4285,434,19,NULL),(4286,424,19,NULL),(4287,415,19,NULL),(4288,414,19,NULL),(4289,412,19,NULL),(4290,409,19,NULL),(4291,404,19,NULL),(4292,392,19,NULL),(4293,389,19,NULL),(4294,374,19,NULL),(4295,371,19,NULL),(4296,367,19,NULL),(4297,363,19,NULL),(4298,350,19,NULL),(4299,347,19,NULL),(4300,345,19,NULL),(4301,344,19,NULL),(4302,342,19,NULL),(4303,326,19,NULL),(4304,319,19,NULL),(4305,303,19,NULL),(4306,287,19,NULL),(4307,283,19,NULL),(4308,275,19,NULL),(4309,268,19,NULL),(4310,257,19,NULL),(4311,242,19,NULL),(4312,240,19,NULL),(4313,239,19,NULL),(4314,238,19,NULL),(4315,237,19,NULL),(4316,231,19,NULL),(4317,229,19,NULL),(4318,226,19,NULL),(4319,222,19,NULL),(4320,219,19,NULL),(4321,217,19,NULL),(4322,216,19,NULL),(4323,210,19,NULL),(4324,209,19,NULL),(4325,207,19,NULL),(4326,206,19,NULL),(4327,205,19,NULL),(4328,204,19,NULL),(4329,201,19,NULL),(4330,200,19,NULL),(4331,199,19,NULL),(4332,198,19,NULL),(4333,191,19,NULL),(4334,189,19,NULL),(4335,172,19,NULL),(4336,169,19,NULL),(4337,162,19,NULL),(4338,154,19,NULL),(4339,153,19,NULL),(4340,151,19,NULL),(4341,145,19,NULL),(4342,144,19,NULL),(4343,137,19,NULL),(4344,136,19,NULL),(4345,134,19,NULL),(4346,131,19,NULL),(4347,130,19,NULL),(4348,125,19,NULL),(4349,122,19,NULL),(4350,121,19,NULL),(4351,119,19,NULL),(4352,118,19,NULL),(4353,113,19,NULL),(4354,112,19,NULL),(4355,111,19,NULL),(4356,107,19,NULL),(4357,106,19,NULL),(4358,105,19,NULL),(4359,104,19,NULL),(4360,103,19,NULL),(4361,102,19,NULL),(4362,100,19,NULL),(4363,94,19,NULL),(4364,90,19,NULL),(4365,88,19,NULL),(4366,81,19,NULL),(4367,79,19,NULL),(4368,78,19,NULL),(4369,77,19,NULL),(4370,75,19,NULL),(4371,74,19,NULL),(4372,70,19,NULL),(4373,69,19,NULL),(4374,67,19,NULL),(4375,66,19,NULL),(4376,64,19,NULL),(4377,63,19,NULL),(4378,62,19,NULL),(4379,60,19,NULL),(4380,59,19,NULL),(4381,58,19,NULL),(4382,56,19,NULL),(4383,55,19,NULL),(4384,54,19,NULL),(4385,53,19,NULL),(4386,52,19,NULL),(4387,51,19,NULL),(4388,50,19,NULL),(4389,49,19,NULL),(4390,48,19,NULL),(4391,47,19,NULL),(4392,46,19,NULL),(4393,43,19,NULL),(4394,42,19,NULL),(4395,40,19,NULL),(4396,39,19,NULL),(4397,37,19,NULL),(4398,36,19,NULL),(4399,35,19,NULL),(4400,34,19,NULL),(4401,33,19,NULL),(4402,31,19,NULL),(4403,29,19,NULL),(4404,28,19,NULL),(4405,27,19,NULL),(4406,26,19,NULL),(4407,22,19,NULL),(4408,21,19,NULL),(4409,20,19,NULL),(4410,17,19,NULL),(4411,14,19,NULL),(4412,13,19,NULL),(4413,12,19,NULL),(4414,11,19,NULL),(4415,9,19,NULL),(4416,7,19,NULL),(4417,5,19,NULL),(4418,4,19,NULL),(4419,3,19,NULL),(4420,1,19,NULL),(4421,16620,20,NULL),(4422,16634,20,NULL),(4423,16610,20,NULL),(4424,16601,20,NULL),(4425,16625,20,NULL),(4426,16579,20,NULL),(4427,16560,20,NULL),(4428,16641,20,NULL),(4429,16556,20,NULL),(4430,16640,20,NULL),(4431,16545,20,NULL),(4432,16574,20,NULL),(4433,16550,20,NULL),(4434,3411,20,NULL),(4435,3392,20,NULL),(4436,3370,20,NULL),(4437,3341,20,NULL),(4438,3345,20,NULL),(4439,3330,20,NULL),(4440,3354,20,NULL),(4441,3300,20,NULL),(4442,3304,20,NULL),(4443,3334,20,NULL),(4444,3285,20,NULL),(4445,3289,20,NULL),(4446,3270,20,NULL),(4447,3280,20,NULL),(4448,3286,20,NULL),(4449,3295,20,NULL),(4450,3325,20,NULL),(4451,3217,20,NULL),(4452,3208,20,NULL),(4453,3223,20,NULL),(4454,3211,20,NULL),(4455,3163,20,NULL),(4456,3174,20,NULL),(4457,3160,20,NULL),(4458,3151,20,NULL),(4459,3158,20,NULL),(4460,3152,20,NULL),(4461,3146,20,NULL),(4462,3107,20,NULL),(4463,3105,20,NULL),(4464,3100,20,NULL),(4465,3066,20,NULL),(4466,3043,20,NULL),(4467,3042,20,NULL),(4468,3011,20,NULL),(4469,3016,20,NULL),(4470,2980,20,NULL),(4471,2965,20,NULL),(4472,2938,20,NULL),(4473,2932,20,NULL),(4474,2914,20,NULL),(4475,2859,20,NULL),(4476,2824,20,NULL),(4477,2807,20,NULL),(4478,2789,20,NULL),(4479,2699,20,NULL),(4480,2696,20,NULL),(4481,2684,20,NULL),(4482,2685,20,NULL),(4483,2657,20,NULL),(4484,2658,20,NULL),(4485,2707,20,NULL),(4486,2678,20,NULL),(4487,2610,20,NULL),(4488,2574,20,NULL),(4489,2570,20,NULL),(4490,2559,20,NULL),(4491,2641,20,NULL),(4492,2608,20,NULL),(4493,2587,20,NULL),(4494,2579,20,NULL),(4495,2583,20,NULL),(4496,2530,20,NULL),(4497,2501,20,NULL),(4498,2491,20,NULL),(4499,2490,20,NULL),(4500,2486,20,NULL),(4501,2463,20,NULL),(4502,2460,20,NULL),(4503,2458,20,NULL),(4504,2456,20,NULL),(4505,2432,20,NULL),(4506,2419,20,NULL),(4507,2418,20,NULL),(4508,2416,20,NULL),(4509,2414,20,NULL),(4510,2406,20,NULL),(4511,2396,20,NULL),(4512,2342,20,NULL),(4513,2381,20,NULL),(4514,2374,20,NULL),(4515,2364,20,NULL),(4516,2360,20,NULL),(4517,2326,20,NULL),(4518,2284,20,NULL),(4519,2290,20,NULL),(4520,2270,20,NULL),(4521,2275,20,NULL),(4522,2260,20,NULL),(4523,2221,20,NULL),(4524,2220,20,NULL),(4525,2208,20,NULL),(4526,2181,20,NULL),(4527,2185,20,NULL),(4528,2169,20,NULL),(4529,2161,20,NULL),(4530,2134,20,NULL),(4531,2126,20,NULL),(4532,2125,20,NULL),(4533,2109,20,NULL),(4534,2106,20,NULL),(4535,2100,20,NULL),(4536,2044,20,NULL),(4537,2053,20,NULL),(4538,2028,20,NULL),(4539,2038,20,NULL),(4540,2037,20,NULL),(4541,2017,20,NULL),(4542,2023,20,NULL),(4543,2022,20,NULL),(4544,2001,20,NULL),(4545,2000,20,NULL),(4546,1963,20,NULL),(4547,1962,20,NULL),(4548,1946,20,NULL),(4549,1945,20,NULL),(4550,1937,20,NULL),(4551,1930,20,NULL),(4552,1929,20,NULL),(4553,1942,20,NULL),(4554,1941,20,NULL),(4555,1926,20,NULL),(4556,1905,20,NULL),(4557,1898,20,NULL),(4558,1899,20,NULL),(4559,1910,20,NULL),(4560,1894,20,NULL),(4561,1817,20,NULL),(4562,1800,20,NULL),(4563,1814,20,NULL),(4564,1813,20,NULL),(4565,1791,20,NULL),(4566,1790,20,NULL),(4567,1769,20,NULL),(4568,1780,20,NULL),(4569,1753,20,NULL),(4570,1752,20,NULL),(4571,1765,20,NULL),(4572,1695,20,NULL),(4573,1701,20,NULL),(4574,1684,20,NULL),(4575,1663,20,NULL),(4576,1647,20,NULL),(4577,1671,20,NULL),(4578,1593,20,NULL),(4579,1590,20,NULL),(4580,1568,20,NULL),(4581,1572,20,NULL),(4582,1551,20,NULL),(4583,1545,20,NULL),(4584,1539,20,NULL),(4585,1518,20,NULL),(4586,1512,20,NULL),(4587,1497,20,NULL),(4588,1508,20,NULL),(4589,1493,20,NULL),(4590,1492,20,NULL),(4591,1456,20,NULL),(4592,1460,20,NULL),(4593,1422,20,NULL),(4594,1408,20,NULL),(4595,1400,20,NULL),(4596,1381,20,NULL),(4597,1380,20,NULL),(4598,1367,20,NULL),(4599,1365,20,NULL),(4600,1352,20,NULL),(4601,1351,20,NULL),(4602,1371,20,NULL),(4603,1346,20,NULL),(4604,1334,20,NULL),(4605,1343,20,NULL),(4606,1342,20,NULL),(4607,1319,20,NULL),(4608,1310,20,NULL),(4609,2269,20,NULL),(4610,1293,20,NULL),(4611,1290,20,NULL),(4612,1282,20,NULL),(4613,1277,20,NULL),(4614,2215,20,NULL),(4615,1248,20,NULL),(4616,1726,20,NULL),(4617,1233,20,NULL),(4618,1514,20,NULL),(4619,1202,20,NULL),(4620,1405,20,NULL),(4621,2139,20,NULL),(4622,1957,20,NULL),(4623,1192,20,NULL),(4624,1331,20,NULL),(4625,1140,20,NULL),(4626,1289,20,NULL),(4627,1109,20,NULL),(4628,1106,20,NULL),(4629,1095,20,NULL),(4630,1094,20,NULL),(4631,1091,20,NULL),(4632,1054,20,NULL),(4633,1029,20,NULL),(4634,1020,20,NULL),(4635,1019,20,NULL),(4636,1011,20,NULL),(4637,1009,20,NULL),(4638,994,20,NULL),(4639,992,20,NULL),(4640,977,20,NULL),(4641,509,20,NULL),(4642,962,20,NULL),(4643,959,20,NULL),(4644,951,20,NULL),(4645,947,20,NULL),(4646,931,20,NULL),(4647,930,20,NULL),(4648,921,20,NULL),(4649,916,20,NULL),(4650,912,20,NULL),(4651,904,20,NULL),(4652,888,20,NULL),(4653,885,20,NULL),(4654,884,20,NULL),(4655,877,20,NULL),(4656,876,20,NULL),(4657,875,20,NULL),(4658,874,20,NULL),(4659,860,20,NULL),(4660,852,20,NULL),(4661,848,20,NULL),(4662,846,20,NULL),(4663,841,20,NULL),(4664,840,20,NULL),(4665,641,20,NULL),(4666,827,20,NULL),(4667,819,20,NULL),(4668,806,20,NULL),(4669,802,20,NULL),(4670,798,20,NULL),(4671,797,20,NULL),(4672,796,20,NULL),(4673,791,20,NULL),(4674,787,20,NULL),(4675,785,20,NULL),(4676,704,20,NULL),(4677,703,20,NULL),(4678,771,20,NULL),(4679,767,20,NULL),(4680,766,20,NULL),(4681,590,20,NULL),(4682,429,20,NULL),(4683,744,20,NULL),(4684,731,20,NULL),(4685,729,20,NULL),(4686,725,20,NULL),(4687,721,20,NULL),(4688,719,20,NULL),(4689,713,20,NULL),(4690,695,20,NULL),(4691,693,20,NULL),(4692,692,20,NULL),(4693,684,20,NULL),(4694,680,20,NULL),(4695,672,20,NULL),(4696,670,20,NULL),(4697,665,20,NULL),(4698,664,20,NULL),(4699,658,20,NULL),(4700,650,20,NULL),(4701,646,20,NULL),(4702,643,20,NULL),(4703,633,20,NULL),(4704,632,20,NULL),(4705,624,20,NULL),(4706,9852,16,NULL),(4707,605,20,NULL),(4708,592,20,NULL),(4709,13380,16,NULL),(4710,567,20,NULL),(4711,564,20,NULL),(4712,10487,16,NULL),(4713,561,20,NULL),(4714,560,20,NULL),(4715,13566,16,NULL),(4716,547,20,NULL),(4717,542,20,NULL),(4718,14077,16,NULL),(4719,540,20,NULL),(4720,539,20,NULL),(4721,9504,16,NULL),(4722,535,20,NULL),(4723,515,20,NULL),(4724,12269,16,NULL),(4725,513,20,NULL),(4726,498,20,NULL),(4727,6727,16,NULL),(4728,496,20,NULL),(4729,494,20,NULL),(4730,486,20,NULL),(4731,476,20,NULL),(4732,462,20,NULL),(4733,461,20,NULL),(4734,455,20,NULL),(4735,453,20,NULL),(4736,451,20,NULL),(4737,445,20,NULL),(4738,443,20,NULL),(4739,442,20,NULL),(4740,441,20,NULL),(4741,440,20,NULL),(4742,438,20,NULL),(4743,434,20,NULL),(4744,432,20,NULL),(4745,416,20,NULL),(4746,410,20,NULL),(4747,409,20,NULL),(4748,397,20,NULL),(4749,390,20,NULL),(4750,389,20,NULL),(4751,386,20,NULL),(4752,383,20,NULL),(4753,378,20,NULL),(4754,374,20,NULL),(4755,371,20,NULL),(4756,367,20,NULL),(4757,363,20,NULL),(4758,357,20,NULL),(4759,349,20,NULL),(4760,347,20,NULL),(4761,342,20,NULL),(4762,338,20,NULL),(4763,334,20,NULL),(4764,328,20,NULL),(4765,326,20,NULL),(4766,324,20,NULL),(4767,319,20,NULL),(4768,316,20,NULL),(4769,290,20,NULL),(4770,287,20,NULL),(4771,278,20,NULL),(4772,273,20,NULL),(4773,268,20,NULL),(4774,264,20,NULL),(4775,260,20,NULL),(4776,242,20,NULL),(4777,241,20,NULL),(4778,238,20,NULL),(4779,237,20,NULL),(4780,234,20,NULL),(4781,231,20,NULL),(4782,229,20,NULL),(4783,226,20,NULL),(4784,221,20,NULL),(4785,219,20,NULL),(4786,217,20,NULL),(4787,215,20,NULL),(4788,214,20,NULL),(4789,213,20,NULL),(4790,209,20,NULL),(4791,207,20,NULL),(4792,206,20,NULL),(4793,203,20,NULL),(4794,202,20,NULL),(4795,200,20,NULL),(4796,199,20,NULL),(4797,198,20,NULL),(4798,191,20,NULL),(4799,190,20,NULL),(4800,187,20,NULL),(4801,179,20,NULL),(4802,172,20,NULL),(4803,169,20,NULL),(4804,167,20,NULL),(4805,165,20,NULL),(4806,164,20,NULL),(4807,162,20,NULL),(4808,154,20,NULL),(4809,153,20,NULL),(4810,152,20,NULL),(4811,151,20,NULL),(4812,148,20,NULL),(4813,147,20,NULL),(4814,145,20,NULL),(4815,144,20,NULL),(4816,143,20,NULL),(4817,141,20,NULL),(4818,139,20,NULL),(4819,137,20,NULL),(4820,136,20,NULL),(4821,133,20,NULL),(4822,130,20,NULL),(4823,129,20,NULL),(4824,127,20,NULL),(4825,126,20,NULL),(4826,125,20,NULL),(4827,122,20,NULL),(4828,121,20,NULL),(4829,120,20,NULL),(4830,113,20,NULL),(4831,107,20,NULL),(4832,102,20,NULL),(4833,94,20,NULL),(4834,90,20,NULL),(4835,88,20,NULL),(4836,83,20,NULL),(4837,81,20,NULL),(4838,79,20,NULL),(4839,78,20,NULL),(4840,77,20,NULL),(4841,75,20,NULL),(4842,74,20,NULL),(4843,70,20,NULL),(4844,69,20,NULL),(4845,67,20,NULL),(4846,66,20,NULL),(4847,64,20,NULL),(4848,63,20,NULL),(4849,62,20,NULL),(4850,59,20,NULL),(4851,58,20,NULL),(4852,56,20,NULL),(4853,55,20,NULL),(4854,54,20,NULL),(4855,53,20,NULL),(4856,50,20,NULL),(4857,49,20,NULL),(4858,47,20,NULL),(4859,46,20,NULL),(4860,45,20,NULL),(4861,42,20,NULL),(4862,41,20,NULL),(4863,40,20,NULL),(4864,39,20,NULL),(4865,35,20,NULL),(4866,34,20,NULL),(4867,33,20,NULL),(4868,31,20,NULL),(4869,28,20,NULL),(4870,25,20,NULL),(4871,23,20,NULL),(4872,21,20,NULL),(4873,20,20,NULL),(4874,19,20,NULL),(4875,17,20,NULL),(4876,15,20,NULL),(4877,14,20,NULL),(4878,13,20,NULL),(4879,12,20,NULL),(4880,11,20,NULL),(4881,9,20,NULL),(4882,7,20,NULL),(4883,4,20,NULL),(4884,3,20,NULL),(4885,2,20,NULL),(4886,1,20,NULL),(4887,16620,18,NULL),(4888,16634,18,NULL),(4889,16649,18,NULL),(4890,16610,18,NULL),(4891,16635,18,NULL),(4892,16611,18,NULL),(4893,16595,18,NULL),(4894,16625,18,NULL),(4895,16579,18,NULL),(4896,16580,18,NULL),(4897,16560,18,NULL),(4898,16564,18,NULL),(4899,16556,18,NULL),(4900,16640,18,NULL),(4901,16545,18,NULL),(4902,16574,18,NULL),(4903,16645,18,NULL),(4904,16589,18,NULL),(4905,16550,18,NULL),(4906,3411,18,NULL),(4907,3392,18,NULL),(4908,3370,18,NULL),(4909,3394,18,NULL),(4910,3396,18,NULL),(4911,3379,18,NULL),(4912,3340,18,NULL),(4913,3345,18,NULL),(4914,3375,18,NULL),(4915,3349,18,NULL),(4916,3300,18,NULL),(4917,3285,18,NULL),(4918,3289,18,NULL),(4919,3309,18,NULL),(4920,3270,18,NULL),(4921,3280,18,NULL),(4922,3264,18,NULL),(4923,3274,18,NULL),(4924,3258,18,NULL),(4925,3295,18,NULL),(4926,3271,18,NULL),(4927,3259,18,NULL),(4928,3232,18,NULL),(4929,3191,18,NULL),(4930,3194,18,NULL),(4931,3206,18,NULL),(4932,3223,18,NULL),(4933,3211,18,NULL),(4934,3174,18,NULL),(4935,3160,18,NULL),(4936,3151,18,NULL),(4937,3110,18,NULL),(4938,3105,18,NULL),(4939,3079,18,NULL),(4940,3066,18,NULL),(4941,3046,18,NULL),(4942,3042,18,NULL),(4943,2965,18,NULL),(4944,2938,18,NULL),(4945,2873,18,NULL),(4946,2874,18,NULL),(4947,2843,18,NULL),(4948,2824,18,NULL),(4949,2780,18,NULL),(4950,2769,18,NULL),(4951,2696,18,NULL),(4952,2685,18,NULL),(4953,2683,18,NULL),(4954,2657,18,NULL),(4955,2658,18,NULL),(4956,2652,18,NULL),(4957,2678,18,NULL),(4958,2570,18,NULL),(4959,2558,18,NULL),(4960,2559,18,NULL),(4961,2661,18,NULL),(4962,2551,18,NULL),(4963,2594,18,NULL),(4964,2595,18,NULL),(4965,2579,18,NULL),(4966,2582,18,NULL),(4967,2544,18,NULL),(4968,2537,18,NULL),(4969,2535,18,NULL),(4970,2529,18,NULL),(4971,2523,18,NULL),(4972,2520,18,NULL),(4973,2541,18,NULL),(4974,2491,18,NULL),(4975,2486,18,NULL),(4976,2465,18,NULL),(4977,2460,18,NULL),(4978,2425,18,NULL),(4979,2429,18,NULL),(4980,2427,18,NULL),(4981,2415,18,NULL),(4982,2406,18,NULL),(4983,2396,18,NULL),(4984,2401,18,NULL),(4985,2342,18,NULL),(4986,2379,18,NULL),(4987,2375,18,NULL),(4988,2364,18,NULL),(4989,2367,18,NULL),(4990,2359,18,NULL),(4991,2326,18,NULL),(4992,2235,18,NULL),(4993,2283,18,NULL),(4994,2270,18,NULL),(4995,2239,18,NULL),(4996,2231,18,NULL),(4997,2220,18,NULL),(4998,2206,18,NULL),(4999,2180,18,NULL),(5000,2185,18,NULL),(5001,2177,18,NULL),(5002,2176,18,NULL),(5003,2149,18,NULL),(5004,2148,18,NULL),(5005,2161,18,NULL),(5006,2160,18,NULL),(5007,2133,18,NULL),(5008,2125,18,NULL),(5009,2131,18,NULL),(5010,2129,18,NULL),(5011,2109,18,NULL),(5012,2106,18,NULL),(5013,2116,18,NULL),(5014,2115,18,NULL),(5015,2053,18,NULL),(5016,2033,18,NULL),(5017,2038,18,NULL),(5018,2017,18,NULL),(5019,2022,18,NULL),(5020,1971,18,NULL),(5021,1985,18,NULL),(5022,1980,18,NULL),(5023,1952,18,NULL),(5024,1945,18,NULL),(5025,1930,18,NULL),(5026,1942,18,NULL),(5027,1903,18,NULL),(5028,1899,18,NULL),(5029,1910,18,NULL),(5030,1863,18,NULL),(5031,1837,18,NULL),(5032,1823,18,NULL),(5033,1822,18,NULL),(5034,1800,18,NULL),(5035,1792,18,NULL),(5036,1790,18,NULL),(5037,1796,18,NULL),(5038,1768,18,NULL),(5039,1780,18,NULL),(5040,1760,18,NULL),(5041,1752,18,NULL),(5042,1765,18,NULL),(5043,1749,18,NULL),(5044,1748,18,NULL),(5045,1689,18,NULL),(5046,1688,18,NULL),(5047,1684,18,NULL),(5048,1665,18,NULL),(5049,1647,18,NULL),(5050,1641,18,NULL),(5051,1629,18,NULL),(5052,1636,18,NULL),(5053,1614,18,NULL),(5054,1552,18,NULL),(5055,1539,18,NULL),(5056,1518,18,NULL),(5057,1512,18,NULL),(5058,1497,18,NULL),(5059,1509,18,NULL),(5060,1486,18,NULL),(5061,1482,18,NULL),(5062,1470,18,NULL),(5063,1455,18,NULL),(5064,1460,18,NULL),(5065,1422,18,NULL),(5066,1408,18,NULL),(5067,1400,18,NULL),(5068,1381,18,NULL),(5069,1380,18,NULL),(5070,1352,18,NULL),(5071,1338,18,NULL),(5072,1358,18,NULL),(5073,1356,18,NULL),(5074,1323,18,NULL),(5075,1342,18,NULL),(5076,2269,18,NULL),(5077,1295,18,NULL),(5078,1283,18,NULL),(5079,1281,18,NULL),(5080,1277,18,NULL),(5081,1267,18,NULL),(5082,2215,18,NULL),(5083,1261,18,NULL),(5084,1254,18,NULL),(5085,1726,18,NULL),(5086,2273,18,NULL),(5087,1207,18,NULL),(5088,1957,18,NULL),(5089,1935,18,NULL),(5090,1331,18,NULL),(5091,1128,18,NULL),(5092,1089,18,NULL),(5093,1079,18,NULL),(5094,1051,18,NULL),(5095,1046,18,NULL),(5096,1160,18,NULL),(5097,1029,18,NULL),(5098,1021,18,NULL),(5099,1020,18,NULL),(5100,1011,18,NULL),(5101,1002,18,NULL),(5102,997,18,NULL),(5103,994,18,NULL),(5104,978,18,NULL),(5105,977,18,NULL),(5106,509,18,NULL),(5107,962,18,NULL),(5108,930,18,NULL),(5109,922,18,NULL),(5110,921,18,NULL),(5111,912,18,NULL),(5112,905,18,NULL),(5113,884,18,NULL),(5114,881,18,NULL),(5115,877,18,NULL),(5116,876,18,NULL),(5117,875,18,NULL),(5118,860,18,NULL),(5119,848,18,NULL),(5120,846,18,NULL),(5121,841,18,NULL),(5122,832,18,NULL),(5123,804,18,NULL),(5124,802,18,NULL),(5125,798,18,NULL),(5126,797,18,NULL),(5127,796,18,NULL),(5128,704,18,NULL),(5129,771,18,NULL),(5130,769,18,NULL),(5131,590,18,NULL),(5132,763,18,NULL),(5133,748,18,NULL),(5134,747,18,NULL),(5135,746,18,NULL),(5136,744,18,NULL),(5137,733,18,NULL),(5138,724,18,NULL),(5139,678,18,NULL),(5140,672,18,NULL),(5141,650,18,NULL),(5142,646,18,NULL),(5143,643,18,NULL),(5144,599,18,NULL),(5145,561,18,NULL),(5146,560,18,NULL),(5147,557,18,NULL),(5148,547,18,NULL),(5149,543,18,NULL),(5150,542,18,NULL),(5151,540,18,NULL),(5152,520,18,NULL),(5153,507,18,NULL),(5154,506,18,NULL),(5155,503,18,NULL),(5156,500,18,NULL),(5157,496,18,NULL),(5158,493,18,NULL),(5159,485,18,NULL),(5160,476,18,NULL),(5161,455,18,NULL),(5162,451,18,NULL),(5163,448,18,NULL),(5164,442,18,NULL),(5165,441,18,NULL),(5166,438,18,NULL),(5167,435,18,NULL),(5168,416,18,NULL),(5169,415,18,NULL),(5170,412,18,NULL),(5171,410,18,NULL),(5172,409,18,NULL),(5173,397,18,NULL),(5174,392,18,NULL),(5175,389,18,NULL),(5176,387,18,NULL),(5177,386,18,NULL),(5178,378,18,NULL),(5179,374,18,NULL),(5180,371,18,NULL),(5181,367,18,NULL),(5182,363,18,NULL),(5183,350,18,NULL),(5184,349,18,NULL),(5185,345,18,NULL),(5186,344,18,NULL),(5187,342,18,NULL),(5188,338,18,NULL),(5189,328,18,NULL),(5190,326,18,NULL),(5191,322,18,NULL),(5192,300,18,NULL),(5193,299,18,NULL),(5194,297,18,NULL),(5195,290,18,NULL),(5196,287,18,NULL),(5197,283,18,NULL),(5198,268,18,NULL),(5199,263,18,NULL),(5200,260,18,NULL),(5201,258,18,NULL),(5202,257,18,NULL),(5203,242,18,NULL),(5204,240,18,NULL),(5205,238,18,NULL),(5206,237,18,NULL),(5207,236,18,NULL),(5208,234,18,NULL),(5209,231,18,NULL),(5210,230,18,NULL),(5211,229,18,NULL),(5212,226,18,NULL),(5213,225,18,NULL),(5214,221,18,NULL),(5215,219,18,NULL),(5216,217,18,NULL),(5217,213,18,NULL),(5218,210,18,NULL),(5219,209,18,NULL),(5220,207,18,NULL),(5221,206,18,NULL),(5222,205,18,NULL),(5223,204,18,NULL),(5224,202,18,NULL),(5225,201,18,NULL),(5226,200,18,NULL),(5227,199,18,NULL),(5228,198,18,NULL),(5229,191,18,NULL),(5230,190,18,NULL),(5231,189,18,NULL),(5232,172,18,NULL),(5233,169,18,NULL),(5234,162,18,NULL),(5235,153,18,NULL),(5236,152,18,NULL),(5237,151,18,NULL),(5238,145,18,NULL),(5239,144,18,NULL),(5240,142,18,NULL),(5241,141,18,NULL),(5242,137,18,NULL),(5243,136,18,NULL),(5244,134,18,NULL),(5245,128,18,NULL),(5246,125,18,NULL),(5247,124,18,NULL),(5248,122,18,NULL),(5249,121,18,NULL),(5250,119,18,NULL),(5251,118,18,NULL),(5252,112,18,NULL),(5253,111,18,NULL),(5254,110,18,NULL),(5255,104,18,NULL),(5256,102,18,NULL),(5257,101,18,NULL),(5258,100,18,NULL),(5259,98,18,NULL),(5260,94,18,NULL),(5261,89,18,NULL),(5262,88,18,NULL),(5263,84,18,NULL),(5264,83,18,NULL),(5265,82,18,NULL),(5266,81,18,NULL),(5267,80,18,NULL),(5268,78,18,NULL),(5269,75,18,NULL),(5270,74,18,NULL),(5271,73,18,NULL),(5272,70,18,NULL),(5273,69,18,NULL),(5274,67,18,NULL),(5275,66,18,NULL),(5276,61,18,NULL),(5277,59,18,NULL),(5278,58,18,NULL),(5279,56,18,NULL),(5280,55,18,NULL),(5281,54,18,NULL),(5282,53,18,NULL),(5283,50,18,NULL),(5284,49,18,NULL),(5285,48,18,NULL),(5286,46,18,NULL),(5287,43,18,NULL),(5288,42,18,NULL),(5289,41,18,NULL),(5290,39,18,NULL),(5291,35,18,NULL),(5292,34,18,NULL),(5293,33,18,NULL),(5294,31,18,NULL),(5295,29,18,NULL),(5296,28,18,NULL),(5297,27,18,NULL),(5298,26,18,NULL),(5299,21,18,NULL),(5300,20,18,NULL),(5301,19,18,NULL),(5302,18,18,NULL),(5303,16,18,NULL),(5304,15,18,NULL),(5305,14,18,NULL),(5306,13,18,NULL),(5307,12,18,NULL),(5308,11,18,NULL),(5309,9,18,NULL),(5310,7,18,NULL),(5311,5,18,NULL),(5312,4,18,NULL),(5313,3,18,NULL),(5314,2,18,NULL),(5315,1,18,NULL),(5316,3532,20,NULL),(5317,3563,20,NULL),(5318,3436,20,NULL),(5319,3503,20,NULL),(5320,3466,20,NULL),(5321,3531,20,NULL),(5322,3556,20,NULL),(5323,3585,20,NULL),(5324,3593,20,NULL),(5325,3476,20,NULL),(5326,4006,20,NULL),(5327,3918,20,NULL),(5328,3513,20,NULL),(5329,3445,20,NULL),(5330,3418,20,NULL),(5331,3416,20,NULL),(5332,3511,20,NULL),(5333,4529,20,NULL),(5334,4095,20,NULL),(5335,3492,20,NULL),(5336,3837,20,NULL),(5337,4000,20,NULL),(5338,3467,20,NULL),(5339,3437,20,NULL),(5340,3578,20,NULL),(5341,3481,20,NULL),(5342,3440,20,NULL),(5343,3879,20,NULL),(5344,3425,20,NULL),(5345,3759,20,NULL),(5346,3850,20,NULL),(5347,3448,20,NULL),(5348,3478,20,NULL),(5349,3690,20,NULL),(5350,4507,20,NULL),(5351,3488,20,NULL),(5352,3613,20,NULL),(5353,3514,20,NULL),(5354,3441,20,NULL),(5355,4048,20,NULL),(5356,4224,20,NULL),(5357,5109,20,NULL),(5358,3766,20,NULL),(5359,4681,20,NULL),(5360,4753,20,NULL),(5361,4401,20,NULL),(5362,3700,20,NULL),(5363,3999,20,NULL),(5364,4484,20,NULL),(5365,5464,20,NULL),(5366,4029,20,NULL),(5367,6351,20,NULL),(5368,6362,20,NULL),(5369,3443,20,NULL),(5370,4582,20,NULL),(5371,3951,20,NULL),(5372,4620,20,NULL),(5373,4588,20,NULL),(5374,3484,20,NULL),(5375,3574,20,NULL),(5376,3469,20,NULL),(5377,3493,20,NULL),(5378,3444,20,NULL),(5379,3452,20,NULL),(5380,3417,20,NULL),(5381,3473,20,NULL),(5382,3621,20,NULL),(5383,3472,20,NULL),(5384,4443,20,NULL),(5385,4210,20,NULL),(5386,4587,20,NULL),(5387,16620,23,NULL),(5388,16634,23,NULL),(5389,16610,23,NULL),(5390,16621,23,NULL),(5391,16595,23,NULL),(5392,16625,23,NULL),(5393,16579,23,NULL),(5394,16580,23,NULL),(5395,16560,23,NULL),(5396,16564,23,NULL),(5397,16641,23,NULL),(5398,16556,23,NULL),(5399,16640,23,NULL),(5400,16545,23,NULL),(5401,16574,23,NULL),(5402,16645,23,NULL),(5403,16589,23,NULL),(5404,16550,23,NULL),(5405,3411,23,NULL),(5406,3402,23,NULL),(5407,3392,23,NULL),(5408,3370,23,NULL),(5409,3393,23,NULL),(5410,3396,23,NULL),(5411,3379,23,NULL),(5412,3364,23,NULL),(5413,3356,23,NULL),(5414,3355,23,NULL),(5415,3345,23,NULL),(5416,3375,23,NULL),(5417,3350,23,NULL),(5418,3330,23,NULL),(5419,3349,23,NULL),(5420,3318,23,NULL),(5421,3300,23,NULL),(5422,3304,23,NULL),(5423,3334,23,NULL),(5424,3285,23,NULL),(5425,3289,23,NULL),(5426,3270,23,NULL),(5427,3280,23,NULL),(5428,3324,23,NULL),(5429,3264,23,NULL),(5430,3274,23,NULL),(5431,3295,23,NULL),(5432,3248,23,NULL),(5433,3282,23,NULL),(5434,3325,23,NULL),(5435,3217,23,NULL),(5436,3194,23,NULL),(5437,3210,23,NULL),(5438,3227,23,NULL),(5439,3223,23,NULL),(5440,3178,23,NULL),(5441,3174,23,NULL),(5442,3169,23,NULL),(5443,3151,23,NULL),(5444,3168,23,NULL),(5445,3184,23,NULL),(5446,3146,23,NULL),(5447,3107,23,NULL),(5448,3110,23,NULL),(5449,3101,23,NULL),(5450,3105,23,NULL),(5451,3114,23,NULL),(5452,3083,23,NULL),(5453,3084,23,NULL),(5454,3100,23,NULL),(5455,3046,23,NULL),(5456,3019,23,NULL),(5457,3042,23,NULL),(5458,3011,23,NULL),(5459,3016,23,NULL),(5460,3014,23,NULL),(5461,3015,23,NULL),(5462,3000,23,NULL),(5463,2997,23,NULL),(5464,3005,23,NULL),(5465,2965,23,NULL),(5466,2974,23,NULL),(5467,2951,23,NULL),(5468,2962,23,NULL),(5469,2956,23,NULL),(5470,2938,23,NULL),(5471,2942,23,NULL),(5472,2932,23,NULL),(5473,2914,23,NULL),(5474,2864,23,NULL),(5475,2843,23,NULL),(5476,2824,23,NULL),(5477,2807,23,NULL),(5478,2780,23,NULL),(5479,2788,23,NULL),(5480,2798,23,NULL),(5481,2761,23,NULL),(5482,2816,23,NULL),(5483,2799,23,NULL),(5484,2744,23,NULL),(5485,2733,23,NULL),(5486,2716,23,NULL),(5487,2698,23,NULL),(5488,2684,23,NULL),(5489,16620,24,NULL),(5490,2683,23,NULL),(5491,16610,24,NULL),(5492,2670,23,NULL),(5493,16595,24,NULL),(5494,2657,23,NULL),(5495,16625,24,NULL),(5496,2658,23,NULL),(5497,16579,24,NULL),(5498,2706,23,NULL),(5499,16560,24,NULL),(5500,2652,23,NULL),(5501,16641,24,NULL),(5502,16556,24,NULL),(5503,16640,24,NULL),(5504,2678,23,NULL),(5505,2570,23,NULL),(5506,2563,23,NULL),(5507,16545,24,NULL),(5508,2593,23,NULL),(5509,16645,24,NULL),(5510,2558,23,NULL),(5511,16550,24,NULL),(5512,2559,23,NULL),(5513,3411,24,NULL),(5514,2661,23,NULL),(5515,3392,24,NULL),(5516,2596,23,NULL),(5517,2587,23,NULL),(5518,3364,24,NULL),(5519,3340,24,NULL),(5520,2579,23,NULL),(5521,3345,24,NULL),(5522,2582,23,NULL),(5523,3360,24,NULL),(5524,2553,23,NULL),(5525,2540,23,NULL),(5526,3330,24,NULL),(5527,2544,23,NULL),(5528,3300,24,NULL),(5529,2535,23,NULL),(5530,2529,23,NULL),(5531,3314,24,NULL),(5532,2523,23,NULL),(5533,2520,23,NULL),(5534,3304,24,NULL),(5535,3285,24,NULL),(5536,2482,23,NULL),(5537,2501,23,NULL),(5538,3289,24,NULL),(5539,3309,24,NULL),(5540,2490,23,NULL),(5541,3270,24,NULL),(5542,2485,23,NULL),(5543,2465,23,NULL),(5544,3280,24,NULL),(5545,3274,24,NULL),(5546,3258,24,NULL),(5547,3295,24,NULL),(5548,2461,23,NULL),(5549,3271,24,NULL),(5550,2460,23,NULL),(5551,3254,24,NULL),(5552,2455,23,NULL),(5553,2446,23,NULL),(5554,3232,24,NULL),(5555,3190,24,NULL),(5556,2441,23,NULL),(5557,3194,24,NULL),(5558,2427,23,NULL),(5559,2418,23,NULL),(5560,3227,24,NULL),(5561,2413,23,NULL),(5562,3223,24,NULL),(5563,2405,23,NULL),(5564,3163,24,NULL),(5565,2404,23,NULL),(5566,3162,24,NULL),(5567,2395,23,NULL),(5568,2342,23,NULL),(5569,3151,24,NULL),(5570,2390,23,NULL),(5571,3158,24,NULL),(5572,2379,23,NULL),(5573,3184,24,NULL),(5574,2363,23,NULL),(5575,3159,24,NULL),(5576,2347,23,NULL),(5577,3146,24,NULL),(5578,2351,23,NULL),(5579,3136,24,NULL),(5580,3110,24,NULL),(5581,2235,23,NULL),(5582,3099,24,NULL),(5583,2283,23,NULL),(5584,2270,23,NULL),(5585,3100,24,NULL),(5586,2275,23,NULL),(5587,3042,24,NULL),(5588,2239,23,NULL),(5589,3016,24,NULL),(5590,2264,23,NULL),(5591,3014,24,NULL),(5592,2261,23,NULL),(5593,2965,24,NULL),(5594,2260,23,NULL),(5595,2974,24,NULL),(5596,2220,23,NULL),(5597,2206,23,NULL),(5598,2948,24,NULL),(5599,2181,23,NULL),(5600,2180,23,NULL),(5601,2956,24,NULL),(5602,2942,24,NULL),(5603,2924,24,NULL),(5604,2185,23,NULL),(5605,2923,24,NULL),(5606,2169,23,NULL),(5607,2894,24,NULL),(5608,2164,23,NULL),(5609,2859,24,NULL),(5610,2176,23,NULL),(5611,2843,24,NULL),(5612,2154,23,NULL),(5613,2824,24,NULL),(5614,2149,23,NULL),(5615,2807,24,NULL),(5616,2785,24,NULL),(5617,2161,23,NULL),(5618,2160,23,NULL),(5619,2810,24,NULL),(5620,2138,23,NULL),(5621,2798,24,NULL),(5622,2125,23,NULL),(5623,2769,24,NULL),(5624,2124,23,NULL),(5625,2696,24,NULL),(5626,2683,24,NULL),(5627,2119,23,NULL),(5628,2129,23,NULL),(5629,2657,24,NULL),(5630,2109,23,NULL),(5631,2658,24,NULL),(5632,2108,23,NULL),(5633,2106,23,NULL),(5634,2652,24,NULL),(5635,2103,23,NULL),(5636,2678,24,NULL),(5637,2115,23,NULL),(5638,2114,23,NULL),(5639,2610,24,NULL),(5640,2095,23,NULL),(5641,2570,24,NULL),(5642,2089,23,NULL),(5643,2559,24,NULL),(5644,2085,23,NULL),(5645,2661,24,NULL),(5646,2057,23,NULL),(5647,2579,24,NULL),(5648,2545,24,NULL),(5649,2033,23,NULL),(5650,2535,24,NULL),(5651,2529,24,NULL),(5652,2032,23,NULL),(5653,2032,23,NULL),(5654,2038,23,NULL),(5655,2523,24,NULL),(5656,2011,23,NULL),(5657,2520,24,NULL),(5658,2000,23,NULL),(5659,1980,23,NULL),(5660,2493,24,NULL),(5661,1979,23,NULL),(5662,2491,24,NULL),(5663,1991,23,NULL),(5664,2487,24,NULL),(5665,1952,23,NULL),(5666,1945,23,NULL),(5667,1945,23,NULL),(5668,2469,24,NULL),(5669,1930,23,NULL),(5670,1930,23,NULL),(5671,2460,24,NULL),(5672,1929,23,NULL),(5673,1941,23,NULL),(5674,1913,23,NULL),(5675,1926,23,NULL),(5676,2425,24,NULL),(5677,2433,24,NULL),(5678,1903,23,NULL),(5679,2429,24,NULL),(5680,2427,24,NULL),(5681,1899,23,NULL),(5682,1899,23,NULL),(5683,2419,24,NULL),(5684,2418,24,NULL),(5685,1897,23,NULL),(5686,1910,23,NULL),(5687,2410,24,NULL),(5688,1910,23,NULL),(5689,2415,24,NULL),(5690,1869,23,NULL),(5691,1877,23,NULL),(5692,2413,24,NULL),(5693,1861,23,NULL),(5694,1861,23,NULL),(5695,2396,24,NULL),(5696,1859,23,NULL),(5697,2342,24,NULL),(5698,1859,23,NULL),(5699,1822,23,NULL),(5700,1822,23,NULL),(5701,2392,24,NULL),(5702,1829,23,NULL),(5703,1829,23,NULL),(5704,2381,24,NULL),(5705,1805,23,NULL),(5706,1805,23,NULL),(5707,1800,23,NULL),(5708,2379,24,NULL),(5709,1790,23,NULL),(5710,1790,23,NULL),(5711,2375,24,NULL),(5712,1785,23,NULL),(5713,1785,23,NULL),(5714,1796,23,NULL),(5715,2367,24,NULL),(5716,1773,23,NULL),(5717,1769,23,NULL),(5718,2360,24,NULL),(5719,1768,23,NULL),(5720,1780,23,NULL),(5721,2351,24,NULL),(5722,1758,23,NULL),(5723,2326,24,NULL),(5724,1752,23,NULL),(5725,2320,24,NULL),(5726,1765,23,NULL),(5727,2235,24,NULL),(5728,1749,23,NULL),(5729,2284,24,NULL),(5730,1748,23,NULL),(5731,1748,23,NULL),(5732,2283,24,NULL),(5733,2270,24,NULL),(5734,1716,23,NULL),(5735,2220,24,NULL),(5736,1688,23,NULL),(5737,2206,24,NULL),(5738,1700,23,NULL),(5739,1679,23,NULL),(5740,1678,23,NULL),(5741,2181,24,NULL),(5742,1672,23,NULL),(5743,1684,23,NULL),(5744,1662,23,NULL),(5745,2185,24,NULL),(5746,1657,23,NULL),(5747,2149,24,NULL),(5748,1647,23,NULL),(5749,1669,23,NULL),(5750,2161,24,NULL),(5751,1652,23,NULL),(5752,2127,24,NULL),(5753,1624,23,NULL),(5754,1636,23,NULL),(5755,2125,24,NULL),(5756,1592,23,NULL),(5757,1603,23,NULL),(5758,2130,24,NULL),(5759,2109,24,NULL),(5760,1582,23,NULL),(5761,1578,23,NULL),(5762,2108,24,NULL),(5763,1576,23,NULL),(5764,2106,24,NULL),(5765,1588,23,NULL),(5766,1574,23,NULL),(5767,1572,23,NULL),(5768,2116,24,NULL),(5769,1545,23,NULL),(5770,2114,24,NULL),(5771,1556,23,NULL),(5772,2095,24,NULL),(5773,1528,23,NULL),(5774,2089,24,NULL),(5775,1539,23,NULL),(5776,2078,24,NULL),(5777,2063,24,NULL),(5778,1518,23,NULL),(5779,1518,23,NULL),(5780,2044,24,NULL),(5781,1513,23,NULL),(5782,2037,24,NULL),(5783,1512,23,NULL),(5784,2017,24,NULL),(5785,1524,23,NULL),(5786,2011,24,NULL),(5787,1523,23,NULL),(5788,2000,24,NULL),(5789,1502,23,NULL),(5790,1971,24,NULL),(5791,1496,23,NULL),(5792,1496,23,NULL),(5793,2006,24,NULL),(5794,1508,23,NULL),(5795,1980,24,NULL),(5796,1480,23,NULL),(5797,1979,24,NULL),(5798,1492,23,NULL),(5799,1945,24,NULL),(5800,1491,23,NULL),(5801,1930,24,NULL),(5802,1470,23,NULL),(5803,1929,24,NULL),(5804,1464,23,NULL),(5805,1920,24,NULL),(5806,1455,23,NULL),(5807,1455,23,NULL),(5808,1899,24,NULL),(5809,1460,23,NULL),(5810,1460,23,NULL),(5811,1436,23,NULL),(5812,1436,23,NULL),(5813,1910,24,NULL),(5814,1446,23,NULL),(5815,1446,23,NULL),(5816,1424,23,NULL),(5817,1894,24,NULL),(5818,1422,23,NULL),(5819,1422,23,NULL),(5820,1863,24,NULL),(5821,1431,23,NULL),(5822,1876,24,NULL),(5823,1431,23,NULL),(5824,1408,23,NULL),(5825,1404,23,NULL),(5826,1394,23,NULL),(5827,1816,24,NULL),(5828,1400,23,NULL),(5829,1800,24,NULL),(5830,1791,24,NULL),(5831,1399,23,NULL),(5832,1380,23,NULL),(5833,1773,24,NULL),(5834,1365,23,NULL),(5835,1769,24,NULL),(5836,1768,24,NULL),(5837,1780,24,NULL),(5838,1765,24,NULL),(5839,1351,23,NULL),(5840,1749,24,NULL),(5841,1370,23,NULL),(5842,1748,24,NULL),(5843,1704,24,NULL),(5844,1346,23,NULL),(5845,1689,24,NULL),(5846,1337,23,NULL),(5847,1688,24,NULL),(5848,1337,23,NULL),(5849,1358,23,NULL),(5850,1356,23,NULL),(5851,1678,24,NULL),(5852,1672,24,NULL),(5853,1323,23,NULL),(5854,1684,24,NULL),(5855,1342,23,NULL),(5856,1647,24,NULL),(5857,1318,23,NULL),(5858,1669,24,NULL),(5859,1304,23,NULL),(5860,1296,23,NULL),(5861,1641,24,NULL),(5862,1295,23,NULL),(5863,1652,24,NULL),(5864,1267,23,NULL),(5865,1267,23,NULL),(5866,1636,24,NULL),(5867,2215,23,NULL),(5868,1254,23,NULL),(5869,1561,24,NULL),(5870,1545,24,NULL),(5871,1248,23,NULL),(5872,1726,23,NULL),(5873,1557,24,NULL),(5874,1239,23,NULL),(5875,1528,24,NULL),(5876,2225,23,NULL),(5877,1518,24,NULL),(5878,2273,23,NULL),(5879,2273,23,NULL),(5880,1221,23,NULL),(5881,1512,24,NULL),(5882,2191,23,NULL),(5883,1207,23,NULL),(5884,1487,24,NULL),(5885,1480,24,NULL),(5886,1405,23,NULL),(5887,1470,24,NULL),(5888,1550,23,NULL),(5889,1507,23,NULL),(5890,1935,23,NULL),(5891,1455,24,NULL),(5892,1331,23,NULL),(5893,1331,23,NULL),(5894,1143,23,NULL),(5895,1462,24,NULL),(5896,1137,23,NULL),(5897,1137,23,NULL),(5898,1299,23,NULL),(5899,1422,24,NULL),(5900,1128,23,NULL),(5901,1431,24,NULL),(5902,1128,23,NULL),(5903,1289,23,NULL),(5904,1408,24,NULL),(5905,1287,23,NULL),(5906,1287,23,NULL),(5907,1122,23,NULL),(5908,1400,24,NULL),(5909,1368,24,NULL),(5910,1109,23,NULL),(5911,1109,23,NULL),(5912,1103,23,NULL),(5913,1365,24,NULL),(5914,1094,23,NULL),(5915,1351,24,NULL),(5916,1091,23,NULL),(5917,1072,23,NULL),(5918,1334,24,NULL),(5919,1325,24,NULL),(5920,1071,23,NULL),(5921,1071,23,NULL),(5922,1051,23,NULL),(5923,1343,24,NULL),(5924,1342,24,NULL),(5925,1047,23,NULL),(5926,1037,23,NULL),(5927,1296,24,NULL),(5928,1038,23,NULL),(5929,1290,24,NULL),(5930,1282,24,NULL),(5931,1020,23,NULL),(5932,1014,23,NULL),(5933,1281,24,NULL),(5934,1267,24,NULL),(5935,1011,23,NULL),(5936,1011,23,NULL),(5937,1002,23,NULL),(5938,1254,24,NULL),(5939,1002,23,NULL),(5940,994,23,NULL),(5941,1227,24,NULL),(5942,992,23,NULL),(5943,989,23,NULL),(5944,2225,24,NULL),(5945,978,23,NULL),(5946,978,23,NULL),(5947,1221,24,NULL),(5948,977,23,NULL),(5949,1207,24,NULL),(5950,977,23,NULL),(5951,974,23,NULL),(5952,2079,24,NULL),(5953,509,23,NULL),(5954,1957,24,NULL),(5955,961,23,NULL),(5956,1190,24,NULL),(5957,947,23,NULL),(5958,1382,24,NULL),(5959,1331,24,NULL),(5960,945,23,NULL),(5961,941,23,NULL),(5962,938,23,NULL),(5963,1302,24,NULL),(5964,931,23,NULL),(5965,1143,24,NULL),(5966,930,23,NULL),(5967,922,23,NULL),(5968,1122,24,NULL),(5969,1109,24,NULL),(5970,917,23,NULL),(5971,1108,24,NULL),(5972,912,23,NULL),(5973,1094,24,NULL),(5974,907,23,NULL),(5975,1091,24,NULL),(5976,905,23,NULL),(5977,1079,24,NULL),(5978,905,23,NULL),(5979,896,23,NULL),(5980,1038,24,NULL),(5981,884,23,NULL),(5982,884,23,NULL),(5983,1025,24,NULL),(5984,881,23,NULL),(5985,881,23,NULL),(5986,1020,24,NULL),(5987,877,23,NULL),(5988,877,23,NULL),(5989,1014,24,NULL),(5990,876,23,NULL),(5991,876,23,NULL),(5992,1011,24,NULL),(5993,875,23,NULL),(5994,997,24,NULL),(5995,873,23,NULL),(5996,873,23,NULL),(5997,994,24,NULL),(5998,867,23,NULL),(5999,980,24,NULL),(6000,852,23,NULL),(6001,852,23,NULL),(6002,978,24,NULL),(6003,848,23,NULL),(6004,977,24,NULL),(6005,846,23,NULL),(6006,509,24,NULL),(6007,838,23,NULL),(6008,832,23,NULL),(6009,962,24,NULL),(6010,830,23,NULL),(6011,938,24,NULL),(6012,931,24,NULL),(6013,827,23,NULL),(6014,930,24,NULL),(6015,830,23,NULL),(6016,819,23,NULL),(6017,921,24,NULL),(6018,804,23,NULL),(6019,917,24,NULL),(6020,802,23,NULL),(6021,916,24,NULL),(6022,797,23,NULL),(6023,796,23,NULL),(6024,912,24,NULL),(6025,781,23,NULL),(6026,904,24,NULL),(6027,704,23,NULL),(6028,701,23,NULL),(6029,890,24,NULL),(6030,885,24,NULL),(6031,700,23,NULL),(6032,771,23,NULL),(6033,884,24,NULL),(6034,747,23,NULL),(6035,881,24,NULL),(6036,709,23,NULL),(6037,728,23,NULL),(6038,876,24,NULL),(6039,724,23,NULL),(6040,724,23,NULL),(6041,713,23,NULL),(6042,875,24,NULL),(6043,872,24,NULL),(6044,695,23,NULL),(6045,692,23,NULL),(6046,852,24,NULL),(6047,692,23,NULL),(6048,682,23,NULL),(6049,680,23,NULL),(6050,674,23,NULL),(6051,848,24,NULL),(6052,846,24,NULL),(6053,841,24,NULL),(6054,670,23,NULL),(6055,832,24,NULL),(6056,665,23,NULL),(6057,827,24,NULL),(6058,658,23,NULL),(6059,807,24,NULL),(6060,647,23,NULL),(6061,802,24,NULL),(6062,646,23,NULL),(6063,798,24,NULL),(6064,645,23,NULL),(6065,797,24,NULL),(6066,643,23,NULL),(6067,643,23,NULL),(6068,633,23,NULL),(6069,633,23,NULL),(6070,796,24,NULL),(6071,632,23,NULL),(6072,785,24,NULL),(6073,629,23,NULL),(6074,784,24,NULL),(6075,628,23,NULL),(6076,611,23,NULL),(6077,704,24,NULL),(6078,771,24,NULL),(6079,429,24,NULL),(6080,605,23,NULL),(6081,744,24,NULL),(6082,599,23,NULL),(6083,599,23,NULL),(6084,581,23,NULL),(6085,709,24,NULL),(6086,576,23,NULL),(6087,733,24,NULL),(6088,561,23,NULL),(6089,724,24,NULL),(6090,560,23,NULL),(6091,557,23,NULL),(6092,695,24,NULL),(6093,692,24,NULL),(6094,547,23,NULL),(6095,684,24,NULL),(6096,543,23,NULL),(6097,654,24,NULL),(6098,542,23,NULL),(6099,643,24,NULL),(6100,538,23,NULL),(6101,560,24,NULL),(6102,557,24,NULL),(6103,1721,23,NULL),(6104,1721,23,NULL),(6105,525,23,NULL),(6106,547,24,NULL),(6107,525,23,NULL),(6108,521,23,NULL),(6109,520,23,NULL),(6110,542,24,NULL),(6111,518,23,NULL),(6112,507,23,NULL),(6113,503,23,NULL),(6114,507,23,NULL),(6115,500,23,NULL),(6116,540,24,NULL),(6117,498,23,NULL),(6118,496,23,NULL),(6119,538,24,NULL),(6120,494,23,NULL),(6121,485,23,NULL),(6122,1721,24,NULL),(6123,463,23,NULL),(6124,518,24,NULL),(6125,461,23,NULL),(6126,513,24,NULL),(6127,496,24,NULL),(6128,459,23,NULL),(6129,459,23,NULL),(6130,494,24,NULL),(6131,455,23,NULL),(6132,455,23,NULL),(6133,451,23,NULL),(6134,448,23,NULL),(6135,485,24,NULL),(6136,448,23,NULL),(6137,443,23,NULL),(6138,443,23,NULL),(6139,476,24,NULL),(6140,442,23,NULL),(6141,463,24,NULL),(6142,441,23,NULL),(6143,455,24,NULL),(6144,438,23,NULL),(6145,434,23,NULL),(6146,453,24,NULL),(6147,434,23,NULL),(6148,451,24,NULL),(6149,419,23,NULL),(6150,416,23,NULL),(6151,448,24,NULL),(6152,415,23,NULL),(6153,443,24,NULL),(6154,414,23,NULL),(6155,414,23,NULL),(6156,410,23,NULL),(6157,410,23,NULL),(6158,442,24,NULL),(6159,409,23,NULL),(6160,441,24,NULL),(6161,409,23,NULL),(6162,434,24,NULL),(6163,397,23,NULL),(6164,392,23,NULL),(6165,419,24,NULL),(6166,390,23,NULL),(6167,389,23,NULL),(6168,387,23,NULL),(6169,415,24,NULL),(6170,387,23,NULL),(6171,386,23,NULL),(6172,414,24,NULL),(6173,384,23,NULL),(6174,383,23,NULL),(6175,410,24,NULL),(6176,378,23,NULL),(6177,374,23,NULL),(6178,374,23,NULL),(6179,407,24,NULL),(6180,372,23,NULL),(6181,397,24,NULL),(6182,371,23,NULL),(6183,389,24,NULL),(6184,367,23,NULL),(6185,367,23,NULL),(6186,387,24,NULL),(6187,363,23,NULL),(6188,350,23,NULL),(6189,349,23,NULL),(6190,374,24,NULL),(6191,367,24,NULL),(6192,347,23,NULL),(6193,363,24,NULL),(6194,347,24,NULL),(6195,345,23,NULL),(6196,344,24,NULL),(6197,344,23,NULL),(6198,342,24,NULL),(6199,344,23,NULL),(6200,338,24,NULL),(6201,342,23,NULL),(6202,338,23,NULL),(6203,326,24,NULL),(6204,326,23,NULL),(6205,322,24,NULL),(6206,324,23,NULL),(6207,319,24,NULL),(6208,322,23,NULL),(6209,322,23,NULL),(6210,292,24,NULL),(6211,300,23,NULL),(6212,300,23,NULL),(6213,290,23,NULL),(6214,287,24,NULL),(6215,287,23,NULL),(6216,283,23,NULL),(6217,283,24,NULL),(6218,268,23,NULL),(6219,263,23,NULL),(6220,260,23,NULL),(6221,263,23,NULL),(6222,278,24,NULL),(6223,258,23,NULL),(6224,242,23,NULL),(6225,240,23,NULL),(6226,274,24,NULL),(6227,239,23,NULL),(6228,239,23,NULL),(6229,268,24,NULL),(6230,238,23,NULL),(6231,264,24,NULL),(6232,237,23,NULL),(6233,263,24,NULL),(6234,234,23,NULL),(6235,234,23,NULL),(6236,260,24,NULL),(6237,231,23,NULL),(6238,231,23,NULL),(6239,258,24,NULL),(6240,230,23,NULL),(6241,230,23,NULL),(6242,257,24,NULL),(6243,229,23,NULL),(6244,229,23,NULL),(6245,228,23,NULL),(6246,242,24,NULL),(6247,223,23,NULL),(6248,221,23,NULL),(6249,239,24,NULL),(6250,238,24,NULL),(6251,220,23,NULL),(6252,237,24,NULL),(6253,219,23,NULL),(6254,219,23,NULL),(6255,217,23,NULL),(6256,231,24,NULL),(6257,215,23,NULL),(6258,214,23,NULL),(6259,230,24,NULL),(6260,229,24,NULL),(6261,213,23,NULL),(6262,213,23,NULL),(6263,210,23,NULL),(6264,222,24,NULL),(6265,210,23,NULL),(6266,209,23,NULL),(6267,219,24,NULL),(6268,209,23,NULL),(6269,217,24,NULL),(6270,208,23,NULL),(6271,208,23,NULL),(6272,207,23,NULL),(6273,216,24,NULL),(6274,215,24,NULL),(6275,206,23,NULL),(6276,206,23,NULL),(6277,210,24,NULL),(6278,205,23,NULL),(6279,209,24,NULL),(6280,204,23,NULL),(6281,207,24,NULL),(6282,203,23,NULL),(6283,206,24,NULL),(6284,202,23,NULL),(6285,204,24,NULL),(6286,203,24,NULL),(6287,201,23,NULL),(6288,200,23,NULL),(6289,202,24,NULL),(6290,199,23,NULL),(6291,200,24,NULL),(6292,198,24,NULL),(6293,198,23,NULL),(6294,191,24,NULL),(6295,191,23,NULL),(6296,190,23,NULL),(6297,189,23,NULL),(6298,189,24,NULL),(6299,179,23,NULL),(6300,172,24,NULL),(6301,172,23,NULL),(6302,172,23,NULL),(6303,169,24,NULL),(6304,167,24,NULL),(6305,169,23,NULL),(6306,169,23,NULL),(6307,168,23,NULL),(6308,168,23,NULL),(6309,165,24,NULL),(6310,167,23,NULL),(6311,164,23,NULL),(6312,164,23,NULL),(6313,164,24,NULL),(6314,162,23,NULL),(6315,160,23,NULL),(6316,162,24,NULL),(6317,153,23,NULL),(6318,154,24,NULL),(6319,152,23,NULL),(6320,151,23,NULL),(6321,153,24,NULL),(6322,151,23,NULL),(6323,150,24,NULL),(6324,145,23,NULL),(6325,148,24,NULL),(6326,144,23,NULL),(6327,142,23,NULL),(6328,145,24,NULL),(6329,141,23,NULL),(6330,141,23,NULL),(6331,144,24,NULL),(6332,140,23,NULL),(6333,140,23,NULL),(6334,139,23,NULL),(6335,141,24,NULL),(6336,137,23,NULL),(6337,137,24,NULL),(6338,136,23,NULL),(6339,136,24,NULL),(6340,135,23,NULL),(6341,130,23,NULL),(6342,134,24,NULL),(6343,128,23,NULL),(6344,128,23,NULL),(6345,127,23,NULL),(6346,130,24,NULL),(6347,125,23,NULL),(6348,129,24,NULL),(6349,124,23,NULL),(6350,122,23,NULL),(6351,124,23,NULL),(6352,128,24,NULL),(6353,121,23,NULL),(6354,125,24,NULL),(6355,120,23,NULL),(6356,118,23,NULL),(6357,121,24,NULL),(6358,110,23,NULL),(6359,120,24,NULL),(6360,104,23,NULL),(6361,104,23,NULL),(6362,119,24,NULL),(6363,118,24,NULL),(6364,103,23,NULL),(6365,103,23,NULL),(6366,100,23,NULL),(6367,113,24,NULL),(6368,94,23,NULL),(6369,112,24,NULL),(6370,92,23,NULL),(6371,107,24,NULL),(6372,104,24,NULL),(6373,90,23,NULL),(6374,88,23,NULL),(6375,103,24,NULL),(6376,102,24,NULL),(6377,84,23,NULL),(6378,94,24,NULL),(6379,83,23,NULL),(6380,92,24,NULL),(6381,83,23,NULL),(6382,90,24,NULL),(6383,82,23,NULL),(6384,88,24,NULL),(6385,81,23,NULL),(6386,83,24,NULL),(6387,80,23,NULL),(6388,80,23,NULL),(6389,79,23,NULL),(6390,81,24,NULL),(6391,78,23,NULL),(6392,78,23,NULL),(6393,77,23,NULL),(6394,77,23,NULL),(6395,80,24,NULL),(6396,75,23,NULL),(6397,78,24,NULL),(6398,74,23,NULL),(6399,74,23,NULL),(6400,73,23,NULL),(6401,77,24,NULL),(6402,70,23,NULL),(6403,75,24,NULL),(6404,74,24,NULL),(6405,69,23,NULL),(6406,67,23,NULL),(6407,67,23,NULL),(6408,73,24,NULL),(6409,66,23,NULL),(6410,66,23,NULL),(6411,70,24,NULL),(6412,64,23,NULL),(6413,64,23,NULL),(6414,63,23,NULL),(6415,69,24,NULL),(6416,67,24,NULL),(6417,62,23,NULL),(6418,62,23,NULL),(6419,61,23,NULL),(6420,66,24,NULL),(6421,60,23,NULL),(6422,59,23,NULL),(6423,63,24,NULL),(6424,62,24,NULL),(6425,58,23,NULL),(6426,56,23,NULL),(6427,61,24,NULL),(6428,55,23,NULL),(6429,54,23,NULL),(6430,54,23,NULL),(6431,59,24,NULL),(6432,53,23,NULL),(6433,58,24,NULL),(6434,50,23,NULL),(6435,49,23,NULL),(6436,57,24,NULL),(6437,48,23,NULL),(6438,56,24,NULL),(6439,47,23,NULL),(6440,55,24,NULL),(6441,46,23,NULL),(6442,54,24,NULL),(6443,43,23,NULL),(6444,53,24,NULL),(6445,43,23,NULL),(6446,42,23,NULL),(6447,52,24,NULL),(6448,41,23,NULL),(6449,50,24,NULL),(6450,39,23,NULL),(6451,48,24,NULL),(6452,38,23,NULL),(6453,35,23,NULL),(6454,47,24,NULL),(6455,38,23,NULL),(6456,34,23,NULL),(6457,46,24,NULL),(6458,33,23,NULL),(6459,45,24,NULL),(6460,32,23,NULL),(6461,43,24,NULL),(6462,31,23,NULL),(6463,31,23,NULL),(6464,42,24,NULL),(6465,29,23,NULL),(6466,28,23,NULL),(6467,41,24,NULL),(6468,27,23,NULL),(6469,40,24,NULL),(6470,26,23,NULL),(6471,39,24,NULL),(6472,25,23,NULL),(6473,38,24,NULL),(6474,37,24,NULL),(6475,24,23,NULL),(6476,22,23,NULL),(6477,35,24,NULL),(6478,21,23,NULL),(6479,34,24,NULL),(6480,20,23,NULL),(6481,20,23,NULL),(6482,19,23,NULL),(6483,17,23,NULL),(6484,33,24,NULL),(6485,17,23,NULL),(6486,31,24,NULL),(6487,15,23,NULL),(6488,28,24,NULL),(6489,14,23,NULL),(6490,27,24,NULL),(6491,11,23,NULL),(6492,9,23,NULL),(6493,26,24,NULL),(6494,24,24,NULL),(6495,7,23,NULL),(6496,22,24,NULL),(6497,5,23,NULL),(6498,5,23,NULL),(6499,21,24,NULL),(6500,4,23,NULL),(6501,3,23,NULL),(6502,20,24,NULL),(6503,19,24,NULL),(6504,2,23,NULL),(6505,2,23,NULL),(6506,15,24,NULL),(6507,1,23,NULL),(6508,14,24,NULL),(6509,13,24,NULL),(6510,12,24,NULL),(6511,11,24,NULL),(6512,9,24,NULL),(6513,7,24,NULL),(6514,5,24,NULL),(6515,4,24,NULL),(6516,3,24,NULL),(6517,2,24,NULL),(6518,1,24,NULL),(6519,3635,24,NULL),(6520,3436,24,NULL),(6521,3503,24,NULL),(6522,3531,24,NULL),(6523,3556,24,NULL),(6524,3585,24,NULL),(6525,3823,24,NULL),(6526,3486,24,NULL),(6527,3593,24,NULL),(6528,3476,24,NULL),(6529,3479,24,NULL),(6530,3539,24,NULL),(6531,3418,24,NULL),(6532,3416,24,NULL),(6533,3511,24,NULL),(6534,3492,24,NULL),(6535,3837,24,NULL),(6536,4000,24,NULL),(6537,3926,24,NULL),(6538,3474,24,NULL),(6539,3449,24,NULL),(6540,3760,24,NULL),(6541,4293,24,NULL),(6542,3578,24,NULL),(6543,3737,24,NULL),(6544,3879,24,NULL),(6545,3425,24,NULL),(6546,3647,24,NULL),(6547,3960,24,NULL),(6548,3423,24,NULL),(6549,3767,24,NULL),(6550,3630,24,NULL),(6551,3613,24,NULL),(6552,3514,24,NULL),(6553,4646,24,NULL),(6554,3668,24,NULL),(6555,3598,24,NULL),(6556,3776,24,NULL),(6557,3730,24,NULL),(6558,3766,24,NULL),(6559,3700,24,NULL),(6560,4429,24,NULL),(6561,4316,24,NULL),(6562,3956,24,NULL),(6563,3999,24,NULL),(6564,3947,24,NULL),(6565,3802,24,NULL),(6566,4012,24,NULL),(6567,3484,24,NULL),(6568,3500,24,NULL),(6569,3469,24,NULL),(6570,3493,24,NULL),(6571,3444,24,NULL),(6572,3525,24,NULL),(6573,3914,24,NULL),(6574,3477,24,NULL),(6575,3652,24,NULL),(6576,3468,24,NULL),(6577,3427,24,NULL),(6578,3450,24,NULL),(6579,3417,24,NULL),(6580,15029,24,NULL),(6581,3419,24,NULL),(6582,3473,24,NULL),(6583,15986,24,NULL),(6584,4397,24,NULL),(6585,5474,24,NULL),(6586,15332,24,NULL),(6587,3621,24,NULL),(6588,16273,24,NULL),(6589,3842,24,NULL),(6590,3821,24,NULL),(6591,15794,24,NULL),(6592,4443,24,NULL),(6593,15257,24,NULL),(6594,4210,24,NULL),(6595,4587,24,NULL),(6596,9807,24,NULL),(6597,15085,24,NULL),(6598,4449,24,NULL),(6599,10487,24,NULL),(6600,3435,24,NULL),(6601,3475,24,NULL),(6602,3489,24,NULL),(6603,15465,24,NULL),(6604,16165,24,NULL),(6605,3446,24,NULL),(6606,16523,24,NULL),(6607,4103,24,NULL),(6608,3459,24,NULL),(6609,3504,24,NULL),(6610,9617,24,NULL),(6611,3483,24,NULL),(6612,3830,24,NULL),(6613,7662,24,NULL),(6614,4028,24,NULL),(6615,13547,24,NULL),(6616,3762,24,NULL),(6617,4612,24,NULL),(6618,14077,24,NULL),(6619,3695,24,NULL),(6620,13566,24,NULL),(6621,4032,24,NULL),(6622,9872,24,NULL),(6623,4493,24,NULL),(6624,12269,24,NULL),(6625,4560,24,NULL),(6626,3833,24,NULL),(6627,4720,24,NULL),(6628,4074,24,NULL),(6629,4941,24,NULL),(6630,4170,24,NULL),(6631,4423,24,NULL),(6632,3948,24,NULL),(6633,4383,24,NULL),(6634,3816,24,NULL),(6635,4582,24,NULL),(6636,3843,24,NULL),(6637,4620,24,NULL),(6638,4588,24,NULL),(6639,3635,23,NULL),(6640,3436,23,NULL),(6641,3953,23,NULL),(6642,3503,23,NULL),(6643,3531,23,NULL),(6644,3556,23,NULL),(6645,3438,23,NULL),(6646,3585,23,NULL),(6647,3610,23,NULL),(6648,3823,23,NULL),(6649,3486,23,NULL),(6650,3731,23,NULL),(6651,3476,23,NULL),(6652,3979,23,NULL),(6653,3418,23,NULL),(6654,3424,23,NULL),(6655,3712,23,NULL),(6656,3416,23,NULL),(6657,3511,23,NULL),(6658,3723,23,NULL),(6659,3837,23,NULL),(6660,4000,23,NULL),(6661,3926,23,NULL),(6662,3437,23,NULL),(6663,3760,23,NULL),(6664,3552,23,NULL),(6665,3578,23,NULL),(6666,3440,23,NULL),(6667,3737,23,NULL),(6668,3879,23,NULL),(6669,3425,23,NULL),(6670,3647,23,NULL),(6671,3759,23,NULL),(6672,3852,23,NULL),(6673,3960,23,NULL),(6674,3423,23,NULL),(6675,3767,23,NULL),(6676,4773,23,NULL),(6677,3940,23,NULL),(6678,3713,23,NULL),(6679,4507,23,NULL),(6680,4795,23,NULL),(6681,3488,23,NULL),(6682,3613,23,NULL),(6683,4215,23,NULL),(6684,3793,23,NULL),(6685,3733,23,NULL),(6686,4646,23,NULL),(6687,3813,23,NULL),(6688,4089,23,NULL),(6689,3668,23,NULL),(6690,4159,23,NULL),(6691,3912,23,NULL),(6692,4224,23,NULL),(6693,3598,23,NULL),(6694,3776,23,NULL),(6695,3730,23,NULL),(6696,4401,23,NULL),(6697,4026,23,NULL),(6698,4769,23,NULL),(6699,3700,23,NULL),(6700,3956,23,NULL),(6701,3935,23,NULL),(6702,5641,23,NULL),(6703,3877,23,NULL),(6704,3999,23,NULL),(6705,4045,23,NULL),(6706,4008,23,NULL),(6707,4484,23,NULL),(6708,3745,23,NULL),(6709,3664,23,NULL),(6710,3753,23,NULL),(6711,5464,23,NULL),(6712,4012,23,NULL),(6713,4603,23,NULL),(6714,6419,23,NULL),(6715,3484,23,NULL),(6716,3931,23,NULL),(6717,3851,23,NULL),(6718,3454,23,NULL),(6719,3469,23,NULL),(6720,3705,23,NULL),(6721,3493,23,NULL),(6722,3444,23,NULL),(6723,3505,23,NULL),(6724,3431,23,NULL),(6725,3525,23,NULL),(6726,4064,23,NULL),(6727,4709,23,NULL),(6728,3885,23,NULL),(6729,3568,23,NULL),(6730,3421,23,NULL),(6731,3693,23,NULL),(6732,4445,23,NULL),(6733,3891,23,NULL),(6734,4078,23,NULL),(6735,3559,23,NULL),(6736,4169,23,NULL),(6737,3785,23,NULL),(6738,3452,23,NULL),(6739,3429,23,NULL),(6740,3422,23,NULL),(6741,3861,23,NULL),(6742,3801,23,NULL),(6743,3468,23,NULL),(6744,3427,23,NULL),(6745,3417,23,NULL),(6746,3432,23,NULL),(6747,3453,23,NULL),(6748,3522,23,NULL),(6749,3528,23,NULL),(6750,3696,23,NULL),(6751,3702,23,NULL),(6752,3898,23,NULL),(6753,3419,23,NULL),(6754,3473,23,NULL),(6755,4397,23,NULL),(6756,4059,23,NULL),(6757,4920,23,NULL),(6758,3692,23,NULL),(6759,3881,23,NULL),(6760,4313,23,NULL),(6761,5474,23,NULL),(6762,3996,23,NULL),(6763,3621,23,NULL),(6764,3472,23,NULL),(6765,3901,23,NULL),(6766,5256,23,NULL),(6767,5768,23,NULL),(6768,4443,23,NULL),(6769,4210,23,NULL),(6770,4366,23,NULL),(6771,4161,23,NULL),(6772,4113,23,NULL),(6773,4587,23,NULL),(6774,4803,23,NULL),(6775,4415,23,NULL),(6776,16722,23,NULL),(6777,3706,23,NULL),(6778,4620,23,NULL),(6779,4588,23,NULL),(6780,4338,23,NULL),(6781,3554,23,NULL),(6782,3498,23,NULL),(6783,3846,23,NULL),(6784,3455,23,NULL),(6785,3446,23,NULL),(6786,5472,23,NULL),(6787,4299,23,NULL),(6788,3457,23,NULL),(6789,3483,23,NULL),(6790,3993,23,NULL),(6791,5009,23,NULL),(6792,5838,23,NULL),(6793,4612,23,NULL),(6794,5122,23,NULL),(6795,3695,23,NULL),(6796,4767,23,NULL),(6797,4560,23,NULL),(6798,3833,23,NULL),(6799,4074,23,NULL),(6800,4423,23,NULL),(6801,4217,23,NULL),(6802,5043,23,NULL),(6803,4383,23,NULL),(6804,9723,23,NULL),(6805,7667,23,NULL),(6806,7004,23,NULL),(6807,9234,23,NULL),(6808,9928,23,NULL),(6809,11365,23,NULL),(6810,12037,23,NULL),(6811,9807,23,NULL),(6812,10558,23,NULL),(6813,15085,23,NULL),(6814,10487,23,NULL),(6815,9852,23,NULL),(6816,13547,23,NULL),(6817,6703,23,NULL),(6818,12724,23,NULL),(6819,13566,23,NULL),(6820,9872,23,NULL),(6821,12269,23,NULL),(6822,16523,23,NULL),(6823,6727,23,NULL),(6824,12037,25,NULL),(6825,9807,25,NULL),(6826,14908,25,NULL),(6827,9852,25,NULL),(6828,14431,25,NULL),(6829,14186,25,NULL),(6830,8982,25,NULL),(6831,15085,25,NULL),(6832,10487,25,NULL),(6833,14430,25,NULL),(6834,14930,25,NULL),(6835,14077,25,NULL),(6836,13547,25,NULL),(6837,13566,25,NULL),(6838,15633,25,NULL),(6839,9872,25,NULL),(6840,12269,25,NULL),(6841,15029,25,NULL),(6842,16165,25,NULL),(6843,7014,25,NULL),(6844,16523,25,NULL),(6845,3484,25,NULL),(6846,3931,25,NULL),(6847,4148,25,NULL),(6848,3720,25,NULL),(6849,3851,25,NULL),(6850,4243,25,NULL),(6851,3547,25,NULL),(6852,3641,25,NULL),(6853,3574,25,NULL),(6854,3454,25,NULL),(6855,3469,25,NULL),(6856,3678,25,NULL),(6857,3495,25,NULL),(6858,3493,25,NULL),(6859,3628,25,NULL),(6860,3444,25,NULL),(6861,3505,25,NULL),(6862,3431,25,NULL),(6863,4055,25,NULL),(6864,3525,25,NULL),(6865,3711,25,NULL),(6866,3568,25,NULL),(6867,3421,25,NULL),(6868,3643,25,NULL),(6869,4445,25,NULL),(6870,4237,25,NULL),(6871,3891,25,NULL),(6872,4078,25,NULL),(6873,3559,25,NULL),(6874,4169,25,NULL),(6875,4023,25,NULL),(6876,3452,25,NULL),(6877,3529,25,NULL),(6878,3422,25,NULL),(6879,3456,25,NULL),(6880,3922,25,NULL),(6881,3861,25,NULL),(6882,3652,25,NULL),(6883,3967,25,NULL),(6884,3468,25,NULL),(6885,3523,25,NULL),(6886,3427,25,NULL),(6887,3627,25,NULL),(6888,3519,25,NULL),(6889,3450,25,NULL),(6890,3463,25,NULL),(6891,3417,25,NULL),(6892,3536,25,NULL),(6893,3599,25,NULL),(6894,3561,25,NULL),(6895,6072,25,NULL),(6896,3806,25,NULL),(6897,4196,25,NULL),(6898,4009,25,NULL),(6899,3684,25,NULL),(6900,3898,25,NULL),(6901,3419,25,NULL),(6902,3473,25,NULL),(6903,4059,25,NULL),(6904,4920,25,NULL),(6905,3465,25,NULL),(6906,4004,25,NULL),(6907,3621,25,NULL),(6908,3611,25,NULL),(6909,3472,25,NULL),(6910,3901,25,NULL),(6911,3954,25,NULL),(6912,5256,25,NULL),(6913,5768,25,NULL),(6914,5901,25,NULL),(6915,4443,25,NULL),(6916,4210,25,NULL),(6917,3857,25,NULL),(6918,4161,25,NULL),(6919,4113,25,NULL),(6920,4587,25,NULL),(6921,4475,25,NULL),(6922,4532,25,NULL),(6923,3532,25,NULL),(6924,3501,25,NULL),(6925,4234,25,NULL),(6926,3515,25,NULL),(6927,3442,25,NULL),(6928,3502,25,NULL),(6929,3635,25,NULL),(6930,3436,25,NULL),(6931,3531,25,NULL),(6932,3893,25,NULL),(6933,3556,25,NULL),(6934,3585,25,NULL),(6935,3610,25,NULL),(6936,3471,25,NULL),(6937,3823,25,NULL),(6938,3486,25,NULL),(6939,3593,25,NULL),(6940,3476,25,NULL),(6941,3458,25,NULL),(6942,4047,25,NULL),(6943,3445,25,NULL),(6944,3418,25,NULL),(6945,3424,25,NULL),(6946,3462,25,NULL),(6947,3416,25,NULL),(6948,3487,25,NULL),(6949,3511,25,NULL),(6950,3492,25,NULL),(6951,3837,25,NULL),(6952,4000,25,NULL),(6953,3449,25,NULL),(6954,3467,25,NULL),(6955,3437,25,NULL),(6956,3760,25,NULL),(6957,3578,25,NULL),(6958,3440,25,NULL),(6959,3543,25,NULL),(6960,3425,25,NULL),(6961,3647,25,NULL),(6962,3960,25,NULL),(6963,3423,25,NULL),(6964,3767,25,NULL),(6965,4773,25,NULL),(6966,3869,25,NULL),(6967,3534,25,NULL),(6968,3448,25,NULL),(6969,3478,25,NULL),(6970,5861,25,NULL),(6971,4507,25,NULL),(6972,4795,25,NULL),(6973,3488,25,NULL),(6974,3653,25,NULL),(6975,3613,25,NULL),(6976,4215,25,NULL),(6977,3518,25,NULL),(6978,3514,25,NULL),(6979,4073,25,NULL),(6980,3733,25,NULL),(6981,4646,25,NULL),(6982,3813,25,NULL),(6983,4089,25,NULL),(6984,4186,25,NULL),(6985,4159,25,NULL),(6986,4224,25,NULL),(6987,3871,25,NULL),(6988,4154,25,NULL),(6989,3766,25,NULL),(6990,4401,25,NULL),(6991,4769,25,NULL),(6992,3700,25,NULL),(6993,4336,25,NULL),(6994,3956,25,NULL),(6995,3935,25,NULL),(6996,3999,25,NULL),(6997,4484,25,NULL),(6998,3664,25,NULL),(6999,5098,25,NULL),(7000,4242,25,NULL),(7001,6351,25,NULL),(7002,3572,25,NULL),(7003,3443,25,NULL),(7004,3728,25,NULL),(7005,4620,25,NULL),(7006,4588,25,NULL),(7007,3682,25,NULL),(7008,3554,25,NULL),(7009,3594,25,NULL),(7010,3608,25,NULL),(7011,3498,25,NULL),(7012,3623,25,NULL),(7013,3751,25,NULL),(7014,3587,25,NULL),(7015,3524,25,NULL),(7016,3455,25,NULL),(7017,3489,25,NULL),(7018,3761,25,NULL),(7019,3446,25,NULL),(7020,3714,25,NULL),(7021,3820,25,NULL),(7022,3739,25,NULL),(7023,5472,25,NULL),(7024,4581,25,NULL),(7025,3601,25,NULL),(7026,4382,25,NULL),(7027,3459,25,NULL),(7028,3504,25,NULL),(7029,3457,25,NULL),(7030,3764,25,NULL),(7031,3789,25,NULL),(7032,3741,25,NULL),(7033,3483,25,NULL),(7034,4244,25,NULL),(7035,4028,25,NULL),(7036,3762,25,NULL),(7037,5331,25,NULL),(7038,3993,25,NULL),(7039,5009,25,NULL),(7040,3695,25,NULL),(7041,3833,25,NULL),(7042,3482,25,NULL),(7043,4074,25,NULL),(7044,4170,25,NULL),(7045,4423,25,NULL),(7046,4217,25,NULL),(7047,4088,25,NULL),(7048,5043,25,NULL),(7049,4383,25,NULL),(7050,3808,25,NULL),(7051,3631,25,NULL),(7052,16634,25,NULL),(7053,16610,25,NULL),(7054,16595,25,NULL),(7055,16579,25,NULL),(7056,16580,25,NULL),(7057,16560,25,NULL),(7058,16564,25,NULL),(7059,16641,25,NULL),(7060,16556,25,NULL),(7061,16640,25,NULL),(7062,16545,25,NULL),(7063,16574,25,NULL),(7064,16535,25,NULL),(7065,16645,25,NULL),(7066,16589,25,NULL),(7067,16550,25,NULL),(7068,3411,25,NULL),(7069,3392,25,NULL),(7070,3407,25,NULL),(7071,3370,25,NULL),(7072,3396,25,NULL),(7073,3379,25,NULL),(7074,3355,25,NULL),(7075,3412,25,NULL),(7076,3386,25,NULL),(7077,3345,25,NULL),(7078,3375,25,NULL),(7079,3350,25,NULL),(7080,3330,25,NULL),(7081,3354,25,NULL),(7082,3349,25,NULL),(7083,3300,25,NULL),(7084,3304,25,NULL),(7085,3285,25,NULL),(7086,3289,25,NULL),(7087,3270,25,NULL),(7088,3280,25,NULL),(7089,3324,25,NULL),(7090,3264,25,NULL),(7091,3274,25,NULL),(7092,3295,25,NULL),(7093,3271,25,NULL),(7094,3248,25,NULL),(7095,3282,25,NULL),(7096,3226,25,NULL),(7097,3325,25,NULL),(7098,3217,25,NULL),(7099,3275,25,NULL),(7100,3208,25,NULL),(7101,3194,25,NULL),(7102,3210,25,NULL),(7103,3223,25,NULL),(7104,3163,25,NULL),(7105,3174,25,NULL),(7106,3162,25,NULL),(7107,3151,25,NULL),(7108,3152,25,NULL),(7109,3168,25,NULL),(7110,3184,25,NULL),(7111,3159,25,NULL),(7112,3175,25,NULL),(7113,3110,25,NULL),(7114,3115,25,NULL),(7115,3105,25,NULL),(7116,3099,25,NULL),(7117,3079,25,NULL),(7118,3083,25,NULL),(7119,3084,25,NULL),(7120,3100,25,NULL),(7121,3046,25,NULL),(7122,3019,25,NULL),(7123,3042,25,NULL),(7124,3011,25,NULL),(7125,3015,25,NULL),(7126,2981,25,NULL),(7127,3000,25,NULL),(7128,2980,25,NULL),(7129,3005,25,NULL),(7130,2966,25,NULL),(7131,2996,25,NULL),(7132,2965,25,NULL),(7133,2974,25,NULL),(7134,2956,25,NULL),(7135,2938,25,NULL),(7136,2942,25,NULL),(7137,2923,25,NULL),(7138,2914,25,NULL),(7139,2894,25,NULL),(7140,2870,25,NULL),(7141,2839,25,NULL),(7142,2828,25,NULL),(7143,2841,25,NULL),(7144,2824,25,NULL),(7145,2807,25,NULL),(7146,2784,25,NULL),(7147,2785,25,NULL),(7148,2810,25,NULL),(7149,2788,25,NULL),(7150,2798,25,NULL),(7151,2761,25,NULL),(7152,2816,25,NULL),(7153,2744,25,NULL),(7154,2733,25,NULL),(7155,2716,25,NULL),(7156,2710,25,NULL),(7157,2684,25,NULL),(7158,2683,25,NULL),(7159,2670,25,NULL),(7160,2656,25,NULL),(7161,2657,25,NULL),(7162,2658,25,NULL),(7163,2652,25,NULL),(7164,2678,25,NULL),(7165,2610,25,NULL),(7166,2574,25,NULL),(7167,2563,25,NULL),(7168,2593,25,NULL),(7169,2559,25,NULL),(7170,2661,25,NULL),(7171,2605,25,NULL),(7172,2596,25,NULL),(7173,2586,25,NULL),(7174,2578,25,NULL),(7175,2579,25,NULL),(7176,2554,25,NULL),(7177,2553,25,NULL),(7178,2540,25,NULL),(7179,2544,25,NULL),(7180,2535,25,NULL),(7181,2529,25,NULL),(7182,2523,25,NULL),(7183,2520,25,NULL),(7184,2482,25,NULL),(7185,2496,25,NULL),(7186,2501,25,NULL),(7187,2500,25,NULL),(7188,2486,25,NULL),(7189,2485,25,NULL),(7190,2465,25,NULL),(7191,2461,25,NULL),(7192,2425,25,NULL),(7193,2441,25,NULL),(7194,2427,25,NULL),(7195,2418,25,NULL),(7196,2413,25,NULL),(7197,2405,25,NULL),(7198,2404,25,NULL),(7199,2342,25,NULL),(7200,2390,25,NULL),(7201,2389,25,NULL),(7202,2381,25,NULL),(7203,2379,25,NULL),(7204,2363,25,NULL),(7205,2352,25,NULL),(7206,2351,25,NULL),(7207,2326,25,NULL),(7208,2325,25,NULL),(7209,2293,25,NULL),(7210,2235,25,NULL),(7211,2283,25,NULL),(7212,2287,25,NULL),(7213,2243,25,NULL),(7214,2270,25,NULL),(7215,2239,25,NULL),(7216,2264,25,NULL),(7217,2255,25,NULL),(7218,2260,25,NULL),(7219,2222,25,NULL),(7220,2220,25,NULL),(7221,2206,25,NULL),(7222,2181,25,NULL),(7223,2180,25,NULL),(7224,2185,25,NULL),(7225,2169,25,NULL),(7226,2176,25,NULL),(7227,2154,25,NULL),(7228,2149,25,NULL),(7229,2160,25,NULL),(7230,2125,25,NULL),(7231,2124,25,NULL),(7232,2119,25,NULL),(7233,2130,25,NULL),(7234,2109,25,NULL),(7235,2108,25,NULL),(7236,2103,25,NULL),(7237,2116,25,NULL),(7238,2114,25,NULL),(7239,2089,25,NULL),(7240,2073,25,NULL),(7241,2085,25,NULL),(7242,2058,25,NULL),(7243,2057,25,NULL),(7244,2068,25,NULL),(7245,2042,25,NULL),(7246,2053,25,NULL),(7247,2032,25,NULL),(7248,2038,25,NULL),(7249,2011,25,NULL),(7250,2023,25,NULL),(7251,2000,25,NULL),(7252,2006,25,NULL),(7253,1980,25,NULL),(7254,1979,25,NULL),(7255,1967,25,NULL),(7256,1961,25,NULL),(7257,1952,25,NULL),(7258,1945,25,NULL),(7259,1930,25,NULL),(7260,1929,25,NULL),(7261,1941,25,NULL),(7262,1920,25,NULL),(7263,1913,25,NULL),(7264,1926,25,NULL),(7265,1903,25,NULL),(7266,1899,25,NULL),(7267,1869,25,NULL),(7268,1863,25,NULL),(7269,1876,25,NULL),(7270,1861,25,NULL),(7271,1859,25,NULL),(7272,1822,25,NULL),(7273,1816,25,NULL),(7274,1800,25,NULL),(7275,1790,25,NULL),(7276,1796,25,NULL),(7277,1773,25,NULL),(7278,1769,25,NULL),(7279,1768,25,NULL),(7280,1759,25,NULL),(7281,1752,25,NULL),(7282,1750,25,NULL),(7283,1748,25,NULL),(7284,1732,25,NULL),(7285,1704,25,NULL),(7286,1717,25,NULL),(7287,1678,25,NULL),(7288,1672,25,NULL),(7289,1684,25,NULL),(7290,1662,25,NULL),(7291,1657,25,NULL),(7292,1647,25,NULL),(7293,1669,25,NULL),(7294,1652,25,NULL),(7295,1624,25,NULL),(7296,1636,25,NULL),(7297,1592,25,NULL),(7298,1603,25,NULL),(7299,1582,25,NULL),(7300,1578,25,NULL),(7301,1588,25,NULL),(7302,1560,25,NULL),(7303,1572,25,NULL),(7304,1552,25,NULL),(7305,1545,25,NULL),(7306,1556,25,NULL),(7307,1534,25,NULL),(7308,1528,25,NULL),(7309,1539,25,NULL),(7310,1518,25,NULL),(7311,1513,25,NULL),(7312,1512,25,NULL),(7313,1502,25,NULL),(7314,1496,25,NULL),(7315,1508,25,NULL),(7316,1481,25,NULL),(7317,1480,25,NULL),(7318,1493,25,NULL),(7319,1492,25,NULL),(7320,1491,25,NULL),(7321,1470,25,NULL),(7322,1464,25,NULL),(7323,1455,25,NULL),(7324,1460,25,NULL),(7325,1446,25,NULL),(7326,1422,25,NULL),(7327,1408,25,NULL),(7328,1404,25,NULL),(7329,1394,25,NULL),(7330,1389,25,NULL),(7331,1400,25,NULL),(7332,1380,25,NULL),(7333,1365,25,NULL),(7334,1351,25,NULL),(7335,1370,25,NULL),(7336,1346,25,NULL),(7337,1337,25,NULL),(7338,1358,25,NULL),(7339,1356,25,NULL),(7340,1335,25,NULL),(7341,1323,25,NULL),(7342,1342,25,NULL),(7343,1309,25,NULL),(7344,1304,25,NULL),(7345,1296,25,NULL),(7346,1295,25,NULL),(7347,1268,25,NULL),(7348,1254,25,NULL),(7349,1248,25,NULL),(7350,1247,25,NULL),(7351,1726,25,NULL),(7352,2309,25,NULL),(7353,1239,25,NULL),(7354,2225,25,NULL),(7355,1221,25,NULL),(7356,1207,25,NULL),(7357,1405,25,NULL),(7358,1550,25,NULL),(7359,1507,25,NULL),(7360,1935,25,NULL),(7361,1331,25,NULL),(7362,1313,25,NULL),(7363,1289,25,NULL),(7364,1287,25,NULL),(7365,1122,25,NULL),(7366,1291,25,NULL),(7367,1109,25,NULL),(7368,1108,25,NULL),(7369,1094,25,NULL),(7370,1078,25,NULL),(7371,1071,25,NULL),(7372,1051,25,NULL),(7373,1047,25,NULL),(7374,1046,25,NULL),(7375,1043,25,NULL),(7376,1038,25,NULL),(7377,1160,25,NULL),(7378,1021,25,NULL),(7379,1020,25,NULL),(7380,1014,25,NULL),(7381,1011,25,NULL),(7382,1009,25,NULL),(7383,1002,25,NULL),(7384,994,25,NULL),(7385,978,25,NULL),(7386,977,25,NULL),(7387,974,25,NULL),(7388,509,25,NULL),(7389,961,25,NULL),(7390,945,25,NULL),(7391,944,25,NULL),(7392,941,25,NULL),(7393,938,25,NULL),(7394,931,25,NULL),(7395,930,25,NULL),(7396,922,25,NULL),(7397,917,25,NULL),(7398,912,25,NULL),(7399,905,25,NULL),(7400,904,25,NULL),(7401,896,25,NULL),(7402,890,25,NULL),(7403,885,25,NULL),(7404,884,25,NULL),(7405,877,25,NULL),(7406,876,25,NULL),(7407,875,25,NULL),(7408,867,25,NULL),(7409,852,25,NULL),(7410,848,25,NULL),(7411,846,25,NULL),(7412,832,25,NULL),(7413,830,25,NULL),(7414,827,25,NULL),(7415,824,25,NULL),(7416,819,25,NULL),(7417,804,25,NULL),(7418,802,25,NULL),(7419,798,25,NULL),(7420,797,25,NULL),(7421,787,25,NULL),(7422,785,25,NULL),(7423,704,25,NULL),(7424,771,25,NULL),(7425,590,25,NULL),(7426,589,25,NULL),(7427,747,25,NULL),(7428,744,25,NULL),(7429,709,25,NULL),(7430,739,25,NULL),(7431,728,25,NULL),(7432,697,25,NULL),(7433,695,25,NULL),(7434,682,25,NULL),(7435,678,25,NULL),(7436,670,25,NULL),(7437,648,25,NULL),(7438,647,25,NULL),(7439,646,25,NULL),(7440,645,25,NULL),(7441,643,25,NULL),(7442,624,25,NULL),(7443,592,25,NULL),(7444,581,25,NULL),(7445,561,25,NULL),(7446,557,25,NULL),(7447,547,25,NULL),(7448,542,25,NULL),(7449,539,25,NULL),(7450,532,25,NULL),(7451,1721,25,NULL),(7452,520,25,NULL),(7453,507,25,NULL),(7454,503,25,NULL),(7455,496,25,NULL),(7456,485,25,NULL),(7457,476,25,NULL),(7458,455,25,NULL),(7459,451,25,NULL),(7460,448,25,NULL),(7461,445,25,NULL),(7462,442,25,NULL),(7463,441,25,NULL),(7464,438,25,NULL),(7465,434,25,NULL),(7466,421,25,NULL),(7467,419,25,NULL),(7468,415,25,NULL),(7469,414,25,NULL),(7470,412,25,NULL),(7471,410,25,NULL),(7472,402,25,NULL),(7473,392,25,NULL),(7474,390,25,NULL),(7475,389,25,NULL),(7476,387,25,NULL),(7477,386,25,NULL),(7478,383,25,NULL),(7479,378,25,NULL),(7480,374,25,NULL),(7481,371,25,NULL),(7482,368,25,NULL),(7483,367,25,NULL),(7484,350,25,NULL),(7485,349,25,NULL),(7486,347,25,NULL),(7487,345,25,NULL),(7488,344,25,NULL),(7489,342,25,NULL),(7490,338,25,NULL),(7491,328,25,NULL),(7492,326,25,NULL),(7493,324,25,NULL),(7494,322,25,NULL),(7495,300,25,NULL),(7496,290,25,NULL),(7497,287,25,NULL),(7498,283,25,NULL),(7499,279,25,NULL),(7500,278,25,NULL),(7501,268,25,NULL),(7502,263,25,NULL),(7503,260,25,NULL),(7504,258,25,NULL),(7505,242,25,NULL),(7506,240,25,NULL),(7507,238,25,NULL),(7508,237,25,NULL),(7509,235,25,NULL),(7510,231,25,NULL),(7511,229,25,NULL),(7512,228,25,NULL),(7513,227,25,NULL),(7514,221,25,NULL),(7515,217,25,NULL),(7516,215,25,NULL),(7517,213,25,NULL),(7518,211,25,NULL),(7519,210,25,NULL),(7520,209,25,NULL),(7521,208,25,NULL),(7522,207,25,NULL),(7523,206,25,NULL),(7524,205,25,NULL),(7525,204,25,NULL),(7526,202,25,NULL),(7527,201,25,NULL),(7528,200,25,NULL),(7529,198,25,NULL),(7530,191,25,NULL),(7531,190,25,NULL),(7532,189,25,NULL),(7533,169,25,NULL),(7534,167,25,NULL),(7535,164,25,NULL),(7536,162,25,NULL),(7537,160,25,NULL),(7538,154,25,NULL),(7539,153,25,NULL),(7540,152,25,NULL),(7541,151,25,NULL),(7542,148,25,NULL),(7543,147,25,NULL),(7544,145,25,NULL),(7545,144,25,NULL),(7546,142,25,NULL),(7547,141,25,NULL),(7548,140,25,NULL),(7549,139,25,NULL),(7550,137,25,NULL),(7551,136,25,NULL),(7552,135,25,NULL),(7553,130,25,NULL),(7554,125,25,NULL),(7555,122,25,NULL),(7556,121,25,NULL),(7557,120,25,NULL),(7558,118,25,NULL),(7559,102,25,NULL),(7560,96,25,NULL),(7561,94,25,NULL),(7562,92,25,NULL),(7563,90,25,NULL),(7564,88,25,NULL),(7565,86,25,NULL),(7566,85,25,NULL),(7567,84,25,NULL),(7568,83,25,NULL),(7569,82,25,NULL),(7570,81,25,NULL),(7571,78,25,NULL),(7572,77,25,NULL),(7573,76,25,NULL),(7574,75,25,NULL),(7575,74,25,NULL),(7576,73,25,NULL),(7577,70,25,NULL),(7578,69,25,NULL),(7579,67,25,NULL),(7580,66,25,NULL),(7581,64,25,NULL),(7582,63,25,NULL),(7583,62,25,NULL),(7584,61,25,NULL),(7585,59,25,NULL),(7586,58,25,NULL),(7587,55,25,NULL),(7588,54,25,NULL),(7589,53,25,NULL),(7590,50,25,NULL),(7591,49,25,NULL),(7592,48,25,NULL),(7593,47,25,NULL),(7594,46,25,NULL),(7595,45,25,NULL),(7596,43,25,NULL),(7597,42,25,NULL),(7598,41,25,NULL),(7599,39,25,NULL),(7600,38,25,NULL),(7601,35,25,NULL),(7602,34,25,NULL),(7603,33,25,NULL),(7604,32,25,NULL),(7605,31,25,NULL),(7606,29,25,NULL),(7607,28,25,NULL),(7608,27,25,NULL),(7609,26,25,NULL),(7610,25,25,NULL),(7611,24,25,NULL),(7612,23,25,NULL),(7613,21,25,NULL),(7614,20,25,NULL),(7615,19,25,NULL),(7616,18,25,NULL),(7617,17,25,NULL),(7618,16,25,NULL),(7619,15,25,NULL),(7620,14,25,NULL),(7621,13,25,NULL),(7622,11,25,NULL),(7623,9,25,NULL),(7624,7,25,NULL),(7625,6,25,NULL),(7626,5,25,NULL),(7627,4,25,NULL),(7628,3,25,NULL),(7629,2,25,NULL),(7630,1,25,NULL),(7631,3635,39,NULL),(7632,3436,39,NULL),(7633,3503,39,NULL),(7634,3531,39,NULL),(7635,3556,39,NULL),(7636,3585,39,NULL),(7637,3539,39,NULL),(7638,3418,39,NULL),(7639,3416,39,NULL),(7640,3511,39,NULL),(7641,3492,39,NULL),(7642,3926,39,NULL),(7643,3474,39,NULL),(7644,3449,39,NULL),(7645,3791,39,NULL),(7646,3440,39,NULL),(7647,3630,39,NULL),(7648,3488,39,NULL),(7649,3518,39,NULL),(7650,3598,39,NULL),(7651,3776,39,NULL),(7652,3730,39,NULL),(7653,4340,39,NULL),(7654,3640,39,NULL),(7655,4026,39,NULL),(7656,3877,39,NULL),(7657,3947,39,NULL),(7658,4940,39,NULL),(7659,3802,39,NULL),(7660,4835,39,NULL),(7661,4965,39,NULL),(7662,4990,39,NULL),(7663,3484,39,NULL),(7664,3500,39,NULL),(7665,3469,39,NULL),(7666,3505,39,NULL),(7667,3529,39,NULL),(7668,3477,39,NULL),(7669,3456,39,NULL),(7670,3464,39,NULL),(7671,3468,39,NULL),(7672,3908,39,NULL),(7673,3427,39,NULL),(7674,4189,39,NULL),(7675,3680,39,NULL),(7676,4317,39,NULL),(7677,4862,39,NULL),(7678,5474,39,NULL),(7679,3621,39,NULL),(7680,3842,39,NULL),(7681,4819,39,NULL),(7682,3603,39,NULL),(7683,3964,39,NULL),(7684,4449,39,NULL),(7685,4475,39,NULL),(7686,3728,39,NULL),(7687,3650,39,NULL),(7688,4588,39,NULL),(7689,3834,39,NULL),(7690,3435,39,NULL),(7691,3446,39,NULL),(7692,3975,39,NULL),(7693,3830,39,NULL),(7694,4028,39,NULL),(7695,3695,39,NULL),(7696,4032,39,NULL),(7697,4074,39,NULL),(7698,15085,39,NULL),(7699,10487,39,NULL),(7700,16610,38,NULL),(7701,16585,38,NULL),(7702,16579,38,NULL),(7703,16560,38,NULL),(7704,16556,38,NULL),(7705,16550,38,NULL),(7706,3411,38,NULL),(7707,3407,38,NULL),(7708,3408,38,NULL),(7709,3364,38,NULL),(7710,3355,38,NULL),(7711,3345,38,NULL),(7712,3354,38,NULL),(7713,3361,38,NULL),(7714,3174,38,NULL),(7715,2956,38,NULL),(7716,2653,38,NULL),(7717,2537,38,NULL),(7718,2529,38,NULL),(7719,2461,38,NULL),(7720,2401,38,NULL),(7721,2206,38,NULL),(7722,1971,38,NULL),(7723,1910,38,NULL),(7724,1658,38,NULL),(7725,1529,38,NULL),(7726,1512,38,NULL),(7727,1343,38,NULL),(7728,2215,38,NULL),(7729,1248,38,NULL),(7730,1004,38,NULL),(7731,994,38,NULL),(7732,896,38,NULL),(7733,881,38,NULL),(7734,713,38,NULL),(7735,438,38,NULL),(7736,413,38,NULL),(7737,350,38,NULL),(7738,349,38,NULL),(7739,283,38,NULL),(7740,268,38,NULL),(7741,228,38,NULL),(7742,219,38,NULL),(7743,217,38,NULL),(7744,216,38,NULL),(7745,209,38,NULL),(7746,200,38,NULL),(7747,187,38,NULL),(7748,169,38,NULL),(7749,141,38,NULL),(7750,118,38,NULL),(7751,92,38,NULL),(7752,66,38,NULL),(7753,56,38,NULL),(7754,35,38,NULL),(7755,27,38,NULL),(7756,26,38,NULL),(7757,14,38,NULL),(7758,9,38,NULL),(7759,7,38,NULL),(7760,1,38,NULL),(7761,3484,38,NULL),(7762,3629,38,NULL),(7763,3430,38,NULL),(7764,3596,38,NULL),(7765,3574,38,NULL),(7766,3469,38,NULL),(7767,3620,38,NULL),(7768,3433,38,NULL),(7769,3422,38,NULL),(7770,3464,38,NULL),(7771,3468,38,NULL),(7772,3427,38,NULL),(7773,3417,38,NULL),(7774,3432,38,NULL),(7775,3453,38,NULL),(7776,3528,38,NULL),(7777,3419,38,NULL),(7778,3510,38,NULL),(7779,3465,38,NULL),(7780,3611,38,NULL),(7781,3635,38,NULL),(7782,3476,38,NULL),(7783,3424,38,NULL),(7784,3712,38,NULL),(7785,3416,38,NULL),(7786,3492,38,NULL),(7787,3420,38,NULL),(7788,3481,38,NULL),(7789,3543,38,NULL),(7790,3423,38,NULL),(7791,3869,38,NULL),(7792,3598,38,NULL),(7793,4981,38,NULL),(7794,3802,38,NULL),(7795,4387,38,NULL),(7796,3435,38,NULL),(7797,3498,38,NULL),(7798,3820,38,NULL),(7799,3973,38,NULL),(7800,3459,38,NULL),(7801,16579,39,NULL),(7802,16560,39,NULL),(7803,16541,39,NULL),(7804,16556,39,NULL),(7805,16570,39,NULL),(7806,16574,39,NULL),(7807,16550,39,NULL),(7808,3411,39,NULL),(7809,3392,39,NULL),(7810,3364,39,NULL),(7811,3345,39,NULL),(7812,3360,39,NULL),(7813,3354,39,NULL),(7814,3349,39,NULL),(7815,3300,39,NULL),(7816,3365,39,NULL),(7817,3319,39,NULL),(7818,3191,39,NULL),(7819,3194,39,NULL),(7820,3151,39,NULL),(7821,3100,39,NULL),(7822,3033,39,NULL),(7823,3005,39,NULL),(7824,2965,39,NULL),(7825,2974,39,NULL),(7826,2873,39,NULL),(7827,2828,39,NULL),(7828,2806,39,NULL),(7829,2824,39,NULL),(7830,2780,39,NULL),(7831,2799,39,NULL),(7832,2769,39,NULL),(7833,2696,39,NULL),(7834,2652,39,NULL),(7835,2679,39,NULL),(7836,2574,39,NULL),(7837,2595,39,NULL),(7838,2579,39,NULL),(7839,2540,39,NULL),(7840,2544,39,NULL),(7841,2537,39,NULL),(7842,2529,39,NULL),(7843,2511,39,NULL),(7844,2500,39,NULL),(7845,2487,39,NULL),(7846,2486,39,NULL),(7847,2485,39,NULL),(7848,2461,39,NULL),(7849,2460,39,NULL),(7850,2441,39,NULL),(7851,2342,39,NULL),(7852,2379,39,NULL),(7853,2375,39,NULL),(7854,2364,39,NULL),(7855,2357,39,NULL),(7856,2335,39,NULL),(7857,2236,39,NULL),(7858,2270,39,NULL),(7859,2210,39,NULL),(7860,2206,39,NULL),(7861,2176,39,NULL),(7862,2149,39,NULL),(7863,2161,39,NULL),(7864,2109,39,NULL),(7865,2108,39,NULL),(7866,2095,39,NULL),(7867,2073,39,NULL),(7868,2037,39,NULL),(7869,2000,39,NULL),(7870,1985,39,NULL),(7871,1961,39,NULL),(7872,1929,39,NULL),(7873,1941,39,NULL),(7874,1920,39,NULL),(7875,1884,39,NULL),(7876,1863,39,NULL),(7877,1855,39,NULL),(7878,1848,39,NULL),(7879,1859,39,NULL),(7880,1832,39,NULL),(7881,1823,39,NULL),(7882,1800,39,NULL),(7883,1790,39,NULL),(7884,1768,39,NULL),(7885,1780,39,NULL),(7886,1754,39,NULL),(7887,1752,39,NULL),(7888,1750,39,NULL),(7889,1700,39,NULL),(7890,1679,39,NULL),(7891,1684,39,NULL),(7892,1658,39,NULL),(7893,1652,39,NULL),(7894,1614,39,NULL),(7895,1572,39,NULL),(7896,1552,39,NULL),(7897,1544,39,NULL),(7898,1534,39,NULL),(7899,1529,39,NULL),(7900,1539,39,NULL),(7901,1512,39,NULL),(7902,1525,39,NULL),(7903,1524,39,NULL),(7904,1496,39,NULL),(7905,1508,39,NULL),(7906,1481,39,NULL),(7907,1480,39,NULL),(7908,1464,39,NULL),(7909,1455,39,NULL),(7910,1450,39,NULL),(7911,1463,39,NULL),(7912,1461,39,NULL),(7913,1460,39,NULL),(7914,1442,39,NULL),(7915,1423,39,NULL),(7916,1417,39,NULL),(7917,1404,39,NULL),(7918,1394,39,NULL),(7919,1389,39,NULL),(7920,1399,39,NULL),(7921,1380,39,NULL),(7922,1385,39,NULL),(7923,1365,39,NULL),(7924,1351,39,NULL),(7925,1346,39,NULL),(7926,1337,39,NULL),(7927,1358,39,NULL),(7928,1356,39,NULL),(7929,1332,39,NULL),(7930,1323,39,NULL),(7931,1343,39,NULL),(7932,2269,39,NULL),(7933,1304,39,NULL),(7934,1295,39,NULL),(7935,2215,39,NULL),(7936,1252,39,NULL),(7937,1248,39,NULL),(7938,1726,39,NULL),(7939,1227,39,NULL),(7940,1208,39,NULL),(7941,1207,39,NULL),(7942,1200,39,NULL),(7943,1190,39,NULL),(7944,1189,39,NULL),(7945,1185,39,NULL),(7946,1362,39,NULL),(7947,1331,39,NULL),(7948,1302,39,NULL),(7949,1143,39,NULL),(7950,1146,39,NULL),(7951,1137,39,NULL),(7952,1122,39,NULL),(7953,1291,39,NULL),(7954,1089,39,NULL),(7955,1047,39,NULL),(7956,1046,39,NULL),(7957,1161,39,NULL),(7958,1038,39,NULL),(7959,1160,39,NULL),(7960,1026,39,NULL),(7961,1025,39,NULL),(7962,1022,39,NULL),(7963,1021,39,NULL),(7964,1020,39,NULL),(7965,1015,39,NULL),(7966,1013,39,NULL),(7967,1009,39,NULL),(7968,1004,39,NULL),(7969,1002,39,NULL),(7970,994,39,NULL),(7971,989,39,NULL),(7972,978,39,NULL),(7973,977,39,NULL),(7974,974,39,NULL),(7975,509,39,NULL),(7976,970,39,NULL),(7977,965,39,NULL),(7978,962,39,NULL),(7979,961,39,NULL),(7980,942,39,NULL),(7981,938,39,NULL),(7982,931,39,NULL),(7983,925,39,NULL),(7984,922,39,NULL),(7985,921,39,NULL),(7986,917,39,NULL),(7987,912,39,NULL),(7988,905,39,NULL),(7989,884,39,NULL),(7990,881,39,NULL),(7991,876,39,NULL),(7992,875,39,NULL),(7993,873,39,NULL),(7994,872,39,NULL),(7995,867,39,NULL),(7996,860,39,NULL),(7997,859,39,NULL),(7998,852,39,NULL),(7999,846,39,NULL),(8000,845,39,NULL),(8001,844,39,NULL),(8002,832,39,NULL),(8003,829,39,NULL),(8004,821,39,NULL),(8005,819,39,NULL),(8006,812,39,NULL),(8007,804,39,NULL),(8008,802,39,NULL),(8009,706,39,NULL),(8010,705,39,NULL),(8011,797,39,NULL),(8012,796,39,NULL),(8013,786,39,NULL),(8014,785,39,NULL),(8015,783,39,NULL),(8016,704,39,NULL),(8017,701,39,NULL),(8018,700,39,NULL),(8019,771,39,NULL),(8020,766,39,NULL),(8021,748,39,NULL),(8022,747,39,NULL),(8023,709,39,NULL),(8024,733,39,NULL),(8025,728,39,NULL),(8026,724,39,NULL),(8027,713,39,NULL),(8028,695,39,NULL),(8029,692,39,NULL),(8030,682,39,NULL),(8031,680,39,NULL),(8032,678,39,NULL),(8033,677,39,NULL),(8034,674,39,NULL),(8035,672,39,NULL),(8036,671,39,NULL),(8037,670,39,NULL),(8038,658,39,NULL),(8039,653,39,NULL),(8040,648,39,NULL),(8041,647,39,NULL),(8042,645,39,NULL),(8043,643,39,NULL),(8044,637,39,NULL),(8045,633,39,NULL),(8046,628,39,NULL),(8047,617,39,NULL),(8048,611,39,NULL),(8049,599,39,NULL),(8050,572,39,NULL),(8051,566,39,NULL),(8052,561,39,NULL),(8053,560,39,NULL),(8054,557,39,NULL),(8055,547,39,NULL),(8056,543,39,NULL),(8057,542,39,NULL),(8058,541,39,NULL),(8059,540,39,NULL),(8060,538,39,NULL),(8061,532,39,NULL),(8062,530,39,NULL),(8063,1721,39,NULL),(8064,525,39,NULL),(8065,523,39,NULL),(8066,521,39,NULL),(8067,520,39,NULL),(8068,515,39,NULL),(8069,513,39,NULL),(8070,507,39,NULL),(8071,506,39,NULL),(8072,504,39,NULL),(8073,503,39,NULL),(8074,498,39,NULL),(8075,496,39,NULL),(8076,494,39,NULL),(8077,485,39,NULL),(8078,476,39,NULL),(8079,463,39,NULL),(8080,462,39,NULL),(8081,461,39,NULL),(8082,459,39,NULL),(8083,455,39,NULL),(8084,451,39,NULL),(8085,450,39,NULL),(8086,448,39,NULL),(8087,443,39,NULL),(8088,442,39,NULL),(8089,441,39,NULL),(8090,438,39,NULL),(8091,434,39,NULL),(8092,416,39,NULL),(8093,415,39,NULL),(8094,414,39,NULL),(8095,413,39,NULL),(8096,412,39,NULL),(8097,410,39,NULL),(8098,409,39,NULL),(8099,404,39,NULL),(8100,402,39,NULL),(8101,397,39,NULL),(8102,392,39,NULL),(8103,389,39,NULL),(8104,387,39,NULL),(8105,383,39,NULL),(8106,382,39,NULL),(8107,378,39,NULL),(8108,374,39,NULL),(8109,371,39,NULL),(8110,367,39,NULL),(8111,350,39,NULL),(8112,349,39,NULL),(8113,347,39,NULL),(8114,345,39,NULL),(8115,344,39,NULL),(8116,342,39,NULL),(8117,338,39,NULL),(8118,326,39,NULL),(8119,324,39,NULL),(8120,316,39,NULL),(8121,300,39,NULL),(8122,292,39,NULL),(8123,290,39,NULL),(8124,287,39,NULL),(8125,283,39,NULL),(8126,278,39,NULL),(8127,275,39,NULL),(8128,273,39,NULL),(8129,268,39,NULL),(8130,263,39,NULL),(8131,260,39,NULL),(8132,258,39,NULL),(8133,257,39,NULL),(8134,242,39,NULL),(8135,240,39,NULL),(8136,239,39,NULL),(8137,237,39,NULL),(8138,234,39,NULL),(8139,232,39,NULL),(8140,231,39,NULL),(8141,230,39,NULL),(8142,229,39,NULL),(8143,228,39,NULL),(8144,226,39,NULL),(8145,225,39,NULL),(8146,222,39,NULL),(8147,219,39,NULL),(8148,217,39,NULL),(8149,216,39,NULL),(8150,215,39,NULL),(8151,209,39,NULL),(8152,206,39,NULL),(8153,205,39,NULL),(8154,204,39,NULL),(8155,203,39,NULL),(8156,202,39,NULL),(8157,200,39,NULL),(8158,199,39,NULL),(8159,198,39,NULL),(8160,190,39,NULL),(8161,189,39,NULL),(8162,187,39,NULL),(8163,179,39,NULL),(8164,171,39,NULL),(8165,169,39,NULL),(8166,167,39,NULL),(8167,165,39,NULL),(8168,164,39,NULL),(8169,162,39,NULL),(8170,160,39,NULL),(8171,155,39,NULL),(8172,154,39,NULL),(8173,153,39,NULL),(8174,151,39,NULL),(8175,150,39,NULL),(8176,148,39,NULL),(8177,145,39,NULL),(8178,144,39,NULL),(8179,143,39,NULL),(8180,142,39,NULL),(8181,141,39,NULL),(8182,136,39,NULL),(8183,134,39,NULL),(8184,130,39,NULL),(8185,129,39,NULL),(8186,128,39,NULL),(8187,127,39,NULL),(8188,125,39,NULL),(8189,124,39,NULL),(8190,122,39,NULL),(8191,121,39,NULL),(8192,120,39,NULL),(8193,117,39,NULL),(8194,116,39,NULL),(8195,114,39,NULL),(8196,113,39,NULL),(8197,112,39,NULL),(8198,111,39,NULL),(8199,110,39,NULL),(8200,109,39,NULL),(8201,108,39,NULL),(8202,107,39,NULL),(8203,104,39,NULL),(8204,103,39,NULL),(8205,102,39,NULL),(8206,101,39,NULL),(8207,100,39,NULL),(8208,98,39,NULL),(8209,96,39,NULL),(8210,94,39,NULL),(8211,92,39,NULL),(8212,90,39,NULL),(8213,88,39,NULL),(8214,83,39,NULL),(8215,82,39,NULL),(8216,81,39,NULL),(8217,78,39,NULL),(8218,76,39,NULL),(8219,75,39,NULL),(8220,74,39,NULL),(8221,73,39,NULL),(8222,71,39,NULL),(8223,70,39,NULL),(8224,69,39,NULL),(8225,67,39,NULL),(8226,66,39,NULL),(8227,64,39,NULL),(8228,63,39,NULL),(8229,62,39,NULL),(8230,61,39,NULL),(8231,60,39,NULL),(8232,59,39,NULL),(8233,58,39,NULL),(8234,56,39,NULL),(8235,54,39,NULL),(8236,53,39,NULL),(8237,52,39,NULL),(8238,51,39,NULL),(8239,50,39,NULL),(8240,48,39,NULL),(8241,45,39,NULL),(8242,43,39,NULL),(8243,41,39,NULL),(8244,35,39,NULL),(8245,34,39,NULL),(8246,33,39,NULL),(8247,32,39,NULL),(8248,31,39,NULL),(8249,29,39,NULL),(8250,28,39,NULL),(8251,27,39,NULL),(8252,26,39,NULL),(8253,24,39,NULL),(8254,21,39,NULL),(8255,20,39,NULL),(8256,19,39,NULL),(8257,18,39,NULL),(8258,16,39,NULL),(8259,15,39,NULL),(8260,14,39,NULL),(8261,13,39,NULL),(8262,12,39,NULL),(8263,11,39,NULL),(8264,9,39,NULL),(8265,8,39,NULL),(8266,7,39,NULL),(8267,5,39,NULL),(8268,4,39,NULL),(8269,3,39,NULL),(8270,2,39,NULL),(8271,1,39,NULL),(8272,15085,38,NULL),(8273,509,40,NULL),(8274,884,40,NULL),(8275,560,40,NULL),(8276,455,40,NULL),(8277,409,40,NULL),(8278,206,40,NULL),(8279,203,40,NULL),(8280,191,40,NULL),(8281,190,40,NULL),(8282,136,40,NULL),(8283,35,40,NULL),(8284,27,40,NULL),(8285,26,40,NULL),(8286,24,40,NULL),(8287,23,40,NULL),(8288,21,40,NULL),(8289,20,40,NULL),(8290,15,40,NULL),(8291,14,40,NULL),(8292,13,40,NULL),(8293,9,40,NULL),(8294,2,40,NULL),(8295,1,40,NULL),(8296,3421,40,NULL),(8297,3914,40,NULL),(8298,3785,40,NULL),(8299,3468,40,NULL),(8300,3450,40,NULL),(8301,3417,40,NULL),(8302,3522,40,NULL),(8303,3419,40,NULL),(8304,3621,40,NULL),(8305,3425,40,NULL),(8306,3423,40,NULL),(8307,4022,40,NULL),(8308,3435,40,NULL),(8309,3446,40,NULL),(8310,3739,40,NULL),(8311,3504,40,NULL),(8312,3483,40,NULL),(8313,4028,40,NULL),(8314,3762,40,NULL),(8315,3695,40,NULL),(8316,4032,40,NULL),(8317,3833,40,NULL),(8318,4074,40,NULL),(8319,16560,30,NULL),(8320,16556,30,NULL),(8321,16570,30,NULL),(8322,16574,30,NULL),(8323,16550,30,NULL),(8324,3407,30,NULL),(8325,3285,30,NULL),(8326,3258,30,NULL),(8327,3295,30,NULL),(8328,3271,30,NULL),(8329,3190,30,NULL),(8330,3191,30,NULL),(8331,3210,30,NULL),(8332,3223,30,NULL),(8333,3174,30,NULL),(8334,3162,30,NULL),(8335,3151,30,NULL),(8336,3184,30,NULL),(8337,3159,30,NULL),(8338,3136,30,NULL),(8339,3110,30,NULL),(8340,3099,30,NULL),(8341,3100,30,NULL),(8342,3033,30,NULL),(8343,3042,30,NULL),(8344,2974,30,NULL),(8345,2960,30,NULL),(8346,2942,30,NULL),(8347,2894,30,NULL),(8348,2828,30,NULL),(8349,2824,30,NULL),(8350,2798,30,NULL),(8351,2799,30,NULL),(8352,2769,30,NULL),(8353,2696,30,NULL),(8354,2683,30,NULL),(8355,2657,30,NULL),(8356,2595,30,NULL),(8357,2540,30,NULL),(8358,2544,30,NULL),(8359,2535,30,NULL),(8360,2520,30,NULL),(8361,2486,30,NULL),(8362,2485,30,NULL),(8363,2469,30,NULL),(8364,2461,30,NULL),(8365,2441,30,NULL),(8366,2413,30,NULL),(8367,2357,30,NULL),(8368,2235,30,NULL),(8369,2284,30,NULL),(8370,2287,30,NULL),(8371,2248,30,NULL),(8372,2220,30,NULL),(8373,2210,30,NULL),(8374,2185,30,NULL),(8375,2124,30,NULL),(8376,2108,30,NULL),(8377,2114,30,NULL),(8378,2086,30,NULL),(8379,2011,30,NULL),(8380,2000,30,NULL),(8381,1929,30,NULL),(8382,1920,30,NULL),(8383,1884,30,NULL),(8384,1897,30,NULL),(8385,1910,30,NULL),(8386,1880,30,NULL),(8387,1859,30,NULL),(8388,1823,30,NULL),(8389,1790,30,NULL),(8390,1796,30,NULL),(8391,1773,30,NULL),(8392,1769,30,NULL),(8393,1768,30,NULL),(8394,1780,30,NULL),(8395,1732,30,NULL),(8396,1716,30,NULL),(8397,1678,30,NULL),(8398,1684,30,NULL),(8399,1662,30,NULL),(8400,1636,30,NULL),(8401,1611,30,NULL),(8402,1572,30,NULL),(8403,1557,30,NULL),(8404,1539,30,NULL),(8405,1518,30,NULL),(8406,1512,30,NULL),(8407,1480,30,NULL),(8408,1470,30,NULL),(8409,1450,30,NULL),(8410,1461,30,NULL),(8411,1460,30,NULL),(8412,1436,30,NULL),(8413,1431,30,NULL),(8414,1389,30,NULL),(8415,1379,30,NULL),(8416,1380,30,NULL),(8417,1365,30,NULL),(8418,1370,30,NULL),(8419,1356,30,NULL),(8420,1332,30,NULL),(8421,1323,30,NULL),(8422,1343,30,NULL),(8423,1309,30,NULL),(8424,1304,30,NULL),(8425,1295,30,NULL),(8426,1290,30,NULL),(8427,1281,30,NULL),(8428,1266,30,NULL),(8429,2215,30,NULL),(8430,2309,30,NULL),(8431,1221,30,NULL),(8432,1362,30,NULL),(8433,1935,30,NULL),(8434,1313,30,NULL),(8435,1137,30,NULL),(8436,1291,30,NULL),(8437,1108,30,NULL),(8438,1163,30,NULL),(8439,1047,30,NULL),(8440,1161,30,NULL),(8441,1025,30,NULL),(8442,1013,30,NULL),(8443,1010,30,NULL),(8444,1004,30,NULL),(8445,1002,30,NULL),(8446,977,30,NULL),(8447,509,30,NULL),(8448,961,30,NULL),(8449,942,30,NULL),(8450,938,30,NULL),(8451,912,30,NULL),(8452,905,30,NULL),(8453,876,30,NULL),(8454,875,30,NULL),(8455,867,30,NULL),(8456,846,30,NULL),(8457,832,30,NULL),(8458,829,30,NULL),(8459,804,30,NULL),(8460,797,30,NULL),(8461,796,30,NULL),(8462,704,30,NULL),(8463,700,30,NULL),(8464,771,30,NULL),(8465,766,30,NULL),(8466,709,30,NULL),(8467,728,30,NULL),(8468,713,30,NULL),(8469,697,30,NULL),(8470,682,30,NULL),(8471,680,30,NULL),(8472,678,30,NULL),(8473,648,30,NULL),(8474,645,30,NULL),(8475,628,30,NULL),(8476,561,30,NULL),(8477,557,30,NULL),(8478,543,30,NULL),(8479,1721,30,NULL),(8480,523,30,NULL),(8481,507,30,NULL),(8482,506,30,NULL),(8483,500,30,NULL),(8484,496,30,NULL),(8485,485,30,NULL),(8486,476,30,NULL),(8487,450,30,NULL),(8488,442,30,NULL),(8489,441,30,NULL),(8490,438,30,NULL),(8491,415,30,NULL),(8492,414,30,NULL),(8493,413,30,NULL),(8494,412,30,NULL),(8495,409,30,NULL),(8496,394,30,NULL),(8497,392,30,NULL),(8498,389,30,NULL),(8499,387,30,NULL),(8500,383,30,NULL),(8501,378,30,NULL),(8502,374,30,NULL),(8503,367,30,NULL),(8504,350,30,NULL),(8505,349,30,NULL),(8506,347,30,NULL),(8507,345,30,NULL),(8508,344,30,NULL),(8509,342,30,NULL),(8510,338,30,NULL),(8511,328,30,NULL),(8512,326,30,NULL),(8513,303,30,NULL),(8514,292,30,NULL),(8515,290,30,NULL),(8516,287,30,NULL),(8517,283,30,NULL),(8518,268,30,NULL),(8519,263,30,NULL),(8520,260,30,NULL),(8521,258,30,NULL),(8522,257,30,NULL),(8523,242,30,NULL),(8524,240,30,NULL),(8525,237,30,NULL),(8526,234,30,NULL),(8527,232,30,NULL),(8528,231,30,NULL),(8529,230,30,NULL),(8530,229,30,NULL),(8531,228,30,NULL),(8532,226,30,NULL),(8533,225,30,NULL),(8534,219,30,NULL),(8535,217,30,NULL),(8536,216,30,NULL),(8537,206,30,NULL),(8538,203,30,NULL),(8539,202,30,NULL),(8540,200,30,NULL),(8541,199,30,NULL),(8542,191,30,NULL),(8543,190,30,NULL),(8544,189,30,NULL),(8545,187,30,NULL),(8546,173,30,NULL),(8547,169,30,NULL),(8548,162,30,NULL),(8549,160,30,NULL),(8550,155,30,NULL),(8551,154,30,NULL),(8552,153,30,NULL),(8553,151,30,NULL),(8554,150,30,NULL),(8555,148,30,NULL),(8556,145,30,NULL),(8557,144,30,NULL),(8558,142,30,NULL),(8559,141,30,NULL),(8560,137,30,NULL),(8561,136,30,NULL),(8562,131,30,NULL),(8563,125,30,NULL),(8564,122,30,NULL),(8565,121,30,NULL),(8566,119,30,NULL),(8567,118,30,NULL),(8568,114,30,NULL),(8569,108,30,NULL),(8570,107,30,NULL),(8571,104,30,NULL),(8572,103,30,NULL),(8573,102,30,NULL),(8574,101,30,NULL),(8575,100,30,NULL),(8576,98,30,NULL),(8577,94,30,NULL),(8578,92,30,NULL),(8579,88,30,NULL),(8580,86,30,NULL),(8581,83,30,NULL),(8582,82,30,NULL),(8583,81,30,NULL),(8584,78,30,NULL),(8585,77,30,NULL),(8586,75,30,NULL),(8587,74,30,NULL),(8588,73,30,NULL),(8589,70,30,NULL),(8590,69,30,NULL),(8591,67,30,NULL),(8592,66,30,NULL),(8593,65,30,NULL),(8594,63,30,NULL),(8595,62,30,NULL),(8596,61,30,NULL),(8597,59,30,NULL),(8598,58,30,NULL),(8599,55,30,NULL),(8600,54,30,NULL),(8601,53,30,NULL),(8602,52,30,NULL),(8603,51,30,NULL),(8604,50,30,NULL),(8605,49,30,NULL),(8606,48,30,NULL),(8607,47,30,NULL),(8608,46,30,NULL),(8609,45,30,NULL),(8610,43,30,NULL),(8611,40,30,NULL),(8612,39,30,NULL),(8613,38,30,NULL),(8614,35,30,NULL),(8615,34,30,NULL),(8616,33,30,NULL),(8617,32,30,NULL),(8618,28,30,NULL),(8619,27,30,NULL),(8620,26,30,NULL),(8621,25,30,NULL),(8622,24,30,NULL),(8623,23,30,NULL),(8624,22,30,NULL),(8625,21,30,NULL),(8626,20,30,NULL),(8627,19,30,NULL),(8628,18,30,NULL),(8629,17,30,NULL),(8630,16,30,NULL),(8631,15,30,NULL),(8632,14,30,NULL),(8633,13,30,NULL),(8634,11,30,NULL),(8635,9,30,NULL),(8636,7,30,NULL),(8637,6,30,NULL),(8638,5,30,NULL),(8639,4,30,NULL),(8640,3,30,NULL),(8641,2,30,NULL),(8642,1,30,NULL),(8643,16579,45,NULL),(8644,16560,45,NULL),(8645,16556,45,NULL),(8646,16570,45,NULL),(8647,16574,45,NULL),(8648,3411,45,NULL),(8649,3407,45,NULL),(8650,3360,45,NULL),(8651,3271,45,NULL),(8652,2239,45,NULL),(8653,1227,45,NULL),(8654,509,45,NULL),(8655,881,45,NULL),(8656,438,45,NULL),(8657,413,45,NULL),(8658,283,45,NULL),(8659,238,45,NULL),(8660,219,45,NULL),(8661,206,45,NULL),(8662,203,45,NULL),(8663,187,45,NULL),(8664,167,45,NULL),(8665,145,45,NULL),(8666,144,45,NULL),(8667,141,45,NULL),(8668,131,45,NULL),(8669,94,45,NULL),(8670,92,45,NULL),(8671,83,45,NULL),(8672,75,45,NULL),(8673,53,45,NULL),(8674,24,45,NULL),(8675,9,45,NULL),(8676,3,45,NULL),(8677,1,45,NULL),(8678,3484,45,NULL),(8679,3641,45,NULL),(8680,3574,45,NULL),(8681,3431,45,NULL),(8682,3812,45,NULL),(8683,4587,45,NULL),(8684,3831,45,NULL),(8685,3534,45,NULL),(8686,3484,30,NULL),(8687,3641,30,NULL),(8688,3431,30,NULL),(8689,3891,30,NULL),(8690,3452,30,NULL),(8691,3801,30,NULL),(8692,3417,30,NULL),(8693,3453,30,NULL),(8694,3419,30,NULL),(8695,3510,30,NULL),(8696,4397,30,NULL),(8697,3881,30,NULL),(8698,3621,30,NULL),(8699,5256,30,NULL),(8700,4587,30,NULL),(8701,3471,30,NULL),(8702,3773,30,NULL),(8703,4646,30,NULL),(8704,3446,30,NULL),(8705,3830,30,NULL),(8706,4028,30,NULL),(8707,3762,30,NULL),(8708,3993,30,NULL),(8709,4612,30,NULL),(8710,3695,30,NULL),(8711,4032,30,NULL),(8712,4493,30,NULL),(8713,4560,30,NULL),(8714,3833,30,NULL),(8715,4074,30,NULL),(8716,4170,30,NULL),(8717,4423,30,NULL),(8718,4217,30,NULL),(8719,3948,30,NULL),(8720,4312,30,NULL),(8721,4383,30,NULL),(8722,16560,48,NULL),(8723,16556,48,NULL),(8724,16570,48,NULL),(8725,3411,48,NULL),(8726,3407,48,NULL),(8727,3354,48,NULL),(8728,3306,48,NULL),(8729,3208,48,NULL),(8730,3174,48,NULL),(8731,3151,48,NULL),(8732,2965,48,NULL),(8733,2570,48,NULL),(8734,2579,48,NULL),(8735,2529,48,NULL),(8736,2523,48,NULL),(8737,2460,48,NULL),(8738,2390,48,NULL),(8739,2379,48,NULL),(8740,2260,48,NULL),(8741,2206,48,NULL),(8742,2149,48,NULL),(8743,2161,48,NULL),(8744,1901,48,NULL),(8745,1903,48,NULL),(8746,1768,48,NULL),(8747,1781,48,NULL),(8748,1780,48,NULL),(8749,1752,48,NULL),(8750,1695,48,NULL),(8751,1614,48,NULL),(8752,1534,48,NULL),(8753,1358,48,NULL),(8754,1312,48,NULL),(8755,1021,48,NULL),(8756,1004,48,NULL),(8757,994,48,NULL),(8758,978,48,NULL),(8759,921,48,NULL),(8760,881,48,NULL),(8761,796,48,NULL),(8762,704,48,NULL),(8763,700,48,NULL),(8764,771,48,NULL),(8765,733,48,NULL),(8766,662,48,NULL),(8767,575,48,NULL),(8768,547,48,NULL),(8769,543,48,NULL),(8770,485,48,NULL),(8771,463,48,NULL),(8772,455,48,NULL),(8773,451,48,NULL),(8774,412,48,NULL),(8775,376,48,NULL),(8776,344,48,NULL),(8777,283,48,NULL),(8778,263,48,NULL),(8779,258,48,NULL),(8780,242,48,NULL),(8781,240,48,NULL),(8782,238,48,NULL),(8783,219,48,NULL),(8784,217,48,NULL),(8785,216,48,NULL),(8786,206,48,NULL),(8787,205,48,NULL),(8788,198,48,NULL),(8789,189,48,NULL),(8790,169,48,NULL),(8791,151,48,NULL),(8792,145,48,NULL),(8793,144,48,NULL),(8794,137,48,NULL),(8795,136,48,NULL),(8796,125,48,NULL),(8797,122,48,NULL),(8798,121,48,NULL),(8799,111,48,NULL),(8800,110,48,NULL),(8801,104,48,NULL),(8802,102,48,NULL),(8803,101,48,NULL),(8804,100,48,NULL),(8805,94,48,NULL),(8806,88,48,NULL),(8807,75,48,NULL),(8808,74,48,NULL),(8809,73,48,NULL),(8810,70,48,NULL),(8811,69,48,NULL),(8812,67,48,NULL),(8813,66,48,NULL),(8814,58,48,NULL),(8815,56,48,NULL),(8816,48,48,NULL),(8817,35,48,NULL),(8818,33,48,NULL),(8819,28,48,NULL),(8820,27,48,NULL),(8821,26,48,NULL),(8822,21,48,NULL),(8823,20,48,NULL),(8824,18,48,NULL),(8825,16,48,NULL),(8826,15,48,NULL),(8827,14,48,NULL),(8828,13,48,NULL),(8829,11,48,NULL),(8830,9,48,NULL),(8831,8,48,NULL),(8832,7,48,NULL),(8833,6,48,NULL),(8834,5,48,NULL),(8835,4,48,NULL),(8836,3,48,NULL),(8837,2,48,NULL),(8838,1,48,NULL),(8839,3455,48,NULL),(8840,4103,48,NULL),(8841,3504,48,NULL),(8842,3483,48,NULL),(8843,3830,48,NULL),(8844,3762,48,NULL),(8845,3833,48,NULL),(8846,3482,48,NULL),(8847,3500,48,NULL),(8848,3469,48,NULL),(8849,3493,48,NULL),(8850,3444,48,NULL),(8851,3505,48,NULL),(8852,3711,48,NULL),(8853,3652,48,NULL),(8854,3427,48,NULL),(8855,3551,48,NULL),(8856,3450,48,NULL),(8857,3463,48,NULL),(8858,3417,48,NULL),(8859,3473,48,NULL),(8860,3621,48,NULL),(8861,3842,48,NULL),(8862,3592,48,NULL),(8863,4459,48,NULL),(8864,3436,48,NULL),(8865,3479,48,NULL),(8866,3418,48,NULL),(8867,3462,48,NULL),(8868,3416,48,NULL),(8869,3511,48,NULL),(8870,3474,48,NULL),(8871,3552,48,NULL),(8872,3423,48,NULL),(8873,4186,48,NULL),(8874,4351,48,NULL),(8875,3700,48,NULL),(8876,3650,48,NULL),(8877,16620,37,NULL),(8878,16585,37,NULL),(8879,16560,37,NULL),(8880,16556,37,NULL),(8881,16545,37,NULL),(8882,16574,37,NULL),(8883,16645,37,NULL),(8884,3392,37,NULL),(8885,3370,37,NULL),(8886,3340,37,NULL),(8887,3335,37,NULL),(8888,3345,37,NULL),(8889,3360,37,NULL),(8890,3375,37,NULL),(8891,3330,37,NULL),(8892,3349,37,NULL),(8893,3300,37,NULL),(8894,3304,37,NULL),(8895,3334,37,NULL),(8896,3285,37,NULL),(8897,3289,37,NULL),(8898,3270,37,NULL),(8899,3280,37,NULL),(8900,3286,37,NULL),(8901,3295,37,NULL),(8902,3248,37,NULL),(8903,3325,37,NULL),(8904,3217,37,NULL),(8905,3190,37,NULL),(8906,3194,37,NULL),(8907,3223,37,NULL),(8908,3211,37,NULL),(8909,3163,37,NULL),(8910,3174,37,NULL),(8911,3160,37,NULL),(8912,3169,37,NULL),(8913,3151,37,NULL),(8914,3158,37,NULL),(8915,3184,37,NULL),(8916,3159,37,NULL),(8917,3121,37,NULL),(8918,3131,37,NULL),(8919,3133,37,NULL),(8920,3097,37,NULL),(8921,3110,37,NULL),(8922,3105,37,NULL),(8923,3079,37,NULL),(8924,3066,37,NULL),(8925,3043,37,NULL),(8926,3042,37,NULL),(8927,3011,37,NULL),(8928,3016,37,NULL),(8929,3014,37,NULL),(8930,3005,37,NULL),(8931,2965,37,NULL),(8932,2974,37,NULL),(8933,2951,37,NULL),(8934,2962,37,NULL),(8935,2938,37,NULL),(8936,2942,37,NULL),(8937,2923,37,NULL),(8938,2914,37,NULL),(8939,2894,37,NULL),(8940,2873,37,NULL),(8941,2874,37,NULL),(8942,2859,37,NULL),(8943,2843,37,NULL),(8944,2824,37,NULL),(8945,2807,37,NULL),(8946,2780,37,NULL),(8947,2785,37,NULL),(8948,2810,37,NULL),(8949,2799,37,NULL),(8950,2778,37,NULL),(8951,2733,37,NULL),(8952,2716,37,NULL),(8953,2699,37,NULL),(8954,2698,37,NULL),(8955,2696,37,NULL),(8956,2684,37,NULL),(8957,2685,37,NULL),(8958,2683,37,NULL),(8959,2657,37,NULL),(8960,2658,37,NULL),(8961,2706,37,NULL),(8962,2707,37,NULL),(8963,2652,37,NULL),(8964,2678,37,NULL),(8965,2610,37,NULL),(8966,2601,37,NULL),(8967,2570,37,NULL),(8968,2593,37,NULL),(8969,2558,37,NULL),(8970,2559,37,NULL),(8971,2661,37,NULL),(8972,2550,37,NULL),(8973,2641,37,NULL),(8974,2580,37,NULL),(8975,2579,37,NULL),(8976,2583,37,NULL),(8977,2554,37,NULL),(8978,2545,37,NULL),(8979,2535,37,NULL),(8980,2530,37,NULL),(8981,2529,37,NULL),(8982,2523,37,NULL),(8983,2520,37,NULL),(8984,2511,37,NULL),(8985,2516,37,NULL),(8986,2506,37,NULL),(8987,2501,37,NULL),(8988,2491,37,NULL),(8989,2490,37,NULL),(8990,2481,37,NULL),(8991,2465,37,NULL),(8992,2469,37,NULL),(8993,2463,37,NULL),(8994,2461,37,NULL),(8995,2460,37,NULL),(8996,2458,37,NULL),(8997,2425,37,NULL),(8998,2442,37,NULL),(8999,2429,37,NULL),(9000,2419,37,NULL),(9001,2418,37,NULL),(9002,2416,37,NULL),(9003,2415,37,NULL),(9004,2414,37,NULL),(9005,2413,37,NULL),(9006,2406,37,NULL),(9007,2405,37,NULL),(9008,2404,37,NULL),(9009,2396,37,NULL),(9010,2342,37,NULL),(9011,2390,37,NULL),(9012,2381,37,NULL),(9013,2379,37,NULL),(9014,2374,37,NULL),(9015,2364,37,NULL),(9016,2360,37,NULL),(9017,2351,37,NULL),(9018,2326,37,NULL),(9019,2315,37,NULL),(9020,2319,37,NULL),(9021,2300,37,NULL),(9022,2299,37,NULL),(9023,2236,37,NULL),(9024,2284,37,NULL),(9025,2270,37,NULL),(9026,2275,37,NULL),(9027,2274,37,NULL),(9028,2239,37,NULL),(9029,2264,37,NULL),(9030,2257,37,NULL),(9031,2260,37,NULL),(9032,2248,37,NULL),(9033,2221,37,NULL),(9034,2220,37,NULL),(9035,2208,37,NULL),(9036,2206,37,NULL),(9037,2185,37,NULL),(9038,2169,37,NULL),(9039,2177,37,NULL),(9040,2176,37,NULL),(9041,2154,37,NULL),(9042,2149,37,NULL),(9043,2148,37,NULL),(9044,2161,37,NULL),(9045,2140,37,NULL),(9046,2134,37,NULL),(9047,2133,37,NULL),(9048,2125,37,NULL),(9049,2121,37,NULL),(9050,2119,37,NULL),(9051,2109,37,NULL),(9052,2103,37,NULL),(9053,2116,37,NULL),(9054,2089,37,NULL),(9055,2085,37,NULL),(9056,2070,37,NULL),(9057,2044,37,NULL),(9058,2053,37,NULL),(9059,2028,37,NULL),(9060,2038,37,NULL),(9061,2017,37,NULL),(9062,2011,37,NULL),(9063,2023,37,NULL),(9064,2022,37,NULL),(9065,2001,37,NULL),(9066,2000,37,NULL),(9067,1995,37,NULL),(9068,1985,37,NULL),(9069,1980,37,NULL),(9070,1991,37,NULL),(9071,1963,37,NULL),(9072,1962,37,NULL),(9073,1976,37,NULL),(9074,1953,37,NULL),(9075,1952,37,NULL),(9076,1945,37,NULL),(9077,1937,37,NULL),(9078,1930,37,NULL),(9079,1929,37,NULL),(9080,1942,37,NULL),(9081,1941,37,NULL),(9082,1922,37,NULL),(9083,1920,37,NULL),(9084,1926,37,NULL),(9085,1905,37,NULL),(9086,1903,37,NULL),(9087,1899,37,NULL),(9088,1910,37,NULL),(9089,1894,37,NULL),(9090,1869,37,NULL),(9091,1833,37,NULL),(9092,1832,37,NULL),(9093,1844,37,NULL),(9094,1823,37,NULL),(9095,1829,37,NULL),(9096,1800,37,NULL),(9097,1814,37,NULL),(9098,1813,37,NULL),(9099,1791,37,NULL),(9100,1790,37,NULL),(9101,1784,37,NULL),(9102,1769,37,NULL),(9103,1768,37,NULL),(9104,1780,37,NULL),(9105,1752,37,NULL),(9106,1765,37,NULL),(9107,1749,37,NULL),(9108,1748,37,NULL),(9109,1732,37,NULL),(9110,1718,37,NULL),(9111,1672,37,NULL),(9112,1684,37,NULL),(9113,1662,37,NULL),(9114,1647,37,NULL),(9115,1671,37,NULL),(9116,1652,37,NULL),(9117,1631,37,NULL),(9118,1636,37,NULL),(9119,1609,37,NULL),(9120,1593,37,NULL),(9121,1590,37,NULL),(9122,1568,37,NULL),(9123,1572,37,NULL),(9124,1552,37,NULL),(9125,1551,37,NULL),(9126,1545,37,NULL),(9127,1534,37,NULL),(9128,1528,37,NULL),(9129,1539,37,NULL),(9130,1512,37,NULL),(9131,1497,37,NULL),(9132,1508,37,NULL),(9133,1493,37,NULL),(9134,1492,37,NULL),(9135,1470,37,NULL),(9136,1464,37,NULL),(9137,1456,37,NULL),(9138,1455,37,NULL),(9139,1452,37,NULL),(9140,1463,37,NULL),(9141,1460,37,NULL),(9142,1436,37,NULL),(9143,1446,37,NULL),(9144,1422,37,NULL),(9145,1431,37,NULL),(9146,1408,37,NULL),(9147,1400,37,NULL),(9148,1381,37,NULL),(9149,1387,37,NULL),(9150,1367,37,NULL),(9151,1365,37,NULL),(9152,1352,37,NULL),(9153,1351,37,NULL),(9154,1371,37,NULL),(9155,1346,37,NULL),(9156,1358,37,NULL),(9157,1356,37,NULL),(9158,1343,37,NULL),(9159,1342,37,NULL),(9160,1310,37,NULL),(9161,1296,37,NULL),(9162,1295,37,NULL),(9163,1293,37,NULL),(9164,1282,37,NULL),(9165,1277,37,NULL),(9166,1267,37,NULL),(9167,2215,37,NULL),(9168,1254,37,NULL),(9169,1726,37,NULL),(9170,2273,37,NULL),(9171,1233,37,NULL),(9172,2191,37,NULL),(9173,1514,37,NULL),(9174,1207,37,NULL),(9175,1202,37,NULL),(9176,1405,37,NULL),(9177,1957,37,NULL),(9178,1382,37,NULL),(9179,1361,37,NULL),(9180,1331,37,NULL),(9181,1302,37,NULL),(9182,1143,37,NULL),(9183,1140,37,NULL),(9184,1128,37,NULL),(9185,1122,37,NULL),(9186,1109,37,NULL),(9187,1108,37,NULL),(9188,1106,37,NULL),(9189,1094,37,NULL),(9190,1091,37,NULL),(9191,1079,37,NULL),(9192,1081,37,NULL),(9193,1072,37,NULL),(9194,1054,37,NULL),(9195,1051,37,NULL),(9196,1046,37,NULL),(9197,1161,37,NULL),(9198,1038,37,NULL),(9199,1029,37,NULL),(9200,1020,37,NULL),(9201,1011,37,NULL),(9202,1004,37,NULL),(9203,999,37,NULL),(9204,994,37,NULL),(9205,992,37,NULL),(9206,989,37,NULL),(9207,988,37,NULL),(9208,978,37,NULL),(9209,977,37,NULL),(9210,509,37,NULL),(9211,962,37,NULL),(9212,961,37,NULL),(9213,959,37,NULL),(9214,951,37,NULL),(9215,947,37,NULL),(9216,931,37,NULL),(9217,930,37,NULL),(9218,922,37,NULL),(9219,921,37,NULL),(9220,917,37,NULL),(9221,916,37,NULL),(9222,915,37,NULL),(9223,912,37,NULL),(9224,904,37,NULL),(9225,896,37,NULL),(9226,890,37,NULL),(9227,885,37,NULL),(9228,884,37,NULL),(9229,881,37,NULL),(9230,877,37,NULL),(9231,876,37,NULL),(9232,875,37,NULL),(9233,874,37,NULL),(9234,872,37,NULL),(9235,860,37,NULL),(9236,852,37,NULL),(9237,848,37,NULL),(9238,846,37,NULL),(9239,841,37,NULL),(9240,840,37,NULL),(9241,641,37,NULL),(9242,827,37,NULL),(9243,804,37,NULL),(9244,802,37,NULL),(9245,798,37,NULL),(9246,797,37,NULL),(9247,796,37,NULL),(9248,791,37,NULL),(9249,787,37,NULL),(9250,785,37,NULL),(9251,784,37,NULL),(9252,783,37,NULL),(9253,704,37,NULL),(9254,703,37,NULL),(9255,771,37,NULL),(9256,767,37,NULL),(9257,590,37,NULL),(9258,763,37,NULL),(9259,743,37,NULL),(9260,709,37,NULL),(9261,739,37,NULL),(9262,733,37,NULL),(9263,731,37,NULL),(9264,729,37,NULL),(9265,725,37,NULL),(9266,724,37,NULL),(9267,719,37,NULL),(9268,713,37,NULL),(9269,695,37,NULL),(9270,693,37,NULL),(9271,692,37,NULL),(9272,684,37,NULL),(9273,680,37,NULL),(9274,672,37,NULL),(9275,671,37,NULL),(9276,670,37,NULL),(9277,665,37,NULL),(9278,664,37,NULL),(9279,658,37,NULL),(9280,654,37,NULL),(9281,653,37,NULL),(9282,650,37,NULL),(9283,646,37,NULL),(9284,643,37,NULL),(9285,633,37,NULL),(9286,632,37,NULL),(9287,624,37,NULL),(9288,605,37,NULL),(9289,592,37,NULL),(9290,575,37,NULL),(9291,567,37,NULL),(9292,564,37,NULL),(9293,561,37,NULL),(9294,560,37,NULL),(9295,557,37,NULL),(9296,547,37,NULL),(9297,542,37,NULL),(9298,540,37,NULL),(9299,539,37,NULL),(9300,538,37,NULL),(9301,535,37,NULL),(9302,530,37,NULL),(9303,525,37,NULL),(9304,520,37,NULL),(9305,515,37,NULL),(9306,513,37,NULL),(9307,506,37,NULL),(9308,500,37,NULL),(9309,494,37,NULL),(9310,491,37,NULL),(9311,485,37,NULL),(9312,476,37,NULL),(9313,468,37,NULL),(9314,462,37,NULL),(9315,461,37,NULL),(9316,455,37,NULL),(9317,453,37,NULL),(9318,451,37,NULL),(9319,448,37,NULL),(9320,443,37,NULL),(9321,442,37,NULL),(9322,441,37,NULL),(9323,440,37,NULL),(9324,438,37,NULL),(9325,434,37,NULL),(9326,432,37,NULL),(9327,423,37,NULL),(9328,421,37,NULL),(9329,419,37,NULL),(9330,416,37,NULL),(9331,415,37,NULL),(9332,414,37,NULL),(9333,412,37,NULL),(9334,409,37,NULL),(9335,392,37,NULL),(9336,390,37,NULL),(9337,389,37,NULL),(9338,387,37,NULL),(9339,386,37,NULL),(9340,383,37,NULL),(9341,378,37,NULL),(9342,377,37,NULL),(9343,374,37,NULL),(9344,371,37,NULL),(9345,367,37,NULL),(9346,363,37,NULL),(9347,350,37,NULL),(9348,349,37,NULL),(9349,347,37,NULL),(9350,345,37,NULL),(9351,344,37,NULL),(9352,342,37,NULL),(9353,338,37,NULL),(9354,337,37,NULL),(9355,326,37,NULL),(9356,322,37,NULL),(9357,319,37,NULL),(9358,316,37,NULL),(9359,303,37,NULL),(9360,300,37,NULL),(9361,290,37,NULL),(9362,289,37,NULL),(9363,287,37,NULL),(9364,283,37,NULL),(9365,278,37,NULL),(9366,275,37,NULL),(9367,274,37,NULL),(9368,273,37,NULL),(9369,268,37,NULL),(9370,264,37,NULL),(9371,263,37,NULL),(9372,260,37,NULL),(9373,258,37,NULL),(9374,257,37,NULL),(9375,242,37,NULL),(9376,241,37,NULL),(9377,240,37,NULL),(9378,238,37,NULL),(9379,236,37,NULL),(9380,231,37,NULL),(9381,230,37,NULL),(9382,229,37,NULL),(9383,224,37,NULL),(9384,221,37,NULL),(9385,219,37,NULL),(9386,217,37,NULL),(9387,216,37,NULL),(9388,215,37,NULL),(9389,214,37,NULL),(9390,213,37,NULL),(9391,210,37,NULL),(9392,209,37,NULL),(9393,208,37,NULL),(9394,207,37,NULL),(9395,206,37,NULL),(9396,205,37,NULL),(9397,204,37,NULL),(9398,202,37,NULL),(9399,201,37,NULL),(9400,200,37,NULL),(9401,199,37,NULL),(9402,198,37,NULL),(9403,191,37,NULL),(9404,190,37,NULL),(9405,189,37,NULL),(9406,187,37,NULL),(9407,179,37,NULL),(9408,172,37,NULL),(9409,169,37,NULL),(9410,167,37,NULL),(9411,165,37,NULL),(9412,164,37,NULL),(9413,162,37,NULL),(9414,154,37,NULL),(9415,153,37,NULL),(9416,151,37,NULL),(9417,145,37,NULL),(9418,144,37,NULL),(9419,137,37,NULL),(9420,136,37,NULL),(9421,134,37,NULL),(9422,131,37,NULL),(9423,130,37,NULL),(9424,129,37,NULL),(9425,128,37,NULL),(9426,127,37,NULL),(9427,125,37,NULL),(9428,122,37,NULL),(9429,121,37,NULL),(9430,120,37,NULL),(9431,119,37,NULL),(9432,118,37,NULL),(9433,117,37,NULL),(9434,116,37,NULL),(9435,113,37,NULL),(9436,112,37,NULL),(9437,111,37,NULL),(9438,110,37,NULL),(9439,108,37,NULL),(9440,107,37,NULL),(9441,104,37,NULL),(9442,103,37,NULL),(9443,102,37,NULL),(9444,100,37,NULL),(9445,98,37,NULL),(9446,94,37,NULL),(9447,93,37,NULL),(9448,90,37,NULL),(9449,88,37,NULL),(9450,81,37,NULL),(9451,79,37,NULL),(9452,78,37,NULL),(9453,77,37,NULL),(9454,75,37,NULL),(9455,74,37,NULL),(9456,73,37,NULL),(9457,72,37,NULL),(9458,70,37,NULL),(9459,69,37,NULL),(9460,67,37,NULL),(9461,66,37,NULL),(9462,64,37,NULL),(9463,63,37,NULL),(9464,62,37,NULL),(9465,60,37,NULL),(9466,59,37,NULL),(9467,58,37,NULL),(9468,56,37,NULL),(9469,55,37,NULL),(9470,54,37,NULL),(9471,53,37,NULL),(9472,52,37,NULL),(9473,51,37,NULL),(9474,50,37,NULL),(9475,49,37,NULL),(9476,48,37,NULL),(9477,47,37,NULL),(9478,46,37,NULL),(9479,43,37,NULL),(9480,42,37,NULL),(9481,41,37,NULL),(9482,40,37,NULL),(9483,39,37,NULL),(9484,37,37,NULL),(9485,36,37,NULL),(9486,35,37,NULL),(9487,34,37,NULL),(9488,33,37,NULL),(9489,32,37,NULL),(9490,31,37,NULL),(9491,29,37,NULL),(9492,28,37,NULL),(9493,27,37,NULL),(9494,26,37,NULL),(9495,22,37,NULL),(9496,21,37,NULL),(9497,20,37,NULL),(9498,17,37,NULL),(9499,15,37,NULL),(9500,14,37,NULL),(9501,13,37,NULL),(9502,12,37,NULL),(9503,11,37,NULL),(9504,9,37,NULL),(9505,8,37,NULL),(9506,7,37,NULL),(9507,5,37,NULL),(9508,4,37,NULL),(9509,3,37,NULL),(9510,1,37,NULL),(9511,3484,37,NULL),(9512,3632,37,NULL),(9513,3535,37,NULL),(9514,3430,37,NULL),(9515,3596,37,NULL),(9516,3569,37,NULL),(9517,3500,37,NULL),(9518,3469,37,NULL),(9519,3433,37,NULL),(9520,3493,37,NULL),(9521,3444,37,NULL),(9522,3516,37,NULL),(9523,3505,37,NULL),(9524,3876,37,NULL),(9525,3525,37,NULL),(9526,3961,37,NULL),(9527,4064,37,NULL),(9528,3885,37,NULL),(9529,3983,37,NULL),(9530,3421,37,NULL),(9531,3731,37,NULL),(9532,3566,37,NULL),(9533,3643,37,NULL),(9534,4445,37,NULL),(9535,3765,37,NULL),(9536,3891,37,NULL),(9537,4078,37,NULL),(9538,3559,37,NULL),(9539,4486,37,NULL),(9540,3914,37,NULL),(9541,3785,37,NULL),(9542,3452,37,NULL),(9543,3529,37,NULL),(9544,3429,37,NULL),(9545,3422,37,NULL),(9546,3861,37,NULL),(9547,3652,37,NULL),(9548,3464,37,NULL),(9549,3468,37,NULL),(9550,3908,37,NULL),(9551,3523,37,NULL),(9552,3427,37,NULL),(9553,3551,37,NULL),(9554,3494,37,NULL),(9555,3519,37,NULL),(9556,3450,37,NULL),(9557,4110,37,NULL),(9558,3417,37,NULL),(9559,3536,37,NULL),(9560,3561,37,NULL),(9561,3423,37,NULL),(9562,5689,37,NULL),(9563,3453,37,NULL),(9564,4736,37,NULL),(9565,3680,37,NULL),(9566,3626,37,NULL),(9567,3522,37,NULL),(9568,5824,37,NULL),(9569,4149,37,NULL),(9570,4158,37,NULL),(9571,3930,37,NULL),(9572,4196,37,NULL),(9573,4324,37,NULL),(9574,3684,37,NULL),(9575,3835,37,NULL),(9576,4114,37,NULL),(9577,3898,37,NULL),(9578,3419,37,NULL),(9579,3473,37,NULL),(9580,3510,37,NULL),(9581,4397,37,NULL),(9582,4059,37,NULL),(9583,4156,37,NULL),(9584,3497,37,NULL),(9585,3713,37,NULL),(9586,4920,37,NULL),(9587,3894,37,NULL),(9588,4862,37,NULL),(9589,3465,37,NULL),(9590,4131,37,NULL),(9591,3881,37,NULL),(9592,5509,37,NULL),(9593,5474,37,NULL),(9594,3621,37,NULL),(9595,3472,37,NULL),(9596,5256,37,NULL),(9597,3797,37,NULL),(9598,5768,37,NULL),(9599,3907,37,NULL),(9600,3683,37,NULL),(9601,4443,37,NULL),(9602,4210,37,NULL),(9603,3955,37,NULL),(9604,3964,37,NULL),(9605,4693,37,NULL),(9606,3875,37,NULL),(9607,4161,37,NULL),(9608,4113,37,NULL),(9609,4459,37,NULL),(9610,4587,37,NULL),(9611,4449,37,NULL),(9612,4570,37,NULL),(9613,4475,37,NULL),(9614,4564,37,NULL),(9615,6421,37,NULL),(9616,4532,37,NULL),(9617,4654,37,NULL),(9618,4639,37,NULL),(9619,4166,37,NULL),(9620,4415,37,NULL),(9621,6349,37,NULL),(9622,16722,37,NULL),(9623,3532,37,NULL),(9624,3515,37,NULL),(9625,4348,37,NULL),(9626,3512,37,NULL),(9627,3526,37,NULL),(9628,3447,37,NULL),(9629,3436,37,NULL),(9630,3953,37,NULL),(9631,3503,37,NULL),(9632,3531,37,NULL),(9633,3556,37,NULL),(9634,4174,37,NULL),(9635,3929,37,NULL),(9636,4353,37,NULL),(9637,3509,37,NULL),(9638,3585,37,NULL),(9639,3660,37,NULL),(9640,3942,37,NULL),(9641,3560,37,NULL),(9642,3610,37,NULL),(9643,3537,37,NULL),(9644,3962,37,NULL),(9645,3471,37,NULL),(9646,3823,37,NULL),(9647,3486,37,NULL),(9648,3593,37,NULL),(9649,3870,37,NULL),(9650,4229,37,NULL),(9651,3476,37,NULL),(9652,3748,37,NULL),(9653,4552,37,NULL),(9654,4082,37,NULL),(9655,4127,37,NULL),(9656,3642,37,NULL),(9657,3458,37,NULL),(9658,3479,37,NULL),(9659,3872,37,NULL),(9660,4111,37,NULL),(9661,3539,37,NULL),(9662,3445,37,NULL),(9663,3418,37,NULL),(9664,3424,37,NULL),(9665,3712,37,NULL),(9666,3462,37,NULL),(9667,3416,37,NULL),(9668,3511,37,NULL),(9669,4095,37,NULL),(9670,3492,37,NULL),(9671,3723,37,NULL),(9672,3837,37,NULL),(9673,4000,37,NULL),(9674,4150,37,NULL),(9675,3474,37,NULL),(9676,3449,37,NULL),(9677,3467,37,NULL),(9678,3681,37,NULL),(9679,3437,37,NULL),(9680,3760,37,NULL),(9681,3420,37,NULL),(9682,3578,37,NULL),(9683,3481,37,NULL),(9684,3440,37,NULL),(9685,4152,37,NULL),(9686,3691,37,NULL),(9687,3879,37,NULL),(9688,3425,37,NULL),(9689,3647,37,NULL),(9690,3759,37,NULL),(9691,3544,37,NULL),(9692,4198,37,NULL),(9693,3852,37,NULL),(9694,3850,37,NULL),(9695,4376,37,NULL),(9696,3432,37,NULL),(9697,3869,37,NULL),(9698,3534,37,NULL),(9699,3860,37,NULL),(9700,3478,37,NULL),(9701,3818,37,NULL),(9702,3627,37,NULL),(9703,3530,37,NULL),(9704,3488,37,NULL),(9705,3613,37,NULL),(9706,5962,37,NULL),(9707,3666,37,NULL),(9708,4389,37,NULL),(9709,3426,37,NULL),(9710,3518,37,NULL),(9711,3805,37,NULL),(9712,4073,37,NULL),(9713,3793,37,NULL),(9714,4003,37,NULL),(9715,3733,37,NULL),(9716,3565,37,NULL),(9717,3441,37,NULL),(9718,4646,37,NULL),(9719,4048,37,NULL),(9720,3813,37,NULL),(9721,3997,37,NULL),(9722,4089,37,NULL),(9723,3668,37,NULL),(9724,4159,37,NULL),(9725,3912,37,NULL),(9726,4224,37,NULL),(9727,3598,37,NULL),(9728,3639,37,NULL),(9729,3730,37,NULL),(9730,3766,37,NULL),(9731,5030,37,NULL),(9732,4681,37,NULL),(9733,4753,37,NULL),(9734,4401,37,NULL),(9735,5657,37,NULL),(9736,3499,37,NULL),(9737,4981,37,NULL),(9738,3640,37,NULL),(9739,4026,37,NULL),(9740,4769,37,NULL),(9741,4737,37,NULL),(9742,5240,37,NULL),(9743,5367,37,NULL),(9744,3700,37,NULL),(9745,4690,37,NULL),(9746,3782,37,NULL),(9747,4429,37,NULL),(9748,4256,37,NULL),(9749,4393,37,NULL),(9750,3999,37,NULL),(9751,3704,37,NULL),(9752,3947,37,NULL),(9753,4045,37,NULL),(9754,4008,37,NULL),(9755,4209,37,NULL),(9756,3745,37,NULL),(9757,3664,37,NULL),(9758,3753,37,NULL),(9759,4800,37,NULL),(9760,3933,37,NULL),(9761,3892,37,NULL),(9762,3847,37,NULL),(9763,5464,37,NULL),(9764,3802,37,NULL),(9765,5278,37,NULL),(9766,4556,37,NULL),(9767,4029,37,NULL),(9768,4090,37,NULL),(9769,4446,37,NULL),(9770,4033,37,NULL),(9771,4427,37,NULL),(9772,4242,37,NULL),(9773,4673,37,NULL),(9774,6351,37,NULL),(9775,4603,37,NULL),(9776,4513,37,NULL),(9777,6362,37,NULL),(9778,5972,37,NULL),(9779,4803,37,NULL),(9780,4598,37,NULL),(9781,4512,37,NULL),(9782,4272,37,NULL),(9783,16678,37,NULL),(9784,3682,37,NULL),(9785,3554,37,NULL),(9786,3431,37,NULL),(9787,3435,37,NULL),(9788,3846,37,NULL),(9789,4267,37,NULL),(9790,3455,37,NULL),(9791,3739,37,NULL),(9792,5472,37,NULL),(9793,4299,37,NULL),(9794,4103,37,NULL),(9795,5049,37,NULL),(9796,3815,37,NULL),(9797,3504,37,NULL),(9798,3483,37,NULL),(9799,3923,37,NULL),(9800,5147,37,NULL),(9801,4028,37,NULL),(9802,3993,37,NULL),(9803,5992,37,NULL),(9804,5122,37,NULL),(9805,4941,37,NULL),(9806,4217,37,NULL),(9807,5043,37,NULL),(9808,3948,37,NULL),(9809,3808,37,NULL),(9810,4903,37,NULL),(9811,3761,37,NULL),(9812,3830,37,NULL),(9813,3762,37,NULL),(9814,4612,37,NULL),(9815,4261,37,NULL),(9816,4560,37,NULL),(9817,3833,37,NULL),(9818,4720,37,NULL),(9819,4074,37,NULL),(9820,4170,37,NULL),(9821,4423,37,NULL),(9822,4088,37,NULL),(9823,4383,37,NULL),(9824,3638,37,NULL),(9825,3674,37,NULL),(9826,3443,37,NULL),(9827,3816,37,NULL),(9828,4582,37,NULL),(9829,3763,37,NULL),(9830,4214,37,NULL),(9831,3728,37,NULL),(9832,3656,37,NULL),(9833,3827,37,NULL),(9834,3677,37,NULL),(9835,3880,37,NULL),(9836,4794,37,NULL),(9837,3555,37,NULL),(9838,3650,37,NULL),(9839,3706,37,NULL),(9840,3843,37,NULL),(9841,4462,37,NULL),(9842,4620,37,NULL),(9843,4588,37,NULL),(9844,4702,37,NULL),(9845,15332,37,NULL),(9846,16165,37,NULL),(9847,10487,37,NULL),(9848,13566,37,NULL),(9849,14077,37,NULL),(9850,6617,37,NULL),(9851,6727,37,NULL),(9852,3532,51,NULL),(9853,3635,51,NULL),(9854,3436,51,NULL),(9855,3503,51,NULL),(9856,3531,51,NULL),(9857,3556,51,NULL),(9858,4097,51,NULL),(9859,3585,51,NULL),(9860,3823,51,NULL),(9861,3486,51,NULL),(9862,3593,51,NULL),(9863,3918,51,NULL),(9864,3642,51,NULL),(9865,3479,51,NULL),(9866,3418,51,NULL),(9867,3424,51,NULL),(9868,3712,51,NULL),(9869,3416,51,NULL),(9870,4095,51,NULL),(9871,3837,51,NULL),(9872,3449,51,NULL),(9873,3760,51,NULL),(9874,3676,51,NULL),(9875,3578,51,NULL),(9876,3440,51,NULL),(9877,3737,51,NULL),(9878,4259,51,NULL),(9879,3425,51,NULL),(9880,3759,51,NULL),(9881,3767,51,NULL),(9882,3534,51,NULL),(9883,3448,51,NULL),(9884,3690,51,NULL),(9885,3530,51,NULL),(9886,4507,51,NULL),(9887,3613,51,NULL),(9888,5962,51,NULL),(9889,4215,51,NULL),(9890,3514,51,NULL),(9891,3793,51,NULL),(9892,3517,51,NULL),(9893,3565,51,NULL),(9894,3441,51,NULL),(9895,4646,51,NULL),(9896,3813,51,NULL),(9897,4089,51,NULL),(9898,3668,51,NULL),(9899,4159,51,NULL),(9900,4224,51,NULL),(9901,6264,51,NULL),(9902,3776,51,NULL),(9903,3766,51,NULL),(9904,4753,51,NULL),(9905,3602,51,NULL),(9906,4401,51,NULL),(9907,3990,51,NULL),(9908,3700,51,NULL),(9909,3956,51,NULL),(9910,5641,51,NULL),(9911,3999,51,NULL),(9912,4045,51,NULL),(9913,5114,51,NULL),(9914,4484,51,NULL),(9915,3664,51,NULL),(9916,5464,51,NULL),(9917,3802,51,NULL),(9918,4012,51,NULL),(9919,5670,51,NULL),(9920,4242,51,NULL),(9921,4673,51,NULL),(9922,3484,51,NULL),(9923,3493,51,NULL),(9924,3444,51,NULL),(9925,3525,51,NULL),(9926,3452,51,NULL),(9927,3456,51,NULL),(9928,4060,51,NULL),(9929,3468,51,NULL),(9930,3522,51,NULL),(9931,3528,51,NULL),(9932,4114,51,NULL),(9933,3473,51,NULL),(9934,4920,51,NULL),(9935,3621,51,NULL),(9936,3472,51,NULL),(9937,5256,51,NULL),(9938,5768,51,NULL),(9939,4443,51,NULL),(9940,4210,51,NULL),(9941,4366,51,NULL),(9942,4113,51,NULL),(9943,4587,51,NULL),(9944,4475,51,NULL),(9945,3435,51,NULL),(9946,3986,51,NULL),(9947,3504,51,NULL),(9948,5331,51,NULL),(9949,3993,51,NULL),(9950,4941,51,NULL),(9951,4217,51,NULL),(9952,3443,51,NULL),(9953,4582,51,NULL),(9954,3763,51,NULL),(9955,4441,51,NULL),(9956,4620,51,NULL),(9957,4588,51,NULL),(9958,4933,51,NULL),(9959,4702,51,NULL),(9960,16630,49,NULL),(9961,16620,49,NULL),(9962,16634,49,NULL),(9963,16626,49,NULL),(9964,16649,49,NULL),(9965,16610,49,NULL),(9966,16616,49,NULL),(9967,16611,49,NULL),(9968,16621,49,NULL),(9969,16595,49,NULL),(9970,16586,49,NULL),(9971,16585,49,NULL),(9972,16625,49,NULL),(9973,16579,49,NULL),(9974,16580,49,NULL),(9975,16596,49,NULL),(9976,16564,49,NULL),(9977,16541,49,NULL),(9978,16640,49,NULL),(9979,16545,49,NULL),(9980,16570,49,NULL),(9981,16574,49,NULL),(9982,16645,49,NULL),(9983,16589,49,NULL),(9984,16550,49,NULL),(9985,3411,49,NULL),(9986,3392,49,NULL),(9987,3407,49,NULL),(9988,3370,49,NULL),(9989,3396,49,NULL),(9990,3364,49,NULL),(9991,3386,49,NULL),(9992,3345,49,NULL),(9993,3360,49,NULL),(9994,3375,49,NULL),(9995,3350,49,NULL),(9996,3330,49,NULL),(9997,3349,49,NULL),(9998,3304,49,NULL),(9999,3361,49,NULL),(10000,3309,49,NULL),(10001,3305,49,NULL),(10002,3280,49,NULL),(10003,3264,49,NULL),(10004,3272,49,NULL),(10005,3232,49,NULL),(10006,3191,49,NULL),(10007,3223,49,NULL),(10008,3152,49,NULL),(10009,3105,49,NULL),(10010,3066,49,NULL),(10011,3042,49,NULL),(10012,2981,49,NULL),(10013,2999,49,NULL),(10014,2962,49,NULL),(10015,2942,49,NULL),(10016,2873,49,NULL),(10017,2874,49,NULL),(10018,2900,49,NULL),(10019,2864,49,NULL),(10020,2825,49,NULL),(10021,2843,49,NULL),(10022,2845,49,NULL),(10023,2779,49,NULL),(10024,2762,49,NULL),(10025,2799,49,NULL),(10026,2684,49,NULL),(10027,2683,49,NULL),(10028,2706,49,NULL),(10029,2570,49,NULL),(10030,2563,49,NULL),(10031,2593,49,NULL),(10032,2558,49,NULL),(10033,2559,49,NULL),(10034,2550,49,NULL),(10035,2578,49,NULL),(10036,2554,49,NULL),(10037,2537,49,NULL),(10038,2529,49,NULL),(10039,2523,49,NULL),(10040,2471,49,NULL),(10041,2460,49,NULL),(10042,2458,49,NULL),(10043,2425,49,NULL),(10044,2444,49,NULL),(10045,2429,49,NULL),(10046,2419,49,NULL),(10047,2418,49,NULL),(10048,2342,49,NULL),(10049,2381,49,NULL),(10050,2375,49,NULL),(10051,2338,49,NULL),(10052,2337,49,NULL),(10053,2302,49,NULL),(10054,2270,49,NULL),(10055,2275,49,NULL),(10056,2220,49,NULL),(10057,2206,49,NULL),(10058,2185,49,NULL),(10059,2179,49,NULL),(10060,2176,49,NULL),(10061,2148,49,NULL),(10062,2161,49,NULL),(10063,2160,49,NULL),(10064,2140,49,NULL),(10065,2145,49,NULL),(10066,2109,49,NULL),(10067,2116,49,NULL),(10068,2064,49,NULL),(10069,2071,49,NULL),(10070,2070,49,NULL),(10071,2054,49,NULL),(10072,2017,49,NULL),(10073,1980,49,NULL),(10074,1930,49,NULL),(10075,1922,49,NULL),(10076,1903,49,NULL),(10077,1863,49,NULL),(10078,1838,49,NULL),(10079,1800,49,NULL),(10080,1792,49,NULL),(10081,1790,49,NULL),(10082,1769,49,NULL),(10083,1768,49,NULL),(10084,1780,49,NULL),(10085,1760,49,NULL),(10086,1752,49,NULL),(10087,1668,49,NULL),(10088,1534,49,NULL),(10089,1524,49,NULL),(10090,1480,49,NULL),(10091,1455,49,NULL),(10092,1461,49,NULL),(10093,1423,49,NULL),(10094,1422,49,NULL),(10095,1408,49,NULL),(10096,1415,49,NULL),(10097,1400,49,NULL),(10098,1399,49,NULL),(10099,1368,49,NULL),(10100,1346,49,NULL),(10101,1358,49,NULL),(10102,1343,49,NULL),(10103,1295,49,NULL),(10104,1726,49,NULL),(10105,2273,49,NULL),(10106,1221,49,NULL),(10107,1137,49,NULL),(10108,1128,49,NULL),(10109,1123,49,NULL),(10110,1079,49,NULL),(10111,1071,49,NULL),(10112,1028,49,NULL),(10113,1025,49,NULL),(10114,1018,49,NULL),(10115,1014,49,NULL),(10116,1005,49,NULL),(10117,1002,49,NULL),(10118,976,49,NULL),(10119,509,49,NULL),(10120,962,49,NULL),(10121,921,49,NULL),(10122,916,49,NULL),(10123,884,49,NULL),(10124,881,49,NULL),(10125,867,49,NULL),(10126,838,49,NULL),(10127,832,49,NULL),(10128,819,49,NULL),(10129,781,49,NULL),(10130,779,49,NULL),(10131,704,49,NULL),(10132,701,49,NULL),(10133,700,49,NULL),(10134,746,49,NULL),(10135,744,49,NULL),(10136,689,49,NULL),(10137,680,49,NULL),(10138,658,49,NULL),(10139,643,49,NULL),(10140,628,49,NULL),(10141,516,49,NULL),(10142,506,49,NULL),(10143,494,49,NULL),(10144,440,49,NULL),(10145,435,49,NULL),(10146,416,49,NULL),(10147,414,49,NULL),(10148,409,49,NULL),(10149,407,49,NULL),(10150,405,49,NULL),(10151,397,49,NULL),(10152,392,49,NULL),(10153,390,49,NULL),(10154,389,49,NULL),(10155,386,49,NULL),(10156,371,49,NULL),(10157,368,49,NULL),(10158,350,49,NULL),(10159,349,49,NULL),(10160,344,49,NULL),(10161,342,49,NULL),(10162,338,49,NULL),(10163,326,49,NULL),(10164,303,49,NULL),(10165,287,49,NULL),(10166,283,49,NULL),(10167,268,49,NULL),(10168,263,49,NULL),(10169,260,49,NULL),(10170,258,49,NULL),(10171,257,49,NULL),(10172,241,49,NULL),(10173,231,49,NULL),(10174,227,49,NULL),(10175,219,49,NULL),(10176,217,49,NULL),(10177,209,49,NULL),(10178,206,49,NULL),(10179,203,49,NULL),(10180,191,49,NULL),(10181,190,49,NULL),(10182,189,49,NULL),(10183,179,49,NULL),(10184,169,49,NULL),(10185,160,49,NULL),(10186,151,49,NULL),(10187,145,49,NULL),(10188,144,49,NULL),(10189,137,49,NULL),(10190,136,49,NULL),(10191,134,49,NULL),(10192,125,49,NULL),(10193,123,49,NULL),(10194,122,49,NULL),(10195,121,49,NULL),(10196,120,49,NULL),(10197,118,49,NULL),(10198,97,49,NULL),(10199,96,49,NULL),(10200,94,49,NULL),(10201,91,49,NULL),(10202,88,49,NULL),(10203,87,49,NULL),(10204,86,49,NULL),(10205,83,49,NULL),(10206,78,49,NULL),(10207,74,49,NULL),(10208,72,49,NULL),(10209,70,49,NULL),(10210,69,49,NULL),(10211,67,49,NULL),(10212,66,49,NULL),(10213,58,49,NULL),(10214,55,49,NULL),(10215,53,49,NULL),(10216,50,49,NULL),(10217,45,49,NULL),(10218,44,49,NULL),(10219,42,49,NULL),(10220,38,49,NULL),(10221,35,49,NULL),(10222,33,49,NULL),(10223,29,49,NULL),(10224,28,49,NULL),(10225,27,49,NULL),(10226,26,49,NULL),(10227,24,49,NULL),(10228,22,49,NULL),(10229,21,49,NULL),(10230,20,49,NULL),(10231,17,49,NULL),(10232,16,49,NULL),(10233,15,49,NULL),(10234,14,49,NULL),(10235,13,49,NULL),(10236,12,49,NULL),(10237,11,49,NULL),(10238,10,49,NULL),(10239,9,49,NULL),(10240,7,49,NULL),(10241,6,49,NULL),(10242,5,49,NULL),(10243,4,49,NULL),(10244,3,49,NULL),(10245,2,49,NULL),(10246,1,49,NULL),(10247,17408,53,NULL),(10248,16630,53,NULL),(10249,16634,53,NULL),(10250,16635,53,NULL),(10251,16585,53,NULL),(10252,16560,53,NULL),(10253,16556,53,NULL),(10254,16545,53,NULL),(10255,16570,53,NULL),(10256,16574,53,NULL),(10257,16535,53,NULL),(10258,16589,53,NULL),(10259,16550,53,NULL),(10260,3411,53,NULL),(10261,3392,53,NULL),(10262,3407,53,NULL),(10263,3396,53,NULL),(10264,3355,53,NULL),(10265,3345,53,NULL),(10266,3360,53,NULL),(10267,3375,53,NULL),(10268,3354,53,NULL),(10269,3300,53,NULL),(10270,3304,53,NULL),(10271,3285,53,NULL),(10272,3289,53,NULL),(10273,3280,53,NULL),(10274,3264,53,NULL),(10275,3248,53,NULL),(10276,3254,53,NULL),(10277,3232,53,NULL),(10278,3217,53,NULL),(10279,3190,53,NULL),(10280,3194,53,NULL),(10281,3223,53,NULL),(10282,3178,53,NULL),(10283,3174,53,NULL),(10284,3184,53,NULL),(10285,3110,53,NULL),(10286,3100,53,NULL),(10287,3042,53,NULL),(10288,2965,53,NULL),(10289,2951,53,NULL),(10290,2948,53,NULL),(10291,2962,53,NULL),(10292,2914,53,NULL),(10293,2913,53,NULL),(10294,2828,53,NULL),(10295,2824,53,NULL),(10296,2798,53,NULL),(10297,2799,53,NULL),(10298,2751,53,NULL),(10299,2716,53,NULL),(10300,2769,53,NULL),(10301,2683,53,NULL),(10302,2656,53,NULL),(10303,2657,53,NULL),(10304,2652,53,NULL),(10305,2653,53,NULL),(10306,2651,53,NULL),(10307,2678,53,NULL),(10308,2574,53,NULL),(10309,2570,53,NULL),(10310,2559,53,NULL),(10311,2661,53,NULL),(10312,2595,53,NULL),(10313,2579,53,NULL),(10314,2582,53,NULL),(10315,2554,53,NULL),(10316,2553,53,NULL),(10317,2540,53,NULL),(10318,2544,53,NULL),(10319,2535,53,NULL),(10320,2529,53,NULL),(10321,2520,53,NULL),(10322,2501,53,NULL),(10323,2483,53,NULL),(10324,2486,53,NULL),(10325,2485,53,NULL),(10326,2475,53,NULL),(10327,2469,53,NULL),(10328,2461,53,NULL),(10329,2460,53,NULL),(10330,2425,53,NULL),(10331,2441,53,NULL),(10332,2429,53,NULL),(10333,2427,53,NULL),(10334,2418,53,NULL),(10335,2413,53,NULL),(10336,2404,53,NULL),(10337,2401,53,NULL),(10338,2381,53,NULL),(10339,2379,53,NULL),(10340,2357,53,NULL),(10341,2331,53,NULL),(10342,2315,53,NULL),(10343,2293,53,NULL),(10344,2236,53,NULL),(10345,2235,53,NULL),(10346,2285,53,NULL),(10347,2284,53,NULL),(10348,2283,53,NULL),(10349,2278,53,NULL),(10350,2270,53,NULL),(10351,2239,53,NULL),(10352,2264,53,NULL),(10353,2220,53,NULL),(10354,2210,53,NULL),(10355,2206,53,NULL),(10356,2196,53,NULL),(10357,2181,53,NULL),(10358,2187,53,NULL),(10359,2185,53,NULL),(10360,2164,53,NULL),(10361,2176,53,NULL),(10362,2161,53,NULL),(10363,2130,53,NULL),(10364,2109,53,NULL),(10365,2116,53,NULL),(10366,2114,53,NULL),(10367,2096,53,NULL),(10368,2095,53,NULL),(10369,2089,53,NULL),(10370,2063,53,NULL),(10371,2058,53,NULL),(10372,2057,53,NULL),(10373,2044,53,NULL),(10374,2032,53,NULL),(10375,2037,53,NULL),(10376,2017,53,NULL),(10377,2011,53,NULL),(10378,2000,53,NULL),(10379,1971,53,NULL),(10380,2006,53,NULL),(10381,1984,53,NULL),(10382,1967,53,NULL),(10383,1961,53,NULL),(10384,1930,53,NULL),(10385,1901,53,NULL),(10386,1884,53,NULL),(10387,1897,53,NULL),(10388,1910,53,NULL),(10389,1848,53,NULL),(10390,1837,53,NULL),(10391,1845,53,NULL),(10392,1823,53,NULL),(10393,1822,53,NULL),(10394,1819,53,NULL),(10395,1800,53,NULL),(10396,1791,53,NULL),(10397,1790,53,NULL),(10398,1769,53,NULL),(10399,1780,53,NULL),(10400,1765,53,NULL),(10401,1749,53,NULL),(10402,1748,53,NULL),(10403,1717,53,NULL),(10404,1688,53,NULL),(10405,1701,53,NULL),(10406,1678,53,NULL),(10407,1672,53,NULL),(10408,1684,53,NULL),(10409,1662,53,NULL),(10410,1658,53,NULL),(10411,1669,53,NULL),(10412,1668,53,NULL),(10413,1637,53,NULL),(10414,1608,53,NULL),(10415,1598,53,NULL),(10416,1579,53,NULL),(10417,1588,53,NULL),(10418,1572,53,NULL),(10419,1552,53,NULL),(10420,1534,53,NULL),(10421,1528,53,NULL),(10422,1539,53,NULL),(10423,1518,53,NULL),(10424,1512,53,NULL),(10425,1509,53,NULL),(10426,1482,53,NULL),(10427,1480,53,NULL),(10428,1464,53,NULL),(10429,1475,53,NULL),(10430,1455,53,NULL),(10431,1461,53,NULL),(10432,1460,53,NULL),(10433,1438,53,NULL),(10434,1436,53,NULL),(10435,1446,53,NULL),(10436,1423,53,NULL),(10437,1422,53,NULL),(10438,1431,53,NULL),(10439,1408,53,NULL),(10440,1394,53,NULL),(10441,1389,53,NULL),(10442,1400,53,NULL),(10443,1380,53,NULL),(10444,1368,53,NULL),(10445,1365,53,NULL),(10446,1351,53,NULL),(10447,1337,53,NULL),(10448,1358,53,NULL),(10449,1356,53,NULL),(10450,1323,53,NULL),(10451,1342,53,NULL),(10452,1312,53,NULL),(10453,2192,53,NULL),(10454,1306,53,NULL),(10455,1305,53,NULL),(10456,1304,53,NULL),(10457,1295,53,NULL),(10458,1290,53,NULL),(10459,1281,53,NULL),(10460,1268,53,NULL),(10461,1267,53,NULL),(10462,1266,53,NULL),(10463,2215,53,NULL),(10464,1248,53,NULL),(10465,2309,53,NULL),(10466,1221,53,NULL),(10467,1217,53,NULL),(10468,1207,53,NULL),(10469,1957,53,NULL),(10470,1190,53,NULL),(10471,1550,53,NULL),(10472,1382,53,NULL),(10473,1362,53,NULL),(10474,1143,53,NULL),(10475,1313,53,NULL),(10476,1137,53,NULL),(10477,1299,53,NULL),(10478,1122,53,NULL),(10479,1291,53,NULL),(10480,1619,53,NULL),(10481,1092,53,NULL),(10482,1052,53,NULL),(10483,1051,53,NULL),(10484,1046,53,NULL),(10485,1038,53,NULL),(10486,1160,53,NULL),(10487,1025,53,NULL),(10488,1020,53,NULL),(10489,1019,53,NULL),(10490,1014,53,NULL),(10491,1011,53,NULL),(10492,1004,53,NULL),(10493,1002,53,NULL),(10494,995,53,NULL),(10495,994,53,NULL),(10496,987,53,NULL),(10497,978,53,NULL),(10498,977,53,NULL),(10499,974,53,NULL),(10500,509,53,NULL),(10501,965,53,NULL),(10502,954,53,NULL),(10503,945,53,NULL),(10504,941,53,NULL),(10505,931,53,NULL),(10506,925,53,NULL),(10507,922,53,NULL),(10508,921,53,NULL),(10509,916,53,NULL),(10510,912,53,NULL),(10511,908,53,NULL),(10512,905,53,NULL),(10513,881,53,NULL),(10514,876,53,NULL),(10515,875,53,NULL),(10516,873,53,NULL),(10517,867,53,NULL),(10518,846,53,NULL),(10519,826,53,NULL),(10520,804,53,NULL),(10521,802,53,NULL),(10522,706,53,NULL),(10523,705,53,NULL),(10524,797,53,NULL),(10525,796,53,NULL),(10526,785,53,NULL),(10527,704,53,NULL),(10528,701,53,NULL),(10529,700,53,NULL),(10530,771,53,NULL),(10531,766,53,NULL),(10532,590,53,NULL),(10533,589,53,NULL),(10534,747,53,NULL),(10535,744,53,NULL),(10536,709,53,NULL),(10537,726,53,NULL),(10538,713,53,NULL),(10539,697,53,NULL),(10540,692,53,NULL),(10541,679,53,NULL),(10542,678,53,NULL),(10543,671,53,NULL),(10544,653,53,NULL),(10545,648,53,NULL),(10546,645,53,NULL),(10547,643,53,NULL),(10548,633,53,NULL),(10549,599,53,NULL),(10550,594,53,NULL),(10551,583,53,NULL),(10552,576,53,NULL),(10553,575,53,NULL),(10554,560,53,NULL),(10555,551,53,NULL),(10556,542,53,NULL),(10557,540,53,NULL),(10558,530,53,NULL),(10559,523,53,NULL),(10560,521,53,NULL),(10561,520,53,NULL),(10562,518,53,NULL),(10563,516,53,NULL),(10564,513,53,NULL),(10565,502,53,NULL),(10566,500,53,NULL),(10567,498,53,NULL),(10568,494,53,NULL),(10569,485,53,NULL),(10570,475,53,NULL),(10571,461,53,NULL),(10572,451,53,NULL),(10573,450,53,NULL),(10574,448,53,NULL),(10575,445,53,NULL),(10576,442,53,NULL),(10577,441,53,NULL),(10578,438,53,NULL),(10579,434,53,NULL),(10580,415,53,NULL),(10581,414,53,NULL),(10582,413,53,NULL),(10583,412,53,NULL),(10584,410,53,NULL),(10585,409,53,NULL),(10586,407,53,NULL),(10587,404,53,NULL),(10588,402,53,NULL),(10589,395,53,NULL),(10590,392,53,NULL),(10591,390,53,NULL),(10592,387,53,NULL),(10593,383,53,NULL),(10594,378,53,NULL),(10595,374,53,NULL),(10596,367,53,NULL),(10597,350,53,NULL),(10598,349,53,NULL),(10599,347,53,NULL),(10600,345,53,NULL),(10601,344,53,NULL),(10602,342,53,NULL),(10603,338,53,NULL),(10604,330,53,NULL),(10605,328,53,NULL),(10606,326,53,NULL),(10607,322,53,NULL),(10608,315,53,NULL),(10609,300,53,NULL),(10610,290,53,NULL),(10611,287,53,NULL),(10612,283,53,NULL),(10613,268,53,NULL),(10614,263,53,NULL),(10615,260,53,NULL),(10616,258,53,NULL),(10617,257,53,NULL),(10618,242,53,NULL),(10619,240,53,NULL),(10620,239,53,NULL),(10621,237,53,NULL),(10622,234,53,NULL),(10623,231,53,NULL),(10624,230,53,NULL),(10625,229,53,NULL),(10626,228,53,NULL),(10627,226,53,NULL),(10628,225,53,NULL),(10629,222,53,NULL),(10630,219,53,NULL),(10631,217,53,NULL),(10632,216,53,NULL),(10633,215,53,NULL),(10634,213,53,NULL),(10635,210,53,NULL),(10636,209,53,NULL),(10637,207,53,NULL),(10638,206,53,NULL),(10639,204,53,NULL),(10640,203,53,NULL),(10641,202,53,NULL),(10642,200,53,NULL),(10643,199,53,NULL),(10644,198,53,NULL),(10645,191,53,NULL),(10646,190,53,NULL),(10647,189,53,NULL),(10648,179,53,NULL),(10649,169,53,NULL),(10650,167,53,NULL),(10651,166,53,NULL),(10652,165,53,NULL),(10653,162,53,NULL),(10654,160,53,NULL),(10655,155,53,NULL),(10656,153,53,NULL),(10657,151,53,NULL),(10658,148,53,NULL),(10659,147,53,NULL),(10660,145,53,NULL),(10661,144,53,NULL),(10662,143,53,NULL),(10663,142,53,NULL),(10664,141,53,NULL),(10665,140,53,NULL),(10666,139,53,NULL),(10667,137,53,NULL),(10668,136,53,NULL),(10669,128,53,NULL),(10670,127,53,NULL),(10671,125,53,NULL),(10672,121,53,NULL),(10673,120,53,NULL),(10674,119,53,NULL),(10675,118,53,NULL),(10676,117,53,NULL),(10677,116,53,NULL),(10678,115,53,NULL),(10679,111,53,NULL),(10680,110,53,NULL),(10681,104,53,NULL),(10682,103,53,NULL),(10683,102,53,NULL),(10684,101,53,NULL),(10685,100,53,NULL),(10686,98,53,NULL),(10687,96,53,NULL),(10688,94,53,NULL),(10689,92,53,NULL),(10690,91,53,NULL),(10691,90,53,NULL),(10692,88,53,NULL),(10693,86,53,NULL),(10694,83,53,NULL),(10695,82,53,NULL),(10696,81,53,NULL),(10697,80,53,NULL),(10698,78,53,NULL),(10699,77,53,NULL),(10700,75,53,NULL),(10701,74,53,NULL),(10702,73,53,NULL),(10703,72,53,NULL),(10704,70,53,NULL),(10705,69,53,NULL),(10706,67,53,NULL),(10707,66,53,NULL),(10708,65,53,NULL),(10709,64,53,NULL),(10710,63,53,NULL),(10711,62,53,NULL),(10712,61,53,NULL),(10713,60,53,NULL),(10714,58,53,NULL),(10715,55,53,NULL),(10716,54,53,NULL),(10717,53,53,NULL),(10718,50,53,NULL),(10719,49,53,NULL),(10720,48,53,NULL),(10721,47,53,NULL),(10722,46,53,NULL),(10723,45,53,NULL),(10724,44,53,NULL),(10725,43,53,NULL),(10726,42,53,NULL),(10727,40,53,NULL),(10728,39,53,NULL),(10729,35,53,NULL),(10730,34,53,NULL),(10731,33,53,NULL),(10732,32,53,NULL),(10733,31,53,NULL),(10734,28,53,NULL),(10735,27,53,NULL),(10736,26,53,NULL),(10737,25,53,NULL),(10738,24,53,NULL),(10739,23,53,NULL),(10740,22,53,NULL),(10741,21,53,NULL),(10742,20,53,NULL),(10743,19,53,NULL),(10744,18,53,NULL),(10745,16,53,NULL),(10746,15,53,NULL),(10747,14,53,NULL),(10748,13,53,NULL),(10749,11,53,NULL),(10750,9,53,NULL),(10751,8,53,NULL),(10752,7,53,NULL),(10753,5,53,NULL),(10754,4,53,NULL),(10755,3,53,NULL),(10756,2,53,NULL),(10757,1,53,NULL),(10758,3411,60,NULL),(10759,3407,60,NULL),(10760,3408,60,NULL),(10761,3364,60,NULL),(10762,3345,60,NULL),(10763,3360,60,NULL),(10764,3304,60,NULL),(10765,3305,60,NULL),(10766,2942,60,NULL),(10767,2678,60,NULL),(10768,2011,60,NULL),(10769,1929,60,NULL),(10770,1920,60,NULL),(10771,1672,60,NULL),(10772,1512,60,NULL),(10773,1365,60,NULL),(10774,814,60,NULL),(10775,9,60,NULL),(10776,4,60,NULL),(10777,1,60,NULL),(10778,4646,60,NULL),(10779,4089,60,NULL),(10780,3802,60,NULL),(10781,3469,60,NULL),(10782,3620,60,NULL),(10783,4920,60,NULL),(10784,3472,60,NULL),(10785,5256,60,NULL),(10786,5768,60,NULL),(10787,4161,60,NULL),(10788,3435,60,NULL),(10789,3498,60,NULL),(10790,4217,60,NULL),(10791,10487,60,NULL),(10792,3610,46,NULL),(10793,3418,46,NULL),(10794,3424,46,NULL),(10795,3462,46,NULL),(10796,3416,46,NULL),(10797,3492,46,NULL),(10798,3437,46,NULL),(10799,3656,46,NULL),(10800,3423,46,NULL),(10801,3644,46,NULL),(10802,3612,46,NULL),(10803,4186,46,NULL),(10804,3753,46,NULL),(10805,4800,46,NULL),(10806,3469,46,NULL),(10807,3433,46,NULL),(10808,3505,46,NULL),(10809,3431,46,NULL),(10810,3421,46,NULL),(10811,3452,46,NULL),(10812,3477,46,NULL),(10813,3422,46,NULL),(10814,3456,46,NULL),(10815,3550,46,NULL),(10816,3468,46,NULL),(10817,3908,46,NULL),(10818,3450,46,NULL),(10819,3417,46,NULL),(10820,4189,46,NULL),(10821,3508,46,NULL),(10822,3432,46,NULL),(10823,3538,46,NULL),(10824,3680,46,NULL),(10825,4158,46,NULL),(10826,4324,46,NULL),(10827,3419,46,NULL),(10828,3473,46,NULL),(10829,4827,46,NULL),(10830,3497,46,NULL),(10831,3465,46,NULL),(10832,3621,46,NULL),(10833,3472,46,NULL),(10834,3842,46,NULL),(10835,3590,46,NULL),(10836,3603,46,NULL),(10837,3964,46,NULL),(10838,4331,46,NULL),(10839,3545,46,NULL),(10840,3575,46,NULL),(10841,3594,46,NULL),(10842,3846,46,NULL),(10843,3524,46,NULL),(10844,3489,46,NULL),(10845,4903,46,NULL),(10846,3446,46,NULL),(10847,3557,46,NULL),(10848,4103,46,NULL),(10849,3459,46,NULL),(10850,3504,46,NULL),(10851,3830,46,NULL),(10852,3762,46,NULL),(10853,3669,46,NULL),(10854,4934,46,NULL),(10855,4612,46,NULL),(10856,3833,46,NULL),(10857,3482,46,NULL),(10858,4941,46,NULL),(10859,4170,46,NULL),(10860,3948,46,NULL),(10861,3862,46,NULL),(10862,3355,60,NULL),(10863,3354,60,NULL),(10864,3248,60,NULL),(10865,3151,60,NULL),(10866,2799,60,NULL),(10867,2579,60,NULL),(10868,2537,60,NULL),(10869,2461,60,NULL),(10870,2220,60,NULL),(10871,1910,60,NULL),(10872,1658,60,NULL),(10873,1248,60,NULL),(10874,977,60,NULL),(10875,904,60,NULL),(10876,713,60,NULL),(10877,441,60,NULL),(10878,438,60,NULL),(10879,387,60,NULL),(10880,374,60,NULL),(10881,367,60,NULL),(10882,283,60,NULL),(10883,234,60,NULL),(10884,219,60,NULL),(10885,216,60,NULL),(10886,160,60,NULL),(10887,153,60,NULL),(10888,125,60,NULL),(10889,101,60,NULL),(10890,100,60,NULL),(10891,94,60,NULL),(10892,88,60,NULL),(10893,83,60,NULL),(10894,70,60,NULL),(10895,69,60,NULL),(10896,67,60,NULL),(10897,66,60,NULL),(10898,58,60,NULL),(10899,35,60,NULL),(10900,33,60,NULL),(10901,28,60,NULL),(10902,27,60,NULL),(10903,26,60,NULL),(10904,21,60,NULL),(10905,20,60,NULL),(10906,14,60,NULL),(10907,13,60,NULL),(10908,16585,61,NULL),(10909,16560,61,NULL),(10910,16570,61,NULL),(10911,16550,61,NULL),(10912,3411,61,NULL),(10913,3407,61,NULL),(10914,3408,61,NULL),(10915,3364,61,NULL),(10916,3412,61,NULL),(10917,3345,61,NULL),(10918,3360,61,NULL),(10919,3354,61,NULL),(10920,3349,61,NULL),(10921,3365,61,NULL),(10922,3361,61,NULL),(10923,2799,61,NULL),(10924,2461,61,NULL),(10925,1461,61,NULL),(10926,1248,61,NULL),(10927,1004,61,NULL),(10928,941,61,NULL),(10929,713,61,NULL),(10930,438,61,NULL),(10931,219,61,NULL),(10932,209,61,NULL),(10933,75,61,NULL),(10934,12,61,NULL),(10935,11,61,NULL),(10936,1,61,NULL),(10937,5474,61,NULL),(10938,16630,63,NULL),(10939,16595,63,NULL),(10940,16560,63,NULL),(10941,3411,63,NULL),(10942,3407,63,NULL),(10943,3396,63,NULL),(10944,3364,63,NULL),(10945,3345,63,NULL),(10946,3360,63,NULL),(10947,3375,63,NULL),(10948,3354,63,NULL),(10949,3349,63,NULL),(10950,3300,63,NULL),(10951,3304,63,NULL),(10952,3289,63,NULL),(10953,3280,63,NULL),(10954,3274,63,NULL),(10955,3222,63,NULL),(10956,3301,63,NULL),(10957,3190,63,NULL),(10958,3194,63,NULL),(10959,3174,63,NULL),(10960,3162,63,NULL),(10961,3151,63,NULL),(10962,3110,63,NULL),(10963,3042,63,NULL),(10964,2942,63,NULL),(10965,2894,63,NULL),(10966,2843,63,NULL),(10967,2828,63,NULL),(10968,2824,63,NULL),(10969,2780,63,NULL),(10970,2798,63,NULL),(10971,2739,63,NULL),(10972,2769,63,NULL),(10973,2652,63,NULL),(10974,2574,63,NULL),(10975,2570,63,NULL),(10976,2559,63,NULL),(10977,2544,63,NULL),(10978,2537,63,NULL),(10979,2529,63,NULL),(10980,2469,63,NULL),(10981,2461,63,NULL),(10982,2460,63,NULL),(10983,2413,63,NULL),(10984,2396,63,NULL),(10985,2379,63,NULL),(10986,2235,63,NULL),(10987,2270,63,NULL),(10988,2239,63,NULL),(10989,2256,63,NULL),(10990,2255,63,NULL),(10991,2220,63,NULL),(10992,2206,63,NULL),(10993,2185,63,NULL),(10994,2176,63,NULL),(10995,2149,63,NULL),(10996,2160,63,NULL),(10997,2114,63,NULL),(10998,2053,63,NULL),(10999,2028,63,NULL),(11000,2037,63,NULL),(11001,2011,63,NULL),(11002,1961,63,NULL),(11003,1945,63,NULL),(11004,1929,63,NULL),(11005,1941,63,NULL),(11006,1920,63,NULL),(11007,1910,63,NULL),(11008,1894,63,NULL),(11009,1863,63,NULL),(11010,1877,63,NULL),(11011,1837,63,NULL),(11012,1769,63,NULL),(11013,1732,63,NULL),(11014,1689,63,NULL),(11015,1672,63,NULL),(11016,1684,63,NULL),(11017,1637,63,NULL),(11018,1572,63,NULL),(11019,1512,63,NULL),(11020,1486,63,NULL),(11021,1480,63,NULL),(11022,1455,63,NULL),(11023,1431,63,NULL),(11024,1408,63,NULL),(11025,1400,63,NULL),(11026,1399,63,NULL),(11027,1365,63,NULL),(11028,1351,63,NULL),(11029,1358,63,NULL),(11030,1343,63,NULL),(11031,1342,63,NULL),(11032,1261,63,NULL),(11033,1227,63,NULL),(11034,1009,63,NULL),(11035,977,63,NULL),(11036,509,63,NULL),(11037,962,63,NULL),(11038,930,63,NULL),(11039,916,63,NULL),(11040,904,63,NULL),(11041,884,63,NULL),(11042,875,63,NULL),(11043,867,63,NULL),(11044,704,63,NULL),(11045,771,63,NULL),(11046,713,63,NULL),(11047,572,63,NULL),(11048,540,63,NULL),(11049,539,63,NULL),(11050,516,63,NULL),(11051,507,63,NULL),(11052,476,63,NULL),(11053,475,63,NULL),(11054,442,63,NULL),(11055,441,63,NULL),(11056,438,63,NULL),(11057,413,63,NULL),(11058,405,63,NULL),(11059,383,63,NULL),(11060,374,63,NULL),(11061,367,63,NULL),(11062,349,63,NULL),(11063,344,63,NULL),(11064,342,63,NULL),(11065,338,63,NULL),(11066,326,63,NULL),(11067,303,63,NULL),(11068,283,63,NULL),(11069,268,63,NULL),(11070,258,63,NULL),(11071,242,63,NULL),(11072,237,63,NULL),(11073,234,63,NULL),(11074,231,63,NULL),(11075,228,63,NULL),(11076,219,63,NULL),(11077,217,63,NULL),(11078,206,63,NULL),(11079,203,63,NULL),(11080,202,63,NULL),(11081,191,63,NULL),(11082,189,63,NULL),(11083,169,63,NULL),(11084,167,63,NULL),(11085,164,63,NULL),(11086,153,63,NULL),(11087,145,63,NULL),(11088,144,63,NULL),(11089,136,63,NULL),(11090,121,63,NULL),(11091,118,63,NULL),(11092,109,63,NULL),(11093,108,63,NULL),(11094,102,63,NULL),(11095,94,63,NULL),(11096,89,63,NULL),(11097,88,63,NULL),(11098,83,63,NULL),(11099,74,63,NULL),(11100,73,63,NULL),(11101,70,63,NULL),(11102,69,63,NULL),(11103,67,63,NULL),(11104,66,63,NULL),(11105,62,63,NULL),(11106,58,63,NULL),(11107,56,63,NULL),(11108,54,63,NULL),(11109,42,63,NULL),(11110,35,63,NULL),(11111,34,63,NULL),(11112,33,63,NULL),(11113,29,63,NULL),(11114,28,63,NULL),(11115,27,63,NULL),(11116,26,63,NULL),(11117,21,63,NULL),(11118,20,63,NULL),(11119,19,63,NULL),(11120,15,63,NULL),(11121,14,63,NULL),(11122,13,63,NULL),(11123,12,63,NULL),(11124,11,63,NULL),(11125,9,63,NULL),(11126,7,63,NULL),(11127,5,63,NULL),(11128,4,63,NULL),(11129,2,63,NULL),(11130,1,63,NULL),(11131,16595,65,NULL),(11132,16625,65,NULL),(11133,16579,65,NULL),(11134,16641,65,NULL),(11135,16574,65,NULL),(11136,3411,65,NULL),(11137,3407,65,NULL),(11138,3370,65,NULL),(11139,3345,65,NULL),(11140,3354,65,NULL),(11141,3190,65,NULL),(11142,3110,65,NULL),(11143,2958,65,NULL),(11144,2942,65,NULL),(11145,2894,65,NULL),(11146,2824,65,NULL),(11147,2798,65,NULL),(11148,2769,65,NULL),(11149,2537,65,NULL),(11150,2485,65,NULL),(11151,2461,65,NULL),(11152,2419,65,NULL),(11153,2235,65,NULL),(11154,2239,65,NULL),(11155,2089,65,NULL),(11156,2011,65,NULL),(11157,1984,65,NULL),(11158,1929,65,NULL),(11159,1920,65,NULL),(11160,1884,65,NULL),(11161,1800,65,NULL),(11162,1768,65,NULL),(11163,1672,65,NULL),(11164,1662,65,NULL),(11165,1572,65,NULL),(11166,1512,65,NULL),(11167,1480,65,NULL),(11168,1471,65,NULL),(11169,1470,65,NULL),(11170,1385,65,NULL),(11171,1365,65,NULL),(11172,1371,65,NULL),(11173,1346,65,NULL),(11174,1323,65,NULL),(11175,1342,65,NULL),(11176,1281,65,NULL),(11177,1248,65,NULL),(11178,1207,65,NULL),(11179,1163,65,NULL),(11180,1025,65,NULL),(11181,1004,65,NULL),(11182,994,65,NULL),(11183,977,65,NULL),(11184,509,65,NULL),(11185,938,65,NULL),(11186,917,65,NULL),(11187,912,65,NULL),(11188,884,65,NULL),(11189,881,65,NULL),(11190,876,65,NULL),(11191,875,65,NULL),(11192,852,65,NULL),(11193,704,65,NULL),(11194,744,65,NULL),(11195,724,65,NULL),(11196,713,65,NULL),(11197,670,65,NULL),(11198,643,65,NULL),(11199,628,65,NULL),(11200,605,65,NULL),(11201,572,65,NULL),(11202,560,65,NULL),(11203,539,65,NULL),(11204,507,65,NULL),(11205,506,65,NULL),(11206,504,65,NULL),(11207,498,65,NULL),(11208,485,65,NULL),(11209,477,65,NULL),(11210,461,65,NULL),(11211,455,65,NULL),(11212,450,65,NULL),(11213,448,65,NULL),(11214,441,65,NULL),(11215,438,65,NULL),(11216,415,65,NULL),(11217,414,65,NULL),(11218,413,65,NULL),(11219,412,65,NULL),(11220,405,65,NULL),(11221,392,65,NULL),(11222,389,65,NULL),(11223,387,65,NULL),(11224,383,65,NULL),(11225,374,65,NULL),(11226,367,65,NULL),(11227,350,65,NULL),(11228,349,65,NULL),(11229,345,65,NULL),(11230,344,65,NULL),(11231,342,65,NULL),(11232,326,65,NULL),(11233,303,65,NULL),(11234,287,65,NULL),(11235,283,65,NULL),(11236,268,65,NULL),(11237,258,65,NULL),(11238,242,65,NULL),(11239,231,65,NULL),(11240,226,65,NULL),(11241,222,65,NULL),(11242,219,65,NULL),(11243,217,65,NULL),(11244,216,65,NULL),(11245,209,65,NULL),(11246,206,65,NULL),(11247,205,65,NULL),(11248,203,65,NULL),(11249,202,65,NULL),(11250,198,65,NULL),(11251,191,65,NULL),(11252,190,65,NULL),(11253,189,65,NULL),(11254,187,65,NULL),(11255,169,65,NULL),(11256,168,65,NULL),(11257,167,65,NULL),(11258,153,65,NULL),(11259,152,65,NULL),(11260,151,65,NULL),(11261,142,65,NULL),(11262,141,65,NULL),(11263,136,65,NULL),(11264,125,65,NULL),(11265,121,65,NULL),(11266,119,65,NULL),(11267,118,65,NULL),(11268,108,65,NULL),(11269,107,65,NULL),(11270,104,65,NULL),(11271,101,65,NULL),(11272,100,65,NULL),(11273,94,65,NULL),(11274,88,65,NULL),(11275,83,65,NULL),(11276,80,65,NULL),(11277,75,65,NULL),(11278,70,65,NULL),(11279,69,65,NULL),(11280,67,65,NULL),(11281,66,65,NULL),(11282,61,65,NULL),(11283,58,65,NULL),(11284,56,65,NULL),(11285,54,65,NULL),(11286,53,65,NULL),(11287,48,65,NULL),(11288,42,65,NULL),(11289,35,65,NULL),(11290,34,65,NULL),(11291,33,65,NULL),(11292,31,65,NULL),(11293,28,65,NULL),(11294,27,65,NULL),(11295,26,65,NULL),(11296,21,65,NULL),(11297,18,65,NULL),(11298,15,65,NULL),(11299,14,65,NULL),(11300,13,65,NULL),(11301,11,65,NULL),(11302,9,65,NULL),(11303,4,65,NULL),(11304,1,65,NULL),(11305,4348,65,NULL),(11306,3564,65,NULL),(11307,3502,65,NULL),(11308,3451,65,NULL),(11309,3556,65,NULL),(11310,3537,65,NULL),(11311,3476,65,NULL),(11312,3458,65,NULL),(11313,3479,65,NULL),(11314,3445,65,NULL),(11315,3418,65,NULL),(11316,3424,65,NULL),(11317,3428,65,NULL),(11318,3416,65,NULL),(11319,3487,65,NULL),(11320,3474,65,NULL),(11321,4013,65,NULL),(11322,3578,65,NULL),(11323,3543,65,NULL),(11324,4076,65,NULL),(11325,3425,65,NULL),(11326,3647,65,NULL),(11327,4198,65,NULL),(11328,3423,65,NULL),(11329,3627,65,NULL),(11330,3488,65,NULL),(11331,3514,65,NULL),(11332,4089,65,NULL),(11333,4186,65,NULL),(11334,3598,65,NULL),(11335,4090,65,NULL),(11336,4166,65,NULL),(11337,3545,65,NULL),(11338,3435,65,NULL),(11339,3846,65,NULL),(11340,4267,65,NULL),(11341,3587,65,NULL),(11342,3524,65,NULL),(11343,3455,65,NULL),(11344,4903,65,NULL),(11345,3761,65,NULL),(11346,3446,65,NULL),(11347,3739,65,NULL),(11348,4299,65,NULL),(11349,3557,65,NULL),(11350,4103,65,NULL),(11351,4505,65,NULL),(11352,3841,65,NULL),(11353,3459,65,NULL),(11354,3504,65,NULL),(11355,3457,65,NULL),(11356,3483,65,NULL),(11357,3830,65,NULL),(11358,4028,65,NULL),(11359,3762,65,NULL),(11360,3669,65,NULL),(11361,3749,65,NULL),(11362,5009,65,NULL),(11363,4934,65,NULL),(11364,4649,65,NULL),(11365,5122,65,NULL),(11366,4032,65,NULL),(11367,4767,65,NULL),(11368,3833,65,NULL),(11369,3482,65,NULL),(11370,4074,65,NULL),(11371,4941,65,NULL),(11372,3625,65,NULL),(11373,4217,65,NULL),(11374,4088,65,NULL),(11375,5043,65,NULL),(11376,3948,65,NULL),(11377,3430,65,NULL),(11378,3500,65,NULL),(11379,3505,65,NULL),(11380,3525,65,NULL),(11381,4064,65,NULL),(11382,3711,65,NULL),(11383,3633,65,NULL),(11384,3421,65,NULL),(11385,3643,65,NULL),(11386,3914,65,NULL),(11387,3785,65,NULL),(11388,3477,65,NULL),(11389,3422,65,NULL),(11390,3464,65,NULL),(11391,3550,65,NULL),(11392,3548,65,NULL),(11393,3468,65,NULL),(11394,3908,65,NULL),(11395,3427,65,NULL),(11396,3450,65,NULL),(11397,3463,65,NULL),(11398,3561,65,NULL),(11399,3522,65,NULL),(11400,3577,65,NULL),(11401,4149,65,NULL),(11402,4158,65,NULL),(11403,4324,65,NULL),(11404,3419,65,NULL),(11405,3473,65,NULL),(11406,3510,65,NULL),(11407,3497,65,NULL),(11408,3439,65,NULL),(11409,3465,65,NULL),(11410,5474,65,NULL),(11411,3621,65,NULL),(11412,3611,65,NULL),(11413,3472,65,NULL),(11414,3842,65,NULL),(11415,3592,65,NULL),(11416,4366,65,NULL),(11417,4309,65,NULL),(11418,4113,65,NULL),(11419,4587,65,NULL),(11420,4564,65,NULL),(11421,4654,65,NULL),(11422,3443,65,NULL),(11423,3818,65,NULL),(11424,4024,65,NULL),(11425,16620,57,NULL),(11426,16556,57,NULL),(11427,16574,57,NULL),(11428,16550,57,NULL),(11429,3411,57,NULL),(11430,3407,57,NULL),(11431,3396,57,NULL),(11432,3364,57,NULL),(11433,3356,57,NULL),(11434,3345,57,NULL),(11435,3360,57,NULL),(11436,3375,57,NULL),(11437,3354,57,NULL),(11438,3349,57,NULL),(11439,3361,57,NULL),(11440,3191,57,NULL),(11441,3160,57,NULL),(11442,3169,57,NULL),(11443,3105,57,NULL),(11444,2873,57,NULL),(11445,2780,57,NULL),(11446,2653,57,NULL),(11447,2551,57,NULL),(11448,2579,57,NULL),(11449,2537,57,NULL),(11450,2529,57,NULL),(11451,2523,57,NULL),(11452,2461,57,NULL),(11453,2401,57,NULL),(11454,2233,57,NULL),(11455,2206,57,NULL),(11456,2161,57,NULL),(11457,2140,57,NULL),(11458,2115,57,NULL),(11459,2033,57,NULL),(11460,1971,57,NULL),(11461,1910,57,NULL),(11462,1827,57,NULL),(11463,1790,57,NULL),(11464,1780,57,NULL),(11465,1749,57,NULL),(11466,1295,57,NULL),(11467,1248,57,NULL),(11468,1004,57,NULL),(11469,978,57,NULL),(11470,977,57,NULL),(11471,509,57,NULL),(11472,945,57,NULL),(11473,881,57,NULL),(11474,713,57,NULL),(11475,560,57,NULL),(11476,485,57,NULL),(11477,438,57,NULL),(11478,413,57,NULL),(11479,409,57,NULL),(11480,389,57,NULL),(11481,342,57,NULL),(11482,335,57,NULL),(11483,326,57,NULL),(11484,299,57,NULL),(11485,239,57,NULL),(11486,231,57,NULL),(11487,222,57,NULL),(11488,219,57,NULL),(11489,216,57,NULL),(11490,209,57,NULL),(11491,200,57,NULL),(11492,190,57,NULL),(11493,187,57,NULL),(11494,136,57,NULL),(11495,118,57,NULL),(11496,112,57,NULL),(11497,76,57,NULL),(11498,67,57,NULL),(11499,66,57,NULL),(11500,62,57,NULL),(11501,56,57,NULL),(11502,51,57,NULL),(11503,35,57,NULL),(11504,31,57,NULL),(11505,28,57,NULL),(11506,27,57,NULL),(11507,26,57,NULL),(11508,18,57,NULL),(11509,15,57,NULL),(11510,14,57,NULL),(11511,13,57,NULL),(11512,11,57,NULL),(11513,9,57,NULL),(11514,5,57,NULL),(11515,3,57,NULL),(11516,2,57,NULL),(11517,1,57,NULL),(11518,3484,57,NULL),(11519,3469,57,NULL),(11520,3431,57,NULL),(11521,3421,57,NULL),(11522,3477,57,NULL),(11523,3429,57,NULL),(11524,3422,57,NULL),(11525,3468,57,NULL),(11526,3523,57,NULL),(11527,3450,57,NULL),(11528,3417,57,NULL),(11529,3599,57,NULL),(11530,3419,57,NULL),(11531,3473,57,NULL),(11532,3510,57,NULL),(11533,3825,57,NULL),(11534,3465,57,NULL),(11535,4587,57,NULL),(11536,3635,57,NULL),(11537,3804,57,NULL),(11538,3418,57,NULL),(11539,3416,57,NULL),(11540,3492,57,NULL),(11541,3440,57,NULL),(11542,3514,57,NULL),(11543,3435,57,NULL),(11544,3587,57,NULL),(11545,3455,57,NULL),(11546,3761,57,NULL),(11547,3446,57,NULL),(11548,3714,57,NULL),(11549,5327,57,NULL),(11550,3459,57,NULL),(11551,3669,57,NULL),(11552,3749,57,NULL),(11553,4941,57,NULL),(11554,5681,57,NULL),(11555,16959,57,NULL),(11556,4717,57,NULL),(11557,15085,57,NULL),(11558,16556,59,NULL),(11559,16570,59,NULL),(11560,3407,59,NULL),(11561,3340,59,NULL),(11562,3345,59,NULL),(11563,3330,59,NULL),(11564,3349,59,NULL),(11565,3274,59,NULL),(11566,3238,59,NULL),(11567,3174,59,NULL),(11568,3151,59,NULL),(11569,3105,59,NULL),(11570,2956,59,NULL),(11571,2461,59,NULL),(11572,2427,59,NULL),(11573,2007,59,NULL),(11574,1910,59,NULL),(11575,1800,59,NULL),(11576,1790,59,NULL),(11577,1752,59,NULL),(11578,1636,59,NULL),(11579,1572,59,NULL),(11580,1487,59,NULL),(11581,1461,59,NULL),(11582,1446,59,NULL),(11583,2215,59,NULL),(11584,978,59,NULL),(11585,977,59,NULL),(11586,509,59,NULL),(11587,912,59,NULL),(11588,875,59,NULL),(11589,706,59,NULL),(11590,704,59,NULL),(11591,700,59,NULL),(11592,589,59,NULL),(11593,713,59,NULL),(11594,654,59,NULL),(11595,565,59,NULL),(11596,563,59,NULL),(11597,557,59,NULL),(11598,507,59,NULL),(11599,448,59,NULL),(11600,442,59,NULL),(11601,441,59,NULL),(11602,438,59,NULL),(11603,413,59,NULL),(11604,410,59,NULL),(11605,389,59,NULL),(11606,374,59,NULL),(11607,371,59,NULL),(11608,367,59,NULL),(11609,350,59,NULL),(11610,349,59,NULL),(11611,347,59,NULL),(11612,338,59,NULL),(11613,268,59,NULL),(11614,258,59,NULL),(11615,230,59,NULL),(11616,226,59,NULL),(11617,222,59,NULL),(11618,219,59,NULL),(11619,203,59,NULL),(11620,199,59,NULL),(11621,198,59,NULL),(11622,191,59,NULL),(11623,190,59,NULL),(11624,189,59,NULL),(11625,187,59,NULL),(11626,172,59,NULL),(11627,167,59,NULL),(11628,153,59,NULL),(11629,151,59,NULL),(11630,149,59,NULL),(11631,145,59,NULL),(11632,144,59,NULL),(11633,141,59,NULL),(11634,136,59,NULL),(11635,125,59,NULL),(11636,121,59,NULL),(11637,112,59,NULL),(11638,110,59,NULL),(11639,104,59,NULL),(11640,103,59,NULL),(11641,102,59,NULL),(11642,94,59,NULL),(11643,75,59,NULL),(11644,70,59,NULL),(11645,69,59,NULL),(11646,67,59,NULL),(11647,66,59,NULL),(11648,64,59,NULL),(11649,58,59,NULL),(11650,53,59,NULL),(11651,37,59,NULL),(11652,35,59,NULL),(11653,33,59,NULL),(11654,29,59,NULL),(11655,28,59,NULL),(11656,27,59,NULL),(11657,26,59,NULL),(11658,21,59,NULL),(11659,18,59,NULL),(11660,16,59,NULL),(11661,15,59,NULL),(11662,14,59,NULL),(11663,13,59,NULL),(11664,11,59,NULL),(11665,9,59,NULL),(11666,7,59,NULL),(11667,5,59,NULL),(11668,4,59,NULL),(11669,3,59,NULL),(11670,1,59,NULL),(11671,5383,59,NULL),(11672,3608,59,NULL),(11673,3587,59,NULL),(11674,4194,59,NULL),(11675,3455,59,NULL),(11676,4903,59,NULL),(11677,3761,59,NULL),(11678,3446,59,NULL),(11679,5472,59,NULL),(11680,4226,59,NULL),(11681,4510,59,NULL),(11682,3457,59,NULL),(11683,3830,59,NULL),(11684,4028,59,NULL),(11685,3762,59,NULL),(11686,3993,59,NULL),(11687,5009,59,NULL),(11688,5838,59,NULL),(11689,4612,59,NULL),(11690,5122,59,NULL),(11691,3695,59,NULL),(11692,4032,59,NULL),(11693,4493,59,NULL),(11694,4560,59,NULL),(11695,3833,59,NULL),(11696,3482,59,NULL),(11697,4074,59,NULL),(11698,4941,59,NULL),(11699,4170,59,NULL),(11700,4423,59,NULL),(11701,4217,59,NULL),(11702,5043,59,NULL),(11703,3948,59,NULL),(11704,4312,59,NULL),(11705,4383,59,NULL),(11706,16750,59,NULL),(11707,3632,59,NULL),(11708,3500,59,NULL),(11709,3433,59,NULL),(11710,3421,59,NULL),(11711,4057,59,NULL),(11712,3772,59,NULL),(11713,4023,59,NULL),(11714,3452,59,NULL),(11715,3464,59,NULL),(11716,3468,59,NULL),(11717,3427,59,NULL),(11718,3417,59,NULL),(11719,3536,59,NULL),(11720,3453,59,NULL),(11721,3522,59,NULL),(11722,3844,59,NULL),(11723,3419,59,NULL),(11724,3510,59,NULL),(11725,4397,59,NULL),(11726,3497,59,NULL),(11727,4920,59,NULL),(11728,3439,59,NULL),(11729,4102,59,NULL),(11730,3881,59,NULL),(11731,5474,59,NULL),(11732,3621,59,NULL),(11733,3472,59,NULL),(11734,4140,59,NULL),(11735,5256,59,NULL),(11736,5768,59,NULL),(11737,3907,59,NULL),(11738,4366,59,NULL),(11739,4161,59,NULL),(11740,4587,59,NULL),(11741,3642,59,NULL),(11742,3445,59,NULL),(11743,3418,59,NULL),(11744,3424,59,NULL),(11745,3416,59,NULL),(11746,3449,59,NULL),(11747,3425,59,NULL),(11748,3423,59,NULL),(11749,3736,59,NULL),(11750,3713,59,NULL),(11751,4646,59,NULL),(11752,4089,59,NULL),(11753,16630,51,NULL),(11754,16620,51,NULL),(11755,16634,51,NULL),(11756,16633,51,NULL),(11757,16631,51,NULL),(11758,16632,51,NULL),(11759,16635,51,NULL),(11760,16556,51,NULL),(11761,16545,51,NULL),(11762,16574,51,NULL),(11763,3392,51,NULL),(11764,3370,51,NULL),(11765,3393,51,NULL),(11766,3396,51,NULL),(11767,3356,51,NULL),(11768,3355,51,NULL),(11769,3345,51,NULL),(11770,3360,51,NULL),(11771,3330,51,NULL),(11772,3354,51,NULL),(11773,3318,51,NULL),(11774,3300,51,NULL),(11775,3314,51,NULL),(11776,3285,51,NULL),(11777,3289,51,NULL),(11778,3309,51,NULL),(11779,3306,51,NULL),(11780,3270,51,NULL),(11781,3280,51,NULL),(11782,3324,51,NULL),(11783,3286,51,NULL),(11784,3264,51,NULL),(11785,3295,51,NULL),(11786,3271,51,NULL),(11787,3248,51,NULL),(11788,3243,51,NULL),(11789,3217,51,NULL),(11790,3208,51,NULL),(11791,3194,51,NULL),(11792,3206,51,NULL),(11793,3227,51,NULL),(11794,3223,51,NULL),(11795,3211,51,NULL),(11796,3163,51,NULL),(11797,3152,51,NULL),(11798,3184,51,NULL),(11799,3159,51,NULL),(11800,3110,51,NULL),(11801,3105,51,NULL),(11802,3069,51,NULL),(11803,3100,51,NULL),(11804,3065,51,NULL),(11805,3033,51,NULL),(11806,3019,51,NULL),(11807,3042,51,NULL),(11808,3011,51,NULL),(11809,3015,51,NULL),(11810,2981,51,NULL),(11811,2971,51,NULL),(11812,2970,51,NULL),(11813,3000,51,NULL),(11814,2997,51,NULL),(11815,3005,51,NULL),(11816,2996,51,NULL),(11817,2965,51,NULL),(11818,2974,51,NULL),(11819,2958,51,NULL),(11820,2951,51,NULL),(11821,2960,51,NULL),(11822,2962,51,NULL),(11823,2956,51,NULL),(11824,2942,51,NULL),(11825,2923,51,NULL),(11826,2914,51,NULL),(11827,2894,51,NULL),(11828,2903,51,NULL),(11829,2874,51,NULL),(11830,2870,51,NULL),(11831,2859,51,NULL),(11832,2864,51,NULL),(11833,2825,51,NULL),(11834,2843,51,NULL),(11835,2828,51,NULL),(11836,2824,51,NULL),(11837,2807,51,NULL),(11838,2779,51,NULL),(11839,2785,51,NULL),(11840,2810,51,NULL),(11841,2787,51,NULL),(11842,2788,51,NULL),(11843,2798,51,NULL),(11844,2761,51,NULL),(11845,2816,51,NULL),(11846,2762,51,NULL),(11847,2799,51,NULL),(11848,2744,51,NULL),(11849,2710,51,NULL),(11850,2769,51,NULL),(11851,2696,51,NULL),(11852,2683,51,NULL),(11853,2657,51,NULL),(11854,2658,51,NULL),(11855,2610,51,NULL),(11856,2574,51,NULL),(11857,2570,51,NULL),(11858,2593,51,NULL),(11859,2558,51,NULL),(11860,2559,51,NULL),(11861,2608,51,NULL),(11862,2595,51,NULL),(11863,2586,51,NULL),(11864,2578,51,NULL),(11865,2579,51,NULL),(11866,2583,51,NULL),(11867,2582,51,NULL),(11868,2554,51,NULL),(11869,2540,51,NULL),(11870,2544,51,NULL),(11871,2537,51,NULL),(11872,2529,51,NULL),(11873,2523,51,NULL),(11874,2520,51,NULL),(11875,2491,51,NULL),(11876,2490,51,NULL),(11877,2487,51,NULL),(11878,2486,51,NULL),(11879,2485,51,NULL),(11880,2466,51,NULL),(11881,2465,51,NULL),(11882,2469,51,NULL),(11883,2461,51,NULL),(11884,2460,51,NULL),(11885,2425,51,NULL),(11886,2441,51,NULL),(11887,2427,51,NULL),(11888,2419,51,NULL),(11889,2418,51,NULL),(11890,2415,51,NULL),(11891,2413,51,NULL),(11892,2405,51,NULL),(11893,2404,51,NULL),(11894,2396,51,NULL),(11895,2401,51,NULL),(11896,2381,51,NULL),(11897,2379,51,NULL),(11898,2364,51,NULL),(11899,2363,51,NULL),(11900,2367,51,NULL),(11901,2360,51,NULL),(11902,2359,51,NULL),(11903,2351,51,NULL),(11904,2337,51,NULL),(11905,2325,51,NULL),(11906,2302,51,NULL),(11907,2236,51,NULL),(11908,2235,51,NULL),(11909,2283,51,NULL),(11910,2290,51,NULL),(11911,2270,51,NULL),(11912,2239,51,NULL),(11913,2264,51,NULL),(11914,2257,51,NULL),(11915,2260,51,NULL),(11916,2220,51,NULL),(11917,2206,51,NULL),(11918,2181,51,NULL),(11919,2185,51,NULL),(11920,2169,51,NULL),(11921,2164,51,NULL),(11922,2176,51,NULL),(11923,2154,51,NULL),(11924,2149,51,NULL),(11925,2161,51,NULL),(11926,2160,51,NULL),(11927,2140,51,NULL),(11928,2138,51,NULL),(11929,2125,51,NULL),(11930,2124,51,NULL),(11931,2119,51,NULL),(11932,2130,51,NULL),(11933,2129,51,NULL),(11934,2109,51,NULL),(11935,2108,51,NULL),(11936,2106,51,NULL),(11937,2103,51,NULL),(11938,2114,51,NULL),(11939,2095,51,NULL),(11940,2089,51,NULL),(11941,2078,51,NULL),(11942,2073,51,NULL),(11943,2058,51,NULL),(11944,2057,51,NULL),(11945,2044,51,NULL),(11946,2042,51,NULL),(11947,2033,51,NULL),(11948,2011,51,NULL),(11949,2022,51,NULL),(11950,2000,51,NULL),(11951,1980,51,NULL),(11952,1979,51,NULL),(11953,1975,51,NULL),(11954,1945,51,NULL),(11955,1929,51,NULL),(11956,1941,51,NULL),(11957,1922,51,NULL),(11958,1920,51,NULL),(11959,1901,51,NULL),(11960,1926,51,NULL),(11961,1903,51,NULL),(11962,1898,51,NULL),(11963,1899,51,NULL),(11964,1897,51,NULL),(11965,1910,51,NULL),(11966,1894,51,NULL),(11967,1863,51,NULL),(11968,1876,51,NULL),(11969,1861,51,NULL),(11970,1859,51,NULL),(11971,1832,51,NULL),(11972,1816,51,NULL),(11973,1800,51,NULL),(11974,1790,51,NULL),(11975,1773,51,NULL),(11976,1770,51,NULL),(11977,1769,51,NULL),(11978,1768,51,NULL),(11979,1780,51,NULL),(11980,1760,51,NULL),(11981,1750,51,NULL),(11982,1748,51,NULL),(11983,1732,51,NULL),(11984,1704,51,NULL),(11985,1689,51,NULL),(11986,1700,51,NULL),(11987,1678,51,NULL),(11988,1672,51,NULL),(11989,1684,51,NULL),(11990,1662,51,NULL),(11991,1657,51,NULL),(11992,1656,51,NULL),(11993,1647,51,NULL),(11994,1669,51,NULL),(11995,1624,51,NULL),(11996,1636,51,NULL),(11997,1614,51,NULL),(11998,1608,51,NULL),(11999,1578,51,NULL),(12000,1572,51,NULL),(12001,1545,51,NULL),(12002,1544,51,NULL),(12003,1534,51,NULL),(12004,1528,51,NULL),(12005,1518,51,NULL),(12006,1531,51,NULL),(12007,1512,51,NULL),(12008,1502,51,NULL),(12009,1496,51,NULL),(12010,1508,51,NULL),(12011,1486,51,NULL),(12012,1480,51,NULL),(12013,1492,51,NULL),(12014,1470,51,NULL),(12015,1464,51,NULL),(12016,1475,51,NULL),(12017,1457,51,NULL),(12018,1455,51,NULL),(12019,1463,51,NULL),(12020,1460,51,NULL),(12021,1446,51,NULL),(12022,1422,51,NULL),(12023,1431,51,NULL),(12024,1408,51,NULL),(12025,1404,51,NULL),(12026,1415,51,NULL),(12027,1389,51,NULL),(12028,1400,51,NULL),(12029,1380,51,NULL),(12030,1365,51,NULL),(12031,1351,51,NULL),(12032,1347,51,NULL),(12033,1346,51,NULL),(12034,1337,51,NULL),(12035,1358,51,NULL),(12036,1325,51,NULL),(12037,1343,51,NULL),(12038,1342,51,NULL),(12039,1295,51,NULL),(12040,1293,51,NULL),(12041,1267,51,NULL),(12042,1266,51,NULL),(12043,2215,51,NULL),(12044,1254,51,NULL),(12045,1249,51,NULL),(12046,2309,51,NULL),(12047,1239,51,NULL),(12048,2225,51,NULL),(12049,1221,51,NULL),(12050,1208,51,NULL),(12051,1209,51,NULL),(12052,1207,51,NULL),(12053,1957,51,NULL),(12054,1192,51,NULL),(12055,1507,51,NULL),(12056,1154,51,NULL),(12057,1331,51,NULL),(12058,1143,51,NULL),(12059,1313,51,NULL),(12060,1128,51,NULL),(12061,1289,51,NULL),(12062,1287,51,NULL),(12063,1123,51,NULL),(12064,1122,51,NULL),(12065,1109,51,NULL),(12066,1108,51,NULL),(12067,1094,51,NULL),(12068,1091,51,NULL),(12069,1079,51,NULL),(12070,1078,51,NULL),(12071,1071,51,NULL),(12072,1074,51,NULL),(12073,1051,51,NULL),(12074,1160,51,NULL),(12075,1029,51,NULL),(12076,1025,51,NULL),(12077,1020,51,NULL),(12078,1014,51,NULL),(12079,1011,51,NULL),(12080,1009,51,NULL),(12081,1007,51,NULL),(12082,1002,51,NULL),(12083,994,51,NULL),(12084,992,51,NULL),(12085,987,51,NULL),(12086,980,51,NULL),(12087,977,51,NULL),(12088,509,51,NULL),(12089,962,51,NULL),(12090,961,51,NULL),(12091,950,51,NULL),(12092,948,51,NULL),(12093,945,51,NULL),(12094,942,51,NULL),(12095,941,51,NULL),(12096,931,51,NULL),(12097,930,51,NULL),(12098,922,51,NULL),(12099,921,51,NULL),(12100,917,51,NULL),(12101,916,51,NULL),(12102,912,51,NULL),(12103,907,51,NULL),(12104,905,51,NULL),(12105,904,51,NULL),(12106,896,51,NULL),(12107,884,51,NULL),(12108,881,51,NULL),(12109,877,51,NULL),(12110,876,51,NULL),(12111,875,51,NULL),(12112,872,51,NULL),(12113,865,51,NULL),(12114,863,51,NULL),(12115,852,51,NULL),(12116,848,51,NULL),(12117,846,51,NULL),(12118,838,51,NULL),(12119,832,51,NULL),(12120,830,51,NULL),(12121,827,51,NULL),(12122,824,51,NULL),(12123,819,51,NULL),(12124,804,51,NULL),(12125,802,51,NULL),(12126,797,51,NULL),(12127,796,51,NULL),(12128,791,51,NULL),(12129,785,51,NULL),(12130,704,51,NULL),(12131,775,51,NULL),(12132,771,51,NULL),(12133,590,51,NULL),(12134,589,51,NULL),(12135,762,51,NULL),(12136,747,51,NULL),(12137,744,51,NULL),(12138,743,51,NULL),(12139,709,51,NULL),(12140,740,51,NULL),(12141,733,51,NULL),(12142,714,51,NULL),(12143,713,51,NULL),(12144,695,51,NULL),(12145,693,51,NULL),(12146,678,51,NULL),(12147,673,51,NULL),(12148,672,51,NULL),(12149,670,51,NULL),(12150,647,51,NULL),(12151,646,51,NULL),(12152,645,51,NULL),(12153,628,51,NULL),(12154,623,51,NULL),(12155,606,51,NULL),(12156,575,51,NULL),(12157,561,51,NULL),(12158,560,51,NULL),(12159,557,51,NULL),(12160,551,51,NULL),(12161,547,51,NULL),(12162,542,51,NULL),(12163,540,51,NULL),(12164,1721,51,NULL),(12165,521,51,NULL),(12166,520,51,NULL),(12167,516,51,NULL),(12168,515,51,NULL),(12169,507,51,NULL),(12170,500,51,NULL),(12171,498,51,NULL),(12172,496,51,NULL),(12173,494,51,NULL),(12174,485,51,NULL),(12175,463,51,NULL),(12176,461,51,NULL),(12177,459,51,NULL),(12178,455,51,NULL),(12179,451,51,NULL),(12180,448,51,NULL),(12181,442,51,NULL),(12182,441,51,NULL),(12183,438,51,NULL),(12184,434,51,NULL),(12185,419,51,NULL),(12186,416,51,NULL),(12187,414,51,NULL),(12188,412,51,NULL),(12189,409,51,NULL),(12190,404,51,NULL),(12191,402,51,NULL),(12192,400,51,NULL),(12193,392,51,NULL),(12194,390,51,NULL),(12195,389,51,NULL),(12196,387,51,NULL),(12197,386,51,NULL),(12198,383,51,NULL),(12199,380,51,NULL),(12200,378,51,NULL),(12201,374,51,NULL),(12202,372,51,NULL),(12203,371,51,NULL),(12204,368,51,NULL),(12205,367,51,NULL),(12206,363,51,NULL),(12207,350,51,NULL),(12208,349,51,NULL),(12209,347,51,NULL),(12210,345,51,NULL),(12211,344,51,NULL),(12212,342,51,NULL),(12213,338,51,NULL),(12214,328,51,NULL),(12215,326,51,NULL),(12216,322,51,NULL),(12217,309,51,NULL),(12218,303,51,NULL),(12219,300,51,NULL),(12220,290,51,NULL),(12221,287,51,NULL),(12222,283,51,NULL),(12223,275,51,NULL),(12224,274,51,NULL),(12225,268,51,NULL),(12226,260,51,NULL),(12227,258,51,NULL),(12228,257,51,NULL),(12229,238,51,NULL),(12230,237,51,NULL),(12231,234,51,NULL),(12232,231,51,NULL),(12233,230,51,NULL),(12234,229,51,NULL),(12235,228,51,NULL),(12236,226,51,NULL),(12237,217,51,NULL),(12238,216,51,NULL),(12239,213,51,NULL),(12240,211,51,NULL),(12241,210,51,NULL),(12242,209,51,NULL),(12243,208,51,NULL),(12244,207,51,NULL),(12245,206,51,NULL),(12246,204,51,NULL),(12247,202,51,NULL),(12248,200,51,NULL),(12249,199,51,NULL),(12250,198,51,NULL),(12251,191,51,NULL),(12252,190,51,NULL),(12253,189,51,NULL),(12254,169,51,NULL),(12255,167,51,NULL),(12256,164,51,NULL),(12257,162,51,NULL),(12258,153,51,NULL),(12259,152,51,NULL),(12260,151,51,NULL),(12261,145,51,NULL),(12262,144,51,NULL),(12263,141,51,NULL),(12264,136,51,NULL),(12265,134,51,NULL),(12266,131,51,NULL),(12267,130,51,NULL),(12268,129,51,NULL),(12269,125,51,NULL),(12270,123,51,NULL),(12271,122,51,NULL),(12272,121,51,NULL),(12273,120,51,NULL),(12274,119,51,NULL),(12275,118,51,NULL),(12276,113,51,NULL),(12277,112,51,NULL),(12278,111,51,NULL),(12279,107,51,NULL),(12280,104,51,NULL),(12281,103,51,NULL),(12282,102,51,NULL),(12283,101,51,NULL),(12284,100,51,NULL),(12285,98,51,NULL),(12286,96,51,NULL),(12287,94,51,NULL),(12288,92,51,NULL),(12289,90,51,NULL),(12290,88,51,NULL),(12291,86,51,NULL),(12292,85,51,NULL),(12293,81,51,NULL),(12294,79,51,NULL),(12295,78,51,NULL),(12296,77,51,NULL),(12297,75,51,NULL),(12298,74,51,NULL),(12299,73,51,NULL),(12300,70,51,NULL),(12301,69,51,NULL),(12302,68,51,NULL),(12303,66,51,NULL),(12304,64,51,NULL),(12305,63,51,NULL),(12306,62,51,NULL),(12307,61,51,NULL),(12308,60,51,NULL),(12309,58,51,NULL),(12310,55,51,NULL),(12311,53,51,NULL),(12312,52,51,NULL),(12313,51,51,NULL),(12314,50,51,NULL),(12315,48,51,NULL),(12316,47,51,NULL),(12317,46,51,NULL),(12318,45,51,NULL),(12319,43,51,NULL),(12320,42,51,NULL),(12321,41,51,NULL),(12322,40,51,NULL),(12323,39,51,NULL),(12324,38,51,NULL),(12325,36,51,NULL),(12326,35,51,NULL),(12327,34,51,NULL),(12328,33,51,NULL),(12329,31,51,NULL),(12330,29,51,NULL),(12331,28,51,NULL),(12332,27,51,NULL),(12333,26,51,NULL),(12334,25,51,NULL),(12335,24,51,NULL),(12336,22,51,NULL),(12337,21,51,NULL),(12338,20,51,NULL),(12339,19,51,NULL),(12340,17,51,NULL),(12341,14,51,NULL),(12342,11,51,NULL),(12343,9,51,NULL),(12344,7,51,NULL),(12345,5,51,NULL),(12346,4,51,NULL),(12347,3,51,NULL),(12348,2,51,NULL),(12349,1,51,NULL),(12350,16165,51,NULL),(12351,14908,51,NULL),(12352,13380,51,NULL),(12353,12368,51,NULL),(12354,14077,51,NULL),(12355,15633,51,NULL),(12356,14930,51,NULL),(12357,10487,51,NULL),(12358,15085,51,NULL),(12359,7075,51,NULL),(12360,9872,51,NULL),(12361,13547,51,NULL),(12362,12269,51,NULL),(12363,16595,68,NULL),(12364,16596,68,NULL),(12365,2537,68,NULL),(12366,1838,68,NULL),(12367,1343,68,NULL),(12368,658,68,NULL),(12369,643,68,NULL),(12370,523,68,NULL),(12371,448,68,NULL),(12372,442,68,NULL),(12373,209,68,NULL),(12374,77,68,NULL),(12375,4,68,NULL),(12376,1,68,NULL),(12377,4057,71,NULL),(12378,3772,71,NULL),(12379,4023,71,NULL),(12380,4580,71,NULL),(12381,4741,71,NULL),(12382,4659,71,NULL),(12383,16560,69,NULL),(12384,16556,69,NULL),(12385,16570,69,NULL),(12386,16574,69,NULL),(12387,16589,69,NULL),(12388,3411,69,NULL),(12389,3402,69,NULL),(12390,3403,69,NULL),(12391,3356,69,NULL),(12392,3360,69,NULL),(12393,2656,69,NULL),(12394,2652,69,NULL),(12395,2595,69,NULL),(12396,2554,69,NULL),(12397,2535,69,NULL),(12398,2529,69,NULL),(12399,2490,69,NULL),(12400,2485,69,NULL),(12401,2335,69,NULL),(12402,2220,69,NULL),(12403,2062,69,NULL),(12404,1929,69,NULL),(12405,1920,69,NULL),(12406,1863,69,NULL),(12407,1859,69,NULL),(12408,1832,69,NULL),(12409,1768,69,NULL),(12410,1752,69,NULL),(12411,1725,69,NULL),(12412,1732,69,NULL),(12413,1679,69,NULL),(12414,1672,69,NULL),(12415,1572,69,NULL),(12416,1539,69,NULL),(12417,1512,69,NULL),(12418,1486,69,NULL),(12419,1480,69,NULL),(12420,1492,69,NULL),(12421,1470,69,NULL),(12422,1464,69,NULL),(12423,1456,69,NULL),(12424,1423,69,NULL),(12425,1431,69,NULL),(12426,1351,69,NULL),(12427,1346,69,NULL),(12428,1323,69,NULL),(12429,1342,69,NULL),(12430,1304,69,NULL),(12431,1266,69,NULL),(12432,2215,69,NULL),(12433,1252,69,NULL),(12434,1207,69,NULL),(12435,1071,69,NULL),(12436,1005,69,NULL),(12437,1004,69,NULL),(12438,977,69,NULL),(12439,976,69,NULL),(12440,867,69,NULL),(12441,832,69,NULL),(12442,796,69,NULL),(12443,709,69,NULL),(12444,724,69,NULL),(12445,693,69,NULL),(12446,643,69,NULL),(12447,628,69,NULL),(12448,605,69,NULL),(12449,566,69,NULL),(12450,448,69,NULL),(12451,443,69,NULL),(12452,435,69,NULL),(12453,401,69,NULL),(12454,392,69,NULL),(12455,374,69,NULL),(12456,345,69,NULL),(12457,344,69,NULL),(12458,342,69,NULL),(12459,338,69,NULL),(12460,334,69,NULL),(12461,287,69,NULL),(12462,283,69,NULL),(12463,238,69,NULL),(12464,217,69,NULL),(12465,209,69,NULL),(12466,189,69,NULL),(12467,169,69,NULL),(12468,167,69,NULL),(12469,151,69,NULL),(12470,136,69,NULL),(12471,125,69,NULL),(12472,122,69,NULL),(12473,121,69,NULL),(12474,88,69,NULL),(12475,80,69,NULL),(12476,74,69,NULL),(12477,66,69,NULL),(12478,58,69,NULL),(12479,55,69,NULL),(12480,53,69,NULL),(12481,45,69,NULL),(12482,35,69,NULL),(12483,28,69,NULL),(12484,27,69,NULL),(12485,26,69,NULL),(12486,15,69,NULL),(12487,14,69,NULL),(12488,13,69,NULL),(12489,12,69,NULL),(12490,11,69,NULL),(12491,9,69,NULL),(12492,7,69,NULL),(12493,3,69,NULL),(12494,1,69,NULL),(12495,1200,71,NULL),(12496,26,71,NULL),(12497,17190,72,NULL),(12498,15465,72,NULL),(12499,10487,72,NULL),(12500,16610,72,NULL),(12501,16595,72,NULL),(12502,16579,72,NULL),(12503,16560,72,NULL),(12504,16641,72,NULL),(12505,16640,72,NULL),(12506,16545,72,NULL),(12507,16574,72,NULL),(12508,16589,72,NULL),(12509,16550,72,NULL),(12510,3411,72,NULL),(12511,3392,72,NULL),(12512,3360,72,NULL),(12513,3354,72,NULL),(12514,3349,72,NULL),(12515,3304,72,NULL),(12516,3285,72,NULL),(12517,3289,72,NULL),(12518,3280,72,NULL),(12519,3258,72,NULL),(12520,3295,72,NULL),(12521,3190,72,NULL),(12522,3191,72,NULL),(12523,3194,72,NULL),(12524,3206,72,NULL),(12525,3162,72,NULL),(12526,3151,72,NULL),(12527,3168,72,NULL),(12528,3146,72,NULL),(12529,3110,72,NULL),(12530,3105,72,NULL),(12531,3042,72,NULL),(12532,2966,72,NULL),(12533,2965,72,NULL),(12534,2942,72,NULL),(12535,2894,72,NULL),(12536,2873,72,NULL),(12537,2874,72,NULL),(12538,2824,72,NULL),(12539,2807,72,NULL),(12540,2798,72,NULL),(12541,2697,72,NULL),(12542,2769,72,NULL),(12543,2574,72,NULL),(12544,2570,72,NULL),(12545,2579,72,NULL),(12546,2529,72,NULL),(12547,2523,72,NULL),(12548,2486,72,NULL),(12549,2485,72,NULL),(12550,2469,72,NULL),(12551,2460,72,NULL),(12552,2413,72,NULL),(12553,2405,72,NULL),(12554,2396,72,NULL),(12555,2379,72,NULL),(12556,2367,72,NULL),(12557,2320,72,NULL),(12558,2235,72,NULL),(12559,2270,72,NULL),(12560,2220,72,NULL),(12561,2206,72,NULL),(12562,2176,72,NULL),(12563,2149,72,NULL),(12564,2161,72,NULL),(12565,2160,72,NULL),(12566,2140,72,NULL),(12567,2108,72,NULL),(12568,2115,72,NULL),(12569,2089,72,NULL),(12570,2011,72,NULL),(12571,2000,72,NULL),(12572,2009,72,NULL),(12573,1979,72,NULL),(12574,1952,72,NULL),(12575,1929,72,NULL),(12576,1920,72,NULL),(12577,1863,72,NULL),(12578,1877,72,NULL),(12579,1833,72,NULL),(12580,1822,72,NULL),(12581,1827,72,NULL),(12582,1800,72,NULL),(12583,1791,72,NULL),(12584,1790,72,NULL),(12585,1769,72,NULL),(12586,1768,72,NULL),(12587,1780,72,NULL),(12588,1752,72,NULL),(12589,1749,72,NULL),(12590,1732,72,NULL),(12591,1710,72,NULL),(12592,1716,72,NULL),(12593,1672,72,NULL),(12594,1658,72,NULL),(12595,1652,72,NULL),(12596,1588,72,NULL),(12597,1561,72,NULL),(12598,1512,72,NULL),(12599,1480,72,NULL),(12600,1493,72,NULL),(12601,1470,72,NULL),(12602,1456,72,NULL),(12603,1431,72,NULL),(12604,1408,72,NULL),(12605,1402,72,NULL),(12606,1365,72,NULL),(12607,1352,72,NULL),(12608,1351,72,NULL),(12609,1358,72,NULL),(12610,1323,72,NULL),(12611,1343,72,NULL),(12612,1282,72,NULL),(12613,1281,72,NULL),(12614,1248,72,NULL),(12615,1221,72,NULL),(12616,1208,72,NULL),(12617,1143,72,NULL),(12618,1123,72,NULL),(12619,1109,72,NULL),(12620,1094,72,NULL),(12621,1051,72,NULL),(12622,1004,72,NULL),(12623,997,72,NULL),(12624,994,72,NULL),(12625,992,72,NULL),(12626,509,72,NULL),(12627,961,72,NULL),(12628,930,72,NULL),(12629,921,72,NULL),(12630,912,72,NULL),(12631,904,72,NULL),(12632,876,72,NULL),(12633,873,72,NULL),(12634,867,72,NULL),(12635,860,72,NULL),(12636,848,72,NULL),(12637,807,72,NULL),(12638,798,72,NULL),(12639,704,72,NULL),(12640,771,72,NULL),(12641,763,72,NULL),(12642,746,72,NULL),(12643,724,72,NULL),(12644,713,72,NULL),(12645,658,72,NULL),(12646,643,72,NULL),(12647,567,72,NULL),(12648,557,72,NULL),(12649,547,72,NULL),(12650,516,72,NULL),(12651,476,72,NULL),(12652,461,72,NULL),(12653,455,72,NULL),(12654,441,72,NULL),(12655,416,72,NULL),(12656,415,72,NULL),(12657,414,72,NULL),(12658,401,72,NULL),(12659,392,72,NULL),(12660,349,72,NULL),(12661,344,72,NULL),(12662,342,72,NULL),(12663,338,72,NULL),(12664,326,72,NULL),(12665,300,72,NULL),(12666,283,72,NULL),(12667,268,72,NULL),(12668,258,72,NULL),(12669,238,72,NULL),(12670,231,72,NULL),(12671,225,72,NULL),(12672,219,72,NULL),(12673,217,72,NULL),(12674,209,72,NULL),(12675,206,72,NULL),(12676,202,72,NULL),(12677,200,72,NULL),(12678,198,72,NULL),(12679,191,72,NULL),(12680,190,72,NULL),(12681,189,72,NULL),(12682,187,72,NULL),(12683,172,72,NULL),(12684,169,72,NULL),(12685,167,72,NULL),(12686,153,72,NULL),(12687,141,72,NULL),(12688,136,72,NULL),(12689,135,72,NULL),(12690,125,72,NULL),(12691,122,72,NULL),(12692,121,72,NULL),(12693,119,72,NULL),(12694,118,72,NULL),(12695,92,72,NULL),(12696,88,72,NULL),(12697,83,72,NULL),(12698,81,72,NULL),(12699,80,72,NULL),(12700,75,72,NULL),(12701,74,72,NULL),(12702,72,72,NULL),(12703,70,72,NULL),(12704,69,72,NULL),(12705,66,72,NULL),(12706,58,72,NULL),(12707,56,72,NULL),(12708,55,72,NULL),(12709,51,72,NULL),(12710,50,72,NULL),(12711,48,72,NULL),(12712,45,72,NULL),(12713,42,72,NULL),(12714,38,72,NULL),(12715,35,72,NULL),(12716,28,72,NULL),(12717,27,72,NULL),(12718,26,72,NULL),(12719,21,72,NULL),(12720,20,72,NULL),(12721,19,72,NULL),(12722,15,72,NULL),(12723,13,72,NULL),(12724,11,72,NULL),(12725,9,72,NULL),(12726,7,72,NULL),(12727,5,72,NULL),(12728,4,72,NULL),(12729,3,72,NULL),(12730,2,72,NULL),(12731,1,72,NULL),(12732,16579,76,NULL),(12733,16560,76,NULL),(12734,16541,76,NULL),(12735,16556,76,NULL),(12736,16545,76,NULL),(12737,16570,76,NULL),(12738,16574,76,NULL),(12739,16535,76,NULL),(12740,3411,76,NULL),(12741,3402,76,NULL),(12742,3364,76,NULL),(12743,3345,76,NULL),(12744,3360,76,NULL),(12745,3151,76,NULL),(12746,2656,76,NULL),(12747,2652,76,NULL),(12748,2574,76,NULL),(12749,2595,76,NULL),(12750,2554,76,NULL),(12751,2535,76,NULL),(12752,2529,76,NULL),(12753,2490,76,NULL),(12754,2485,76,NULL),(12755,2390,76,NULL),(12756,2364,76,NULL),(12757,2352,76,NULL),(12758,2335,76,NULL),(12759,2300,76,NULL),(12760,2220,76,NULL),(12761,1929,76,NULL),(12762,1920,76,NULL),(12763,1859,76,NULL),(12764,1832,76,NULL),(12765,1768,76,NULL),(12766,1752,76,NULL),(12767,1725,76,NULL),(12768,1732,76,NULL),(12769,1679,76,NULL),(12770,1672,76,NULL),(12771,1657,76,NULL),(12772,1582,76,NULL),(12773,1572,76,NULL),(12774,1539,76,NULL),(12775,1512,76,NULL),(12776,1486,76,NULL),(12777,1480,76,NULL),(12778,1493,76,NULL),(12779,1470,76,NULL),(12780,1464,76,NULL),(12781,1456,76,NULL),(12782,1431,76,NULL),(12783,1351,76,NULL),(12784,1346,76,NULL),(12785,1323,76,NULL),(12786,1343,76,NULL),(12787,1342,76,NULL),(12788,2215,76,NULL),(12789,1252,76,NULL),(12790,1207,76,NULL),(12791,1122,76,NULL),(12792,1071,76,NULL),(12793,1005,76,NULL),(12794,1004,76,NULL),(12795,977,76,NULL),(12796,974,76,NULL),(12797,907,76,NULL),(12798,875,76,NULL),(12799,867,76,NULL),(12800,832,76,NULL),(12801,796,76,NULL),(12802,700,76,NULL),(12803,766,76,NULL),(12804,709,76,NULL),(12805,735,76,NULL),(12806,724,76,NULL),(12807,693,76,NULL),(12808,643,76,NULL),(12809,628,76,NULL),(12810,605,76,NULL),(12811,566,76,NULL),(12812,542,76,NULL),(12813,448,76,NULL),(12814,443,76,NULL),(12815,435,76,NULL),(12816,415,76,NULL),(12817,414,76,NULL),(12818,412,76,NULL),(12819,394,76,NULL),(12820,392,76,NULL),(12821,374,76,NULL),(12822,349,76,NULL),(12823,345,76,NULL),(12824,344,76,NULL),(12825,342,76,NULL),(12826,338,76,NULL),(12827,334,76,NULL),(12828,303,76,NULL),(12829,287,76,NULL),(12830,283,76,NULL),(12831,268,76,NULL),(12832,263,76,NULL),(12833,242,76,NULL),(12834,240,76,NULL),(12835,238,76,NULL),(12836,219,76,NULL),(12837,217,76,NULL),(12838,206,76,NULL),(12839,202,76,NULL),(12840,191,76,NULL),(12841,190,76,NULL),(12842,189,76,NULL),(12843,169,76,NULL),(12844,167,76,NULL),(12845,164,76,NULL),(12846,162,76,NULL),(12847,153,76,NULL),(12848,151,76,NULL),(12849,136,76,NULL),(12850,125,76,NULL),(12851,121,76,NULL),(12852,88,76,NULL),(12853,81,76,NULL),(12854,74,76,NULL),(12855,69,76,NULL),(12856,67,76,NULL),(12857,66,76,NULL),(12858,58,76,NULL),(12859,54,76,NULL),(12860,53,76,NULL),(12861,48,76,NULL),(12862,35,76,NULL),(12863,34,76,NULL),(12864,33,76,NULL),(12865,31,76,NULL),(12866,28,76,NULL),(12867,27,76,NULL),(12868,26,76,NULL),(12869,20,76,NULL),(12870,14,76,NULL),(12871,13,76,NULL),(12872,11,76,NULL),(12873,9,76,NULL),(12874,7,76,NULL),(12875,1,76,NULL),(12876,16585,73,NULL),(12877,3289,73,NULL),(12878,3280,73,NULL),(12879,3232,73,NULL),(12880,3110,73,NULL),(12881,3099,73,NULL),(12882,2965,73,NULL),(12883,2942,73,NULL),(12884,2656,73,NULL),(12885,2652,73,NULL),(12886,2574,73,NULL),(12887,2595,73,NULL),(12888,2540,73,NULL),(12889,2523,73,NULL),(12890,2469,73,NULL),(12891,2427,73,NULL),(12892,2413,73,NULL),(12893,2379,73,NULL),(12894,2352,73,NULL),(12895,2235,73,NULL),(12896,2255,73,NULL),(12897,2124,73,NULL),(12898,2000,73,NULL),(12899,1929,73,NULL),(12900,1920,73,NULL),(12901,1832,73,NULL),(12902,1768,73,NULL),(12903,1725,73,NULL),(12904,1732,73,NULL),(12905,1679,73,NULL),(12906,1672,73,NULL),(12907,1582,73,NULL),(12908,1572,73,NULL),(12909,1539,73,NULL),(12910,1512,73,NULL),(12911,1486,73,NULL),(12912,1480,73,NULL),(12913,1470,73,NULL),(12914,1464,73,NULL),(12915,1456,73,NULL),(12916,1431,73,NULL),(12917,1402,73,NULL),(12918,1351,73,NULL),(12919,1346,73,NULL),(12920,1343,73,NULL),(12921,1304,73,NULL),(12922,1281,73,NULL),(12923,2215,73,NULL),(12924,1207,73,NULL),(12925,1071,73,NULL),(12926,1025,73,NULL),(12927,977,73,NULL),(12928,509,73,NULL),(12929,875,73,NULL),(12930,867,73,NULL),(12931,832,73,NULL),(12932,796,73,NULL),(12933,704,73,NULL),(12934,771,73,NULL),(12935,766,73,NULL),(12936,709,73,NULL),(12937,693,73,NULL),(12938,643,73,NULL),(12939,575,73,NULL),(12940,520,73,NULL),(12941,455,73,NULL),(12942,448,73,NULL),(12943,442,73,NULL),(12944,441,73,NULL),(12945,415,73,NULL),(12946,414,73,NULL),(12947,412,73,NULL),(12948,392,73,NULL),(12949,371,73,NULL),(12950,349,73,NULL),(12951,345,73,NULL),(12952,344,73,NULL),(12953,338,73,NULL),(12954,334,73,NULL),(12955,287,73,NULL),(12956,283,73,NULL),(12957,279,73,NULL),(12958,258,73,NULL),(12959,238,73,NULL),(12960,217,73,NULL),(12961,215,73,NULL),(12962,202,73,NULL),(12963,191,73,NULL),(12964,189,73,NULL),(12965,169,73,NULL),(12966,167,73,NULL),(12967,164,73,NULL),(12968,162,73,NULL),(12969,153,73,NULL),(12970,151,73,NULL),(12971,136,73,NULL),(12972,125,73,NULL),(12973,121,73,NULL),(12974,88,73,NULL),(12975,74,73,NULL),(12976,70,73,NULL),(12977,69,73,NULL),(12978,66,73,NULL),(12979,58,73,NULL),(12980,55,73,NULL),(12981,50,73,NULL),(12982,41,73,NULL),(12983,35,73,NULL),(12984,34,73,NULL),(12985,33,73,NULL),(12986,29,73,NULL),(12987,27,73,NULL),(12988,26,73,NULL),(12989,14,73,NULL),(12990,9,73,NULL),(12991,7,73,NULL),(12992,4,73,NULL),(12993,1,73,NULL),(12994,3914,80,NULL),(12995,3417,80,NULL),(12996,3667,80,NULL),(12997,3419,80,NULL),(12998,3497,80,NULL),(12999,3996,80,NULL),(13000,3621,80,NULL),(13001,3435,80,NULL),(13002,3446,80,NULL),(13003,3739,80,NULL),(13004,3504,80,NULL),(13005,3483,80,NULL),(13006,3830,80,NULL),(13007,4028,80,NULL),(13008,3762,80,NULL),(13009,3695,80,NULL),(13010,3833,80,NULL),(13011,4170,80,NULL),(13012,3948,80,NULL),(13013,3420,80,NULL),(13014,3425,80,NULL),(13015,3423,80,NULL),(13016,1408,74,NULL),(13017,136,74,NULL),(13018,35,74,NULL),(13019,31,74,NULL),(13020,27,74,NULL),(13021,26,74,NULL),(13022,9,74,NULL),(13023,4,74,NULL),(13024,3,74,NULL),(13025,2,74,NULL),(13026,1,74,NULL),(13027,3407,80,NULL),(13028,3345,80,NULL),(13029,3354,80,NULL),(13030,2710,80,NULL),(13031,2220,80,NULL),(13032,1974,80,NULL),(13033,1768,80,NULL),(13034,1403,80,NULL),(13035,1323,80,NULL),(13036,1221,80,NULL),(13037,1217,80,NULL),(13038,995,80,NULL),(13039,976,80,NULL),(13040,509,80,NULL),(13041,942,80,NULL),(13042,884,80,NULL),(13043,860,80,NULL),(13044,717,80,NULL),(13045,680,80,NULL),(13046,605,80,NULL),(13047,561,80,NULL),(13048,526,80,NULL),(13049,455,80,NULL),(13050,409,80,NULL),(13051,405,80,NULL),(13052,390,80,NULL),(13053,389,80,NULL),(13054,342,80,NULL),(13055,338,80,NULL),(13056,330,80,NULL),(13057,287,80,NULL),(13058,268,80,NULL),(13059,242,80,NULL),(13060,231,80,NULL),(13061,227,80,NULL),(13062,205,80,NULL),(13063,203,80,NULL),(13064,191,80,NULL),(13065,190,80,NULL),(13066,171,80,NULL),(13067,168,80,NULL),(13068,160,80,NULL),(13069,138,80,NULL),(13070,137,80,NULL),(13071,136,80,NULL),(13072,135,80,NULL),(13073,125,80,NULL),(13074,78,80,NULL),(13075,67,80,NULL),(13076,55,80,NULL),(13077,44,80,NULL),(13078,29,80,NULL),(13079,28,80,NULL),(13080,24,80,NULL),(13081,20,80,NULL),(13082,14,80,NULL),(13083,13,80,NULL),(13084,11,80,NULL),(13085,10,80,NULL),(13086,5,80,NULL),(13087,4,80,NULL),(13088,3,80,NULL),(13089,2,80,NULL),(13090,1,80,NULL),(13091,3392,82,NULL),(13092,3394,82,NULL),(13093,3396,82,NULL),(13094,3356,82,NULL),(13095,3375,82,NULL),(13096,3285,82,NULL),(13097,3289,82,NULL),(13098,3305,82,NULL),(13099,3306,82,NULL),(13100,3280,82,NULL),(13101,3272,82,NULL),(13102,3295,82,NULL),(13103,3169,82,NULL),(13104,3151,82,NULL),(13105,3110,82,NULL),(13106,3042,82,NULL),(13107,2999,82,NULL),(13108,2965,82,NULL),(13109,2962,82,NULL),(13110,2873,82,NULL),(13111,2874,82,NULL),(13112,2818,82,NULL),(13113,2843,82,NULL),(13114,2845,82,NULL),(13115,2780,82,NULL),(13116,2799,82,NULL),(13117,2706,82,NULL),(13118,2570,82,NULL),(13119,2563,82,NULL),(13120,2551,82,NULL),(13121,2579,82,NULL),(13122,2537,82,NULL),(13123,2529,82,NULL),(13124,2523,82,NULL),(13125,2503,82,NULL),(13126,2485,82,NULL),(13127,2460,82,NULL),(13128,2444,82,NULL),(13129,2379,82,NULL),(13130,2338,82,NULL),(13131,2302,82,NULL),(13132,2179,82,NULL),(13133,2176,82,NULL),(13134,2161,82,NULL),(13135,2140,82,NULL),(13136,2145,82,NULL),(13137,2071,82,NULL),(13138,2042,82,NULL),(13139,2033,82,NULL),(13140,1922,82,NULL),(13141,1863,82,NULL),(13142,1780,82,NULL),(13143,1534,82,NULL),(13144,1456,82,NULL),(13145,1422,82,NULL),(13146,1408,82,NULL),(13147,1399,82,NULL),(13148,1358,82,NULL),(13149,1295,82,NULL),(13150,1268,82,NULL),(13151,1208,82,NULL),(13152,1207,82,NULL),(13153,1128,82,NULL),(13154,1123,82,NULL),(13155,1025,82,NULL),(13156,1007,82,NULL),(13157,992,82,NULL),(13158,977,82,NULL),(13159,509,82,NULL),(13160,930,82,NULL),(13161,904,82,NULL),(13162,896,82,NULL),(13163,875,82,NULL),(13164,848,82,NULL),(13165,838,82,NULL),(13166,781,82,NULL),(13167,704,82,NULL),(13168,763,82,NULL),(13169,746,82,NULL),(13170,713,82,NULL),(13171,658,82,NULL),(13172,643,82,NULL),(13173,560,82,NULL),(13174,438,82,NULL),(13175,416,82,NULL),(13176,414,82,NULL),(13177,392,82,NULL),(13178,389,82,NULL),(13179,368,82,NULL),(13180,363,82,NULL),(13181,350,82,NULL),(13182,349,82,NULL),(13183,347,82,NULL),(13184,338,82,NULL),(13185,303,82,NULL),(13186,283,82,NULL),(13187,268,82,NULL),(13188,258,82,NULL),(13189,242,82,NULL),(13190,239,82,NULL),(13191,219,82,NULL),(13192,217,82,NULL),(13193,209,82,NULL),(13194,198,82,NULL),(13195,169,82,NULL),(13196,151,82,NULL),(13197,125,82,NULL),(13198,121,82,NULL),(13199,119,82,NULL),(13200,88,82,NULL),(13201,81,82,NULL),(13202,75,82,NULL),(13203,70,82,NULL),(13204,69,82,NULL),(13205,66,82,NULL),(13206,62,82,NULL),(13207,50,82,NULL),(13208,47,82,NULL),(13209,42,82,NULL),(13210,38,82,NULL),(13211,35,82,NULL),(13212,33,82,NULL),(13213,26,82,NULL),(13214,20,82,NULL),(13215,18,82,NULL),(13216,15,82,NULL),(13217,14,82,NULL),(13218,13,82,NULL),(13219,12,82,NULL),(13220,9,82,NULL),(13221,7,82,NULL),(13222,4,82,NULL),(13223,1,82,NULL),(13224,3525,82,NULL),(13225,4317,82,NULL),(13226,3621,82,NULL),(13227,5443,82,NULL),(13228,4153,82,NULL),(13229,3423,82,NULL),(13230,5943,82,NULL),(13231,4073,82,NULL),(13232,4307,82,NULL),(13233,4769,82,NULL),(13234,4484,82,NULL),(13235,5006,82,NULL),(13236,5125,82,NULL),(13237,4902,82,NULL),(13238,6210,82,NULL),(13239,5429,82,NULL),(13240,4720,82,NULL),(13241,5017,82,NULL),(13242,4750,82,NULL),(13243,3889,82,NULL),(13244,4865,82,NULL),(13245,5068,82,NULL),(13246,4775,82,NULL),(13247,6173,82,NULL),(13248,5505,82,NULL),(13249,5624,82,NULL),(13250,4172,82,NULL),(13251,4232,82,NULL),(13252,4269,82,NULL),(13253,4405,82,NULL),(13254,4302,82,NULL),(13255,4714,82,NULL),(13256,15085,82,NULL),(13257,10487,82,NULL),(13258,16165,82,NULL),(13259,16523,82,NULL),(13260,16560,85,NULL),(13261,16556,85,NULL),(13262,16545,85,NULL),(13263,16574,85,NULL),(13264,16645,85,NULL),(13265,3392,85,NULL),(13266,3396,85,NULL),(13267,3340,85,NULL),(13268,3345,85,NULL),(13269,3375,85,NULL),(13270,3330,85,NULL),(13271,3349,85,NULL),(13272,3300,85,NULL),(13273,3314,85,NULL),(13274,3304,85,NULL),(13275,3334,85,NULL),(13276,3285,85,NULL),(13277,3289,85,NULL),(13278,3309,85,NULL),(13279,3270,85,NULL),(13280,3280,85,NULL),(13281,3264,85,NULL),(13282,3274,85,NULL),(13283,3295,85,NULL),(13284,3248,85,NULL),(13285,3254,85,NULL),(13286,3232,85,NULL),(13287,3222,85,NULL),(13288,3217,85,NULL),(13289,3296,85,NULL),(13290,3191,85,NULL),(13291,3194,85,NULL),(13292,3223,85,NULL),(13293,3174,85,NULL),(13294,3160,85,NULL),(13295,3151,85,NULL),(13296,3120,85,NULL),(13297,3121,85,NULL),(13298,3105,85,NULL),(13299,3099,85,NULL),(13300,3079,85,NULL),(13301,3090,85,NULL),(13302,3066,85,NULL),(13303,3043,85,NULL),(13304,3028,85,NULL),(13305,3042,85,NULL),(13306,3011,85,NULL),(13307,3016,85,NULL),(13308,3014,85,NULL),(13309,2965,85,NULL),(13310,2958,85,NULL),(13311,2962,85,NULL),(13312,2938,85,NULL),(13313,2914,85,NULL),(13314,2848,85,NULL),(13315,2843,85,NULL),(13316,2807,85,NULL),(13317,2716,85,NULL),(13318,2769,85,NULL),(13319,2699,85,NULL),(13320,2696,85,NULL),(13321,2684,85,NULL),(13322,2685,85,NULL),(13323,2683,85,NULL),(13324,2656,85,NULL),(13325,2657,85,NULL),(13326,2658,85,NULL),(13327,2706,85,NULL),(13328,2707,85,NULL),(13329,2678,85,NULL),(13330,2574,85,NULL),(13331,2570,85,NULL),(13332,2559,85,NULL),(13333,2662,85,NULL),(13334,2641,85,NULL),(13335,2578,85,NULL),(13336,2579,85,NULL),(13337,2583,85,NULL),(13338,2537,85,NULL),(13339,2535,85,NULL),(13340,2530,85,NULL),(13341,2529,85,NULL),(13342,2523,85,NULL),(13343,2501,85,NULL),(13344,2491,85,NULL),(13345,2490,85,NULL),(13346,2485,85,NULL),(13347,2463,85,NULL),(13348,2461,85,NULL),(13349,2458,85,NULL),(13350,2425,85,NULL),(13351,2435,85,NULL),(13352,2429,85,NULL),(13353,2419,85,NULL),(13354,2416,85,NULL),(13355,2406,85,NULL),(13356,2395,85,NULL),(13357,2342,85,NULL),(13358,2381,85,NULL),(13359,2379,85,NULL),(13360,2363,85,NULL),(13361,2360,85,NULL),(13362,2326,85,NULL),(13363,2243,85,NULL),(13364,2270,85,NULL),(13365,2221,85,NULL),(13366,2220,85,NULL),(13367,2206,85,NULL),(13368,2185,85,NULL),(13369,2176,85,NULL),(13370,2149,85,NULL),(13371,2148,85,NULL),(13372,2134,85,NULL),(13373,2125,85,NULL),(13374,2106,85,NULL),(13375,2116,85,NULL),(13376,2044,85,NULL),(13377,2053,85,NULL),(13378,2028,85,NULL),(13379,2038,85,NULL),(13380,2011,85,NULL),(13381,2022,85,NULL),(13382,2001,85,NULL),(13383,2000,85,NULL),(13384,1980,85,NULL),(13385,1991,85,NULL),(13386,1963,85,NULL),(13387,1945,85,NULL),(13388,1930,85,NULL),(13389,1942,85,NULL),(13390,1922,85,NULL),(13391,1926,85,NULL),(13392,1905,85,NULL),(13393,1903,85,NULL),(13394,1899,85,NULL),(13395,1910,85,NULL),(13396,1894,85,NULL),(13397,1863,85,NULL),(13398,1876,85,NULL),(13399,1822,85,NULL),(13400,1800,85,NULL),(13401,1813,85,NULL),(13402,1791,85,NULL),(13403,1790,85,NULL),(13404,1769,85,NULL),(13405,1768,85,NULL),(13406,1781,85,NULL),(13407,1752,85,NULL),(13408,1765,85,NULL),(13409,1748,85,NULL),(13410,1732,85,NULL),(13411,1672,85,NULL),(13412,1684,85,NULL),(13413,1647,85,NULL),(13414,1671,85,NULL),(13415,1614,85,NULL),(13416,1593,85,NULL),(13417,1590,85,NULL),(13418,1588,85,NULL),(13419,1568,85,NULL),(13420,1572,85,NULL),(13421,1551,85,NULL),(13422,1545,85,NULL),(13423,1534,85,NULL),(13424,1528,85,NULL),(13425,1512,85,NULL),(13426,1523,85,NULL),(13427,1502,85,NULL),(13428,1497,85,NULL),(13429,1508,85,NULL),(13430,1480,85,NULL),(13431,1491,85,NULL),(13432,1462,85,NULL),(13433,1460,85,NULL),(13434,1423,85,NULL),(13435,1422,85,NULL),(13436,1408,85,NULL),(13437,1413,85,NULL),(13438,1394,85,NULL),(13439,1400,85,NULL),(13440,1381,85,NULL),(13441,1380,85,NULL),(13442,1367,85,NULL),(13443,1351,85,NULL),(13444,1371,85,NULL),(13445,1358,85,NULL),(13446,1343,85,NULL),(13447,1310,85,NULL),(13448,1295,85,NULL),(13449,1281,85,NULL),(13450,1277,85,NULL),(13451,1267,85,NULL),(13452,1254,85,NULL),(13453,1248,85,NULL),(13454,1726,85,NULL),(13455,2309,85,NULL),(13456,1233,85,NULL),(13457,1514,85,NULL),(13458,1405,85,NULL),(13459,1331,85,NULL),(13460,1140,85,NULL),(13461,1289,85,NULL),(13462,1109,85,NULL),(13463,1106,85,NULL),(13464,1094,85,NULL),(13465,1091,85,NULL),(13466,1051,85,NULL),(13467,1046,85,NULL),(13468,1037,85,NULL),(13469,1021,85,NULL),(13470,1020,85,NULL),(13471,1011,85,NULL),(13472,1004,85,NULL),(13473,994,85,NULL),(13474,992,85,NULL),(13475,977,85,NULL),(13476,509,85,NULL),(13477,962,85,NULL),(13478,959,85,NULL),(13479,951,85,NULL),(13480,947,85,NULL),(13481,942,85,NULL),(13482,931,85,NULL),(13483,930,85,NULL),(13484,921,85,NULL),(13485,916,85,NULL),(13486,904,85,NULL),(13487,896,85,NULL),(13488,885,85,NULL),(13489,884,85,NULL),(13490,876,85,NULL),(13491,875,85,NULL),(13492,874,85,NULL),(13493,867,85,NULL),(13494,848,85,NULL),(13495,841,85,NULL),(13496,840,85,NULL),(13497,641,85,NULL),(13498,804,85,NULL),(13499,802,85,NULL),(13500,798,85,NULL),(13501,797,85,NULL),(13502,796,85,NULL),(13503,785,85,NULL),(13504,784,85,NULL),(13505,704,85,NULL),(13506,703,85,NULL),(13507,771,85,NULL),(13508,766,85,NULL),(13509,590,85,NULL),(13510,743,85,NULL),(13511,709,85,NULL),(13512,733,85,NULL),(13513,731,85,NULL),(13514,729,85,NULL),(13515,728,85,NULL),(13516,725,85,NULL),(13517,724,85,NULL),(13518,713,85,NULL),(13519,695,85,NULL),(13520,684,85,NULL),(13521,682,85,NULL),(13522,672,85,NULL),(13523,670,85,NULL),(13524,664,85,NULL),(13525,657,85,NULL),(13526,646,85,NULL),(13527,643,85,NULL),(13528,632,85,NULL),(13529,628,85,NULL),(13530,592,85,NULL),(13531,567,85,NULL),(13532,564,85,NULL),(13533,560,85,NULL),(13534,547,85,NULL),(13535,542,85,NULL),(13536,539,85,NULL),(13537,520,85,NULL),(13538,500,85,NULL),(13539,485,85,NULL),(13540,476,85,NULL),(13541,459,85,NULL),(13542,455,85,NULL),(13543,451,85,NULL),(13544,442,85,NULL),(13545,441,85,NULL),(13546,440,85,NULL),(13547,438,85,NULL),(13548,432,85,NULL),(13549,424,85,NULL),(13550,423,85,NULL),(13551,416,85,NULL),(13552,412,85,NULL),(13553,410,85,NULL),(13554,392,85,NULL),(13555,389,85,NULL),(13556,386,85,NULL),(13557,383,85,NULL),(13558,374,85,NULL),(13559,371,85,NULL),(13560,367,85,NULL),(13561,350,85,NULL),(13562,349,85,NULL),(13563,344,85,NULL),(13564,342,85,NULL),(13565,338,85,NULL),(13566,326,85,NULL),(13567,322,85,NULL),(13568,319,85,NULL),(13569,318,85,NULL),(13570,303,85,NULL),(13571,300,85,NULL),(13572,290,85,NULL),(13573,289,85,NULL),(13574,283,85,NULL),(13575,278,85,NULL),(13576,274,85,NULL),(13577,273,85,NULL),(13578,268,85,NULL),(13579,242,85,NULL),(13580,241,85,NULL),(13581,238,85,NULL),(13582,236,85,NULL),(13583,232,85,NULL),(13584,231,85,NULL),(13585,229,85,NULL),(13586,228,85,NULL),(13587,225,85,NULL),(13588,219,85,NULL),(13589,217,85,NULL),(13590,216,85,NULL),(13591,214,85,NULL),(13592,213,85,NULL),(13593,210,85,NULL),(13594,209,85,NULL),(13595,207,85,NULL),(13596,205,85,NULL),(13597,204,85,NULL),(13598,202,85,NULL),(13599,200,85,NULL),(13600,198,85,NULL),(13601,191,85,NULL),(13602,190,85,NULL),(13603,189,85,NULL),(13604,187,85,NULL),(13605,179,85,NULL),(13606,169,85,NULL),(13607,167,85,NULL),(13608,153,85,NULL),(13609,152,85,NULL),(13610,151,85,NULL),(13611,145,85,NULL),(13612,144,85,NULL),(13613,137,85,NULL),(13614,136,85,NULL),(13615,131,85,NULL),(13616,130,85,NULL),(13617,122,85,NULL),(13618,121,85,NULL),(13619,120,85,NULL),(13620,119,85,NULL),(13621,118,85,NULL),(13622,110,85,NULL),(13623,108,85,NULL),(13624,104,85,NULL),(13625,102,85,NULL),(13626,94,85,NULL),(13627,90,85,NULL),(13628,88,85,NULL),(13629,81,85,NULL),(13630,80,85,NULL),(13631,79,85,NULL),(13632,78,85,NULL),(13633,77,85,NULL),(13634,75,85,NULL),(13635,74,85,NULL),(13636,73,85,NULL),(13637,70,85,NULL),(13638,69,85,NULL),(13639,67,85,NULL),(13640,66,85,NULL),(13641,64,85,NULL),(13642,63,85,NULL),(13643,62,85,NULL),(13644,59,85,NULL),(13645,58,85,NULL),(13646,56,85,NULL),(13647,55,85,NULL),(13648,54,85,NULL),(13649,53,85,NULL),(13650,52,85,NULL),(13651,51,85,NULL),(13652,50,85,NULL),(13653,49,85,NULL),(13654,48,85,NULL),(13655,47,85,NULL),(13656,46,85,NULL),(13657,45,85,NULL),(13658,40,85,NULL),(13659,39,85,NULL),(13660,37,85,NULL),(13661,36,85,NULL),(13662,35,85,NULL),(13663,33,85,NULL),(13664,31,85,NULL),(13665,28,85,NULL),(13666,27,85,NULL),(13667,26,85,NULL),(13668,22,85,NULL),(13669,20,85,NULL),(13670,18,85,NULL),(13671,17,85,NULL),(13672,15,85,NULL),(13673,14,85,NULL),(13674,13,85,NULL),(13675,12,85,NULL),(13676,11,85,NULL),(13677,9,85,NULL),(13678,7,85,NULL),(13679,5,85,NULL),(13680,4,85,NULL),(13681,3,85,NULL),(13682,1,85,NULL),(13683,12037,85,NULL),(13684,14077,85,NULL),(13685,6726,85,NULL),(13686,6727,85,NULL),(13687,3435,85,NULL),(13688,3489,85,NULL),(13689,5472,85,NULL),(13690,4103,85,NULL),(13691,3459,85,NULL),(13692,3483,85,NULL),(13693,3830,85,NULL),(13694,3993,85,NULL),(13695,5009,85,NULL),(13696,4612,85,NULL),(13697,5122,85,NULL),(13698,3695,85,NULL),(13699,4032,85,NULL),(13700,4767,85,NULL),(13701,4560,85,NULL),(13702,3833,85,NULL),(13703,4074,85,NULL),(13704,4423,85,NULL),(13705,4217,85,NULL),(13706,5043,85,NULL),(13707,5126,85,NULL),(13708,4383,85,NULL),(13709,3436,85,NULL),(13710,3953,85,NULL),(13711,3466,85,NULL),(13712,3531,85,NULL),(13713,3556,85,NULL),(13714,3929,85,NULL),(13715,3585,85,NULL),(13716,3942,85,NULL),(13717,3962,85,NULL),(13718,3471,85,NULL),(13719,3823,85,NULL),(13720,3486,85,NULL),(13721,3476,85,NULL),(13722,3642,85,NULL),(13723,3479,85,NULL),(13724,3418,85,NULL),(13725,3712,85,NULL),(13726,3462,85,NULL),(13727,3416,85,NULL),(13728,3511,85,NULL),(13729,4095,85,NULL),(13730,3492,85,NULL),(13731,3837,85,NULL),(13732,3926,85,NULL),(13733,3474,85,NULL),(13734,3420,85,NULL),(13735,3481,85,NULL),(13736,3440,85,NULL),(13737,3759,85,NULL),(13738,3423,85,NULL),(13739,3773,85,NULL),(13740,3426,85,NULL),(13741,4003,85,NULL),(13742,4646,85,NULL),(13743,3997,85,NULL),(13744,4089,85,NULL),(13745,3668,85,NULL),(13746,3912,85,NULL),(13747,4224,85,NULL),(13748,3499,85,NULL),(13749,3700,85,NULL),(13750,3877,85,NULL),(13751,3999,85,NULL),(13752,4484,85,NULL),(13753,3753,85,NULL),(13754,3892,85,NULL),(13755,3847,85,NULL),(13756,3802,85,NULL),(13757,4012,85,NULL),(13758,4029,85,NULL),(13759,4242,85,NULL),(13760,4832,85,NULL),(13761,16678,85,NULL),(13762,3569,85,NULL),(13763,3469,85,NULL),(13764,3433,85,NULL),(13765,3493,85,NULL),(13766,3444,85,NULL),(13767,3559,85,NULL),(13768,3914,85,NULL),(13769,3452,85,NULL),(13770,3422,85,NULL),(13771,3652,85,NULL),(13772,3801,85,NULL),(13773,3464,85,NULL),(13774,3468,85,NULL),(13775,3427,85,NULL),(13776,3551,85,NULL),(13777,3417,85,NULL),(13778,3508,85,NULL),(13779,4663,85,NULL),(13780,3528,85,NULL),(13781,4342,85,NULL),(13782,3573,85,NULL),(13783,3898,85,NULL),(13784,3419,85,NULL),(13785,3473,85,NULL),(13786,3510,85,NULL),(13787,4397,85,NULL),(13788,4920,85,NULL),(13789,5474,85,NULL),(13790,3621,85,NULL),(13791,3472,85,NULL),(13792,5256,85,NULL),(13793,5768,85,NULL),(13794,4443,85,NULL),(13795,4210,85,NULL),(13796,4366,85,NULL),(13797,4161,85,NULL),(13798,4371,85,NULL),(13799,4459,85,NULL),(13800,4549,85,NULL),(13801,4587,85,NULL),(13802,3638,85,NULL),(13803,3616,85,NULL),(13804,4582,85,NULL),(13805,3763,85,NULL),(13806,3880,85,NULL),(13807,3706,85,NULL),(13808,3843,85,NULL),(13809,4620,85,NULL),(13810,4489,85,NULL),(13811,4588,85,NULL),(13812,16560,84,NULL),(13813,16570,84,NULL),(13814,16550,84,NULL),(13815,3394,84,NULL),(13816,3396,84,NULL),(13817,3356,84,NULL),(13818,3375,84,NULL),(13819,3350,84,NULL),(13820,3349,84,NULL),(13821,3300,84,NULL),(13822,3304,84,NULL),(13823,3289,84,NULL),(13824,3309,84,NULL),(13825,3306,84,NULL),(13826,3295,84,NULL),(13827,3217,84,NULL),(13828,3208,84,NULL),(13829,3191,84,NULL),(13830,3210,84,NULL),(13831,3174,84,NULL),(13832,3160,84,NULL),(13833,3169,84,NULL),(13834,3151,84,NULL),(13835,3159,84,NULL),(13836,3120,84,NULL),(13837,3121,84,NULL),(13838,3110,84,NULL),(13839,3105,84,NULL),(13840,3108,84,NULL),(13841,3066,84,NULL),(13842,3065,84,NULL),(13843,2999,84,NULL),(13844,2965,84,NULL),(13845,2956,84,NULL),(13846,2938,84,NULL),(13847,2909,84,NULL),(13848,2873,84,NULL),(13849,2874,84,NULL),(13850,2818,84,NULL),(13851,2780,84,NULL),(13852,2810,84,NULL),(13853,2798,84,NULL),(13854,2816,84,NULL),(13855,2698,84,NULL),(13856,2696,84,NULL),(13857,2685,84,NULL),(13858,2670,84,NULL),(13859,2656,84,NULL),(13860,2652,84,NULL),(13861,2600,84,NULL),(13862,2570,84,NULL),(13863,2560,84,NULL),(13864,2551,84,NULL),(13865,2594,84,NULL),(13866,2579,84,NULL),(13867,2553,84,NULL),(13868,2530,84,NULL),(13869,2529,84,NULL),(13870,2523,84,NULL),(13871,2506,84,NULL),(13872,2503,84,NULL),(13873,2491,84,NULL),(13874,2481,84,NULL),(13875,2475,84,NULL),(13876,2467,84,NULL),(13877,2461,84,NULL),(13878,2460,84,NULL),(13879,2413,84,NULL),(13880,2406,84,NULL),(13881,2401,84,NULL),(13882,2342,84,NULL),(13883,2390,84,NULL),(13884,2379,84,NULL),(13885,2375,84,NULL),(13886,2364,84,NULL),(13887,2367,84,NULL),(13888,2357,84,NULL),(13889,2349,84,NULL),(13890,2235,84,NULL),(13891,2255,84,NULL),(13892,2206,84,NULL),(13893,2180,84,NULL),(13894,2185,84,NULL),(13895,2164,84,NULL),(13896,2149,84,NULL),(13897,2161,84,NULL),(13898,2140,84,NULL),(13899,2124,84,NULL),(13900,2109,84,NULL),(13901,2108,84,NULL),(13902,2115,84,NULL),(13903,2095,84,NULL),(13904,2053,84,NULL),(13905,2033,84,NULL),(13906,2000,84,NULL),(13907,1980,84,NULL),(13908,1963,84,NULL),(13909,1961,84,NULL),(13910,1976,84,NULL),(13911,1952,84,NULL),(13912,1929,84,NULL),(13913,1942,84,NULL),(13914,1910,84,NULL),(13915,1863,84,NULL),(13916,1876,84,NULL),(13917,1832,84,NULL),(13918,1800,84,NULL),(13919,1813,84,NULL),(13920,1790,84,NULL),(13921,1780,84,NULL),(13922,1752,84,NULL),(13923,1749,84,NULL),(13924,1718,84,NULL),(13925,1672,84,NULL),(13926,1684,84,NULL),(13927,1662,84,NULL),(13928,1603,84,NULL),(13929,1590,84,NULL),(13930,1528,84,NULL),(13931,1539,84,NULL),(13932,1512,84,NULL),(13933,1524,84,NULL),(13934,1497,84,NULL),(13935,1508,84,NULL),(13936,1486,84,NULL),(13937,1480,84,NULL),(13938,1470,84,NULL),(13939,1464,84,NULL),(13940,1456,84,NULL),(13941,1460,84,NULL),(13942,1431,84,NULL),(13943,1415,84,NULL),(13944,1381,84,NULL),(13945,1352,84,NULL),(13946,1351,84,NULL),(13947,1358,84,NULL),(13948,1343,84,NULL),(13949,2269,84,NULL),(13950,1281,84,NULL),(13951,1261,84,NULL),(13952,1726,84,NULL),(13953,2309,84,NULL),(13954,2226,84,NULL),(13955,1331,84,NULL),(13956,1299,84,NULL),(13957,1123,84,NULL),(13958,1092,84,NULL),(13959,1079,84,NULL),(13960,1051,84,NULL),(13961,1047,84,NULL),(13962,1028,84,NULL),(13963,1018,84,NULL),(13964,989,84,NULL),(13965,977,84,NULL),(13966,974,84,NULL),(13967,509,84,NULL),(13968,962,84,NULL),(13969,961,84,NULL),(13970,942,84,NULL),(13971,938,84,NULL),(13972,922,84,NULL),(13973,921,84,NULL),(13974,917,84,NULL),(13975,905,84,NULL),(13976,889,84,NULL),(13977,884,84,NULL),(13978,881,84,NULL),(13979,876,84,NULL),(13980,873,84,NULL),(13981,867,84,NULL),(13982,860,84,NULL),(13983,856,84,NULL),(13984,832,84,NULL),(13985,824,84,NULL),(13986,819,84,NULL),(13987,804,84,NULL),(13988,706,84,NULL),(13989,705,84,NULL),(13990,796,84,NULL),(13991,792,84,NULL),(13992,786,84,NULL),(13993,779,84,NULL),(13994,704,84,NULL),(13995,700,84,NULL),(13996,771,84,NULL),(13997,763,84,NULL),(13998,762,84,NULL),(13999,739,84,NULL),(14000,728,84,NULL),(14001,677,84,NULL),(14002,645,84,NULL),(14003,643,84,NULL),(14004,633,84,NULL),(14005,632,84,NULL),(14006,605,84,NULL),(14007,567,84,NULL),(14008,557,84,NULL),(14009,541,84,NULL),(14010,532,84,NULL),(14011,1721,84,NULL),(14012,523,84,NULL),(14013,520,84,NULL),(14014,507,84,NULL),(14015,506,84,NULL),(14016,504,84,NULL),(14017,476,84,NULL),(14018,462,84,NULL),(14019,455,84,NULL),(14020,453,84,NULL),(14021,451,84,NULL),(14022,448,84,NULL),(14023,445,84,NULL),(14024,442,84,NULL),(14025,441,84,NULL),(14026,416,84,NULL),(14027,415,84,NULL),(14028,414,84,NULL),(14029,412,84,NULL),(14030,405,84,NULL),(14031,392,84,NULL),(14032,390,84,NULL),(14033,389,84,NULL),(14034,383,84,NULL),(14035,378,84,NULL),(14036,371,84,NULL),(14037,368,84,NULL),(14038,367,84,NULL),(14039,350,84,NULL),(14040,349,84,NULL),(14041,345,84,NULL),(14042,344,84,NULL),(14043,343,84,NULL),(14044,342,84,NULL),(14045,338,84,NULL),(14046,328,84,NULL),(14047,326,84,NULL),(14048,303,84,NULL),(14049,292,84,NULL),(14050,287,84,NULL),(14051,283,84,NULL),(14052,268,84,NULL),(14053,263,84,NULL),(14054,258,84,NULL),(14055,242,84,NULL),(14056,241,84,NULL),(14057,238,84,NULL),(14058,237,84,NULL),(14059,234,84,NULL),(14060,231,84,NULL),(14061,219,84,NULL),(14062,217,84,NULL),(14063,215,84,NULL),(14064,214,84,NULL),(14065,209,84,NULL),(14066,206,84,NULL),(14067,203,84,NULL),(14068,202,84,NULL),(14069,191,84,NULL),(14070,190,84,NULL),(14071,189,84,NULL),(14072,179,84,NULL),(14073,169,84,NULL),(14074,167,84,NULL),(14075,165,84,NULL),(14076,155,84,NULL),(14077,153,84,NULL),(14078,151,84,NULL),(14079,145,84,NULL),(14080,144,84,NULL),(14081,137,84,NULL),(14082,136,84,NULL),(14083,125,84,NULL),(14084,121,84,NULL),(14085,104,84,NULL),(14086,101,84,NULL),(14087,100,84,NULL),(14088,94,84,NULL),(14089,88,84,NULL),(14090,86,84,NULL),(14091,83,84,NULL),(14092,82,84,NULL),(14093,78,84,NULL),(14094,75,84,NULL),(14095,74,84,NULL),(14096,70,84,NULL),(14097,69,84,NULL),(14098,67,84,NULL),(14099,66,84,NULL),(14100,62,84,NULL),(14101,61,84,NULL),(14102,59,84,NULL),(14103,58,84,NULL),(14104,54,84,NULL),(14105,50,84,NULL),(14106,43,84,NULL),(14107,42,84,NULL),(14108,35,84,NULL),(14109,33,84,NULL),(14110,29,84,NULL),(14111,28,84,NULL),(14112,24,84,NULL),(14113,20,84,NULL),(14114,19,84,NULL),(14115,18,84,NULL),(14116,16,84,NULL),(14117,15,84,NULL),(14118,11,84,NULL),(14119,9,84,NULL),(14120,7,84,NULL),(14121,3,84,NULL),(14122,2,84,NULL),(14123,1,84,NULL),(14124,3442,53,NULL),(14125,3564,53,NULL),(14126,3635,53,NULL),(14127,3451,53,NULL),(14128,3436,53,NULL),(14129,3531,53,NULL),(14130,3556,53,NULL),(14131,3929,53,NULL),(14132,3585,53,NULL),(14133,3660,53,NULL),(14134,3471,53,NULL),(14135,3731,53,NULL),(14136,3476,53,NULL),(14137,3470,53,NULL),(14138,4112,53,NULL),(14139,3614,53,NULL),(14140,3642,53,NULL),(14141,3458,53,NULL),(14142,3445,53,NULL),(14143,3418,53,NULL),(14144,3424,53,NULL),(14145,3462,53,NULL),(14146,3416,53,NULL),(14147,3487,53,NULL),(14148,3511,53,NULL),(14149,3492,53,NULL),(14150,3723,53,NULL),(14151,3926,53,NULL),(14152,3474,53,NULL),(14153,3449,53,NULL),(14154,3467,53,NULL),(14155,3420,53,NULL),(14156,3578,53,NULL),(14157,3481,53,NULL),(14158,3506,53,NULL),(14159,3440,53,NULL),(14160,3543,53,NULL),(14161,3425,53,NULL),(14162,3647,53,NULL),(14163,3759,53,NULL),(14164,3852,53,NULL),(14165,3423,53,NULL),(14166,3869,53,NULL),(14167,3558,53,NULL),(14168,3534,53,NULL),(14169,3448,53,NULL),(14170,3478,53,NULL),(14171,3644,53,NULL),(14172,4201,53,NULL),(14173,3627,53,NULL),(14174,3530,53,NULL),(14175,3488,53,NULL),(14176,3859,53,NULL),(14177,3613,53,NULL),(14178,3426,53,NULL),(14179,3518,53,NULL),(14180,3514,53,NULL),(14181,3517,53,NULL),(14182,3441,53,NULL),(14183,4646,53,NULL),(14184,3540,53,NULL),(14185,4089,53,NULL),(14186,3668,53,NULL),(14187,3598,53,NULL),(14188,3687,53,NULL),(14189,3571,53,NULL),(14190,3871,53,NULL),(14191,3988,53,NULL),(14192,4413,53,NULL),(14193,4408,53,NULL),(14194,4332,53,NULL),(14195,3499,53,NULL),(14196,4340,53,NULL),(14197,4981,53,NULL),(14198,5157,53,NULL),(14199,3753,53,NULL),(14200,4940,53,NULL),(14201,3802,53,NULL),(14202,4012,53,NULL),(14203,4521,53,NULL),(14204,4513,53,NULL),(14205,4166,53,NULL),(14206,3484,53,NULL),(14207,3641,53,NULL),(14208,3430,53,NULL),(14209,3569,53,NULL),(14210,3574,53,NULL),(14211,3500,53,NULL),(14212,3480,53,NULL),(14213,3454,53,NULL),(14214,3469,53,NULL),(14215,3433,53,NULL),(14216,3705,53,NULL),(14217,3521,53,NULL),(14218,3495,53,NULL),(14219,3562,53,NULL),(14220,3493,53,NULL),(14221,3444,53,NULL),(14222,3516,53,NULL),(14223,3505,53,NULL),(14224,3431,53,NULL),(14225,3525,53,NULL),(14226,3421,53,NULL),(14227,3566,53,NULL),(14228,3812,53,NULL),(14229,3645,53,NULL),(14230,3914,53,NULL),(14231,3785,53,NULL),(14232,4318,53,NULL),(14233,3452,53,NULL),(14234,3529,53,NULL),(14235,3477,53,NULL),(14236,3429,53,NULL),(14237,3422,53,NULL),(14238,3456,53,NULL),(14239,3801,53,NULL),(14240,3464,53,NULL),(14241,3468,53,NULL),(14242,3523,53,NULL),(14243,3427,53,NULL),(14244,3519,53,NULL),(14245,3450,53,NULL),(14246,3463,53,NULL),(14247,3417,53,NULL),(14248,3599,53,NULL),(14249,4189,53,NULL),(14250,3453,53,NULL),(14251,3680,53,NULL),(14252,3626,53,NULL),(14253,3522,53,NULL),(14254,3806,53,NULL),(14255,3667,53,NULL),(14256,3684,53,NULL),(14257,4322,53,NULL),(14258,5081,53,NULL),(14259,3419,53,NULL),(14260,3473,53,NULL),(14261,3510,53,NULL),(14262,3497,53,NULL),(14263,4920,53,NULL),(14264,3894,53,NULL),(14265,3439,53,NULL),(14266,3579,53,NULL),(14267,3465,53,NULL),(14268,5474,53,NULL),(14269,3621,53,NULL),(14270,3611,53,NULL),(14271,3472,53,NULL),(14272,3842,53,NULL),(14273,5256,53,NULL),(14274,6027,53,NULL),(14275,5768,53,NULL),(14276,5995,53,NULL),(14277,3964,53,NULL),(14278,4161,53,NULL),(14279,4113,53,NULL),(14280,4212,53,NULL),(14281,5927,53,NULL),(14282,4403,53,NULL),(14283,4532,53,NULL),(14284,4639,53,NULL),(14285,4415,53,NULL),(14286,3443,53,NULL),(14287,3725,53,NULL),(14288,3951,53,NULL),(14289,3650,53,NULL),(14290,4308,53,NULL),(14291,5353,53,NULL),(14292,3554,53,NULL),(14293,3594,53,NULL),(14294,3435,53,NULL),(14295,3498,53,NULL),(14296,3455,53,NULL),(14297,3489,53,NULL),(14298,3761,53,NULL),(14299,3446,53,NULL),(14300,3739,53,NULL),(14301,5472,53,NULL),(14302,3459,53,NULL),(14303,3504,53,NULL),(14304,3457,53,NULL),(14305,3483,53,NULL),(14306,3830,53,NULL),(14307,4028,53,NULL),(14308,3762,53,NULL),(14309,4732,53,NULL),(14310,5009,53,NULL),(14311,5122,53,NULL),(14312,3695,53,NULL),(14313,4032,53,NULL),(14314,3833,53,NULL),(14315,4074,53,NULL),(14316,4941,53,NULL),(14317,4170,53,NULL),(14318,4423,53,NULL),(14319,4217,53,NULL),(14320,5043,53,NULL),(14321,3948,53,NULL),(14322,4383,53,NULL),(14323,16640,83,NULL),(14324,16545,83,NULL),(14325,16570,83,NULL),(14326,3340,83,NULL),(14327,3345,83,NULL),(14328,3360,83,NULL),(14329,3300,83,NULL),(14330,3289,83,NULL),(14331,3280,83,NULL),(14332,3190,83,NULL),(14333,3174,83,NULL),(14334,3160,83,NULL),(14335,3151,83,NULL),(14336,3110,83,NULL),(14337,3105,83,NULL),(14338,3066,83,NULL),(14339,3011,83,NULL),(14340,2914,83,NULL),(14341,2894,83,NULL),(14342,2900,83,NULL),(14343,2769,83,NULL),(14344,2698,83,NULL),(14345,2706,83,NULL),(14346,2652,83,NULL),(14347,2553,83,NULL),(14348,2520,83,NULL),(14349,2490,83,NULL),(14350,2469,83,NULL),(14351,2441,83,NULL),(14352,2427,83,NULL),(14353,2413,83,NULL),(14354,2342,83,NULL),(14355,2375,83,NULL),(14356,2364,83,NULL),(14357,2349,83,NULL),(14358,2235,83,NULL),(14359,2144,83,NULL),(14360,2124,83,NULL),(14361,2078,83,NULL),(14362,2037,83,NULL),(14363,1922,83,NULL),(14364,1903,83,NULL),(14365,1910,83,NULL),(14366,1894,83,NULL),(14367,1800,83,NULL),(14368,1790,83,NULL),(14369,1752,83,NULL),(14370,1710,83,NULL),(14371,1718,83,NULL),(14372,1688,83,NULL),(14373,1512,83,NULL),(14374,1486,83,NULL),(14375,1352,83,NULL),(14376,1323,83,NULL),(14377,1343,83,NULL),(14378,1342,83,NULL),(14379,1281,83,NULL),(14380,1726,83,NULL),(14381,1221,83,NULL),(14382,1217,83,NULL),(14383,1137,83,NULL),(14384,1079,83,NULL),(14385,1025,83,NULL),(14386,1005,83,NULL),(14387,977,83,NULL),(14388,976,83,NULL),(14389,509,83,NULL),(14390,942,83,NULL),(14391,867,83,NULL),(14392,860,83,NULL),(14393,832,83,NULL),(14394,796,83,NULL),(14395,704,83,NULL),(14396,700,83,NULL),(14397,713,83,NULL),(14398,643,83,NULL),(14399,605,83,NULL),(14400,455,83,NULL),(14401,448,83,NULL),(14402,441,83,NULL),(14403,438,83,NULL),(14404,415,83,NULL),(14405,412,83,NULL),(14406,410,83,NULL),(14407,405,83,NULL),(14408,392,83,NULL),(14409,389,83,NULL),(14410,371,83,NULL),(14411,367,83,NULL),(14412,342,83,NULL),(14413,338,83,NULL),(14414,326,83,NULL),(14415,287,83,NULL),(14416,268,83,NULL),(14417,263,83,NULL),(14418,231,83,NULL),(14419,226,83,NULL),(14420,217,83,NULL),(14421,206,83,NULL),(14422,203,83,NULL),(14423,202,83,NULL),(14424,199,83,NULL),(14425,191,83,NULL),(14426,189,83,NULL),(14427,160,83,NULL),(14428,153,83,NULL),(14429,145,83,NULL),(14430,144,83,NULL),(14431,137,83,NULL),(14432,136,83,NULL),(14433,122,83,NULL),(14434,121,83,NULL),(14435,119,83,NULL),(14436,118,83,NULL),(14437,104,83,NULL),(14438,94,83,NULL),(14439,83,83,NULL),(14440,70,83,NULL),(14441,69,83,NULL),(14442,67,83,NULL),(14443,66,83,NULL),(14444,55,83,NULL),(14445,54,83,NULL),(14446,50,83,NULL),(14447,35,83,NULL),(14448,33,83,NULL),(14449,29,83,NULL),(14450,28,83,NULL),(14451,27,83,NULL),(14452,26,83,NULL),(14453,25,83,NULL),(14454,24,83,NULL),(14455,21,83,NULL),(14456,11,83,NULL),(14457,9,83,NULL),(14458,3,83,NULL),(14459,1,83,NULL),(14460,2529,86,NULL),(14461,1480,86,NULL),(14462,1343,86,NULL),(14463,704,86,NULL),(14464,541,86,NULL),(14465,344,86,NULL),(14466,283,86,NULL),(14467,219,86,NULL),(14468,217,86,NULL),(14469,151,86,NULL),(14470,27,86,NULL),(14471,26,86,NULL),(14472,1,86,NULL),(14473,3484,84,NULL),(14474,3641,84,NULL),(14475,3569,84,NULL),(14476,3500,84,NULL),(14477,3516,84,NULL),(14478,3885,84,NULL),(14479,3645,84,NULL),(14480,3417,84,NULL),(14481,3561,84,NULL),(14482,3528,84,NULL),(14483,3419,84,NULL),(14484,3510,84,NULL),(14485,4156,84,NULL),(14486,4920,84,NULL),(14487,3881,84,NULL),(14488,3621,84,NULL),(14489,3472,84,NULL),(14490,4140,84,NULL),(14491,5256,84,NULL),(14492,3875,84,NULL),(14493,3834,84,NULL),(14494,3498,84,NULL),(14495,3455,84,NULL),(14496,3761,84,NULL),(14497,3446,84,NULL),(14498,5472,84,NULL),(14499,3830,84,NULL),(14500,4028,84,NULL),(14501,3762,84,NULL),(14502,3695,84,NULL),(14503,4032,84,NULL),(14504,3833,84,NULL),(14505,4170,84,NULL),(14506,4217,84,NULL),(14507,4088,84,NULL),(14508,3672,84,NULL),(14509,5043,84,NULL),(14510,3635,84,NULL),(14511,3613,84,NULL),(14512,4646,84,NULL),(14513,4089,84,NULL),(14514,3484,83,NULL),(14515,3931,83,NULL),(14516,3596,83,NULL),(14517,3569,83,NULL),(14518,3500,83,NULL),(14519,3469,83,NULL),(14520,3433,83,NULL),(14521,3679,83,NULL),(14522,3505,83,NULL),(14523,3431,83,NULL),(14524,4064,83,NULL),(14525,3421,83,NULL),(14526,4078,83,NULL),(14527,3914,83,NULL),(14528,3422,83,NULL),(14529,3456,83,NULL),(14530,3468,83,NULL),(14531,3450,83,NULL),(14532,3417,83,NULL),(14533,3599,83,NULL),(14534,4196,83,NULL),(14535,4317,83,NULL),(14536,3419,83,NULL),(14537,4059,83,NULL),(14538,4850,83,NULL),(14539,3621,83,NULL),(14540,3472,83,NULL),(14541,3964,83,NULL),(14542,3875,83,NULL),(14543,4803,83,NULL),(14544,3435,83,NULL),(14545,3498,83,NULL),(14546,4267,83,NULL),(14547,3524,83,NULL),(14548,3455,83,NULL),(14549,3489,83,NULL),(14550,3446,83,NULL),(14551,3739,83,NULL),(14552,4299,83,NULL),(14553,4103,83,NULL),(14554,3459,83,NULL),(14555,3504,83,NULL),(14556,3457,83,NULL),(14557,3483,83,NULL),(14558,4028,83,NULL),(14559,3762,83,NULL),(14560,3695,83,NULL),(14561,4032,83,NULL),(14562,3833,83,NULL),(14563,4170,83,NULL),(14564,3479,83,NULL),(14565,3445,83,NULL),(14566,3425,83,NULL),(14567,4484,83,NULL),(14568,4166,83,NULL),(14569,4598,83,NULL),(14570,16616,88,NULL),(14571,16545,88,NULL),(14572,16574,88,NULL),(14573,16645,88,NULL),(14574,16550,88,NULL),(14575,3392,88,NULL),(14576,3340,88,NULL),(14577,3345,88,NULL),(14578,3360,88,NULL),(14579,3375,88,NULL),(14580,3300,88,NULL),(14581,3314,88,NULL),(14582,3285,88,NULL),(14583,3289,88,NULL),(14584,3280,88,NULL),(14585,3324,88,NULL),(14586,3286,88,NULL),(14587,3264,88,NULL),(14588,3258,88,NULL),(14589,3295,88,NULL),(14590,3271,88,NULL),(14591,3248,88,NULL),(14592,3232,88,NULL),(14593,3325,88,NULL),(14594,3190,88,NULL),(14595,3191,88,NULL),(14596,3194,88,NULL),(14597,3206,88,NULL),(14598,3223,88,NULL),(14599,3211,88,NULL),(14600,3174,88,NULL),(14601,3162,88,NULL),(14602,3151,88,NULL),(14603,3158,88,NULL),(14604,3146,88,NULL),(14605,3110,88,NULL),(14606,3099,88,NULL),(14607,3066,88,NULL),(14608,3065,88,NULL),(14609,3028,88,NULL),(14610,3042,88,NULL),(14611,3016,88,NULL),(14612,3014,88,NULL),(14613,2997,88,NULL),(14614,3005,88,NULL),(14615,2965,88,NULL),(14616,2974,88,NULL),(14617,2951,88,NULL),(14618,2948,88,NULL),(14619,2962,88,NULL),(14620,2956,88,NULL),(14621,2942,88,NULL),(14622,2932,88,NULL),(14623,2923,88,NULL),(14624,2914,88,NULL),(14625,2894,88,NULL),(14626,2859,88,NULL),(14627,2864,88,NULL),(14628,2848,88,NULL),(14629,2843,88,NULL),(14630,2828,88,NULL),(14631,2824,88,NULL),(14632,2785,88,NULL),(14633,2810,88,NULL),(14634,2788,88,NULL),(14635,2798,88,NULL),(14636,2799,88,NULL),(14637,2744,88,NULL),(14638,2769,88,NULL),(14639,2683,88,NULL),(14640,2656,88,NULL),(14641,2657,88,NULL),(14642,2658,88,NULL),(14643,2652,88,NULL),(14644,2678,88,NULL),(14645,2610,88,NULL),(14646,2574,88,NULL),(14647,2570,88,NULL),(14648,2563,88,NULL),(14649,2559,88,NULL),(14650,2661,88,NULL),(14651,2549,88,NULL),(14652,2608,88,NULL),(14653,2586,88,NULL),(14654,2579,88,NULL),(14655,2545,88,NULL),(14656,2535,88,NULL),(14657,2525,88,NULL),(14658,2529,88,NULL),(14659,2520,88,NULL),(14660,2482,88,NULL),(14661,2481,88,NULL),(14662,2485,88,NULL),(14663,2469,88,NULL),(14664,2461,88,NULL),(14665,2460,88,NULL),(14666,2425,88,NULL),(14667,2433,88,NULL),(14668,2429,88,NULL),(14669,2418,88,NULL),(14670,2413,88,NULL),(14671,2404,88,NULL),(14672,2396,88,NULL),(14673,2342,88,NULL),(14674,2391,88,NULL),(14675,2389,88,NULL),(14676,2381,88,NULL),(14677,2379,88,NULL),(14678,2374,88,NULL),(14679,2364,88,NULL),(14680,2367,88,NULL),(14681,2360,88,NULL),(14682,2359,88,NULL),(14683,2351,88,NULL),(14684,2325,88,NULL),(14685,2317,88,NULL),(14686,2315,88,NULL),(14687,2299,88,NULL),(14688,2236,88,NULL),(14689,2235,88,NULL),(14690,2270,88,NULL),(14691,2275,88,NULL),(14692,2265,88,NULL),(14693,2257,88,NULL),(14694,2220,88,NULL),(14695,2206,88,NULL),(14696,2185,88,NULL),(14697,2176,88,NULL),(14698,2149,88,NULL),(14699,2161,88,NULL),(14700,2160,88,NULL),(14701,2133,88,NULL),(14702,2125,88,NULL),(14703,2108,88,NULL),(14704,2116,88,NULL),(14705,2114,88,NULL),(14706,2089,88,NULL),(14707,2044,88,NULL),(14708,2042,88,NULL),(14709,2053,88,NULL),(14710,2038,88,NULL),(14711,2037,88,NULL),(14712,2017,88,NULL),(14713,2011,88,NULL),(14714,2024,88,NULL),(14715,2022,88,NULL),(14716,2000,88,NULL),(14717,1971,88,NULL),(14718,2006,88,NULL),(14719,1980,88,NULL),(14720,1979,88,NULL),(14721,1991,88,NULL),(14722,1967,88,NULL),(14723,1952,88,NULL),(14724,1945,88,NULL),(14725,1930,88,NULL),(14726,1929,88,NULL),(14727,1920,88,NULL),(14728,1913,88,NULL),(14729,1905,88,NULL),(14730,1903,88,NULL),(14731,1899,88,NULL),(14732,1910,88,NULL),(14733,1863,88,NULL),(14734,1877,88,NULL),(14735,1876,88,NULL),(14736,1859,88,NULL),(14737,1837,88,NULL),(14738,1832,88,NULL),(14739,1844,88,NULL),(14740,1823,88,NULL),(14741,1816,88,NULL),(14742,1829,88,NULL),(14743,1800,88,NULL),(14744,1791,88,NULL),(14745,1790,88,NULL),(14746,1773,88,NULL),(14747,1769,88,NULL),(14748,1768,88,NULL),(14749,1752,88,NULL),(14750,1765,88,NULL),(14751,1748,88,NULL),(14752,1720,88,NULL),(14753,1732,88,NULL),(14754,1689,88,NULL),(14755,1688,88,NULL),(14756,1678,88,NULL),(14757,1672,88,NULL),(14758,1684,88,NULL),(14759,1662,88,NULL),(14760,1657,88,NULL),(14761,1647,88,NULL),(14762,1652,88,NULL),(14763,1631,88,NULL),(14764,1630,88,NULL),(14765,1637,88,NULL),(14766,1614,88,NULL),(14767,1588,88,NULL),(14768,1561,88,NULL),(14769,1552,88,NULL),(14770,1551,88,NULL),(14771,1534,88,NULL),(14772,1528,88,NULL),(14773,1512,88,NULL),(14774,1508,88,NULL),(14775,1486,88,NULL),(14776,1480,88,NULL),(14777,1493,88,NULL),(14778,1470,88,NULL),(14779,1464,88,NULL),(14780,1476,88,NULL),(14781,1456,88,NULL),(14782,1455,88,NULL),(14783,1462,88,NULL),(14784,1460,88,NULL),(14785,1442,88,NULL),(14786,1436,88,NULL),(14787,1422,88,NULL),(14788,1431,88,NULL),(14789,1409,88,NULL),(14790,1408,88,NULL),(14791,1389,88,NULL),(14792,1400,88,NULL),(14793,1399,88,NULL),(14794,1379,88,NULL),(14795,1380,88,NULL),(14796,1368,88,NULL),(14797,1365,88,NULL),(14798,1352,88,NULL),(14799,1351,88,NULL),(14800,1371,88,NULL),(14801,1347,88,NULL),(14802,1358,88,NULL),(14803,1356,88,NULL),(14804,1323,88,NULL),(14805,1343,88,NULL),(14806,1342,88,NULL),(14807,1310,88,NULL),(14808,1295,88,NULL),(14809,1282,88,NULL),(14810,1281,88,NULL),(14811,1267,88,NULL),(14812,1261,88,NULL),(14813,1254,88,NULL),(14814,1248,88,NULL),(14815,1726,88,NULL),(14816,1227,88,NULL),(14817,1233,88,NULL),(14818,1221,88,NULL),(14819,1514,88,NULL),(14820,1202,88,NULL),(14821,1957,88,NULL),(14822,1302,88,NULL),(14823,1143,88,NULL),(14824,1314,88,NULL),(14825,1313,88,NULL),(14826,1289,88,NULL),(14827,1122,88,NULL),(14828,1109,88,NULL),(14829,1108,88,NULL),(14830,1094,88,NULL),(14831,1091,88,NULL),(14832,1079,88,NULL),(14833,1072,88,NULL),(14834,1071,88,NULL),(14835,1074,88,NULL),(14836,1051,88,NULL),(14837,1038,88,NULL),(14838,1028,88,NULL),(14839,1025,88,NULL),(14840,1021,88,NULL),(14841,1020,88,NULL),(14842,1011,88,NULL),(14843,1002,88,NULL),(14844,994,88,NULL),(14845,992,88,NULL),(14846,980,88,NULL),(14847,978,88,NULL),(14848,977,88,NULL),(14849,509,88,NULL),(14850,945,88,NULL),(14851,944,88,NULL),(14852,942,88,NULL),(14853,938,88,NULL),(14854,931,88,NULL),(14855,930,88,NULL),(14856,922,88,NULL),(14857,916,88,NULL),(14858,905,88,NULL),(14859,904,88,NULL),(14860,884,88,NULL),(14861,877,88,NULL),(14862,876,88,NULL),(14863,875,88,NULL),(14864,848,88,NULL),(14865,841,88,NULL),(14866,832,88,NULL),(14867,807,88,NULL),(14868,802,88,NULL),(14869,797,88,NULL),(14870,796,88,NULL),(14871,784,88,NULL),(14872,779,88,NULL),(14873,704,88,NULL),(14874,771,88,NULL),(14875,763,88,NULL),(14876,743,88,NULL),(14877,709,88,NULL),(14878,739,88,NULL),(14879,733,88,NULL),(14880,724,88,NULL),(14881,695,88,NULL),(14882,684,88,NULL),(14883,680,88,NULL),(14884,672,88,NULL),(14885,670,88,NULL),(14886,654,88,NULL),(14887,646,88,NULL),(14888,643,88,NULL),(14889,633,88,NULL),(14890,605,88,NULL),(14891,561,88,NULL),(14892,557,88,NULL),(14893,547,88,NULL),(14894,541,88,NULL),(14895,538,88,NULL),(14896,535,88,NULL),(14897,515,88,NULL),(14898,491,88,NULL),(14899,476,88,NULL),(14900,455,88,NULL),(14901,453,88,NULL),(14902,451,88,NULL),(14903,448,88,NULL),(14904,443,88,NULL),(14905,442,88,NULL),(14906,441,88,NULL),(14907,438,88,NULL),(14908,434,88,NULL),(14909,424,88,NULL),(14910,419,88,NULL),(14911,416,88,NULL),(14912,412,88,NULL),(14913,410,88,NULL),(14914,407,88,NULL),(14915,397,88,NULL),(14916,392,88,NULL),(14917,389,88,NULL),(14918,387,88,NULL),(14919,374,88,NULL),(14920,367,88,NULL),(14921,363,88,NULL),(14922,349,88,NULL),(14923,347,88,NULL),(14924,345,88,NULL),(14925,344,88,NULL),(14926,342,88,NULL),(14927,338,88,NULL),(14928,330,88,NULL),(14929,326,88,NULL),(14930,319,88,NULL),(14931,303,88,NULL),(14932,300,88,NULL),(14933,292,88,NULL),(14934,287,88,NULL),(14935,268,88,NULL),(14936,260,88,NULL),(14937,242,88,NULL),(14938,238,88,NULL),(14939,231,88,NULL),(14940,229,88,NULL),(14941,222,88,NULL),(14942,221,88,NULL),(14943,219,88,NULL),(14944,217,88,NULL),(14945,216,88,NULL),(14946,213,88,NULL),(14947,210,88,NULL),(14948,209,88,NULL),(14949,207,88,NULL),(14950,204,88,NULL),(14951,200,88,NULL),(14952,199,88,NULL),(14953,198,88,NULL),(14954,191,88,NULL),(14955,190,88,NULL),(14956,172,88,NULL),(14957,169,88,NULL),(14958,167,88,NULL),(14959,162,88,NULL),(14960,153,88,NULL),(14961,152,88,NULL),(14962,151,88,NULL),(14963,145,88,NULL),(14964,144,88,NULL),(14965,141,88,NULL),(14966,137,88,NULL),(14967,136,88,NULL),(14968,130,88,NULL),(14969,122,88,NULL),(14970,121,88,NULL),(14971,113,88,NULL),(14972,112,88,NULL),(14973,107,88,NULL),(14974,104,88,NULL),(14975,103,88,NULL),(14976,102,88,NULL),(14977,94,88,NULL),(14978,90,88,NULL),(14979,88,88,NULL),(14980,81,88,NULL),(14981,79,88,NULL),(14982,78,88,NULL),(14983,77,88,NULL),(14984,75,88,NULL),(14985,74,88,NULL),(14986,70,88,NULL),(14987,64,88,NULL),(14988,63,88,NULL),(14989,62,88,NULL),(14990,56,88,NULL),(14991,55,88,NULL),(14992,53,88,NULL),(14993,50,88,NULL),(14994,47,88,NULL),(14995,46,88,NULL),(14996,42,88,NULL),(14997,40,88,NULL),(14998,39,88,NULL),(14999,37,88,NULL),(15000,36,88,NULL),(15001,35,88,NULL),(15002,34,88,NULL),(15003,33,88,NULL),(15004,31,88,NULL),(15005,27,88,NULL),(15006,26,88,NULL),(15007,22,88,NULL),(15008,15,88,NULL),(15009,11,88,NULL),(15010,9,88,NULL),(15011,4,88,NULL),(15012,3,88,NULL),(15013,1,88,NULL),(15014,3616,88,NULL),(15015,4582,88,NULL),(15016,3763,88,NULL),(15017,4620,88,NULL),(15018,4489,88,NULL),(15019,4588,88,NULL),(15020,3436,88,NULL),(15021,3531,88,NULL),(15022,3556,88,NULL),(15023,3585,88,NULL),(15024,3476,88,NULL),(15025,3418,88,NULL),(15026,3416,88,NULL),(15027,3511,88,NULL),(15028,3492,88,NULL),(15029,3837,88,NULL),(15030,3474,88,NULL),(15031,3449,88,NULL),(15032,3437,88,NULL),(15033,3578,88,NULL),(15034,3425,88,NULL),(15035,3647,88,NULL),(15036,3613,88,NULL),(15037,4073,88,NULL),(15038,3793,88,NULL),(15039,3441,88,NULL),(15040,4646,88,NULL),(15041,3813,88,NULL),(15042,4753,88,NULL),(15043,3499,88,NULL),(15044,4769,88,NULL),(15045,5641,88,NULL),(15046,3999,88,NULL),(15047,4484,88,NULL),(15048,3892,88,NULL),(15049,3847,88,NULL),(15050,5464,88,NULL),(15051,3802,88,NULL),(15052,4012,88,NULL),(15053,6351,88,NULL),(15054,3682,88,NULL),(15055,4103,88,NULL),(15056,5126,88,NULL),(15057,3500,88,NULL),(15058,3493,88,NULL),(15059,3444,88,NULL),(15060,3431,88,NULL),(15061,3421,88,NULL),(15062,3477,88,NULL),(15063,3429,88,NULL),(15064,3468,88,NULL),(15065,3427,88,NULL),(15066,3450,88,NULL),(15067,3417,88,NULL),(15068,3473,88,NULL),(15069,5474,88,NULL),(15070,3621,88,NULL),(15071,4083,88,NULL),(15072,4443,88,NULL),(15073,4210,88,NULL),(15074,4113,88,NULL),(15075,4587,88,NULL),(15076,12037,88,NULL),(15077,15085,88,NULL),(15078,9852,88,NULL),(15079,14077,88,NULL),(15080,16556,94,NULL),(15081,3407,94,NULL),(15082,3394,94,NULL),(15083,3396,94,NULL),(15084,3356,94,NULL),(15085,3335,94,NULL),(15086,3345,94,NULL),(15087,3360,94,NULL),(15088,3330,94,NULL),(15089,3354,94,NULL),(15090,3300,94,NULL),(15091,3304,94,NULL),(15092,3334,94,NULL),(15093,3285,94,NULL),(15094,3289,94,NULL),(15095,3306,94,NULL),(15096,3270,94,NULL),(15097,3280,94,NULL),(15098,3324,94,NULL),(15099,3295,94,NULL),(15100,3271,94,NULL),(15101,3281,94,NULL),(15102,3208,94,NULL),(15103,3190,94,NULL),(15104,3191,94,NULL),(15105,3194,94,NULL),(15106,3227,94,NULL),(15107,3174,94,NULL),(15108,3162,94,NULL),(15109,3160,94,NULL),(15110,3169,94,NULL),(15111,3151,94,NULL),(15112,3184,94,NULL),(15113,3159,94,NULL),(15114,3146,94,NULL),(15115,3120,94,NULL),(15116,3121,94,NULL),(15117,3110,94,NULL),(15118,3105,94,NULL),(15119,3099,94,NULL),(15120,3075,94,NULL),(15121,3108,94,NULL),(15122,3069,94,NULL),(15123,3100,94,NULL),(15124,3074,94,NULL),(15125,3066,94,NULL),(15126,3065,94,NULL),(15127,3046,94,NULL),(15128,3042,94,NULL),(15129,3011,94,NULL),(15130,3014,94,NULL),(15131,2997,94,NULL),(15132,3005,94,NULL),(15133,2965,94,NULL),(15134,2974,94,NULL),(15135,2956,94,NULL),(15136,2938,94,NULL),(15137,2942,94,NULL),(15138,2894,94,NULL),(15139,2899,94,NULL),(15140,2859,94,NULL),(15141,2855,94,NULL),(15142,2839,94,NULL),(15143,2828,94,NULL),(15144,2824,94,NULL),(15145,2845,94,NULL),(15146,2780,94,NULL),(15147,2785,94,NULL),(15148,2798,94,NULL),(15149,2761,94,NULL),(15150,2799,94,NULL),(15151,2745,94,NULL),(15152,2778,94,NULL),(15153,2769,94,NULL),(15154,2698,94,NULL),(15155,2696,94,NULL),(15156,2685,94,NULL),(15157,2658,94,NULL),(15158,2652,94,NULL),(15159,2574,94,NULL),(15160,2570,94,NULL),(15161,2568,94,NULL),(15162,2563,94,NULL),(15163,2559,94,NULL),(15164,2560,94,NULL),(15165,2661,94,NULL),(15166,2608,94,NULL),(15167,2594,94,NULL),(15168,2579,94,NULL),(15169,2545,94,NULL),(15170,2535,94,NULL),(15171,2529,94,NULL),(15172,2523,94,NULL),(15173,2521,94,NULL),(15174,2491,94,NULL),(15175,2467,94,NULL),(15176,2469,94,NULL),(15177,2461,94,NULL),(15178,2460,94,NULL),(15179,2441,94,NULL),(15180,2419,94,NULL),(15181,2413,94,NULL),(15182,2396,94,NULL),(15183,2395,94,NULL),(15184,2401,94,NULL),(15185,2342,94,NULL),(15186,2381,94,NULL),(15187,2379,94,NULL),(15188,2375,94,NULL),(15189,2374,94,NULL),(15190,2364,94,NULL),(15191,2370,94,NULL),(15192,2360,94,NULL),(15193,2359,94,NULL),(15194,2349,94,NULL),(15195,2320,94,NULL),(15196,2235,94,NULL),(15197,2270,94,NULL),(15198,2239,94,NULL),(15199,2260,94,NULL),(15200,2251,94,NULL),(15201,2220,94,NULL),(15202,2206,94,NULL),(15203,2149,94,NULL),(15204,2161,94,NULL),(15205,2145,94,NULL),(15206,2109,94,NULL),(15207,2106,94,NULL),(15208,2115,94,NULL),(15209,2114,94,NULL),(15210,2089,94,NULL),(15211,2073,94,NULL),(15212,2064,94,NULL),(15213,2062,94,NULL),(15214,2047,94,NULL),(15215,2044,94,NULL),(15216,2033,94,NULL),(15217,2011,94,NULL),(15218,2000,94,NULL),(15219,1980,94,NULL),(15220,1963,94,NULL),(15221,1976,94,NULL),(15222,1945,94,NULL),(15223,1930,94,NULL),(15224,1929,94,NULL),(15225,1920,94,NULL),(15226,1915,94,NULL),(15227,1898,94,NULL),(15228,1899,94,NULL),(15229,1910,94,NULL),(15230,1894,94,NULL),(15231,1877,94,NULL),(15232,1822,94,NULL),(15233,1800,94,NULL),(15234,1791,94,NULL),(15235,1790,94,NULL),(15236,1773,94,NULL),(15237,1769,94,NULL),(15238,1780,94,NULL),(15239,1752,94,NULL),(15240,1765,94,NULL),(15241,1749,94,NULL),(15242,1710,94,NULL),(15243,1718,94,NULL),(15244,1694,94,NULL),(15245,1689,94,NULL),(15246,1680,94,NULL),(15247,1672,94,NULL),(15248,1662,94,NULL),(15249,1658,94,NULL),(15250,1647,94,NULL),(15251,1652,94,NULL),(15252,1614,94,NULL),(15253,1608,94,NULL),(15254,1545,94,NULL),(15255,1544,94,NULL),(15256,1518,94,NULL),(15257,1512,94,NULL),(15258,1524,94,NULL),(15259,1523,94,NULL),(15260,1503,94,NULL),(15261,1487,94,NULL),(15262,1486,94,NULL),(15263,1480,94,NULL),(15264,1470,94,NULL),(15265,1462,94,NULL),(15266,1423,94,NULL),(15267,1431,94,NULL),(15268,1408,94,NULL),(15269,1415,94,NULL),(15270,1389,94,NULL),(15271,1400,94,NULL),(15272,1380,94,NULL),(15273,1365,94,NULL),(15274,1352,94,NULL),(15275,1351,94,NULL),(15276,1358,94,NULL),(15277,1343,94,NULL),(15278,1319,94,NULL),(15279,1310,94,NULL),(15280,1290,94,NULL),(15281,1281,94,NULL),(15282,1261,94,NULL),(15283,1254,94,NULL),(15284,1249,94,NULL),(15285,1726,94,NULL),(15286,1227,94,NULL),(15287,2226,94,NULL),(15288,1514,94,NULL),(15289,1192,94,NULL),(15290,1137,94,NULL),(15291,1289,94,NULL),(15292,1109,94,NULL),(15293,1108,94,NULL),(15294,1095,94,NULL),(15295,1094,94,NULL),(15296,1091,94,NULL),(15297,1092,94,NULL),(15298,1079,94,NULL),(15299,1038,94,NULL),(15300,1033,94,NULL),(15301,1029,94,NULL),(15302,1028,94,NULL),(15303,1025,94,NULL),(15304,1020,94,NULL),(15305,1014,94,NULL),(15306,1011,94,NULL),(15307,994,94,NULL),(15308,978,94,NULL),(15309,977,94,NULL),(15310,509,94,NULL),(15311,950,94,NULL),(15312,945,94,NULL),(15313,930,94,NULL),(15314,921,94,NULL),(15315,916,94,NULL),(15316,912,94,NULL),(15317,904,94,NULL),(15318,889,94,NULL),(15319,881,94,NULL),(15320,877,94,NULL),(15321,876,94,NULL),(15322,875,94,NULL),(15323,873,94,NULL),(15324,872,94,NULL),(15325,860,94,NULL),(15326,852,94,NULL),(15327,848,94,NULL),(15328,834,94,NULL),(15329,706,94,NULL),(15330,798,94,NULL),(15331,797,94,NULL),(15332,791,94,NULL),(15333,787,94,NULL),(15334,786,94,NULL),(15335,785,94,NULL),(15336,704,94,NULL),(15337,771,94,NULL),(15338,589,94,NULL),(15339,752,94,NULL),(15340,746,94,NULL),(15341,744,94,NULL),(15342,733,94,NULL),(15343,731,94,NULL),(15344,713,94,NULL),(15345,695,94,NULL),(15346,672,94,NULL),(15347,670,94,NULL),(15348,643,94,NULL),(15349,633,94,NULL),(15350,623,94,NULL),(15351,611,94,NULL),(15352,576,94,NULL),(15353,565,94,NULL),(15354,560,94,NULL),(15355,547,94,NULL),(15356,542,94,NULL),(15357,539,94,NULL),(15358,538,94,NULL),(15359,521,94,NULL),(15360,520,94,NULL),(15361,514,94,NULL),(15362,506,94,NULL),(15363,500,94,NULL),(15364,485,94,NULL),(15365,463,94,NULL),(15366,452,94,NULL),(15367,451,94,NULL),(15368,443,94,NULL),(15369,442,94,NULL),(15370,441,94,NULL),(15371,440,94,NULL),(15372,438,94,NULL),(15373,424,94,NULL),(15374,417,94,NULL),(15375,416,94,NULL),(15376,415,94,NULL),(15377,414,94,NULL),(15378,413,94,NULL),(15379,410,94,NULL),(15380,409,94,NULL),(15381,404,94,NULL),(15382,400,94,NULL),(15383,397,94,NULL),(15384,389,94,NULL),(15385,387,94,NULL),(15386,378,94,NULL),(15387,374,94,NULL),(15388,371,94,NULL),(15389,367,94,NULL),(15390,363,94,NULL),(15391,349,94,NULL),(15392,338,94,NULL),(15393,319,94,NULL),(15394,310,94,NULL),(15395,300,94,NULL),(15396,292,94,NULL),(15397,287,94,NULL),(15398,278,94,NULL),(15399,275,94,NULL),(15400,268,94,NULL),(15401,264,94,NULL),(15402,263,94,NULL),(15403,260,94,NULL),(15404,258,94,NULL),(15405,257,94,NULL),(15406,242,94,NULL),(15407,240,94,NULL),(15408,239,94,NULL),(15409,238,94,NULL),(15410,237,94,NULL),(15411,231,94,NULL),(15412,229,94,NULL),(15413,224,94,NULL),(15414,223,94,NULL),(15415,219,94,NULL),(15416,217,94,NULL),(15417,216,94,NULL),(15418,210,94,NULL),(15419,209,94,NULL),(15420,207,94,NULL),(15421,206,94,NULL),(15422,204,94,NULL),(15423,203,94,NULL),(15424,200,94,NULL),(15425,191,94,NULL),(15426,190,94,NULL),(15427,189,94,NULL),(15428,187,94,NULL),(15429,172,94,NULL),(15430,169,94,NULL),(15431,167,94,NULL),(15432,165,94,NULL),(15433,162,94,NULL),(15434,155,94,NULL),(15435,153,94,NULL),(15436,151,94,NULL),(15437,148,94,NULL),(15438,146,94,NULL),(15439,145,94,NULL),(15440,144,94,NULL),(15441,141,94,NULL),(15442,137,94,NULL),(15443,136,94,NULL),(15444,134,94,NULL),(15445,129,94,NULL),(15446,125,94,NULL),(15447,121,94,NULL),(15448,119,94,NULL),(15449,118,94,NULL),(15450,113,94,NULL),(15451,112,94,NULL),(15452,111,94,NULL),(15453,107,94,NULL),(15454,104,94,NULL),(15455,103,94,NULL),(15456,102,94,NULL),(15457,98,94,NULL),(15458,94,94,NULL),(15459,90,94,NULL),(15460,89,94,NULL),(15461,88,94,NULL),(15462,85,94,NULL),(15463,84,94,NULL),(15464,83,94,NULL),(15465,81,94,NULL),(15466,78,94,NULL),(15467,77,94,NULL),(15468,75,94,NULL),(15469,74,94,NULL),(15470,70,94,NULL),(15471,69,94,NULL),(15472,66,94,NULL),(15473,62,94,NULL),(15474,60,94,NULL),(15475,58,94,NULL),(15476,56,94,NULL),(15477,54,94,NULL),(15478,53,94,NULL),(15479,52,94,NULL),(15480,51,94,NULL),(15481,50,94,NULL),(15482,49,94,NULL),(15483,48,94,NULL),(15484,47,94,NULL),(15485,46,94,NULL),(15486,43,94,NULL),(15487,42,94,NULL),(15488,41,94,NULL),(15489,40,94,NULL),(15490,39,94,NULL),(15491,38,94,NULL),(15492,35,94,NULL),(15493,34,94,NULL),(15494,33,94,NULL),(15495,32,94,NULL),(15496,31,94,NULL),(15497,29,94,NULL),(15498,28,94,NULL),(15499,27,94,NULL),(15500,26,94,NULL),(15501,24,94,NULL),(15502,22,94,NULL),(15503,20,94,NULL),(15504,17,94,NULL),(15505,15,94,NULL),(15506,14,94,NULL),(15507,13,94,NULL),(15508,12,94,NULL),(15509,11,94,NULL),(15510,9,94,NULL),(15511,8,94,NULL),(15512,7,94,NULL),(15513,6,94,NULL),(15514,5,94,NULL),(15515,4,94,NULL),(15516,3,94,NULL),(15517,2,94,NULL),(15518,1,94,NULL),(15519,17122,94,NULL),(15520,13547,94,NULL),(15521,9807,94,NULL),(15522,12037,94,NULL),(15523,9852,94,NULL),(15524,14431,94,NULL),(15525,14186,94,NULL),(15526,8982,94,NULL),(15527,15085,94,NULL),(15528,10487,94,NULL),(15529,14077,94,NULL),(15530,7662,94,NULL),(15531,12724,94,NULL),(15532,9504,94,NULL),(15533,13566,94,NULL),(15534,9872,94,NULL),(15535,12269,94,NULL),(15536,10098,94,NULL),(15537,3436,94,NULL),(15538,3503,94,NULL),(15539,3531,94,NULL),(15540,3556,94,NULL),(15541,3585,94,NULL),(15542,3610,94,NULL),(15543,3486,94,NULL),(15544,3593,94,NULL),(15545,3918,94,NULL),(15546,3642,94,NULL),(15547,3479,94,NULL),(15548,3418,94,NULL),(15549,3424,94,NULL),(15550,3462,94,NULL),(15551,3416,94,NULL),(15552,3511,94,NULL),(15553,4529,94,NULL),(15554,3837,94,NULL),(15555,4000,94,NULL),(15556,3507,94,NULL),(15557,3760,94,NULL),(15558,3676,94,NULL),(15559,3578,94,NULL),(15560,3481,94,NULL),(15561,3440,94,NULL),(15562,3737,94,NULL),(15563,3879,94,NULL),(15564,3425,94,NULL),(15565,3647,94,NULL),(15566,3759,94,NULL),(15567,3887,94,NULL),(15568,3423,94,NULL),(15569,3767,94,NULL),(15570,4142,94,NULL),(15571,4507,94,NULL),(15572,3613,94,NULL),(15573,3666,94,NULL),(15574,3514,94,NULL),(15575,4073,94,NULL),(15576,3793,94,NULL),(15577,3668,94,NULL),(15578,4159,94,NULL),(15579,3730,94,NULL),(15580,3766,94,NULL),(15581,4753,94,NULL),(15582,3602,94,NULL),(15583,4769,94,NULL),(15584,3700,94,NULL),(15585,5641,94,NULL),(15586,3999,94,NULL),(15587,3704,94,NULL),(15588,3947,94,NULL),(15589,5114,94,NULL),(15590,4484,94,NULL),(15591,3664,94,NULL),(15592,3802,94,NULL),(15593,4012,94,NULL),(15594,4242,94,NULL),(15595,3435,94,NULL),(15596,3446,94,NULL),(15597,3739,94,NULL),(15598,4103,94,NULL),(15599,3504,94,NULL),(15600,3483,94,NULL),(15601,3830,94,NULL),(15602,4028,94,NULL),(15603,3762,94,NULL),(15604,3695,94,NULL),(15605,4032,94,NULL),(15606,4493,94,NULL),(15607,3833,94,NULL),(15608,4720,94,NULL),(15609,4074,94,NULL),(15610,4170,94,NULL),(15611,4423,94,NULL),(15612,3948,94,NULL),(15613,4312,94,NULL),(15614,5126,94,NULL),(15615,4383,94,NULL),(15616,3914,94,NULL),(15617,3450,94,NULL),(15618,3667,94,NULL),(15619,3573,94,NULL),(15620,3621,94,NULL),(15621,3611,94,NULL),(15622,5182,94,NULL),(15623,4443,94,NULL),(15624,4366,94,NULL),(15625,4113,94,NULL),(15626,4587,94,NULL),(15627,6311,94,NULL),(15628,4582,94,NULL),(15629,3763,94,NULL),(15630,3706,94,NULL),(15631,4441,94,NULL),(15632,4620,94,NULL),(15633,4588,94,NULL),(15634,16620,92,NULL),(15635,16610,92,NULL),(15636,16611,92,NULL),(15637,16595,92,NULL),(15638,16579,92,NULL),(15639,16596,92,NULL),(15640,16641,92,NULL),(15641,16556,92,NULL),(15642,16640,92,NULL),(15643,16546,92,NULL),(15644,16550,92,NULL),(15645,3392,92,NULL),(15646,3396,92,NULL),(15647,3337,92,NULL),(15648,3335,92,NULL),(15649,3300,92,NULL),(15650,3304,92,NULL),(15651,3334,92,NULL),(15652,3285,92,NULL),(15653,3309,92,NULL),(15654,3324,92,NULL),(15655,3301,92,NULL),(15656,3226,92,NULL),(15657,3325,92,NULL),(15658,3042,92,NULL),(15659,2938,92,NULL),(15660,2600,92,NULL),(15661,2595,92,NULL),(15662,2491,92,NULL),(15663,2359,92,NULL),(15664,2125,92,NULL),(15665,1899,92,NULL),(15666,1780,92,NULL),(15667,1647,92,NULL),(15668,1572,92,NULL),(15669,1268,92,NULL),(15670,1095,92,NULL),(15671,1029,92,NULL),(15672,1011,92,NULL),(15673,977,92,NULL),(15674,509,92,NULL),(15675,930,92,NULL),(15676,875,92,NULL),(15677,869,92,NULL),(15678,868,92,NULL),(15679,867,92,NULL),(15680,848,92,NULL),(15681,846,92,NULL),(15682,832,92,NULL),(15683,704,92,NULL),(15684,762,92,NULL),(15685,561,92,NULL),(15686,455,92,NULL),(15687,442,92,NULL),(15688,441,92,NULL),(15689,410,92,NULL),(15690,390,92,NULL),(15691,374,92,NULL),(15692,367,92,NULL),(15693,342,92,NULL),(15694,338,92,NULL),(15695,326,92,NULL),(15696,287,92,NULL),(15697,278,92,NULL),(15698,268,92,NULL),(15699,231,92,NULL),(15700,221,92,NULL),(15701,206,92,NULL),(15702,205,92,NULL),(15703,202,92,NULL),(15704,191,92,NULL),(15705,190,92,NULL),(15706,172,92,NULL),(15707,167,92,NULL),(15708,162,92,NULL),(15709,153,92,NULL),(15710,152,92,NULL),(15711,141,92,NULL),(15712,139,92,NULL),(15713,136,92,NULL),(15714,135,92,NULL),(15715,125,92,NULL),(15716,121,92,NULL),(15717,90,92,NULL),(15718,88,92,NULL),(15719,83,92,NULL),(15720,78,92,NULL),(15721,76,92,NULL),(15722,69,92,NULL),(15723,67,92,NULL),(15724,66,92,NULL),(15725,58,92,NULL),(15726,55,92,NULL),(15727,54,92,NULL),(15728,53,92,NULL),(15729,50,92,NULL),(15730,49,92,NULL),(15731,47,92,NULL),(15732,46,92,NULL),(15733,43,92,NULL),(15734,40,92,NULL),(15735,39,92,NULL),(15736,35,92,NULL),(15737,34,92,NULL),(15738,33,92,NULL),(15739,29,92,NULL),(15740,28,92,NULL),(15741,27,92,NULL),(15742,26,92,NULL),(15743,24,92,NULL),(15744,21,92,NULL),(15745,16,92,NULL),(15746,15,92,NULL),(15747,12,92,NULL),(15748,11,92,NULL),(15749,9,92,NULL),(15750,7,92,NULL),(15751,4,92,NULL),(15752,3,92,NULL),(15753,2,92,NULL),(15754,1,92,NULL),(15755,3554,92,NULL),(15756,3740,92,NULL),(15757,3545,92,NULL),(15758,3618,92,NULL),(15759,5006,92,NULL),(15760,3435,92,NULL),(15761,3475,92,NULL),(15762,3455,92,NULL),(15763,3489,92,NULL),(15764,3761,92,NULL),(15765,3446,92,NULL),(15766,5472,92,NULL),(15767,4299,92,NULL),(15768,4103,92,NULL),(15769,4504,92,NULL),(15770,4226,92,NULL),(15771,5305,92,NULL),(15772,3459,92,NULL),(15773,3504,92,NULL),(15774,3457,92,NULL),(15775,3483,92,NULL),(15776,4195,92,NULL),(15777,3830,92,NULL),(15778,4028,92,NULL),(15779,3762,92,NULL),(15780,4329,92,NULL),(15781,3993,92,NULL),(15782,5009,92,NULL),(15783,5838,92,NULL),(15784,4612,92,NULL),(15785,5122,92,NULL),(15786,3695,92,NULL),(15787,4506,92,NULL),(15788,4032,92,NULL),(15789,4493,92,NULL),(15790,4560,92,NULL),(15791,3833,92,NULL),(15792,4720,92,NULL),(15793,4074,92,NULL),(15794,4941,92,NULL),(15795,4467,92,NULL),(15796,4170,92,NULL),(15797,4423,92,NULL),(15798,4217,92,NULL),(15799,4088,92,NULL),(15800,5043,92,NULL),(15801,3948,92,NULL),(15802,5639,92,NULL),(15803,4312,92,NULL),(15804,5126,92,NULL),(15805,4383,92,NULL),(15806,4775,92,NULL),(15807,3808,92,NULL),(15808,3501,92,NULL),(15809,3442,92,NULL),(15810,3564,92,NULL),(15811,3502,92,NULL),(15812,3526,92,NULL),(15813,3436,92,NULL),(15814,3634,92,NULL),(15815,3466,92,NULL),(15816,3531,92,NULL),(15817,3556,92,NULL),(15818,3533,92,NULL),(15819,3438,92,NULL),(15820,3585,92,NULL),(15821,3637,92,NULL),(15822,3610,92,NULL),(15823,3471,92,NULL),(15824,3593,92,NULL),(15825,4167,92,NULL),(15826,3476,92,NULL),(15827,3804,92,NULL),(15828,3918,92,NULL),(15829,3642,92,NULL),(15830,3479,92,NULL),(15831,3539,92,NULL),(15832,3513,92,NULL),(15833,3445,92,NULL),(15834,3418,92,NULL),(15835,3424,92,NULL),(15836,3712,92,NULL),(15837,3462,92,NULL),(15838,3416,92,NULL),(15839,3487,92,NULL),(15840,4095,92,NULL),(15841,3492,92,NULL),(15842,3837,92,NULL),(15843,4000,92,NULL),(15844,3507,92,NULL),(15845,3474,92,NULL),(15846,3449,92,NULL),(15847,3467,92,NULL),(15848,3437,92,NULL),(15849,3420,92,NULL),(15850,3578,92,NULL),(15851,3879,92,NULL),(15852,3425,92,NULL),(15853,3647,92,NULL),(15854,3940,92,NULL),(15855,3448,92,NULL),(15856,3478,92,NULL),(15857,3488,92,NULL),(15858,3613,92,NULL),(15859,5962,92,NULL),(15860,3666,92,NULL),(15861,3518,92,NULL),(15862,3514,92,NULL),(15863,3793,92,NULL),(15864,3565,92,NULL),(15865,4646,92,NULL),(15866,4048,92,NULL),(15867,4511,92,NULL),(15868,4089,92,NULL),(15869,3668,92,NULL),(15870,4159,92,NULL),(15871,4761,92,NULL),(15872,3776,92,NULL),(15873,4007,92,NULL),(15874,3730,92,NULL),(15875,3766,92,NULL),(15876,4681,92,NULL),(15877,4872,92,NULL),(15878,4401,92,NULL),(15879,3988,92,NULL),(15880,4408,92,NULL),(15881,4769,92,NULL),(15882,4031,92,NULL),(15883,4393,92,NULL),(15884,3877,92,NULL),(15885,3999,92,NULL),(15886,4008,92,NULL),(15887,4209,92,NULL),(15888,3664,92,NULL),(15889,4012,92,NULL),(15890,4242,92,NULL),(15891,6351,92,NULL),(15892,3484,92,NULL),(15893,3632,92,NULL),(15894,3430,92,NULL),(15895,3569,92,NULL),(15896,3500,92,NULL),(15897,3480,92,NULL),(15898,3454,92,NULL),(15899,3469,92,NULL),(15900,3433,92,NULL),(15901,3705,92,NULL),(15902,3521,92,NULL),(15903,3495,92,NULL),(15904,3562,92,NULL),(15905,3679,92,NULL),(15906,3493,92,NULL),(15907,3628,92,NULL),(15908,3444,92,NULL),(15909,3516,92,NULL),(15910,3431,92,NULL),(15911,3525,92,NULL),(15912,3568,92,NULL),(15913,3633,92,NULL),(15914,3421,92,NULL),(15915,3566,92,NULL),(15916,3707,92,NULL),(15917,3452,92,NULL),(15918,3477,92,NULL),(15919,3422,92,NULL),(15920,3652,92,NULL),(15921,3468,92,NULL),(15922,3523,92,NULL),(15923,3427,92,NULL),(15924,4746,92,NULL),(15925,3450,92,NULL),(15926,3417,92,NULL),(15927,3432,92,NULL),(15928,4663,92,NULL),(15929,3453,92,NULL),(15930,3528,92,NULL),(15931,3573,92,NULL),(15932,3419,92,NULL),(15933,3473,92,NULL),(15934,3510,92,NULL),(15935,3345,89,NULL),(15936,409,89,NULL),(15937,4397,92,NULL),(15938,287,89,NULL),(15939,4920,92,NULL),(15940,268,89,NULL),(15941,3439,92,NULL),(15942,231,89,NULL),(15943,3465,92,NULL),(15944,203,89,NULL),(15945,3621,92,NULL),(15946,191,89,NULL),(15947,3472,92,NULL),(15948,136,89,NULL),(15949,4140,92,NULL),(15950,134,89,NULL),(15951,122,89,NULL),(15952,3901,92,NULL),(15953,92,89,NULL),(15954,5848,92,NULL),(15955,88,89,NULL),(15956,5256,92,NULL),(15957,83,89,NULL),(15958,5768,92,NULL),(15959,78,89,NULL),(15960,3683,92,NULL),(15961,70,89,NULL),(15962,4443,92,NULL),(15963,67,89,NULL),(15964,4210,92,NULL),(15965,55,89,NULL),(15966,4623,92,NULL),(15967,50,89,NULL),(15968,4480,92,NULL),(15969,45,89,NULL),(15970,3875,92,NULL),(15971,44,89,NULL),(15972,4161,92,NULL),(15973,29,89,NULL),(15974,4587,92,NULL),(15975,27,89,NULL),(15976,24,89,NULL),(15977,3674,92,NULL),(15978,21,89,NULL),(15979,3443,92,NULL),(15980,20,89,NULL),(15981,3616,92,NULL),(15982,19,89,NULL),(15983,4582,92,NULL),(15984,16,89,NULL),(15985,3763,92,NULL),(15986,15,89,NULL),(15987,3555,92,NULL),(15988,11,89,NULL),(15989,4620,92,NULL),(15990,9,89,NULL),(15991,4588,92,NULL),(15992,7,89,NULL),(15993,4702,92,NULL),(15994,5,89,NULL),(15995,4,89,NULL),(15996,3,89,NULL),(15997,2,89,NULL),(15998,1,89,NULL),(15999,3425,89,NULL),(16000,3423,89,NULL),(16001,3426,89,NULL),(16002,3914,89,NULL),(16003,3450,89,NULL),(16004,3417,89,NULL),(16005,3667,89,NULL),(16006,3439,89,NULL),(16007,3621,89,NULL),(16008,3435,89,NULL),(16009,3446,89,NULL),(16010,3739,89,NULL),(16011,3504,89,NULL),(16012,3483,89,NULL),(16013,3830,89,NULL),(16014,4028,89,NULL),(16015,3762,89,NULL),(16016,3695,89,NULL),(16017,4032,89,NULL),(16018,3833,89,NULL),(16019,4074,89,NULL),(16020,4170,89,NULL),(16021,7776,92,NULL),(16022,9218,92,NULL),(16023,17331,92,NULL),(16024,9807,92,NULL),(16025,15085,92,NULL),(16026,10487,92,NULL),(16027,14930,92,NULL),(16028,16154,92,NULL),(16029,9617,92,NULL),(16030,9504,92,NULL),(16031,12269,92,NULL),(16032,16579,32,NULL),(16033,16580,32,NULL),(16034,16556,32,NULL),(16035,16545,32,NULL),(16036,16551,32,NULL),(16037,16574,32,NULL),(16038,16589,32,NULL),(16039,16550,32,NULL),(16040,3411,32,NULL),(16041,3392,32,NULL),(16042,3393,32,NULL),(16043,3345,32,NULL),(16044,3360,32,NULL),(16045,3354,32,NULL),(16046,3349,32,NULL),(16047,3304,32,NULL),(16048,3334,32,NULL),(16049,3285,32,NULL),(16050,3309,32,NULL),(16051,3280,32,NULL),(16052,3324,32,NULL),(16053,3281,32,NULL),(16054,3210,32,NULL),(16055,2231,32,NULL),(16056,2149,32,NULL),(16057,2125,32,NULL),(16058,2106,32,NULL),(16059,2062,32,NULL),(16060,2038,32,NULL),(16061,1992,32,NULL),(16062,1903,32,NULL),(16063,1898,32,NULL),(16064,1899,32,NULL),(16065,1752,32,NULL),(16066,1707,32,NULL),(16067,1674,32,NULL),(16068,1647,32,NULL),(16069,1588,32,NULL),(16070,1545,32,NULL),(16071,1539,32,NULL),(16072,1482,32,NULL),(16073,1423,32,NULL),(16074,1358,32,NULL),(16075,1283,32,NULL),(16076,1248,32,NULL),(16077,1514,32,NULL),(16078,1184,32,NULL),(16079,1143,32,NULL),(16080,1029,32,NULL),(16081,1021,32,NULL),(16082,1011,32,NULL),(16083,1004,32,NULL),(16084,994,32,NULL),(16085,992,32,NULL),(16086,977,32,NULL),(16087,509,32,NULL),(16088,930,32,NULL),(16089,904,32,NULL),(16090,875,32,NULL),(16091,851,32,NULL),(16092,848,32,NULL),(16093,846,32,NULL),(16094,841,32,NULL),(16095,802,32,NULL),(16096,798,32,NULL),(16097,796,32,NULL),(16098,787,32,NULL),(16099,779,32,NULL),(16100,704,32,NULL),(16101,733,32,NULL),(16102,698,32,NULL),(16103,646,32,NULL),(16104,645,32,NULL),(16105,643,32,NULL),(16106,638,32,NULL),(16107,624,32,NULL),(16108,605,32,NULL),(16109,594,32,NULL),(16110,560,32,NULL),(16111,547,32,NULL),(16112,541,32,NULL),(16113,540,32,NULL),(16114,526,32,NULL),(16115,520,32,NULL),(16116,503,32,NULL),(16117,496,32,NULL),(16118,494,32,NULL),(16119,493,32,NULL),(16120,486,32,NULL),(16121,485,32,NULL),(16122,477,32,NULL),(16123,476,32,NULL),(16124,473,32,NULL),(16125,464,32,NULL),(16126,461,32,NULL),(16127,455,32,NULL),(16128,451,32,NULL),(16129,441,32,NULL),(16130,438,32,NULL),(16131,434,32,NULL),(16132,424,32,NULL),(16133,421,32,NULL),(16134,416,32,NULL),(16135,415,32,NULL),(16136,412,32,NULL),(16137,410,32,NULL),(16138,409,32,NULL),(16139,405,32,NULL),(16140,402,32,NULL),(16141,397,32,NULL),(16142,395,32,NULL),(16143,394,32,NULL),(16144,390,32,NULL),(16145,389,32,NULL),(16146,387,32,NULL),(16147,374,32,NULL),(16148,371,32,NULL),(16149,367,32,NULL),(16150,363,32,NULL),(16151,350,32,NULL),(16152,349,32,NULL),(16153,345,32,NULL),(16154,344,32,NULL),(16155,342,32,NULL),(16156,338,32,NULL),(16157,334,32,NULL),(16158,326,32,NULL),(16159,318,32,NULL),(16160,316,32,NULL),(16161,287,32,NULL),(16162,283,32,NULL),(16163,268,32,NULL),(16164,242,32,NULL),(16165,241,32,NULL),(16166,240,32,NULL),(16167,231,32,NULL),(16168,229,32,NULL),(16169,227,32,NULL),(16170,220,32,NULL),(16171,219,32,NULL),(16172,216,32,NULL),(16173,210,32,NULL),(16174,209,32,NULL),(16175,207,32,NULL),(16176,206,32,NULL),(16177,205,32,NULL),(16178,203,32,NULL),(16179,202,32,NULL),(16180,201,32,NULL),(16181,200,32,NULL),(16182,198,32,NULL),(16183,191,32,NULL),(16184,190,32,NULL),(16185,189,32,NULL),(16186,187,32,NULL),(16187,179,32,NULL),(16188,169,32,NULL),(16189,167,32,NULL),(16190,166,32,NULL),(16191,165,32,NULL),(16192,162,32,NULL),(16193,153,32,NULL),(16194,152,32,NULL),(16195,151,32,NULL),(16196,139,32,NULL),(16197,136,32,NULL),(16198,134,32,NULL),(16199,131,32,NULL),(16200,125,32,NULL),(16201,122,32,NULL),(16202,121,32,NULL),(16203,118,32,NULL),(16204,116,32,NULL),(16205,113,32,NULL),(16206,107,32,NULL),(16207,103,32,NULL),(16208,102,32,NULL),(16209,97,32,NULL),(16210,93,32,NULL),(16211,91,32,NULL),(16212,90,32,NULL),(16213,89,32,NULL),(16214,88,32,NULL),(16215,81,32,NULL),(16216,80,32,NULL),(16217,79,32,NULL),(16218,78,32,NULL),(16219,77,32,NULL),(16220,75,32,NULL),(16221,74,32,NULL),(16222,73,32,NULL),(16223,72,32,NULL),(16224,71,32,NULL),(16225,70,32,NULL),(16226,69,32,NULL),(16227,67,32,NULL),(16228,66,32,NULL),(16229,58,32,NULL),(16230,56,32,NULL),(16231,55,32,NULL),(16232,54,32,NULL),(16233,53,32,NULL),(16234,52,32,NULL),(16235,51,32,NULL),(16236,49,32,NULL),(16237,48,32,NULL),(16238,47,32,NULL),(16239,46,32,NULL),(16240,44,32,NULL),(16241,43,32,NULL),(16242,40,32,NULL),(16243,39,32,NULL),(16244,38,32,NULL),(16245,36,32,NULL),(16246,35,32,NULL),(16247,34,32,NULL),(16248,33,32,NULL),(16249,31,32,NULL),(16250,29,32,NULL),(16251,28,32,NULL),(16252,27,32,NULL),(16253,26,32,NULL),(16254,22,32,NULL),(16255,21,32,NULL),(16256,20,32,NULL),(16257,18,32,NULL),(16258,17,32,NULL),(16259,16,32,NULL),(16260,15,32,NULL),(16261,14,32,NULL),(16262,13,32,NULL),(16263,12,32,NULL),(16264,11,32,NULL),(16265,9,32,NULL),(16266,8,32,NULL),(16267,7,32,NULL),(16268,6,32,NULL),(16269,5,32,NULL),(16270,4,32,NULL),(16271,3,32,NULL),(16272,2,32,NULL),(16273,1,32,NULL),(16274,3563,32,NULL),(16275,3501,32,NULL),(16276,3515,32,NULL),(16277,3442,32,NULL),(16278,3502,32,NULL),(16279,3635,32,NULL),(16280,3451,32,NULL),(16281,3436,32,NULL),(16282,3466,32,NULL),(16283,3531,32,NULL),(16284,3556,32,NULL),(16285,3929,32,NULL),(16286,3438,32,NULL),(16287,3585,32,NULL),(16288,3660,32,NULL),(16289,3610,32,NULL),(16290,3471,32,NULL),(16291,3486,32,NULL),(16292,3593,32,NULL),(16293,4229,32,NULL),(16294,3476,32,NULL),(16295,3470,32,NULL),(16296,3918,32,NULL),(16297,3479,32,NULL),(16298,3513,32,NULL),(16299,3445,32,NULL),(16300,3418,32,NULL),(16301,3424,32,NULL),(16302,3428,32,NULL),(16303,3462,32,NULL),(16304,3416,32,NULL),(16305,3511,32,NULL),(16306,3492,32,NULL),(16307,3837,32,NULL),(16308,3507,32,NULL),(16309,3926,32,NULL),(16310,3474,32,NULL),(16311,3437,32,NULL),(16312,3817,32,NULL),(16313,4625,32,NULL),(16314,3760,32,NULL),(16315,4293,32,NULL),(16316,3676,32,NULL),(16317,3420,32,NULL),(16318,3578,32,NULL),(16319,3481,32,NULL),(16320,3879,32,NULL),(16321,3647,32,NULL),(16322,3544,32,NULL),(16323,4198,32,NULL),(16324,3887,32,NULL),(16325,3960,32,NULL),(16326,3423,32,NULL),(16327,3890,32,NULL),(16328,3534,32,NULL),(16329,3690,32,NULL),(16330,3713,32,NULL),(16331,3612,32,NULL),(16332,3488,32,NULL),(16333,3697,32,NULL),(16334,3613,32,NULL),(16335,3426,32,NULL),(16336,3514,32,NULL),(16337,4073,32,NULL),(16338,3793,32,NULL),(16339,3733,32,NULL),(16340,3565,32,NULL),(16341,4646,32,NULL),(16342,4048,32,NULL),(16343,3813,32,NULL),(16344,3540,32,NULL),(16345,4089,32,NULL),(16346,5111,32,NULL),(16347,4159,32,NULL),(16348,4132,32,NULL),(16349,3776,32,NULL),(16350,3639,32,NULL),(16351,3766,32,NULL),(16352,4681,32,NULL),(16353,4753,32,NULL),(16354,4311,32,NULL),(16355,4401,32,NULL),(16356,3988,32,NULL),(16357,3499,32,NULL),(16358,3640,32,NULL),(16359,4769,32,NULL),(16360,3700,32,NULL),(16361,4429,32,NULL),(16362,4316,32,NULL),(16363,3956,32,NULL),(16364,5157,32,NULL),(16365,3704,32,NULL),(16366,3947,32,NULL),(16367,4484,32,NULL),(16368,3664,32,NULL),(16369,3753,32,NULL),(16370,3892,32,NULL),(16371,5464,32,NULL),(16372,3802,32,NULL),(16373,4427,32,NULL),(16374,6351,32,NULL),(16375,3484,32,NULL),(16376,3547,32,NULL),(16377,3629,32,NULL),(16378,3632,32,NULL),(16379,3641,32,NULL),(16380,3430,32,NULL),(16381,3596,32,NULL),(16382,3569,32,NULL),(16383,3574,32,NULL),(16384,3500,32,NULL),(16385,3480,32,NULL),(16386,3454,32,NULL),(16387,3469,32,NULL),(16388,3620,32,NULL),(16389,3433,32,NULL),(16390,3495,32,NULL),(16391,3562,32,NULL),(16392,3679,32,NULL),(16393,3493,32,NULL),(16394,3628,32,NULL),(16395,3444,32,NULL),(16396,3516,32,NULL),(16397,3716,32,NULL),(16398,3605,32,NULL),(16399,4055,32,NULL),(16400,3525,32,NULL),(16401,3961,32,NULL),(16402,4191,32,NULL),(16403,4339,32,NULL),(16404,3568,32,NULL),(16405,3633,32,NULL),(16406,3566,32,NULL),(16407,3645,32,NULL),(16408,3559,32,NULL),(16409,3452,32,NULL),(16410,3477,32,NULL),(16411,3429,32,NULL),(16412,3422,32,NULL),(16413,3456,32,NULL),(16414,3652,32,NULL),(16415,3551,32,NULL),(16416,3494,32,NULL),(16417,4046,32,NULL),(16418,4002,32,NULL),(16419,3655,32,NULL),(16420,3519,32,NULL),(16421,3450,32,NULL),(16422,3417,32,NULL),(16423,3432,32,NULL),(16424,4419,32,NULL),(16425,3856,32,NULL),(16426,3528,32,NULL),(16427,3696,32,NULL),(16428,4317,32,NULL),(16429,3419,32,NULL),(16430,3473,32,NULL),(16431,4397,32,NULL),(16432,3936,32,NULL),(16433,4058,32,NULL),(16434,4041,32,NULL),(16435,3819,32,NULL),(16436,3621,32,NULL),(16437,3611,32,NULL),(16438,3472,32,NULL),(16439,3685,32,NULL),(16440,4140,32,NULL),(16441,4817,32,NULL),(16442,5686,32,NULL),(16443,4107,32,NULL),(16444,5300,32,NULL),(16445,3590,32,NULL),(16446,5182,32,NULL),(16447,5083,32,NULL),(16448,4123,32,NULL),(16449,3954,32,NULL),(16450,3939,32,NULL),(16451,5256,32,NULL),(16452,3797,32,NULL),(16453,5768,32,NULL),(16454,3907,32,NULL),(16455,3683,32,NULL),(16456,5393,32,NULL),(16457,4678,32,NULL),(16458,4443,32,NULL),(16459,4210,32,NULL),(16460,3884,32,NULL),(16461,5320,32,NULL),(16462,3875,32,NULL),(16463,3857,32,NULL),(16464,4161,32,NULL),(16465,4113,32,NULL),(16466,4534,32,NULL),(16467,4587,32,NULL),(16468,4212,32,NULL),(16469,3682,32,NULL),(16470,3554,32,NULL),(16471,4096,32,NULL),(16472,3771,32,NULL),(16473,3740,32,NULL),(16474,3618,32,NULL),(16475,3746,32,NULL),(16476,3581,32,NULL),(16477,3623,32,NULL),(16478,4295,32,NULL),(16479,4386,32,NULL),(16480,3524,32,NULL),(16481,3489,32,NULL),(16482,3541,32,NULL),(16483,3761,32,NULL),(16484,3446,32,NULL),(16485,5472,32,NULL),(16486,4103,32,NULL),(16487,3459,32,NULL),(16488,4034,32,NULL),(16489,3457,32,NULL),(16490,3993,32,NULL),(16491,3595,32,NULL),(16492,4204,32,NULL),(16493,4612,32,NULL),(16494,3695,32,NULL),(16495,5101,32,NULL),(16496,4032,32,NULL),(16497,4767,32,NULL),(16498,4970,32,NULL),(16499,4560,32,NULL),(16500,3833,32,NULL),(16501,3482,32,NULL),(16502,4074,32,NULL),(16503,3625,32,NULL),(16504,4423,32,NULL),(16505,4088,32,NULL),(16506,5126,32,NULL),(16507,4134,32,NULL),(16508,3808,32,NULL),(16509,4323,32,NULL),(16510,4582,32,NULL),(16511,3763,32,NULL),(16512,3725,32,NULL),(16513,3880,32,NULL),(16514,3718,32,NULL),(16515,3843,32,NULL),(16516,4588,32,NULL),(16517,4702,32,NULL),(16518,10487,32,NULL),(16519,3484,91,NULL),(16520,3629,91,NULL),(16521,3641,91,NULL),(16522,3569,91,NULL),(16523,3574,91,NULL),(16524,3500,91,NULL),(16525,3469,91,NULL),(16526,3620,91,NULL),(16527,3516,91,NULL),(16528,3505,91,NULL),(16529,3885,91,NULL),(16530,3568,91,NULL),(16531,4169,91,NULL),(16532,3863,91,NULL),(16533,3972,91,NULL),(16534,4271,91,NULL),(16535,3904,91,NULL),(16536,4027,91,NULL),(16537,4188,91,NULL),(16538,3788,91,NULL),(16539,3785,91,NULL),(16540,3468,91,NULL),(16541,4205,91,NULL),(16542,3417,91,NULL),(16543,3536,91,NULL),(16544,3508,91,NULL),(16545,3522,91,NULL),(16546,3419,91,NULL),(16547,3473,91,NULL),(16548,4220,91,NULL),(16549,5474,91,NULL),(16550,3842,91,NULL),(16551,4257,91,NULL),(16552,4587,91,NULL),(16553,4475,91,NULL),(16554,3515,91,NULL),(16555,3503,91,NULL),(16556,3471,91,NULL),(16557,3445,91,NULL),(16558,3418,91,NULL),(16559,3416,91,NULL),(16560,3511,91,NULL),(16561,3723,91,NULL),(16562,3474,91,NULL),(16563,3449,91,NULL),(16564,3552,91,NULL),(16565,3425,91,NULL),(16566,3852,91,NULL),(16567,3890,91,NULL),(16568,4201,91,NULL),(16569,3530,91,NULL),(16570,3871,91,NULL),(16571,4340,91,NULL),(16572,4513,91,NULL),(16573,3682,91,NULL),(16574,3554,91,NULL),(16575,4096,91,NULL),(16576,3608,91,NULL),(16577,3498,91,NULL),(16578,3846,91,NULL),(16579,4379,91,NULL),(16580,3524,91,NULL),(16581,3742,91,NULL),(16582,4903,91,NULL),(16583,3761,91,NULL),(16584,3820,91,NULL),(16585,5339,91,NULL),(16586,5782,91,NULL),(16587,4103,91,NULL),(16588,4811,91,NULL),(16589,4505,91,NULL),(16590,4249,91,NULL),(16591,3965,91,NULL),(16592,5050,91,NULL),(16593,3975,91,NULL),(16594,4239,91,NULL),(16595,4034,91,NULL),(16596,5002,91,NULL),(16597,3923,91,NULL),(16598,5134,91,NULL),(16599,5342,91,NULL),(16600,4412,91,NULL),(16601,4430,91,NULL),(16602,4801,91,NULL),(16603,4286,91,NULL),(16604,3669,91,NULL),(16605,3749,91,NULL),(16606,4456,91,NULL),(16607,4987,91,NULL),(16608,4767,91,NULL),(16609,4970,91,NULL),(16610,4560,91,NULL),(16611,4720,91,NULL),(16612,4982,91,NULL),(16613,4941,91,NULL),(16614,4467,91,NULL),(16615,4754,91,NULL),(16616,4927,91,NULL),(16617,4088,91,NULL),(16618,4972,91,NULL),(16619,5699,91,NULL),(16620,3971,91,NULL),(16621,5527,91,NULL),(16622,4588,91,NULL),(16623,16620,91,NULL),(16624,16616,91,NULL),(16625,16621,91,NULL),(16626,16556,91,NULL),(16627,16570,91,NULL),(16628,16574,91,NULL),(16629,16589,91,NULL),(16630,16550,91,NULL),(16631,3411,91,NULL),(16632,3407,91,NULL),(16633,3396,91,NULL),(16634,3364,91,NULL),(16635,3335,91,NULL),(16636,3345,91,NULL),(16637,3360,91,NULL),(16638,3349,91,NULL),(16639,3318,91,NULL),(16640,3304,91,NULL),(16641,3365,91,NULL),(16642,3289,91,NULL),(16643,3306,91,NULL),(16644,3280,91,NULL),(16645,3208,91,NULL),(16646,3192,91,NULL),(16647,3190,91,NULL),(16648,3151,91,NULL),(16649,3152,91,NULL),(16650,3110,91,NULL),(16651,2996,91,NULL),(16652,2965,91,NULL),(16653,2942,91,NULL),(16654,2894,91,NULL),(16655,2873,91,NULL),(16656,2843,91,NULL),(16657,2824,91,NULL),(16658,2807,91,NULL),(16659,2799,91,NULL),(16660,2769,91,NULL),(16661,2653,91,NULL),(16662,2570,91,NULL),(16663,2563,91,NULL),(16664,2594,91,NULL),(16665,2579,91,NULL),(16666,2537,91,NULL),(16667,2531,91,NULL),(16668,2529,91,NULL),(16669,2523,91,NULL),(16670,2485,91,NULL),(16671,2469,91,NULL),(16672,2461,91,NULL),(16673,2460,91,NULL),(16674,2419,91,NULL),(16675,2413,91,NULL),(16676,2396,91,NULL),(16677,2379,91,NULL),(16678,2235,91,NULL),(16679,2244,91,NULL),(16680,2206,91,NULL),(16681,2176,91,NULL),(16682,2154,91,NULL),(16683,2149,91,NULL),(16684,2161,91,NULL),(16685,2047,91,NULL),(16686,2053,91,NULL),(16687,2033,91,NULL),(16688,2032,91,NULL),(16689,2011,91,NULL),(16690,1995,91,NULL),(16691,2006,91,NULL),(16692,1976,91,NULL),(16693,1929,91,NULL),(16694,1941,91,NULL),(16695,1920,91,NULL),(16696,1859,91,NULL),(16697,1769,91,NULL),(16698,1780,91,NULL),(16699,1752,91,NULL),(16700,1749,91,NULL),(16701,1684,91,NULL),(16702,1614,91,NULL),(16703,1588,91,NULL),(16704,1534,91,NULL),(16705,1529,91,NULL),(16706,1512,91,NULL),(16707,1524,91,NULL),(16708,1470,91,NULL),(16709,1448,91,NULL),(16710,1371,91,NULL),(16711,1346,91,NULL),(16712,1358,91,NULL),(16713,1343,91,NULL),(16714,1310,91,NULL),(16715,2309,91,NULL),(16716,1201,91,NULL),(16717,1329,91,NULL),(16718,1137,91,NULL),(16719,1108,91,NULL),(16720,1071,91,NULL),(16721,1004,91,NULL),(16722,994,91,NULL),(16723,987,91,NULL),(16724,977,91,NULL),(16725,509,91,NULL),(16726,933,91,NULL),(16727,873,91,NULL),(16728,867,91,NULL),(16729,829,91,NULL),(16730,781,91,NULL),(16731,777,91,NULL),(16732,704,91,NULL),(16733,701,91,NULL),(16734,700,91,NULL),(16735,771,91,NULL),(16736,746,91,NULL),(16737,713,91,NULL),(16738,672,91,NULL),(16739,617,91,NULL),(16740,567,91,NULL),(16741,543,91,NULL),(16742,539,91,NULL),(16743,450,91,NULL),(16744,438,91,NULL),(16745,413,91,NULL),(16746,397,91,NULL),(16747,394,91,NULL),(16748,376,91,NULL),(16749,345,91,NULL),(16750,319,91,NULL),(16751,290,91,NULL),(16752,283,91,NULL),(16753,278,91,NULL),(16754,268,91,NULL),(16755,264,91,NULL),(16756,238,91,NULL),(16757,226,91,NULL),(16758,219,91,NULL),(16759,206,91,NULL),(16760,199,91,NULL),(16761,189,91,NULL),(16762,167,91,NULL),(16763,151,91,NULL),(16764,145,91,NULL),(16765,144,91,NULL),(16766,141,91,NULL),(16767,136,91,NULL),(16768,125,91,NULL),(16769,124,91,NULL),(16770,121,91,NULL),(16771,118,91,NULL),(16772,112,91,NULL),(16773,111,91,NULL),(16774,110,91,NULL),(16775,103,91,NULL),(16776,102,91,NULL),(16777,101,91,NULL),(16778,100,91,NULL),(16779,94,91,NULL),(16780,88,91,NULL),(16781,86,91,NULL),(16782,83,91,NULL),(16783,75,91,NULL),(16784,70,91,NULL),(16785,69,91,NULL),(16786,66,91,NULL),(16787,58,91,NULL),(16788,53,91,NULL),(16789,46,91,NULL),(16790,40,91,NULL),(16791,39,91,NULL),(16792,35,91,NULL),(16793,34,91,NULL),(16794,33,91,NULL),(16795,31,91,NULL),(16796,28,91,NULL),(16797,27,91,NULL),(16798,26,91,NULL),(16799,21,91,NULL),(16800,20,91,NULL),(16801,18,91,NULL),(16802,15,91,NULL),(16803,14,91,NULL),(16804,13,91,NULL),(16805,11,91,NULL),(16806,9,91,NULL),(16807,6,91,NULL),(16808,4,91,NULL),(16809,3,91,NULL),(16810,2,91,NULL),(16811,1,91,NULL),(16812,2550,97,NULL),(16813,2095,97,NULL),(16814,509,97,NULL),(16815,876,97,NULL),(16816,860,97,NULL),(16817,605,97,NULL),(16818,561,97,NULL),(16819,1721,97,NULL),(16820,455,97,NULL),(16821,342,97,NULL),(16822,328,97,NULL),(16823,326,97,NULL),(16824,290,97,NULL),(16825,268,97,NULL),(16826,237,97,NULL),(16827,234,97,NULL),(16828,231,97,NULL),(16829,206,97,NULL),(16830,203,97,NULL),(16831,160,97,NULL),(16832,142,97,NULL),(16833,141,97,NULL),(16834,137,97,NULL),(16835,136,97,NULL),(16836,109,97,NULL),(16837,92,97,NULL),(16838,86,97,NULL),(16839,83,97,NULL),(16840,82,97,NULL),(16841,67,97,NULL),(16842,61,97,NULL),(16843,50,97,NULL),(16844,35,97,NULL),(16845,34,97,NULL),(16846,31,97,NULL),(16847,29,97,NULL),(16848,27,97,NULL),(16849,26,97,NULL),(16850,24,97,NULL),(16851,21,97,NULL),(16852,19,97,NULL),(16853,13,97,NULL),(16854,11,97,NULL),(16855,9,97,NULL),(16856,4,97,NULL),(16857,2,97,NULL),(16858,1,97,NULL),(16859,3446,97,NULL),(16860,4941,97,NULL),(16861,5474,97,NULL),(16862,4113,97,NULL),(16863,12037,21,NULL),(16864,15085,21,NULL),(16865,10487,21,NULL),(16866,13547,21,NULL),(16867,9617,21,NULL),(16868,14077,21,NULL),(16869,9504,21,NULL),(16870,13566,21,NULL),(16871,9872,21,NULL),(16872,12269,21,NULL),(16873,6727,21,NULL),(16874,3436,21,NULL),(16875,3531,21,NULL),(16876,3556,21,NULL),(16877,3585,21,NULL),(16878,3660,21,NULL),(16879,3593,21,NULL),(16880,3731,21,NULL),(16881,3918,21,NULL),(16882,3479,21,NULL),(16883,3418,21,NULL),(16884,3424,21,NULL),(16885,3712,21,NULL),(16886,3416,21,NULL),(16887,3511,21,NULL),(16888,4529,21,NULL),(16889,4095,21,NULL),(16890,3492,21,NULL),(16891,3837,21,NULL),(16892,4000,21,NULL),(16893,3474,21,NULL),(16894,3449,21,NULL),(16895,3420,21,NULL),(16896,3578,21,NULL),(16897,3481,21,NULL),(16898,3440,21,NULL),(16899,3879,21,NULL),(16900,3425,21,NULL),(16901,3759,21,NULL),(16902,3767,21,NULL),(16903,3773,21,NULL),(16904,3448,21,NULL),(16905,3713,21,NULL),(16906,4507,21,NULL),(16907,3613,21,NULL),(16908,3514,21,NULL),(16909,4073,21,NULL),(16910,3793,21,NULL),(16911,3517,21,NULL),(16912,3733,21,NULL),(16913,3441,21,NULL),(16914,4646,21,NULL),(16915,3813,21,NULL),(16916,4089,21,NULL),(16917,3668,21,NULL),(16918,4159,21,NULL),(16919,4224,21,NULL),(16920,3776,21,NULL),(16921,5109,21,NULL),(16922,3766,21,NULL),(16923,4681,21,NULL),(16924,4872,21,NULL),(16925,5657,21,NULL),(16926,4332,21,NULL),(16927,3499,21,NULL),(16928,4981,21,NULL),(16929,4769,21,NULL),(16930,3700,21,NULL),(16931,4539,21,NULL),(16932,3999,21,NULL),(16933,4484,21,NULL),(16934,3892,21,NULL),(16935,3847,21,NULL),(16936,3802,21,NULL),(16937,5116,21,NULL),(16938,4029,21,NULL),(16939,5972,21,NULL),(16940,3484,21,NULL),(16941,3500,21,NULL),(16942,3454,21,NULL),(16943,3469,21,NULL),(16944,3521,21,NULL),(16945,3493,21,NULL),(16946,3444,21,NULL),(16947,3505,21,NULL),(16948,3431,21,NULL),(16949,3421,21,NULL),(16950,4228,21,NULL),(16951,5127,21,NULL),(16952,3754,21,NULL),(16953,3452,21,NULL),(16954,3456,21,NULL),(16955,3652,21,NULL),(16956,3801,21,NULL),(16957,3468,21,NULL),(16958,3427,21,NULL),(16959,3417,21,NULL),(16960,3626,21,NULL),(16961,3528,21,NULL),(16962,3419,21,NULL),(16963,3473,21,NULL),(16964,3510,21,NULL),(16965,4397,21,NULL),(16966,4920,21,NULL),(16967,3881,21,NULL),(16968,5474,21,NULL),(16969,3675,21,NULL),(16970,3621,21,NULL),(16971,3472,21,NULL),(16972,5256,21,NULL),(16973,5768,21,NULL),(16974,4443,21,NULL),(16975,4210,21,NULL),(16976,4915,21,NULL),(16977,5320,21,NULL),(16978,3875,21,NULL),(16979,4161,21,NULL),(16980,4587,21,NULL),(16981,3435,21,NULL),(16982,3524,21,NULL),(16983,3489,21,NULL),(16984,3541,21,NULL),(16985,4903,21,NULL),(16986,3446,21,NULL),(16987,4103,21,NULL),(16988,3459,21,NULL),(16989,3483,21,NULL),(16990,3830,21,NULL),(16991,4028,21,NULL),(16992,3762,21,NULL),(16993,5660,21,NULL),(16994,3993,21,NULL),(16995,5009,21,NULL),(16996,4934,21,NULL),(16997,4649,21,NULL),(16998,5122,21,NULL),(16999,3695,21,NULL),(17000,4032,21,NULL),(17001,4493,21,NULL),(17002,4767,21,NULL),(17003,4560,21,NULL),(17004,3833,21,NULL),(17005,4074,21,NULL),(17006,4941,21,NULL),(17007,4170,21,NULL),(17008,4217,21,NULL),(17009,4088,21,NULL),(17010,5043,21,NULL),(17011,3948,21,NULL),(17012,4383,21,NULL),(17013,4582,21,NULL),(17014,3763,21,NULL),(17015,4620,21,NULL),(17016,5546,21,NULL),(17017,4588,21,NULL),(17018,16620,21,NULL),(17019,16595,21,NULL),(17020,16579,21,NULL),(17021,16641,21,NULL),(17022,16556,21,NULL),(17023,16545,21,NULL),(17024,16537,21,NULL),(17025,16574,21,NULL),(17026,16645,21,NULL),(17027,16589,21,NULL),(17028,16550,21,NULL),(17029,3411,21,NULL),(17030,3402,21,NULL),(17031,3392,21,NULL),(17032,3341,21,NULL),(17033,3345,21,NULL),(17034,3330,21,NULL),(17035,3349,21,NULL),(17036,3300,21,NULL),(17037,3304,21,NULL),(17038,3334,21,NULL),(17039,3285,21,NULL),(17040,3289,21,NULL),(17041,3270,21,NULL),(17042,3280,21,NULL),(17043,3286,21,NULL),(17044,3295,21,NULL),(17045,3271,21,NULL),(17046,3248,21,NULL),(17047,3254,21,NULL),(17048,3232,21,NULL),(17049,3217,21,NULL),(17050,3190,21,NULL),(17051,3194,21,NULL),(17052,3211,21,NULL),(17053,3163,21,NULL),(17054,3174,21,NULL),(17055,3162,21,NULL),(17056,3151,21,NULL),(17057,3158,21,NULL),(17058,3184,21,NULL),(17059,3159,21,NULL),(17060,3142,21,NULL),(17061,3146,21,NULL),(17062,3131,21,NULL),(17063,3136,21,NULL),(17064,3107,21,NULL),(17065,3105,21,NULL),(17066,3083,21,NULL),(17067,3100,21,NULL),(17068,3066,21,NULL),(17069,3043,21,NULL),(17070,3046,21,NULL),(17071,3042,21,NULL),(17072,3011,21,NULL),(17073,3016,21,NULL),(17074,2980,21,NULL),(17075,3005,21,NULL),(17076,2965,21,NULL),(17077,2938,21,NULL),(17078,2932,21,NULL),(17079,2914,21,NULL),(17080,2894,21,NULL),(17081,2807,21,NULL),(17082,2785,21,NULL),(17083,2788,21,NULL),(17084,2789,21,NULL),(17085,2733,21,NULL),(17086,2699,21,NULL),(17087,2696,21,NULL),(17088,2684,21,NULL),(17089,2685,21,NULL),(17090,2657,21,NULL),(17091,2658,21,NULL),(17092,2707,21,NULL),(17093,2652,21,NULL),(17094,2678,21,NULL),(17095,2610,21,NULL),(17096,2570,21,NULL),(17097,2559,21,NULL),(17098,2661,21,NULL),(17099,2641,21,NULL),(17100,2640,21,NULL),(17101,2608,21,NULL),(17102,2595,21,NULL),(17103,2587,21,NULL),(17104,2583,21,NULL),(17105,2553,21,NULL),(17106,2535,21,NULL),(17107,2530,21,NULL),(17108,2529,21,NULL),(17109,2523,21,NULL),(17110,2501,21,NULL),(17111,2491,21,NULL),(17112,2481,21,NULL),(17113,2486,21,NULL),(17114,2463,21,NULL),(17115,2461,21,NULL),(17116,2460,21,NULL),(17117,2458,21,NULL),(17118,2425,21,NULL),(17119,2442,21,NULL),(17120,2419,21,NULL),(17121,2418,21,NULL),(17122,2416,21,NULL),(17123,2415,21,NULL),(17124,2414,21,NULL),(17125,2406,21,NULL),(17126,2404,21,NULL),(17127,2396,21,NULL),(17128,2342,21,NULL),(17129,2390,21,NULL),(17130,2381,21,NULL),(17131,2379,21,NULL),(17132,2374,21,NULL),(17133,2351,21,NULL),(17134,2341,21,NULL),(17135,2326,21,NULL),(17136,2299,21,NULL),(17137,2284,21,NULL),(17138,2270,21,NULL),(17139,2275,21,NULL),(17140,2255,21,NULL),(17141,2260,21,NULL),(17142,2248,21,NULL),(17143,2220,21,NULL),(17144,2208,21,NULL),(17145,2206,21,NULL),(17146,2181,21,NULL),(17147,2185,21,NULL),(17148,2169,21,NULL),(17149,2176,21,NULL),(17150,2161,21,NULL),(17151,2125,21,NULL),(17152,2119,21,NULL),(17153,2130,21,NULL),(17154,2109,21,NULL),(17155,2106,21,NULL),(17156,2103,21,NULL),(17157,2116,21,NULL),(17158,2095,21,NULL),(17159,2085,21,NULL),(17160,2063,21,NULL),(17161,2044,21,NULL),(17162,2053,21,NULL),(17163,2032,21,NULL),(17164,2028,21,NULL),(17165,2038,21,NULL),(17166,2037,21,NULL),(17167,2022,21,NULL),(17168,2001,21,NULL),(17169,2000,21,NULL),(17170,1971,21,NULL),(17171,1980,21,NULL),(17172,1963,21,NULL),(17173,1962,21,NULL),(17174,1961,21,NULL),(17175,1946,21,NULL),(17176,1945,21,NULL),(17177,1929,21,NULL),(17178,1942,21,NULL),(17179,1941,21,NULL),(17180,1926,21,NULL),(17181,1905,21,NULL),(17182,1903,21,NULL),(17183,1898,21,NULL),(17184,1899,21,NULL),(17185,1910,21,NULL),(17186,1894,21,NULL),(17187,1876,21,NULL),(17188,1861,21,NULL),(17189,1859,21,NULL),(17190,1832,21,NULL),(17191,1844,21,NULL),(17192,1817,21,NULL),(17193,1800,21,NULL),(17194,1814,21,NULL),(17195,1813,21,NULL),(17196,1790,21,NULL),(17197,1769,21,NULL),(17198,1768,21,NULL),(17199,1780,21,NULL),(17200,1753,21,NULL),(17201,1752,21,NULL),(17202,1765,21,NULL),(17203,1748,21,NULL),(17204,1732,21,NULL),(17205,1710,21,NULL),(17206,1695,21,NULL),(17207,1701,21,NULL),(17208,1679,21,NULL),(17209,1672,21,NULL),(17210,1684,21,NULL),(17211,1662,21,NULL),(17212,1647,21,NULL),(17213,1671,21,NULL),(17214,1631,21,NULL),(17215,1593,21,NULL),(17216,1584,21,NULL),(17217,1590,21,NULL),(17218,1572,21,NULL),(17219,1551,21,NULL),(17220,1545,21,NULL),(17221,1545,21,NULL),(17222,1539,21,NULL),(17223,1539,21,NULL),(17224,1518,21,NULL),(17225,1518,21,NULL),(17226,1512,21,NULL),(17227,1512,21,NULL),(17228,1497,21,NULL),(17229,1497,21,NULL),(17230,1508,21,NULL),(17231,1508,21,NULL),(17232,1480,21,NULL),(17233,1480,21,NULL),(17234,1493,21,NULL),(17235,1493,21,NULL),(17236,1492,21,NULL),(17237,1492,21,NULL),(17238,1456,21,NULL),(17239,1456,21,NULL),(17240,1455,21,NULL),(17241,1460,21,NULL),(17242,1436,21,NULL),(17243,1436,21,NULL),(17244,1423,21,NULL),(17245,1423,21,NULL),(17246,1422,21,NULL),(17247,1422,21,NULL),(17248,1431,21,NULL),(17249,1408,21,NULL),(17250,1408,21,NULL),(17251,1400,21,NULL),(17252,1400,21,NULL),(17253,1381,21,NULL),(17254,1381,21,NULL),(17255,1367,21,NULL),(17256,1367,21,NULL),(17257,1365,21,NULL),(17258,1365,21,NULL),(17259,1352,21,NULL),(17260,1352,21,NULL),(17261,1351,21,NULL),(17262,1371,21,NULL),(17263,1371,21,NULL),(17264,1346,21,NULL),(17265,1346,21,NULL),(17266,1337,21,NULL),(17267,1337,21,NULL),(17268,1343,21,NULL),(17269,1342,21,NULL),(17270,1342,21,NULL),(17271,1319,21,NULL),(17272,1319,21,NULL),(17273,1310,21,NULL),(17274,1310,21,NULL),(17275,2269,21,NULL),(17276,2269,21,NULL),(17277,1290,21,NULL),(17278,1290,21,NULL),(17279,1277,21,NULL),(17280,2215,21,NULL),(17281,1248,21,NULL),(17282,1726,21,NULL),(17283,2225,21,NULL),(17284,2225,21,NULL),(17285,2273,21,NULL),(17286,2273,21,NULL),(17287,1233,21,NULL),(17288,2226,21,NULL),(17289,2226,21,NULL),(17290,2191,21,NULL),(17291,1514,21,NULL),(17292,1514,21,NULL),(17293,1208,21,NULL),(17294,1207,21,NULL),(17295,1207,21,NULL),(17296,1202,21,NULL),(17297,1202,21,NULL),(17298,1405,21,NULL),(17299,1405,21,NULL),(17300,2139,21,NULL),(17301,2139,21,NULL),(17302,1189,21,NULL),(17303,1189,21,NULL),(17304,1550,21,NULL),(17305,1550,21,NULL),(17306,1331,21,NULL),(17307,1331,21,NULL),(17308,1140,21,NULL),(17309,1140,21,NULL),(17310,1137,21,NULL),(17311,1137,21,NULL),(17312,1109,21,NULL),(17313,1109,21,NULL),(17314,1106,21,NULL),(17315,1106,21,NULL),(17316,1094,21,NULL),(17317,1094,21,NULL),(17318,1091,21,NULL),(17319,1079,21,NULL),(17320,1079,21,NULL),(17321,1074,21,NULL),(17322,1074,21,NULL),(17323,1046,21,NULL),(17324,1046,21,NULL),(17325,1020,21,NULL),(17326,1020,21,NULL),(17327,1011,21,NULL),(17328,1009,21,NULL),(17329,1009,21,NULL),(17330,1002,21,NULL),(17331,994,21,NULL),(17332,994,21,NULL),(17333,977,21,NULL),(17334,977,21,NULL),(17335,509,21,NULL),(17336,509,21,NULL),(17337,965,21,NULL),(17338,965,21,NULL),(17339,962,21,NULL),(17340,962,21,NULL),(17341,961,21,NULL),(17342,961,21,NULL),(17343,951,21,NULL),(17344,951,21,NULL),(17345,947,21,NULL),(17346,931,21,NULL),(17347,930,21,NULL),(17348,921,21,NULL),(17349,916,21,NULL),(17350,904,21,NULL),(17351,884,21,NULL),(17352,877,21,NULL),(17353,877,21,NULL),(17354,876,21,NULL),(17355,875,21,NULL),(17356,875,21,NULL),(17357,874,21,NULL),(17358,872,21,NULL),(17359,872,21,NULL),(17360,867,21,NULL),(17361,860,21,NULL),(17362,860,21,NULL),(17363,852,21,NULL),(17364,852,21,NULL),(17365,848,21,NULL),(17366,848,21,NULL),(17367,841,21,NULL),(17368,841,21,NULL),(17369,840,21,NULL),(17370,832,21,NULL),(17371,832,21,NULL),(17372,641,21,NULL),(17373,641,21,NULL),(17374,827,21,NULL),(17375,806,21,NULL),(17376,802,21,NULL),(17377,798,21,NULL),(17378,797,21,NULL),(17379,796,21,NULL),(17380,791,21,NULL),(17381,787,21,NULL),(17382,786,21,NULL),(17383,786,21,NULL),(17384,784,21,NULL),(17385,784,21,NULL),(17386,704,21,NULL),(17387,704,21,NULL),(17388,771,21,NULL),(17389,771,21,NULL),(17390,590,21,NULL),(17391,590,21,NULL),(17392,746,21,NULL),(17393,746,21,NULL),(17394,744,21,NULL),(17395,744,21,NULL),(17396,733,21,NULL),(17397,733,21,NULL),(17398,731,21,NULL),(17399,731,21,NULL),(17400,729,21,NULL),(17401,729,21,NULL),(17402,725,21,NULL),(17403,725,21,NULL),(17404,724,21,NULL),(17405,713,21,NULL),(17406,713,21,NULL),(17407,695,21,NULL),(17408,693,21,NULL),(17409,692,21,NULL),(17410,692,21,NULL),(17411,682,21,NULL),(17412,670,21,NULL),(17413,664,21,NULL),(17414,664,21,NULL),(17415,658,21,NULL),(17416,650,21,NULL),(17417,650,21,NULL),(17418,646,21,NULL),(17419,643,21,NULL),(17420,643,21,NULL),(17421,637,21,NULL),(17422,633,21,NULL),(17423,633,21,NULL),(17424,632,21,NULL),(17425,632,21,NULL),(17426,605,21,NULL),(17427,605,21,NULL),(17428,599,21,NULL),(17429,592,21,NULL),(17430,592,21,NULL),(17431,567,21,NULL),(17432,567,21,NULL),(17433,564,21,NULL),(17434,547,21,NULL),(17435,542,21,NULL),(17436,540,21,NULL),(17437,539,21,NULL),(17438,539,21,NULL),(17439,538,21,NULL),(17440,535,21,NULL),(17441,535,21,NULL),(17442,515,21,NULL),(17443,513,21,NULL),(17444,513,21,NULL),(17445,507,21,NULL),(17446,507,21,NULL),(17447,506,21,NULL),(17448,506,21,NULL),(17449,500,21,NULL),(17450,500,21,NULL),(17451,496,21,NULL),(17452,494,21,NULL),(17453,494,21,NULL),(17454,485,21,NULL),(17455,476,21,NULL),(17456,476,21,NULL),(17457,463,21,NULL),(17458,463,21,NULL),(17459,462,21,NULL),(17460,462,21,NULL),(17461,461,21,NULL),(17462,461,21,NULL),(17463,455,21,NULL),(17464,455,21,NULL),(17465,453,21,NULL),(17466,453,21,NULL),(17467,451,21,NULL),(17468,451,21,NULL),(17469,448,21,NULL),(17470,448,21,NULL),(17471,445,21,NULL),(17472,445,21,NULL),(17473,443,21,NULL),(17474,443,21,NULL),(17475,442,21,NULL),(17476,442,21,NULL),(17477,441,21,NULL),(17478,441,21,NULL),(17479,440,21,NULL),(17480,440,21,NULL),(17481,438,21,NULL),(17482,438,21,NULL),(17483,435,21,NULL),(17484,434,21,NULL),(17485,434,21,NULL),(17486,432,21,NULL),(17487,419,21,NULL),(17488,416,21,NULL),(17489,416,21,NULL),(17490,414,21,NULL),(17491,412,21,NULL),(17492,412,21,NULL),(17493,409,21,NULL),(17494,405,21,NULL),(17495,405,21,NULL),(17496,402,21,NULL),(17497,397,21,NULL),(17498,397,21,NULL),(17499,392,21,NULL),(17500,392,21,NULL),(17501,389,21,NULL),(17502,389,21,NULL),(17503,387,21,NULL),(17504,387,21,NULL),(17505,386,21,NULL),(17506,386,21,NULL),(17507,383,21,NULL),(17508,383,21,NULL),(17509,378,21,NULL),(17510,378,21,NULL),(17511,374,21,NULL),(17512,374,21,NULL),(17513,367,21,NULL),(17514,363,21,NULL),(17515,363,21,NULL),(17516,350,21,NULL),(17517,350,21,NULL),(17518,349,21,NULL),(17519,349,21,NULL),(17520,347,21,NULL),(17521,347,21,NULL),(17522,345,21,NULL),(17523,345,21,NULL),(17524,344,21,NULL),(17525,342,21,NULL),(17526,342,21,NULL),(17527,338,21,NULL),(17528,338,21,NULL),(17529,334,21,NULL),(17530,334,21,NULL),(17531,326,21,NULL),(17532,324,21,NULL),(17533,324,21,NULL),(17534,303,21,NULL),(17535,290,21,NULL),(17536,290,21,NULL),(17537,287,21,NULL),(17538,287,21,NULL),(17539,283,21,NULL),(17540,278,21,NULL),(17541,278,21,NULL),(17542,268,21,NULL),(17543,260,21,NULL),(17544,258,21,NULL),(17545,258,21,NULL),(17546,257,21,NULL),(17547,257,21,NULL),(17548,242,21,NULL),(17549,242,21,NULL),(17550,241,21,NULL),(17551,240,21,NULL),(17552,240,21,NULL),(17553,238,21,NULL),(17554,238,21,NULL),(17555,234,21,NULL),(17556,231,21,NULL),(17557,230,21,NULL),(17558,230,21,NULL),(17559,229,21,NULL),(17560,222,21,NULL),(17561,219,21,NULL),(17562,217,21,NULL),(17563,215,21,NULL),(17564,214,21,NULL),(17565,213,21,NULL),(17566,210,21,NULL),(17567,210,21,NULL),(17568,209,21,NULL),(17569,207,21,NULL),(17570,207,21,NULL),(17571,206,21,NULL),(17572,205,21,NULL),(17573,205,21,NULL),(17574,203,21,NULL),(17575,202,21,NULL),(17576,202,21,NULL),(17577,200,21,NULL),(17578,200,21,NULL),(17579,199,21,NULL),(17580,199,21,NULL),(17581,198,21,NULL),(17582,198,21,NULL),(17583,191,21,NULL),(17584,191,21,NULL),(17585,190,21,NULL),(17586,190,21,NULL),(17587,187,21,NULL),(17588,187,21,NULL),(17589,179,21,NULL),(17590,179,21,NULL),(17591,172,21,NULL),(17592,172,21,NULL),(17593,171,21,NULL),(17594,169,21,NULL),(17595,169,21,NULL),(17596,168,21,NULL),(17597,167,21,NULL),(17598,167,21,NULL),(17599,165,21,NULL),(17600,164,21,NULL),(17601,164,21,NULL),(17602,162,21,NULL),(17603,153,21,NULL),(17604,153,21,NULL),(17605,152,21,NULL),(17606,151,21,NULL),(17607,151,21,NULL),(17608,150,21,NULL),(17609,150,21,NULL),(17610,148,21,NULL),(17611,147,21,NULL),(17612,147,21,NULL),(17613,145,21,NULL),(17614,145,21,NULL),(17615,144,21,NULL),(17616,144,21,NULL),(17617,141,21,NULL),(17618,141,21,NULL),(17619,137,21,NULL),(17620,137,21,NULL),(17621,136,21,NULL),(17622,136,21,NULL),(17623,134,21,NULL),(17624,134,21,NULL),(17625,131,21,NULL),(17626,129,21,NULL),(17627,128,21,NULL),(17628,125,21,NULL),(17629,121,21,NULL),(17630,120,21,NULL),(17631,120,21,NULL),(17632,112,21,NULL),(17633,112,21,NULL),(17634,110,21,NULL),(17635,107,21,NULL),(17636,104,21,NULL),(17637,102,21,NULL),(17638,100,21,NULL),(17639,98,21,NULL),(17640,98,21,NULL),(17641,94,21,NULL),(17642,90,21,NULL),(17643,88,21,NULL),(17644,83,21,NULL),(17645,82,21,NULL),(17646,81,21,NULL),(17647,79,21,NULL),(17648,78,21,NULL),(17649,78,21,NULL),(17650,77,21,NULL),(17651,75,21,NULL),(17652,75,21,NULL),(17653,74,21,NULL),(17654,74,21,NULL),(17655,70,21,NULL),(17656,70,21,NULL),(17657,69,21,NULL),(17658,67,21,NULL),(17659,67,21,NULL),(17660,66,21,NULL),(17661,64,21,NULL),(17662,64,21,NULL),(17663,63,21,NULL),(17664,62,21,NULL),(17665,62,21,NULL),(17666,58,21,NULL),(17667,56,21,NULL),(17668,56,21,NULL),(17669,55,21,NULL),(17670,53,21,NULL),(17671,53,21,NULL),(17672,49,21,NULL),(17673,48,21,NULL),(17674,48,21,NULL),(17675,47,21,NULL),(17676,46,21,NULL),(17677,45,21,NULL),(17678,45,21,NULL),(17679,43,21,NULL),(17680,42,21,NULL),(17681,42,21,NULL),(17682,41,21,NULL),(17683,40,21,NULL),(17684,40,21,NULL),(17685,39,21,NULL),(17686,35,21,NULL),(17687,35,21,NULL),(17688,34,21,NULL),(17689,34,21,NULL),(17690,33,21,NULL),(17691,28,21,NULL),(17692,28,21,NULL),(17693,27,21,NULL),(17694,27,21,NULL),(17695,26,21,NULL),(17696,26,21,NULL),(17697,24,21,NULL),(17698,24,21,NULL),(17699,22,21,NULL),(17700,22,21,NULL),(17701,21,21,NULL),(17702,21,21,NULL),(17703,20,21,NULL),(17704,20,21,NULL),(17705,19,21,NULL),(17706,19,21,NULL),(17707,17,21,NULL),(17708,15,21,NULL),(17709,13,21,NULL),(17710,11,21,NULL),(17711,9,21,NULL),(17712,7,21,NULL),(17713,4,21,NULL),(17714,3,21,NULL),(17715,2,21,NULL),(17716,1,21,NULL),(17717,3484,100,NULL),(17718,3641,100,NULL),(17719,3535,100,NULL),(17720,3624,100,NULL),(17721,3584,100,NULL),(17722,3469,100,NULL),(17723,3628,100,NULL),(17724,3505,100,NULL),(17725,3525,100,NULL),(17726,3711,100,NULL),(17727,3885,100,NULL),(17728,3421,100,NULL),(17729,3643,100,NULL),(17730,3559,100,NULL),(17731,4011,100,NULL),(17732,3477,100,NULL),(17733,3429,100,NULL),(17734,3456,100,NULL),(17735,4060,100,NULL),(17736,3468,100,NULL),(17737,3523,100,NULL),(17738,3427,100,NULL),(17739,3450,100,NULL),(17740,3463,100,NULL),(17741,3417,100,NULL),(17742,3561,100,NULL),(17743,3538,100,NULL),(17744,3419,100,NULL),(17745,3473,100,NULL),(17746,3510,100,NULL),(17747,3825,100,NULL),(17748,3465,100,NULL),(17749,5474,100,NULL),(17750,3621,100,NULL),(17751,3611,100,NULL),(17752,3472,100,NULL),(17753,3685,100,NULL),(17754,3842,100,NULL),(17755,3592,100,NULL),(17756,3964,100,NULL),(17757,4278,100,NULL),(17758,4016,100,NULL),(17759,4287,100,NULL),(17760,4238,100,NULL),(17761,3532,100,NULL),(17762,3563,100,NULL),(17763,3515,100,NULL),(17764,3635,100,NULL),(17765,3731,100,NULL),(17766,3479,100,NULL),(17767,3418,100,NULL),(17768,3416,100,NULL),(17769,3487,100,NULL),(17770,3511,100,NULL),(17771,3492,100,NULL),(17772,3474,100,NULL),(17773,3425,100,NULL),(17774,3736,100,NULL),(17775,3627,100,NULL),(17776,3826,100,NULL),(17777,3488,100,NULL),(17778,3613,100,NULL),(17779,3518,100,NULL),(17780,4737,100,NULL),(17781,4406,100,NULL),(17782,3554,100,NULL),(17783,3545,100,NULL),(17784,3575,100,NULL),(17785,3694,100,NULL),(17786,3498,100,NULL),(17787,3581,100,NULL),(17788,3524,100,NULL),(17789,3455,100,NULL),(17790,3489,100,NULL),(17791,3957,100,NULL),(17792,3770,100,NULL),(17793,4299,100,NULL),(17794,4103,100,NULL),(17795,4504,100,NULL),(17796,3459,100,NULL),(17797,3504,100,NULL),(17798,3457,100,NULL),(17799,3483,100,NULL),(17800,3830,100,NULL),(17801,3762,100,NULL),(17802,3833,100,NULL),(17803,3482,100,NULL),(17804,4941,100,NULL),(17805,4467,100,NULL),(17806,15085,100,NULL),(17807,10487,100,NULL),(17808,16579,100,NULL),(17809,16560,100,NULL),(17810,16541,100,NULL),(17811,16556,100,NULL),(17812,16570,100,NULL),(17813,16535,100,NULL),(17814,16550,100,NULL),(17815,3392,100,NULL),(17816,3345,100,NULL),(17817,3360,100,NULL),(17818,3349,100,NULL),(17819,3300,100,NULL),(17820,3285,100,NULL),(17821,3174,100,NULL),(17822,3162,100,NULL),(17823,3151,100,NULL),(17824,3110,100,NULL),(17825,3099,100,NULL),(17826,3028,100,NULL),(17827,3042,100,NULL),(17828,3005,100,NULL),(17829,2965,100,NULL),(17830,2974,100,NULL),(17831,2859,100,NULL),(17832,2824,100,NULL),(17833,2810,100,NULL),(17834,2798,100,NULL),(17835,2799,100,NULL),(17836,2778,100,NULL),(17837,2769,100,NULL),(17838,2696,100,NULL),(17839,2559,100,NULL),(17840,2595,100,NULL),(17841,2579,100,NULL),(17842,2535,100,NULL),(17843,2529,100,NULL),(17844,2523,100,NULL),(17845,2520,100,NULL),(17846,2491,100,NULL),(17847,2490,100,NULL),(17848,2485,100,NULL),(17849,2465,100,NULL),(17850,2461,100,NULL),(17851,2460,100,NULL),(17852,2441,100,NULL),(17853,2427,100,NULL),(17854,2379,100,NULL),(17855,2367,100,NULL),(17856,2270,100,NULL),(17857,2256,100,NULL),(17858,2206,100,NULL),(17859,2185,100,NULL),(17860,2161,100,NULL),(17861,2108,100,NULL),(17862,2114,100,NULL),(17863,2095,100,NULL),(17864,2073,100,NULL),(17865,2011,100,NULL),(17866,2000,100,NULL),(17867,2006,100,NULL),(17868,1991,100,NULL),(17869,1930,100,NULL),(17870,1929,100,NULL),(17871,1920,100,NULL),(17872,1910,100,NULL),(17873,1894,100,NULL),(17874,1876,100,NULL),(17875,1832,100,NULL),(17876,1823,100,NULL),(17877,1816,100,NULL),(17878,1800,100,NULL),(17879,1773,100,NULL),(17880,1769,100,NULL),(17881,1768,100,NULL),(17882,1752,100,NULL),(17883,1748,100,NULL),(17884,1688,100,NULL),(17885,1678,100,NULL),(17886,1672,100,NULL),(17887,1662,100,NULL),(17888,1614,100,NULL),(17889,1588,100,NULL),(17890,1572,100,NULL),(17891,1528,100,NULL),(17892,1518,100,NULL),(17893,1512,100,NULL),(17894,1480,100,NULL),(17895,1470,100,NULL),(17896,1455,100,NULL),(17897,1461,100,NULL),(17898,1431,100,NULL),(17899,1408,100,NULL),(17900,1413,100,NULL),(17901,1365,100,NULL),(17902,1351,100,NULL),(17903,1358,100,NULL),(17904,1343,100,NULL),(17905,1342,100,NULL),(17906,1281,100,NULL),(17907,1726,100,NULL),(17908,1221,100,NULL),(17909,2079,100,NULL),(17910,1957,100,NULL),(17911,1108,100,NULL),(17912,1025,100,NULL),(17913,1004,100,NULL),(17914,977,100,NULL),(17915,509,100,NULL),(17916,921,100,NULL),(17917,917,100,NULL),(17918,904,100,NULL),(17919,876,100,NULL),(17920,875,100,NULL),(17921,848,100,NULL),(17922,807,100,NULL),(17923,796,100,NULL),(17924,704,100,NULL),(17925,701,100,NULL),(17926,700,100,NULL),(17927,771,100,NULL),(17928,744,100,NULL),(17929,709,100,NULL),(17930,724,100,NULL),(17931,713,100,NULL),(17932,643,100,NULL),(17933,557,100,NULL),(17934,540,100,NULL),(17935,1721,100,NULL),(17936,507,100,NULL),(17937,485,100,NULL),(17938,448,100,NULL),(17939,442,100,NULL),(17940,441,100,NULL),(17941,438,100,NULL),(17942,413,100,NULL),(17943,402,100,NULL),(17944,392,100,NULL),(17945,389,100,NULL),(17946,387,100,NULL),(17947,383,100,NULL),(17948,374,100,NULL),(17949,367,100,NULL),(17950,350,100,NULL),(17951,349,100,NULL),(17952,347,100,NULL),(17953,345,100,NULL),(17954,344,100,NULL),(17955,342,100,NULL),(17956,338,100,NULL),(17957,328,100,NULL),(17958,326,100,NULL),(17959,319,100,NULL),(17960,290,100,NULL),(17961,287,100,NULL),(17962,283,100,NULL),(17963,278,100,NULL),(17964,268,100,NULL),(17965,263,100,NULL),(17966,260,100,NULL),(17967,258,100,NULL),(17968,242,100,NULL),(17969,237,100,NULL),(17970,234,100,NULL),(17971,231,100,NULL),(17972,219,100,NULL),(17973,217,100,NULL),(17974,215,100,NULL),(17975,209,100,NULL),(17976,206,100,NULL),(17977,205,100,NULL),(17978,202,100,NULL),(17979,191,100,NULL),(17980,190,100,NULL),(17981,187,100,NULL),(17982,169,100,NULL),(17983,167,100,NULL),(17984,164,100,NULL),(17985,162,100,NULL),(17986,160,100,NULL),(17987,153,100,NULL),(17988,151,100,NULL),(17989,148,100,NULL),(17990,145,100,NULL),(17991,144,100,NULL),(17992,142,100,NULL),(17993,141,100,NULL),(17994,137,100,NULL),(17995,136,100,NULL),(17996,125,100,NULL),(17997,122,100,NULL),(17998,121,100,NULL),(17999,101,100,NULL),(18000,100,100,NULL),(18001,94,100,NULL),(18002,88,100,NULL),(18003,83,100,NULL),(18004,81,100,NULL),(18005,75,100,NULL),(18006,74,100,NULL),(18007,70,100,NULL),(18008,69,100,NULL),(18009,66,100,NULL),(18010,58,100,NULL),(18011,56,100,NULL),(18012,55,100,NULL),(18013,54,100,NULL),(18014,50,100,NULL),(18015,43,100,NULL),(18016,41,100,NULL),(18017,35,100,NULL),(18018,34,100,NULL),(18019,33,100,NULL),(18020,28,100,NULL),(18021,27,100,NULL),(18022,26,100,NULL),(18023,21,100,NULL),(18024,20,100,NULL),(18025,19,100,NULL),(18026,18,100,NULL),(18027,16,100,NULL),(18028,15,100,NULL),(18029,14,100,NULL),(18030,11,100,NULL),(18031,9,100,NULL),(18032,7,100,NULL),(18033,5,100,NULL),(18034,4,100,NULL),(18035,3,100,NULL),(18036,2,100,NULL),(18037,1,100,NULL),(18038,1343,67,NULL),(18039,1004,67,NULL),(18040,509,67,NULL),(18041,881,67,NULL),(18042,713,67,NULL),(18043,561,67,NULL),(18044,416,67,NULL),(18045,413,67,NULL),(18046,409,67,NULL),(18047,389,67,NULL),(18048,287,67,NULL),(18049,268,67,NULL),(18050,231,67,NULL),(18051,219,67,NULL),(18052,206,67,NULL),(18053,203,67,NULL),(18054,191,67,NULL),(18055,190,67,NULL),(18056,179,67,NULL),(18057,151,67,NULL),(18058,141,67,NULL),(18059,137,67,NULL),(18060,136,67,NULL),(18061,54,67,NULL),(18062,53,67,NULL),(18063,31,67,NULL),(18064,29,67,NULL),(18065,26,67,NULL),(18066,20,67,NULL),(18067,1,67,NULL),(18068,16616,105,NULL),(18069,16579,105,NULL),(18070,16556,105,NULL),(18071,3407,105,NULL),(18072,3335,105,NULL),(18073,3345,105,NULL),(18074,3360,105,NULL),(18075,3248,105,NULL),(18076,3174,105,NULL),(18077,3151,105,NULL),(18078,3146,105,NULL),(18079,3105,105,NULL),(18080,3066,105,NULL),(18081,3000,105,NULL),(18082,2894,105,NULL),(18083,2798,105,NULL),(18084,2769,105,NULL),(18085,2579,105,NULL),(18086,2529,105,NULL),(18087,2485,105,NULL),(18088,2461,105,NULL),(18089,2460,105,NULL),(18090,2364,105,NULL),(18091,2185,105,NULL),(18092,2161,105,NULL),(18093,1920,105,NULL),(18094,1910,105,NULL),(18095,1876,105,NULL),(18096,1800,105,NULL),(18097,1790,105,NULL),(18098,1769,105,NULL),(18099,1780,105,NULL),(18100,1752,105,NULL),(18101,1684,105,NULL),(18102,1508,105,NULL),(18103,1726,105,NULL),(18104,2309,105,NULL),(18105,1143,105,NULL),(18106,977,105,NULL),(18107,843,105,NULL),(18108,777,105,NULL),(18109,704,105,NULL),(18110,643,105,NULL),(18111,523,105,NULL),(18112,441,105,NULL),(18113,410,105,NULL),(18114,383,105,NULL),(18115,374,105,NULL),(18116,367,105,NULL),(18117,338,105,NULL),(18118,303,105,NULL),(18119,287,105,NULL),(18120,217,105,NULL),(18121,205,105,NULL),(18122,191,105,NULL),(18123,189,105,NULL),(18124,153,105,NULL),(18125,144,105,NULL),(18126,136,105,NULL),(18127,127,105,NULL),(18128,104,105,NULL),(18129,102,105,NULL),(18130,101,105,NULL),(18131,100,105,NULL),(18132,94,105,NULL),(18133,74,105,NULL),(18134,35,105,NULL),(18135,33,105,NULL),(18136,26,105,NULL),(18137,14,105,NULL),(18138,9,105,NULL),(18139,7,105,NULL),(18140,4,105,NULL),(18141,3,105,NULL),(18142,1,105,NULL),(18143,3503,105,NULL),(18144,3416,105,NULL),(18145,4646,105,NULL),(18146,4089,105,NULL),(18147,3435,105,NULL),(18148,4903,105,NULL),(18149,3446,105,NULL),(18150,3830,105,NULL),(18151,4028,105,NULL),(18152,3762,105,NULL),(18153,3993,105,NULL),(18154,5009,105,NULL),(18155,4934,105,NULL),(18156,4649,105,NULL),(18157,3695,105,NULL),(18158,4032,105,NULL),(18159,4493,105,NULL),(18160,4767,105,NULL),(18161,4560,105,NULL),(18162,4074,105,NULL),(18163,4941,105,NULL),(18164,4170,105,NULL),(18165,4217,105,NULL),(18166,5043,105,NULL),(18167,3948,105,NULL),(18168,3417,105,NULL),(18169,4663,105,NULL),(18170,3419,105,NULL),(18171,3473,105,NULL),(18172,3510,105,NULL),(18173,4920,105,NULL),(18174,5474,105,NULL),(18175,3621,105,NULL),(18176,3472,105,NULL),(18177,5256,105,NULL),(18178,5768,105,NULL),(18179,4161,105,NULL),(18180,3728,105,NULL),(18181,4702,105,NULL),(18182,2656,95,NULL),(18183,2574,95,NULL),(18184,2554,95,NULL),(18185,2540,95,NULL),(18186,2490,95,NULL),(18187,2390,95,NULL),(18188,2352,95,NULL),(18189,2300,95,NULL),(18190,2260,95,NULL),(18191,2130,95,NULL),(18192,2095,95,NULL),(18193,2062,95,NULL),(18194,1929,95,NULL),(18195,1920,95,NULL),(18196,1859,95,NULL),(18197,1832,95,NULL),(18198,1768,95,NULL),(18199,1732,95,NULL),(18200,1679,95,NULL),(18201,1657,95,NULL),(18202,1480,95,NULL),(18203,1493,95,NULL),(18204,1470,95,NULL),(18205,1456,95,NULL),(18206,1448,95,NULL),(18207,1431,95,NULL),(18208,1372,95,NULL),(18209,1343,95,NULL),(18210,2215,95,NULL),(18211,1207,95,NULL),(18212,1137,95,NULL),(18213,1071,95,NULL),(18214,1004,95,NULL),(18215,933,95,NULL),(18216,875,95,NULL),(18217,872,95,NULL),(18218,867,95,NULL),(18219,841,95,NULL),(18220,832,95,NULL),(18221,796,95,NULL),(18222,704,95,NULL),(18223,766,95,NULL),(18224,746,95,NULL),(18225,735,95,NULL),(18226,728,95,NULL),(18227,724,95,NULL),(18228,643,95,NULL),(18229,605,95,NULL),(18230,566,95,NULL),(18231,448,95,NULL),(18232,443,95,NULL),(18233,442,95,NULL),(18234,441,95,NULL),(18235,414,95,NULL),(18236,394,95,NULL),(18237,392,95,NULL),(18238,383,95,NULL),(18239,374,95,NULL),(18240,349,95,NULL),(18241,345,95,NULL),(18242,344,95,NULL),(18243,338,95,NULL),(18244,334,95,NULL),(18245,328,95,NULL),(18246,303,95,NULL),(18247,290,95,NULL),(18248,287,95,NULL),(18249,283,95,NULL),(18250,274,95,NULL),(18251,242,95,NULL),(18252,238,95,NULL),(18253,236,95,NULL),(18254,228,95,NULL),(18255,226,95,NULL),(18256,219,95,NULL),(18257,217,95,NULL),(18258,206,95,NULL),(18259,205,95,NULL),(18260,189,95,NULL),(18261,169,95,NULL),(18262,162,95,NULL),(18263,153,95,NULL),(18264,151,95,NULL),(18265,141,95,NULL),(18266,136,95,NULL),(18267,125,95,NULL),(18268,112,95,NULL),(18269,104,95,NULL),(18270,100,95,NULL),(18271,88,95,NULL),(18272,80,95,NULL),(18273,74,95,NULL),(18274,66,95,NULL),(18275,58,95,NULL),(18276,55,95,NULL),(18277,54,95,NULL),(18278,48,95,NULL),(18279,38,95,NULL),(18280,35,95,NULL),(18281,33,95,NULL),(18282,28,95,NULL),(18283,27,95,NULL),(18284,26,95,NULL),(18285,20,95,NULL),(18286,15,95,NULL),(18287,14,95,NULL),(18288,13,95,NULL),(18289,11,95,NULL),(18290,9,95,NULL),(18291,7,95,NULL),(18292,3,95,NULL),(18293,1,95,NULL),(18294,6727,95,NULL),(18295,3356,104,NULL),(18296,2652,104,NULL),(18297,2574,104,NULL),(18298,2578,104,NULL),(18299,2579,104,NULL),(18300,2529,104,NULL),(18301,2485,104,NULL),(18302,2390,104,NULL),(18303,2206,104,NULL),(18304,1929,104,NULL),(18305,1832,104,NULL),(18306,1768,104,NULL),(18307,1780,104,NULL),(18308,1752,104,NULL),(18309,1732,104,NULL),(18310,1679,104,NULL),(18311,1539,104,NULL),(18312,1512,104,NULL),(18313,1480,104,NULL),(18314,1470,104,NULL),(18315,1464,104,NULL),(18316,1456,104,NULL),(18317,1461,104,NULL),(18318,1431,104,NULL),(18319,1358,104,NULL),(18320,1323,104,NULL),(18321,1342,104,NULL),(18322,2215,104,NULL),(18323,1252,104,NULL),(18324,1207,104,NULL),(18325,1137,104,NULL),(18326,1071,104,NULL),(18327,977,104,NULL),(18328,933,104,NULL),(18329,904,104,NULL),(18330,875,104,NULL),(18331,872,104,NULL),(18332,867,104,NULL),(18333,832,104,NULL),(18334,796,104,NULL),(18335,700,104,NULL),(18336,766,104,NULL),(18337,746,104,NULL),(18338,709,104,NULL),(18339,724,104,NULL),(18340,643,104,NULL),(18341,605,104,NULL),(18342,566,104,NULL),(18343,542,104,NULL),(18344,443,104,NULL),(18345,442,104,NULL),(18346,441,104,NULL),(18347,412,104,NULL),(18348,392,104,NULL),(18349,383,104,NULL),(18350,374,104,NULL),(18351,345,104,NULL),(18352,344,104,NULL),(18353,338,104,NULL),(18354,334,104,NULL),(18355,328,104,NULL),(18356,290,104,NULL),(18357,283,104,NULL),(18358,268,104,NULL),(18359,242,104,NULL),(18360,238,104,NULL),(18361,228,104,NULL),(18362,219,104,NULL),(18363,217,104,NULL),(18364,206,104,NULL),(18365,205,104,NULL),(18366,202,104,NULL),(18367,189,104,NULL),(18368,169,104,NULL),(18369,167,104,NULL),(18370,162,104,NULL),(18371,153,104,NULL),(18372,151,104,NULL),(18373,141,104,NULL),(18374,136,104,NULL),(18375,125,104,NULL),(18376,121,104,NULL),(18377,104,104,NULL),(18378,100,104,NULL),(18379,88,104,NULL),(18380,80,104,NULL),(18381,74,104,NULL),(18382,69,104,NULL),(18383,62,104,NULL),(18384,58,104,NULL),(18385,46,104,NULL),(18386,36,104,NULL),(18387,28,104,NULL),(18388,27,104,NULL),(18389,26,104,NULL),(18390,20,104,NULL),(18391,15,104,NULL),(18392,14,104,NULL),(18393,13,104,NULL),(18394,12,104,NULL),(18395,11,104,NULL),(18396,9,104,NULL),(18397,7,104,NULL),(18398,1,104,NULL),(18399,3635,63,NULL),(18400,3492,63,NULL),(18401,3484,63,NULL),(18402,3632,63,NULL),(18403,3469,63,NULL),(18404,3468,63,NULL),(18405,3417,63,NULL),(18406,3419,63,NULL),(18407,3510,63,NULL),(18408,5474,63,NULL),(18409,4941,63,NULL),(18410,15085,63,NULL),(18411,10487,63,NULL),(18412,3407,101,NULL),(18413,3345,101,NULL),(18414,3160,101,NULL),(18415,3151,101,NULL),(18416,3110,101,NULL),(18417,3105,101,NULL),(18418,3000,101,NULL),(18419,2486,101,NULL),(18420,2461,101,NULL),(18421,2349,101,NULL),(18422,2119,101,NULL),(18423,2053,101,NULL),(18424,2037,101,NULL),(18425,2011,101,NULL),(18426,1980,101,NULL),(18427,1910,101,NULL),(18428,1876,101,NULL),(18429,1800,101,NULL),(18430,1790,101,NULL),(18431,1768,101,NULL),(18432,1780,101,NULL),(18433,1752,101,NULL),(18434,1749,101,NULL),(18435,1423,101,NULL),(18436,1431,101,NULL),(18437,1415,101,NULL),(18438,1365,101,NULL),(18439,1295,101,NULL),(18440,1266,101,NULL),(18441,1261,101,NULL),(18442,1726,101,NULL),(18443,1122,101,NULL),(18444,1051,101,NULL),(18445,1004,101,NULL),(18446,1002,101,NULL),(18447,977,101,NULL),(18448,974,101,NULL),(18449,945,101,NULL),(18450,875,101,NULL),(18451,873,101,NULL),(18452,846,101,NULL),(18453,845,101,NULL),(18454,843,101,NULL),(18455,704,101,NULL),(18456,648,101,NULL),(18457,643,101,NULL),(18458,633,101,NULL),(18459,523,101,NULL),(18460,502,101,NULL),(18461,485,101,NULL),(18462,448,101,NULL),(18463,441,101,NULL),(18464,409,101,NULL),(18465,374,101,NULL),(18466,371,101,NULL),(18467,367,101,NULL),(18468,344,101,NULL),(18469,330,101,NULL),(18470,303,101,NULL),(18471,292,101,NULL),(18472,287,101,NULL),(18473,268,101,NULL),(18474,263,101,NULL),(18475,258,101,NULL),(18476,242,101,NULL),(18477,231,101,NULL),(18478,219,101,NULL),(18479,217,101,NULL),(18480,209,101,NULL),(18481,202,101,NULL),(18482,190,101,NULL),(18483,189,101,NULL),(18484,153,101,NULL),(18485,145,101,NULL),(18486,144,101,NULL),(18487,136,101,NULL),(18488,121,101,NULL),(18489,75,101,NULL),(18490,66,101,NULL),(18491,58,101,NULL),(18492,54,101,NULL),(18493,50,101,NULL),(18494,35,101,NULL),(18495,33,101,NULL),(18496,28,101,NULL),(18497,26,101,NULL),(18498,15,101,NULL),(18499,14,101,NULL),(18500,13,101,NULL),(18501,9,101,NULL),(18502,7,101,NULL),(18503,4,101,NULL),(18504,3,101,NULL),(18505,1,101,NULL),(18506,3431,101,NULL),(18507,3525,101,NULL),(18508,5346,101,NULL),(18509,4907,101,NULL),(18510,3439,101,NULL),(18511,3621,101,NULL),(18512,4100,101,NULL),(18513,3541,101,NULL),(18514,4450,101,NULL),(18515,4732,101,NULL),(18516,5419,101,NULL),(18517,4493,101,NULL),(18518,5171,101,NULL),(18519,5144,101,NULL),(18520,4088,101,NULL),(18521,3889,101,NULL),(18522,5868,101,NULL),(18523,5181,101,NULL),(18524,3571,101,NULL),(18525,3151,110,NULL),(18526,3105,110,NULL),(18527,2461,110,NULL),(18528,1876,110,NULL),(18529,1800,110,NULL),(18530,1790,110,NULL),(18531,1752,110,NULL),(18532,1343,110,NULL),(18533,643,110,NULL),(18534,287,110,NULL),(18535,217,110,NULL),(18536,189,110,NULL),(18537,121,110,NULL),(18538,88,110,NULL),(18539,83,110,NULL),(18540,70,110,NULL),(18541,69,110,NULL),(18542,67,110,NULL),(18543,66,110,NULL),(18544,58,110,NULL),(18545,35,110,NULL),(18546,28,110,NULL),(18547,27,110,NULL),(18548,26,110,NULL),(18549,21,110,NULL),(18550,20,110,NULL),(18551,14,110,NULL),(18552,13,110,NULL),(18553,9,110,NULL),(18554,1,110,NULL),(18555,17408,108,NULL),(18556,16620,108,NULL),(18557,17409,108,NULL),(18558,16595,108,NULL),(18559,16579,108,NULL),(18560,16560,108,NULL),(18561,16556,108,NULL),(18562,16570,108,NULL),(18563,16645,108,NULL),(18564,3411,108,NULL),(18565,3402,108,NULL),(18566,3392,108,NULL),(18567,3394,108,NULL),(18568,3396,108,NULL),(18569,3364,108,NULL),(18570,3356,108,NULL),(18571,3412,108,NULL),(18572,3345,108,NULL),(18573,3360,108,NULL),(18574,3375,108,NULL),(18575,3354,108,NULL),(18576,3300,108,NULL),(18577,3304,108,NULL),(18578,3306,108,NULL),(18579,3272,108,NULL),(18580,3222,108,NULL),(18581,3301,108,NULL),(18582,3208,108,NULL),(18583,3191,108,NULL),(18584,3223,108,NULL),(18585,3174,108,NULL),(18586,3160,108,NULL),(18587,3169,108,NULL),(18588,3151,108,NULL),(18589,3105,108,NULL),(18590,3108,108,NULL),(18591,3066,108,NULL),(18592,2999,108,NULL),(18593,2965,108,NULL),(18594,2962,108,NULL),(18595,2873,108,NULL),(18596,2874,108,NULL),(18597,2818,108,NULL),(18598,2843,108,NULL),(18599,2845,108,NULL),(18600,2780,108,NULL),(18601,2799,108,NULL),(18602,2698,108,NULL),(18603,2696,108,NULL),(18604,2685,108,NULL),(18605,2672,108,NULL),(18606,2656,108,NULL),(18607,2652,108,NULL),(18608,2574,108,NULL),(18609,2570,108,NULL),(18610,2563,108,NULL),(18611,2559,108,NULL),(18612,2560,108,NULL),(18613,2661,108,NULL),(18614,2551,108,NULL),(18615,2594,108,NULL),(18616,2595,108,NULL),(18617,2578,108,NULL),(18618,2579,108,NULL),(18619,2554,108,NULL),(18620,2544,108,NULL),(18621,2537,108,NULL),(18622,2535,108,NULL),(18623,2529,108,NULL),(18624,2523,108,NULL),(18625,2506,108,NULL),(18626,2503,108,NULL),(18627,2490,108,NULL),(18628,2485,108,NULL),(18629,2467,108,NULL),(18630,2460,108,NULL),(18631,2444,108,NULL),(18632,2401,108,NULL),(18633,2342,108,NULL),(18634,2390,108,NULL),(18635,2379,108,NULL),(18636,2375,108,NULL),(18637,2364,108,NULL),(18638,2349,108,NULL),(18639,2352,108,NULL),(18640,2338,108,NULL),(18641,2335,108,NULL),(18642,2302,108,NULL),(18643,2300,108,NULL),(18644,2260,108,NULL),(18645,2220,108,NULL),(18646,2206,108,NULL),(18647,2179,108,NULL),(18648,2176,108,NULL),(18649,2161,108,NULL),(18650,2140,108,NULL),(18651,2145,108,NULL),(18652,2130,108,NULL),(18653,2115,108,NULL),(18654,2095,108,NULL),(18655,2062,108,NULL),(18656,2071,108,NULL),(18657,2033,108,NULL),(18658,2017,108,NULL),(18659,1980,108,NULL),(18660,1976,108,NULL),(18661,1945,108,NULL),(18662,1929,108,NULL),(18663,1922,108,NULL),(18664,1920,108,NULL),(18665,1910,108,NULL),(18666,1863,108,NULL),(18667,1859,108,NULL),(18668,1832,108,NULL),(18669,1800,108,NULL),(18670,1790,108,NULL),(18671,1768,108,NULL),(18672,1780,108,NULL),(18673,1752,108,NULL),(18674,1749,108,NULL),(18675,1725,108,NULL),(18676,1732,108,NULL),(18677,1718,108,NULL),(18678,1679,108,NULL),(18679,1672,108,NULL),(18680,1657,108,NULL),(18681,1614,108,NULL),(18682,1582,108,NULL),(18683,1590,108,NULL),(18684,1572,108,NULL),(18685,1534,108,NULL),(18686,1539,108,NULL),(18687,1512,108,NULL),(18688,1524,108,NULL),(18689,1486,108,NULL),(18690,1480,108,NULL),(18691,1493,108,NULL),(18692,1470,108,NULL),(18693,1464,108,NULL),(18694,1456,108,NULL),(18695,1461,108,NULL),(18696,1448,108,NULL),(18697,1423,108,NULL),(18698,1422,108,NULL),(18699,1431,108,NULL),(18700,1415,108,NULL),(18701,1399,108,NULL),(18702,1352,108,NULL),(18703,1351,108,NULL),(18704,1346,108,NULL),(18705,1358,108,NULL),(18706,1323,108,NULL),(18707,1343,108,NULL),(18708,1342,108,NULL),(18709,1318,108,NULL),(18710,1304,108,NULL),(18711,1295,108,NULL),(18712,2215,108,NULL),(18713,1261,108,NULL),(18714,1260,108,NULL),(18715,1252,108,NULL),(18716,1726,108,NULL),(18717,2226,108,NULL),(18718,1207,108,NULL),(18719,1957,108,NULL),(18720,1550,108,NULL),(18721,1137,108,NULL),(18722,1128,108,NULL),(18723,1123,108,NULL),(18724,1092,108,NULL),(18725,1079,108,NULL),(18726,1071,108,NULL),(18727,1028,108,NULL),(18728,1007,108,NULL),(18729,1005,108,NULL),(18730,1004,108,NULL),(18731,977,108,NULL),(18732,976,108,NULL),(18733,974,108,NULL),(18734,933,108,NULL),(18735,904,108,NULL),(18736,901,108,NULL),(18737,889,108,NULL),(18738,875,108,NULL),(18739,873,108,NULL),(18740,872,108,NULL),(18741,867,108,NULL),(18742,848,108,NULL),(18743,838,108,NULL),(18744,832,108,NULL),(18745,796,108,NULL),(18746,790,108,NULL),(18747,781,108,NULL),(18748,704,108,NULL),(18749,700,108,NULL),(18750,766,108,NULL),(18751,763,108,NULL),(18752,746,108,NULL),(18753,709,108,NULL),(18754,739,108,NULL),(18755,735,108,NULL),(18756,724,108,NULL),(18757,713,108,NULL),(18758,693,108,NULL),(18759,678,108,NULL),(18760,643,108,NULL),(18761,628,108,NULL),(18762,605,108,NULL),(18763,566,108,NULL),(18764,561,108,NULL),(18765,560,108,NULL),(18766,525,108,NULL),(18767,506,108,NULL),(18768,485,108,NULL),(18769,450,108,NULL),(18770,448,108,NULL),(18771,443,108,NULL),(18772,442,108,NULL),(18773,435,108,NULL),(18774,416,108,NULL),(18775,412,108,NULL),(18776,394,108,NULL),(18777,392,108,NULL),(18778,380,108,NULL),(18779,374,108,NULL),(18780,368,108,NULL),(18781,367,108,NULL),(18782,350,108,NULL),(18783,349,108,NULL),(18784,345,108,NULL),(18785,344,108,NULL),(18786,338,108,NULL),(18787,334,108,NULL),(18788,328,108,NULL),(18789,303,108,NULL),(18790,290,108,NULL),(18791,287,108,NULL),(18792,283,108,NULL),(18793,274,108,NULL),(18794,268,108,NULL),(18795,242,108,NULL),(18796,240,108,NULL),(18797,239,108,NULL),(18798,238,108,NULL),(18799,228,108,NULL),(18800,226,108,NULL),(18801,219,108,NULL),(18802,217,108,NULL),(18803,215,108,NULL),(18804,209,108,NULL),(18805,206,108,NULL),(18806,205,108,NULL),(18807,202,108,NULL),(18808,198,108,NULL),(18809,189,108,NULL),(18810,169,108,NULL),(18811,167,108,NULL),(18812,164,108,NULL),(18813,162,108,NULL),(18814,153,108,NULL),(18815,152,108,NULL),(18816,151,108,NULL),(18817,144,108,NULL),(18818,136,108,NULL),(18819,128,108,NULL),(18820,125,108,NULL),(18821,122,108,NULL),(18822,121,108,NULL),(18823,119,108,NULL),(18824,118,108,NULL),(18825,104,108,NULL),(18826,101,108,NULL),(18827,100,108,NULL),(18828,94,108,NULL),(18829,88,108,NULL),(18830,83,108,NULL),(18831,80,108,NULL),(18832,74,108,NULL),(18833,70,108,NULL),(18834,69,108,NULL),(18835,67,108,NULL),(18836,66,108,NULL),(18837,58,108,NULL),(18838,55,108,NULL),(18839,54,108,NULL),(18840,53,108,NULL),(18841,49,108,NULL),(18842,48,108,NULL),(18843,45,108,NULL),(18844,38,108,NULL),(18845,35,108,NULL),(18846,34,108,NULL),(18847,33,108,NULL),(18848,31,108,NULL),(18849,28,108,NULL),(18850,27,108,NULL),(18851,26,108,NULL),(18852,21,108,NULL),(18853,20,108,NULL),(18854,18,108,NULL),(18855,16,108,NULL),(18856,15,108,NULL),(18857,14,108,NULL),(18858,13,108,NULL),(18859,12,108,NULL),(18860,11,108,NULL),(18861,9,108,NULL),(18862,8,108,NULL),(18863,7,108,NULL),(18864,5,108,NULL),(18865,3,108,NULL),(18866,2,108,NULL),(18867,1,108,NULL),(18868,3532,108,NULL),(18869,3501,108,NULL),(18870,3442,108,NULL),(18871,3502,108,NULL),(18872,3635,108,NULL),(18873,3466,108,NULL),(18874,3438,108,NULL),(18875,3537,108,NULL),(18876,3471,108,NULL),(18877,3731,108,NULL),(18878,3476,108,NULL),(18879,3458,108,NULL),(18880,3445,108,NULL),(18881,3418,108,NULL),(18882,3424,108,NULL),(18883,3428,108,NULL),(18884,3712,108,NULL),(18885,3462,108,NULL),(18886,3416,108,NULL),(18887,3487,108,NULL),(18888,3492,108,NULL),(18889,3723,108,NULL),(18890,3507,108,NULL),(18891,3474,108,NULL),(18892,3583,108,NULL),(18893,3449,108,NULL),(18894,3467,108,NULL),(18895,4013,108,NULL),(18896,3420,108,NULL),(18897,3691,108,NULL),(18898,3425,108,NULL),(18899,4198,108,NULL),(18900,3852,108,NULL),(18901,3656,108,NULL),(18902,3582,108,NULL),(18903,3423,108,NULL),(18904,3767,108,NULL),(18905,4165,108,NULL),(18906,3534,108,NULL),(18907,3860,108,NULL),(18908,3448,108,NULL),(18909,3478,108,NULL),(18910,3709,108,NULL),(18911,3826,108,NULL),(18912,3713,108,NULL),(18913,3612,108,NULL),(18914,3488,108,NULL),(18915,3426,108,NULL),(18916,3514,108,NULL),(18917,4247,108,NULL),(18918,3598,108,NULL),(18919,4370,108,NULL),(18920,4925,108,NULL),(18921,4026,108,NULL),(18922,3782,108,NULL),(18923,3753,108,NULL),(18924,4501,108,NULL),(18925,4479,108,NULL),(18926,4660,108,NULL),(18927,4603,108,NULL),(18928,4513,108,NULL),(18929,4166,108,NULL),(18930,4598,108,NULL),(18931,6355,108,NULL),(18932,6289,108,NULL),(18933,4512,108,NULL),(18934,4272,108,NULL),(18935,16678,108,NULL),(18936,3484,108,NULL),(18937,3500,108,NULL),(18938,3521,108,NULL),(18939,3505,108,NULL),(18940,3431,108,NULL),(18941,3876,108,NULL),(18942,5373,108,NULL),(18943,5762,108,NULL),(18944,3983,108,NULL),(18945,3421,108,NULL),(18946,3566,108,NULL),(18947,3643,108,NULL),(18948,4052,108,NULL),(18949,3765,108,NULL),(18950,5713,108,NULL),(18951,3863,108,NULL),(18952,3972,108,NULL),(18953,4271,108,NULL),(18954,3904,108,NULL),(18955,4027,108,NULL),(18956,4188,108,NULL),(18957,3788,108,NULL),(18958,3785,108,NULL),(18959,4404,108,NULL),(18960,3452,108,NULL),(18961,3529,108,NULL),(18962,3477,108,NULL),(18963,3429,108,NULL),(18964,3422,108,NULL),(18965,3456,108,NULL),(18966,3464,108,NULL),(18967,3548,108,NULL),(18968,3468,108,NULL),(18969,3523,108,NULL),(18970,3427,108,NULL),(18971,3519,108,NULL),(18972,3450,108,NULL),(18973,4205,108,NULL),(18974,3463,108,NULL),(18975,3417,108,NULL),(18976,3536,108,NULL),(18977,3599,108,NULL),(18978,3561,108,NULL),(18979,3432,108,NULL),(18980,3750,108,NULL),(18981,3453,108,NULL),(18982,3680,108,NULL),(18983,3626,108,NULL),(18984,3522,108,NULL),(18985,5191,108,NULL),(18986,4149,108,NULL),(18987,3696,108,NULL),(18988,4907,108,NULL),(18989,3684,108,NULL),(18990,3419,108,NULL),(18991,3473,108,NULL),(18992,3510,108,NULL),(18993,3553,108,NULL),(18994,4156,108,NULL),(18995,3825,108,NULL),(18996,3894,108,NULL),(18997,3439,108,NULL),(18998,4608,108,NULL),(18999,3579,108,NULL),(19000,4220,108,NULL),(19001,3465,108,NULL),(19002,3881,108,NULL),(19003,3472,108,NULL),(19004,5223,108,NULL),(19005,5846,108,NULL),(19006,4113,108,NULL),(19007,4206,108,NULL),(19008,4403,108,NULL),(19009,4532,108,NULL),(19010,4639,108,NULL),(19011,5802,108,NULL),(19012,4415,108,NULL),(19013,6349,108,NULL),(19014,6311,108,NULL),(19015,16722,108,NULL),(19016,5383,108,NULL),(19017,5651,108,NULL),(19018,5964,108,NULL),(19019,3435,108,NULL),(19020,3587,108,NULL),(19021,4791,108,NULL),(19022,5337,108,NULL),(19023,5729,108,NULL),(19024,5040,108,NULL),(19025,6172,108,NULL),(19026,5993,108,NULL),(19027,5269,108,NULL),(19028,5931,108,NULL),(19029,3800,108,NULL),(19030,3475,108,NULL),(19031,3455,108,NULL),(19032,3761,108,NULL),(19033,3446,108,NULL),(19034,3714,108,NULL),(19035,3820,108,NULL),(19036,3841,108,NULL),(19037,3924,108,NULL),(19038,3459,108,NULL),(19039,3504,108,NULL),(19040,3925,108,NULL),(19041,3457,108,NULL),(19042,4572,108,NULL),(19043,3789,108,NULL),(19044,3741,108,NULL),(19045,3483,108,NULL),(19046,3923,108,NULL),(19047,5147,108,NULL),(19048,4412,108,NULL),(19049,4430,108,NULL),(19050,4801,108,NULL),(19051,5967,108,NULL),(19052,4028,108,NULL),(19053,4286,108,NULL),(19054,3669,108,NULL),(19055,3749,108,NULL),(19056,4456,108,NULL),(19057,4987,108,NULL),(19058,4649,108,NULL),(19059,4612,108,NULL),(19060,4261,108,NULL),(19061,4982,108,NULL),(19062,4754,108,NULL),(19063,4927,108,NULL),(19064,4763,108,NULL),(19065,5080,108,NULL),(19066,5699,108,NULL),(19067,3971,108,NULL),(19068,5551,108,NULL),(19069,5527,108,NULL),(19070,5229,108,NULL),(19071,3572,108,NULL),(19072,3829,108,NULL),(19073,3654,108,NULL),(19074,3443,108,NULL),(19075,3673,108,NULL),(19076,3818,108,NULL),(19077,3843,108,NULL),(19078,3944,108,NULL),(19079,16545,114,NULL),(19080,16550,114,NULL),(19081,3345,114,NULL),(19082,3194,114,NULL),(19083,3110,114,NULL),(19084,2652,114,NULL),(19085,2485,114,NULL),(19086,2465,114,NULL),(19087,2235,114,NULL),(19088,2024,114,NULL),(19089,1979,114,NULL),(19090,1952,114,NULL),(19091,1929,114,NULL),(19092,1920,114,NULL),(19093,1838,114,NULL),(19094,1752,114,NULL),(19095,1652,114,NULL),(19096,1470,114,NULL),(19097,1423,114,NULL),(19098,1343,114,NULL),(19099,658,114,NULL),(19100,628,114,NULL),(19101,507,114,NULL),(19102,485,114,NULL),(19103,217,114,NULL),(19104,209,114,NULL),(19105,189,114,NULL),(19106,121,114,NULL),(19107,74,114,NULL),(19108,69,114,NULL),(19109,58,114,NULL),(19110,35,114,NULL),(19111,28,114,NULL),(19112,27,114,NULL),(19113,26,114,NULL),(19114,9,114,NULL),(19115,1,114,NULL),(19116,509,115,NULL),(19117,611,115,NULL),(19118,409,115,NULL),(19119,371,115,NULL),(19120,342,115,NULL),(19121,326,115,NULL),(19122,287,115,NULL),(19123,263,115,NULL),(19124,258,115,NULL),(19125,231,115,NULL),(19126,217,115,NULL),(19127,179,115,NULL),(19128,136,115,NULL),(19129,70,115,NULL),(19130,69,115,NULL),(19131,67,115,NULL),(19132,55,115,NULL),(19133,50,115,NULL),(19134,45,115,NULL),(19135,42,115,NULL),(19136,29,115,NULL),(19137,11,115,NULL),(19138,2,115,NULL),(19139,1,115,NULL),(19140,3483,114,NULL),(19141,3923,114,NULL),(19142,4028,114,NULL),(19143,3762,114,NULL),(19144,4286,114,NULL),(19145,3669,114,NULL),(19146,3749,114,NULL),(19147,4456,114,NULL),(19148,4934,114,NULL),(19149,4982,114,NULL),(19150,16750,114,NULL),(19151,16734,114,NULL),(19152,3863,114,NULL),(19153,3972,114,NULL),(19154,4271,114,NULL),(19155,3904,114,NULL),(19156,4027,114,NULL),(19157,4188,114,NULL),(19158,3788,114,NULL),(19159,4439,114,NULL),(19160,4796,114,NULL),(19161,4848,114,NULL),(19162,4070,114,NULL),(19163,3970,114,NULL),(19164,4306,114,NULL),(19165,4375,114,NULL),(19166,16585,64,NULL),(19167,16541,64,NULL),(19168,16545,64,NULL),(19169,3370,64,NULL),(19170,3396,64,NULL),(19171,3340,64,NULL),(19172,3375,64,NULL),(19173,3330,64,NULL),(19174,3289,64,NULL),(19175,3272,64,NULL),(19176,3222,64,NULL),(19177,3208,64,NULL),(19178,3190,64,NULL),(19179,3191,64,NULL),(19180,3194,64,NULL),(19181,3211,64,NULL),(19182,3163,64,NULL),(19183,3174,64,NULL),(19184,3162,64,NULL),(19185,3160,64,NULL),(19186,3151,64,NULL),(19187,3131,64,NULL),(19188,3110,64,NULL),(19189,3105,64,NULL),(19190,3066,64,NULL),(19191,3043,64,NULL),(19192,3019,64,NULL),(19193,3042,64,NULL),(19194,3014,64,NULL),(19195,2999,64,NULL),(19196,2965,64,NULL),(19197,2974,64,NULL),(19198,2938,64,NULL),(19199,2942,64,NULL),(19200,2873,64,NULL),(19201,2874,64,NULL),(19202,2864,64,NULL),(19203,2843,64,NULL),(19204,2828,64,NULL),(19205,2824,64,NULL),(19206,2807,64,NULL),(19207,2698,64,NULL),(19208,2696,64,NULL),(19209,2657,64,NULL),(19210,2659,64,NULL),(19211,2706,64,NULL),(19212,2610,64,NULL),(19213,2574,64,NULL),(19214,2570,64,NULL),(19215,2563,64,NULL),(19216,2551,64,NULL),(19217,2550,64,NULL),(19218,2579,64,NULL),(19219,2545,64,NULL),(19220,2537,64,NULL),(19221,2530,64,NULL),(19222,2529,64,NULL),(19223,2523,64,NULL),(19224,2467,64,NULL),(19225,2469,64,NULL),(19226,2460,64,NULL),(19227,2418,64,NULL),(19228,2415,64,NULL),(19229,2413,64,NULL),(19230,2396,64,NULL),(19231,2401,64,NULL),(19232,2342,64,NULL),(19233,2381,64,NULL),(19234,2379,64,NULL),(19235,2375,64,NULL),(19236,2364,64,NULL),(19237,2357,64,NULL),(19238,2349,64,NULL),(19239,2325,64,NULL),(19240,2235,64,NULL),(19241,2220,64,NULL),(19242,2190,64,NULL),(19243,2182,64,NULL),(19244,2181,64,NULL),(19245,2185,64,NULL),(19246,2179,64,NULL),(19247,2176,64,NULL),(19248,2161,64,NULL),(19249,2140,64,NULL),(19250,2125,64,NULL),(19251,2130,64,NULL),(19252,2078,64,NULL),(19253,2064,64,NULL),(19254,2033,64,NULL),(19255,2032,64,NULL),(19256,2028,64,NULL),(19257,2027,64,NULL),(19258,2011,64,NULL),(19259,2000,64,NULL),(19260,2006,64,NULL),(19261,1980,64,NULL),(19262,1963,64,NULL),(19263,1945,64,NULL),(19264,1929,64,NULL),(19265,1922,64,NULL),(19266,1920,64,NULL),(19267,1903,64,NULL),(19268,1910,64,NULL),(19269,1863,64,NULL),(19270,1876,64,NULL),(19271,1833,64,NULL),(19272,1823,64,NULL),(19273,1816,64,NULL),(19274,1800,64,NULL),(19275,1791,64,NULL),(19276,1790,64,NULL),(19277,1773,64,NULL),(19278,1769,64,NULL),(19279,1780,64,NULL),(19280,1752,64,NULL),(19281,1749,64,NULL),(19282,1718,64,NULL),(19283,1688,64,NULL),(19284,1678,64,NULL),(19285,1672,64,NULL),(19286,1684,64,NULL),(19287,1662,64,NULL),(19288,1668,64,NULL),(19289,1652,64,NULL),(19290,1636,64,NULL),(19291,1588,64,NULL),(19292,1574,64,NULL),(19293,1551,64,NULL),(19294,1534,64,NULL),(19295,1528,64,NULL),(19296,1512,64,NULL),(19297,1524,64,NULL),(19298,1508,64,NULL),(19299,1480,64,NULL),(19300,1470,64,NULL),(19301,1464,64,NULL),(19302,1441,64,NULL),(19303,1423,64,NULL),(19304,1408,64,NULL),(19305,1415,64,NULL),(19306,1365,64,NULL),(19307,1352,64,NULL),(19308,1323,64,NULL),(19309,1343,64,NULL),(19310,1290,64,NULL),(19311,1261,64,NULL),(19312,1726,64,NULL),(19313,1233,64,NULL),(19314,1405,64,NULL),(19315,1328,64,NULL),(19316,1143,64,NULL),(19317,1123,64,NULL),(19318,1122,64,NULL),(19319,1092,64,NULL),(19320,1079,64,NULL),(19321,1051,64,NULL),(19322,1028,64,NULL),(19323,1025,64,NULL),(19324,1018,64,NULL),(19325,1011,64,NULL),(19326,991,64,NULL),(19327,980,64,NULL),(19328,977,64,NULL),(19329,976,64,NULL),(19330,974,64,NULL),(19331,509,64,NULL),(19332,962,64,NULL),(19333,950,64,NULL),(19334,921,64,NULL),(19335,916,64,NULL),(19336,889,64,NULL),(19337,881,64,NULL),(19338,876,64,NULL),(19339,875,64,NULL),(19340,873,64,NULL),(19341,867,64,NULL),(19342,860,64,NULL),(19343,852,64,NULL),(19344,832,64,NULL),(19345,824,64,NULL),(19346,821,64,NULL),(19347,804,64,NULL),(19348,796,64,NULL),(19349,779,64,NULL),(19350,704,64,NULL),(19351,700,64,NULL),(19352,771,64,NULL),(19353,766,64,NULL),(19354,590,64,NULL),(19355,589,64,NULL),(19356,559,64,NULL),(19357,765,64,NULL),(19358,761,64,NULL),(19359,746,64,NULL),(19360,740,64,NULL),(19361,738,64,NULL),(19362,733,64,NULL),(19363,693,64,NULL),(19364,658,64,NULL),(19365,657,64,NULL),(19366,643,64,NULL),(19367,605,64,NULL),(19368,599,64,NULL),(19369,567,64,NULL),(19370,566,64,NULL),(19371,561,64,NULL),(19372,560,64,NULL),(19373,557,64,NULL),(19374,551,64,NULL),(19375,541,64,NULL),(19376,518,64,NULL),(19377,496,64,NULL),(19378,495,64,NULL),(19379,486,64,NULL),(19380,463,64,NULL),(19381,455,64,NULL),(19382,451,64,NULL),(19383,448,64,NULL),(19384,442,64,NULL),(19385,441,64,NULL),(19386,438,64,NULL),(19387,420,64,NULL),(19388,416,64,NULL),(19389,413,64,NULL),(19390,410,64,NULL),(19391,409,64,NULL),(19392,404,64,NULL),(19393,394,64,NULL),(19394,392,64,NULL),(19395,390,64,NULL),(19396,389,64,NULL),(19397,387,64,NULL),(19398,383,64,NULL),(19399,374,64,NULL),(19400,371,64,NULL),(19401,368,64,NULL),(19402,367,64,NULL),(19403,355,64,NULL),(19404,350,64,NULL),(19405,349,64,NULL),(19406,345,64,NULL),(19407,342,64,NULL),(19408,326,64,NULL),(19409,322,64,NULL),(19410,306,64,NULL),(19411,303,64,NULL),(19412,299,64,NULL),(19413,292,64,NULL),(19414,290,64,NULL),(19415,287,64,NULL),(19416,283,64,NULL),(19417,268,64,NULL),(19418,263,64,NULL),(19419,260,64,NULL),(19420,258,64,NULL),(19421,257,64,NULL),(19422,242,64,NULL),(19423,241,64,NULL),(19424,239,64,NULL),(19425,237,64,NULL),(19426,234,64,NULL),(19427,232,64,NULL),(19428,231,64,NULL),(19429,228,64,NULL),(19430,225,64,NULL),(19431,222,64,NULL),(19432,219,64,NULL),(19433,217,64,NULL),(19434,213,64,NULL),(19435,209,64,NULL),(19436,206,64,NULL),(19437,205,64,NULL),(19438,203,64,NULL),(19439,202,64,NULL),(19440,200,64,NULL),(19441,199,64,NULL),(19442,198,64,NULL),(19443,191,64,NULL),(19444,190,64,NULL),(19445,189,64,NULL),(19446,171,64,NULL),(19447,169,64,NULL),(19448,168,64,NULL),(19449,167,64,NULL),(19450,160,64,NULL),(19451,155,64,NULL),(19452,153,64,NULL),(19453,145,64,NULL),(19454,144,64,NULL),(19455,141,64,NULL),(19456,137,64,NULL),(19457,136,64,NULL),(19458,135,64,NULL),(19459,125,64,NULL),(19460,121,64,NULL),(19461,119,64,NULL),(19462,118,64,NULL),(19463,112,64,NULL),(19464,111,64,NULL),(19465,110,64,NULL),(19466,108,64,NULL),(19467,105,64,NULL),(19468,104,64,NULL),(19469,103,64,NULL),(19470,102,64,NULL),(19471,101,64,NULL),(19472,100,64,NULL),(19473,94,64,NULL),(19474,88,64,NULL),(19475,86,64,NULL),(19476,83,64,NULL),(19477,78,64,NULL),(19478,74,64,NULL),(19479,72,64,NULL),(19480,70,64,NULL),(19481,69,64,NULL),(19482,67,64,NULL),(19483,66,64,NULL),(19484,58,64,NULL),(19485,55,64,NULL),(19486,53,64,NULL),(19487,52,64,NULL),(19488,51,64,NULL),(19489,50,64,NULL),(19490,49,64,NULL),(19491,48,64,NULL),(19492,46,64,NULL),(19493,45,64,NULL),(19494,42,64,NULL),(19495,41,64,NULL),(19496,38,64,NULL),(19497,35,64,NULL),(19498,34,64,NULL),(19499,33,64,NULL),(19500,31,64,NULL),(19501,29,64,NULL),(19502,28,64,NULL),(19503,27,64,NULL),(19504,26,64,NULL),(19505,25,64,NULL),(19506,24,64,NULL),(19507,23,64,NULL),(19508,21,64,NULL),(19509,20,64,NULL),(19510,14,64,NULL),(19511,13,64,NULL),(19512,11,64,NULL),(19513,9,64,NULL),(19514,4,64,NULL),(19515,3,64,NULL),(19516,2,64,NULL),(19517,1,64,NULL),(19518,16545,116,NULL),(19519,3364,116,NULL),(19520,3345,116,NULL),(19521,3360,116,NULL),(19522,3375,116,NULL),(19523,3349,116,NULL),(19524,3300,116,NULL),(19525,3314,116,NULL),(19526,3304,116,NULL),(19527,3334,116,NULL),(19528,3285,116,NULL),(19529,3289,116,NULL),(19530,3324,116,NULL),(19531,3295,116,NULL),(19532,3190,116,NULL),(19533,3174,116,NULL),(19534,3162,116,NULL),(19535,3160,116,NULL),(19536,3151,116,NULL),(19537,3131,116,NULL),(19538,3105,116,NULL),(19539,3074,116,NULL),(19540,3066,116,NULL),(19541,3042,116,NULL),(19542,2942,116,NULL),(19543,2903,116,NULL),(19544,2859,116,NULL),(19545,2843,116,NULL),(19546,2824,116,NULL),(19547,2788,116,NULL),(19548,2798,116,NULL),(19549,2799,116,NULL),(19550,2698,116,NULL),(19551,2574,116,NULL),(19552,2559,116,NULL),(19553,2469,116,NULL),(19554,2461,116,NULL),(19555,2441,116,NULL),(19556,2342,116,NULL),(19557,2364,116,NULL),(19558,2349,116,NULL),(19559,2351,116,NULL),(19560,2270,116,NULL),(19561,2220,116,NULL),(19562,2185,116,NULL),(19563,2176,116,NULL),(19564,2145,116,NULL),(19565,2114,116,NULL),(19566,2085,116,NULL),(19567,2068,116,NULL),(19568,2053,116,NULL),(19569,2032,116,NULL),(19570,2011,116,NULL),(19571,2022,116,NULL),(19572,1995,116,NULL),(19573,2006,116,NULL),(19574,1930,116,NULL),(19575,1929,116,NULL),(19576,1941,116,NULL),(19577,1920,116,NULL),(19578,1910,116,NULL),(19579,1893,116,NULL),(19580,1863,116,NULL),(19581,1876,116,NULL),(19582,1800,116,NULL),(19583,1790,116,NULL),(19584,1752,116,NULL),(19585,1736,116,NULL),(19586,1720,116,NULL),(19587,1672,116,NULL),(19588,1588,116,NULL),(19589,1512,116,NULL),(19590,1508,116,NULL),(19591,1480,116,NULL),(19592,1470,116,NULL),(19593,1423,116,NULL),(19594,1422,116,NULL),(19595,1431,116,NULL),(19596,1408,116,NULL),(19597,1404,116,NULL),(19598,1365,116,NULL),(19599,1352,116,NULL),(19600,1323,116,NULL),(19601,1343,116,NULL),(19602,1260,116,NULL),(19603,1726,116,NULL),(19604,1221,116,NULL),(19605,1217,116,NULL),(19606,1207,116,NULL),(19607,1137,116,NULL),(19608,1122,116,NULL),(19609,1051,116,NULL),(19610,1047,116,NULL),(19611,1025,116,NULL),(19612,1018,116,NULL),(19613,1013,116,NULL),(19614,1005,116,NULL),(19615,1002,116,NULL),(19616,977,116,NULL),(19617,976,116,NULL),(19618,509,116,NULL),(19619,942,116,NULL),(19620,884,116,NULL),(19621,876,116,NULL),(19622,867,116,NULL),(19623,860,116,NULL),(19624,848,116,NULL),(19625,832,116,NULL),(19626,819,116,NULL),(19627,796,116,NULL),(19628,781,116,NULL),(19629,704,116,NULL),(19630,701,116,NULL),(19631,700,116,NULL),(19632,766,116,NULL),(19633,747,116,NULL),(19634,746,116,NULL),(19635,744,116,NULL),(19636,697,116,NULL),(19637,658,116,NULL),(19638,645,116,NULL),(19639,643,116,NULL),(19640,628,116,NULL),(19641,605,116,NULL),(19642,599,116,NULL),(19643,575,116,NULL),(19644,567,116,NULL),(19645,566,116,NULL),(19646,561,116,NULL),(19647,1721,116,NULL),(19648,506,116,NULL),(19649,500,116,NULL),(19650,496,116,NULL),(19651,486,116,NULL),(19652,485,116,NULL),(19653,476,116,NULL),(19654,461,116,NULL),(19655,455,116,NULL),(19656,451,116,NULL),(19657,448,116,NULL),(19658,442,116,NULL),(19659,441,116,NULL),(19660,438,116,NULL),(19661,414,116,NULL),(19662,413,116,NULL),(19663,409,116,NULL),(19664,405,116,NULL),(19665,397,116,NULL),(19666,392,116,NULL),(19667,390,116,NULL),(19668,389,116,NULL),(19669,387,116,NULL),(19670,383,116,NULL),(19671,374,116,NULL),(19672,371,116,NULL),(19673,367,116,NULL),(19674,350,116,NULL),(19675,349,116,NULL),(19676,347,116,NULL),(19677,342,116,NULL),(19678,338,116,NULL),(19679,326,116,NULL),(19680,303,116,NULL),(19681,290,116,NULL),(19682,287,116,NULL),(19683,283,116,NULL),(19684,268,116,NULL),(19685,263,116,NULL),(19686,258,116,NULL),(19687,242,116,NULL),(19688,240,116,NULL),(19689,234,116,NULL),(19690,231,116,NULL),(19691,228,116,NULL),(19692,227,116,NULL),(19693,219,116,NULL),(19694,217,116,NULL),(19695,215,116,NULL),(19696,209,116,NULL),(19697,206,116,NULL),(19698,205,116,NULL),(19699,203,116,NULL),(19700,202,116,NULL),(19701,191,116,NULL),(19702,190,116,NULL),(19703,189,116,NULL),(19704,179,116,NULL),(19705,169,116,NULL),(19706,168,116,NULL),(19707,160,116,NULL),(19708,153,116,NULL),(19709,151,116,NULL),(19710,145,116,NULL),(19711,144,116,NULL),(19712,141,116,NULL),(19713,137,116,NULL),(19714,136,116,NULL),(19715,125,116,NULL),(19716,122,116,NULL),(19717,121,116,NULL),(19718,119,116,NULL),(19719,118,116,NULL),(19720,108,116,NULL),(19721,103,116,NULL),(19722,102,116,NULL),(19723,100,116,NULL),(19724,94,116,NULL),(19725,88,116,NULL),(19726,83,116,NULL),(19727,78,116,NULL),(19728,74,116,NULL),(19729,73,116,NULL),(19730,70,116,NULL),(19731,69,116,NULL),(19732,67,116,NULL),(19733,66,116,NULL),(19734,58,116,NULL),(19735,54,116,NULL),(19736,53,116,NULL),(19737,50,116,NULL),(19738,48,116,NULL),(19739,46,116,NULL),(19740,45,116,NULL),(19741,42,116,NULL),(19742,35,116,NULL),(19743,34,116,NULL),(19744,33,116,NULL),(19745,29,116,NULL),(19746,28,116,NULL),(19747,27,116,NULL),(19748,26,116,NULL),(19749,24,116,NULL),(19750,21,116,NULL),(19751,20,116,NULL),(19752,18,116,NULL),(19753,16,116,NULL),(19754,15,116,NULL),(19755,14,116,NULL),(19756,13,116,NULL),(19757,12,116,NULL),(19758,11,116,NULL),(19759,9,116,NULL),(19760,7,116,NULL),(19761,4,116,NULL),(19762,3,116,NULL),(19763,2,116,NULL),(19764,1,116,NULL),(19765,4032,64,NULL),(19766,3498,116,NULL),(19767,3762,116,NULL),(19768,3833,116,NULL),(19769,6154,116,NULL),(19770,3505,116,NULL),(19771,3885,116,NULL),(19772,3621,116,NULL),(19773,3842,116,NULL),(19774,16585,117,NULL),(19775,16579,117,NULL),(19776,16596,117,NULL),(19777,16556,117,NULL),(19778,16570,117,NULL),(19779,16574,117,NULL),(19780,16589,117,NULL),(19781,16550,117,NULL),(19782,3411,117,NULL),(19783,3407,117,NULL),(19784,3355,117,NULL),(19785,3345,117,NULL),(19786,3360,117,NULL),(19787,3330,117,NULL),(19788,3354,117,NULL),(19789,3194,117,NULL),(19790,3033,117,NULL),(19791,2828,117,NULL),(19792,2824,117,NULL),(19793,2799,117,NULL),(19794,2769,117,NULL),(19795,2653,117,NULL),(19796,2595,117,NULL),(19797,2540,117,NULL),(19798,2544,117,NULL),(19799,2537,117,NULL),(19800,2483,117,NULL),(19801,2485,117,NULL),(19802,2461,117,NULL),(19803,2441,117,NULL),(19804,2351,117,NULL),(19805,2285,117,NULL),(19806,2220,117,NULL),(19807,2108,117,NULL),(19808,1929,117,NULL),(19809,1941,117,NULL),(19810,1884,117,NULL),(19811,1859,117,NULL),(19812,1823,117,NULL),(19813,1791,117,NULL),(19814,1662,117,NULL),(19815,1658,117,NULL),(19816,1611,117,NULL),(19817,1572,117,NULL),(19818,1518,117,NULL),(19819,1450,117,NULL),(19820,1461,117,NULL),(19821,1438,117,NULL),(19822,1423,117,NULL),(19823,1431,117,NULL),(19824,1365,117,NULL),(19825,1337,117,NULL),(19826,1304,117,NULL),(19827,1248,117,NULL),(19828,1207,117,NULL),(19829,1382,117,NULL),(19830,1052,117,NULL),(19831,1038,117,NULL),(19832,1025,117,NULL),(19833,1004,117,NULL),(19834,995,117,NULL),(19835,978,117,NULL),(19836,977,117,NULL),(19837,917,117,NULL),(19838,881,117,NULL),(19839,832,117,NULL),(19840,704,117,NULL),(19841,771,117,NULL),(19842,744,117,NULL),(19843,724,117,NULL),(19844,713,117,NULL),(19845,672,117,NULL),(19846,645,117,NULL),(19847,633,117,NULL),(19848,575,117,NULL),(19849,560,117,NULL),(19850,541,117,NULL),(19851,540,117,NULL),(19852,507,117,NULL),(19853,504,117,NULL),(19854,496,117,NULL),(19855,485,117,NULL),(19856,477,117,NULL),(19857,476,117,NULL),(19858,461,117,NULL),(19859,455,117,NULL),(19860,448,117,NULL),(19861,441,117,NULL),(19862,438,117,NULL),(19863,414,117,NULL),(19864,413,117,NULL),(19865,397,117,NULL),(19866,389,117,NULL),(19867,367,117,NULL),(19868,350,117,NULL),(19869,349,117,NULL),(19870,344,117,NULL),(19871,292,117,NULL),(19872,290,117,NULL),(19873,287,117,NULL),(19874,283,117,NULL),(19875,278,117,NULL),(19876,268,117,NULL),(19877,263,117,NULL),(19878,260,117,NULL),(19879,258,117,NULL),(19880,231,117,NULL),(19881,219,117,NULL),(19882,217,117,NULL),(19883,209,117,NULL),(19884,205,117,NULL),(19885,203,117,NULL),(19886,202,117,NULL),(19887,199,117,NULL),(19888,198,117,NULL),(19889,191,117,NULL),(19890,190,117,NULL),(19891,187,117,NULL),(19892,169,117,NULL),(19893,167,117,NULL),(19894,160,117,NULL),(19895,151,117,NULL),(19896,145,117,NULL),(19897,144,117,NULL),(19898,136,117,NULL),(19899,125,117,NULL),(19900,121,117,NULL),(19901,119,117,NULL),(19902,112,117,NULL),(19903,107,117,NULL),(19904,102,117,NULL),(19905,94,117,NULL),(19906,92,117,NULL),(19907,88,117,NULL),(19908,83,117,NULL),(19909,80,117,NULL),(19910,75,117,NULL),(19911,70,117,NULL),(19912,69,117,NULL),(19913,67,117,NULL),(19914,66,117,NULL),(19915,65,117,NULL),(19916,62,117,NULL),(19917,58,117,NULL),(19918,56,117,NULL),(19919,55,117,NULL),(19920,53,117,NULL),(19921,42,117,NULL),(19922,35,117,NULL),(19923,32,117,NULL),(19924,28,117,NULL),(19925,27,117,NULL),(19926,26,117,NULL),(19927,18,117,NULL),(19928,14,117,NULL),(19929,12,117,NULL),(19930,11,117,NULL),(19931,9,117,NULL),(19932,7,117,NULL),(19933,5,117,NULL),(19934,2,117,NULL),(19935,1,117,NULL),(19936,3471,117,NULL),(19937,3424,117,NULL),(19938,3416,117,NULL),(19939,3507,117,NULL),(19940,3552,117,NULL),(19941,3425,117,NULL),(19942,3423,117,NULL),(19943,3644,117,NULL),(19944,3627,117,NULL),(19945,3871,117,NULL),(19946,4413,117,NULL),(19947,3484,117,NULL),(19948,3629,117,NULL),(19949,3574,117,NULL),(19950,3500,117,NULL),(19951,3620,117,NULL),(19952,3521,117,NULL),(19953,3431,117,NULL),(19954,3525,117,NULL),(19955,3711,117,NULL),(19956,3549,117,NULL),(19957,3421,117,NULL),(19958,3609,117,NULL),(19959,3643,117,NULL),(19960,3765,117,NULL),(19961,3867,117,NULL),(19962,3785,117,NULL),(19963,3452,117,NULL),(19964,3529,117,NULL),(19965,3477,117,NULL),(19966,3429,117,NULL),(19967,3422,117,NULL),(19968,4060,117,NULL),(19969,3464,117,NULL),(19970,3548,117,NULL),(19971,3468,117,NULL),(19972,3523,117,NULL),(19973,3519,117,NULL),(19974,3450,117,NULL),(19975,3463,117,NULL),(19976,3417,117,NULL),(19977,3536,117,NULL),(19978,3561,117,NULL),(19979,3508,117,NULL),(19980,3432,117,NULL),(19981,3750,117,NULL),(19982,3538,117,NULL),(19983,3453,117,NULL),(19984,3522,117,NULL),(19985,3667,117,NULL),(19986,3577,117,NULL),(19987,4266,117,NULL),(19988,3573,117,NULL),(19989,4907,117,NULL),(19990,3684,117,NULL),(19991,3419,117,NULL),(19992,3473,117,NULL),(19993,3510,117,NULL),(19994,3553,117,NULL),(19995,4156,117,NULL),(19996,3825,117,NULL),(19997,4211,117,NULL),(19998,3497,117,NULL),(19999,3439,117,NULL),(20000,3579,117,NULL),(20001,3769,117,NULL),(20002,3465,117,NULL),(20003,4850,117,NULL),(20004,5474,117,NULL),(20005,3472,117,NULL),(20006,4587,117,NULL),(20007,4564,117,NULL),(20008,4532,117,NULL),(20009,6282,117,NULL),(20010,4864,117,NULL),(20011,3435,117,NULL),(20012,3587,117,NULL),(20013,3739,117,NULL),(20014,4382,117,NULL),(20015,3504,117,NULL),(20016,3457,117,NULL),(20017,3483,117,NULL),(20018,4941,117,NULL),(20019,3443,117,NULL),(20020,16595,120,NULL),(20021,16570,120,NULL),(20022,16535,120,NULL),(20023,3411,120,NULL),(20024,3407,120,NULL),(20025,3394,120,NULL),(20026,3396,120,NULL),(20027,3356,120,NULL),(20028,3412,120,NULL),(20029,3375,120,NULL),(20030,3306,120,NULL),(20031,3208,120,NULL),(20032,3191,120,NULL),(20033,3169,120,NULL),(20034,3108,120,NULL),(20035,2999,120,NULL),(20036,2965,120,NULL),(20037,2873,120,NULL),(20038,2874,120,NULL),(20039,2818,120,NULL),(20040,2843,120,NULL),(20041,2780,120,NULL),(20042,2685,120,NULL),(20043,2656,120,NULL),(20044,2652,120,NULL),(20045,2574,120,NULL),(20046,2570,120,NULL),(20047,2560,120,NULL),(20048,2551,120,NULL),(20049,2607,120,NULL),(20050,2594,120,NULL),(20051,2595,120,NULL),(20052,2579,120,NULL),(20053,2554,120,NULL),(20054,2535,120,NULL),(20055,2529,120,NULL),(20056,2523,120,NULL),(20057,2506,120,NULL),(20058,2503,120,NULL),(20059,2490,120,NULL),(20060,2485,120,NULL),(20061,2460,120,NULL),(20062,2401,120,NULL),(20063,2390,120,NULL),(20064,2379,120,NULL),(20065,2352,120,NULL),(20066,2264,120,NULL),(20067,2257,120,NULL),(20068,2260,120,NULL),(20069,2220,120,NULL),(20070,2206,120,NULL),(20071,2161,120,NULL),(20072,2140,120,NULL),(20073,2115,120,NULL),(20074,2062,120,NULL),(20075,2033,120,NULL),(20076,1976,120,NULL),(20077,1929,120,NULL),(20078,1920,120,NULL),(20079,1863,120,NULL),(20080,1859,120,NULL),(20081,1832,120,NULL),(20082,1768,120,NULL),(20083,1780,120,NULL),(20084,1752,120,NULL),(20085,1749,120,NULL),(20086,1725,120,NULL),(20087,1732,120,NULL),(20088,1679,120,NULL),(20089,1672,120,NULL),(20090,1657,120,NULL),(20091,1572,120,NULL),(20092,1534,120,NULL),(20093,1539,120,NULL),(20094,1512,120,NULL),(20095,1497,120,NULL),(20096,1486,120,NULL),(20097,1480,120,NULL),(20098,1493,120,NULL),(20099,1470,120,NULL),(20100,1464,120,NULL),(20101,1456,120,NULL),(20102,1461,120,NULL),(20103,1422,120,NULL),(20104,1431,120,NULL),(20105,1351,120,NULL),(20106,1358,120,NULL),(20107,1323,120,NULL),(20108,1343,120,NULL),(20109,1342,120,NULL),(20110,1318,120,NULL),(20111,1304,120,NULL),(20112,1266,120,NULL),(20113,2215,120,NULL),(20114,1252,120,NULL),(20115,2226,120,NULL),(20116,1207,120,NULL),(20117,1137,120,NULL),(20118,1123,120,NULL),(20119,1092,120,NULL),(20120,1071,120,NULL),(20121,1004,120,NULL),(20122,977,120,NULL),(20123,974,120,NULL),(20124,873,120,NULL),(20125,867,120,NULL),(20126,832,120,NULL),(20127,796,120,NULL),(20128,790,120,NULL),(20129,700,120,NULL),(20130,766,120,NULL),(20131,763,120,NULL),(20132,746,120,NULL),(20133,709,120,NULL),(20134,735,120,NULL),(20135,724,120,NULL),(20136,693,120,NULL),(20137,665,120,NULL),(20138,649,120,NULL),(20139,643,120,NULL),(20140,605,120,NULL),(20141,566,120,NULL),(20142,560,120,NULL),(20143,448,120,NULL),(20144,443,120,NULL),(20145,442,120,NULL),(20146,435,120,NULL),(20147,416,120,NULL),(20148,394,120,NULL),(20149,392,120,NULL),(20150,383,120,NULL),(20151,380,120,NULL),(20152,374,120,NULL),(20153,368,120,NULL),(20154,349,120,NULL),(20155,345,120,NULL),(20156,344,120,NULL),(20157,342,120,NULL),(20158,338,120,NULL),(20159,334,120,NULL),(20160,303,120,NULL),(20161,283,120,NULL),(20162,274,120,NULL),(20163,238,120,NULL),(20164,209,120,NULL),(20165,206,120,NULL),(20166,189,120,NULL),(20167,187,120,NULL),(20168,169,120,NULL),(20169,167,120,NULL),(20170,153,120,NULL),(20171,151,120,NULL),(20172,136,120,NULL),(20173,134,120,NULL),(20174,125,120,NULL),(20175,122,120,NULL),(20176,121,120,NULL),(20177,88,120,NULL),(20178,80,120,NULL),(20179,74,120,NULL),(20180,58,120,NULL),(20181,55,120,NULL),(20182,53,120,NULL),(20183,50,120,NULL),(20184,48,120,NULL),(20185,45,120,NULL),(20186,35,120,NULL),(20187,29,120,NULL),(20188,28,120,NULL),(20189,27,120,NULL),(20190,26,120,NULL),(20191,15,120,NULL),(20192,14,120,NULL),(20193,13,120,NULL),(20194,12,120,NULL),(20195,11,120,NULL),(20196,9,120,NULL),(20197,7,120,NULL),(20198,6,120,NULL),(20199,5,120,NULL),(20200,4,120,NULL),(20201,3,120,NULL),(20202,2,120,NULL),(20203,1,120,NULL),(20204,16570,121,NULL),(20205,1508,121,NULL),(20206,680,121,NULL),(20207,647,121,NULL),(20208,459,121,NULL),(20209,303,121,NULL),(20210,287,121,NULL),(20211,258,121,NULL),(20212,231,121,NULL),(20213,217,121,NULL),(20214,125,121,NULL),(20215,121,121,NULL),(20216,34,121,NULL),(20217,26,121,NULL),(20218,9,121,NULL),(20219,1,121,NULL),(20220,3484,119,NULL),(20221,3641,119,NULL),(20222,3469,119,NULL),(20223,3914,119,NULL),(20224,3468,119,NULL),(20225,3519,119,NULL),(20226,3417,119,NULL),(20227,3621,119,NULL),(20228,3472,119,NULL),(20229,3532,119,NULL),(20230,3471,119,NULL),(20231,3425,119,NULL),(20232,4646,119,NULL),(20233,4089,119,NULL),(20234,3871,119,NULL),(20235,3435,119,NULL),(20236,3498,119,NULL),(20237,4903,119,NULL),(20238,3761,119,NULL),(20239,3446,119,NULL),(20240,5472,119,NULL),(20241,3504,119,NULL),(20242,3483,119,NULL),(20243,3830,119,NULL),(20244,4028,119,NULL),(20245,3762,119,NULL),(20246,4649,119,NULL),(20247,4612,119,NULL),(20248,3695,119,NULL),(20249,4032,119,NULL),(20250,4493,119,NULL),(20251,4767,119,NULL),(20252,4560,119,NULL),(20253,3833,119,NULL),(20254,4720,119,NULL),(20255,4170,119,NULL),(20256,4423,119,NULL),(20257,4217,119,NULL),(20258,3948,119,NULL),(20259,16620,119,NULL),(20260,16586,119,NULL),(20261,16585,119,NULL),(20262,16579,119,NULL),(20263,16556,119,NULL),(20264,16589,119,NULL),(20265,3407,119,NULL),(20266,3364,119,NULL),(20267,3345,119,NULL),(20268,3360,119,NULL),(20269,3349,119,NULL),(20270,3365,119,NULL),(20271,3361,119,NULL),(20272,3042,119,NULL),(20273,2799,119,NULL),(20274,2461,119,NULL),(20275,2255,119,NULL),(20276,2185,119,NULL),(20277,2000,119,NULL),(20278,1658,119,NULL),(20279,1461,119,NULL),(20280,1004,119,NULL),(20281,978,119,NULL),(20282,977,119,NULL),(20283,509,119,NULL),(20284,881,119,NULL),(20285,704,119,NULL),(20286,713,119,NULL),(20287,633,119,NULL),(20288,486,119,NULL),(20289,475,119,NULL),(20290,441,119,NULL),(20291,438,119,NULL),(20292,413,119,NULL),(20293,397,119,NULL),(20294,367,119,NULL),(20295,349,119,NULL),(20296,344,119,NULL),(20297,219,119,NULL),(20298,216,119,NULL),(20299,209,119,NULL),(20300,206,119,NULL),(20301,203,119,NULL),(20302,187,119,NULL),(20303,167,119,NULL),(20304,160,119,NULL),(20305,153,119,NULL),(20306,145,119,NULL),(20307,144,119,NULL),(20308,94,119,NULL),(20309,92,119,NULL),(20310,83,119,NULL),(20311,62,119,NULL),(20312,35,119,NULL),(20313,34,119,NULL),(20314,33,119,NULL),(20315,18,119,NULL),(20316,16,119,NULL),(20317,15,119,NULL),(20318,13,119,NULL),(20319,11,119,NULL),(20320,9,119,NULL),(20321,7,119,NULL),(20322,4,119,NULL),(20323,3,119,NULL),(20324,2,119,NULL),(20325,1,119,NULL),(20326,3436,34,NULL),(20327,3556,34,NULL),(20328,3593,34,NULL),(20329,3837,34,NULL),(20330,3647,34,NULL),(20331,4507,34,NULL),(20332,3613,34,NULL),(20333,5962,34,NULL),(20334,4307,34,NULL),(20335,6335,34,NULL),(20336,3776,34,NULL),(20337,3730,34,NULL),(20338,4026,34,NULL),(20339,4769,34,NULL),(20340,3700,34,NULL),(20341,4606,34,NULL),(20342,3877,34,NULL),(20343,3999,34,NULL),(20344,3947,34,NULL),(20345,4045,34,NULL),(20346,4484,34,NULL),(20347,3493,34,NULL),(20348,3444,34,NULL),(20349,3525,34,NULL),(20350,3536,34,NULL),(20351,4317,34,NULL),(20352,3621,34,NULL),(20353,3611,34,NULL),(20354,5107,34,NULL),(20355,4968,34,NULL),(20356,5552,34,NULL),(20357,4629,34,NULL),(20358,5443,34,NULL),(20359,3849,34,NULL),(20360,5784,34,NULL),(20361,4257,34,NULL),(20362,5372,34,NULL),(20363,4153,34,NULL),(20364,4113,34,NULL),(20365,4449,34,NULL),(20366,4475,34,NULL),(20367,3649,34,NULL),(20368,5006,34,NULL),(20369,3498,34,NULL),(20370,4902,34,NULL),(20371,5134,34,NULL),(20372,5652,34,NULL),(20373,3830,34,NULL),(20374,3762,34,NULL),(20375,3595,34,NULL),(20376,4720,34,NULL),(20377,3482,34,NULL),(20378,4750,34,NULL),(20379,3889,34,NULL),(20380,4865,34,NULL),(20381,5512,34,NULL),(20382,6024,34,NULL),(20383,4775,34,NULL),(20384,5797,34,NULL),(20385,6173,34,NULL),(20386,5624,34,NULL),(20387,4269,34,NULL),(20388,4302,34,NULL),(20389,12062,34,NULL),(20390,12164,34,NULL),(20391,15085,34,NULL),(20392,10487,34,NULL),(20393,17312,34,NULL),(20394,12655,34,NULL),(20395,9220,34,NULL),(20396,9448,34,NULL),(20397,11685,34,NULL),(20398,14159,34,NULL),(20399,13347,34,NULL),(20400,10884,34,NULL),(20401,12857,34,NULL),(20402,10237,34,NULL),(20403,16570,44,NULL),(20404,3407,44,NULL),(20405,3345,44,NULL),(20406,3349,44,NULL),(20407,2537,44,NULL),(20408,2461,44,NULL),(20409,2149,44,NULL),(20410,1752,44,NULL),(20411,1365,44,NULL),(20412,509,44,NULL),(20413,560,44,NULL),(20414,485,44,NULL),(20415,438,44,NULL),(20416,413,44,NULL),(20417,283,44,NULL),(20418,268,44,NULL),(20419,219,44,NULL),(20420,219,44,NULL),(20421,217,44,NULL),(20422,217,44,NULL),(20423,209,44,NULL),(20424,209,44,NULL),(20425,189,44,NULL),(20426,189,44,NULL),(20427,169,44,NULL),(20428,169,44,NULL),(20429,136,44,NULL),(20430,136,44,NULL),(20431,125,44,NULL),(20432,125,44,NULL),(20433,121,44,NULL),(20434,121,44,NULL),(20435,94,44,NULL),(20436,94,44,NULL),(20437,75,44,NULL),(20438,75,44,NULL),(20439,53,44,NULL),(20440,53,44,NULL),(20441,35,44,NULL),(20442,35,44,NULL),(20443,27,44,NULL),(20444,26,44,NULL),(20445,26,44,NULL),(20446,11,44,NULL),(20447,9,44,NULL),(20448,9,44,NULL),(20449,7,44,NULL),(20450,3,44,NULL),(20451,3,44,NULL),(20452,1,44,NULL),(20453,3422,44,NULL),(20454,3468,44,NULL),(20455,3419,44,NULL),(20456,5474,44,NULL),(20457,3462,44,NULL),(20458,3489,44,NULL),(20459,3459,44,NULL),(20460,4941,44,NULL),(20461,16556,130,NULL),(20462,3394,130,NULL),(20463,3356,130,NULL),(20464,3304,130,NULL),(20465,3306,130,NULL),(20466,3295,130,NULL),(20467,3254,130,NULL),(20468,3222,130,NULL),(20469,3208,130,NULL),(20470,3191,130,NULL),(20471,3174,130,NULL),(20472,3169,130,NULL),(20473,3151,130,NULL),(20474,3133,130,NULL),(20475,3097,130,NULL),(20476,3105,130,NULL),(20477,3108,130,NULL),(20478,3066,130,NULL),(20479,3011,130,NULL),(20480,2965,130,NULL),(20481,2923,130,NULL),(20482,2914,130,NULL),(20483,2873,130,NULL),(20484,2874,130,NULL),(20485,2818,130,NULL),(20486,2698,130,NULL),(20487,2707,130,NULL),(20488,2601,130,NULL),(20489,2570,130,NULL),(20490,2563,130,NULL),(20491,2550,130,NULL),(20492,2579,130,NULL),(20493,2583,130,NULL),(20494,2529,130,NULL),(20495,2523,130,NULL),(20496,2467,130,NULL),(20497,2458,130,NULL),(20498,2401,130,NULL),(20499,2342,130,NULL),(20500,2379,130,NULL),(20501,2375,130,NULL),(20502,2275,130,NULL),(20503,2220,130,NULL),(20504,2206,130,NULL),(20505,2161,130,NULL),(20506,2140,130,NULL),(20507,2115,130,NULL),(20508,2064,130,NULL),(20509,2070,130,NULL),(20510,2044,130,NULL),(20511,2033,130,NULL),(20512,1980,130,NULL),(20513,1930,130,NULL),(20514,1922,130,NULL),(20515,1910,130,NULL),(20516,1876,130,NULL),(20517,1829,130,NULL),(20518,1800,130,NULL),(20519,1790,130,NULL),(20520,1780,130,NULL),(20521,1752,130,NULL),(20522,1749,130,NULL),(20523,1593,130,NULL),(20524,1574,130,NULL),(20525,1551,130,NULL),(20526,1545,130,NULL),(20527,1524,130,NULL),(20528,1480,130,NULL),(20529,1461,130,NULL),(20530,1423,130,NULL),(20531,1352,130,NULL),(20532,1358,130,NULL),(20533,1343,130,NULL),(20534,1261,130,NULL),(20535,1123,130,NULL),(20536,1025,130,NULL),(20537,1018,130,NULL),(20538,509,130,NULL),(20539,951,130,NULL),(20540,889,130,NULL),(20541,884,130,NULL),(20542,874,130,NULL),(20543,867,130,NULL),(20544,862,130,NULL),(20545,729,130,NULL),(20546,689,130,NULL),(20547,643,130,NULL),(20548,605,130,NULL),(20549,567,130,NULL),(20550,561,130,NULL),(20551,486,130,NULL),(20552,455,130,NULL),(20553,440,130,NULL),(20554,409,130,NULL),(20555,405,130,NULL),(20556,390,130,NULL),(20557,389,130,NULL),(20558,386,130,NULL),(20559,371,130,NULL),(20560,342,130,NULL),(20561,338,130,NULL),(20562,326,130,NULL),(20563,290,130,NULL),(20564,287,130,NULL),(20565,268,130,NULL),(20566,263,130,NULL),(20567,258,130,NULL),(20568,234,130,NULL),(20569,231,130,NULL),(20570,226,130,NULL),(20571,214,130,NULL),(20572,205,130,NULL),(20573,203,130,NULL),(20574,191,130,NULL),(20575,190,130,NULL),(20576,189,130,NULL),(20577,179,130,NULL),(20578,153,130,NULL),(20579,137,130,NULL),(20580,136,130,NULL),(20581,135,130,NULL),(20582,122,130,NULL),(20583,119,130,NULL),(20584,118,130,NULL),(20585,94,130,NULL),(20586,88,130,NULL),(20587,83,130,NULL),(20588,78,130,NULL),(20589,70,130,NULL),(20590,69,130,NULL),(20591,67,130,NULL),(20592,66,130,NULL),(20593,58,130,NULL),(20594,55,130,NULL),(20595,53,130,NULL),(20596,50,130,NULL),(20597,45,130,NULL),(20598,44,130,NULL),(20599,42,130,NULL),(20600,37,130,NULL),(20601,35,130,NULL),(20602,32,130,NULL),(20603,31,130,NULL),(20604,29,130,NULL),(20605,28,130,NULL),(20606,27,130,NULL),(20607,26,130,NULL),(20608,24,130,NULL),(20609,23,130,NULL),(20610,22,130,NULL),(20611,21,130,NULL),(20612,20,130,NULL),(20613,14,130,NULL),(20614,13,130,NULL),(20615,11,130,NULL),(20616,10,130,NULL),(20617,9,130,NULL),(20618,5,130,NULL),(20619,4,130,NULL),(20620,2,130,NULL),(20621,1,130,NULL),(20622,16620,34,NULL),(20623,16649,34,NULL),(20624,16595,34,NULL),(20625,16605,34,NULL),(20626,16575,34,NULL),(20627,16596,34,NULL),(20628,16560,34,NULL),(20629,16606,34,NULL),(20630,16641,34,NULL),(20631,16577,34,NULL),(20632,16640,34,NULL),(20633,16574,34,NULL),(20634,3392,34,NULL),(20635,3394,34,NULL),(20636,3396,34,NULL),(20637,3364,34,NULL),(20638,3356,34,NULL),(20639,3412,34,NULL),(20640,3345,34,NULL),(20641,3360,34,NULL),(20642,3346,34,NULL),(20643,3350,34,NULL),(20644,3330,34,NULL),(20645,3349,34,NULL),(20646,3326,34,NULL),(20647,3300,34,NULL),(20648,3304,34,NULL),(20649,3365,34,NULL),(20650,3289,34,NULL),(20651,3309,34,NULL),(20652,3280,34,NULL),(20653,3324,34,NULL),(20654,3295,34,NULL),(20655,3282,34,NULL),(20656,3325,34,NULL),(20657,3206,34,NULL),(20658,3163,34,NULL),(20659,3174,34,NULL),(20660,3162,34,NULL),(20661,3160,34,NULL),(20662,3169,34,NULL),(20663,3146,34,NULL),(20664,3069,34,NULL),(20665,3066,34,NULL),(20666,3042,34,NULL),(20667,3000,34,NULL),(20668,2965,34,NULL),(20669,2932,34,NULL),(20670,2925,34,NULL),(20671,2914,34,NULL),(20672,2873,34,NULL),(20673,2900,34,NULL),(20674,2824,34,NULL),(20675,2807,34,NULL),(20676,2779,34,NULL),(20677,2698,34,NULL),(20678,2570,34,NULL),(20679,2563,34,NULL),(20680,2559,34,NULL),(20681,2661,34,NULL),(20682,2530,34,NULL),(20683,2529,34,NULL),(20684,2501,34,NULL),(20685,2485,34,NULL),(20686,2467,34,NULL),(20687,2461,34,NULL),(20688,2460,34,NULL),(20689,2418,34,NULL),(20690,2381,34,NULL),(20691,2375,34,NULL),(20692,2325,34,NULL),(20693,2302,34,NULL),(20694,2270,34,NULL),(20695,2259,34,NULL),(20696,2251,34,NULL),(20697,2206,34,NULL),(20698,2176,34,NULL),(20699,2161,34,NULL),(20700,2115,34,NULL),(20701,2101,34,NULL),(20702,2078,34,NULL),(20703,2009,34,NULL),(20704,1980,34,NULL),(20705,1930,34,NULL),(20706,1876,34,NULL),(20707,1823,34,NULL),(20708,1769,34,NULL),(20709,1780,34,NULL),(20710,1749,34,NULL),(20711,1732,34,NULL),(20712,1710,34,NULL),(20713,1718,34,NULL),(20714,1658,34,NULL),(20715,1668,34,NULL),(20716,1652,34,NULL),(20717,1588,34,NULL),(20718,1552,34,NULL),(20719,1512,34,NULL),(20720,1524,34,NULL),(20721,1508,34,NULL),(20722,1456,34,NULL),(20723,1415,34,NULL),(20724,1400,34,NULL),(20725,1365,34,NULL),(20726,1352,34,NULL),(20727,1261,34,NULL),(20728,1248,34,NULL),(20729,2226,34,NULL),(20730,1208,34,NULL),(20731,1137,34,NULL),(20732,1128,34,NULL),(20733,1109,34,NULL),(20734,1094,34,NULL),(20735,1079,34,NULL),(20736,1052,34,NULL),(20737,1051,34,NULL),(20738,1028,34,NULL),(20739,1025,34,NULL),(20740,1020,34,NULL),(20741,1011,34,NULL),(20742,1007,34,NULL),(20743,997,34,NULL),(20744,994,34,NULL),(20745,992,34,NULL),(20746,978,34,NULL),(20747,977,34,NULL),(20748,509,34,NULL),(20749,962,34,NULL),(20750,930,34,NULL),(20751,925,34,NULL),(20752,921,34,NULL),(20753,916,34,NULL),(20754,904,34,NULL),(20755,497,34,NULL),(20756,874,34,NULL),(20757,848,34,NULL),(20758,838,34,NULL),(20759,797,34,NULL),(20760,791,34,NULL),(20761,785,34,NULL),(20762,781,34,NULL),(20763,704,34,NULL),(20764,771,34,NULL),(20765,746,34,NULL),(20766,733,34,NULL),(20767,724,34,NULL),(20768,713,34,NULL),(20769,678,34,NULL),(20770,658,34,NULL),(20771,646,34,NULL),(20772,643,34,NULL),(20773,576,34,NULL),(20774,567,34,NULL),(20775,560,34,NULL),(20776,542,34,NULL),(20777,494,34,NULL),(20778,455,34,NULL),(20779,438,34,NULL),(20780,392,34,NULL),(20781,338,34,NULL),(20782,304,34,NULL),(20783,303,34,NULL),(20784,278,34,NULL),(20785,238,34,NULL),(20786,236,34,NULL),(20787,219,34,NULL),(20788,213,34,NULL),(20789,209,34,NULL),(20790,204,34,NULL),(20791,198,34,NULL),(20792,191,34,NULL),(20793,190,34,NULL),(20794,189,34,NULL),(20795,179,34,NULL),(20796,172,34,NULL),(20797,153,34,NULL),(20798,136,34,NULL),(20799,133,34,NULL),(20800,130,34,NULL),(20801,122,34,NULL),(20802,121,34,NULL),(20803,119,34,NULL),(20804,118,34,NULL),(20805,91,34,NULL),(20806,88,34,NULL),(20807,82,34,NULL),(20808,81,34,NULL),(20809,79,34,NULL),(20810,74,34,NULL),(20811,70,34,NULL),(20812,69,34,NULL),(20813,67,34,NULL),(20814,55,34,NULL),(20815,51,34,NULL),(20816,45,34,NULL),(20817,38,34,NULL),(20818,36,34,NULL),(20819,35,34,NULL),(20820,34,34,NULL),(20821,27,34,NULL),(20822,22,34,NULL),(20823,20,34,NULL),(20824,19,34,NULL),(20825,14,34,NULL),(20826,13,34,NULL),(20827,11,34,NULL),(20828,9,34,NULL),(20829,7,34,NULL),(20830,3,34,NULL),(20831,2,34,NULL),(20832,1,34,NULL),(20833,3454,35,NULL),(20834,3469,35,NULL),(20835,3493,35,NULL),(20836,3444,35,NULL),(20837,3525,35,NULL),(20838,4317,35,NULL),(20839,3621,35,NULL),(20840,4968,35,NULL),(20841,4629,35,NULL),(20842,5443,35,NULL),(20843,3849,35,NULL),(20844,5784,35,NULL),(20845,4257,35,NULL),(20846,5372,35,NULL),(20847,4153,35,NULL),(20848,3442,35,NULL),(20849,3436,35,NULL),(20850,3418,35,NULL),(20851,4095,35,NULL),(20852,4000,35,NULL),(20853,3759,35,NULL),(20854,4224,35,NULL),(20855,4307,35,NULL),(20856,3776,35,NULL),(20857,3730,35,NULL),(20858,3766,35,NULL),(20859,5657,35,NULL),(20860,4981,35,NULL),(20861,4769,35,NULL),(20862,3999,35,NULL),(20863,4484,35,NULL),(20864,3649,35,NULL),(20865,5006,35,NULL),(20866,4902,35,NULL),(20867,5134,35,NULL),(20868,4720,35,NULL),(20869,5017,35,NULL),(20870,4750,35,NULL),(20871,3889,35,NULL),(20872,4865,35,NULL),(20873,4775,35,NULL),(20874,4269,35,NULL),(20875,4302,35,NULL),(20876,3416,135,NULL),(20877,4646,135,NULL),(20878,4307,135,NULL),(20879,3525,135,NULL),(20880,4317,135,NULL),(20881,3621,135,NULL),(20882,5153,135,NULL),(20883,5396,135,NULL),(20884,4257,135,NULL),(20885,4105,135,NULL),(20886,4153,135,NULL),(20887,4733,135,NULL),(20888,4859,135,NULL),(20889,3649,135,NULL),(20890,5006,135,NULL),(20891,5125,135,NULL),(20892,4902,135,NULL),(20893,5134,135,NULL),(20894,5652,135,NULL),(20895,4720,135,NULL),(20896,5017,135,NULL),(20897,4750,135,NULL),(20898,3889,135,NULL),(20899,4865,135,NULL),(20900,5512,135,NULL),(20901,5068,135,NULL),(20902,4775,135,NULL),(20903,5505,135,NULL),(20904,3980,135,NULL),(20905,4269,135,NULL),(20906,16634,35,NULL),(20907,16635,35,NULL),(20908,16595,35,NULL),(20909,16596,35,NULL),(20910,16560,35,NULL),(20911,16641,35,NULL),(20912,16556,35,NULL),(20913,16640,35,NULL),(20914,16545,35,NULL),(20915,16574,35,NULL),(20916,16550,35,NULL),(20917,3392,35,NULL),(20918,3364,35,NULL),(20919,3355,35,NULL),(20920,3412,35,NULL),(20921,3345,35,NULL),(20922,3360,35,NULL),(20923,3397,35,NULL),(20924,3350,35,NULL),(20925,3349,35,NULL),(20926,3300,35,NULL),(20927,3304,35,NULL),(20928,3280,35,NULL),(20929,3295,35,NULL),(20930,3194,35,NULL),(20931,3223,35,NULL),(20932,3163,35,NULL),(20933,3174,35,NULL),(20934,3169,35,NULL),(20935,3146,35,NULL),(20936,3110,35,NULL),(20937,3066,35,NULL),(20938,3019,35,NULL),(20939,3042,35,NULL),(20940,3011,35,NULL),(20941,2965,35,NULL),(20942,2942,35,NULL),(20943,2914,35,NULL),(20944,2824,35,NULL),(20945,2799,35,NULL),(20946,2657,35,NULL),(20947,2559,35,NULL),(20948,2579,35,NULL),(20949,2540,35,NULL),(20950,2529,35,NULL),(20951,2485,35,NULL),(20952,2467,35,NULL),(20953,2460,35,NULL),(20954,2425,35,NULL),(20955,2381,35,NULL),(20956,2364,35,NULL),(20957,2235,35,NULL),(20958,2270,35,NULL),(20959,2251,35,NULL),(20960,2176,35,NULL),(20961,2161,35,NULL),(20962,2106,35,NULL),(20963,2011,35,NULL),(20964,2000,35,NULL),(20965,1971,35,NULL),(20966,2009,35,NULL),(20967,1980,35,NULL),(20968,1974,35,NULL),(20969,1947,35,NULL),(20970,1945,35,NULL),(20971,1930,35,NULL),(20972,1839,35,NULL),(20973,1791,35,NULL),(20974,1769,35,NULL),(20975,1780,35,NULL),(20976,1732,35,NULL),(20977,1658,35,NULL),(20978,1588,35,NULL),(20979,1512,35,NULL),(20980,1524,35,NULL),(20981,1508,35,NULL),(20982,1480,35,NULL),(20983,1456,35,NULL),(20984,1422,35,NULL),(20985,1415,35,NULL),(20986,1414,35,NULL),(20987,1413,35,NULL),(20988,1400,35,NULL),(20989,1351,35,NULL),(20990,1337,35,NULL),(20991,1261,35,NULL),(20992,2226,35,NULL),(20993,1208,35,NULL),(20994,1109,35,NULL),(20995,1108,35,NULL),(20996,1094,35,NULL),(20997,1079,35,NULL),(20998,1052,35,NULL),(20999,1028,35,NULL),(21000,997,35,NULL),(21001,994,35,NULL),(21002,992,35,NULL),(21003,974,35,NULL),(21004,509,35,NULL),(21005,930,35,NULL),(21006,904,35,NULL),(21007,848,35,NULL),(21008,797,35,NULL),(21009,704,35,NULL),(21010,771,35,NULL),(21011,746,35,NULL),(21012,724,35,NULL),(21013,713,35,NULL),(21014,658,35,NULL),(21015,643,35,NULL),(21016,605,35,NULL),(21017,560,35,NULL),(21018,525,35,NULL),(21019,523,35,NULL),(21020,438,35,NULL),(21021,424,35,NULL),(21022,416,35,NULL),(21023,392,35,NULL),(21024,389,35,NULL),(21025,363,35,NULL),(21026,349,35,NULL),(21027,344,35,NULL),(21028,338,35,NULL),(21029,300,35,NULL),(21030,238,35,NULL),(21031,231,35,NULL),(21032,219,35,NULL),(21033,216,35,NULL),(21034,209,35,NULL),(21035,206,35,NULL),(21036,203,35,NULL),(21037,187,35,NULL),(21038,160,35,NULL),(21039,141,35,NULL),(21040,134,35,NULL),(21041,133,35,NULL),(21042,131,35,NULL),(21043,94,35,NULL),(21044,90,35,NULL),(21045,88,35,NULL),(21046,83,35,NULL),(21047,79,35,NULL),(21048,78,35,NULL),(21049,76,35,NULL),(21050,70,35,NULL),(21051,66,35,NULL),(21052,61,35,NULL),(21053,58,35,NULL),(21054,56,35,NULL),(21055,55,35,NULL),(21056,53,35,NULL),(21057,52,35,NULL),(21058,51,35,NULL),(21059,49,35,NULL),(21060,46,35,NULL),(21061,42,35,NULL),(21062,40,35,NULL),(21063,39,35,NULL),(21064,37,35,NULL),(21065,35,35,NULL),(21066,34,35,NULL),(21067,33,35,NULL),(21068,31,35,NULL),(21069,27,35,NULL),(21070,26,35,NULL),(21071,21,35,NULL),(21072,20,35,NULL),(21073,19,35,NULL),(21074,17,35,NULL),(21075,14,35,NULL),(21076,11,35,NULL),(21077,9,35,NULL),(21078,8,35,NULL),(21079,7,35,NULL),(21080,5,35,NULL),(21081,4,35,NULL),(21082,3,35,NULL),(21083,2,35,NULL),(21084,1,35,NULL),(21085,1710,131,NULL),(21086,2193,131,NULL),(21087,1221,131,NULL),(21088,1018,131,NULL),(21089,976,131,NULL),(21090,509,131,NULL),(21091,884,131,NULL),(21092,860,131,NULL),(21093,680,131,NULL),(21094,624,131,NULL),(21095,611,131,NULL),(21096,605,131,NULL),(21097,561,131,NULL),(21098,455,131,NULL),(21099,452,131,NULL),(21100,435,131,NULL),(21101,409,131,NULL),(21102,389,131,NULL),(21103,342,131,NULL),(21104,338,131,NULL),(21105,334,131,NULL),(21106,326,131,NULL),(21107,316,131,NULL),(21108,287,131,NULL),(21109,268,131,NULL),(21110,231,131,NULL),(21111,206,131,NULL),(21112,191,131,NULL),(21113,190,131,NULL),(21114,160,131,NULL),(21115,137,131,NULL),(21116,136,131,NULL),(21117,100,131,NULL),(21118,86,131,NULL),(21119,78,131,NULL),(21120,67,131,NULL),(21121,55,131,NULL),(21122,45,131,NULL),(21123,44,131,NULL),(21124,29,131,NULL),(21125,27,131,NULL),(21126,26,131,NULL),(21127,23,131,NULL),(21128,21,131,NULL),(21129,20,131,NULL),(21130,1,131,NULL),(21131,3421,131,NULL),(21132,4397,131,NULL),(21133,3439,131,NULL),(21134,3621,131,NULL),(21135,4903,131,NULL),(21136,3446,131,NULL),(21137,3739,131,NULL),(21138,3504,131,NULL),(21139,3483,131,NULL),(21140,3830,131,NULL),(21141,4028,131,NULL),(21142,4934,131,NULL),(21143,4649,131,NULL),(21144,4612,131,NULL),(21145,4506,131,NULL),(21146,4032,131,NULL),(21147,4493,131,NULL),(21148,4767,131,NULL),(21149,4560,131,NULL),(21150,3833,131,NULL),(21151,4720,131,NULL),(21152,4170,131,NULL),(21153,4423,131,NULL),(21154,3948,131,NULL),(21155,3425,131,NULL),(21156,15085,35,NULL),(21157,10487,35,NULL),(21158,12481,35,NULL),(21159,12530,35,NULL),(21160,10884,35,NULL),(21161,10176,35,NULL),(21162,10237,35,NULL),(21163,13347,35,NULL),(21164,12857,35,NULL),(21165,16634,135,NULL),(21166,16635,135,NULL),(21167,16545,135,NULL),(21168,3392,135,NULL),(21169,3364,135,NULL),(21170,3360,135,NULL),(21171,3300,135,NULL),(21172,3285,135,NULL),(21173,3289,135,NULL),(21174,3280,135,NULL),(21175,3223,135,NULL),(21176,3169,135,NULL),(21177,3151,135,NULL),(21178,3042,135,NULL),(21179,2965,135,NULL),(21180,2780,135,NULL),(21181,2733,135,NULL),(21182,2683,135,NULL),(21183,2657,135,NULL),(21184,2529,135,NULL),(21185,2523,135,NULL),(21186,2460,135,NULL),(21187,2425,135,NULL),(21188,2429,135,NULL),(21189,2381,135,NULL),(21190,2379,135,NULL),(21191,2270,135,NULL),(21192,2185,135,NULL),(21193,2176,135,NULL),(21194,2124,135,NULL),(21195,2116,135,NULL),(21196,2033,135,NULL),(21197,1971,135,NULL),(21198,2009,135,NULL),(21199,1991,135,NULL),(21200,1974,135,NULL),(21201,1930,135,NULL),(21202,1854,135,NULL),(21203,1823,135,NULL),(21204,1790,135,NULL),(21205,1769,135,NULL),(21206,1780,135,NULL),(21207,1752,135,NULL),(21208,1732,135,NULL),(21209,1658,135,NULL),(21210,1539,135,NULL),(21211,1480,135,NULL),(21212,1493,135,NULL),(21213,1456,135,NULL),(21214,1455,135,NULL),(21215,1408,135,NULL),(21216,1413,135,NULL),(21217,1400,135,NULL),(21218,1351,135,NULL),(21219,1358,135,NULL),(21220,1250,135,NULL),(21221,1208,135,NULL),(21222,1109,135,NULL),(21223,1094,135,NULL),(21224,1004,135,NULL),(21225,994,135,NULL),(21226,992,135,NULL),(21227,977,135,NULL),(21228,509,135,NULL),(21229,930,135,NULL),(21230,916,135,NULL),(21231,904,135,NULL),(21232,848,135,NULL),(21233,781,135,NULL),(21234,704,135,NULL),(21235,746,135,NULL),(21236,724,135,NULL),(21237,713,135,NULL),(21238,658,135,NULL),(21239,643,135,NULL),(21240,575,135,NULL),(21241,455,135,NULL),(21242,409,135,NULL),(21243,392,135,NULL),(21244,338,135,NULL),(21245,303,135,NULL),(21246,283,135,NULL),(21247,268,135,NULL),(21248,242,135,NULL),(21249,238,135,NULL),(21250,231,135,NULL),(21251,219,135,NULL),(21252,217,135,NULL),(21253,209,135,NULL),(21254,206,135,NULL),(21255,203,135,NULL),(21256,191,135,NULL),(21257,190,135,NULL),(21258,189,135,NULL),(21259,169,135,NULL),(21260,167,135,NULL),(21261,141,135,NULL),(21262,125,135,NULL),(21263,119,135,NULL),(21264,118,135,NULL),(21265,88,135,NULL),(21266,81,135,NULL),(21267,70,135,NULL),(21268,66,135,NULL),(21269,58,135,NULL),(21270,50,135,NULL),(21271,38,135,NULL),(21272,35,135,NULL),(21273,28,135,NULL),(21274,27,135,NULL),(21275,26,135,NULL),(21276,20,135,NULL),(21277,14,135,NULL),(21278,13,135,NULL),(21279,9,135,NULL),(21280,7,135,NULL),(21281,3,135,NULL),(21282,1,135,NULL),(21283,2845,141,NULL),(21284,2730,141,NULL),(21285,2260,141,NULL),(21286,2121,141,NULL),(21287,1876,141,NULL),(21288,1658,141,NULL),(21289,1508,141,NULL),(21290,974,141,NULL),(21291,904,141,NULL),(21292,713,141,NULL),(21293,643,141,NULL),(21294,567,141,NULL),(21295,523,141,NULL),(21296,303,141,NULL),(21297,287,141,NULL),(21298,283,141,NULL),(21299,217,141,NULL),(21300,209,141,NULL),(21301,121,141,NULL),(21302,26,141,NULL),(21303,3,141,NULL),(21304,1,141,NULL),(21305,4055,141,NULL),(21306,5398,141,NULL),(21307,3511,124,NULL),(21308,4095,124,NULL),(21309,4507,124,NULL),(21310,3613,124,NULL),(21311,4073,124,NULL),(21312,3793,124,NULL),(21313,4646,124,NULL),(21314,3813,124,NULL),(21315,4307,124,NULL),(21316,3776,124,NULL),(21317,4769,124,NULL),(21318,4484,124,NULL),(21319,3484,124,NULL),(21320,3454,124,NULL),(21321,3469,124,NULL),(21322,3495,124,NULL),(21323,3493,124,NULL),(21324,3444,124,NULL),(21325,3885,124,NULL),(21326,3568,124,NULL),(21327,4317,124,NULL),(21328,3621,124,NULL),(21329,3611,124,NULL),(21330,4629,124,NULL),(21331,5443,124,NULL),(21332,3849,124,NULL),(21333,5784,124,NULL),(21334,4105,124,NULL),(21335,4153,124,NULL),(21336,4235,124,NULL),(21337,3682,124,NULL),(21338,3554,124,NULL),(21339,3649,124,NULL),(21340,5006,124,NULL),(21341,3498,124,NULL),(21342,5125,124,NULL),(21343,4902,124,NULL),(21344,5134,124,NULL),(21345,5652,124,NULL),(21346,5429,124,NULL),(21347,4720,124,NULL),(21348,5017,124,NULL),(21349,3889,124,NULL),(21350,4865,124,NULL),(21351,5512,124,NULL),(21352,6024,124,NULL),(21353,4775,124,NULL),(21354,6173,124,NULL),(21355,5505,124,NULL),(21356,5624,124,NULL),(21357,3980,124,NULL),(21358,4172,124,NULL),(21359,4232,124,NULL),(21360,4269,124,NULL),(21361,4405,124,NULL),(21362,4302,124,NULL),(21363,10433,124,NULL),(21364,17299,124,NULL),(21365,15465,124,NULL),(21366,10776,124,NULL),(21367,10487,124,NULL),(21368,15085,124,NULL),(21369,16541,138,NULL),(21370,2591,138,NULL),(21371,2578,138,NULL),(21372,2469,138,NULL),(21373,2461,138,NULL),(21374,1929,138,NULL),(21375,1876,138,NULL),(21376,1752,138,NULL),(21377,1658,138,NULL),(21378,1423,138,NULL),(21379,1323,138,NULL),(21380,1217,138,NULL),(21381,1185,138,NULL),(21382,1025,138,NULL),(21383,1005,138,NULL),(21384,976,138,NULL),(21385,509,138,NULL),(21386,876,138,NULL),(21387,860,138,NULL),(21388,832,138,NULL),(21389,643,138,NULL),(21390,605,138,NULL),(21391,455,138,NULL),(21392,367,138,NULL),(21393,342,138,NULL),(21394,338,138,NULL),(21395,326,138,NULL),(21396,316,138,NULL),(21397,292,138,NULL),(21398,287,138,NULL),(21399,283,138,NULL),(21400,278,138,NULL),(21401,268,138,NULL),(21402,264,138,NULL),(21403,263,138,NULL),(21404,258,138,NULL),(21405,231,138,NULL),(21406,219,138,NULL),(21407,217,138,NULL),(21408,209,138,NULL),(21409,203,138,NULL),(21410,202,138,NULL),(21411,191,138,NULL),(21412,190,138,NULL),(21413,169,138,NULL),(21414,151,138,NULL),(21415,141,138,NULL),(21416,136,138,NULL),(21417,122,138,NULL),(21418,121,138,NULL),(21419,100,138,NULL),(21420,83,138,NULL),(21421,70,138,NULL),(21422,67,138,NULL),(21423,66,138,NULL),(21424,58,138,NULL),(21425,50,138,NULL),(21426,35,138,NULL),(21427,33,138,NULL),(21428,29,138,NULL),(21429,28,138,NULL),(21430,27,138,NULL),(21431,26,138,NULL),(21432,24,138,NULL),(21433,21,138,NULL),(21434,20,138,NULL),(21435,16,138,NULL),(21436,15,138,NULL),(21437,14,138,NULL),(21438,11,138,NULL),(21439,9,138,NULL),(21440,7,138,NULL),(21441,2,138,NULL),(21442,1,138,NULL),(21443,3705,138,NULL),(21444,3516,138,NULL),(21445,3431,138,NULL),(21446,3525,138,NULL),(21447,3914,138,NULL),(21448,3422,138,NULL),(21449,3456,138,NULL),(21450,3468,138,NULL),(21451,3450,138,NULL),(21452,3463,138,NULL),(21453,3417,138,NULL),(21454,5266,138,NULL),(21455,3680,138,NULL),(21456,3667,138,NULL),(21457,3930,138,NULL),(21458,3419,138,NULL),(21459,3473,138,NULL),(21460,4397,138,NULL),(21461,3553,138,NULL),(21462,3769,138,NULL),(21463,3465,138,NULL),(21464,3621,138,NULL),(21465,3442,138,NULL),(21466,3560,138,NULL),(21467,3424,138,NULL),(21468,3416,138,NULL),(21469,3425,138,NULL),(21470,3423,138,NULL),(21471,3644,138,NULL),(21472,3455,138,NULL),(21473,3761,138,NULL),(21474,3446,138,NULL),(21475,3739,138,NULL),(21476,3459,138,NULL),(21477,3504,138,NULL),(21478,3483,138,NULL),(21479,4028,138,NULL),(21480,3762,138,NULL),(21481,3695,138,NULL),(21482,4032,138,NULL),(21483,3833,138,NULL),(21484,4170,138,NULL),(21485,4423,138,NULL),(21486,3948,138,NULL),(21487,4383,138,NULL),(21488,16634,47,NULL),(21489,16579,47,NULL),(21490,16545,47,NULL),(21491,16574,47,NULL),(21492,16550,47,NULL),(21493,3392,47,NULL),(21494,3345,47,NULL),(21495,3300,47,NULL),(21496,3285,47,NULL),(21497,3289,47,NULL),(21498,3295,47,NULL),(21499,3163,47,NULL),(21500,3151,47,NULL),(21501,3066,47,NULL),(21502,3028,47,NULL),(21503,2965,47,NULL),(21504,2914,47,NULL),(21505,2873,47,NULL),(21506,2570,47,NULL),(21507,2579,47,NULL),(21508,2490,47,NULL),(21509,2485,47,NULL),(21510,2460,47,NULL),(21511,2379,47,NULL),(21512,2206,47,NULL),(21513,2161,47,NULL),(21514,2106,47,NULL),(21515,2022,47,NULL),(21516,2000,47,NULL),(21517,1980,47,NULL),(21518,1920,47,NULL),(21519,1800,47,NULL),(21520,1768,47,NULL),(21521,1780,47,NULL),(21522,1749,47,NULL),(21523,1732,47,NULL),(21524,1539,47,NULL),(21525,1513,47,NULL),(21526,1524,47,NULL),(21527,1480,47,NULL),(21528,1456,47,NULL),(21529,1446,47,NULL),(21530,1431,47,NULL),(21531,1208,47,NULL),(21532,1109,47,NULL),(21533,1094,47,NULL),(21534,1004,47,NULL),(21535,978,47,NULL),(21536,509,47,NULL),(21537,930,47,NULL),(21538,904,47,NULL),(21539,876,47,NULL),(21540,860,47,NULL),(21541,848,47,NULL),(21542,796,47,NULL),(21543,704,47,NULL),(21544,766,47,NULL),(21545,724,47,NULL),(21546,717,47,NULL),(21547,713,47,NULL),(21548,658,47,NULL),(21549,643,47,NULL),(21550,605,47,NULL),(21551,561,47,NULL),(21552,485,47,NULL),(21553,476,47,NULL),(21554,455,47,NULL),(21555,363,47,NULL),(21556,350,47,NULL),(21557,349,47,NULL),(21558,345,47,NULL),(21559,287,47,NULL),(21560,283,47,NULL),(21561,268,47,NULL),(21562,260,47,NULL),(21563,258,47,NULL),(21564,242,47,NULL),(21565,231,47,NULL),(21566,229,47,NULL),(21567,219,47,NULL),(21568,217,47,NULL),(21569,215,47,NULL),(21570,209,47,NULL),(21571,206,47,NULL),(21572,203,47,NULL),(21573,191,47,NULL),(21574,189,47,NULL),(21575,169,47,NULL),(21576,137,47,NULL),(21577,136,47,NULL),(21578,125,47,NULL),(21579,122,47,NULL),(21580,121,47,NULL),(21581,119,47,NULL),(21582,118,47,NULL),(21583,88,47,NULL),(21584,70,47,NULL),(21585,67,47,NULL),(21586,66,47,NULL),(21587,61,47,NULL),(21588,58,47,NULL),(21589,53,47,NULL),(21590,42,47,NULL),(21591,38,47,NULL),(21592,35,47,NULL),(21593,32,47,NULL),(21594,28,47,NULL),(21595,27,47,NULL),(21596,26,47,NULL),(21597,20,47,NULL),(21598,14,47,NULL),(21599,13,47,NULL),(21600,11,47,NULL),(21601,9,47,NULL),(21602,5,47,NULL),(21603,3,47,NULL),(21604,1,47,NULL),(21605,3484,47,NULL),(21606,3535,47,NULL),(21607,3584,47,NULL),(21608,3454,47,NULL),(21609,3469,47,NULL),(21610,3620,47,NULL),(21611,3495,47,NULL),(21612,3525,47,NULL),(21613,3568,47,NULL),(21614,3421,47,NULL),(21615,4078,47,NULL),(21616,3559,47,NULL),(21617,3452,47,NULL),(21618,3427,47,NULL),(21619,3417,47,NULL),(21620,4317,47,NULL),(21621,3419,47,NULL),(21622,3510,47,NULL),(21623,3621,47,NULL),(21624,3472,47,NULL),(21625,4968,47,NULL),(21626,5552,47,NULL),(21627,4629,47,NULL),(21628,5443,47,NULL),(21629,3849,47,NULL),(21630,4153,47,NULL),(21631,4161,47,NULL),(21632,4113,47,NULL),(21633,3682,47,NULL),(21634,3554,47,NULL),(21635,3649,47,NULL),(21636,5006,47,NULL),(21637,3435,47,NULL),(21638,3498,47,NULL),(21639,3846,47,NULL),(21640,3623,47,NULL),(21641,3446,47,NULL),(21642,5125,47,NULL),(21643,3459,47,NULL),(21644,4902,47,NULL),(21645,5134,47,NULL),(21646,5652,47,NULL),(21647,6210,47,NULL),(21648,5429,47,NULL),(21649,4720,47,NULL),(21650,5017,47,NULL),(21651,4750,47,NULL),(21652,3889,47,NULL),(21653,4865,47,NULL),(21654,5512,47,NULL),(21655,4775,47,NULL),(21656,5505,47,NULL),(21657,5624,47,NULL),(21658,3808,47,NULL),(21659,4172,47,NULL),(21660,4232,47,NULL),(21661,4269,47,NULL),(21662,4405,47,NULL),(21663,4302,47,NULL),(21664,3445,47,NULL),(21665,3424,47,NULL),(21666,3425,47,NULL),(21667,4507,47,NULL),(21668,4073,47,NULL),(21669,3793,47,NULL),(21670,3813,47,NULL),(21671,4159,47,NULL),(21672,4307,47,NULL),(21673,4484,47,NULL),(21674,2807,147,NULL),(21675,2550,147,NULL),(21676,2220,147,NULL),(21677,1710,147,NULL),(21678,1684,147,NULL),(21679,1509,147,NULL),(21680,1403,147,NULL),(21681,1414,147,NULL),(21682,1338,147,NULL),(21683,1262,147,NULL),(21684,1247,147,NULL),(21685,1090,147,NULL),(21686,1005,147,NULL),(21687,976,147,NULL),(21688,954,147,NULL),(21689,942,147,NULL),(21690,921,147,NULL),(21691,860,147,NULL),(21692,846,147,NULL),(21693,805,147,NULL),(21694,782,147,NULL),(21695,703,147,NULL),(21696,680,147,NULL),(21697,678,147,NULL),(21698,670,147,NULL),(21699,646,147,NULL),(21700,624,147,NULL),(21701,621,147,NULL),(21702,617,147,NULL),(21703,611,147,NULL),(21704,605,147,NULL),(21705,581,147,NULL),(21706,561,147,NULL),(21707,517,147,NULL),(21708,486,147,NULL),(21709,455,147,NULL),(21710,452,147,NULL),(21711,410,147,NULL),(21712,409,147,NULL),(21713,405,147,NULL),(21714,397,147,NULL),(21715,389,147,NULL),(21716,376,147,NULL),(21717,374,147,NULL),(21718,371,147,NULL),(21719,350,147,NULL),(21720,349,147,NULL),(21721,347,147,NULL),(21722,345,147,NULL),(21723,344,147,NULL),(21724,342,147,NULL),(21725,338,147,NULL),(21726,334,147,NULL),(21727,330,147,NULL),(21728,321,147,NULL),(21729,316,147,NULL),(21730,297,147,NULL),(21731,287,147,NULL),(21732,268,147,NULL),(21733,264,147,NULL),(21734,260,147,NULL),(21735,234,147,NULL),(21736,231,147,NULL),(21737,222,147,NULL),(21738,203,147,NULL),(21739,191,147,NULL),(21740,190,147,NULL),(21741,179,147,NULL),(21742,160,147,NULL),(21743,141,147,NULL),(21744,137,147,NULL),(21745,136,147,NULL),(21746,135,147,NULL),(21747,134,147,NULL),(21748,124,147,NULL),(21749,122,147,NULL),(21750,110,147,NULL),(21751,105,147,NULL),(21752,100,147,NULL),(21753,99,147,NULL),(21754,96,147,NULL),(21755,94,147,NULL),(21756,92,147,NULL),(21757,90,147,NULL),(21758,89,147,NULL),(21759,88,147,NULL),(21760,86,147,NULL),(21761,78,147,NULL),(21762,70,147,NULL),(21763,67,147,NULL),(21764,64,147,NULL),(21765,55,147,NULL),(21766,50,147,NULL),(21767,45,147,NULL),(21768,44,147,NULL),(21769,29,147,NULL),(21770,27,147,NULL),(21771,26,147,NULL),(21772,25,147,NULL),(21773,24,147,NULL),(21774,11,147,NULL),(21775,5,147,NULL),(21776,2,147,NULL),(21777,3435,147,NULL),(21778,3498,147,NULL),(21779,3455,147,NULL),(21780,3761,147,NULL),(21781,3446,147,NULL),(21782,3459,147,NULL),(21783,3457,147,NULL),(21784,3483,147,NULL),(21785,4028,147,NULL),(21786,3762,147,NULL),(21787,3695,147,NULL),(21788,4493,147,NULL),(21789,3833,147,NULL),(21790,4170,147,NULL),(21791,3948,147,NULL),(21792,3484,147,NULL),(21793,3641,147,NULL),(21794,3574,147,NULL),(21795,3620,147,NULL),(21796,3621,147,NULL),(21797,4112,147,NULL),(21798,16620,124,NULL),(21799,16634,124,NULL),(21800,16610,124,NULL),(21801,16595,124,NULL),(21802,16579,124,NULL),(21803,16596,124,NULL),(21804,16560,124,NULL),(21805,16640,124,NULL),(21806,16570,124,NULL),(21807,16574,124,NULL),(21808,3392,124,NULL),(21809,3396,124,NULL),(21810,3345,124,NULL),(21811,3360,124,NULL),(21812,3326,124,NULL),(21813,3300,124,NULL),(21814,3285,124,NULL),(21815,3289,124,NULL),(21816,3306,124,NULL),(21817,3280,124,NULL),(21818,3264,124,NULL),(21819,3295,124,NULL),(21820,3169,124,NULL),(21821,3151,124,NULL),(21822,3179,124,NULL),(21823,3110,124,NULL),(21824,3069,124,NULL),(21825,3042,124,NULL),(21826,2965,124,NULL),(21827,2958,124,NULL),(21828,2894,124,NULL),(21829,2816,124,NULL),(21830,2656,124,NULL),(21831,2657,124,NULL),(21832,2706,124,NULL),(21833,2652,124,NULL),(21834,2579,124,NULL),(21835,2529,124,NULL),(21836,2523,124,NULL),(21837,2506,124,NULL),(21838,2461,124,NULL),(21839,2460,124,NULL),(21840,2425,124,NULL),(21841,2429,124,NULL),(21842,2410,124,NULL),(21843,2396,124,NULL),(21844,2390,124,NULL),(21845,2379,124,NULL),(21846,2300,124,NULL),(21847,2235,124,NULL),(21848,2206,124,NULL),(21849,2185,124,NULL),(21850,2161,124,NULL),(21851,2124,124,NULL),(21852,2106,124,NULL),(21853,2116,124,NULL),(21854,2095,124,NULL),(21855,1984,124,NULL),(21856,1898,124,NULL),(21857,1876,124,NULL),(21858,1854,124,NULL),(21859,1859,124,NULL),(21860,1832,124,NULL),(21861,1823,124,NULL),(21862,1800,124,NULL),(21863,1768,124,NULL),(21864,1780,124,NULL),(21865,1752,124,NULL),(21866,1701,124,NULL),(21867,1679,124,NULL),(21868,1658,124,NULL),(21869,1582,124,NULL),(21870,1572,124,NULL),(21871,1539,124,NULL),(21872,1480,124,NULL),(21873,1492,124,NULL),(21874,1456,124,NULL),(21875,1431,124,NULL),(21876,1304,124,NULL),(21877,1250,124,NULL),(21878,1208,124,NULL),(21879,1143,124,NULL),(21880,1109,124,NULL),(21881,1094,124,NULL),(21882,1018,124,NULL),(21883,994,124,NULL),(21884,992,124,NULL),(21885,977,124,NULL),(21886,974,124,NULL),(21887,509,124,NULL),(21888,941,124,NULL),(21889,930,124,NULL),(21890,916,124,NULL),(21891,905,124,NULL),(21892,904,124,NULL),(21893,881,124,NULL),(21894,875,124,NULL),(21895,867,124,NULL),(21896,848,124,NULL),(21897,832,124,NULL),(21898,798,124,NULL),(21899,704,124,NULL),(21900,766,124,NULL),(21901,744,124,NULL),(21902,735,124,NULL),(21903,713,124,NULL),(21904,693,124,NULL),(21905,658,124,NULL),(21906,643,124,NULL),(21907,611,124,NULL),(21908,605,124,NULL),(21909,575,124,NULL),(21910,561,124,NULL),(21911,560,124,NULL),(21912,485,124,NULL),(21913,455,124,NULL),(21914,448,124,NULL),(21915,443,124,NULL),(21916,442,124,NULL),(21917,441,124,NULL),(21918,409,124,NULL),(21919,363,124,NULL),(21920,349,124,NULL),(21921,347,124,NULL),(21922,345,124,NULL),(21923,344,124,NULL),(21924,342,124,NULL),(21925,303,124,NULL),(21926,287,124,NULL),(21927,283,124,NULL),(21928,278,124,NULL),(21929,239,124,NULL),(21930,238,124,NULL),(21931,231,124,NULL),(21932,229,124,NULL),(21933,219,124,NULL),(21934,217,124,NULL),(21935,215,124,NULL),(21936,209,124,NULL),(21937,204,124,NULL),(21938,202,124,NULL),(21939,191,124,NULL),(21940,189,124,NULL),(21941,179,124,NULL),(21942,172,124,NULL),(21943,169,124,NULL),(21944,167,124,NULL),(21945,162,124,NULL),(21946,154,124,NULL),(21947,153,124,NULL),(21948,145,124,NULL),(21949,144,124,NULL),(21950,137,124,NULL),(21951,136,124,NULL),(21952,121,124,NULL),(21953,94,124,NULL),(21954,88,124,NULL),(21955,84,124,NULL),(21956,83,124,NULL),(21957,81,124,NULL),(21958,79,124,NULL),(21959,75,124,NULL),(21960,74,124,NULL),(21961,70,124,NULL),(21962,67,124,NULL),(21963,66,124,NULL),(21964,61,124,NULL),(21965,58,124,NULL),(21966,56,124,NULL),(21967,55,124,NULL),(21968,53,124,NULL),(21969,50,124,NULL),(21970,49,124,NULL),(21971,48,124,NULL),(21972,42,124,NULL),(21973,41,124,NULL),(21974,35,124,NULL),(21975,34,124,NULL),(21976,33,124,NULL),(21977,29,124,NULL),(21978,28,124,NULL),(21979,27,124,NULL),(21980,26,124,NULL),(21981,21,124,NULL),(21982,20,124,NULL),(21983,19,124,NULL),(21984,15,124,NULL),(21985,13,124,NULL),(21986,12,124,NULL),(21987,11,124,NULL),(21988,9,124,NULL),(21989,8,124,NULL),(21990,7,124,NULL),(21991,5,124,NULL),(21992,4,124,NULL),(21993,3,124,NULL),(21994,2,124,NULL),(21995,1,124,NULL),(21996,16579,145,NULL),(21997,16560,145,NULL),(21998,3413,145,NULL),(21999,16574,145,NULL),(22000,3411,145,NULL),(22001,3392,145,NULL),(22002,3345,145,NULL),(22003,3360,145,NULL),(22004,3330,145,NULL),(22005,3354,145,NULL),(22006,3349,145,NULL),(22007,3300,145,NULL),(22008,3304,145,NULL),(22009,3285,145,NULL),(22010,3280,145,NULL),(22011,3274,145,NULL),(22012,3254,145,NULL),(22013,3208,145,NULL),(22014,3191,145,NULL),(22015,3210,145,NULL),(22016,3211,145,NULL),(22017,3169,145,NULL),(22018,3151,145,NULL),(22019,3105,145,NULL),(22020,3083,145,NULL),(22021,3075,145,NULL),(22022,3019,145,NULL),(22023,3042,145,NULL),(22024,2965,145,NULL),(22025,2903,145,NULL),(22026,2761,145,NULL),(22027,2696,145,NULL),(22028,2678,145,NULL),(22029,2570,145,NULL),(22030,2563,145,NULL),(22031,2559,145,NULL),(22032,2586,145,NULL),(22033,2580,145,NULL),(22034,2579,145,NULL),(22035,2583,145,NULL),(22036,2582,145,NULL),(22037,2530,145,NULL),(22038,2523,145,NULL),(22039,2466,145,NULL),(22040,2461,145,NULL),(22041,2460,145,NULL),(22042,2456,145,NULL),(22043,2379,145,NULL),(22044,2360,145,NULL),(22045,2236,145,NULL),(22046,2235,145,NULL),(22047,2239,145,NULL),(22048,2251,145,NULL),(22049,2233,145,NULL),(22050,2231,145,NULL),(22051,2208,145,NULL),(22052,2181,145,NULL),(22053,2149,145,NULL),(22054,2161,145,NULL),(22055,2125,145,NULL),(22056,2106,145,NULL),(22057,2115,145,NULL),(22058,2095,145,NULL),(22059,2058,145,NULL),(22060,2057,145,NULL),(22061,2038,145,NULL),(22062,1981,145,NULL),(22063,1992,145,NULL),(22064,1962,145,NULL),(22065,1968,145,NULL),(22066,1947,145,NULL),(22067,1945,145,NULL),(22068,1937,145,NULL),(22069,1941,145,NULL),(22070,1898,145,NULL),(22071,1899,145,NULL),(22072,1817,145,NULL),(22073,1800,145,NULL),(22074,1812,145,NULL),(22075,1791,145,NULL),(22076,1790,145,NULL),(22077,1768,145,NULL),(22078,1780,145,NULL),(22079,1752,145,NULL),(22080,1732,145,NULL),(22081,1680,145,NULL),(22082,1684,145,NULL),(22083,1647,145,NULL),(22084,1652,145,NULL),(22085,1626,145,NULL),(22086,1624,145,NULL),(22087,1598,145,NULL),(22088,1568,145,NULL),(22089,1518,145,NULL),(22090,1508,145,NULL),(22091,1488,145,NULL),(22092,1480,145,NULL),(22093,1464,145,NULL),(22094,1423,145,NULL),(22095,1422,145,NULL),(22096,1346,145,NULL),(22097,1338,145,NULL),(22098,1324,145,NULL),(22099,1283,145,NULL),(22100,1282,145,NULL),(22101,1268,145,NULL),(22102,1254,145,NULL),(22103,2312,145,NULL),(22104,1248,145,NULL),(22105,1726,145,NULL),(22106,1233,145,NULL),(22107,1209,145,NULL),(22108,1192,145,NULL),(22109,1550,145,NULL),(22110,1177,145,NULL),(22111,1140,145,NULL),(22112,1137,145,NULL),(22113,1300,145,NULL),(22114,1109,145,NULL),(22115,1106,145,NULL),(22116,1094,145,NULL),(22117,1091,145,NULL),(22118,1046,145,NULL),(22119,1042,145,NULL),(22120,1162,145,NULL),(22121,1161,145,NULL),(22122,1029,145,NULL),(22123,1025,145,NULL),(22124,1021,145,NULL),(22125,1020,145,NULL),(22126,1011,145,NULL),(22127,1009,145,NULL),(22128,1004,145,NULL),(22129,997,145,NULL),(22130,994,145,NULL),(22131,992,145,NULL),(22132,977,145,NULL),(22133,509,145,NULL),(22134,962,145,NULL),(22135,959,145,NULL),(22136,951,145,NULL),(22137,942,145,NULL),(22138,930,145,NULL),(22139,922,145,NULL),(22140,921,145,NULL),(22141,912,145,NULL),(22142,907,145,NULL),(22143,905,145,NULL),(22144,904,145,NULL),(22145,884,145,NULL),(22146,881,145,NULL),(22147,877,145,NULL),(22148,876,145,NULL),(22149,875,145,NULL),(22150,867,145,NULL),(22151,862,145,NULL),(22152,860,145,NULL),(22153,848,145,NULL),(22154,846,145,NULL),(22155,841,145,NULL),(22156,840,145,NULL),(22157,834,145,NULL),(22158,622,145,NULL),(22159,641,145,NULL),(22160,827,145,NULL),(22161,802,145,NULL),(22162,798,145,NULL),(22163,797,145,NULL),(22164,787,145,NULL),(22165,784,145,NULL),(22166,783,145,NULL),(22167,704,145,NULL),(22168,701,145,NULL),(22169,700,145,NULL),(22170,590,145,NULL),(22171,746,145,NULL),(22172,733,145,NULL),(22173,724,145,NULL),(22174,721,145,NULL),(22175,713,145,NULL),(22176,698,145,NULL),(22177,695,145,NULL),(22178,685,145,NULL),(22179,684,145,NULL),(22180,680,145,NULL),(22181,678,145,NULL),(22182,664,145,NULL),(22183,658,145,NULL),(22184,650,145,NULL),(22185,646,145,NULL),(22186,643,145,NULL),(22187,630,145,NULL),(22188,605,145,NULL),(22189,576,145,NULL),(22190,561,145,NULL),(22191,560,145,NULL),(22192,547,145,NULL),(22193,542,145,NULL),(22194,540,145,NULL),(22195,535,145,NULL),(22196,530,145,NULL),(22197,526,145,NULL),(22198,518,145,NULL),(22199,506,145,NULL),(22200,494,145,NULL),(22201,486,145,NULL),(22202,475,145,NULL),(22203,474,145,NULL),(22204,455,145,NULL),(22205,452,145,NULL),(22206,450,145,NULL),(22207,448,145,NULL),(22208,441,145,NULL),(22209,440,145,NULL),(22210,438,145,NULL),(22211,435,145,NULL),(22212,414,145,NULL),(22213,410,145,NULL),(22214,409,145,NULL),(22215,396,145,NULL),(22216,392,145,NULL),(22217,390,145,NULL),(22218,389,145,NULL),(22219,387,145,NULL),(22220,383,145,NULL),(22221,374,145,NULL),(22222,371,145,NULL),(22223,367,145,NULL),(22224,363,145,NULL),(22225,350,145,NULL),(22226,349,145,NULL),(22227,347,145,NULL),(22228,344,145,NULL),(22229,342,145,NULL),(22230,338,145,NULL),(22231,337,145,NULL),(22232,326,145,NULL),(22233,324,145,NULL),(22234,322,145,NULL),(22235,319,145,NULL),(22236,316,145,NULL),(22237,304,145,NULL),(22238,287,145,NULL),(22239,283,145,NULL),(22240,278,145,NULL),(22241,273,145,NULL),(22242,268,145,NULL),(22243,257,145,NULL),(22244,239,145,NULL),(22245,238,145,NULL),(22246,237,145,NULL),(22247,234,145,NULL),(22248,231,145,NULL),(22249,230,145,NULL),(22250,229,145,NULL),(22251,222,145,NULL),(22252,221,145,NULL),(22253,220,145,NULL),(22254,219,145,NULL),(22255,218,145,NULL),(22256,217,145,NULL),(22257,216,145,NULL),(22258,215,145,NULL),(22259,213,145,NULL),(22260,210,145,NULL),(22261,209,145,NULL),(22262,207,145,NULL),(22263,206,145,NULL),(22264,205,145,NULL),(22265,203,145,NULL),(22266,202,145,NULL),(22267,201,145,NULL),(22268,200,145,NULL),(22269,198,145,NULL),(22270,191,145,NULL),(22271,190,145,NULL),(22272,169,145,NULL),(22273,167,145,NULL),(22274,162,145,NULL),(22275,160,145,NULL),(22276,154,145,NULL),(22277,153,145,NULL),(22278,152,145,NULL),(22279,151,145,NULL),(22280,145,145,NULL),(22281,144,145,NULL),(22282,142,145,NULL),(22283,141,145,NULL),(22284,139,145,NULL),(22285,137,145,NULL),(22286,136,145,NULL),(22287,135,145,NULL),(22288,134,145,NULL),(22289,130,145,NULL),(22290,129,145,NULL),(22291,127,145,NULL),(22292,125,145,NULL),(22293,124,145,NULL),(22294,122,145,NULL),(22295,121,145,NULL),(22296,120,145,NULL),(22297,118,145,NULL),(22298,116,145,NULL),(22299,113,145,NULL),(22300,112,145,NULL),(22301,107,145,NULL),(22302,104,145,NULL),(22303,103,145,NULL),(22304,102,145,NULL),(22305,101,145,NULL),(22306,100,145,NULL),(22307,98,145,NULL),(22308,96,145,NULL),(22309,94,145,NULL),(22310,92,145,NULL),(22311,90,145,NULL),(22312,89,145,NULL),(22313,88,145,NULL),(22314,86,145,NULL),(22315,83,145,NULL),(22316,82,145,NULL),(22317,81,145,NULL),(22318,80,145,NULL),(22319,79,145,NULL),(22320,78,145,NULL),(22321,77,145,NULL),(22322,75,145,NULL),(22323,74,145,NULL),(22324,71,145,NULL),(22325,70,145,NULL),(22326,69,145,NULL),(22327,67,145,NULL),(22328,66,145,NULL),(22329,64,145,NULL),(22330,63,145,NULL),(22331,62,145,NULL),(22332,61,145,NULL),(22333,59,145,NULL),(22334,58,145,NULL),(22335,57,145,NULL),(22336,56,145,NULL),(22337,55,145,NULL),(22338,54,145,NULL),(22339,53,145,NULL),(22340,52,145,NULL),(22341,51,145,NULL),(22342,50,145,NULL),(22343,48,145,NULL),(22344,47,145,NULL),(22345,46,145,NULL),(22346,45,145,NULL),(22347,44,145,NULL),(22348,42,145,NULL),(22349,41,145,NULL),(22350,40,145,NULL),(22351,39,145,NULL),(22352,38,145,NULL),(22353,35,145,NULL),(22354,34,145,NULL),(22355,33,145,NULL),(22356,32,145,NULL),(22357,31,145,NULL),(22358,29,145,NULL),(22359,28,145,NULL),(22360,27,145,NULL),(22361,26,145,NULL),(22362,25,145,NULL),(22363,24,145,NULL),(22364,22,145,NULL),(22365,21,145,NULL),(22366,20,145,NULL),(22367,19,145,NULL),(22368,17,145,NULL),(22369,14,145,NULL),(22370,11,145,NULL),(22371,10,145,NULL),(22372,9,145,NULL),(22373,7,145,NULL),(22374,4,145,NULL),(22375,3,145,NULL),(22376,2,145,NULL),(22377,1,145,NULL),(22378,3635,145,NULL),(22379,3526,145,NULL),(22380,3436,145,NULL),(22381,3503,145,NULL),(22382,3531,145,NULL),(22383,3556,145,NULL),(22384,4174,145,NULL),(22385,3585,145,NULL),(22386,3660,145,NULL),(22387,3486,145,NULL),(22388,3476,145,NULL),(22389,3734,145,NULL),(22390,3614,145,NULL),(22391,3918,145,NULL),(22392,3539,145,NULL),(22393,3418,145,NULL),(22394,3416,145,NULL),(22395,3511,145,NULL),(22396,4095,145,NULL),(22397,3492,145,NULL),(22398,3837,145,NULL),(22399,3474,145,NULL),(22400,3449,145,NULL),(22401,3496,145,NULL),(22402,3437,145,NULL),(22403,3817,145,NULL),(22404,4625,145,NULL),(22405,3760,145,NULL),(22406,3676,145,NULL),(22407,3578,145,NULL),(22408,3481,145,NULL),(22409,3440,145,NULL),(22410,3879,145,NULL),(22411,3647,145,NULL),(22412,3759,145,NULL),(22413,3544,145,NULL),(22414,4376,145,NULL),(22415,3960,145,NULL),(22416,5304,145,NULL),(22417,3653,145,NULL),(22418,3613,145,NULL),(22419,3514,145,NULL),(22420,4073,145,NULL),(22421,3793,145,NULL),(22422,3733,145,NULL),(22423,3565,145,NULL),(22424,4646,145,NULL),(22425,3813,145,NULL),(22426,5057,145,NULL),(22427,3776,145,NULL),(22428,3730,145,NULL),(22429,3766,145,NULL),(22430,4362,145,NULL),(22431,4681,145,NULL),(22432,4753,145,NULL),(22433,4311,145,NULL),(22434,4401,145,NULL),(22435,3640,145,NULL),(22436,4769,145,NULL),(22437,3700,145,NULL),(22438,4399,145,NULL),(22439,3956,145,NULL),(22440,5157,145,NULL),(22441,4008,145,NULL),(22442,3664,145,NULL),(22443,3892,145,NULL),(22444,5464,145,NULL),(22445,3802,145,NULL),(22446,6351,145,NULL),(22447,4323,145,NULL),(22448,4582,145,NULL),(22449,3763,145,NULL),(22450,3650,145,NULL),(22451,3843,145,NULL),(22452,4620,145,NULL),(22453,4019,145,NULL),(22454,4588,145,NULL),(22455,4103,145,NULL),(22456,4028,145,NULL),(22457,3993,145,NULL),(22458,4941,145,NULL),(22459,3484,145,NULL),(22460,3500,145,NULL),(22461,3469,145,NULL),(22462,3493,145,NULL),(22463,3444,145,NULL),(22464,3566,145,NULL),(22465,3429,145,NULL),(22466,3652,145,NULL),(22467,3468,145,NULL),(22468,3551,145,NULL),(22469,3494,145,NULL),(22470,3508,145,NULL),(22471,3419,145,NULL),(22472,3473,145,NULL),(22473,3621,145,NULL),(22474,3939,145,NULL),(22475,4443,145,NULL),(22476,4210,145,NULL),(22477,4113,145,NULL),(22478,4587,145,NULL),(22479,6374,145,NULL),(22480,3533,140,NULL),(22481,3418,140,NULL),(22482,3416,140,NULL),(22483,3420,140,NULL),(22484,3578,140,NULL),(22485,3481,140,NULL),(22486,3506,140,NULL),(22487,3440,140,NULL),(22488,4592,140,NULL),(22489,3530,140,NULL),(22490,4507,140,NULL),(22491,3859,140,NULL),(22492,3613,140,NULL),(22493,4971,140,NULL),(22494,3517,140,NULL),(22495,3733,140,NULL),(22496,3565,140,NULL),(22497,4646,140,NULL),(22498,3813,140,NULL),(22499,4186,140,NULL),(22500,4307,140,NULL),(22501,3499,140,NULL),(22502,4769,140,NULL),(22503,5157,140,NULL),(22504,4484,140,NULL),(22505,3753,140,NULL),(22506,5599,140,NULL),(22507,16715,140,NULL),(22508,3555,140,NULL),(22509,3484,140,NULL),(22510,3454,140,NULL),(22511,3469,140,NULL),(22512,3525,140,NULL),(22513,3421,140,NULL),(22514,3785,140,NULL),(22515,3422,140,NULL),(22516,3551,140,NULL),(22517,3463,140,NULL),(22518,3417,140,NULL),(22519,3522,140,NULL),(22520,4317,140,NULL),(22521,3419,140,NULL),(22522,3621,140,NULL),(22523,14592,140,NULL),(22524,5153,140,NULL),(22525,4629,140,NULL),(22526,12164,140,NULL),(22527,5443,140,NULL),(22528,3849,140,NULL),(22529,14544,140,NULL),(22530,5784,140,NULL),(22531,5372,140,NULL),(22532,16229,140,NULL),(22533,4153,140,NULL),(22534,4113,140,NULL),(22535,15257,140,NULL),(22536,3649,140,NULL),(22537,5006,140,NULL),(22538,3435,140,NULL),(22539,15465,140,NULL),(22540,3524,140,NULL),(22541,3455,140,NULL),(22542,15283,140,NULL),(22543,3489,140,NULL),(22544,15300,140,NULL),(22545,4519,140,NULL),(22546,3446,140,NULL),(22547,4119,140,NULL),(22548,16386,140,NULL),(22549,5037,140,NULL),(22550,5125,140,NULL),(22551,15319,140,NULL),(22552,4061,140,NULL),(22553,3459,140,NULL),(22554,3483,140,NULL),(22555,4902,140,NULL),(22556,15332,140,NULL),(22557,5134,140,NULL),(22558,5652,140,NULL),(22559,16175,140,NULL),(22560,3762,140,NULL),(22561,4720,140,NULL),(22562,8982,140,NULL),(22563,5017,140,NULL),(22564,4750,140,NULL),(22565,15085,140,NULL),(22566,3889,140,NULL),(22567,4865,140,NULL),(22568,10487,140,NULL),(22569,5512,140,NULL),(22570,5068,140,NULL),(22571,16165,140,NULL),(22572,4775,140,NULL),(22573,5624,140,NULL),(22574,16523,140,NULL),(22575,4172,140,NULL),(22576,4232,140,NULL),(22577,17253,140,NULL),(22578,4269,140,NULL),(22579,4405,140,NULL),(22580,6617,140,NULL),(22581,4302,140,NULL),(22582,4662,140,NULL),(22583,6727,140,NULL),(22584,4714,140,NULL),(22585,16959,140,NULL),(22586,17408,137,NULL),(22587,16620,137,NULL),(22588,16634,137,NULL),(22589,16635,137,NULL),(22590,16601,137,NULL),(22591,16595,137,NULL),(22592,16605,137,NULL),(22593,16625,137,NULL),(22594,16579,137,NULL),(22595,16560,137,NULL),(22596,16641,137,NULL),(22597,16556,137,NULL),(22598,16640,137,NULL),(22599,16545,137,NULL),(22600,16570,137,NULL),(22601,16574,137,NULL),(22602,16645,137,NULL),(22603,16589,137,NULL),(22604,16550,137,NULL),(22605,3411,137,NULL),(22606,3392,137,NULL),(22607,3394,137,NULL),(22608,3396,137,NULL),(22609,3356,137,NULL),(22610,3355,137,NULL),(22611,3345,137,NULL),(22612,3360,137,NULL),(22613,3375,137,NULL),(22614,3304,137,NULL),(22615,3289,137,NULL),(22616,3306,137,NULL),(22617,3280,137,NULL),(22618,3295,137,NULL),(22619,3208,137,NULL),(22620,3190,137,NULL),(22621,3191,137,NULL),(22622,3223,137,NULL),(22623,3174,137,NULL),(22624,3169,137,NULL),(22625,3151,137,NULL),(22626,3158,137,NULL),(22627,3110,137,NULL),(22628,3101,137,NULL),(22629,3105,137,NULL),(22630,3108,137,NULL),(22631,3066,137,NULL),(22632,3042,137,NULL),(22633,2965,137,NULL),(22634,2958,137,NULL),(22635,2962,137,NULL),(22636,2894,137,NULL),(22637,2873,137,NULL),(22638,2874,137,NULL),(22639,2818,137,NULL),(22640,2843,137,NULL),(22641,2824,137,NULL),(22642,2780,137,NULL),(22643,2799,137,NULL),(22644,2769,137,NULL),(22645,2698,137,NULL),(22646,2685,137,NULL),(22647,2683,137,NULL),(22648,2657,137,NULL),(22649,2570,137,NULL),(22650,2563,137,NULL),(22651,2560,137,NULL),(22652,2551,137,NULL),(22653,2594,137,NULL),(22654,2579,137,NULL),(22655,2529,137,NULL),(22656,2523,137,NULL),(22657,2503,137,NULL),(22658,2469,137,NULL),(22659,2460,137,NULL),(22660,2425,137,NULL),(22661,2442,137,NULL),(22662,2429,137,NULL),(22663,2413,137,NULL),(22664,2395,137,NULL),(22665,2401,137,NULL),(22666,2342,137,NULL),(22667,2390,137,NULL),(22668,2381,137,NULL),(22669,2379,137,NULL),(22670,2364,137,NULL),(22671,2360,137,NULL),(22672,2351,137,NULL),(22673,2319,137,NULL),(22674,2320,137,NULL),(22675,2302,137,NULL),(22676,2235,137,NULL),(22677,2270,137,NULL),(22678,2255,137,NULL),(22679,2206,137,NULL),(22680,2180,137,NULL),(22681,2185,137,NULL),(22682,2169,137,NULL),(22683,2176,137,NULL),(22684,2149,137,NULL),(22685,2161,137,NULL),(22686,2140,137,NULL),(22687,2145,137,NULL),(22688,2144,137,NULL),(22689,2116,137,NULL),(22690,2115,137,NULL),(22691,2089,137,NULL),(22692,2033,137,NULL),(22693,2011,137,NULL),(22694,1980,137,NULL),(22695,1979,137,NULL),(22696,1976,137,NULL),(22697,1952,137,NULL),(22698,1930,137,NULL),(22699,1929,137,NULL),(22700,1922,137,NULL),(22701,1920,137,NULL),(22702,1870,137,NULL),(22703,1863,137,NULL),(22704,1877,137,NULL),(22705,1822,137,NULL),(22706,1800,137,NULL),(22707,1791,137,NULL),(22708,1790,137,NULL),(22709,1769,137,NULL),(22710,1768,137,NULL),(22711,1780,137,NULL),(22712,1752,137,NULL),(22713,1749,137,NULL),(22714,1732,137,NULL),(22715,1689,137,NULL),(22716,1679,137,NULL),(22717,1658,137,NULL),(22718,1572,137,NULL),(22719,1534,137,NULL),(22720,1512,137,NULL),(22721,1524,137,NULL),(22722,1480,137,NULL),(22723,1492,137,NULL),(22724,1475,137,NULL),(22725,1456,137,NULL),(22726,1423,137,NULL),(22727,1431,137,NULL),(22728,1408,137,NULL),(22729,1400,137,NULL),(22730,1399,137,NULL),(22731,1352,137,NULL),(22732,1351,137,NULL),(22733,1358,137,NULL),(22734,1323,137,NULL),(22735,1343,137,NULL),(22736,1342,137,NULL),(22737,1295,137,NULL),(22738,2215,137,NULL),(22739,1726,137,NULL),(22740,2226,137,NULL),(22741,1208,137,NULL),(22742,1207,137,NULL),(22743,1143,137,NULL),(22744,1137,137,NULL),(22745,1128,137,NULL),(22746,1109,137,NULL),(22747,1094,137,NULL),(22748,1017,137,NULL),(22749,509,137,NULL),(22750,930,137,NULL),(22751,916,137,NULL),(22752,912,137,NULL),(22753,904,137,NULL),(22754,881,137,NULL),(22755,877,137,NULL),(22756,876,137,NULL),(22757,875,137,NULL),(22758,873,137,NULL),(22759,867,137,NULL),(22760,860,137,NULL),(22761,848,137,NULL),(22762,798,137,NULL),(22763,704,137,NULL),(22764,771,137,NULL),(22765,763,137,NULL),(22766,709,137,NULL),(22767,733,137,NULL),(22768,713,137,NULL),(22769,658,137,NULL),(22770,643,137,NULL),(22771,628,137,NULL),(22772,567,137,NULL),(22773,560,137,NULL),(22774,547,137,NULL),(22775,516,137,NULL),(22776,507,137,NULL),(22777,485,137,NULL),(22778,455,137,NULL),(22779,441,137,NULL),(22780,424,137,NULL),(22781,416,137,NULL),(22782,414,137,NULL),(22783,412,137,NULL),(22784,401,137,NULL),(22785,392,137,NULL),(22786,387,137,NULL),(22787,367,137,NULL),(22788,350,137,NULL),(22789,349,137,NULL),(22790,344,137,NULL),(22791,342,137,NULL),(22792,338,137,NULL),(22793,334,137,NULL),(22794,326,137,NULL),(22795,303,137,NULL),(22796,300,137,NULL),(22797,287,137,NULL),(22798,283,137,NULL),(22799,268,137,NULL),(22800,263,137,NULL),(22801,260,137,NULL),(22802,258,137,NULL),(22803,242,137,NULL),(22804,239,137,NULL),(22805,238,137,NULL),(22806,237,137,NULL),(22807,234,137,NULL),(22808,232,137,NULL),(22809,231,137,NULL),(22810,225,137,NULL),(22811,219,137,NULL),(22812,217,137,NULL),(22813,215,137,NULL),(22814,213,137,NULL),(22815,210,137,NULL),(22816,209,137,NULL),(22817,207,137,NULL),(22818,206,137,NULL),(22819,204,137,NULL),(22820,203,137,NULL),(22821,200,137,NULL),(22822,198,137,NULL),(22823,191,137,NULL),(22824,189,137,NULL),(22825,179,137,NULL),(22826,172,137,NULL),(22827,169,137,NULL),(22828,167,137,NULL),(22829,164,137,NULL),(22830,162,137,NULL),(22831,155,137,NULL),(22832,154,137,NULL),(22833,153,137,NULL),(22834,152,137,NULL),(22835,144,137,NULL),(22836,143,137,NULL),(22837,141,137,NULL),(22838,137,137,NULL),(22839,136,137,NULL),(22840,125,137,NULL),(22841,121,137,NULL),(22842,118,137,NULL),(22843,88,137,NULL),(22844,83,137,NULL),(22845,81,137,NULL),(22846,80,137,NULL),(22847,79,137,NULL),(22848,78,137,NULL),(22849,77,137,NULL),(22850,76,137,NULL),(22851,75,137,NULL),(22852,74,137,NULL),(22853,73,137,NULL),(22854,72,137,NULL),(22855,70,137,NULL),(22856,69,137,NULL),(22857,62,137,NULL),(22858,61,137,NULL),(22859,58,137,NULL),(22860,56,137,NULL),(22861,55,137,NULL),(22862,54,137,NULL),(22863,53,137,NULL),(22864,52,137,NULL),(22865,51,137,NULL),(22866,50,137,NULL),(22867,48,137,NULL),(22868,46,137,NULL),(22869,45,137,NULL),(22870,42,137,NULL),(22871,41,137,NULL),(22872,40,137,NULL),(22873,39,137,NULL),(22874,37,137,NULL),(22875,35,137,NULL),(22876,33,137,NULL),(22877,31,137,NULL),(22878,28,137,NULL),(22879,27,137,NULL),(22880,26,137,NULL),(22881,22,137,NULL),(22882,20,137,NULL),(22883,17,137,NULL),(22884,15,137,NULL),(22885,14,137,NULL),(22886,11,137,NULL),(22887,9,137,NULL),(22888,8,137,NULL),(22889,7,137,NULL),(22890,5,137,NULL),(22891,4,137,NULL),(22892,3,137,NULL),(22893,2,137,NULL),(22894,1,137,NULL),(22895,3682,137,NULL),(22896,3554,137,NULL),(22897,3740,137,NULL),(22898,3618,137,NULL),(22899,5006,137,NULL),(22900,3435,137,NULL),(22901,3498,137,NULL),(22902,3846,137,NULL),(22903,3623,137,NULL),(22904,3751,137,NULL),(22905,3587,137,NULL),(22906,3524,137,NULL),(22907,3455,137,NULL),(22908,3489,137,NULL),(22909,3541,137,NULL),(22910,3761,137,NULL),(22911,3446,137,NULL),(22912,3820,137,NULL),(22913,3739,137,NULL),(22914,4811,137,NULL),(22915,4510,137,NULL),(22916,3982,137,NULL),(22917,4239,137,NULL),(22918,3459,137,NULL),(22919,5002,137,NULL),(22920,3789,137,NULL),(22921,3483,137,NULL),(22922,4902,137,NULL),(22923,3923,137,NULL),(22924,5134,137,NULL),(22925,5652,137,NULL),(22926,4412,137,NULL),(22927,4801,137,NULL),(22928,3830,137,NULL),(22929,4028,137,NULL),(22930,3762,137,NULL),(22931,5331,137,NULL),(22932,3669,137,NULL),(22933,3749,137,NULL),(22934,4456,137,NULL),(22935,4204,137,NULL),(22936,4649,137,NULL),(22937,4612,137,NULL),(22938,5429,137,NULL),(22939,3695,137,NULL),(22940,4767,137,NULL),(22941,4720,137,NULL),(22942,5017,137,NULL),(22943,3482,137,NULL),(22944,3625,137,NULL),(22945,4750,137,NULL),(22946,4088,137,NULL),(22947,3672,137,NULL),(22948,3889,137,NULL),(22949,4865,137,NULL),(22950,3948,137,NULL),(22951,5512,137,NULL),(22952,4775,137,NULL),(22953,5797,137,NULL),(22954,5505,137,NULL),(22955,5624,137,NULL),(22956,3980,137,NULL),(22957,4172,137,NULL),(22958,4232,137,NULL),(22959,4269,137,NULL),(22960,4405,137,NULL),(22961,4302,137,NULL),(22962,4662,137,NULL),(22963,4714,137,NULL),(22964,3862,137,NULL),(22965,3564,137,NULL),(22966,3436,137,NULL),(22967,3531,137,NULL),(22968,3556,137,NULL),(22969,3533,137,NULL),(22970,3585,137,NULL),(22971,4167,137,NULL),(22972,3424,137,NULL),(22973,3416,137,NULL),(22974,3511,137,NULL),(22975,3723,137,NULL),(22976,3467,137,NULL),(22977,4784,137,NULL),(22978,3681,137,NULL),(22979,3437,137,NULL),(22980,3420,137,NULL),(22981,3552,137,NULL),(22982,3578,137,NULL),(22983,3481,137,NULL),(22984,3506,137,NULL),(22985,3440,137,NULL),(22986,3647,137,NULL),(22987,3710,137,NULL),(22988,4376,137,NULL),(22989,3534,137,NULL),(22990,3627,137,NULL),(22991,3530,137,NULL),(22992,3826,137,NULL),(22993,3859,137,NULL),(22994,3517,137,NULL),(22995,3565,137,NULL),(22996,3540,137,NULL),(22997,4307,137,NULL),(22998,3687,137,NULL),(22999,3730,137,NULL),(23000,3499,137,NULL),(23001,4026,137,NULL),(23002,3700,137,NULL),(23003,5157,137,NULL),(23004,4256,137,NULL),(23005,4484,137,NULL),(23006,5599,137,NULL),(23007,3632,137,NULL),(23008,3535,137,NULL),(23009,3624,137,NULL),(23010,3584,137,NULL),(23011,3430,137,NULL),(23012,3469,137,NULL),(23013,3493,137,NULL),(23014,3444,137,NULL),(23015,3505,137,NULL),(23016,3431,137,NULL),(23017,3525,137,NULL),(23018,3421,137,NULL),(23019,4237,137,NULL),(23020,3812,137,NULL),(23021,4078,137,NULL),(23022,3452,137,NULL),(23023,3529,137,NULL),(23024,3429,137,NULL),(23025,3456,137,NULL),(23026,3652,137,NULL),(23027,3427,137,NULL),(23028,3463,137,NULL),(23029,3417,137,NULL),(23030,3423,137,NULL),(23031,3702,137,NULL),(23032,4317,137,NULL),(23033,3419,137,NULL),(23034,4397,137,NULL),(23035,4280,137,NULL),(23036,3553,137,NULL),(23037,3439,137,NULL),(23038,3465,137,NULL),(23039,3675,137,NULL),(23040,3621,137,NULL),(23041,3611,137,NULL),(23042,3472,137,NULL),(23043,3842,137,NULL),(23044,3939,137,NULL),(23045,5552,137,NULL),(23046,3821,137,NULL),(23047,4629,137,NULL),(23048,5443,137,NULL),(23049,5784,137,NULL),(23050,4257,137,NULL),(23051,3964,137,NULL),(23052,4105,137,NULL),(23053,4153,137,NULL),(23054,4235,137,NULL),(23055,4733,137,NULL),(23056,4797,137,NULL),(23057,4016,137,NULL),(23058,4449,137,NULL),(23059,6421,137,NULL),(23060,6333,137,NULL),(23061,17017,137,NULL),(23062,6349,137,NULL),(23063,16722,137,NULL),(23064,3674,137,NULL),(23065,3443,137,NULL),(23066,3555,137,NULL),(23067,4411,137,NULL),(23068,3698,137,NULL),(23069,3735,137,NULL),(23070,5291,137,NULL),(23071,4124,137,NULL),(23072,12062,137,NULL),(23073,14349,137,NULL),(23074,12164,137,NULL),(23075,8082,137,NULL),(23076,15085,137,NULL),(23077,10487,137,NULL),(23078,6517,137,NULL),(23079,6518,137,NULL),(23080,6519,137,NULL),(23081,3217,106,NULL),(23082,3074,106,NULL),(23083,2684,106,NULL),(23084,2706,106,NULL),(23085,2550,106,NULL),(23086,2384,106,NULL),(23087,2306,106,NULL),(23088,2275,106,NULL),(23089,2220,106,NULL),(23090,2049,106,NULL),(23091,2033,106,NULL),(23092,2028,106,NULL),(23093,2022,106,NULL),(23094,1945,106,NULL),(23095,1894,106,NULL),(23096,1846,106,NULL),(23097,1780,106,NULL),(23098,1684,106,NULL),(23099,1668,106,NULL),(23100,1414,106,NULL),(23101,1385,106,NULL),(23102,1367,106,NULL),(23103,1170,106,NULL),(23104,1018,106,NULL),(23105,509,106,NULL),(23106,938,106,NULL),(23107,912,106,NULL),(23108,888,106,NULL),(23109,881,106,NULL),(23110,875,106,NULL),(23111,874,106,NULL),(23112,796,106,NULL),(23113,783,106,NULL),(23114,704,106,NULL),(23115,701,106,NULL),(23116,700,106,NULL),(23117,611,106,NULL),(23118,575,106,NULL),(23119,563,106,NULL),(23120,557,106,NULL),(23121,530,106,NULL),(23122,507,106,NULL),(23123,496,106,NULL),(23124,464,106,NULL),(23125,455,106,NULL),(23126,412,106,NULL),(23127,409,106,NULL),(23128,404,106,NULL),(23129,397,106,NULL),(23130,390,106,NULL),(23131,389,106,NULL),(23132,378,106,NULL),(23133,349,106,NULL),(23134,344,106,NULL),(23135,342,106,NULL),(23136,338,106,NULL),(23137,326,106,NULL),(23138,316,106,NULL),(23139,290,106,NULL),(23140,287,106,NULL),(23141,268,106,NULL),(23142,231,106,NULL),(23143,230,106,NULL),(23144,215,106,NULL),(23145,214,106,NULL),(23146,191,106,NULL),(23147,190,106,NULL),(23148,179,106,NULL),(23149,151,106,NULL),(23150,148,106,NULL),(23151,145,106,NULL),(23152,134,106,NULL),(23153,120,106,NULL),(23154,106,106,NULL),(23155,105,106,NULL),(23156,103,106,NULL),(23157,102,106,NULL),(23158,94,106,NULL),(23159,89,106,NULL),(23160,75,106,NULL),(23161,66,106,NULL),(23162,55,106,NULL),(23163,51,106,NULL),(23164,50,106,NULL),(23165,46,106,NULL),(23166,43,106,NULL),(23167,38,106,NULL),(23168,35,106,NULL),(23169,29,106,NULL),(23170,28,106,NULL),(23171,27,106,NULL),(23172,26,106,NULL),(23173,24,106,NULL),(23174,22,106,NULL),(23175,21,106,NULL),(23176,20,106,NULL),(23177,17,106,NULL),(23178,16,106,NULL),(23179,13,106,NULL),(23180,12,106,NULL),(23181,11,106,NULL),(23182,9,106,NULL),(23183,8,106,NULL),(23184,7,106,NULL),(23185,6,106,NULL),(23186,4,106,NULL),(23187,2,106,NULL),(23188,1,106,NULL),(23189,2873,143,NULL),(23190,1800,143,NULL),(23191,1752,143,NULL),(23192,1461,143,NULL),(23193,1423,143,NULL),(23194,1343,143,NULL),(23195,658,143,NULL),(23196,209,143,NULL),(23197,121,143,NULL),(23198,11,143,NULL),(23199,1,143,NULL),(23200,190,142,NULL),(23201,1390,108,NULL),(23202,728,108,NULL),(23203,42,108,NULL),(23204,3524,42,NULL),(23205,3455,42,NULL),(23206,3541,42,NULL),(23207,3994,42,NULL),(23208,4903,42,NULL),(23209,3761,42,NULL),(23210,3446,42,NULL),(23211,3820,42,NULL),(23212,3739,42,NULL),(23213,5472,42,NULL),(23214,3557,42,NULL),(23215,4510,42,NULL),(23216,3459,42,NULL),(23217,3504,42,NULL),(23218,3764,42,NULL),(23219,3483,42,NULL),(23220,5446,42,NULL),(23221,3923,42,NULL),(23222,3830,42,NULL),(23223,4044,42,NULL),(23224,4028,42,NULL),(23225,3762,42,NULL),(23226,3669,42,NULL),(23227,3749,42,NULL),(23228,3595,42,NULL),(23229,4934,42,NULL),(23230,4649,42,NULL),(23231,5122,42,NULL),(23232,3695,42,NULL),(23233,4261,42,NULL),(23234,4032,42,NULL),(23235,4493,42,NULL),(23236,4560,42,NULL),(23237,3833,42,NULL),(23238,3482,42,NULL),(23239,3625,42,NULL),(23240,4170,42,NULL),(23241,4423,42,NULL),(23242,4217,42,NULL),(23243,5043,42,NULL),(23244,3948,42,NULL),(23245,3521,42,NULL),(23246,3505,42,NULL),(23247,3431,42,NULL),(23248,3711,42,NULL),(23249,3914,42,NULL),(23250,3785,42,NULL),(23251,3452,42,NULL),(23252,3422,42,NULL),(23253,3456,42,NULL),(23254,3464,42,NULL),(23255,3463,42,NULL),(23256,3417,42,NULL),(23257,3508,42,NULL),(23258,4663,42,NULL),(23259,3946,42,NULL),(23260,3453,42,NULL),(23261,3528,42,NULL),(23262,3696,42,NULL),(23263,3419,42,NULL),(23264,3510,42,NULL),(23265,4920,42,NULL),(23266,3465,42,NULL),(23267,4004,42,NULL),(23268,3621,42,NULL),(23269,3472,42,NULL),(23270,3842,42,NULL),(23271,3592,42,NULL),(23272,5256,42,NULL),(23273,3797,42,NULL),(23274,5768,42,NULL),(23275,5457,42,NULL),(23276,3875,42,NULL),(23277,3857,42,NULL),(23278,4161,42,NULL),(23279,3476,42,NULL),(23280,3479,42,NULL),(23281,3424,42,NULL),(23282,3462,42,NULL),(23283,3425,42,NULL),(23284,3423,42,NULL),(23285,4646,42,NULL),(23286,4089,42,NULL),(23287,4186,42,NULL),(23288,4373,42,NULL),(23289,4332,42,NULL),(23290,2461,139,NULL),(23291,492,139,NULL),(23292,342,139,NULL),(23293,231,139,NULL),(23294,217,139,NULL),(23295,169,139,NULL),(23296,9,139,NULL),(23297,1,139,NULL),(23298,3417,139,NULL),(23299,3425,139,NULL),(23300,3739,139,NULL),(23301,16634,151,NULL),(23302,16610,151,NULL),(23303,16595,151,NULL),(23304,16579,151,NULL),(23305,16580,151,NULL),(23306,16560,151,NULL),(23307,16545,151,NULL),(23308,16570,151,NULL),(23309,16574,151,NULL),(23310,16645,151,NULL),(23311,16550,151,NULL),(23312,3411,151,NULL),(23313,3392,151,NULL),(23314,3356,151,NULL),(23315,3335,151,NULL),(23316,3300,151,NULL),(23317,3304,151,NULL),(23318,3304,151,NULL),(23319,3285,151,NULL),(23320,3285,151,NULL),(23321,3297,151,NULL),(23322,3297,151,NULL),(23323,3305,151,NULL),(23324,3305,151,NULL),(23325,3306,151,NULL),(23326,3295,151,NULL),(23327,3295,151,NULL),(23328,3151,151,NULL),(23329,3158,151,NULL),(23330,3158,151,NULL),(23331,3099,151,NULL),(23332,3042,151,NULL),(23333,3042,151,NULL),(23334,2965,151,NULL),(23335,2925,151,NULL),(23336,2925,151,NULL),(23337,2873,151,NULL),(23338,2874,151,NULL),(23339,2874,151,NULL),(23340,2818,151,NULL),(23341,2780,151,NULL),(23342,2780,151,NULL),(23343,2658,151,NULL),(23344,2579,151,NULL),(23345,2579,151,NULL),(23346,2529,151,NULL),(23347,2529,151,NULL),(23348,2523,151,NULL),(23349,2503,151,NULL),(23350,2503,151,NULL),(23351,2467,151,NULL),(23352,2404,151,NULL),(23353,2404,151,NULL),(23354,2379,151,NULL),(23355,2315,151,NULL),(23356,2315,151,NULL),(23357,2270,151,NULL),(23358,2259,151,NULL),(23359,2259,151,NULL),(23360,2161,151,NULL),(23361,2161,151,NULL),(23362,2144,151,NULL),(23363,2144,151,NULL),(23364,2078,151,NULL),(23365,2078,151,NULL),(23366,2032,151,NULL),(23367,2032,151,NULL),(23368,2027,151,NULL),(23369,2027,151,NULL),(23370,2037,151,NULL),(23371,2037,151,NULL),(23372,1974,151,NULL),(23373,1974,151,NULL),(23374,1863,151,NULL),(23375,1863,151,NULL),(23376,1769,151,NULL),(23377,1769,151,NULL),(23378,1768,151,NULL),(23379,1768,151,NULL),(23380,1780,151,NULL),(23381,1780,151,NULL),(23382,1749,151,NULL),(23383,1749,151,NULL),(23384,1658,151,NULL),(23385,1658,151,NULL),(23386,1524,151,NULL),(23387,1524,151,NULL),(23388,1422,151,NULL),(23389,1422,151,NULL),(23390,1431,151,NULL),(23391,1431,151,NULL),(23392,1408,151,NULL),(23393,1400,151,NULL),(23394,1400,151,NULL),(23395,1323,151,NULL),(23396,2226,151,NULL),(23397,2226,151,NULL),(23398,1483,151,NULL),(23399,1123,151,NULL),(23400,1123,151,NULL),(23401,1109,151,NULL),(23402,1094,151,NULL),(23403,1094,151,NULL),(23404,1071,151,NULL),(23405,978,151,NULL),(23406,978,151,NULL),(23407,930,151,NULL),(23408,904,151,NULL),(23409,904,151,NULL),(23410,876,151,NULL),(23411,865,151,NULL),(23412,865,151,NULL),(23413,848,151,NULL),(23414,628,151,NULL),(23415,628,151,NULL),(23416,451,151,NULL),(23417,367,151,NULL),(23418,367,151,NULL),(23419,357,151,NULL),(23420,350,151,NULL),(23421,350,151,NULL),(23422,349,151,NULL),(23423,345,151,NULL),(23424,345,151,NULL),(23425,344,151,NULL),(23426,342,151,NULL),(23427,342,151,NULL),(23428,326,151,NULL),(23429,326,151,NULL),(23430,238,151,NULL),(23431,238,151,NULL),(23432,231,151,NULL),(23433,231,151,NULL),(23434,219,151,NULL),(23435,219,151,NULL),(23436,217,151,NULL),(23437,217,151,NULL),(23438,209,151,NULL),(23439,209,151,NULL),(23440,206,151,NULL),(23441,206,151,NULL),(23442,204,151,NULL),(23443,204,151,NULL),(23444,203,151,NULL),(23445,203,151,NULL),(23446,202,151,NULL),(23447,202,151,NULL),(23448,200,151,NULL),(23449,200,151,NULL),(23450,172,151,NULL),(23451,172,151,NULL),(23452,169,151,NULL),(23453,154,151,NULL),(23454,154,151,NULL),(23455,153,151,NULL),(23456,152,151,NULL),(23457,152,151,NULL),(23458,151,151,NULL),(23459,151,151,NULL),(23460,142,151,NULL),(23461,142,151,NULL),(23462,141,151,NULL),(23463,141,151,NULL),(23464,137,151,NULL),(23465,136,151,NULL),(23466,136,151,NULL),(23467,125,151,NULL),(23468,119,151,NULL),(23469,119,151,NULL),(23470,118,151,NULL),(23471,88,151,NULL),(23472,88,151,NULL),(23473,81,151,NULL),(23474,80,151,NULL),(23475,80,151,NULL),(23476,75,151,NULL),(23477,73,151,NULL),(23478,73,151,NULL),(23479,70,151,NULL),(23480,69,151,NULL),(23481,66,151,NULL),(23482,66,151,NULL),(23483,56,151,NULL),(23484,53,151,NULL),(23485,53,151,NULL),(23486,50,151,NULL),(23487,47,151,NULL),(23488,47,151,NULL),(23489,46,151,NULL),(23490,46,151,NULL),(23491,39,151,NULL),(23492,39,151,NULL),(23493,38,151,NULL),(23494,38,151,NULL),(23495,35,151,NULL),(23496,35,151,NULL),(23497,33,151,NULL),(23498,33,151,NULL),(23499,31,151,NULL),(23500,31,151,NULL),(23501,28,151,NULL),(23502,28,151,NULL),(23503,27,151,NULL),(23504,27,151,NULL),(23505,26,151,NULL),(23506,26,151,NULL),(23507,21,151,NULL),(23508,21,151,NULL),(23509,20,151,NULL),(23510,20,151,NULL),(23511,14,151,NULL),(23512,14,151,NULL),(23513,13,151,NULL),(23514,13,151,NULL),(23515,9,151,NULL),(23516,9,151,NULL),(23517,7,151,NULL),(23518,7,151,NULL),(23519,5,151,NULL),(23520,4,151,NULL),(23521,3,151,NULL),(23522,3,151,NULL),(23523,1,151,NULL),(23524,3610,151,NULL),(23525,3416,151,NULL),(23526,3420,151,NULL),(23527,3713,151,NULL),(23528,4507,151,NULL),(23529,3733,151,NULL),(23530,4307,151,NULL),(23531,3499,151,NULL),(23532,4484,151,NULL),(23533,3682,151,NULL),(23534,3649,151,NULL),(23535,3498,151,NULL),(23536,3524,151,NULL),(23537,3446,151,NULL),(23538,5134,151,NULL),(23539,5652,151,NULL),(23540,4612,151,NULL),(23541,4720,151,NULL),(23542,5017,151,NULL),(23543,4750,151,NULL),(23544,4750,151,NULL),(23545,3889,151,NULL),(23546,4865,151,NULL),(23547,4865,151,NULL),(23548,5756,151,NULL),(23549,4775,151,NULL),(23550,4775,151,NULL),(23551,5505,151,NULL),(23552,4269,151,NULL),(23553,4269,151,NULL),(23554,4302,151,NULL),(23555,3469,151,NULL),(23556,3469,151,NULL),(23557,3525,151,NULL),(23558,4397,151,NULL),(23559,4397,151,NULL),(23560,3621,151,NULL),(23561,4629,151,NULL),(23562,4629,151,NULL),(23563,5443,151,NULL),(23564,3849,151,NULL),(23565,3849,151,NULL),(23566,5784,151,NULL),(23567,5784,151,NULL),(23568,5332,151,NULL),(23569,5332,151,NULL),(23570,4153,151,NULL),(23571,4153,151,NULL),(23572,16570,153,NULL),(23573,16550,153,NULL),(23574,3232,153,NULL),(23575,3222,153,NULL),(23576,3190,153,NULL),(23577,3227,153,NULL),(23578,3174,153,NULL),(23579,3110,153,NULL),(23580,3065,153,NULL),(23581,2974,153,NULL),(23582,2894,153,NULL),(23583,2873,153,NULL),(23584,2769,153,NULL),(23585,2656,153,NULL),(23586,2652,153,NULL),(23587,2574,153,NULL),(23588,2595,153,NULL),(23589,2578,153,NULL),(23590,2579,153,NULL),(23591,2540,153,NULL),(23592,2535,153,NULL),(23593,2529,153,NULL),(23594,2506,153,NULL),(23595,2490,153,NULL),(23596,2485,153,NULL),(23597,2469,153,NULL),(23598,2427,153,NULL),(23599,2413,153,NULL),(23600,2335,153,NULL),(23601,2235,153,NULL),(23602,2220,153,NULL),(23603,2154,153,NULL),(23604,2161,153,NULL),(23605,2129,153,NULL),(23606,2095,153,NULL),(23607,2062,153,NULL),(23608,2037,153,NULL),(23609,2011,153,NULL),(23610,1991,153,NULL),(23611,1945,153,NULL),(23612,1929,153,NULL),(23613,1920,153,NULL),(23614,1859,153,NULL),(23615,1837,153,NULL),(23616,1832,153,NULL),(23617,1800,153,NULL),(23618,1768,153,NULL),(23619,1752,153,NULL),(23620,1725,153,NULL),(23621,1732,153,NULL),(23622,1679,153,NULL),(23623,1678,153,NULL),(23624,1672,153,NULL),(23625,1572,153,NULL),(23626,1539,153,NULL),(23627,1512,153,NULL),(23628,1526,153,NULL),(23629,1486,153,NULL),(23630,1480,153,NULL),(23631,1470,153,NULL),(23632,1464,153,NULL),(23633,1456,153,NULL),(23634,1431,153,NULL),(23635,1402,153,NULL),(23636,1365,153,NULL),(23637,1351,153,NULL),(23638,1346,153,NULL),(23639,1323,153,NULL),(23640,1343,153,NULL),(23641,1342,153,NULL),(23642,1304,153,NULL),(23643,1281,153,NULL),(23644,1266,153,NULL),(23645,1252,153,NULL),(23646,1108,153,NULL),(23647,1071,153,NULL),(23648,1025,153,NULL),(23649,1005,153,NULL),(23650,1004,153,NULL),(23651,977,153,NULL),(23652,976,153,NULL),(23653,877,153,NULL),(23654,875,153,NULL),(23655,867,153,NULL),(23656,832,153,NULL),(23657,796,153,NULL),(23658,704,153,NULL),(23659,771,153,NULL),(23660,766,153,NULL),(23661,709,153,NULL),(23662,728,153,NULL),(23663,724,153,NULL),(23664,693,153,NULL),(23665,643,153,NULL),(23666,628,153,NULL),(23667,605,153,NULL),(23668,566,153,NULL),(23669,520,153,NULL),(23670,485,153,NULL),(23671,448,153,NULL),(23672,443,153,NULL),(23673,442,153,NULL),(23674,441,153,NULL),(23675,435,153,NULL),(23676,415,153,NULL),(23677,412,153,NULL),(23678,392,153,NULL),(23679,383,153,NULL),(23680,374,153,NULL),(23681,367,153,NULL),(23682,349,153,NULL),(23683,345,153,NULL),(23684,344,153,NULL),(23685,342,153,NULL),(23686,338,153,NULL),(23687,334,153,NULL),(23688,328,153,NULL),(23689,287,153,NULL),(23690,283,153,NULL),(23691,260,153,NULL),(23692,258,153,NULL),(23693,242,153,NULL),(23694,238,153,NULL),(23695,217,153,NULL),(23696,206,153,NULL),(23697,202,153,NULL),(23698,191,153,NULL),(23699,189,153,NULL),(23700,169,153,NULL),(23701,164,153,NULL),(23702,162,153,NULL),(23703,153,153,NULL),(23704,152,153,NULL),(23705,151,153,NULL),(23706,148,153,NULL),(23707,137,153,NULL),(23708,136,153,NULL),(23709,125,153,NULL),(23710,121,153,NULL),(23711,92,153,NULL),(23712,88,153,NULL),(23713,86,153,NULL),(23714,83,153,NULL),(23715,82,153,NULL),(23716,80,153,NULL),(23717,74,153,NULL),(23718,73,153,NULL),(23719,70,153,NULL),(23720,69,153,NULL),(23721,67,153,NULL),(23722,66,153,NULL),(23723,61,153,NULL),(23724,58,153,NULL),(23725,54,153,NULL),(23726,50,153,NULL),(23727,48,153,NULL),(23728,42,153,NULL),(23729,41,153,NULL),(23730,35,153,NULL),(23731,34,153,NULL),(23732,33,153,NULL),(23733,28,153,NULL),(23734,27,153,NULL),(23735,26,153,NULL),(23736,21,153,NULL),(23737,11,153,NULL),(23738,9,153,NULL),(23739,7,153,NULL),(23740,4,153,NULL),(23741,1,153,NULL),(23742,14544,151,NULL),(23743,15319,151,NULL),(23744,15332,151,NULL),(23745,15332,151,NULL),(23746,16175,151,NULL),(23747,15085,151,NULL),(23748,10487,151,NULL),(23749,16523,151,NULL),(23750,3484,129,NULL),(23751,3851,129,NULL),(23752,3454,129,NULL),(23753,3469,129,NULL),(23754,3495,129,NULL),(23755,3885,129,NULL),(23756,3568,129,NULL),(23757,3463,129,NULL),(23758,3417,129,NULL),(23759,3702,129,NULL),(23760,5562,129,NULL),(23761,4317,129,NULL),(23762,5207,129,NULL),(23763,3611,129,NULL),(23764,3472,129,NULL),(23765,4968,129,NULL),(23766,5865,129,NULL),(23767,4629,129,NULL),(23768,4177,129,NULL),(23769,4153,129,NULL),(23770,5417,129,NULL),(23771,4016,129,NULL),(23772,5927,129,NULL),(23773,4570,129,NULL),(23774,6319,129,NULL),(23775,6373,129,NULL),(23776,6374,129,NULL),(23777,3445,129,NULL),(23778,3496,129,NULL),(23779,3488,129,NULL),(23780,4307,129,NULL),(23781,6280,129,NULL),(23782,4262,129,NULL),(23783,4484,129,NULL),(23784,3682,129,NULL),(23785,3554,129,NULL),(23786,3545,129,NULL),(23787,3649,129,NULL),(23788,3498,129,NULL),(23789,3846,129,NULL),(23790,3623,129,NULL),(23791,4379,129,NULL),(23792,3751,129,NULL),(23793,4526,129,NULL),(23794,3601,129,NULL),(23795,3457,129,NULL),(23796,4902,129,NULL),(23797,5429,129,NULL),(23798,4720,129,NULL),(23799,5017,129,NULL),(23800,4074,129,NULL),(23801,4170,129,NULL),(23802,4750,129,NULL),(23803,3672,129,NULL),(23804,3889,129,NULL),(23805,6233,129,NULL),(23806,4865,129,NULL),(23807,4775,129,NULL),(23808,5505,129,NULL),(23809,5624,129,NULL),(23810,4269,129,NULL),(23811,6073,129,NULL),(23812,17299,129,NULL),(23813,15465,129,NULL),(23814,16585,152,NULL),(23815,16579,152,NULL),(23816,16556,152,NULL),(23817,16589,152,NULL),(23818,3392,152,NULL),(23819,3364,152,NULL),(23820,3345,152,NULL),(23821,3360,152,NULL),(23822,3300,152,NULL),(23823,3285,152,NULL),(23824,3270,152,NULL),(23825,3151,152,NULL),(23826,3110,152,NULL),(23827,3105,152,NULL),(23828,3065,152,NULL),(23829,3042,152,NULL),(23830,2965,152,NULL),(23831,2958,152,NULL),(23832,2873,152,NULL),(23833,2559,152,NULL),(23834,2579,152,NULL),(23835,2529,152,NULL),(23836,2523,152,NULL),(23837,2460,152,NULL),(23838,2413,152,NULL),(23839,2404,152,NULL),(23840,2396,152,NULL),(23841,2390,152,NULL),(23842,2379,152,NULL),(23843,2235,152,NULL),(23844,2270,152,NULL),(23845,2206,152,NULL),(23846,2161,152,NULL),(23847,2000,152,NULL),(23848,1894,152,NULL),(23849,1854,152,NULL),(23850,1800,152,NULL),(23851,1790,152,NULL),(23852,1769,152,NULL),(23853,1768,152,NULL),(23854,1780,152,NULL),(23855,1752,152,NULL),(23856,1749,152,NULL),(23857,1679,152,NULL),(23858,1658,152,NULL),(23859,1652,152,NULL),(23860,1572,152,NULL),(23861,1524,152,NULL),(23862,1480,152,NULL),(23863,1492,152,NULL),(23864,1456,152,NULL),(23865,1422,152,NULL),(23866,1431,152,NULL),(23867,1408,152,NULL),(23868,1400,152,NULL),(23869,1358,152,NULL),(23870,1208,152,NULL),(23871,1137,152,NULL),(23872,1109,152,NULL),(23873,1094,152,NULL),(23874,1018,152,NULL),(23875,1013,152,NULL),(23876,1005,152,NULL),(23877,994,152,NULL),(23878,978,152,NULL),(23879,977,152,NULL),(23880,976,152,NULL),(23881,974,152,NULL),(23882,509,152,NULL),(23883,930,152,NULL),(23884,904,152,NULL),(23885,881,152,NULL),(23886,877,152,NULL),(23887,875,152,NULL),(23888,860,152,NULL),(23889,848,152,NULL),(23890,704,152,NULL),(23891,746,152,NULL),(23892,744,152,NULL),(23893,735,152,NULL),(23894,724,152,NULL),(23895,713,152,NULL),(23896,658,152,NULL),(23897,643,152,NULL),(23898,605,152,NULL),(23899,567,152,NULL),(23900,561,152,NULL),(23901,560,152,NULL),(23902,554,152,NULL),(23903,540,152,NULL),(23904,507,152,NULL),(23905,476,152,NULL),(23906,455,152,NULL),(23907,441,152,NULL),(23908,402,152,NULL),(23909,392,152,NULL),(23910,389,152,NULL),(23911,387,152,NULL),(23912,383,152,NULL),(23913,374,152,NULL),(23914,367,152,NULL),(23915,347,152,NULL),(23916,345,152,NULL),(23917,344,152,NULL),(23918,342,152,NULL),(23919,326,152,NULL),(23920,303,152,NULL),(23921,283,152,NULL),(23922,278,152,NULL),(23923,264,152,NULL),(23924,263,152,NULL),(23925,258,152,NULL),(23926,239,152,NULL),(23927,238,152,NULL),(23928,231,152,NULL),(23929,229,152,NULL),(23930,219,152,NULL),(23931,217,152,NULL),(23932,215,152,NULL),(23933,209,152,NULL),(23934,206,152,NULL),(23935,204,152,NULL),(23936,202,152,NULL),(23937,191,152,NULL),(23938,189,152,NULL),(23939,172,152,NULL),(23940,169,152,NULL),(23941,167,152,NULL),(23942,164,152,NULL),(23943,162,152,NULL),(23944,154,152,NULL),(23945,153,152,NULL),(23946,151,152,NULL),(23947,141,152,NULL),(23948,136,152,NULL),(23949,134,152,NULL),(23950,125,152,NULL),(23951,122,152,NULL),(23952,121,152,NULL),(23953,89,152,NULL),(23954,88,152,NULL),(23955,86,152,NULL),(23956,83,152,NULL),(23957,81,152,NULL),(23958,80,152,NULL),(23959,79,152,NULL),(23960,75,152,NULL),(23961,74,152,NULL),(23962,70,152,NULL),(23963,69,152,NULL),(23964,67,152,NULL),(23965,66,152,NULL),(23966,61,152,NULL),(23967,58,152,NULL),(23968,57,152,NULL),(23969,56,152,NULL),(23970,55,152,NULL),(23971,54,152,NULL),(23972,50,152,NULL),(23973,48,152,NULL),(23974,47,152,NULL),(23975,46,152,NULL),(23976,45,152,NULL),(23977,42,152,NULL),(23978,41,152,NULL),(23979,38,152,NULL),(23980,35,152,NULL),(23981,34,152,NULL),(23982,33,152,NULL),(23983,29,152,NULL),(23984,28,152,NULL),(23985,27,152,NULL),(23986,26,152,NULL),(23987,21,152,NULL),(23988,20,152,NULL),(23989,19,152,NULL),(23990,17,152,NULL),(23991,15,152,NULL),(23992,13,152,NULL),(23993,12,152,NULL),(23994,11,152,NULL),(23995,9,152,NULL),(23996,7,152,NULL),(23997,6,152,NULL),(23998,4,152,NULL),(23999,3,152,NULL),(24000,2,152,NULL),(24001,1,152,NULL),(24002,4507,152,NULL),(24003,4646,152,NULL),(24004,4769,152,NULL),(24005,4484,152,NULL),(24006,3802,152,NULL),(24007,3554,152,NULL),(24008,3649,152,NULL),(24009,5006,152,NULL),(24010,3498,152,NULL),(24011,3623,152,NULL),(24012,4902,152,NULL),(24013,5134,152,NULL),(24014,5652,152,NULL),(24015,4720,152,NULL),(24016,5017,152,NULL),(24017,4750,152,NULL),(24018,3889,152,NULL),(24019,4865,152,NULL),(24020,5512,152,NULL),(24021,5068,152,NULL),(24022,6024,152,NULL),(24023,5797,152,NULL),(24024,6173,152,NULL),(24025,5624,152,NULL),(24026,4269,152,NULL),(24027,4302,152,NULL),(24028,3454,152,NULL),(24029,3469,152,NULL),(24030,3495,152,NULL),(24031,3568,152,NULL),(24032,4317,152,NULL),(24033,3621,152,NULL),(24034,5153,152,NULL),(24035,4968,152,NULL),(24036,5552,152,NULL),(24037,4629,152,NULL),(24038,5443,152,NULL),(24039,3849,152,NULL),(24040,5784,152,NULL),(24041,5332,152,NULL),(24042,5372,152,NULL),(24043,4153,152,NULL),(24044,17299,152,NULL),(24045,15465,152,NULL),(24046,15085,152,NULL),(24047,10487,152,NULL),(24048,6617,152,NULL),(24049,16610,129,NULL),(24050,3345,129,NULL),(24051,3360,129,NULL),(24052,3151,129,NULL),(24053,3028,129,NULL),(24054,2582,129,NULL),(24055,2529,129,NULL),(24056,2335,129,NULL),(24057,2206,129,NULL),(24058,2119,129,NULL),(24059,2027,129,NULL),(24060,2037,129,NULL),(24061,2016,129,NULL),(24062,2011,129,NULL),(24063,2000,129,NULL),(24064,1974,129,NULL),(24065,1941,129,NULL),(24066,1832,129,NULL),(24067,1768,129,NULL),(24068,1780,129,NULL),(24069,1752,129,NULL),(24070,1624,129,NULL),(24071,1475,129,NULL),(24072,1431,129,NULL),(24073,1323,129,NULL),(24074,1208,129,NULL),(24075,1207,129,NULL),(24076,1071,129,NULL),(24077,1047,129,NULL),(24078,978,129,NULL),(24079,977,129,NULL),(24080,509,129,NULL),(24081,930,129,NULL),(24082,922,129,NULL),(24083,902,129,NULL),(24084,876,129,NULL),(24085,848,129,NULL),(24086,704,129,NULL),(24087,744,129,NULL),(24088,713,129,NULL),(24089,658,129,NULL),(24090,643,129,NULL),(24091,628,129,NULL),(24092,605,129,NULL),(24093,605,129,NULL),(24094,448,129,NULL),(24095,448,129,NULL),(24096,414,129,NULL),(24097,392,129,NULL),(24098,392,129,NULL),(24099,390,129,NULL),(24100,389,129,NULL),(24101,389,129,NULL),(24102,387,129,NULL),(24103,386,129,NULL),(24104,386,129,NULL),(24105,349,129,NULL),(24106,345,129,NULL),(24107,344,129,NULL),(24108,344,129,NULL),(24109,326,129,NULL),(24110,303,129,NULL),(24111,303,129,NULL),(24112,283,129,NULL),(24113,283,129,NULL),(24114,268,129,NULL),(24115,263,129,NULL),(24116,263,129,NULL),(24117,242,129,NULL),(24118,229,129,NULL),(24119,229,129,NULL),(24120,228,129,NULL),(24121,219,129,NULL),(24122,217,129,NULL),(24123,217,129,NULL),(24124,209,129,NULL),(24125,209,129,NULL),(24126,189,129,NULL),(24127,189,129,NULL),(24128,171,129,NULL),(24129,171,129,NULL),(24130,169,129,NULL),(24131,169,129,NULL),(24132,168,129,NULL),(24133,168,129,NULL),(24134,153,129,NULL),(24135,153,129,NULL),(24136,151,129,NULL),(24137,151,129,NULL),(24138,136,129,NULL),(24139,88,129,NULL),(24140,88,129,NULL),(24141,83,129,NULL),(24142,83,129,NULL),(24143,74,129,NULL),(24144,69,129,NULL),(24145,69,129,NULL),(24146,66,129,NULL),(24147,66,129,NULL),(24148,61,129,NULL),(24149,61,129,NULL),(24150,58,129,NULL),(24151,51,129,NULL),(24152,51,129,NULL),(24153,50,129,NULL),(24154,35,129,NULL),(24155,35,129,NULL),(24156,34,129,NULL),(24157,28,129,NULL),(24158,28,129,NULL),(24159,27,129,NULL),(24160,26,129,NULL),(24161,26,129,NULL),(24162,21,129,NULL),(24163,20,129,NULL),(24164,11,129,NULL),(24165,9,129,NULL),(24166,4,129,NULL),(24167,1,129,NULL),(24168,7860,156,NULL),(24169,15085,156,NULL),(24170,12037,156,NULL),(24171,7662,156,NULL),(24172,9872,156,NULL),(24173,12269,156,NULL),(24174,6727,156,NULL),(24175,16560,156,NULL),(24176,16556,156,NULL),(24177,16545,156,NULL),(24178,16574,156,NULL),(24179,16550,156,NULL),(24180,3392,156,NULL),(24181,3335,156,NULL),(24182,3345,156,NULL),(24183,3360,156,NULL),(24184,3330,156,NULL),(24185,3318,156,NULL),(24186,3300,156,NULL),(24187,3309,156,NULL),(24188,3280,156,NULL),(24189,3324,156,NULL),(24190,3286,156,NULL),(24191,3274,156,NULL),(24192,3295,156,NULL),(24193,3271,156,NULL),(24194,3282,156,NULL),(24195,3254,156,NULL),(24196,3243,156,NULL),(24197,3325,156,NULL),(24198,3217,156,NULL),(24199,3281,156,NULL),(24200,3227,156,NULL),(24201,3211,156,NULL),(24202,3151,156,NULL),(24203,3110,156,NULL),(24204,3016,156,NULL),(24205,3014,156,NULL),(24206,2997,156,NULL),(24207,2914,156,NULL),(24208,2843,156,NULL),(24209,2824,156,NULL),(24210,2787,156,NULL),(24211,2788,156,NULL),(24212,2685,156,NULL),(24213,2656,156,NULL),(24214,2658,156,NULL),(24215,2615,156,NULL),(24216,2559,156,NULL),(24217,2661,156,NULL),(24218,2660,156,NULL),(24219,2549,156,NULL),(24220,2608,156,NULL),(24221,2579,156,NULL),(24222,2545,156,NULL),(24223,2461,156,NULL),(24224,2427,156,NULL),(24225,2396,156,NULL),(24226,2342,156,NULL),(24227,2391,156,NULL),(24228,2381,156,NULL),(24229,2374,156,NULL),(24230,2367,156,NULL),(24231,2360,156,NULL),(24232,2359,156,NULL),(24233,2326,156,NULL),(24234,2325,156,NULL),(24235,2270,156,NULL),(24236,2257,156,NULL),(24237,2260,156,NULL),(24238,2220,156,NULL),(24239,2161,156,NULL),(24240,2125,156,NULL),(24241,2121,156,NULL),(24242,2108,156,NULL),(24243,2106,156,NULL),(24244,2092,156,NULL),(24245,2078,156,NULL),(24246,2053,156,NULL),(24247,2022,156,NULL),(24248,2000,156,NULL),(24249,1971,156,NULL),(24250,1980,156,NULL),(24251,1970,156,NULL),(24252,1961,156,NULL),(24253,1976,156,NULL),(24254,1945,156,NULL),(24255,1930,156,NULL),(24256,1899,156,NULL),(24257,1910,156,NULL),(24258,1894,156,NULL),(24259,1861,156,NULL),(24260,1837,156,NULL),(24261,1791,156,NULL),(24262,1790,156,NULL),(24263,1769,156,NULL),(24264,1748,156,NULL),(24265,1710,156,NULL),(24266,1688,156,NULL),(24267,1684,156,NULL),(24268,1657,156,NULL),(24269,1652,156,NULL),(24270,1636,156,NULL),(24271,1593,156,NULL),(24272,1508,156,NULL),(24273,1493,156,NULL),(24274,1456,156,NULL),(24275,1452,156,NULL),(24276,1462,156,NULL),(24277,1460,156,NULL),(24278,1409,156,NULL),(24279,1408,156,NULL),(24280,1400,156,NULL),(24281,1365,156,NULL),(24282,1352,156,NULL),(24283,1351,156,NULL),(24284,1323,156,NULL),(24285,1290,156,NULL),(24286,1282,156,NULL),(24287,1227,156,NULL),(24288,2225,156,NULL),(24289,1219,156,NULL),(24290,1192,156,NULL),(24291,1302,156,NULL),(24292,1143,156,NULL),(24293,1109,156,NULL),(24294,1094,156,NULL),(24295,1091,156,NULL),(24296,1079,156,NULL),(24297,1048,156,NULL),(24298,1047,156,NULL),(24299,1043,156,NULL),(24300,1042,156,NULL),(24301,1038,156,NULL),(24302,1028,156,NULL),(24303,1026,156,NULL),(24304,1027,156,NULL),(24305,1025,156,NULL),(24306,1021,156,NULL),(24307,1020,156,NULL),(24308,1014,156,NULL),(24309,1013,156,NULL),(24310,1011,156,NULL),(24311,1008,156,NULL),(24312,1005,156,NULL),(24313,1004,156,NULL),(24314,998,156,NULL),(24315,997,156,NULL),(24316,994,156,NULL),(24317,980,156,NULL),(24318,978,156,NULL),(24319,977,156,NULL),(24320,509,156,NULL),(24321,930,156,NULL),(24322,912,156,NULL),(24323,885,156,NULL),(24324,884,156,NULL),(24325,875,156,NULL),(24326,848,156,NULL),(24327,846,156,NULL),(24328,841,156,NULL),(24329,840,156,NULL),(24330,802,156,NULL),(24331,791,156,NULL),(24332,784,156,NULL),(24333,704,156,NULL),(24334,771,156,NULL),(24335,746,156,NULL),(24336,709,156,NULL),(24337,733,156,NULL),(24338,695,156,NULL),(24339,684,156,NULL),(24340,678,156,NULL),(24341,669,156,NULL),(24342,654,156,NULL),(24343,650,156,NULL),(24344,643,156,NULL),(24345,630,156,NULL),(24346,561,156,NULL),(24347,560,156,NULL),(24348,547,156,NULL),(24349,542,156,NULL),(24350,538,156,NULL),(24351,523,156,NULL),(24352,515,156,NULL),(24353,507,156,NULL),(24354,494,156,NULL),(24355,485,156,NULL),(24356,476,156,NULL),(24357,463,156,NULL),(24358,455,156,NULL),(24359,453,156,NULL),(24360,451,156,NULL),(24361,442,156,NULL),(24362,441,156,NULL),(24363,438,156,NULL),(24364,416,156,NULL),(24365,414,156,NULL),(24366,410,156,NULL),(24367,404,156,NULL),(24368,392,156,NULL),(24369,389,156,NULL),(24370,374,156,NULL),(24371,367,156,NULL),(24372,349,156,NULL),(24373,347,156,NULL),(24374,344,156,NULL),(24375,342,156,NULL),(24376,338,156,NULL),(24377,326,156,NULL),(24378,319,156,NULL),(24379,303,156,NULL),(24380,292,156,NULL),(24381,290,156,NULL),(24382,287,156,NULL),(24383,275,156,NULL),(24384,268,156,NULL),(24385,264,156,NULL),(24386,263,156,NULL),(24387,260,156,NULL),(24388,242,156,NULL),(24389,239,156,NULL),(24390,238,156,NULL),(24391,236,156,NULL),(24392,231,156,NULL),(24393,230,156,NULL),(24394,229,156,NULL),(24395,222,156,NULL),(24396,221,156,NULL),(24397,219,156,NULL),(24398,217,156,NULL),(24399,216,156,NULL),(24400,213,156,NULL),(24401,210,156,NULL),(24402,209,156,NULL),(24403,207,156,NULL),(24404,204,156,NULL),(24405,200,156,NULL),(24406,199,156,NULL),(24407,198,156,NULL),(24408,191,156,NULL),(24409,190,156,NULL),(24410,179,156,NULL),(24411,169,156,NULL),(24412,167,156,NULL),(24413,154,156,NULL),(24414,153,156,NULL),(24415,151,156,NULL),(24416,145,156,NULL),(24417,144,156,NULL),(24418,136,156,NULL),(24419,131,156,NULL),(24420,130,156,NULL),(24421,129,156,NULL),(24422,125,156,NULL),(24423,122,156,NULL),(24424,121,156,NULL),(24425,113,156,NULL),(24426,112,156,NULL),(24427,109,156,NULL),(24428,108,156,NULL),(24429,107,156,NULL),(24430,103,156,NULL),(24431,102,156,NULL),(24432,94,156,NULL),(24433,91,156,NULL),(24434,90,156,NULL),(24435,89,156,NULL),(24436,88,156,NULL),(24437,81,156,NULL),(24438,79,156,NULL),(24439,78,156,NULL),(24440,77,156,NULL),(24441,75,156,NULL),(24442,74,156,NULL),(24443,70,156,NULL),(24444,69,156,NULL),(24445,66,156,NULL),(24446,64,156,NULL),(24447,63,156,NULL),(24448,62,156,NULL),(24449,59,156,NULL),(24450,55,156,NULL),(24451,54,156,NULL),(24452,52,156,NULL),(24453,51,156,NULL),(24454,49,156,NULL),(24455,48,156,NULL),(24456,47,156,NULL),(24457,46,156,NULL),(24458,43,156,NULL),(24459,42,156,NULL),(24460,41,156,NULL),(24461,40,156,NULL),(24462,39,156,NULL),(24463,37,156,NULL),(24464,36,156,NULL),(24465,35,156,NULL),(24466,33,156,NULL),(24467,31,156,NULL),(24468,29,156,NULL),(24469,28,156,NULL),(24470,27,156,NULL),(24471,26,156,NULL),(24472,22,156,NULL),(24473,20,156,NULL),(24474,17,156,NULL),(24475,14,156,NULL),(24476,12,156,NULL),(24477,11,156,NULL),(24478,9,156,NULL),(24479,7,156,NULL),(24480,5,156,NULL),(24481,4,156,NULL),(24482,3,156,NULL),(24483,2,156,NULL),(24484,1,156,NULL),(24485,3484,156,NULL),(24486,3493,156,NULL),(24487,3444,156,NULL),(24488,3525,156,NULL),(24489,3452,156,NULL),(24490,3456,156,NULL),(24491,3464,156,NULL),(24492,3468,156,NULL),(24493,3427,156,NULL),(24494,3417,156,NULL),(24495,3946,156,NULL),(24496,3528,156,NULL),(24497,3419,156,NULL),(24498,3473,156,NULL),(24499,5474,156,NULL),(24500,3675,156,NULL),(24501,3621,156,NULL),(24502,4443,156,NULL),(24503,4210,156,NULL),(24504,3875,156,NULL),(24505,5421,156,NULL),(24506,4534,156,NULL),(24507,4587,156,NULL),(24508,3436,156,NULL),(24509,3531,156,NULL),(24510,3556,156,NULL),(24511,3585,156,NULL),(24512,3486,156,NULL),(24513,3424,156,NULL),(24514,3416,156,NULL),(24515,3511,156,NULL),(24516,3492,156,NULL),(24517,3837,156,NULL),(24518,3437,156,NULL),(24519,3760,156,NULL),(24520,3676,156,NULL),(24521,3440,156,NULL),(24522,4076,156,NULL),(24523,3647,156,NULL),(24524,3690,156,NULL),(24525,4507,156,NULL),(24526,3613,156,NULL),(24527,5962,156,NULL),(24528,4215,156,NULL),(24529,3514,156,NULL),(24530,4073,156,NULL),(24531,3793,156,NULL),(24532,4646,156,NULL),(24533,3813,156,NULL),(24534,3668,156,NULL),(24535,4159,156,NULL),(24536,4681,156,NULL),(24537,4753,156,NULL),(24538,4401,156,NULL),(24539,3640,156,NULL),(24540,4769,156,NULL),(24541,3700,156,NULL),(24542,5641,156,NULL),(24543,3999,156,NULL),(24544,3947,156,NULL),(24545,4484,156,NULL),(24546,3802,156,NULL),(24547,4012,156,NULL),(24548,5904,156,NULL),(24549,5599,156,NULL),(24550,4427,156,NULL),(24551,4242,156,NULL),(24552,6351,156,NULL),(24553,3761,156,NULL),(24554,3446,156,NULL),(24555,3483,156,NULL),(24556,3830,156,NULL),(24557,4028,156,NULL),(24558,5660,156,NULL),(24559,3993,156,NULL),(24560,3695,156,NULL),(24561,4032,156,NULL),(24562,4560,156,NULL),(24563,3833,156,NULL),(24564,4074,156,NULL),(24565,4941,156,NULL),(24566,4170,156,NULL),(24567,4423,156,NULL),(24568,4088,156,NULL),(24569,4383,156,NULL),(24570,4582,156,NULL),(24571,3763,156,NULL),(24572,3843,156,NULL),(24573,4620,156,NULL),(24574,4320,156,NULL),(24575,4588,156,NULL),(24576,16630,158,NULL),(24577,16634,158,NULL),(24578,16633,158,NULL),(24579,16631,158,NULL),(24580,16632,158,NULL),(24581,16635,158,NULL),(24582,16625,158,NULL),(24583,16556,158,NULL),(24584,16550,158,NULL),(24585,3392,158,NULL),(24586,3393,158,NULL),(24587,3355,158,NULL),(24588,3345,158,NULL),(24589,3360,158,NULL),(24590,3330,158,NULL),(24591,3349,158,NULL),(24592,3285,158,NULL),(24593,3289,158,NULL),(24594,3280,158,NULL),(24595,3324,158,NULL),(24596,3286,158,NULL),(24597,3258,158,NULL),(24598,3190,158,NULL),(24599,3194,158,NULL),(24600,3206,158,NULL),(24601,3227,158,NULL),(24602,3223,158,NULL),(24603,3211,158,NULL),(24604,3162,158,NULL),(24605,3151,158,NULL),(24606,3158,158,NULL),(24607,3146,158,NULL),(24608,3120,158,NULL),(24609,3121,158,NULL),(24610,3136,158,NULL),(24611,3110,158,NULL),(24612,3090,158,NULL),(24613,3046,158,NULL),(24614,3042,158,NULL),(24615,3011,158,NULL),(24616,3016,158,NULL),(24617,3014,158,NULL),(24618,3005,158,NULL),(24619,2965,158,NULL),(24620,2951,158,NULL),(24621,2937,158,NULL),(24622,2938,158,NULL),(24623,2942,158,NULL),(24624,2914,158,NULL),(24625,2900,158,NULL),(24626,2843,158,NULL),(24627,2824,158,NULL),(24628,2807,158,NULL),(24629,2785,158,NULL),(24630,2810,158,NULL),(24631,2787,158,NULL),(24632,2788,158,NULL),(24633,2798,158,NULL),(24634,2761,158,NULL),(24635,2745,158,NULL),(24636,2778,158,NULL),(24637,2716,158,NULL),(24638,2712,158,NULL),(24639,2698,158,NULL),(24640,2696,158,NULL),(24641,2685,158,NULL),(24642,2683,158,NULL),(24643,2657,158,NULL),(24644,2658,158,NULL),(24645,2645,158,NULL),(24646,2679,158,NULL),(24647,2678,158,NULL),(24648,2610,158,NULL),(24649,2615,158,NULL),(24650,2568,158,NULL),(24651,2559,158,NULL),(24652,2661,158,NULL),(24653,2660,158,NULL),(24654,2549,158,NULL),(24655,2608,158,NULL),(24656,2606,158,NULL),(24657,2586,158,NULL),(24658,2579,158,NULL),(24659,2583,158,NULL),(24660,2582,158,NULL),(24661,2554,158,NULL),(24662,2540,158,NULL),(24663,2545,158,NULL),(24664,2529,158,NULL),(24665,2523,158,NULL),(24666,2507,158,NULL),(24667,2498,158,NULL),(24668,2500,158,NULL),(24669,2486,158,NULL),(24670,2471,158,NULL),(24671,2469,158,NULL),(24672,2461,158,NULL),(24673,2425,158,NULL),(24674,2435,158,NULL),(24675,2433,158,NULL),(24676,2429,158,NULL),(24677,2427,158,NULL),(24678,2419,158,NULL),(24679,2418,158,NULL),(24680,2410,158,NULL),(24681,2415,158,NULL),(24682,2414,158,NULL),(24683,2413,158,NULL),(24684,2396,158,NULL),(24685,2379,158,NULL),(24686,2374,158,NULL),(24687,2367,158,NULL),(24688,2360,158,NULL),(24689,2359,158,NULL),(24690,2348,158,NULL),(24691,2351,158,NULL),(24692,2326,158,NULL),(24693,2320,158,NULL),(24694,2236,158,NULL),(24695,2235,158,NULL),(24696,2284,158,NULL),(24697,2290,158,NULL),(24698,2278,158,NULL),(24699,2270,158,NULL),(24700,2275,158,NULL),(24701,2240,158,NULL),(24702,2257,158,NULL),(24703,2255,158,NULL),(24704,2248,158,NULL),(24705,2231,158,NULL),(24706,2220,158,NULL),(24707,2206,158,NULL),(24708,2185,158,NULL),(24709,2177,158,NULL),(24710,2176,158,NULL),(24711,2154,158,NULL),(24712,2149,158,NULL),(24713,2160,158,NULL),(24714,2140,158,NULL),(24715,2133,158,NULL),(24716,2125,158,NULL),(24717,2124,158,NULL),(24718,2121,158,NULL),(24719,2129,158,NULL),(24720,2109,158,NULL),(24721,2108,158,NULL),(24722,2106,158,NULL),(24723,2116,158,NULL),(24724,2114,158,NULL),(24725,2095,158,NULL),(24726,2087,158,NULL),(24727,2085,158,NULL),(24728,2063,158,NULL),(24729,2047,158,NULL),(24730,2044,158,NULL),(24731,2053,158,NULL),(24732,2027,158,NULL),(24733,2037,158,NULL),(24734,2011,158,NULL),(24735,2022,158,NULL),(24736,2000,158,NULL),(24737,1971,158,NULL),(24738,2006,158,NULL),(24739,1980,158,NULL),(24740,1991,158,NULL),(24741,1976,158,NULL),(24742,1945,158,NULL),(24743,1930,158,NULL),(24744,1929,158,NULL),(24745,1922,158,NULL),(24746,1920,158,NULL),(24747,1910,158,NULL),(24748,1894,158,NULL),(24749,1863,158,NULL),(24750,1876,158,NULL),(24751,1861,158,NULL),(24752,1773,158,NULL),(24753,1771,158,NULL),(24754,1769,158,NULL),(24755,1768,158,NULL),(24756,1752,158,NULL),(24757,1765,158,NULL),(24758,1749,158,NULL),(24759,1689,158,NULL),(24760,1688,158,NULL),(24761,1678,158,NULL),(24762,1672,158,NULL),(24763,1684,158,NULL),(24764,1662,158,NULL),(24765,1647,158,NULL),(24766,1671,158,NULL),(24767,1669,158,NULL),(24768,1668,158,NULL),(24769,1641,158,NULL),(24770,1653,158,NULL),(24771,1652,158,NULL),(24772,1631,158,NULL),(24773,1636,158,NULL),(24774,1614,158,NULL),(24775,1609,158,NULL),(24776,1588,158,NULL),(24777,1572,158,NULL),(24778,1545,158,NULL),(24779,1557,158,NULL),(24780,1528,158,NULL),(24781,1539,158,NULL),(24782,1512,158,NULL),(24783,1524,158,NULL),(24784,1503,158,NULL),(24785,1487,158,NULL),(24786,1492,158,NULL),(24787,1470,158,NULL),(24788,1475,158,NULL),(24789,1456,158,NULL),(24790,1455,158,NULL),(24791,1463,158,NULL),(24792,1460,158,NULL),(24793,1422,158,NULL),(24794,1408,158,NULL),(24795,1404,158,NULL),(24796,1414,158,NULL),(24797,1400,158,NULL),(24798,1380,158,NULL),(24799,1365,158,NULL),(24800,1351,158,NULL),(24801,1358,158,NULL),(24802,1334,158,NULL),(24803,1325,158,NULL),(24804,1324,158,NULL),(24805,1343,158,NULL),(24806,1342,158,NULL),(24807,1312,158,NULL),(24808,1306,158,NULL),(24809,1304,158,NULL),(24810,1295,158,NULL),(24811,1293,158,NULL),(24812,1282,158,NULL),(24813,1281,158,NULL),(24814,1277,158,NULL),(24815,2215,158,NULL),(24816,1254,158,NULL),(24817,1248,158,NULL),(24818,2309,158,NULL),(24819,1227,158,NULL),(24820,1239,158,NULL),(24821,2225,158,NULL),(24822,1232,158,NULL),(24823,1219,158,NULL),(24824,1514,158,NULL),(24825,1207,158,NULL),(24826,2079,158,NULL),(24827,1192,158,NULL),(24828,1550,158,NULL),(24829,1331,158,NULL),(24830,1302,158,NULL),(24831,1329,158,NULL),(24832,1143,158,NULL),(24833,1315,158,NULL),(24834,1313,158,NULL),(24835,1137,158,NULL),(24836,1289,158,NULL),(24837,1123,158,NULL),(24838,1122,158,NULL),(24839,1110,158,NULL),(24840,1109,158,NULL),(24841,1108,158,NULL),(24842,1094,158,NULL),(24843,1091,158,NULL),(24844,1092,158,NULL),(24845,1081,158,NULL),(24846,1074,158,NULL),(24847,1051,158,NULL),(24848,1047,158,NULL),(24849,1161,158,NULL),(24850,1038,158,NULL),(24851,1034,158,NULL),(24852,1029,158,NULL),(24853,1025,158,NULL),(24854,1021,158,NULL),(24855,1020,158,NULL),(24856,1014,158,NULL),(24857,1004,158,NULL),(24858,1002,158,NULL),(24859,998,158,NULL),(24860,994,158,NULL),(24861,987,158,NULL),(24862,980,158,NULL),(24863,978,158,NULL),(24864,977,158,NULL),(24865,509,158,NULL),(24866,946,158,NULL),(24867,938,158,NULL),(24868,931,158,NULL),(24869,930,158,NULL),(24870,926,158,NULL),(24871,922,158,NULL),(24872,917,158,NULL),(24873,916,158,NULL),(24874,905,158,NULL),(24875,904,158,NULL),(24876,897,158,NULL),(24877,885,158,NULL),(24878,884,158,NULL),(24879,881,158,NULL),(24880,877,158,NULL),(24881,876,158,NULL),(24882,875,158,NULL),(24883,872,158,NULL),(24884,867,158,NULL),(24885,865,158,NULL),(24886,863,158,NULL),(24887,860,158,NULL),(24888,852,158,NULL),(24889,848,158,NULL),(24890,846,158,NULL),(24891,841,158,NULL),(24892,827,158,NULL),(24893,802,158,NULL),(24894,798,158,NULL),(24895,797,158,NULL),(24896,796,158,NULL),(24897,791,158,NULL),(24898,787,158,NULL),(24899,785,158,NULL),(24900,704,158,NULL),(24901,701,158,NULL),(24902,700,158,NULL),(24903,771,158,NULL),(24904,766,158,NULL),(24905,590,158,NULL),(24906,589,158,NULL),(24907,559,158,NULL),(24908,429,158,NULL),(24909,746,158,NULL),(24910,744,158,NULL),(24911,743,158,NULL),(24912,709,158,NULL),(24913,740,158,NULL),(24914,733,158,NULL),(24915,714,158,NULL),(24916,713,158,NULL),(24917,712,158,NULL),(24918,695,158,NULL),(24919,673,158,NULL),(24920,670,158,NULL),(24921,669,158,NULL),(24922,662,158,NULL),(24923,654,158,NULL),(24924,647,158,NULL),(24925,643,158,NULL),(24926,637,158,NULL),(24927,633,158,NULL),(24928,628,158,NULL),(24929,617,158,NULL),(24930,611,158,NULL),(24931,605,158,NULL),(24932,583,158,NULL),(24933,576,158,NULL),(24934,567,158,NULL),(24935,566,158,NULL),(24936,560,158,NULL),(24937,557,158,NULL),(24938,551,158,NULL),(24939,547,158,NULL),(24940,543,158,NULL),(24941,542,158,NULL),(24942,540,158,NULL),(24943,539,158,NULL),(24944,538,158,NULL),(24945,532,158,NULL),(24946,1721,158,NULL),(24947,523,158,NULL),(24948,521,158,NULL),(24949,520,158,NULL),(24950,518,158,NULL),(24951,516,158,NULL),(24952,515,158,NULL),(24953,513,158,NULL),(24954,507,158,NULL),(24955,506,158,NULL),(24956,503,158,NULL),(24957,494,158,NULL),(24958,492,158,NULL),(24959,485,158,NULL),(24960,477,158,NULL),(24961,476,158,NULL),(24962,463,158,NULL),(24963,461,158,NULL),(24964,455,158,NULL),(24965,453,158,NULL),(24966,451,158,NULL),(24967,450,158,NULL),(24968,448,158,NULL),(24969,445,158,NULL),(24970,443,158,NULL),(24971,442,158,NULL),(24972,441,158,NULL),(24973,438,158,NULL),(24974,434,158,NULL),(24975,419,158,NULL),(24976,416,158,NULL),(24977,415,158,NULL),(24978,414,158,NULL),(24979,413,158,NULL),(24980,412,158,NULL),(24981,410,158,NULL),(24982,409,158,NULL),(24983,404,158,NULL),(24984,394,158,NULL),(24985,392,158,NULL),(24986,390,158,NULL),(24987,389,158,NULL),(24988,387,158,NULL),(24989,386,158,NULL),(24990,378,158,NULL),(24991,374,158,NULL),(24992,367,158,NULL),(24993,363,158,NULL),(24994,350,158,NULL),(24995,349,158,NULL),(24996,347,158,NULL),(24997,345,158,NULL),(24998,344,158,NULL),(24999,342,158,NULL),(25000,338,158,NULL),(25001,334,158,NULL),(25002,328,158,NULL),(25003,326,158,NULL),(25004,322,158,NULL),(25005,319,158,NULL),(25006,318,158,NULL),(25007,316,158,NULL),(25008,309,158,NULL),(25009,300,158,NULL),(25010,292,158,NULL),(25011,290,158,NULL),(25012,287,158,NULL),(25013,283,158,NULL),(25014,278,158,NULL),(25015,268,158,NULL),(25016,264,158,NULL),(25017,263,158,NULL),(25018,260,158,NULL),(25019,258,158,NULL),(25020,257,158,NULL),(25021,242,158,NULL),(25022,240,158,NULL),(25023,238,158,NULL),(25024,237,158,NULL),(25025,236,158,NULL),(25026,235,158,NULL),(25027,234,158,NULL),(25028,231,158,NULL),(25029,230,158,NULL),(25030,229,158,NULL),(25031,226,158,NULL),(25032,222,158,NULL),(25033,221,158,NULL),(25034,219,158,NULL),(25035,217,158,NULL),(25036,216,158,NULL),(25037,213,158,NULL),(25038,210,158,NULL),(25039,209,158,NULL),(25040,207,158,NULL),(25041,206,158,NULL),(25042,205,158,NULL),(25043,204,158,NULL),(25044,203,158,NULL),(25045,200,158,NULL),(25046,199,158,NULL),(25047,198,158,NULL),(25048,191,158,NULL),(25049,190,158,NULL),(25050,189,158,NULL),(25051,188,158,NULL),(25052,172,158,NULL),(25053,169,158,NULL),(25054,167,158,NULL),(25055,165,158,NULL),(25056,162,158,NULL),(25057,153,158,NULL),(25058,152,158,NULL),(25059,151,158,NULL),(25060,150,158,NULL),(25061,148,158,NULL),(25062,147,158,NULL),(25063,145,158,NULL),(25064,144,158,NULL),(25065,142,158,NULL),(25066,141,158,NULL),(25067,137,158,NULL),(25068,136,158,NULL),(25069,134,158,NULL),(25070,131,158,NULL),(25071,130,158,NULL),(25072,129,158,NULL),(25073,128,158,NULL),(25074,125,158,NULL),(25075,124,158,NULL),(25076,123,158,NULL),(25077,122,158,NULL),(25078,121,158,NULL),(25079,120,158,NULL),(25080,117,158,NULL),(25081,116,158,NULL),(25082,115,158,NULL),(25083,114,158,NULL),(25084,113,158,NULL),(25085,112,158,NULL),(25086,111,158,NULL),(25087,110,158,NULL),(25088,109,158,NULL),(25089,108,158,NULL),(25090,107,158,NULL),(25091,104,158,NULL),(25092,103,158,NULL),(25093,102,158,NULL),(25094,101,158,NULL),(25095,100,158,NULL),(25096,98,158,NULL),(25097,94,158,NULL),(25098,92,158,NULL),(25099,91,158,NULL),(25100,90,158,NULL),(25101,89,158,NULL),(25102,88,158,NULL),(25103,81,158,NULL),(25104,80,158,NULL),(25105,79,158,NULL),(25106,78,158,NULL),(25107,77,158,NULL),(25108,75,158,NULL),(25109,74,158,NULL),(25110,73,158,NULL),(25111,72,158,NULL),(25112,70,158,NULL),(25113,69,158,NULL),(25114,67,158,NULL),(25115,66,158,NULL),(25116,64,158,NULL),(25117,63,158,NULL),(25118,62,158,NULL),(25119,61,158,NULL),(25120,60,158,NULL),(25121,59,158,NULL),(25122,58,158,NULL),(25123,57,158,NULL),(25124,56,158,NULL),(25125,55,158,NULL),(25126,54,158,NULL),(25127,53,158,NULL),(25128,52,158,NULL),(25129,51,158,NULL),(25130,50,158,NULL),(25131,49,158,NULL),(25132,48,158,NULL),(25133,47,158,NULL),(25134,46,158,NULL),(25135,45,158,NULL),(25136,44,158,NULL),(25137,43,158,NULL),(25138,42,158,NULL),(25139,41,158,NULL),(25140,40,158,NULL),(25141,39,158,NULL),(25142,38,158,NULL),(25143,37,158,NULL),(25144,36,158,NULL),(25145,35,158,NULL),(25146,34,158,NULL),(25147,33,158,NULL),(25148,29,158,NULL),(25149,28,158,NULL),(25150,27,158,NULL),(25151,26,158,NULL),(25152,24,158,NULL),(25153,22,158,NULL),(25154,21,158,NULL),(25155,20,158,NULL),(25156,19,158,NULL),(25157,17,158,NULL),(25158,14,158,NULL),(25159,13,158,NULL),(25160,12,158,NULL),(25161,11,158,NULL),(25162,9,158,NULL),(25163,8,158,NULL),(25164,7,158,NULL),(25165,5,158,NULL),(25166,4,158,NULL),(25167,3,158,NULL),(25168,2,158,NULL),(25169,1,158,NULL),(25170,3436,158,NULL),(25171,3531,158,NULL),(25172,3556,158,NULL),(25173,3585,158,NULL),(25174,3610,158,NULL),(25175,3823,158,NULL),(25176,3486,158,NULL),(25177,3593,158,NULL),(25178,4167,158,NULL),(25179,3918,158,NULL),(25180,3458,158,NULL),(25181,3479,158,NULL),(25182,4047,158,NULL),(25183,3513,158,NULL),(25184,3418,158,NULL),(25185,3416,158,NULL),(25186,4529,158,NULL),(25187,4095,158,NULL),(25188,3492,158,NULL),(25189,3837,158,NULL),(25190,4000,158,NULL),(25191,3474,158,NULL),(25192,3760,158,NULL),(25193,4293,158,NULL),(25194,3676,158,NULL),(25195,3552,158,NULL),(25196,3578,158,NULL),(25197,3481,158,NULL),(25198,3506,158,NULL),(25199,3440,158,NULL),(25200,4259,158,NULL),(25201,3879,158,NULL),(25202,3425,158,NULL),(25203,3727,158,NULL),(25204,3647,158,NULL),(25205,3759,158,NULL),(25206,3544,158,NULL),(25207,3960,158,NULL),(25208,3423,158,NULL),(25209,3448,158,NULL),(25210,3644,158,NULL),(25211,3530,158,NULL),(25212,3653,158,NULL),(25213,3613,158,NULL),(25214,3514,158,NULL),(25215,3793,158,NULL),(25216,4003,158,NULL),(25217,3580,158,NULL),(25218,3517,158,NULL),(25219,3441,158,NULL),(25220,4646,158,NULL),(25221,3619,158,NULL),(25222,3540,158,NULL),(25223,4089,158,NULL),(25224,3668,158,NULL),(25225,4159,158,NULL),(25226,3755,158,NULL),(25227,4224,158,NULL),(25228,4370,158,NULL),(25229,3776,158,NULL),(25230,4520,158,NULL),(25231,3639,158,NULL),(25232,4007,158,NULL),(25233,3730,158,NULL),(25234,3766,158,NULL),(25235,3602,158,NULL),(25236,3499,158,NULL),(25237,4892,158,NULL),(25238,3640,158,NULL),(25239,4769,158,NULL),(25240,3700,158,NULL),(25241,4429,158,NULL),(25242,4316,158,NULL),(25243,3956,158,NULL),(25244,4409,158,NULL),(25245,4393,158,NULL),(25246,5641,158,NULL),(25247,3877,158,NULL),(25248,3999,158,NULL),(25249,3704,158,NULL),(25250,3947,158,NULL),(25251,4045,158,NULL),(25252,4122,158,NULL),(25253,5114,158,NULL),(25254,4008,158,NULL),(25255,4209,158,NULL),(25256,4398,158,NULL),(25257,3664,158,NULL),(25258,3802,158,NULL),(25259,4012,158,NULL),(25260,3646,158,NULL),(25261,4242,158,NULL),(25262,5972,158,NULL),(25263,3816,158,NULL),(25264,4582,158,NULL),(25265,3763,158,NULL),(25266,4214,158,NULL),(25267,3827,158,NULL),(25268,3650,158,NULL),(25269,3843,158,NULL),(25270,5291,158,NULL),(25271,4441,158,NULL),(25272,4462,158,NULL),(25273,4620,158,NULL),(25274,4019,158,NULL),(25275,4588,158,NULL),(25276,4933,158,NULL),(25277,3484,158,NULL),(25278,3500,158,NULL),(25279,3469,158,NULL),(25280,3493,158,NULL),(25281,3444,158,NULL),(25282,3525,158,NULL),(25283,3421,158,NULL),(25284,3643,158,NULL),(25285,3914,158,NULL),(25286,3652,158,NULL),(25287,3468,158,NULL),(25288,3427,158,NULL),(25289,3450,158,NULL),(25290,3417,158,NULL),(25291,3750,158,NULL),(25292,3453,158,NULL),(25293,3680,158,NULL),(25294,3522,158,NULL),(25295,3667,158,NULL),(25296,4317,158,NULL),(25297,3473,158,NULL),(25298,4397,158,NULL),(25299,4059,158,NULL),(25300,4920,158,NULL),(25301,4862,158,NULL),(25302,5474,158,NULL),(25303,3621,158,NULL),(25304,3472,158,NULL),(25305,3842,158,NULL),(25306,5182,158,NULL),(25307,5256,158,NULL),(25308,5768,158,NULL),(25309,4443,158,NULL),(25310,4210,158,NULL),(25311,4161,158,NULL),(25312,4113,158,NULL),(25313,4587,158,NULL),(25314,3435,158,NULL),(25315,3446,158,NULL),(25316,3739,158,NULL),(25317,5472,158,NULL),(25318,4103,158,NULL),(25319,3504,158,NULL),(25320,3483,158,NULL),(25321,3830,158,NULL),(25322,3762,158,NULL),(25323,5838,158,NULL),(25324,4934,158,NULL),(25325,4649,158,NULL),(25326,4612,158,NULL),(25327,3695,158,NULL),(25328,4032,158,NULL),(25329,4493,158,NULL),(25330,4767,158,NULL),(25331,4560,158,NULL),(25332,3833,158,NULL),(25333,4720,158,NULL),(25334,4074,158,NULL),(25335,4941,158,NULL),(25336,4170,158,NULL),(25337,4423,158,NULL),(25338,4217,158,NULL),(25339,4088,158,NULL),(25340,5043,158,NULL),(25341,3948,158,NULL),(25342,4312,158,NULL),(25343,5126,158,NULL),(25344,4383,158,NULL),(25345,10487,158,NULL),(25346,7075,158,NULL),(25347,15085,158,NULL),(25348,12655,158,NULL),(25349,13566,158,NULL),(25350,9872,158,NULL),(25351,12269,158,NULL),(25352,10650,158,NULL),(25353,16585,159,NULL),(25354,3280,159,NULL),(25355,3232,159,NULL),(25356,3222,159,NULL),(25357,3227,159,NULL),(25358,3110,159,NULL),(25359,2942,159,NULL),(25360,2894,159,NULL),(25361,2656,159,NULL),(25362,2652,159,NULL),(25363,2574,159,NULL),(25364,2595,159,NULL),(25365,2578,159,NULL),(25366,2579,159,NULL),(25367,2540,159,NULL),(25368,2535,159,NULL),(25369,2529,159,NULL),(25370,2520,159,NULL),(25371,2490,159,NULL),(25372,2485,159,NULL),(25373,2469,159,NULL),(25374,2418,159,NULL),(25375,2413,159,NULL),(25376,2390,159,NULL),(25377,2235,159,NULL),(25378,2154,159,NULL),(25379,2161,159,NULL),(25380,2129,159,NULL),(25381,2114,159,NULL),(25382,2089,159,NULL),(25383,2011,159,NULL),(25384,1991,159,NULL),(25385,1945,159,NULL),(25386,1929,159,NULL),(25387,1920,159,NULL),(25388,1859,159,NULL),(25389,1837,159,NULL),(25390,1832,159,NULL),(25391,1800,159,NULL),(25392,1768,159,NULL),(25393,1752,159,NULL),(25394,1732,159,NULL),(25395,1679,159,NULL),(25396,1678,159,NULL),(25397,1672,159,NULL),(25398,1561,159,NULL),(25399,1572,159,NULL),(25400,1528,159,NULL),(25401,1512,159,NULL),(25402,1486,159,NULL),(25403,1480,159,NULL),(25404,1470,159,NULL),(25405,1464,159,NULL),(25406,1456,159,NULL),(25407,1431,159,NULL),(25408,1389,159,NULL),(25409,1402,159,NULL),(25410,1351,159,NULL),(25411,1346,159,NULL),(25412,1323,159,NULL),(25413,1343,159,NULL),(25414,1342,159,NULL),(25415,1304,159,NULL),(25416,1281,159,NULL),(25417,1266,159,NULL),(25418,1252,159,NULL),(25419,1108,159,NULL),(25420,1089,159,NULL),(25421,1071,159,NULL),(25422,1051,159,NULL),(25423,1025,159,NULL),(25424,1005,159,NULL),(25425,1004,159,NULL),(25426,989,159,NULL),(25427,977,159,NULL),(25428,877,159,NULL),(25429,875,159,NULL),(25430,867,159,NULL),(25431,832,159,NULL),(25432,796,159,NULL),(25433,704,159,NULL),(25434,771,159,NULL),(25435,766,159,NULL),(25436,709,159,NULL),(25437,724,159,NULL),(25438,693,159,NULL),(25439,643,159,NULL),(25440,605,159,NULL),(25441,566,159,NULL),(25442,520,159,NULL),(25443,485,159,NULL),(25444,448,159,NULL),(25445,443,159,NULL),(25446,442,159,NULL),(25447,441,159,NULL),(25448,415,159,NULL),(25449,412,159,NULL),(25450,392,159,NULL),(25451,374,159,NULL),(25452,367,159,NULL),(25453,349,159,NULL),(25454,345,159,NULL),(25455,344,159,NULL),(25456,342,159,NULL),(25457,338,159,NULL),(25458,334,159,NULL),(25459,290,159,NULL),(25460,287,159,NULL),(25461,283,159,NULL),(25462,268,159,NULL),(25463,258,159,NULL),(25464,242,159,NULL),(25465,240,159,NULL),(25466,238,159,NULL),(25467,231,159,NULL),(25468,217,159,NULL),(25469,215,159,NULL),(25470,206,159,NULL),(25471,202,159,NULL),(25472,191,159,NULL),(25473,189,159,NULL),(25474,169,159,NULL),(25475,167,159,NULL),(25476,164,159,NULL),(25477,162,159,NULL),(25478,153,159,NULL),(25479,152,159,NULL),(25480,151,159,NULL),(25481,148,159,NULL),(25482,137,159,NULL),(25483,136,159,NULL),(25484,125,159,NULL),(25485,121,159,NULL),(25486,88,159,NULL),(25487,75,159,NULL),(25488,74,159,NULL),(25489,73,159,NULL),(25490,70,159,NULL),(25491,69,159,NULL),(25492,67,159,NULL),(25493,66,159,NULL),(25494,58,159,NULL),(25495,55,159,NULL),(25496,54,159,NULL),(25497,50,159,NULL),(25498,35,159,NULL),(25499,34,159,NULL),(25500,33,159,NULL),(25501,28,159,NULL),(25502,27,159,NULL),(25503,26,159,NULL),(25504,11,159,NULL),(25505,9,159,NULL),(25506,7,159,NULL),(25507,4,159,NULL),(25508,1,159,NULL),(25509,1343,155,NULL),(25510,643,155,NULL),(25511,560,155,NULL),(25512,525,155,NULL),(25513,303,155,NULL),(25514,125,155,NULL),(25515,70,155,NULL),(25516,67,155,NULL),(25517,58,155,NULL),(25518,48,155,NULL),(25519,11,155,NULL),(25520,9,155,NULL),(25521,7,155,NULL),(25522,16579,28,NULL),(25523,16580,28,NULL),(25524,16570,28,NULL),(25525,16574,28,NULL),(25526,16550,28,NULL),(25527,3392,28,NULL),(25528,3364,28,NULL),(25529,3345,28,NULL),(25530,3346,28,NULL),(25531,3375,28,NULL),(25532,3365,28,NULL),(25533,3194,28,NULL),(25534,3042,28,NULL),(25535,3014,28,NULL),(25536,2974,28,NULL),(25537,2962,28,NULL),(25538,2914,28,NULL),(25539,2874,28,NULL),(25540,2845,28,NULL),(25541,2733,28,NULL),(25542,2683,28,NULL),(25543,2579,28,NULL),(25544,2527,28,NULL),(25545,2461,28,NULL),(25546,2460,28,NULL),(25547,2441,28,NULL),(25548,2429,28,NULL),(25549,2418,28,NULL),(25550,2396,28,NULL),(25551,2381,28,NULL),(25552,2338,28,NULL),(25553,2302,28,NULL),(25554,2206,28,NULL),(25555,2185,28,NULL),(25556,2148,28,NULL),(25557,2140,28,NULL),(25558,2145,28,NULL),(25559,2089,28,NULL),(25560,2017,28,NULL),(25561,1985,28,NULL),(25562,1910,28,NULL),(25563,1769,28,NULL),(25564,1780,28,NULL),(25565,1679,28,NULL),(25566,1529,28,NULL),(25567,1518,28,NULL),(25568,1464,28,NULL),(25569,1455,28,NULL),(25570,1408,28,NULL),(25571,1295,28,NULL),(25572,1248,28,NULL),(25573,2226,28,NULL),(25574,1004,28,NULL),(25575,977,28,NULL),(25576,509,28,NULL),(25577,916,28,NULL),(25578,912,28,NULL),(25579,796,28,NULL),(25580,781,28,NULL),(25581,704,28,NULL),(25582,701,28,NULL),(25583,747,28,NULL),(25584,713,28,NULL),(25585,441,28,NULL),(25586,438,28,NULL),(25587,416,28,NULL),(25588,414,28,NULL),(25589,397,28,NULL),(25590,374,28,NULL),(25591,367,28,NULL),(25592,319,28,NULL),(25593,283,28,NULL),(25594,263,28,NULL),(25595,220,28,NULL),(25596,219,28,NULL),(25597,217,28,NULL),(25598,209,28,NULL),(25599,206,28,NULL),(25600,187,28,NULL),(25601,167,28,NULL),(25602,162,28,NULL),(25603,160,28,NULL),(25604,153,28,NULL),(25605,151,28,NULL),(25606,137,28,NULL),(25607,136,28,NULL),(25608,88,28,NULL),(25609,86,28,NULL),(25610,75,28,NULL),(25611,74,28,NULL),(25612,69,28,NULL),(25613,67,28,NULL),(25614,66,28,NULL),(25615,62,28,NULL),(25616,50,28,NULL),(25617,46,28,NULL),(25618,43,28,NULL),(25619,42,28,NULL),(25620,35,28,NULL),(25621,33,28,NULL),(25622,31,28,NULL),(25623,29,28,NULL),(25624,28,28,NULL),(25625,27,28,NULL),(25626,26,28,NULL),(25627,23,28,NULL),(25628,20,28,NULL),(25629,12,28,NULL),(25630,9,28,NULL),(25631,7,28,NULL),(25632,4,28,NULL),(25633,3,28,NULL),(25634,2,28,NULL),(25635,1,28,NULL),(25636,10487,162,NULL),(25637,4052,162,NULL),(25638,3812,162,NULL),(25639,3422,162,NULL),(25640,16950,162,NULL),(25641,5552,162,NULL),(25642,5443,162,NULL),(25643,4257,162,NULL),(25644,16911,162,NULL),(25645,4153,162,NULL),(25646,6273,162,NULL),(25647,17090,162,NULL),(25648,17042,162,NULL),(25649,3554,162,NULL),(25650,16718,162,NULL),(25651,4720,162,NULL),(25652,5017,162,NULL),(25653,4750,162,NULL),(25654,3889,162,NULL),(25655,4865,162,NULL),(25656,5512,162,NULL),(25657,4775,162,NULL),(25658,5797,162,NULL),(25659,5505,162,NULL),(25660,4269,162,NULL),(25661,4302,162,NULL),(25662,4646,162,NULL),(25663,4484,162,NULL),(25664,16620,162,NULL),(25665,3289,162,NULL),(25666,3190,162,NULL),(25667,3160,162,NULL),(25668,3151,162,NULL),(25669,3105,162,NULL),(25670,3042,162,NULL),(25671,2999,162,NULL),(25672,2942,162,NULL),(25673,2873,162,NULL),(25674,2874,162,NULL),(25675,2542,162,NULL),(25676,2462,162,NULL),(25677,2461,162,NULL),(25678,2390,162,NULL),(25679,2364,162,NULL),(25680,2349,162,NULL),(25681,2352,162,NULL),(25682,2336,162,NULL),(25683,2300,162,NULL),(25684,2140,162,NULL),(25685,2130,162,NULL),(25686,2095,162,NULL),(25687,2011,162,NULL),(25688,1945,162,NULL),(25689,1929,162,NULL),(25690,1920,162,NULL),(25691,1926,162,NULL),(25692,1898,162,NULL),(25693,1863,162,NULL),(25694,1823,162,NULL),(25695,1800,162,NULL),(25696,1790,162,NULL),(25697,1768,162,NULL),(25698,1752,162,NULL),(25699,1732,162,NULL),(25700,1718,162,NULL),(25701,1679,162,NULL),(25702,1657,162,NULL),(25703,1652,162,NULL),(25704,1574,162,NULL),(25705,1512,162,NULL),(25706,1493,162,NULL),(25707,1466,162,NULL),(25708,1456,162,NULL),(25709,1448,162,NULL),(25710,1422,162,NULL),(25711,1431,162,NULL),(25712,1400,162,NULL),(25713,1372,162,NULL),(25714,1318,162,NULL),(25715,1268,162,NULL),(25716,2215,162,NULL),(25717,1726,162,NULL),(25718,1207,162,NULL),(25719,1143,162,NULL),(25720,1137,162,NULL),(25721,1123,162,NULL),(25722,1079,162,NULL),(25723,1071,162,NULL),(25724,1161,162,NULL),(25725,1004,162,NULL),(25726,994,162,NULL),(25727,509,162,NULL),(25728,933,162,NULL),(25729,901,162,NULL),(25730,875,162,NULL),(25731,872,162,NULL),(25732,841,162,NULL),(25733,790,162,NULL),(25734,700,162,NULL),(25735,763,162,NULL),(25736,746,162,NULL),(25737,739,162,NULL),(25738,735,162,NULL),(25739,724,162,NULL),(25740,714,162,NULL),(25741,680,162,NULL),(25742,649,162,NULL),(25743,643,162,NULL),(25744,605,162,NULL),(25745,561,162,NULL),(25746,547,162,NULL),(25747,452,162,NULL),(25748,450,162,NULL),(25749,443,162,NULL),(25750,437,162,NULL),(25751,435,162,NULL),(25752,399,162,NULL),(25753,394,162,NULL),(25754,392,162,NULL),(25755,374,162,NULL),(25756,368,162,NULL),(25757,345,162,NULL),(25758,338,162,NULL),(25759,334,162,NULL),(25760,328,162,NULL),(25761,283,162,NULL),(25762,238,162,NULL),(25763,236,162,NULL),(25764,231,162,NULL),(25765,216,162,NULL),(25766,215,162,NULL),(25767,208,162,NULL),(25768,206,162,NULL),(25769,204,162,NULL),(25770,199,162,NULL),(25771,198,162,NULL),(25772,162,162,NULL),(25773,151,162,NULL),(25774,136,162,NULL),(25775,104,162,NULL),(25776,88,162,NULL),(25777,81,162,NULL),(25778,72,162,NULL),(25779,62,162,NULL),(25780,60,162,NULL),(25781,50,162,NULL),(25782,17,162,NULL),(25783,12,162,NULL),(25784,11,162,NULL),(25785,10,162,NULL),(25786,7,162,NULL),(25787,1,162,NULL),(25788,643,144,NULL),(25789,523,144,NULL),(25790,3446,73,NULL),(25791,3459,73,NULL),(25792,3465,73,NULL),(25793,3105,42,NULL),(25794,2706,42,NULL),(25795,2465,42,NULL),(25796,2149,42,NULL),(25797,1800,42,NULL),(25798,1551,42,NULL),(25799,1539,42,NULL),(25800,1283,42,NULL),(25801,1021,42,NULL),(25802,977,42,NULL),(25803,509,42,NULL),(25804,884,42,NULL),(25805,875,42,NULL),(25806,704,42,NULL),(25807,560,42,NULL),(25808,540,42,NULL),(25809,485,42,NULL),(25810,442,42,NULL),(25811,441,42,NULL),(25812,374,42,NULL),(25813,367,42,NULL),(25814,344,42,NULL),(25815,338,42,NULL),(25816,283,42,NULL),(25817,278,42,NULL),(25818,268,42,NULL),(25819,229,42,NULL),(25820,191,42,NULL),(25821,190,42,NULL),(25822,189,42,NULL),(25823,169,42,NULL),(25824,162,42,NULL),(25825,154,42,NULL),(25826,153,42,NULL),(25827,152,42,NULL),(25828,151,42,NULL),(25829,145,42,NULL),(25830,144,42,NULL),(25831,136,42,NULL),(25832,125,42,NULL),(25833,121,42,NULL),(25834,102,42,NULL),(25835,94,42,NULL),(25836,88,42,NULL),(25837,81,42,NULL),(25838,75,42,NULL),(25839,74,42,NULL),(25840,69,42,NULL),(25841,66,42,NULL),(25842,53,42,NULL),(25843,35,42,NULL),(25844,34,42,NULL),(25845,33,42,NULL),(25846,31,42,NULL),(25847,28,42,NULL),(25848,27,42,NULL),(25849,26,42,NULL),(25850,18,42,NULL),(25851,15,42,NULL),(25852,9,42,NULL),(25853,7,42,NULL),(25854,2,42,NULL),(25855,1,42,NULL),(25856,3649,136,NULL),(25857,3459,136,NULL),(25858,4902,136,NULL),(25859,5429,136,NULL),(25860,4720,136,NULL),(25861,5017,136,NULL),(25862,3889,136,NULL),(25863,4865,136,NULL),(25864,5512,136,NULL),(25865,4775,136,NULL),(25866,4269,136,NULL),(25867,4302,136,NULL),(25868,3635,136,NULL),(25869,3471,136,NULL),(25870,4307,136,NULL),(25871,4484,136,NULL),(25872,3484,136,NULL),(25873,3469,136,NULL),(25874,4317,136,NULL),(25875,5573,136,NULL),(25876,4968,136,NULL),(25877,4629,136,NULL),(25878,3849,136,NULL),(25879,4257,136,NULL),(25880,4153,136,NULL),(25881,16541,170,NULL),(25882,16570,170,NULL),(25883,16550,170,NULL),(25884,3364,170,NULL),(25885,3345,170,NULL),(25886,3349,170,NULL),(25887,3300,170,NULL),(25888,3361,170,NULL),(25889,3190,170,NULL),(25890,3151,170,NULL),(25891,3158,170,NULL),(25892,3120,170,NULL),(25893,3099,170,NULL),(25894,3065,170,NULL),(25895,3042,170,NULL),(25896,3005,170,NULL),(25897,2942,170,NULL),(25898,2894,170,NULL),(25899,2828,170,NULL),(25900,2824,170,NULL),(25901,2798,170,NULL),(25902,2778,170,NULL),(25903,2733,170,NULL),(25904,2729,170,NULL),(25905,2769,170,NULL),(25906,2683,170,NULL),(25907,2652,170,NULL),(25908,2644,170,NULL),(25909,2595,170,NULL),(25910,2586,170,NULL),(25911,2553,170,NULL),(25912,2540,170,NULL),(25913,2535,170,NULL),(25914,2529,170,NULL),(25915,2460,170,NULL),(25916,2455,170,NULL),(25917,2425,170,NULL),(25918,2404,170,NULL),(25919,2357,170,NULL),(25920,2284,170,NULL),(25921,2278,170,NULL),(25922,2270,170,NULL),(25923,2255,170,NULL),(25924,2248,170,NULL),(25925,2185,170,NULL),(25926,2164,170,NULL),(25927,2176,170,NULL),(25928,2154,170,NULL),(25929,2149,170,NULL),(25930,2148,170,NULL),(25931,2108,170,NULL),(25932,2089,170,NULL),(25933,2085,170,NULL),(25934,2016,170,NULL),(25935,2006,170,NULL),(25936,1979,170,NULL),(25937,1991,170,NULL),(25938,1952,170,NULL),(25939,1929,170,NULL),(25940,1941,170,NULL),(25941,1920,170,NULL),(25942,1884,170,NULL),(25943,1848,170,NULL),(25944,1837,170,NULL),(25945,1823,170,NULL),(25946,1822,170,NULL),(25947,1800,170,NULL),(25948,1748,170,NULL),(25949,1732,170,NULL),(25950,1672,170,NULL),(25951,1662,170,NULL),(25952,1572,170,NULL),(25953,1529,170,NULL),(25954,1539,170,NULL),(25955,1512,170,NULL),(25956,1523,170,NULL),(25957,1486,170,NULL),(25958,1480,170,NULL),(25959,1491,170,NULL),(25960,1464,170,NULL),(25961,1455,170,NULL),(25962,1450,170,NULL),(25963,1460,170,NULL),(25964,1423,170,NULL),(25965,1422,170,NULL),(25966,1394,170,NULL),(25967,1385,170,NULL),(25968,1365,170,NULL),(25969,1351,170,NULL),(25970,1346,170,NULL),(25971,1358,170,NULL),(25972,1343,170,NULL),(25973,1342,170,NULL),(25974,1304,170,NULL),(25975,1295,170,NULL),(25976,1281,170,NULL),(25977,1207,170,NULL),(25978,1360,170,NULL),(25979,1287,170,NULL),(25980,1051,170,NULL),(25981,1025,170,NULL),(25982,1010,170,NULL),(25983,989,170,NULL),(25984,977,170,NULL),(25985,509,170,NULL),(25986,961,170,NULL),(25987,912,170,NULL),(25988,881,170,NULL),(25989,867,170,NULL),(25990,704,170,NULL),(25991,771,170,NULL),(25992,709,170,NULL),(25993,692,170,NULL),(25994,645,170,NULL),(25995,643,170,NULL),(25996,628,170,NULL),(25997,575,170,NULL),(25998,557,170,NULL),(25999,540,170,NULL),(26000,507,170,NULL),(26001,504,170,NULL),(26002,495,170,NULL),(26003,494,170,NULL),(26004,485,170,NULL),(26005,448,170,NULL),(26006,438,170,NULL),(26007,415,170,NULL),(26008,412,170,NULL),(26009,405,170,NULL),(26010,397,170,NULL),(26011,389,170,NULL),(26012,374,170,NULL),(26013,371,170,NULL),(26014,367,170,NULL),(26015,349,170,NULL),(26016,347,170,NULL),(26017,344,170,NULL),(26018,342,170,NULL),(26019,326,170,NULL),(26020,287,170,NULL),(26021,283,170,NULL),(26022,268,170,NULL),(26023,263,170,NULL),(26024,260,170,NULL),(26025,258,170,NULL),(26026,242,170,NULL),(26027,238,170,NULL),(26028,231,170,NULL),(26029,229,170,NULL),(26030,228,170,NULL),(26031,219,170,NULL),(26032,217,170,NULL),(26033,206,170,NULL),(26034,202,170,NULL),(26035,201,170,NULL),(26036,191,170,NULL),(26037,190,170,NULL),(26038,187,170,NULL),(26039,169,170,NULL),(26040,167,170,NULL),(26041,165,170,NULL),(26042,164,170,NULL),(26043,162,170,NULL),(26044,154,170,NULL),(26045,153,170,NULL),(26046,151,170,NULL),(26047,145,170,NULL),(26048,144,170,NULL),(26049,137,170,NULL),(26050,136,170,NULL),(26051,121,170,NULL),(26052,112,170,NULL),(26053,94,170,NULL),(26054,81,170,NULL),(26055,75,170,NULL),(26056,74,170,NULL),(26057,70,170,NULL),(26058,69,170,NULL),(26059,67,170,NULL),(26060,66,170,NULL),(26061,58,170,NULL),(26062,50,170,NULL),(26063,43,170,NULL),(26064,42,170,NULL),(26065,39,170,NULL),(26066,38,170,NULL),(26067,35,170,NULL),(26068,34,170,NULL),(26069,33,170,NULL),(26070,33,170,NULL),(26071,29,170,NULL),(26072,28,170,NULL),(26073,27,170,NULL),(26074,27,170,NULL),(26075,26,170,NULL),(26076,26,170,NULL),(26077,25,170,NULL),(26078,21,170,NULL),(26079,20,170,NULL),(26080,13,170,NULL),(26081,13,170,NULL),(26082,12,170,NULL),(26083,9,170,NULL),(26084,7,170,NULL),(26085,7,170,NULL),(26086,6,170,NULL),(26087,5,170,NULL),(26088,5,170,NULL),(26089,4,170,NULL),(26090,4,170,NULL),(26091,3,170,NULL),(26092,2,170,NULL),(26093,1,170,NULL),(26094,16634,175,NULL),(26095,16635,175,NULL),(26096,16585,175,NULL),(26097,16545,175,NULL),(26098,16535,175,NULL),(26099,3392,175,NULL),(26100,3394,175,NULL),(26101,3396,175,NULL),(26102,3356,175,NULL),(26103,3375,175,NULL),(26104,3306,175,NULL),(26105,3280,175,NULL),(26106,3264,175,NULL),(26107,3272,175,NULL),(26108,3232,175,NULL),(26109,3208,175,NULL),(26110,3191,175,NULL),(26111,3194,175,NULL),(26112,3162,175,NULL),(26113,3169,175,NULL),(26114,3151,175,NULL),(26115,3158,175,NULL),(26116,3146,175,NULL),(26117,3131,175,NULL),(26118,3110,175,NULL),(26119,3108,175,NULL),(26120,3065,175,NULL),(26121,3019,175,NULL),(26122,2999,175,NULL),(26123,2965,175,NULL),(26124,2974,175,NULL),(26125,2960,175,NULL),(26126,2962,175,NULL),(26127,2942,175,NULL),(26128,2894,175,NULL),(26129,2913,175,NULL),(26130,2873,175,NULL),(26131,2874,175,NULL),(26132,2843,175,NULL),(26133,2828,175,NULL),(26134,2824,175,NULL),(26135,2845,175,NULL),(26136,2780,175,NULL),(26137,2798,175,NULL),(26138,2799,175,NULL),(26139,2778,175,NULL),(26140,2769,175,NULL),(26141,2685,175,NULL),(26142,2730,175,NULL),(26143,2656,175,NULL),(26144,2652,175,NULL),(26145,2610,175,NULL),(26146,2574,175,NULL),(26147,2570,175,NULL),(26148,2563,175,NULL),(26149,2560,175,NULL),(26150,2594,175,NULL),(26151,2595,175,NULL),(26152,2587,175,NULL),(26153,2579,175,NULL),(26154,2554,175,NULL),(26155,2553,175,NULL),(26156,2542,175,NULL),(26157,2540,175,NULL),(26158,2537,175,NULL),(26159,2535,175,NULL),(26160,2529,175,NULL),(26161,2523,175,NULL),(26162,2520,175,NULL),(26163,2506,175,NULL),(26164,2503,175,NULL),(26165,2490,175,NULL),(26166,2485,175,NULL),(26167,2475,175,NULL),(26168,2469,175,NULL),(26169,2461,175,NULL),(26170,2460,175,NULL),(26171,2444,175,NULL),(26172,2433,175,NULL),(26173,2427,175,NULL),(26174,2413,175,NULL),(26175,2396,175,NULL),(26176,2401,175,NULL),(26177,2390,175,NULL),(26178,2379,175,NULL),(26179,2367,175,NULL),(26180,2352,175,NULL),(26181,2341,175,NULL),(26182,2338,175,NULL),(26183,2336,175,NULL),(26184,2335,175,NULL),(26185,2326,175,NULL),(26186,2302,175,NULL),(26187,2300,175,NULL),(26188,2235,175,NULL),(26189,2260,175,NULL),(26190,2220,175,NULL),(26191,2206,175,NULL),(26192,2179,175,NULL),(26193,2176,175,NULL),(26194,2161,175,NULL),(26195,2160,175,NULL),(26196,2140,175,NULL),(26197,2145,175,NULL),(26198,2119,175,NULL),(26199,2130,175,NULL),(26200,2103,175,NULL),(26201,2115,175,NULL),(26202,2114,175,NULL),(26203,2095,175,NULL),(26204,2089,175,NULL),(26205,2062,175,NULL),(26206,2071,175,NULL),(26207,2053,175,NULL),(26208,2033,175,NULL),(26209,2011,175,NULL),(26210,2000,175,NULL),(26211,2006,175,NULL),(26212,1976,175,NULL),(26213,1929,175,NULL),(26214,1922,175,NULL),(26215,1920,175,NULL),(26216,1913,175,NULL),(26217,1863,175,NULL),(26218,1877,175,NULL),(26219,1859,175,NULL),(26220,1838,175,NULL),(26221,1832,175,NULL),(26222,1844,175,NULL),(26223,1816,175,NULL),(26224,1791,175,NULL),(26225,1768,175,NULL),(26226,1780,175,NULL),(26227,1752,175,NULL),(26228,1748,175,NULL),(26229,1725,175,NULL),(26230,1732,175,NULL),(26231,1688,175,NULL),(26232,1679,175,NULL),(26233,1672,175,NULL),(26234,1662,175,NULL),(26235,1657,175,NULL),(26236,1636,175,NULL),(26237,1608,175,NULL),(26238,1582,175,NULL),(26239,1590,175,NULL),(26240,1588,175,NULL),(26241,1572,175,NULL),(26242,1534,175,NULL),(26243,1539,175,NULL),(26244,1512,175,NULL),(26245,1497,175,NULL),(26246,1486,175,NULL),(26247,1480,175,NULL),(26248,1493,175,NULL),(26249,1470,175,NULL),(26250,1464,175,NULL),(26251,1456,175,NULL),(26252,1461,175,NULL),(26253,1436,175,NULL),(26254,1423,175,NULL),(26255,1431,175,NULL),(26256,1389,175,NULL),(26257,1399,175,NULL),(26258,1380,175,NULL),(26259,1351,175,NULL),(26260,1346,175,NULL),(26261,1339,175,NULL),(26262,1337,175,NULL),(26263,1358,175,NULL),(26264,1323,175,NULL),(26265,1343,175,NULL),(26266,1342,175,NULL),(26267,1318,175,NULL),(26268,1304,175,NULL),(26269,1295,175,NULL),(26270,1281,175,NULL),(26271,1266,175,NULL),(26272,2215,175,NULL),(26273,1260,175,NULL),(26274,1252,175,NULL),(26275,2226,175,NULL),(26276,2310,175,NULL),(26277,1207,175,NULL),(26278,1185,175,NULL),(26279,1390,175,NULL),(26280,1302,175,NULL),(26281,1329,175,NULL),(26282,1143,175,NULL),(26283,1128,175,NULL),(26284,1123,175,NULL),(26285,1071,175,NULL),(26286,1051,175,NULL),(26287,1161,175,NULL),(26288,1007,175,NULL),(26289,1005,175,NULL),(26290,1004,175,NULL),(26291,977,175,NULL),(26292,976,175,NULL),(26293,974,175,NULL),(26294,933,175,NULL),(26295,905,175,NULL),(26296,904,175,NULL),(26297,878,175,NULL),(26298,875,175,NULL),(26299,867,175,NULL),(26300,841,175,NULL),(26301,838,175,NULL),(26302,836,175,NULL),(26303,832,175,NULL),(26304,796,175,NULL),(26305,790,175,NULL),(26306,781,175,NULL),(26307,704,175,NULL),(26308,700,175,NULL),(26309,766,175,NULL),(26310,746,175,NULL),(26311,709,175,NULL),(26312,735,175,NULL),(26313,728,175,NULL),(26314,724,175,NULL),(26315,693,175,NULL),(26316,689,175,NULL),(26317,658,175,NULL),(26318,649,175,NULL),(26319,643,175,NULL),(26320,628,175,NULL),(26321,605,175,NULL),(26322,566,175,NULL),(26323,557,175,NULL),(26324,542,175,NULL),(26325,523,175,NULL),(26326,485,175,NULL),(26327,450,175,NULL),(26328,448,175,NULL),(26329,443,175,NULL),(26330,442,175,NULL),(26331,441,175,NULL),(26332,435,175,NULL),(26333,416,175,NULL),(26334,412,175,NULL),(26335,410,175,NULL),(26336,394,175,NULL),(26337,392,175,NULL),(26338,374,175,NULL),(26339,373,175,NULL),(26340,368,175,NULL),(26341,367,175,NULL),(26342,350,175,NULL),(26343,349,175,NULL),(26344,345,175,NULL),(26345,344,175,NULL),(26346,342,175,NULL),(26347,338,175,NULL),(26348,334,175,NULL),(26349,328,175,NULL),(26350,318,175,NULL),(26351,303,175,NULL),(26352,292,175,NULL),(26353,290,175,NULL),(26354,287,175,NULL),(26355,283,175,NULL),(26356,279,175,NULL),(26357,274,175,NULL),(26358,268,175,NULL),(26359,264,175,NULL),(26360,263,175,NULL),(26361,260,175,NULL),(26362,258,175,NULL),(26363,242,175,NULL),(26364,240,175,NULL),(26365,239,175,NULL),(26366,238,175,NULL),(26367,229,175,NULL),(26368,228,175,NULL),(26369,224,175,NULL),(26370,223,175,NULL),(26371,220,175,NULL),(26372,219,175,NULL),(26373,217,175,NULL),(26374,216,175,NULL),(26375,215,175,NULL),(26376,214,175,NULL),(26377,209,175,NULL),(26378,206,175,NULL),(26379,202,175,NULL),(26380,201,175,NULL),(26381,199,175,NULL),(26382,191,175,NULL),(26383,190,175,NULL),(26384,189,175,NULL),(26385,179,175,NULL),(26386,172,175,NULL),(26387,169,175,NULL),(26388,168,175,NULL),(26389,167,175,NULL),(26390,164,175,NULL),(26391,162,175,NULL),(26392,155,175,NULL),(26393,154,175,NULL),(26394,153,175,NULL),(26395,151,175,NULL),(26396,148,175,NULL),(26397,141,175,NULL),(26398,137,175,NULL),(26399,136,175,NULL),(26400,128,175,NULL),(26401,125,175,NULL),(26402,122,175,NULL),(26403,121,175,NULL),(26404,119,175,NULL),(26405,118,175,NULL),(26406,88,175,NULL),(26407,81,175,NULL),(26408,80,175,NULL),(26409,77,175,NULL),(26410,76,175,NULL),(26411,75,175,NULL),(26412,74,175,NULL),(26413,73,175,NULL),(26414,69,175,NULL),(26415,67,175,NULL),(26416,66,175,NULL),(26417,65,175,NULL),(26418,62,175,NULL),(26419,60,175,NULL),(26420,59,175,NULL),(26421,58,175,NULL),(26422,55,175,NULL),(26423,54,175,NULL),(26424,53,175,NULL),(26425,50,175,NULL),(26426,48,175,NULL),(26427,45,175,NULL),(26428,43,175,NULL),(26429,42,175,NULL),(26430,41,175,NULL),(26431,38,175,NULL),(26432,35,175,NULL),(26433,34,175,NULL),(26434,33,175,NULL),(26435,31,175,NULL),(26436,30,175,NULL),(26437,29,175,NULL),(26438,28,175,NULL),(26439,27,175,NULL),(26440,26,175,NULL),(26441,21,175,NULL),(26442,20,175,NULL),(26443,18,175,NULL),(26444,17,175,NULL),(26445,15,175,NULL),(26446,14,175,NULL),(26447,13,175,NULL),(26448,12,175,NULL),(26449,11,175,NULL),(26450,10,175,NULL),(26451,9,175,NULL),(26452,8,175,NULL),(26453,7,175,NULL),(26454,6,175,NULL),(26455,5,175,NULL),(26456,4,175,NULL),(26457,3,175,NULL),(26458,2,175,NULL),(26459,1,175,NULL),(26460,16610,189,NULL),(26461,16595,189,NULL),(26462,16579,189,NULL),(26463,16596,189,NULL),(26464,16560,189,NULL),(26465,16556,189,NULL),(26466,16545,189,NULL),(26467,16570,189,NULL),(26468,16574,189,NULL),(26469,16535,189,NULL),(26470,3411,189,NULL),(26471,3402,189,NULL),(26472,3392,189,NULL),(26473,3370,189,NULL),(26474,3340,189,NULL),(26475,3345,189,NULL),(26476,3360,189,NULL),(26477,3289,189,NULL),(26478,3295,189,NULL),(26479,3194,189,NULL),(26480,3160,189,NULL),(26481,3151,189,NULL),(26482,3110,189,NULL),(26483,3046,189,NULL),(26484,3005,189,NULL),(26485,2965,189,NULL),(26486,2894,189,NULL),(26487,2656,189,NULL),(26488,2706,189,NULL),(26489,2652,189,NULL),(26490,2574,189,NULL),(26491,2595,189,NULL),(26492,2579,189,NULL),(26493,2554,189,NULL),(26494,2535,189,NULL),(26495,2529,189,NULL),(26496,2506,189,NULL),(26497,2490,189,NULL),(26498,2485,189,NULL),(26499,2460,189,NULL),(26500,2441,189,NULL),(26501,2427,189,NULL),(26502,2404,189,NULL),(26503,2220,189,NULL),(26504,2185,189,NULL),(26505,2124,189,NULL),(26506,2089,189,NULL),(26507,2062,189,NULL),(26508,2006,189,NULL),(26509,1961,189,NULL),(26510,1952,189,NULL),(26511,1929,189,NULL),(26512,1941,189,NULL),(26513,1920,189,NULL),(26514,1913,189,NULL),(26515,1859,189,NULL),(26516,1832,189,NULL),(26517,1800,189,NULL),(26518,1768,189,NULL),(26519,1752,189,NULL),(26520,1748,189,NULL),(26521,1725,189,NULL),(26522,1732,189,NULL),(26523,1672,189,NULL),(26524,1572,189,NULL),(26525,1539,189,NULL),(26526,1512,189,NULL),(26527,1486,189,NULL),(26528,1480,189,NULL),(26529,1470,189,NULL),(26530,1464,189,NULL),(26531,1423,189,NULL),(26532,1431,189,NULL),(26533,1394,189,NULL),(26534,1365,189,NULL),(26535,1351,189,NULL),(26536,1346,189,NULL),(26537,1323,189,NULL),(26538,1342,189,NULL),(26539,1304,189,NULL),(26540,2215,189,NULL),(26541,1260,189,NULL),(26542,1252,189,NULL),(26543,1094,189,NULL),(26544,1071,189,NULL),(26545,1051,189,NULL),(26546,1005,189,NULL),(26547,977,189,NULL),(26548,509,189,NULL),(26549,961,189,NULL),(26550,945,189,NULL),(26551,941,189,NULL),(26552,925,189,NULL),(26553,922,189,NULL),(26554,912,189,NULL),(26555,905,189,NULL),(26556,896,189,NULL),(26557,881,189,NULL),(26558,867,189,NULL),(26559,832,189,NULL),(26560,796,189,NULL),(26561,704,189,NULL),(26562,766,189,NULL),(26563,747,189,NULL),(26564,709,189,NULL),(26565,728,189,NULL),(26566,724,189,NULL),(26567,693,189,NULL),(26568,665,189,NULL),(26569,645,189,NULL),(26570,643,189,NULL),(26571,633,189,NULL),(26572,628,189,NULL),(26573,605,189,NULL),(26574,575,189,NULL),(26575,566,189,NULL),(26576,561,189,NULL),(26577,560,189,NULL),(26578,540,189,NULL),(26579,525,189,NULL),(26580,485,189,NULL),(26581,448,189,NULL),(26582,435,189,NULL),(26583,414,189,NULL),(26584,405,189,NULL),(26585,392,189,NULL),(26586,374,189,NULL),(26587,350,189,NULL),(26588,349,189,NULL),(26589,345,189,NULL),(26590,344,189,NULL),(26591,342,189,NULL),(26592,338,189,NULL),(26593,334,189,NULL),(26594,287,189,NULL),(26595,283,189,NULL),(26596,274,189,NULL),(26597,268,189,NULL),(26598,260,189,NULL),(26599,258,189,NULL),(26600,242,189,NULL),(26601,238,189,NULL),(26602,219,189,NULL),(26603,217,189,NULL),(26604,215,189,NULL),(26605,209,189,NULL),(26606,205,189,NULL),(26607,204,189,NULL),(26608,202,189,NULL),(26609,191,189,NULL),(26610,190,189,NULL),(26611,189,189,NULL),(26612,172,189,NULL),(26613,169,189,NULL),(26614,167,189,NULL),(26615,164,189,NULL),(26616,162,189,NULL),(26617,153,189,NULL),(26618,151,189,NULL),(26619,136,189,NULL),(26620,125,189,NULL),(26621,122,189,NULL),(26622,121,189,NULL),(26623,88,189,NULL),(26624,75,189,NULL),(26625,74,189,NULL),(26626,67,189,NULL),(26627,66,189,NULL),(26628,58,189,NULL),(26629,55,189,NULL),(26630,53,189,NULL),(26631,50,189,NULL),(26632,43,189,NULL),(26633,39,189,NULL),(26634,35,189,NULL),(26635,29,189,NULL),(26636,28,189,NULL),(26637,26,189,NULL),(26638,14,189,NULL),(26639,11,189,NULL),(26640,11,189,NULL),(26641,9,189,NULL),(26642,7,189,NULL),(26643,7,189,NULL),(26644,4,189,NULL),(26645,4,189,NULL),(26646,1,189,NULL),(26647,1,189,NULL),(26648,16579,203,NULL),(26649,3345,203,NULL),(26650,3349,203,NULL),(26651,3300,203,NULL),(26652,3306,203,NULL),(26653,3163,203,NULL),(26654,3169,203,NULL),(26655,3151,203,NULL),(26656,3042,203,NULL),(26657,2996,203,NULL),(26658,2914,203,NULL),(26659,2579,203,NULL),(26660,2342,203,NULL),(26661,2379,203,NULL),(26662,2161,203,NULL),(26663,2106,203,NULL),(26664,2033,203,NULL),(26665,2027,203,NULL),(26666,2037,203,NULL),(26667,2000,203,NULL),(26668,1980,203,NULL),(26669,1974,203,NULL),(26670,1910,203,NULL),(26671,1768,203,NULL),(26672,1780,203,NULL),(26673,1431,203,NULL),(26674,1408,203,NULL),(26675,1400,203,NULL),(26676,1352,203,NULL),(26677,1208,203,NULL),(26678,1109,203,NULL),(26679,1094,203,NULL),(26680,1071,203,NULL),(26681,978,203,NULL),(26682,974,203,NULL),(26683,930,203,NULL),(26684,916,203,NULL),(26685,912,203,NULL),(26686,904,203,NULL),(26687,873,203,NULL),(26688,860,203,NULL),(26689,848,203,NULL),(26690,798,203,NULL),(26691,796,203,NULL),(26692,724,203,NULL),(26693,717,203,NULL),(26694,713,203,NULL),(26695,658,203,NULL),(26696,605,203,NULL),(26697,496,203,NULL),(26698,455,203,NULL),(26699,363,203,NULL),(26700,345,203,NULL),(26701,344,203,NULL),(26702,242,203,NULL),(26703,219,203,NULL),(26704,209,203,NULL),(26705,189,203,NULL),(26706,145,203,NULL),(26707,144,203,NULL),(26708,134,203,NULL),(26709,125,203,NULL),(26710,122,203,NULL),(26711,121,203,NULL),(26712,119,203,NULL),(26713,118,203,NULL),(26714,104,203,NULL),(26715,94,203,NULL),(26716,88,203,NULL),(26717,70,203,NULL),(26718,67,203,NULL),(26719,66,203,NULL),(26720,58,203,NULL),(26721,35,203,NULL),(26722,28,203,NULL),(26723,27,203,NULL),(26724,26,203,NULL),(26725,20,203,NULL),(26726,14,203,NULL),(26727,13,203,NULL),(26728,11,203,NULL),(26729,9,203,NULL),(26730,1,203,NULL),(26731,3563,203,NULL),(26732,4507,203,NULL),(26733,4073,203,NULL),(26734,3793,203,NULL),(26735,3813,203,NULL),(26736,4159,203,NULL),(26737,4307,203,NULL),(26738,4484,203,NULL),(26739,3484,203,NULL),(26740,3469,203,NULL),(26741,3620,203,NULL),(26742,3705,203,NULL),(26743,3495,203,NULL),(26744,3525,203,NULL),(26745,3885,203,NULL),(26746,3568,203,NULL),(26747,4078,203,NULL),(26748,3559,203,NULL),(26749,3621,203,NULL),(26750,4968,203,NULL),(26751,5552,203,NULL),(26752,4629,203,NULL),(26753,5443,203,NULL),(26754,3849,203,NULL),(26755,4153,203,NULL),(26756,4113,203,NULL),(26757,5927,203,NULL),(26758,3682,203,NULL),(26759,3554,203,NULL),(26760,3649,203,NULL),(26761,5006,203,NULL),(26762,3498,203,NULL),(26763,3846,203,NULL),(26764,3623,203,NULL),(26765,4902,203,NULL),(26766,5134,203,NULL),(26767,5652,203,NULL),(26768,6210,203,NULL),(26769,5429,203,NULL),(26770,4720,203,NULL),(26771,5017,203,NULL),(26772,6120,203,NULL),(26773,3889,203,NULL),(26774,6233,203,NULL),(26775,4865,203,NULL),(26776,4775,203,NULL),(26777,5505,203,NULL),(26778,4269,203,NULL),(26779,4302,203,NULL),(26780,6073,203,NULL),(26781,10487,203,NULL),(26782,16575,205,NULL),(26783,16556,205,NULL),(26784,16570,205,NULL),(26785,16574,205,NULL),(26786,3411,205,NULL),(26787,3402,205,NULL),(26788,3407,205,NULL),(26789,3408,205,NULL),(26790,16536,205,NULL),(26791,3362,205,NULL),(26792,3364,205,NULL),(26793,3360,205,NULL),(26794,3349,205,NULL),(26795,3365,205,NULL),(26796,3361,205,NULL),(26797,2730,205,NULL),(26798,1929,205,NULL),(26799,1769,205,NULL),(26800,1752,205,NULL),(26801,1763,205,NULL),(26802,1658,205,NULL),(26803,1539,205,NULL),(26804,1508,205,NULL),(26805,1480,205,NULL),(26806,1461,205,NULL),(26807,1423,205,NULL),(26808,1343,205,NULL),(26809,1260,205,NULL),(26810,1122,205,NULL),(26811,974,205,NULL),(26812,904,205,NULL),(26813,867,205,NULL),(26814,796,205,NULL),(26815,704,205,NULL),(26816,766,205,NULL),(26817,713,205,NULL),(26818,689,205,NULL),(26819,665,205,NULL),(26820,643,205,NULL),(26821,566,205,NULL),(26822,525,205,NULL),(26823,523,205,NULL),(26824,349,205,NULL),(26825,303,205,NULL),(26826,217,205,NULL),(26827,209,205,NULL),(26828,190,205,NULL),(26829,189,205,NULL),(26830,169,205,NULL),(26831,153,205,NULL),(26832,121,205,NULL),(26833,74,205,NULL),(26834,35,205,NULL),(26835,26,205,NULL),(26836,9,205,NULL),(26837,3,205,NULL),(26838,1,205,NULL),(26839,16585,233,NULL),(26840,3360,233,NULL),(26841,3289,233,NULL),(26842,3190,233,NULL),(26843,3162,233,NULL),(26844,3110,233,NULL),(26845,2942,233,NULL),(26846,2824,233,NULL),(26847,2798,233,NULL),(26848,2730,233,NULL),(26849,2574,233,NULL),(26850,2554,233,NULL),(26851,2490,233,NULL),(26852,2461,233,NULL),(26853,2390,233,NULL),(26854,2235,233,NULL),(26855,2011,233,NULL),(26856,1929,233,NULL),(26857,1920,233,NULL),(26858,1768,233,NULL),(26859,1752,233,NULL),(26860,1725,233,NULL),(26861,1732,233,NULL),(26862,1679,233,NULL),(26863,1672,233,NULL),(26864,1572,233,NULL),(26865,1539,233,NULL),(26866,1512,233,NULL),(26867,1480,233,NULL),(26868,1470,233,NULL),(26869,1464,233,NULL),(26870,1456,233,NULL),(26871,1461,233,NULL),(26872,1423,233,NULL),(26873,1431,233,NULL),(26874,1365,233,NULL),(26875,1351,233,NULL),(26876,1343,233,NULL),(26877,1304,233,NULL),(26878,1266,233,NULL),(26879,1207,233,NULL),(26880,1071,233,NULL),(26881,977,233,NULL),(26882,904,233,NULL),(26883,875,233,NULL),(26884,867,233,NULL),(26885,832,233,NULL),(26886,796,233,NULL),(26887,704,233,NULL),(26888,766,233,NULL),(26889,709,233,NULL),(26890,724,233,NULL),(26891,689,233,NULL),(26892,643,233,NULL),(26893,605,233,NULL),(26894,566,233,NULL),(26895,520,233,NULL),(26896,507,233,NULL),(26897,459,233,NULL),(26898,448,233,NULL),(26899,443,233,NULL),(26900,442,233,NULL),(26901,441,233,NULL),(26902,414,233,NULL),(26903,392,233,NULL),(26904,383,233,NULL),(26905,345,233,NULL),(26906,344,233,NULL),(26907,338,233,NULL),(26908,334,233,NULL),(26909,290,233,NULL),(26910,287,233,NULL),(26911,283,233,NULL),(26912,268,233,NULL),(26913,242,233,NULL),(26914,238,233,NULL),(26915,219,233,NULL),(26916,217,233,NULL),(26917,215,233,NULL),(26918,209,233,NULL),(26919,205,233,NULL),(26920,202,233,NULL),(26921,189,233,NULL),(26922,169,233,NULL),(26923,167,233,NULL),(26924,162,233,NULL),(26925,153,233,NULL),(26926,151,233,NULL),(26927,137,233,NULL),(26928,136,233,NULL),(26929,128,233,NULL),(26930,125,233,NULL),(26931,121,233,NULL),(26932,88,233,NULL),(26933,80,233,NULL),(26934,74,233,NULL),(26935,69,233,NULL),(26936,66,233,NULL),(26937,58,233,NULL),(26938,55,233,NULL),(26939,54,233,NULL),(26940,50,233,NULL),(26941,45,233,NULL),(26942,43,233,NULL),(26943,35,233,NULL),(26944,34,233,NULL),(26945,33,233,NULL),(26946,28,233,NULL),(26947,27,233,NULL),(26948,26,233,NULL),(26949,15,233,NULL),(26950,14,233,NULL),(26951,11,233,NULL),(26952,9,233,NULL),(26953,7,233,NULL),(26954,4,233,NULL),(26955,3,233,NULL),(26956,1,233,NULL),(26957,2579,252,NULL),(26958,1780,252,NULL),(26959,287,252,NULL),(26960,9,252,NULL),(26961,16610,234,NULL),(26962,16595,234,NULL),(26963,16585,234,NULL),(26964,16579,234,NULL),(26965,16541,234,NULL),(26966,16556,234,NULL),(26967,16545,234,NULL),(26968,16570,234,NULL),(26969,16574,234,NULL),(26970,16550,234,NULL),(26971,3411,234,NULL),(26972,3402,234,NULL),(26973,3392,234,NULL),(26974,3407,234,NULL),(26975,3345,234,NULL),(26976,3360,234,NULL),(26977,3248,234,NULL),(26978,3232,234,NULL),(26979,3190,234,NULL),(26980,3194,234,NULL),(26981,3210,234,NULL),(26982,3162,234,NULL),(26983,3169,234,NULL),(26984,3151,234,NULL),(26985,3168,234,NULL),(26986,3184,234,NULL),(26987,3185,234,NULL),(26988,3142,234,NULL),(26989,3131,234,NULL),(26990,3110,234,NULL),(26991,3105,234,NULL),(26992,3005,234,NULL),(26993,2873,234,NULL),(26994,2874,234,NULL),(26995,2656,234,NULL),(26996,2652,234,NULL),(26997,2574,234,NULL),(26998,2595,234,NULL),(26999,2582,234,NULL),(27000,2554,234,NULL),(27001,2535,234,NULL),(27002,2529,234,NULL),(27003,2520,234,NULL),(27004,2490,234,NULL),(27005,2485,234,NULL),(27006,2413,234,NULL),(27007,2390,234,NULL),(27008,2379,234,NULL),(27009,2300,234,NULL),(27010,2235,234,NULL),(27011,2270,234,NULL),(27012,2220,234,NULL),(27013,2206,234,NULL),(27014,2176,234,NULL),(27015,2124,234,NULL),(27016,2089,234,NULL),(27017,1995,234,NULL),(27018,2006,234,NULL),(27019,1952,234,NULL),(27020,1929,234,NULL),(27021,1920,234,NULL),(27022,1925,234,NULL),(27023,1859,234,NULL),(27024,1832,234,NULL),(27025,1800,234,NULL),(27026,1790,234,NULL),(27027,1768,234,NULL),(27028,1780,234,NULL),(27029,1752,234,NULL),(27030,1748,234,NULL),(27031,1725,234,NULL),(27032,1732,234,NULL),(27033,1679,234,NULL),(27034,1678,234,NULL),(27035,1672,234,NULL),(27036,1657,234,NULL),(27037,1646,234,NULL),(27038,1608,234,NULL),(27039,1572,234,NULL),(27040,1534,234,NULL),(27041,1539,234,NULL),(27042,1512,234,NULL),(27043,1523,234,NULL),(27044,1486,234,NULL),(27045,1480,234,NULL),(27046,1493,234,NULL),(27047,1491,234,NULL),(27048,1470,234,NULL),(27049,1464,234,NULL),(27050,1475,234,NULL),(27051,1456,234,NULL),(27052,1431,234,NULL),(27053,1365,234,NULL),(27054,1351,234,NULL),(27055,1346,234,NULL),(27056,1358,234,NULL),(27057,1343,234,NULL),(27058,1342,234,NULL),(27059,1304,234,NULL),(27060,1295,234,NULL),(27061,1266,234,NULL),(27062,1252,234,NULL),(27063,1207,234,NULL),(27064,1550,234,NULL),(27065,1137,234,NULL),(27066,1619,234,NULL),(27067,1071,234,NULL),(27068,1051,234,NULL),(27069,1004,234,NULL),(27070,977,234,NULL),(27071,974,234,NULL),(27072,509,234,NULL),(27073,961,234,NULL),(27074,922,234,NULL),(27075,912,234,NULL),(27076,905,234,NULL),(27077,896,234,NULL),(27078,881,234,NULL),(27079,867,234,NULL),(27080,832,234,NULL),(27081,796,234,NULL),(27082,704,234,NULL),(27083,771,234,NULL),(27084,766,234,NULL),(27085,747,234,NULL),(27086,746,234,NULL),(27087,709,234,NULL),(27088,735,234,NULL),(27089,724,234,NULL),(27090,717,234,NULL),(27091,693,234,NULL),(27092,674,234,NULL),(27093,665,234,NULL),(27094,649,234,NULL),(27095,643,234,NULL),(27096,628,234,NULL),(27097,605,234,NULL),(27098,566,234,NULL),(27099,540,234,NULL),(27100,525,234,NULL),(27101,520,234,NULL),(27102,507,234,NULL),(27103,506,234,NULL),(27104,504,234,NULL),(27105,485,234,NULL),(27106,448,234,NULL),(27107,442,234,NULL),(27108,435,234,NULL),(27109,414,234,NULL),(27110,412,234,NULL),(27111,405,234,NULL),(27112,392,234,NULL),(27113,387,234,NULL),(27114,383,234,NULL),(27115,374,234,NULL),(27116,371,234,NULL),(27117,350,234,NULL),(27118,345,234,NULL),(27119,344,234,NULL),(27120,342,234,NULL),(27121,338,234,NULL),(27122,334,234,NULL),(27123,326,234,NULL),(27124,292,234,NULL),(27125,287,234,NULL),(27126,283,234,NULL),(27127,274,234,NULL),(27128,268,234,NULL),(27129,263,234,NULL),(27130,260,234,NULL),(27131,258,234,NULL),(27132,242,234,NULL),(27133,240,234,NULL),(27134,239,234,NULL),(27135,238,234,NULL),(27136,219,234,NULL),(27137,217,234,NULL),(27138,215,234,NULL),(27139,209,234,NULL),(27140,205,234,NULL),(27141,204,234,NULL),(27142,202,234,NULL),(27143,198,234,NULL),(27144,191,234,NULL),(27145,190,234,NULL),(27146,189,234,NULL),(27147,169,234,NULL),(27148,167,234,NULL),(27149,164,234,NULL),(27150,162,234,NULL),(27151,154,234,NULL),(27152,153,234,NULL),(27153,152,234,NULL),(27154,151,234,NULL),(27155,137,234,NULL),(27156,136,234,NULL),(27157,128,234,NULL),(27158,125,234,NULL),(27159,122,234,NULL),(27160,121,234,NULL),(27161,88,234,NULL),(27162,78,234,NULL),(27163,76,234,NULL),(27164,75,234,NULL),(27165,74,234,NULL),(27166,70,234,NULL),(27167,69,234,NULL),(27168,66,234,NULL),(27169,58,234,NULL),(27170,56,234,NULL),(27171,55,234,NULL),(27172,53,234,NULL),(27173,50,234,NULL),(27174,48,234,NULL),(27175,39,234,NULL),(27176,35,234,NULL),(27177,34,234,NULL),(27178,33,234,NULL),(27179,29,234,NULL),(27180,28,234,NULL),(27181,27,234,NULL),(27182,26,234,NULL),(27183,20,234,NULL),(27184,13,234,NULL),(27185,11,234,NULL),(27186,9,234,NULL),(27187,7,234,NULL),(27188,3,234,NULL),(27189,1,234,NULL),(27190,3524,234,NULL),(27191,3739,234,NULL),(27192,3459,234,NULL),(27193,3749,234,NULL),(27194,3431,239,NULL),(27195,16595,264,NULL),(27196,16596,264,NULL),(27197,16556,264,NULL),(27198,16570,264,NULL),(27199,3403,264,NULL),(27200,3363,264,NULL),(27201,3362,264,NULL),(27202,3351,264,NULL),(27203,3347,264,NULL),(27204,3355,264,NULL),(27205,3348,264,NULL),(27206,3352,264,NULL),(27207,3360,264,NULL),(27208,3346,264,NULL),(27209,3350,264,NULL),(27210,3354,264,NULL),(27211,3349,264,NULL),(27212,3365,264,NULL),(27213,3361,264,NULL),(27214,2730,264,NULL),(27215,2461,264,NULL),(27216,2181,264,NULL),(27217,1863,264,NULL),(27218,1752,264,NULL),(27219,1763,264,NULL),(27220,1658,264,NULL),(27221,1669,264,NULL),(27222,1590,264,NULL),(27223,1539,264,NULL),(27224,1508,264,NULL),(27225,1480,264,NULL),(27226,1461,264,NULL),(27227,1423,264,NULL),(27228,1343,264,NULL),(27229,1260,264,NULL),(27230,1122,264,NULL),(27231,974,264,NULL),(27232,904,264,NULL),(27233,867,264,NULL),(27234,832,264,NULL),(27235,796,264,NULL),(27236,704,264,NULL),(27237,766,264,NULL),(27238,713,264,NULL),(27239,689,264,NULL),(27240,665,264,NULL),(27241,643,264,NULL),(27242,566,264,NULL),(27243,525,264,NULL),(27244,523,264,NULL),(27245,401,264,NULL),(27246,287,264,NULL),(27247,258,264,NULL),(27248,217,264,NULL),(27249,209,264,NULL),(27250,202,264,NULL),(27251,190,264,NULL),(27252,189,264,NULL),(27253,169,264,NULL),(27254,123,264,NULL),(27255,121,264,NULL),(27256,74,264,NULL),(27257,66,264,NULL),(27258,37,264,NULL),(27259,35,264,NULL),(27260,26,264,NULL),(27261,9,264,NULL),(27262,3,264,NULL),(27263,1,264,NULL),(27264,17222,234,NULL),(27265,2873,279,NULL),(27266,2730,279,NULL),(27267,2540,279,NULL),(27268,2537,279,NULL),(27269,2461,279,NULL),(27270,2121,279,NULL),(27271,1838,279,NULL),(27272,1590,279,NULL),(27273,1539,279,NULL),(27274,1480,279,NULL),(27275,1423,279,NULL),(27276,1343,279,NULL),(27277,2215,279,NULL),(27278,1260,279,NULL),(27279,1123,279,NULL),(27280,867,279,NULL),(27281,832,279,NULL),(27282,704,279,NULL),(27283,766,279,NULL),(27284,689,279,NULL),(27285,658,279,NULL),(27286,643,279,NULL),(27287,567,279,NULL),(27288,566,279,NULL),(27289,523,279,NULL),(27290,442,279,NULL),(27291,441,279,NULL),(27292,374,279,NULL),(27293,349,279,NULL),(27294,217,279,NULL),(27295,209,279,NULL),(27296,189,279,NULL),(27297,153,279,NULL),(27298,123,279,NULL),(27299,77,279,NULL),(27300,74,279,NULL),(27301,46,279,NULL),(27302,35,279,NULL),(27303,33,279,NULL),(27304,26,279,NULL),(27305,9,279,NULL),(27306,1,279,NULL),(27307,16585,181,NULL),(27308,3394,181,NULL),(27309,3396,181,NULL),(27310,3356,181,NULL),(27311,3375,181,NULL),(27312,3300,181,NULL),(27313,3289,181,NULL),(27314,3306,181,NULL),(27315,3274,181,NULL),(27316,3272,181,NULL),(27317,3208,181,NULL),(27318,3190,181,NULL),(27319,3191,181,NULL),(27320,3227,181,NULL),(27321,3162,181,NULL),(27322,3169,181,NULL),(27323,3151,181,NULL),(27324,3110,181,NULL),(27325,3108,181,NULL),(27326,3065,181,NULL),(27327,2965,181,NULL),(27328,2974,181,NULL),(27329,2894,181,NULL),(27330,2873,181,NULL),(27331,2874,181,NULL),(27332,2818,181,NULL),(27333,2806,181,NULL),(27334,2780,181,NULL),(27335,2798,181,NULL),(27336,2778,181,NULL),(27337,2716,181,NULL),(27338,2769,181,NULL),(27339,2685,181,NULL),(27340,2656,181,NULL),(27341,2652,181,NULL),(27342,2651,181,NULL),(27343,2563,181,NULL),(27344,2560,181,NULL),(27345,2660,181,NULL),(27346,2551,181,NULL),(27347,2594,181,NULL),(27348,2579,181,NULL),(27349,2540,181,NULL),(27350,2545,181,NULL),(27351,2535,181,NULL),(27352,2529,181,NULL),(27353,2523,181,NULL),(27354,2503,181,NULL),(27355,2485,181,NULL),(27356,2469,181,NULL),(27357,2455,181,NULL),(27358,2423,181,NULL),(27359,2427,181,NULL),(27360,2413,181,NULL),(27361,2401,181,NULL),(27362,2379,181,NULL),(27363,2300,181,NULL),(27364,2235,181,NULL),(27365,2244,181,NULL),(27366,2206,181,NULL),(27367,2140,181,NULL),(27368,2115,181,NULL),(27369,2114,181,NULL),(27370,2033,181,NULL),(27371,2011,181,NULL),(27372,1976,181,NULL),(27373,1929,181,NULL),(27374,1920,181,NULL),(27375,1927,181,NULL),(27376,1925,181,NULL),(27377,1910,181,NULL),(27378,1863,181,NULL),(27379,1876,181,NULL),(27380,1832,181,NULL),(27381,1812,181,NULL),(27382,1768,181,NULL),(27383,1780,181,NULL),(27384,1752,181,NULL),(27385,1679,181,NULL),(27386,1672,181,NULL),(27387,1572,181,NULL),(27388,1556,181,NULL),(27389,1539,181,NULL),(27390,1512,181,NULL),(27391,1526,181,NULL),(27392,1480,181,NULL),(27393,1492,181,NULL),(27394,1470,181,NULL),(27395,1464,181,NULL),(27396,1456,181,NULL),(27397,1455,181,NULL),(27398,1438,181,NULL),(27399,1423,181,NULL),(27400,1431,181,NULL),(27401,1414,181,NULL),(27402,1351,181,NULL),(27403,1358,181,NULL),(27404,1343,181,NULL),(27405,1317,181,NULL),(27406,1304,181,NULL),(27407,1295,181,NULL),(27408,1281,181,NULL),(27409,2226,181,NULL),(27410,1329,181,NULL),(27411,1137,181,NULL),(27412,1123,181,NULL),(27413,1018,181,NULL),(27414,999,181,NULL),(27415,977,181,NULL),(27416,976,181,NULL),(27417,509,181,NULL),(27418,961,181,NULL),(27419,904,181,NULL),(27420,877,181,NULL),(27421,867,181,NULL),(27422,832,181,NULL),(27423,796,181,NULL),(27424,704,181,NULL),(27425,771,181,NULL),(27426,766,181,NULL),(27427,763,181,NULL),(27428,643,181,NULL),(27429,633,181,NULL),(27430,605,181,NULL),(27431,456,181,NULL),(27432,448,181,NULL),(27433,441,181,NULL),(27434,435,181,NULL),(27435,416,181,NULL),(27436,412,181,NULL),(27437,400,181,NULL),(27438,392,181,NULL),(27439,374,181,NULL),(27440,371,181,NULL),(27441,368,181,NULL),(27442,367,181,NULL),(27443,345,181,NULL),(27444,344,181,NULL),(27445,342,181,NULL),(27446,334,181,NULL),(27447,326,181,NULL),(27448,319,181,NULL),(27449,316,181,NULL),(27450,306,181,NULL),(27451,287,181,NULL),(27452,283,181,NULL),(27453,268,181,NULL),(27454,260,181,NULL),(27455,258,181,NULL),(27456,240,181,NULL),(27457,238,181,NULL),(27458,231,181,NULL),(27459,219,181,NULL),(27460,217,181,NULL),(27461,215,181,NULL),(27462,209,181,NULL),(27463,204,181,NULL),(27464,202,181,NULL),(27465,201,181,NULL),(27466,198,181,NULL),(27467,191,181,NULL),(27468,189,181,NULL),(27469,172,181,NULL),(27470,169,181,NULL),(27471,167,181,NULL),(27472,165,181,NULL),(27473,164,181,NULL),(27474,162,181,NULL),(27475,154,181,NULL),(27476,153,181,NULL),(27477,151,181,NULL),(27478,149,181,NULL),(27479,137,181,NULL),(27480,136,181,NULL),(27481,122,181,NULL),(27482,121,181,NULL),(27483,81,181,NULL),(27484,80,181,NULL),(27485,75,181,NULL),(27486,74,181,NULL),(27487,73,181,NULL),(27488,70,181,NULL),(27489,69,181,NULL),(27490,66,181,NULL),(27491,59,181,NULL),(27492,58,181,NULL),(27493,55,181,NULL),(27494,54,181,NULL),(27495,53,181,NULL),(27496,50,181,NULL),(27497,48,181,NULL),(27498,43,181,NULL),(27499,41,181,NULL),(27500,38,181,NULL),(27501,35,181,NULL),(27502,34,181,NULL),(27503,33,181,NULL),(27504,29,181,NULL),(27505,28,181,NULL),(27506,27,181,NULL),(27507,26,181,NULL),(27508,16,181,NULL),(27509,15,181,NULL),(27510,11,181,NULL),(27511,9,181,NULL),(27512,7,181,NULL),(27513,6,181,NULL),(27514,4,181,NULL),(27515,3,181,NULL),(27516,1,181,NULL),(27517,1539,239,NULL),(27518,1423,239,NULL),(27519,1343,239,NULL),(27520,867,239,NULL),(27521,441,239,NULL),(27522,287,239,NULL),(27523,217,239,NULL),(27524,209,239,NULL),(27525,153,239,NULL),(27526,74,239,NULL),(27527,33,239,NULL),(27528,9,239,NULL),(27529,1,239,NULL),(27530,16545,194,NULL),(27531,3394,194,NULL),(27532,3396,194,NULL),(27533,3356,194,NULL),(27534,3375,194,NULL),(27535,3208,194,NULL),(27536,3169,194,NULL),(27537,3110,194,NULL),(27538,3108,194,NULL),(27539,2999,194,NULL),(27540,2965,194,NULL),(27541,2942,194,NULL),(27542,2894,194,NULL),(27543,2873,194,NULL),(27544,2874,194,NULL),(27545,2818,194,NULL),(27546,2843,194,NULL),(27547,2824,194,NULL),(27548,2780,194,NULL),(27549,2685,194,NULL),(27550,2656,194,NULL),(27551,2652,194,NULL),(27552,2651,194,NULL),(27553,2574,194,NULL),(27554,2560,194,NULL),(27555,2551,194,NULL),(27556,2595,194,NULL),(27557,2579,194,NULL),(27558,2535,194,NULL),(27559,2529,194,NULL),(27560,2503,194,NULL),(27561,2485,194,NULL),(27562,2475,194,NULL),(27563,2469,194,NULL),(27564,2427,194,NULL),(27565,2401,194,NULL),(27566,2379,194,NULL),(27567,2373,194,NULL),(27568,2220,194,NULL),(27569,2206,194,NULL),(27570,2140,194,NULL),(27571,2115,194,NULL),(27572,2033,194,NULL),(27573,1976,194,NULL),(27574,1929,194,NULL),(27575,1920,194,NULL),(27576,1863,194,NULL),(27577,1832,194,NULL),(27578,1768,194,NULL),(27579,1780,194,NULL),(27580,1752,194,NULL),(27581,1748,194,NULL),(27582,1725,194,NULL),(27583,1732,194,NULL),(27584,1679,194,NULL),(27585,1672,194,NULL),(27586,1636,194,NULL),(27587,1572,194,NULL),(27588,1539,194,NULL),(27589,1512,194,NULL),(27590,1486,194,NULL),(27591,1480,194,NULL),(27592,1493,194,NULL),(27593,1470,194,NULL),(27594,1464,194,NULL),(27595,1456,194,NULL),(27596,1431,194,NULL),(27597,1351,194,NULL),(27598,1346,194,NULL),(27599,1358,194,NULL),(27600,1323,194,NULL),(27601,1342,194,NULL),(27602,1304,194,NULL),(27603,1252,194,NULL),(27604,2226,194,NULL),(27605,1123,194,NULL),(27606,1108,194,NULL),(27607,1071,194,NULL),(27608,1004,194,NULL),(27609,977,194,NULL),(27610,961,194,NULL),(27611,912,194,NULL),(27612,877,194,NULL),(27613,867,194,NULL),(27614,832,194,NULL),(27615,704,194,NULL),(27616,766,194,NULL),(27617,763,194,NULL),(27618,744,194,NULL),(27619,709,194,NULL),(27620,724,194,NULL),(27621,693,194,NULL),(27622,643,194,NULL),(27623,628,194,NULL),(27624,605,194,NULL),(27625,566,194,NULL),(27626,560,194,NULL),(27627,485,194,NULL),(27628,443,194,NULL),(27629,442,194,NULL),(27630,441,194,NULL),(27631,435,194,NULL),(27632,416,194,NULL),(27633,414,194,NULL),(27634,412,194,NULL),(27635,392,194,NULL),(27636,389,194,NULL),(27637,374,194,NULL),(27638,368,194,NULL),(27639,367,194,NULL),(27640,345,194,NULL),(27641,344,194,NULL),(27642,342,194,NULL),(27643,338,194,NULL),(27644,334,194,NULL),(27645,304,194,NULL),(27646,303,194,NULL),(27647,287,194,NULL),(27648,283,194,NULL),(27649,279,194,NULL),(27650,268,194,NULL),(27651,238,194,NULL),(27652,217,194,NULL),(27653,215,194,NULL),(27654,189,194,NULL),(27655,169,194,NULL),(27656,164,194,NULL),(27657,162,194,NULL),(27658,153,194,NULL),(27659,151,194,NULL),(27660,136,194,NULL),(27661,122,194,NULL),(27662,121,194,NULL),(27663,88,194,NULL),(27664,80,194,NULL),(27665,74,194,NULL),(27666,69,194,NULL),(27667,2965,96,NULL),(27668,66,194,NULL),(27669,2730,96,NULL),(27670,62,194,NULL),(27671,2656,96,NULL),(27672,58,194,NULL),(27673,2652,96,NULL),(27674,54,194,NULL),(27675,2574,96,NULL),(27676,50,194,NULL),(27677,2579,96,NULL),(27678,42,194,NULL),(27679,2554,96,NULL),(27680,35,194,NULL),(27681,2461,96,NULL),(27682,33,194,NULL),(27683,2390,96,NULL),(27684,2300,96,NULL),(27685,27,194,NULL),(27686,2260,96,NULL),(27687,26,194,NULL),(27688,1929,96,NULL),(27689,13,194,NULL),(27690,1863,96,NULL),(27691,11,194,NULL),(27692,1768,96,NULL),(27693,9,194,NULL),(27694,1732,96,NULL),(27695,7,194,NULL),(27696,1657,96,NULL),(27697,4,194,NULL),(27698,1572,96,NULL),(27699,1,194,NULL),(27700,1539,96,NULL),(27701,1480,96,NULL),(27702,1464,96,NULL),(27703,1461,96,NULL),(27704,1431,96,NULL),(27705,1358,96,NULL),(27706,1343,96,NULL),(27707,1304,96,NULL),(27708,2730,194,NULL),(27709,2215,96,NULL),(27710,1207,96,NULL),(27711,1137,96,NULL),(27712,1071,96,NULL),(27713,977,96,NULL),(27714,2554,194,NULL),(27715,904,96,NULL),(27716,875,96,NULL),(27717,867,96,NULL),(27718,2461,194,NULL),(27719,832,96,NULL),(27720,2390,194,NULL),(27721,2300,194,NULL),(27722,796,96,NULL),(27723,2260,194,NULL),(27724,704,96,NULL),(27725,766,96,NULL),(27726,746,96,NULL),(27727,724,96,NULL),(27728,1657,194,NULL),(27729,643,96,NULL),(27730,605,96,NULL),(27731,566,96,NULL),(27732,448,96,NULL),(27733,1461,194,NULL),(27734,442,96,NULL),(27735,441,96,NULL),(27736,412,96,NULL),(27737,1343,194,NULL),(27738,392,96,NULL),(27739,2215,194,NULL),(27740,383,96,NULL),(27741,1207,194,NULL),(27742,374,96,NULL),(27743,1137,194,NULL),(27744,345,96,NULL),(27745,344,96,NULL),(27746,904,194,NULL),(27747,338,96,NULL),(27748,875,194,NULL),(27749,334,96,NULL),(27750,290,96,NULL),(27751,287,96,NULL),(27752,796,194,NULL),(27753,283,96,NULL),(27754,242,96,NULL),(27755,746,194,NULL),(27756,238,96,NULL),(27757,228,96,NULL),(27758,217,96,NULL),(27759,209,96,NULL),(27760,206,96,NULL),(27761,448,194,NULL),(27762,189,96,NULL),(27763,172,96,NULL),(27764,169,96,NULL),(27765,162,96,NULL),(27766,153,96,NULL),(27767,383,194,NULL),(27768,151,96,NULL),(27769,137,96,NULL),(27770,136,96,NULL),(27771,125,96,NULL),(27772,121,96,NULL),(27773,290,194,NULL),(27774,88,96,NULL),(27775,74,96,NULL),(27776,242,194,NULL),(27777,70,96,NULL),(27778,69,96,NULL),(27779,228,194,NULL),(27780,66,96,NULL),(27781,58,96,NULL),(27782,209,194,NULL),(27783,48,96,NULL),(27784,206,194,NULL),(27785,35,96,NULL),(27786,33,96,NULL),(27787,172,194,NULL),(27788,28,96,NULL),(27789,27,96,NULL),(27790,26,96,NULL),(27791,20,96,NULL),(27792,137,194,NULL),(27793,14,96,NULL),(27794,13,96,NULL),(27795,9,96,NULL),(27796,125,194,NULL),(27797,7,96,NULL),(27798,4,96,NULL),(27799,1,96,NULL),(27800,70,194,NULL),(27801,48,194,NULL),(27802,28,194,NULL),(27803,20,194,NULL),(27804,14,194,NULL),(27805,3392,183,NULL),(27806,3394,183,NULL),(27807,3396,183,NULL),(27808,3356,183,NULL),(27809,3375,183,NULL),(27810,3306,183,NULL),(27811,3272,183,NULL),(27812,3208,183,NULL),(27813,3191,183,NULL),(27814,3169,183,NULL),(27815,3108,183,NULL),(27816,3066,183,NULL),(27817,2999,183,NULL),(27818,2965,183,NULL),(27819,2962,183,NULL),(27820,2873,183,NULL),(27821,2874,183,NULL),(27822,2818,183,NULL),(27823,2843,183,NULL),(27824,2845,183,NULL),(27825,2780,183,NULL),(27826,2799,183,NULL),(27827,2698,183,NULL),(27828,2685,183,NULL),(27829,2656,183,NULL),(27830,2652,183,NULL),(27831,2651,183,NULL),(27832,2574,183,NULL),(27833,2570,183,NULL),(27834,2563,183,NULL),(27835,2560,183,NULL),(27836,2551,183,NULL),(27837,2594,183,NULL),(27838,2595,183,NULL),(27839,2579,183,NULL),(27840,2554,183,NULL),(27841,2537,183,NULL),(27842,2535,183,NULL),(27843,2529,183,NULL),(27844,2523,183,NULL),(27845,2503,183,NULL),(27846,2493,183,NULL),(27847,2490,183,NULL),(27848,2485,183,NULL),(27849,2467,183,NULL),(27850,2461,183,NULL),(27851,2460,183,NULL),(27852,2444,183,NULL),(27853,2401,183,NULL),(27854,2342,183,NULL),(27855,2390,183,NULL),(27856,2379,183,NULL),(27857,2375,183,NULL),(27858,2338,183,NULL),(27859,2302,183,NULL),(27860,2300,183,NULL),(27861,2220,183,NULL),(27862,2206,183,NULL),(27863,2179,183,NULL),(27864,2176,183,NULL),(27865,2161,183,NULL),(27866,2140,183,NULL),(27867,2145,183,NULL),(27868,2115,183,NULL),(27869,2062,183,NULL),(27870,2071,183,NULL),(27871,2033,183,NULL),(27872,1980,183,NULL),(27873,1976,183,NULL),(27874,1929,183,NULL),(27875,1922,183,NULL),(27876,1920,183,NULL),(27877,1863,183,NULL),(27878,1790,183,NULL),(27879,1768,183,NULL),(27880,1780,183,NULL),(27881,1752,183,NULL),(27882,1749,183,NULL),(27883,1732,183,NULL),(27884,1718,183,NULL),(27885,1679,183,NULL),(27886,1657,183,NULL),(27887,1636,183,NULL),(27888,1572,183,NULL),(27889,1534,183,NULL),(27890,1539,183,NULL),(27891,1512,183,NULL),(27892,1524,183,NULL),(27893,1486,183,NULL),(27894,1480,183,NULL),(27895,1493,183,NULL),(27896,1464,183,NULL),(27897,1456,183,NULL),(27898,1431,183,NULL),(27899,1415,183,NULL),(27900,1399,183,NULL),(27901,1352,183,NULL),(27902,1346,183,NULL),(27903,1358,183,NULL),(27904,1323,183,NULL),(27905,1342,183,NULL),(27906,1295,183,NULL),(27907,2215,183,NULL),(27908,1261,183,NULL),(27909,1252,183,NULL),(27910,1726,183,NULL),(27911,2226,183,NULL),(27912,1207,183,NULL),(27913,1128,183,NULL),(27914,1123,183,NULL),(27915,1092,183,NULL),(27916,1079,183,NULL),(27917,1071,183,NULL),(27918,1028,183,NULL),(27919,1007,183,NULL),(27920,1004,183,NULL),(27921,977,183,NULL),(27922,974,183,NULL),(27923,889,183,NULL),(27924,877,183,NULL),(27925,875,183,NULL),(27926,873,183,NULL),(27927,867,183,NULL),(27928,838,183,NULL),(27929,832,183,NULL),(27930,796,183,NULL),(27931,790,183,NULL),(27932,781,183,NULL),(27933,704,183,NULL),(27934,763,183,NULL),(27935,709,183,NULL),(27936,724,183,NULL),(27937,693,183,NULL),(27938,643,183,NULL),(27939,628,183,NULL),(27940,605,183,NULL),(27941,443,183,NULL),(27942,416,183,NULL),(27943,412,183,NULL),(27944,392,183,NULL),(27945,374,183,NULL),(27946,368,183,NULL),(27947,349,183,NULL),(27948,345,183,NULL),(27949,344,183,NULL),(27950,342,183,NULL),(27951,338,183,NULL),(27952,334,183,NULL),(27953,283,183,NULL),(27954,279,183,NULL),(27955,238,183,NULL),(27956,189,183,NULL),(27957,169,183,NULL),(27958,164,183,NULL),(27959,162,183,NULL),(27960,153,183,NULL),(27961,151,183,NULL),(27962,136,183,NULL),(27963,122,183,NULL),(27964,121,183,NULL),(27965,88,183,NULL),(27966,81,183,NULL),(27967,80,183,NULL),(27968,75,183,NULL),(27969,74,183,NULL),(27970,72,183,NULL),(27971,70,183,NULL),(27972,58,183,NULL),(27973,48,183,NULL),(27974,38,183,NULL),(27975,35,183,NULL),(27976,34,183,NULL),(27977,33,183,NULL),(27978,28,183,NULL),(27979,27,183,NULL),(27980,26,183,NULL),(27981,21,183,NULL),(27982,11,183,NULL),(27983,9,183,NULL),(27984,7,183,NULL),(27985,3,183,NULL),(27986,2,183,NULL),(27987,1,183,NULL),(27988,3488,229,NULL),(27989,3611,229,NULL),(27990,3533,36,NULL),(27991,3467,36,NULL),(27992,3578,36,NULL),(27993,3481,36,NULL),(27994,3506,36,NULL),(27995,3440,36,NULL),(27996,3540,36,NULL),(27997,4307,36,NULL),(27998,3499,36,NULL),(27999,5157,36,NULL),(28000,4484,36,NULL),(28001,3555,36,NULL),(28002,3554,36,NULL),(28003,3649,36,NULL),(28004,5006,36,NULL),(28005,3498,36,NULL),(28006,5125,36,NULL),(28007,4902,36,NULL),(28008,5134,36,NULL),(28009,5652,36,NULL),(28010,4720,36,NULL),(28011,5017,36,NULL),(28012,4750,36,NULL),(28013,3889,36,NULL),(28014,4865,36,NULL),(28015,5512,36,NULL),(28016,5068,36,NULL),(28017,6024,36,NULL),(28018,4775,36,NULL),(28019,5624,36,NULL),(28020,4269,36,NULL),(28021,4302,36,NULL),(28022,3484,36,NULL),(28023,3469,36,NULL),(28024,3885,36,NULL),(28025,4317,36,NULL),(28026,3621,36,NULL),(28027,4968,36,NULL),(28028,4629,36,NULL),(28029,5443,36,NULL),(28030,3849,36,NULL),(28031,5784,36,NULL),(28032,5372,36,NULL),(28033,4153,36,NULL),(28034,4235,36,NULL),(28035,10433,36,NULL),(28036,17299,36,NULL),(28037,15465,36,NULL),(28038,10776,36,NULL),(28039,15085,36,NULL),(28040,10487,36,NULL),(28041,6617,36,NULL),(28042,16595,184,NULL),(28043,1423,184,NULL),(28044,875,184,NULL),(28045,867,184,NULL),(28046,658,184,NULL),(28047,643,184,NULL),(28048,567,184,NULL),(28049,448,184,NULL),(28050,442,184,NULL),(28051,441,184,NULL),(28052,374,184,NULL),(28053,279,184,NULL),(28054,209,184,NULL),(28055,153,184,NULL),(28056,33,184,NULL),(28057,16574,36,NULL),(28058,16550,36,NULL),(28059,3392,36,NULL),(28060,3394,36,NULL),(28061,3340,36,NULL),(28062,3345,36,NULL),(28063,3360,36,NULL),(28064,3285,36,NULL),(28065,3324,36,NULL),(28066,3271,36,NULL),(28067,3248,36,NULL),(28068,3191,36,NULL),(28069,3169,36,NULL),(28070,3151,36,NULL),(28071,3110,36,NULL),(28072,3105,36,NULL),(28073,3066,36,NULL),(28074,3042,36,NULL),(28075,2996,36,NULL),(28076,2965,36,NULL),(28077,2938,36,NULL),(28078,2780,36,NULL),(28079,2785,36,NULL),(28080,2778,36,NULL),(28081,2698,36,NULL),(28082,2657,36,NULL),(28083,2652,36,NULL),(28084,2679,36,NULL),(28085,2570,36,NULL),(28086,2558,36,NULL),(28087,2559,36,NULL),(28088,2579,36,NULL),(28089,2554,36,NULL),(28090,2544,36,NULL),(28091,2529,36,NULL),(28092,2523,36,NULL),(28093,2469,36,NULL),(28094,2460,36,NULL),(28095,2418,36,NULL),(28096,2413,36,NULL),(28097,2396,36,NULL),(28098,2390,36,NULL),(28099,2379,36,NULL),(28100,2235,36,NULL),(28101,2270,36,NULL),(28102,2255,36,NULL),(28103,2206,36,NULL),(28104,2186,36,NULL),(28105,2185,36,NULL),(28106,2149,36,NULL),(28107,2161,36,NULL),(28108,2115,36,NULL),(28109,2033,36,NULL),(28110,2000,36,NULL),(28111,2009,36,NULL),(28112,1963,36,NULL),(28113,1961,36,NULL),(28114,1974,36,NULL),(28115,1930,36,NULL),(28116,1929,36,NULL),(28117,1877,36,NULL),(28118,1817,36,NULL),(28119,1800,36,NULL),(28120,1790,36,NULL),(28121,1769,36,NULL),(28122,1768,36,NULL),(28123,1780,36,NULL),(28124,1749,36,NULL),(28125,1748,36,NULL),(28126,1658,36,NULL),(28127,1630,36,NULL),(28128,1561,36,NULL),(28129,1572,36,NULL),(28130,1528,36,NULL),(28131,1512,36,NULL),(28132,1524,36,NULL),(28133,1480,36,NULL),(28134,1456,36,NULL),(28135,1455,36,NULL),(28136,1423,36,NULL),(28137,1422,36,NULL),(28138,1431,36,NULL),(28139,1408,36,NULL),(28140,1413,36,NULL),(28141,1400,36,NULL),(28142,1352,36,NULL),(28143,1351,36,NULL),(28144,1358,36,NULL),(28145,1323,36,NULL),(28146,1208,36,NULL),(28147,1143,36,NULL),(28148,1109,36,NULL),(28149,1094,36,NULL),(28150,1051,36,NULL),(28151,1018,36,NULL),(28152,992,36,NULL),(28153,978,36,NULL),(28154,977,36,NULL),(28155,974,36,NULL),(28156,509,36,NULL),(28157,946,36,NULL),(28158,930,36,NULL),(28159,925,36,NULL),(28160,916,36,NULL),(28161,904,36,NULL),(28162,877,36,NULL),(28163,873,36,NULL),(28164,862,36,NULL),(28165,848,36,NULL),(28166,841,36,NULL),(28167,791,36,NULL),(28168,704,36,NULL),(28169,771,36,NULL),(28170,713,36,NULL),(28171,658,36,NULL),(28172,643,36,NULL),(28173,605,36,NULL),(28174,567,36,NULL),(28175,565,36,NULL),(28176,560,36,NULL),(28177,557,36,NULL),(28178,554,36,NULL),(28179,542,36,NULL),(28180,516,36,NULL),(28181,507,36,NULL),(28182,463,36,NULL),(28183,462,36,NULL),(28184,442,36,NULL),(28185,441,36,NULL),(28186,435,36,NULL),(28187,416,36,NULL),(28188,414,36,NULL),(28189,401,36,NULL),(28190,397,36,NULL),(28191,367,36,NULL),(28192,363,36,NULL),(28193,345,36,NULL),(28194,344,36,NULL),(28195,326,36,NULL),(28196,300,36,NULL),(28197,292,36,NULL),(28198,287,36,NULL),(28199,283,36,NULL),(28200,278,36,NULL),(28201,268,36,NULL),(28202,263,36,NULL),(28203,260,36,NULL),(28204,258,36,NULL),(28205,239,36,NULL),(28206,238,36,NULL),(28207,231,36,NULL),(28208,229,36,NULL),(28209,219,36,NULL),(28210,217,36,NULL),(28211,209,36,NULL),(28212,205,36,NULL),(28213,202,36,NULL),(28214,200,36,NULL),(28215,172,36,NULL),(28216,169,36,NULL),(28217,168,36,NULL),(28218,167,36,NULL),(28219,164,36,NULL),(28220,162,36,NULL),(28221,152,36,NULL),(28222,151,36,NULL),(28223,141,36,NULL),(28224,137,36,NULL),(28225,136,36,NULL),(28226,134,36,NULL),(28227,125,36,NULL),(28228,122,36,NULL),(28229,121,36,NULL),(28230,119,36,NULL),(28231,118,36,NULL),(28232,108,36,NULL),(28233,107,36,NULL),(28234,106,36,NULL),(28235,105,36,NULL),(28236,104,36,NULL),(28237,103,36,NULL),(28238,102,36,NULL),(28239,88,36,NULL),(28240,83,36,NULL),(28241,78,36,NULL),(28242,76,36,NULL),(28243,75,36,NULL),(28244,74,36,NULL),(28245,73,36,NULL),(28246,72,36,NULL),(28247,70,36,NULL),(28248,69,36,NULL),(28249,66,36,NULL),(28250,61,36,NULL),(28251,59,36,NULL),(28252,58,36,NULL),(28253,57,36,NULL),(28254,56,36,NULL),(28255,54,36,NULL),(28256,53,36,NULL),(28257,51,36,NULL),(28258,50,36,NULL),(28259,48,36,NULL),(28260,46,36,NULL),(28261,41,36,NULL),(28262,39,36,NULL),(28263,38,36,NULL),(28264,35,36,NULL),(28265,34,36,NULL),(28266,32,36,NULL),(28267,28,36,NULL),(28268,27,36,NULL),(28269,26,36,NULL),(28270,22,36,NULL),(28271,21,36,NULL),(28272,20,36,NULL),(28273,14,36,NULL),(28274,13,36,NULL),(28275,11,36,NULL),(28276,9,36,NULL),(28277,8,36,NULL),(28278,7,36,NULL),(28279,4,36,NULL),(28280,3,36,NULL),(28281,1,36,NULL),(28282,16620,229,NULL),(28283,16595,229,NULL),(28284,16579,229,NULL),(28285,16596,229,NULL),(28286,16560,229,NULL),(28287,16556,229,NULL),(28288,16570,229,NULL),(28289,16574,229,NULL),(28290,16535,229,NULL),(28291,3402,229,NULL),(28292,3392,229,NULL),(28293,3407,229,NULL),(28294,3370,229,NULL),(28295,3345,229,NULL),(28296,3360,229,NULL),(28297,3300,229,NULL),(28298,3264,229,NULL),(28299,3295,229,NULL),(28300,3194,229,NULL),(28301,3151,229,NULL),(28302,3110,229,NULL),(28303,3046,229,NULL),(28304,3005,229,NULL),(28305,2894,229,NULL),(28306,2710,229,NULL),(28307,2656,229,NULL),(28308,2706,229,NULL),(28309,2652,229,NULL),(28310,2574,229,NULL),(28311,2595,229,NULL),(28312,2579,229,NULL),(28313,2554,229,NULL),(28314,2535,229,NULL),(28315,2529,229,NULL),(28316,2506,229,NULL),(28317,2490,229,NULL),(28318,2460,229,NULL),(28319,2441,229,NULL),(28320,2427,229,NULL),(28321,2396,229,NULL),(28322,2300,229,NULL),(28323,2235,229,NULL),(28324,2220,229,NULL),(28325,2206,229,NULL),(28326,2185,229,NULL),(28327,2124,229,NULL),(28328,2089,229,NULL),(28329,2006,229,NULL),(28330,1961,229,NULL),(28331,1952,229,NULL),(28332,1929,229,NULL),(28333,1941,229,NULL),(28334,1920,229,NULL),(28335,1913,229,NULL),(28336,1876,229,NULL),(28337,1859,229,NULL),(28338,1832,229,NULL),(28339,1800,229,NULL),(28340,1768,229,NULL),(28341,1780,229,NULL),(28342,1752,229,NULL),(28343,1748,229,NULL),(28344,1679,229,NULL),(28345,1672,229,NULL),(28346,1572,229,NULL),(28347,1539,229,NULL),(28348,1512,229,NULL),(28349,1486,229,NULL),(28350,1480,229,NULL),(28351,1470,229,NULL),(28352,1464,229,NULL),(28353,1456,229,NULL),(28354,1423,229,NULL),(28355,1431,229,NULL),(28356,1394,229,NULL),(28357,1365,229,NULL),(28358,1351,229,NULL),(28359,1346,229,NULL),(28360,1342,229,NULL),(28361,1304,229,NULL),(28362,2215,229,NULL),(28363,1260,229,NULL),(28364,1252,229,NULL),(28365,1094,229,NULL),(28366,1051,229,NULL),(28367,1018,229,NULL),(28368,1005,229,NULL),(28369,977,229,NULL),(28370,509,229,NULL),(28371,961,229,NULL),(28372,941,229,NULL),(28373,912,229,NULL),(28374,905,229,NULL),(28375,896,229,NULL),(28376,881,229,NULL),(28377,867,229,NULL),(28378,848,229,NULL),(28379,832,229,NULL),(28380,796,229,NULL),(28381,704,229,NULL),(28382,766,229,NULL),(28383,709,229,NULL),(28384,713,229,NULL),(28385,693,229,NULL),(28386,665,229,NULL),(28387,645,229,NULL),(28388,643,229,NULL),(28389,633,229,NULL),(28390,628,229,NULL),(28391,575,229,NULL),(28392,566,229,NULL),(28393,561,229,NULL),(28394,560,229,NULL),(28395,540,229,NULL),(28396,485,229,NULL),(28397,448,229,NULL),(28398,414,229,NULL),(28399,405,229,NULL),(28400,392,229,NULL),(28401,374,229,NULL),(28402,367,229,NULL),(28403,349,229,NULL),(28404,345,229,NULL),(28405,344,229,NULL),(28406,342,229,NULL),(28407,338,229,NULL),(28408,287,229,NULL),(28409,283,229,NULL),(28410,278,229,NULL),(28411,274,229,NULL),(28412,268,229,NULL),(28413,260,229,NULL),(28414,258,229,NULL),(28415,238,229,NULL),(28416,231,229,NULL),(28417,219,229,NULL),(28418,217,229,NULL),(28419,215,229,NULL),(28420,209,229,NULL),(28421,204,229,NULL),(28422,202,229,NULL),(28423,191,229,NULL),(28424,190,229,NULL),(28425,189,229,NULL),(28426,172,229,NULL),(28427,169,229,NULL),(28428,167,229,NULL),(28429,164,229,NULL),(28430,162,229,NULL),(28431,153,229,NULL),(28432,151,229,NULL),(28433,137,229,NULL),(28434,136,229,NULL),(28435,125,229,NULL),(28436,121,229,NULL),(28437,75,229,NULL),(28438,74,229,NULL),(28439,66,229,NULL),(28440,58,229,NULL),(28441,55,229,NULL),(28442,53,229,NULL),(28443,50,229,NULL),(28444,48,229,NULL),(28445,35,229,NULL),(28446,34,229,NULL),(28447,33,229,NULL),(28448,29,229,NULL),(28449,28,229,NULL),(28450,9,229,NULL),(28451,7,229,NULL),(28452,4,229,NULL),(28453,1,229,NULL),(28454,1343,188,NULL),(28455,441,188,NULL),(28456,287,188,NULL),(28457,283,188,NULL),(28458,279,188,NULL),(28459,217,188,NULL),(28460,189,188,NULL),(28461,121,188,NULL),(28462,26,188,NULL),(28463,4,188,NULL),(28464,2,188,NULL),(28465,1,188,NULL),(28466,704,202,NULL),(28467,35,202,NULL),(28468,1,202,NULL),(28469,16634,122,NULL),(28470,16574,122,NULL),(28471,3392,122,NULL),(28472,3396,122,NULL),(28473,3375,122,NULL),(28474,3289,122,NULL),(28475,3274,122,NULL),(28476,3272,122,NULL),(28477,3232,122,NULL),(28478,3191,122,NULL),(28479,3206,122,NULL),(28480,3174,122,NULL),(28481,3162,122,NULL),(28482,3169,122,NULL),(28483,3151,122,NULL),(28484,3110,122,NULL),(28485,3108,122,NULL),(28486,3000,122,NULL),(28487,2999,122,NULL),(28488,2962,122,NULL),(28489,2929,122,NULL),(28490,2873,122,NULL),(28491,2874,122,NULL),(28492,2843,122,NULL),(28493,2789,122,NULL),(28494,2769,122,NULL),(28495,2563,122,NULL),(28496,2560,122,NULL),(28497,2551,122,NULL),(28498,2554,122,NULL),(28499,2540,122,NULL),(28500,2529,122,NULL),(28501,2523,122,NULL),(28502,2469,122,NULL),(28503,2410,122,NULL),(28504,2390,122,NULL),(28505,2379,122,NULL),(28506,2335,122,NULL),(28507,2302,122,NULL),(28508,2300,122,NULL),(28509,2293,122,NULL),(28510,2260,122,NULL),(28511,2249,122,NULL),(28512,2206,122,NULL),(28513,2154,122,NULL),(28514,2140,122,NULL),(28515,2109,122,NULL),(28516,2115,122,NULL),(28517,2071,122,NULL),(28518,2033,122,NULL),(28519,2000,122,NULL),(28520,1863,122,NULL),(28521,1837,122,NULL),(28522,1832,122,NULL),(28523,1812,122,NULL),(28524,1768,122,NULL),(28525,1749,122,NULL),(28526,1725,122,NULL),(28527,1732,122,NULL),(28528,1704,122,NULL),(28529,1679,122,NULL),(28530,1652,122,NULL),(28531,1614,122,NULL),(28532,1539,122,NULL),(28533,1524,122,NULL),(28534,1480,122,NULL),(28535,1422,122,NULL),(28536,1431,122,NULL),(28537,1394,122,NULL),(28538,1351,122,NULL),(28539,1346,122,NULL),(28540,1358,122,NULL),(28541,1295,122,NULL),(28542,2215,122,NULL),(28543,1260,122,NULL),(28544,2226,122,NULL),(28545,1207,122,NULL),(28546,1360,122,NULL),(28547,1137,122,NULL),(28548,1128,122,NULL),(28549,1123,122,NULL),(28550,1071,122,NULL),(28551,1051,122,NULL),(28552,1007,122,NULL),(28553,1006,122,NULL),(28554,1005,122,NULL),(28555,1002,122,NULL),(28556,999,122,NULL),(28557,509,122,NULL),(28558,933,122,NULL),(28559,888,122,NULL),(28560,877,122,NULL),(28561,875,122,NULL),(28562,872,122,NULL),(28563,867,122,NULL),(28564,838,122,NULL),(28565,832,122,NULL),(28566,796,122,NULL),(28567,790,122,NULL),(28568,704,122,NULL),(28569,700,122,NULL),(28570,766,122,NULL),(28571,763,122,NULL),(28572,746,122,NULL),(28573,709,122,NULL),(28574,739,122,NULL),(28575,724,122,NULL),(28576,657,122,NULL),(28577,643,122,NULL),(28578,605,122,NULL),(28579,566,122,NULL),(28580,563,122,NULL),(28581,500,122,NULL),(28582,467,122,NULL),(28583,455,122,NULL),(28584,448,122,NULL),(28585,443,122,NULL),(28586,442,122,NULL),(28587,441,122,NULL),(28588,416,122,NULL),(28589,414,122,NULL),(28590,392,122,NULL),(28591,383,122,NULL),(28592,374,122,NULL),(28593,371,122,NULL),(28594,368,122,NULL),(28595,367,122,NULL),(28596,350,122,NULL),(28597,349,122,NULL),(28598,345,122,NULL),(28599,342,122,NULL),(28600,338,122,NULL),(28601,334,122,NULL),(28602,326,122,NULL),(28603,292,122,NULL),(28604,290,122,NULL),(28605,287,122,NULL),(28606,283,122,NULL),(28607,279,122,NULL),(28608,268,122,NULL),(28609,242,122,NULL),(28610,238,122,NULL),(28611,231,122,NULL),(28612,217,122,NULL),(28613,215,122,NULL),(28614,209,122,NULL),(28615,206,122,NULL),(28616,205,122,NULL),(28617,202,122,NULL),(28618,190,122,NULL),(28619,189,122,NULL),(28620,172,122,NULL),(28621,169,122,NULL),(28622,162,122,NULL),(28623,154,122,NULL),(28624,153,122,NULL),(28625,151,122,NULL),(28626,136,122,NULL),(28627,125,122,NULL),(28628,121,122,NULL),(28629,104,122,NULL),(28630,100,122,NULL),(28631,88,122,NULL),(28632,85,122,NULL),(28633,83,122,NULL),(28634,77,122,NULL),(28635,74,122,NULL),(28636,70,122,NULL),(28637,69,122,NULL),(28638,67,122,NULL),(28639,66,122,NULL),(28640,58,122,NULL),(28641,51,122,NULL),(28642,50,122,NULL),(28643,38,122,NULL),(28644,35,122,NULL),(28645,29,122,NULL),(28646,28,122,NULL),(28647,27,122,NULL),(28648,26,122,NULL),(28649,21,122,NULL),(28650,20,122,NULL),(28651,18,122,NULL),(28652,14,122,NULL),(28653,13,122,NULL),(28654,9,122,NULL),(28655,7,122,NULL),(28656,4,122,NULL),(28657,2,122,NULL),(28658,1,122,NULL),(28659,16596,244,NULL),(28660,2730,244,NULL),(28661,2461,244,NULL),(28662,1838,244,NULL),(28663,1704,244,NULL),(28664,1590,244,NULL),(28665,1539,244,NULL),(28666,1480,244,NULL),(28667,1423,244,NULL),(28668,1343,244,NULL),(28669,875,244,NULL),(28670,867,244,NULL),(28671,832,244,NULL),(28672,704,244,NULL),(28673,766,244,NULL),(28674,658,244,NULL),(28675,643,244,NULL),(28676,567,244,NULL),(28677,566,244,NULL),(28678,523,244,NULL),(28679,448,244,NULL),(28680,442,244,NULL),(28681,367,244,NULL),(28682,217,244,NULL),(28683,209,244,NULL),(28684,189,244,NULL),(28685,154,244,NULL),(28686,153,244,NULL),(28687,123,244,NULL),(28688,77,244,NULL),(28689,74,244,NULL),(28690,51,244,NULL),(28691,46,244,NULL),(28692,35,244,NULL),(28693,3,244,NULL),(28694,2,244,NULL),(28695,1,244,NULL),(28696,3356,200,NULL),(28697,3306,200,NULL),(28698,3208,200,NULL),(28699,3191,200,NULL),(28700,2965,200,NULL),(28701,2570,200,NULL),(28702,2579,200,NULL),(28703,2529,200,NULL),(28704,2523,200,NULL),(28705,2460,200,NULL),(28706,2379,200,NULL),(28707,2161,200,NULL),(28708,1980,200,NULL),(28709,1929,200,NULL),(28710,1780,200,NULL),(28711,1358,200,NULL),(28712,2226,200,NULL),(28713,961,200,NULL),(28714,704,200,NULL),(28715,441,200,NULL),(28716,279,200,NULL),(28717,268,200,NULL),(28718,189,200,NULL),(28719,123,200,NULL),(28720,121,200,NULL),(28721,58,200,NULL),(28722,35,200,NULL),(28723,27,200,NULL),(28724,26,200,NULL),(28725,21,200,NULL),(28726,16,200,NULL),(28727,1,200,NULL),(28728,16625,278,NULL),(28729,1539,278,NULL),(28730,1480,278,NULL),(28731,930,278,NULL),(28732,848,278,NULL),(28733,704,278,NULL),(28734,35,278,NULL),(28735,16595,219,NULL),(28736,3046,219,NULL),(28737,2760,219,NULL),(28738,2461,219,NULL),(28739,2011,219,NULL),(28740,1929,219,NULL),(28741,1920,219,NULL),(28742,1768,219,NULL),(28743,1539,219,NULL),(28744,1512,219,NULL),(28745,1480,219,NULL),(28746,1470,219,NULL),(28747,1260,219,NULL),(28748,977,219,NULL),(28749,867,219,NULL),(28750,832,219,NULL),(28751,704,219,NULL),(28752,766,219,NULL),(28753,697,219,NULL),(28754,566,219,NULL),(28755,561,219,NULL),(28756,442,219,NULL),(28757,441,219,NULL),(28758,374,219,NULL),(28759,287,219,NULL),(28760,217,219,NULL),(28761,209,219,NULL),(28762,189,219,NULL),(28763,169,219,NULL),(28764,121,219,NULL),(28765,88,219,NULL),(28766,69,219,NULL),(28767,35,219,NULL),(28768,33,219,NULL),(28769,28,219,NULL),(28770,27,219,NULL),(28771,26,219,NULL),(28772,9,219,NULL),(28773,1,219,NULL),(28774,16596,301,NULL),(28775,2656,301,NULL),(28776,2652,301,NULL),(28777,2574,301,NULL),(28778,2554,301,NULL),(28779,2523,301,NULL),(28780,2390,301,NULL),(28781,1929,301,NULL),(28782,1920,301,NULL),(28783,1768,301,NULL),(28784,1752,301,NULL),(28785,1732,301,NULL),(28786,1539,301,NULL),(28787,1512,301,NULL),(28788,1480,301,NULL),(28789,1470,301,NULL),(28790,1464,301,NULL),(28791,1461,301,NULL),(28792,1431,301,NULL),(28793,1342,301,NULL),(28794,1304,301,NULL),(28795,2215,301,NULL),(28796,1260,301,NULL),(28797,1207,301,NULL),(28798,1071,301,NULL),(28799,974,301,NULL),(28800,933,301,NULL),(28801,904,301,NULL),(28802,875,301,NULL),(28803,872,301,NULL),(28804,872,301,NULL),(28805,867,301,NULL),(28806,867,301,NULL),(28807,832,301,NULL),(28808,796,301,NULL),(28809,796,301,NULL),(28810,766,301,NULL),(28811,724,301,NULL),(28812,724,301,NULL),(28813,693,301,NULL),(28814,693,301,NULL),(28815,643,301,NULL),(28816,605,301,NULL),(28817,566,301,NULL),(28818,566,301,NULL),(28819,542,301,NULL),(28820,542,301,NULL),(28821,448,301,NULL),(28822,443,301,NULL),(28823,443,301,NULL),(28824,442,301,NULL),(28825,442,301,NULL),(28826,412,301,NULL),(28827,392,301,NULL),(28828,383,301,NULL),(28829,374,301,NULL),(28830,374,301,NULL),(28831,345,301,NULL),(28832,334,301,NULL),(28833,290,301,NULL),(28834,283,301,NULL),(28835,238,301,NULL),(28836,238,301,NULL),(28837,228,301,NULL),(28838,228,301,NULL),(28839,206,301,NULL),(28840,205,301,NULL),(28841,205,301,NULL),(28842,189,301,NULL),(28843,189,301,NULL),(28844,169,301,NULL),(28845,164,301,NULL),(28846,153,301,NULL),(28847,151,301,NULL),(28848,151,301,NULL),(28849,122,301,NULL),(28850,121,301,NULL),(28851,104,301,NULL),(28852,88,301,NULL),(28853,80,301,NULL),(28854,80,301,NULL),(28855,77,301,NULL),(28856,74,301,NULL),(28857,69,301,NULL),(28858,58,301,NULL),(28859,58,301,NULL),(28860,54,301,NULL),(28861,53,301,NULL),(28862,53,301,NULL),(28863,35,301,NULL),(28864,33,301,NULL),(28865,33,301,NULL),(28866,33,301,NULL),(28867,27,301,NULL),(28868,26,301,NULL),(28869,26,301,NULL),(28870,26,301,NULL),(28871,14,301,NULL),(28872,14,301,NULL),(28873,14,301,NULL),(28874,13,301,NULL),(28875,13,301,NULL),(28876,13,301,NULL),(28877,11,301,NULL),(28878,9,301,NULL),(28879,4,301,NULL),(28880,4,301,NULL),(28881,3,301,NULL),(28882,2,301,NULL),(28883,2,301,NULL),(28884,1,301,NULL),(28885,2617,285,NULL),(28886,2206,285,NULL),(28887,1838,285,NULL),(28888,1539,285,NULL),(28889,1480,285,NULL),(28890,1423,285,NULL),(28891,1295,285,NULL),(28892,704,285,NULL),(28893,658,285,NULL),(28894,441,285,NULL),(28895,414,285,NULL),(28896,374,285,NULL),(28897,349,285,NULL),(28898,345,285,NULL),(28899,279,285,NULL),(28900,268,285,NULL),(28901,209,285,NULL),(28902,153,285,NULL),(28903,125,285,NULL),(28904,69,285,NULL),(28905,65,285,NULL),(28906,41,285,NULL),(28907,35,285,NULL),(28908,33,285,NULL),(28909,27,285,NULL),(28910,26,285,NULL),(28911,9,285,NULL),(28912,2,285,NULL),(28913,1,285,NULL),(28914,2390,290,NULL),(28915,2091,290,NULL),(28916,1859,290,NULL),(28917,1832,290,NULL),(28918,1800,290,NULL),(28919,1768,290,NULL),(28920,1732,290,NULL),(28921,1679,290,NULL),(28922,1672,290,NULL),(28923,1572,290,NULL),(28924,1539,290,NULL),(28925,1480,290,NULL),(28926,1493,290,NULL),(28927,1456,290,NULL),(28928,1431,290,NULL),(28929,1252,290,NULL),(28930,1071,290,NULL),(28931,1004,290,NULL),(28932,933,290,NULL),(28933,867,290,NULL),(28934,832,290,NULL),(28935,796,290,NULL),(28936,735,290,NULL),(28937,724,290,NULL),(28938,643,290,NULL),(28939,605,290,NULL),(28940,443,290,NULL),(28941,394,290,NULL),(28942,392,290,NULL),(28943,387,290,NULL),(28944,383,290,NULL),(28945,345,290,NULL),(28946,344,290,NULL),(28947,334,290,NULL),(28948,290,290,NULL),(28949,283,290,NULL),(28950,242,290,NULL),(28951,238,290,NULL),(28952,228,290,NULL),(28953,219,290,NULL),(28954,209,290,NULL),(28955,205,290,NULL),(28956,202,290,NULL),(28957,189,290,NULL),(28958,169,290,NULL),(28959,167,290,NULL),(28960,153,290,NULL),(28961,151,290,NULL),(28962,125,290,NULL),(28963,121,290,NULL),(28964,88,290,NULL),(28965,80,290,NULL),(28966,74,290,NULL),(28967,58,290,NULL),(28968,55,290,NULL),(28969,54,290,NULL),(28970,28,290,NULL),(28971,27,290,NULL),(28972,26,290,NULL),(28973,21,290,NULL),(28974,20,290,NULL),(28975,15,290,NULL),(28976,14,290,NULL),(28977,13,290,NULL),(28978,12,290,NULL),(28979,11,290,NULL),(28980,9,290,NULL),(28981,6,290,NULL),(28982,3,290,NULL),(28983,1,290,NULL),(28984,16645,299,NULL),(28985,16550,299,NULL),(28986,3411,299,NULL),(28987,3407,299,NULL),(28988,3355,299,NULL),(28989,3412,299,NULL),(28990,3345,299,NULL),(28991,3300,299,NULL),(28992,3304,299,NULL),(28993,3285,299,NULL),(28994,3289,299,NULL),(28995,3309,299,NULL),(28996,3270,299,NULL),(28997,3280,299,NULL),(28998,3324,299,NULL),(28999,3264,299,NULL),(29000,3274,299,NULL),(29001,3258,299,NULL),(29002,3295,299,NULL),(29003,3271,299,NULL),(29004,3208,299,NULL),(29005,3190,299,NULL),(29006,3194,299,NULL),(29007,3210,299,NULL),(29008,3223,299,NULL),(29009,3162,299,NULL),(29010,3151,299,NULL),(29011,3146,299,NULL),(29012,3120,299,NULL),(29013,3121,299,NULL),(29014,3136,299,NULL),(29015,3110,299,NULL),(29016,3099,299,NULL),(29017,3100,299,NULL),(29018,3074,299,NULL),(29019,3042,299,NULL),(29020,3014,299,NULL),(29021,2997,299,NULL),(29022,2951,299,NULL),(29023,2894,299,NULL),(29024,2859,299,NULL),(29025,2824,299,NULL),(29026,2785,299,NULL),(29027,2810,299,NULL),(29028,2769,299,NULL),(29029,2696,299,NULL),(29030,2657,299,NULL),(29031,2658,299,NULL),(29032,2652,299,NULL),(29033,2678,299,NULL),(29034,2610,299,NULL),(29035,2559,299,NULL),(29036,2661,299,NULL),(29037,2608,299,NULL),(29038,2594,299,NULL),(29039,2595,299,NULL),(29040,2579,299,NULL),(29041,2545,299,NULL),(29042,2537,299,NULL),(29043,2535,299,NULL),(29044,2520,299,NULL),(29045,2469,299,NULL),(29046,2461,299,NULL),(29047,2441,299,NULL),(29048,2433,299,NULL),(29049,2429,299,NULL),(29050,2418,299,NULL),(29051,2410,299,NULL),(29052,2413,299,NULL),(29053,2405,299,NULL),(29054,2396,299,NULL),(29055,2395,299,NULL),(29056,2381,299,NULL),(29057,2379,299,NULL),(29058,2374,299,NULL),(29059,2367,299,NULL),(29060,2360,299,NULL),(29061,2359,299,NULL),(29062,2320,299,NULL),(29063,2235,299,NULL),(29064,2270,299,NULL),(29065,2240,299,NULL),(29066,2239,299,NULL),(29067,2257,299,NULL),(29068,2260,299,NULL),(29069,2220,299,NULL),(29070,2185,299,NULL),(29071,2177,299,NULL),(29072,2149,299,NULL),(29073,2161,299,NULL),(29074,2140,299,NULL),(29075,2134,299,NULL),(29076,2125,299,NULL),(29077,2119,299,NULL),(29078,2109,299,NULL),(29079,2106,299,NULL),(29080,2095,299,NULL),(29081,2078,299,NULL),(29082,2044,299,NULL),(29083,2053,299,NULL),(29084,2011,299,NULL),(29085,2000,299,NULL),(29086,1980,299,NULL),(29087,1979,299,NULL),(29088,1945,299,NULL),(29089,1930,299,NULL),(29090,1929,299,NULL),(29091,1901,299,NULL),(29092,1910,299,NULL),(29093,1894,299,NULL),(29094,1863,299,NULL),(29095,1876,299,NULL),(29096,1832,299,NULL),(29097,1800,299,NULL),(29098,1769,299,NULL),(29099,1768,299,NULL),(29100,1780,299,NULL),(29101,1732,299,NULL),(29102,1704,299,NULL),(29103,1689,299,NULL),(29104,1688,299,NULL),(29105,1678,299,NULL),(29106,1684,299,NULL),(29107,1647,299,NULL),(29108,1669,299,NULL),(29109,1572,299,NULL),(29110,1528,299,NULL),(29111,1518,299,NULL),(29112,1512,299,NULL),(29113,1487,299,NULL),(29114,1492,299,NULL),(29115,1470,299,NULL),(29116,1456,299,NULL),(29117,1455,299,NULL),(29118,1463,299,NULL),(29119,1460,299,NULL),(29120,1422,299,NULL),(29121,1431,299,NULL),(29122,1408,299,NULL),(29123,1404,299,NULL),(29124,1415,299,NULL),(29125,1400,299,NULL),(29126,1399,299,NULL),(29127,1380,299,NULL),(29128,1351,299,NULL),(29129,1334,299,NULL),(29130,1343,299,NULL),(29131,1342,299,NULL),(29132,1293,299,NULL),(29133,1248,299,NULL),(29134,1239,299,NULL),(29135,1221,299,NULL),(29136,2079,299,NULL),(29137,1202,299,NULL),(29138,1192,299,NULL),(29139,1143,299,NULL),(29140,1289,299,NULL),(29141,1109,299,NULL),(29142,1108,299,NULL),(29143,1094,299,NULL),(29144,1091,299,NULL),(29145,1038,299,NULL),(29146,1029,299,NULL),(29147,1014,299,NULL),(29148,1011,299,NULL),(29149,1002,299,NULL),(29150,994,299,NULL),(29151,980,299,NULL),(29152,978,299,NULL),(29153,977,299,NULL),(29154,509,299,NULL),(29155,962,299,NULL),(29156,931,299,NULL),(29157,930,299,NULL),(29158,921,299,NULL),(29159,916,299,NULL),(29160,904,299,NULL),(29161,890,299,NULL),(29162,884,299,NULL),(29163,881,299,NULL),(29164,877,299,NULL),(29165,876,299,NULL),(29166,875,299,NULL),(29167,872,299,NULL),(29168,860,299,NULL),(29169,852,299,NULL),(29170,848,299,NULL),(29171,846,299,NULL),(29172,832,299,NULL),(29173,824,299,NULL),(29174,796,299,NULL),(29175,791,299,NULL),(29176,787,299,NULL),(29177,785,299,NULL),(29178,784,299,NULL),(29179,704,299,NULL),(29180,771,299,NULL),(29181,589,299,NULL),(29182,762,299,NULL),(29183,709,299,NULL),(29184,712,299,NULL),(29185,693,299,NULL),(29186,692,299,NULL),(29187,670,299,NULL),(29188,646,299,NULL),(29189,643,299,NULL),(29190,561,299,NULL),(29191,560,299,NULL),(29192,557,299,NULL),(29193,539,299,NULL),(29194,538,299,NULL),(29195,523,299,NULL),(29196,520,299,NULL),(29197,516,299,NULL),(29198,507,299,NULL),(29199,506,299,NULL),(29200,494,299,NULL),(29201,476,299,NULL),(29202,455,299,NULL),(29203,451,299,NULL),(29204,443,299,NULL),(29205,442,299,NULL),(29206,441,299,NULL),(29207,438,299,NULL),(29208,417,299,NULL),(29209,416,299,NULL),(29210,413,299,NULL),(29211,410,299,NULL),(29212,409,299,NULL),(29213,392,299,NULL),(29214,389,299,NULL),(29215,387,299,NULL),(29216,386,299,NULL),(29217,378,299,NULL),(29218,374,299,NULL),(29219,367,299,NULL),(29220,350,299,NULL),(29221,349,299,NULL),(29222,347,299,NULL),(29223,345,299,NULL),(29224,344,299,NULL),(29225,342,299,NULL),(29226,338,299,NULL),(29227,326,299,NULL),(29228,322,299,NULL),(29229,318,299,NULL),(29230,300,299,NULL),(29231,287,299,NULL),(29232,283,299,NULL),(29233,274,299,NULL),(29234,268,299,NULL),(29235,263,299,NULL),(29236,260,299,NULL),(29237,258,299,NULL),(29238,238,299,NULL),(29239,237,299,NULL),(29240,234,299,NULL),(29241,231,299,NULL),(29242,230,299,NULL),(29243,229,299,NULL),(29244,217,299,NULL),(29245,215,299,NULL),(29246,209,299,NULL),(29247,207,299,NULL),(29248,206,299,NULL),(29249,204,299,NULL),(29250,200,299,NULL),(29251,198,299,NULL),(29252,191,299,NULL),(29253,190,299,NULL),(29254,189,299,NULL),(29255,172,299,NULL),(29256,169,299,NULL),(29257,165,299,NULL),(29258,164,299,NULL),(29259,162,299,NULL),(29260,154,299,NULL),(29261,153,299,NULL),(29262,151,299,NULL),(29263,144,299,NULL),(29264,137,299,NULL),(29265,136,299,NULL),(29266,134,299,NULL),(29267,130,299,NULL),(29268,128,299,NULL),(29269,125,299,NULL),(29270,122,299,NULL),(29271,121,299,NULL),(29272,120,299,NULL),(29273,115,299,NULL),(29274,112,299,NULL),(29275,104,299,NULL),(29276,102,299,NULL),(29277,98,299,NULL),(29278,94,299,NULL),(29279,92,299,NULL),(29280,90,299,NULL),(29281,88,299,NULL),(29282,85,299,NULL),(29283,84,299,NULL),(29284,81,299,NULL),(29285,80,299,NULL),(29286,78,299,NULL),(29287,77,299,NULL),(29288,75,299,NULL),(29289,74,299,NULL),(29290,73,299,NULL),(29291,72,299,NULL),(29292,70,299,NULL),(29293,69,299,NULL),(29294,67,299,NULL),(29295,66,299,NULL),(29296,64,299,NULL),(29297,63,299,NULL),(29298,62,299,NULL),(29299,61,299,NULL),(29300,60,299,NULL),(29301,58,299,NULL),(29302,57,299,NULL),(29303,56,299,NULL),(29304,55,299,NULL),(29305,54,299,NULL),(29306,53,299,NULL),(29307,49,299,NULL),(29308,48,299,NULL),(29309,47,299,NULL),(29310,46,299,NULL),(29311,45,299,NULL),(29312,43,299,NULL),(29313,42,299,NULL),(29314,41,299,NULL),(29315,40,299,NULL),(29316,39,299,NULL),(29317,38,299,NULL),(29318,36,299,NULL),(29319,35,299,NULL),(29320,34,299,NULL),(29321,33,299,NULL),(29322,32,299,NULL),(29323,28,299,NULL),(29324,27,299,NULL),(29325,26,299,NULL),(29326,22,299,NULL),(29327,20,299,NULL),(29328,19,299,NULL),(29329,17,299,NULL),(29330,14,299,NULL),(29331,12,299,NULL),(29332,11,299,NULL),(29333,9,299,NULL),(29334,8,299,NULL),(29335,7,299,NULL),(29336,5,299,NULL),(29337,4,299,NULL),(29338,3,299,NULL),(29339,2,299,NULL),(29340,1,299,NULL),(29341,3532,299,NULL),(29342,3635,299,NULL),(29343,3436,299,NULL),(29344,3503,299,NULL),(29345,3466,299,NULL),(29346,3531,299,NULL),(29347,3556,299,NULL),(29348,3509,299,NULL),(29349,3585,299,NULL),(29350,3486,299,NULL),(29351,3593,299,NULL),(29352,4167,299,NULL),(29353,3476,299,NULL),(29354,3918,299,NULL),(29355,4047,299,NULL),(29356,3445,299,NULL),(29357,3418,299,NULL),(29358,3424,299,NULL),(29359,3712,299,NULL),(29360,3416,299,NULL),(29361,3487,299,NULL),(29362,4529,299,NULL),(29363,3837,299,NULL),(29364,4150,299,NULL),(29365,3437,299,NULL),(29366,3760,299,NULL),(29367,3676,299,NULL),(29368,3578,299,NULL),(29369,3481,299,NULL),(29370,3440,299,NULL),(29371,3425,299,NULL),(29372,3647,299,NULL),(29373,3759,299,NULL),(29374,3960,299,NULL),(29375,4773,299,NULL),(29376,3478,299,NULL),(29377,4507,299,NULL),(29378,3488,299,NULL),(29379,3653,299,NULL),(29380,3613,299,NULL),(29381,3514,299,NULL),(29382,3517,299,NULL),(29383,3441,299,NULL),(29384,4646,299,NULL),(29385,4089,299,NULL),(29386,4159,299,NULL),(29387,4224,299,NULL),(29388,4753,299,NULL),(29389,3499,299,NULL),(29390,4769,299,NULL),(29391,3956,299,NULL),(29392,4409,299,NULL),(29393,4393,299,NULL),(29394,5641,299,NULL),(29395,3999,299,NULL),(29396,4122,299,NULL),(29397,5114,299,NULL),(29398,4484,299,NULL),(29399,4398,299,NULL),(29400,3664,299,NULL),(29401,3802,299,NULL),(29402,4012,299,NULL),(29403,4242,299,NULL),(29404,5972,299,NULL),(29405,4055,299,NULL),(29406,3468,299,NULL),(29407,3417,299,NULL),(29408,4663,299,NULL),(29409,3453,299,NULL),(29410,3419,299,NULL),(29411,3473,299,NULL),(29412,3510,299,NULL),(29413,4920,299,NULL),(29414,5474,299,NULL),(29415,3621,299,NULL),(29416,3472,299,NULL),(29417,5182,299,NULL),(29418,5256,299,NULL),(29419,6027,299,NULL),(29420,5768,299,NULL),(29421,4210,299,NULL),(29422,4161,299,NULL),(29423,4113,299,NULL),(29424,4587,299,NULL),(29425,3435,299,NULL),(29426,3446,299,NULL),(29427,3830,299,NULL),(29428,5009,299,NULL),(29429,4649,299,NULL),(29430,4612,299,NULL),(29431,3695,299,NULL),(29432,4032,299,NULL),(29433,3833,299,NULL),(29434,4074,299,NULL),(29435,4941,299,NULL),(29436,4170,299,NULL),(29437,4423,299,NULL),(29438,4217,299,NULL),(29439,3948,299,NULL),(29440,3443,299,NULL),(29441,4582,299,NULL),(29442,3763,299,NULL),(29443,4441,299,NULL),(29444,4620,299,NULL),(29445,4588,299,NULL),(29446,4933,299,NULL),(29447,13547,299,NULL),(29448,9807,299,NULL),(29449,12269,299,NULL),(29450,2730,283,NULL),(29451,2537,283,NULL),(29452,2461,283,NULL),(29453,2121,283,NULL),(29454,1838,283,NULL),(29455,1590,283,NULL),(29456,1423,283,NULL),(29457,1343,283,NULL),(29458,1260,283,NULL),(29459,875,283,NULL),(29460,867,283,NULL),(29461,832,283,NULL),(29462,704,283,NULL),(29463,766,283,NULL),(29464,689,283,NULL),(29465,658,283,NULL),(29466,643,283,NULL),(29467,567,283,NULL),(29468,566,283,NULL),(29469,523,283,NULL),(29470,448,283,NULL),(29471,442,283,NULL),(29472,374,283,NULL),(29473,279,283,NULL),(29474,209,283,NULL),(29475,189,283,NULL),(29476,154,283,NULL),(29477,153,283,NULL),(29478,123,283,NULL),(29479,81,283,NULL),(29480,74,283,NULL),(29481,69,283,NULL),(29482,33,283,NULL),(29483,1,283,NULL),(29484,3559,289,NULL),(29485,3416,289,NULL),(29486,3767,289,NULL),(29487,3455,289,NULL),(29488,3446,289,NULL),(29489,3459,289,NULL),(29490,3457,289,NULL),(29491,16595,209,NULL),(29492,3356,209,NULL),(29493,3345,209,NULL),(29494,3360,209,NULL),(29495,3300,209,NULL),(29496,3289,209,NULL),(29497,3264,209,NULL),(29498,3232,209,NULL),(29499,3208,209,NULL),(29500,3190,209,NULL),(29501,3191,209,NULL),(29502,3194,209,NULL),(29503,3178,209,NULL),(29504,3174,209,NULL),(29505,3169,209,NULL),(29506,3158,209,NULL),(29507,3184,209,NULL),(29508,3142,209,NULL),(29509,3099,209,NULL),(29510,3024,209,NULL),(29511,3005,209,NULL),(29512,2965,209,NULL),(29513,2951,209,NULL),(29514,2960,209,NULL),(29515,2956,209,NULL),(29516,2894,209,NULL),(29517,2843,209,NULL),(29518,2824,209,NULL),(29519,2798,209,NULL),(29520,2762,209,NULL),(29521,2778,209,NULL),(29522,2733,209,NULL),(29523,2729,209,NULL),(29524,2769,209,NULL),(29525,2670,209,NULL),(29526,2656,209,NULL),(29527,2706,209,NULL),(29528,2652,209,NULL),(29529,2574,209,NULL),(29530,2562,209,NULL),(29531,2593,209,NULL),(29532,2644,209,NULL),(29533,2558,209,NULL),(29534,2594,209,NULL),(29535,2595,209,NULL),(29536,2578,209,NULL),(29537,2579,209,NULL),(29538,2554,209,NULL),(29539,2553,209,NULL),(29540,2540,209,NULL),(29541,2544,209,NULL),(29542,2537,209,NULL),(29543,2535,209,NULL),(29544,2529,209,NULL),(29545,2523,209,NULL),(29546,2520,209,NULL),(29547,2506,209,NULL),(29548,2490,209,NULL),(29549,2485,209,NULL),(29550,2475,209,NULL),(29551,2461,209,NULL),(29552,2455,209,NULL),(29553,2441,209,NULL),(29554,2427,209,NULL),(29555,2413,209,NULL),(29556,2404,209,NULL),(29557,2401,209,NULL),(29558,2390,209,NULL),(29559,2379,209,NULL),(29560,2352,209,NULL),(29561,2335,209,NULL),(29562,2302,209,NULL),(29563,2300,209,NULL),(29564,2235,209,NULL),(29565,2283,209,NULL),(29566,2239,209,NULL),(29567,2260,209,NULL),(29568,2231,209,NULL),(29569,2220,209,NULL),(29570,2206,209,NULL),(29571,2180,209,NULL),(29572,2154,209,NULL),(29573,2161,209,NULL),(29574,2140,209,NULL),(29575,2144,209,NULL),(29576,2130,209,NULL),(29577,2115,209,NULL),(29578,2095,209,NULL),(29579,2078,209,NULL),(29580,2057,209,NULL),(29581,2033,209,NULL),(29582,2037,209,NULL),(29583,2016,209,NULL),(29584,1995,209,NULL),(29585,1952,209,NULL),(29586,1929,209,NULL),(29587,1920,209,NULL),(29588,1909,209,NULL),(29589,1859,209,NULL),(29590,1838,209,NULL),(29591,1832,209,NULL),(29592,1822,209,NULL),(29593,1768,209,NULL),(29594,1780,209,NULL),(29595,1752,209,NULL),(29596,1748,209,NULL),(29597,1742,209,NULL),(29598,1725,209,NULL),(29599,1732,209,NULL),(29600,1688,209,NULL),(29601,1679,209,NULL),(29602,1672,209,NULL),(29603,1657,209,NULL),(29604,1652,209,NULL),(29605,1572,209,NULL),(29606,1539,209,NULL),(29607,1512,209,NULL),(29608,1524,209,NULL),(29609,1523,209,NULL),(29610,1497,209,NULL),(29611,1486,209,NULL),(29612,1480,209,NULL),(29613,1493,209,NULL),(29614,1491,209,NULL),(29615,1470,209,NULL),(29616,1464,209,NULL),(29617,1456,209,NULL),(29618,1450,209,NULL),(29619,1423,209,NULL),(29620,1431,209,NULL),(29621,1394,209,NULL),(29622,1389,209,NULL),(29623,1365,209,NULL),(29624,1351,209,NULL),(29625,1346,209,NULL),(29626,1358,209,NULL),(29627,1323,209,NULL),(29628,1343,209,NULL),(29629,1342,209,NULL),(29630,1304,209,NULL),(29631,1295,209,NULL),(29632,1281,209,NULL),(29633,2215,209,NULL),(29634,1260,209,NULL),(29635,1252,209,NULL),(29636,2226,209,NULL),(29637,1207,209,NULL),(29638,1550,209,NULL),(29639,1185,209,NULL),(29640,1184,209,NULL),(29641,1390,209,NULL),(29642,1331,209,NULL),(29643,1137,209,NULL),(29644,1299,209,NULL),(29645,1089,209,NULL),(29646,1071,209,NULL),(29647,1005,209,NULL),(29648,1004,209,NULL),(29649,977,209,NULL),(29650,976,209,NULL),(29651,962,209,NULL),(29652,933,209,NULL),(29653,907,209,NULL),(29654,904,209,NULL),(29655,901,209,NULL),(29656,896,209,NULL),(29657,875,209,NULL),(29658,867,209,NULL),(29659,836,209,NULL),(29660,796,209,NULL),(29661,790,209,NULL),(29662,704,209,NULL),(29663,766,209,NULL),(29664,747,209,NULL),(29665,746,209,NULL),(29666,739,209,NULL),(29667,735,209,NULL),(29668,728,209,NULL),(29669,724,209,NULL),(29670,713,209,NULL),(29671,693,209,NULL),(29672,658,209,NULL),(29673,649,209,NULL),(29674,643,209,NULL),(29675,628,209,NULL),(29676,624,209,NULL),(29677,605,209,NULL),(29678,575,209,NULL),(29679,566,209,NULL),(29680,561,209,NULL),(29681,507,209,NULL),(29682,496,209,NULL),(29683,485,209,NULL),(29684,476,209,NULL),(29685,452,209,NULL),(29686,448,209,NULL),(29687,443,209,NULL),(29688,442,209,NULL),(29689,441,209,NULL),(29690,435,209,NULL),(29691,414,209,NULL),(29692,412,209,NULL),(29693,405,209,NULL),(29694,394,209,NULL),(29695,392,209,NULL),(29696,389,209,NULL),(29697,383,209,NULL),(29698,374,209,NULL),(29699,367,209,NULL),(29700,349,209,NULL),(29701,345,209,NULL),(29702,344,209,NULL),(29703,342,209,NULL),(29704,338,209,NULL),(29705,334,209,NULL),(29706,328,209,NULL),(29707,322,209,NULL),(29708,319,209,NULL),(29709,303,209,NULL),(29710,290,209,NULL),(29711,283,209,NULL),(29712,268,209,NULL),(29713,263,209,NULL),(29714,258,209,NULL),(29715,242,209,NULL),(29716,238,209,NULL),(29717,233,209,NULL),(29718,231,209,NULL),(29719,223,209,NULL),(29720,217,209,NULL),(29721,215,209,NULL),(29722,209,209,NULL),(29723,206,209,NULL),(29724,205,209,NULL),(29725,204,209,NULL),(29726,202,209,NULL),(29727,198,209,NULL),(29728,189,209,NULL),(29729,172,209,NULL),(29730,169,209,NULL),(29731,168,209,NULL),(29732,164,209,NULL),(29733,162,209,NULL),(29734,153,209,NULL),(29735,151,209,NULL),(29736,150,209,NULL),(29737,136,209,NULL),(29738,134,209,NULL),(29739,128,209,NULL),(29740,125,209,NULL),(29741,121,209,NULL),(29742,118,209,NULL),(29743,88,209,NULL),(29744,80,209,NULL),(29745,76,209,NULL),(29746,75,209,NULL),(29747,74,209,NULL),(29748,73,209,NULL),(29749,70,209,NULL),(29750,69,209,NULL),(29751,66,209,NULL),(29752,62,209,NULL),(29753,58,209,NULL),(29754,57,209,NULL),(29755,56,209,NULL),(29756,55,209,NULL),(29757,54,209,NULL),(29758,35,209,NULL),(29759,34,209,NULL),(29760,33,209,NULL),(29761,28,209,NULL),(29762,27,209,NULL),(29763,26,209,NULL),(29764,20,209,NULL),(29765,14,209,NULL),(29766,11,209,NULL),(29767,9,209,NULL),(29768,7,209,NULL),(29769,6,209,NULL),(29770,4,209,NULL),(29771,3,209,NULL),(29772,1,209,NULL),(29773,1593,289,NULL),(29774,1539,289,NULL),(29775,1480,289,NULL),(29776,9,289,NULL),(29777,328,305,NULL),(29778,237,305,NULL),(29779,203,305,NULL),(29780,3513,209,NULL),(29781,3445,209,NULL),(29782,3418,209,NULL),(29783,3424,209,NULL),(29784,3416,209,NULL),(29785,3449,209,NULL),(29786,3420,209,NULL),(29787,4198,209,NULL),(29788,3423,209,NULL),(29789,3534,209,NULL),(29790,5287,209,NULL),(29791,3488,209,NULL),(29792,5261,209,NULL),(29793,4521,209,NULL),(29794,3521,209,NULL),(29795,3525,209,NULL),(29796,3983,209,NULL),(29797,3549,209,NULL),(29798,3421,209,NULL),(29799,3609,209,NULL),(29800,3643,209,NULL),(29801,3765,209,NULL),(29802,3785,209,NULL),(29803,3452,209,NULL),(29804,3529,209,NULL),(29805,3477,209,NULL),(29806,3429,209,NULL),(29807,3422,209,NULL),(29808,3456,209,NULL),(29809,3922,209,NULL),(29810,3861,209,NULL),(29811,3464,209,NULL),(29812,3427,209,NULL),(29813,3551,209,NULL),(29814,3519,209,NULL),(29815,3450,209,NULL),(29816,3463,209,NULL),(29817,4110,209,NULL),(29818,3417,209,NULL),(29819,3536,209,NULL),(29820,3561,209,NULL),(29821,3432,209,NULL),(29822,3750,209,NULL),(29823,3538,209,NULL),(29824,3899,209,NULL),(29825,3946,209,NULL),(29826,3453,209,NULL),(29827,3680,209,NULL),(29828,4300,209,NULL),(29829,3522,209,NULL),(29830,3856,209,NULL),(29831,3667,209,NULL),(29832,3696,209,NULL),(29833,3702,209,NULL),(29834,4196,209,NULL),(29835,3573,209,NULL),(29836,4324,209,NULL),(29837,3835,209,NULL),(29838,3898,209,NULL),(29839,4291,209,NULL),(29840,3419,209,NULL),(29841,3659,209,NULL),(29842,3473,209,NULL),(29843,4617,209,NULL),(29844,3510,209,NULL),(29845,6203,209,NULL),(29846,4059,209,NULL),(29847,3553,209,NULL),(29848,4156,209,NULL),(29849,3825,209,NULL),(29850,3497,209,NULL),(29851,3439,209,NULL),(29852,3777,209,NULL),(29853,4102,209,NULL),(29854,3579,209,NULL),(29855,3692,209,NULL),(29856,3769,209,NULL),(29857,4098,209,NULL),(29858,3465,209,NULL),(29859,4131,209,NULL),(29860,4538,209,NULL),(29861,4020,209,NULL),(29862,4789,209,NULL),(29863,4695,209,NULL),(29864,4151,209,NULL),(29865,4113,209,NULL),(29866,4043,209,NULL),(29867,4212,209,NULL),(29868,6372,209,NULL),(29869,4532,209,NULL),(29870,3435,209,NULL),(29871,3475,209,NULL),(29872,3446,209,NULL),(29873,3459,209,NULL),(29874,3504,209,NULL),(29875,3457,209,NULL),(29876,5578,209,NULL),(29877,16596,199,NULL),(29878,2540,199,NULL),(29879,1423,199,NULL),(29880,2215,199,NULL),(29881,658,199,NULL),(29882,441,199,NULL),(29883,374,199,NULL),(29884,367,199,NULL),(29885,349,199,NULL),(29886,209,199,NULL),(29887,153,199,NULL),(29888,46,199,NULL),(29889,1,199,NULL),(29890,16560,50,NULL),(29891,3407,50,NULL),(29892,3396,50,NULL),(29893,3345,50,NULL),(29894,3375,50,NULL),(29895,3289,50,NULL),(29896,3174,50,NULL),(29897,3105,50,NULL),(29898,3066,50,NULL),(29899,3046,50,NULL),(29900,2965,50,NULL),(29901,2894,50,NULL),(29902,2873,50,NULL),(29903,2730,50,NULL),(29904,2574,50,NULL),(29905,2595,50,NULL),(29906,2537,50,NULL),(29907,2529,50,NULL),(29908,2523,50,NULL),(29909,2461,50,NULL),(29910,2460,50,NULL),(29911,2342,50,NULL),(29912,2239,50,NULL),(29913,2260,50,NULL),(29914,2206,50,NULL),(29915,2176,50,NULL),(29916,2161,50,NULL),(29917,2053,50,NULL),(29918,1800,50,NULL),(29919,1790,50,NULL),(29920,1768,50,NULL),(29921,1780,50,NULL),(29922,1752,50,NULL),(29923,1552,50,NULL),(29924,1534,50,NULL),(29925,1508,50,NULL),(29926,1461,50,NULL),(29927,1423,50,NULL),(29928,1343,50,NULL),(29929,2309,50,NULL),(29930,2191,50,NULL),(29931,1079,50,NULL),(29932,1052,50,NULL),(29933,1048,50,NULL),(29934,1004,50,NULL),(29935,978,50,NULL),(29936,977,50,NULL),(29937,974,50,NULL),(29938,885,50,NULL),(29939,881,50,NULL),(29940,875,50,NULL),(29941,867,50,NULL),(29942,796,50,NULL),(29943,704,50,NULL),(29944,713,50,NULL),(29945,643,50,NULL),(29946,567,50,NULL),(29947,481,50,NULL),(29948,475,50,NULL),(29949,442,50,NULL),(29950,441,50,NULL),(29951,438,50,NULL),(29952,413,50,NULL),(29953,410,50,NULL),(29954,397,50,NULL),(29955,392,50,NULL),(29956,374,50,NULL),(29957,371,50,NULL),(29958,367,50,NULL),(29959,347,50,NULL),(29960,344,50,NULL),(29961,338,50,NULL),(29962,303,50,NULL),(29963,287,50,NULL),(29964,268,50,NULL),(29965,263,50,NULL),(29966,258,50,NULL),(29967,242,50,NULL),(29968,238,50,NULL),(29969,231,50,NULL),(29970,228,50,NULL),(29971,219,50,NULL),(29972,217,50,NULL),(29973,209,50,NULL),(29974,203,50,NULL),(29975,191,50,NULL),(29976,190,50,NULL),(29977,189,50,NULL),(29978,187,50,NULL),(29979,167,50,NULL),(29980,165,50,NULL),(29981,153,50,NULL),(29982,151,50,NULL),(29983,142,50,NULL),(29984,141,50,NULL),(29985,136,50,NULL),(29986,128,50,NULL),(29987,125,50,NULL),(29988,122,50,NULL),(29989,121,50,NULL),(29990,88,50,NULL),(29991,83,50,NULL),(29992,75,50,NULL),(29993,74,50,NULL),(29994,70,50,NULL),(29995,69,50,NULL),(29996,67,50,NULL),(29997,66,50,NULL),(29998,61,50,NULL),(29999,58,50,NULL),(30000,53,50,NULL),(30001,49,50,NULL),(30002,48,50,NULL),(30003,47,50,NULL),(30004,46,50,NULL),(30005,35,50,NULL),(30006,34,50,NULL),(30007,33,50,NULL),(30008,29,50,NULL),(30009,28,50,NULL),(30010,27,50,NULL),(30011,26,50,NULL),(30012,24,50,NULL),(30013,21,50,NULL),(30014,20,50,NULL),(30015,18,50,NULL),(30016,16,50,NULL),(30017,15,50,NULL),(30018,14,50,NULL),(30019,13,50,NULL),(30020,11,50,NULL),(30021,9,50,NULL),(30022,7,50,NULL),(30023,4,50,NULL),(30024,3,50,NULL),(30025,1,50,NULL),(30026,3484,50,NULL),(30027,4055,50,NULL),(30028,3643,50,NULL),(30029,3468,50,NULL),(30030,5398,50,NULL),(30031,5474,50,NULL),(30032,4103,50,NULL),(30033,4941,50,NULL),(30034,5126,50,NULL),(30035,3635,50,NULL),(30036,3416,50,NULL),(30037,3511,50,NULL),(30038,3492,50,NULL),(30039,4484,50,NULL),(30040,3152,257,NULL),(30041,2981,257,NULL),(30042,2054,257,NULL),(30043,1920,257,NULL),(30044,3,257,NULL),(30045,2,257,NULL),(30046,1,257,NULL),(30047,16610,307,NULL),(30048,16570,307,NULL),(30049,3392,307,NULL),(30050,3407,307,NULL),(30051,3375,307,NULL),(30052,3208,307,NULL),(30053,3151,307,NULL),(30054,2965,307,NULL),(30055,2570,307,NULL),(30056,2579,307,NULL),(30057,2523,307,NULL),(30058,2460,307,NULL),(30059,2379,307,NULL),(30060,2176,307,NULL),(30061,2161,307,NULL),(30062,1768,307,NULL),(30063,1780,307,NULL),(30064,1534,307,NULL),(30065,1497,307,NULL),(30066,1422,307,NULL),(30067,1295,307,NULL),(30068,1071,307,NULL),(30069,1002,307,NULL),(30070,509,307,NULL),(30071,448,307,NULL),(30072,415,307,NULL),(30073,392,307,NULL),(30074,389,307,NULL),(30075,374,307,NULL),(30076,350,307,NULL),(30077,349,307,NULL),(30078,344,307,NULL),(30079,342,307,NULL),(30080,290,307,NULL),(30081,283,307,NULL),(30082,268,307,NULL),(30083,263,307,NULL),(30084,258,307,NULL),(30085,231,307,NULL),(30086,217,307,NULL),(30087,204,307,NULL),(30088,202,307,NULL),(30089,190,307,NULL),(30090,169,307,NULL),(30091,151,307,NULL),(30092,136,307,NULL),(30093,125,307,NULL),(30094,88,307,NULL),(30095,75,307,NULL),(30096,67,307,NULL),(30097,66,307,NULL),(30098,58,307,NULL),(30099,56,307,NULL),(30100,43,307,NULL),(30101,29,307,NULL),(30102,28,307,NULL),(30103,27,307,NULL),(30104,26,307,NULL),(30105,14,307,NULL),(30106,13,307,NULL),(30107,12,307,NULL),(30108,9,307,NULL),(30109,4,307,NULL),(30110,3,307,NULL),(30111,1,307,NULL),(30112,3458,307,NULL),(30113,3418,307,NULL),(30114,3424,307,NULL),(30115,3446,307,NULL),(30116,4261,307,NULL),(30117,3431,307,NULL),(30118,3417,307,NULL),(30119,3419,307,NULL),(30120,3392,292,NULL),(30121,2962,292,NULL),(30122,2563,292,NULL),(30123,2537,292,NULL),(30124,2444,292,NULL),(30125,2302,292,NULL),(30126,2179,292,NULL),(30127,2071,292,NULL),(30128,1295,292,NULL),(30129,1128,292,NULL),(30130,1007,292,NULL),(30131,838,292,NULL),(30132,790,292,NULL),(30133,86,292,NULL),(30134,85,292,NULL),(30135,84,292,NULL),(30136,83,292,NULL),(30137,82,292,NULL),(30138,81,292,NULL),(30139,80,292,NULL),(30140,79,292,NULL),(30141,78,292,NULL),(30142,77,292,NULL),(30143,76,292,NULL),(30144,75,292,NULL),(30145,74,292,NULL),(30146,73,292,NULL),(30147,72,292,NULL),(30148,71,292,NULL),(30149,70,292,NULL),(30150,69,292,NULL),(30151,68,292,NULL),(30152,67,292,NULL),(30153,66,292,NULL),(30154,65,292,NULL),(30155,64,292,NULL),(30156,63,292,NULL),(30157,62,292,NULL),(30158,61,292,NULL),(30159,60,292,NULL),(30160,59,292,NULL),(30161,58,292,NULL),(30162,57,292,NULL),(30163,56,292,NULL),(30164,55,292,NULL),(30165,54,292,NULL),(30166,53,292,NULL),(30167,52,292,NULL),(30168,51,292,NULL),(30169,50,292,NULL),(30170,49,292,NULL),(30171,48,292,NULL),(30172,47,292,NULL),(30173,46,292,NULL),(30174,45,292,NULL),(30175,44,292,NULL),(30176,43,292,NULL),(30177,42,292,NULL),(30178,41,292,NULL),(30179,40,292,NULL),(30180,39,292,NULL),(30181,38,292,NULL),(30182,37,292,NULL),(30183,36,292,NULL),(30184,35,292,NULL),(30185,34,292,NULL),(30186,33,292,NULL),(30187,32,292,NULL),(30188,31,292,NULL),(30189,29,292,NULL),(30190,28,292,NULL),(30191,27,292,NULL),(30192,26,292,NULL),(30193,25,292,NULL),(30194,24,292,NULL),(30195,23,292,NULL),(30196,22,292,NULL),(30197,21,292,NULL),(30198,20,292,NULL),(30199,19,292,NULL),(30200,18,292,NULL),(30201,17,292,NULL),(30202,16,292,NULL),(30203,15,292,NULL),(30204,14,292,NULL),(30205,13,292,NULL),(30206,12,292,NULL),(30207,11,292,NULL),(30208,10,292,NULL),(30209,9,292,NULL),(30210,8,292,NULL),(30211,7,292,NULL),(30212,6,292,NULL),(30213,5,292,NULL),(30214,4,292,NULL),(30215,3,292,NULL),(30216,2,292,NULL),(30217,1,292,NULL),(30218,4091,261,NULL),(30219,2798,309,NULL),(30220,2487,309,NULL),(30221,2099,309,NULL),(30222,1343,309,NULL),(30223,2215,309,NULL),(30224,1957,309,NULL),(30225,509,309,NULL),(30226,961,309,NULL),(30227,876,309,NULL),(30228,860,309,NULL),(30229,704,309,NULL),(30230,746,309,NULL),(30231,709,309,NULL),(30232,680,309,NULL),(30233,659,309,NULL),(30234,643,309,NULL),(30235,561,309,NULL),(30236,455,309,NULL),(30237,409,309,NULL),(30238,392,309,NULL),(30239,390,309,NULL),(30240,389,309,NULL),(30241,387,309,NULL),(30242,374,309,NULL),(30243,371,309,NULL),(30244,357,309,NULL),(30245,350,309,NULL),(30246,349,309,NULL),(30247,342,309,NULL),(30248,338,309,NULL),(30249,326,309,NULL),(30250,316,309,NULL),(30251,287,309,NULL),(30252,283,309,NULL),(30253,268,309,NULL),(30254,258,309,NULL),(30255,234,309,NULL),(30256,231,309,NULL),(30257,217,309,NULL),(30258,206,309,NULL),(30259,203,309,NULL),(30260,199,309,NULL),(30261,191,309,NULL),(30262,190,309,NULL),(30263,179,309,NULL),(30264,152,309,NULL),(30265,142,309,NULL),(30266,137,309,NULL),(30267,136,309,NULL),(30268,122,309,NULL),(30269,121,309,NULL),(30270,101,309,NULL),(30271,100,309,NULL),(30272,88,309,NULL),(30273,83,309,NULL),(30274,70,309,NULL),(30275,69,309,NULL),(30276,67,309,NULL),(30277,66,309,NULL),(30278,58,309,NULL),(30279,53,309,NULL),(30280,50,309,NULL),(30281,45,309,NULL),(30282,35,309,NULL),(30283,28,309,NULL),(30284,27,309,NULL),(30285,26,309,NULL),(30286,24,309,NULL),(30287,20,309,NULL),(30288,16,309,NULL),(30289,13,309,NULL),(30290,11,309,NULL),(30291,9,309,NULL),(30292,7,309,NULL),(30293,4,309,NULL),(30294,2,309,NULL),(30295,1,309,NULL),(30296,3469,309,NULL),(30297,3468,309,NULL),(30298,5398,309,NULL),(30299,3800,309,NULL),(30300,4103,309,NULL),(30301,4286,309,NULL),(30302,4423,309,NULL),(30303,3423,309,NULL),(30304,1838,210,NULL),(30305,1539,210,NULL),(30306,1480,210,NULL),(30307,1423,210,NULL),(30308,1343,210,NULL),(30309,875,210,NULL),(30310,867,210,NULL),(30311,704,210,NULL),(30312,658,210,NULL),(30313,643,210,NULL),(30314,567,210,NULL),(30315,442,210,NULL),(30316,441,210,NULL),(30317,374,210,NULL),(30318,287,210,NULL),(30319,217,210,NULL),(30320,209,210,NULL),(30321,153,210,NULL),(30322,121,210,NULL),(30323,35,210,NULL),(30324,33,210,NULL),(30325,9,210,NULL),(30326,1,210,NULL),(30327,3749,313,NULL),(30328,4456,313,NULL),(30329,4982,313,NULL),(30330,2730,311,NULL),(30331,2461,311,NULL),(30332,1539,311,NULL),(30333,1480,311,NULL),(30334,1423,311,NULL),(30335,1343,311,NULL),(30336,704,311,NULL),(30337,689,311,NULL),(30338,441,311,NULL),(30339,349,311,NULL),(30340,287,311,NULL),(30341,217,311,NULL),(30342,209,311,NULL),(30343,153,311,NULL),(30344,121,311,NULL),(30345,50,311,NULL),(30346,35,311,NULL),(30347,33,311,NULL),(30348,27,311,NULL),(30349,21,311,NULL),(30350,9,311,NULL),(30351,1,311,NULL),(30352,1,161,NULL),(30353,16550,232,NULL),(30354,3394,232,NULL),(30355,3396,232,NULL),(30356,3356,232,NULL),(30357,3375,232,NULL),(30358,3306,232,NULL),(30359,3272,232,NULL),(30360,3208,232,NULL),(30361,3191,232,NULL),(30362,3169,232,NULL),(30363,3158,232,NULL),(30364,3108,232,NULL),(30365,2970,232,NULL),(30366,2999,232,NULL),(30367,2965,232,NULL),(30368,2873,232,NULL),(30369,2874,232,NULL),(30370,2818,232,NULL),(30371,2843,232,NULL),(30372,2845,232,NULL),(30373,2780,232,NULL),(30374,2799,232,NULL),(30375,2685,232,NULL),(30376,2730,232,NULL),(30377,2656,232,NULL),(30378,2652,232,NULL),(30379,2574,232,NULL),(30380,2563,232,NULL),(30381,2560,232,NULL),(30382,2551,232,NULL),(30383,2594,232,NULL),(30384,2595,232,NULL),(30385,2579,232,NULL),(30386,2554,232,NULL),(30387,2540,232,NULL),(30388,2537,232,NULL),(30389,2529,232,NULL),(30390,2523,232,NULL),(30391,2506,232,NULL),(30392,2503,232,NULL),(30393,2490,232,NULL),(30394,2475,232,NULL),(30395,2461,232,NULL),(30396,2401,232,NULL),(30397,2379,232,NULL),(30398,2373,232,NULL),(30399,2352,232,NULL),(30400,2338,232,NULL),(30401,2235,232,NULL),(30402,2220,232,NULL),(30403,2206,232,NULL),(30404,2179,232,NULL),(30405,2176,232,NULL),(30406,2140,232,NULL),(30407,2145,232,NULL),(30408,2115,232,NULL),(30409,2089,232,NULL),(30410,2062,232,NULL),(30411,2033,232,NULL),(30412,1976,232,NULL),(30413,1945,232,NULL),(30414,1929,232,NULL),(30415,1922,232,NULL),(30416,1920,232,NULL),(30417,1863,232,NULL),(30418,1859,232,NULL),(30419,1838,232,NULL),(30420,1832,232,NULL),(30421,1768,232,NULL),(30422,1780,232,NULL),(30423,1752,232,NULL),(30424,1748,232,NULL),(30425,1725,232,NULL),(30426,1732,232,NULL),(30427,1679,232,NULL),(30428,1672,232,NULL),(30429,1657,232,NULL),(30430,1636,232,NULL),(30431,1572,232,NULL),(30432,1534,232,NULL),(30433,1539,232,NULL),(30434,1512,232,NULL),(30435,1486,232,NULL),(30436,1480,232,NULL),(30437,1493,232,NULL),(30438,1470,232,NULL),(30439,1464,232,NULL),(30440,1456,232,NULL),(30441,1423,232,NULL),(30442,1431,232,NULL),(30443,1399,232,NULL),(30444,1351,232,NULL),(30445,1346,232,NULL),(30446,1358,232,NULL),(30447,1343,232,NULL),(30448,1304,232,NULL),(30449,1266,232,NULL),(30450,2215,232,NULL),(30451,1252,232,NULL),(30452,2226,232,NULL),(30453,1207,232,NULL),(30454,1123,232,NULL),(30455,1071,232,NULL),(30456,1004,232,NULL),(30457,977,232,NULL),(30458,974,232,NULL),(30459,875,232,NULL),(30460,867,232,NULL),(30461,832,232,NULL),(30462,796,232,NULL),(30463,781,232,NULL),(30464,704,232,NULL),(30465,766,232,NULL),(30466,763,232,NULL),(30467,709,232,NULL),(30468,724,232,NULL),(30469,693,232,NULL),(30470,689,232,NULL),(30471,658,232,NULL),(30472,643,232,NULL),(30473,628,232,NULL),(30474,605,232,NULL),(30475,566,232,NULL),(30476,448,232,NULL),(30477,443,232,NULL),(30478,442,232,NULL),(30479,441,232,NULL),(30480,435,232,NULL),(30481,416,232,NULL),(30482,414,232,NULL),(30483,392,232,NULL),(30484,383,232,NULL),(30485,374,232,NULL),(30486,368,232,NULL),(30487,350,232,NULL),(30488,349,232,NULL),(30489,345,232,NULL),(30490,344,232,NULL),(30491,342,232,NULL),(30492,338,232,NULL),(30493,334,232,NULL),(30494,303,232,NULL),(30495,290,232,NULL),(30496,287,232,NULL),(30497,283,232,NULL),(30498,279,232,NULL),(30499,278,232,NULL),(30500,268,232,NULL),(30501,242,232,NULL),(30502,238,232,NULL),(30503,219,232,NULL),(30504,217,232,NULL),(30505,209,232,NULL),(30506,205,232,NULL),(30507,202,232,NULL),(30508,191,232,NULL),(30509,189,232,NULL),(30510,169,232,NULL),(30511,167,232,NULL),(30512,162,232,NULL),(30513,153,232,NULL),(30514,151,232,NULL),(30515,141,232,NULL),(30516,137,232,NULL),(30517,136,232,NULL),(30518,125,232,NULL),(30519,122,232,NULL),(30520,121,232,NULL),(30521,88,232,NULL),(30522,80,232,NULL),(30523,74,232,NULL),(30524,69,232,NULL),(30525,67,232,NULL),(30526,66,232,NULL),(30527,58,232,NULL),(30528,55,232,NULL),(30529,45,232,NULL),(30530,41,232,NULL),(30531,38,232,NULL),(30532,36,232,NULL),(30533,35,232,NULL),(30534,34,232,NULL),(30535,33,232,NULL),(30536,29,232,NULL),(30537,28,232,NULL),(30538,27,232,NULL),(30539,26,232,NULL),(30540,21,232,NULL),(30541,14,232,NULL),(30542,13,232,NULL),(30543,11,232,NULL),(30544,9,232,NULL),(30545,8,232,NULL),(30546,3,232,NULL),(30547,1,232,NULL),(30548,16585,317,NULL),(30549,3340,317,NULL),(30550,3300,317,NULL),(30551,3289,317,NULL),(30552,3264,317,NULL),(30553,3232,317,NULL),(30554,3190,317,NULL),(30555,3206,317,NULL),(30556,3162,317,NULL),(30557,3151,317,NULL),(30558,3110,317,NULL),(30559,3099,317,NULL),(30560,3065,317,NULL),(30561,3046,317,NULL),(30562,2965,317,NULL),(30563,2956,317,NULL),(30564,2942,317,NULL),(30565,2894,317,NULL),(30566,2828,317,NULL),(30567,2824,317,NULL),(30568,2810,317,NULL),(30569,2798,317,NULL),(30570,2778,317,NULL),(30571,2656,317,NULL),(30572,2706,317,NULL),(30573,2652,317,NULL),(30574,2574,317,NULL),(30575,2595,317,NULL),(30576,2578,317,NULL),(30577,2579,317,NULL),(30578,2554,317,NULL),(30579,2540,317,NULL),(30580,2544,317,NULL),(30581,2535,317,NULL),(30582,2529,317,NULL),(30583,2520,317,NULL),(30584,2490,317,NULL),(30585,2485,317,NULL),(30586,2469,317,NULL),(30587,2460,317,NULL),(30588,2427,317,NULL),(30589,2413,317,NULL),(30590,2300,317,NULL),(30591,2293,317,NULL),(30592,2235,317,NULL),(30593,2260,317,NULL),(30594,2220,317,NULL),(30595,2206,317,NULL),(30596,2185,317,NULL),(30597,2149,317,NULL),(30598,2161,317,NULL),(30599,2160,317,NULL),(30600,2114,317,NULL),(30601,2062,317,NULL),(30602,2016,317,NULL),(30603,2011,317,NULL),(30604,2006,317,NULL),(30605,1952,317,NULL),(30606,1929,317,NULL),(30607,1920,317,NULL),(30608,1859,317,NULL),(30609,1832,317,NULL),(30610,1816,317,NULL),(30611,1827,317,NULL),(30612,1773,317,NULL),(30613,1768,317,NULL),(30614,1780,317,NULL),(30615,1752,317,NULL),(30616,1679,317,NULL),(30617,1672,317,NULL),(30618,1662,317,NULL),(30619,1657,317,NULL),(30620,1588,317,NULL),(30621,1572,317,NULL),(30622,1528,317,NULL),(30623,1539,317,NULL),(30624,1512,317,NULL),(30625,1486,317,NULL),(30626,1480,317,NULL),(30627,1470,317,NULL),(30628,1464,317,NULL),(30629,1456,317,NULL),(30630,1431,317,NULL),(30631,1365,317,NULL),(30632,1351,317,NULL),(30633,1346,317,NULL),(30634,1323,317,NULL),(30635,1343,317,NULL),(30636,1342,317,NULL),(30637,1304,317,NULL),(30638,1295,317,NULL),(30639,1281,317,NULL),(30640,2215,317,NULL),(30641,1252,317,NULL),(30642,1227,317,NULL),(30643,1207,317,NULL),(30644,1108,317,NULL),(30645,1071,317,NULL),(30646,1051,317,NULL),(30647,1025,317,NULL),(30648,1005,317,NULL),(30649,977,317,NULL),(30650,509,317,NULL),(30651,922,317,NULL),(30652,912,317,NULL),(30653,905,317,NULL),(30654,867,317,NULL),(30655,832,317,NULL),(30656,796,317,NULL),(30657,704,317,NULL),(30658,771,317,NULL),(30659,766,317,NULL),(30660,747,317,NULL),(30661,744,317,NULL),(30662,709,317,NULL),(30663,693,317,NULL),(30664,643,317,NULL),(30665,605,317,NULL),(30666,566,317,NULL),(30667,507,317,NULL),(30668,485,317,NULL),(30669,448,317,NULL),(30670,443,317,NULL),(30671,442,317,NULL),(30672,412,317,NULL),(30673,392,317,NULL),(30674,389,317,NULL),(30675,387,317,NULL),(30676,383,317,NULL),(30677,374,317,NULL),(30678,371,317,NULL),(30679,367,317,NULL),(30680,349,317,NULL),(30681,345,317,NULL),(30682,344,317,NULL),(30683,338,317,NULL),(30684,334,317,NULL),(30685,319,317,NULL),(30686,292,317,NULL),(30687,287,317,NULL),(30688,283,317,NULL),(30689,268,317,NULL),(30690,258,317,NULL),(30691,242,317,NULL),(30692,238,317,NULL),(30693,219,317,NULL),(30694,217,317,NULL),(30695,209,317,NULL),(30696,191,317,NULL),(30697,190,317,NULL),(30698,189,317,NULL),(30699,171,317,NULL),(30700,169,317,NULL),(30701,167,317,NULL),(30702,162,317,NULL),(30703,153,317,NULL),(30704,151,317,NULL),(30705,137,317,NULL),(30706,136,317,NULL),(30707,125,317,NULL),(30708,121,317,NULL),(30709,88,317,NULL),(30710,81,317,NULL),(30711,75,317,NULL),(30712,74,317,NULL),(30713,70,317,NULL),(30714,69,317,NULL),(30715,67,317,NULL),(30716,66,317,NULL),(30717,58,317,NULL),(30718,55,317,NULL),(30719,50,317,NULL),(30720,35,317,NULL),(30721,34,317,NULL),(30722,33,317,NULL),(30723,29,317,NULL),(30724,27,317,NULL),(30725,26,317,NULL),(30726,14,317,NULL),(30727,11,317,NULL),(30728,9,317,NULL),(30729,7,317,NULL),(30730,4,317,NULL),(30731,3,317,NULL),(30732,1,317,NULL),(30733,3394,322,NULL),(30734,3396,322,NULL),(30735,3345,322,NULL),(30736,3300,322,NULL),(30737,3280,322,NULL),(30738,3248,322,NULL),(30739,3190,322,NULL),(30740,3191,322,NULL),(30741,3223,322,NULL),(30742,3178,322,NULL),(30743,3169,322,NULL),(30744,3184,322,NULL),(30745,3110,322,NULL),(30746,3042,322,NULL),(30747,3011,322,NULL),(30748,2942,322,NULL),(30749,2914,322,NULL),(30750,2894,322,NULL),(30751,2873,322,NULL),(30752,2900,322,NULL),(30753,2828,322,NULL),(30754,2845,322,NULL),(30755,2780,322,NULL),(30756,2788,322,NULL),(30757,2799,322,NULL),(30758,2744,322,NULL),(30759,2769,322,NULL),(30760,2683,322,NULL),(30761,2730,322,NULL),(30762,2657,322,NULL),(30763,2653,322,NULL),(30764,2678,322,NULL),(30765,2601,322,NULL),(30766,2574,322,NULL),(30767,2661,322,NULL),(30768,2586,322,NULL),(30769,2537,322,NULL),(30770,2529,322,NULL),(30771,2506,322,NULL),(30772,2496,322,NULL),(30773,2485,322,NULL),(30774,2469,322,NULL),(30775,2461,322,NULL),(30776,2425,322,NULL),(30777,2429,322,NULL),(30778,2418,322,NULL),(30779,2381,322,NULL),(30780,2379,322,NULL),(30781,2270,322,NULL),(30782,2255,322,NULL),(30783,2260,322,NULL),(30784,2185,322,NULL),(30785,2121,322,NULL),(30786,2108,322,NULL),(30787,2116,322,NULL),(30788,2114,322,NULL),(30789,2078,322,NULL),(30790,2053,322,NULL),(30791,2033,322,NULL),(30792,2017,322,NULL),(30793,2011,322,NULL),(30794,1971,322,NULL),(30795,1967,322,NULL),(30796,1930,322,NULL),(30797,1876,322,NULL),(30798,1816,322,NULL),(30799,1829,322,NULL),(30800,1773,322,NULL),(30801,1769,322,NULL),(30802,1765,322,NULL),(30803,1710,322,NULL),(30804,1684,322,NULL),(30805,1662,322,NULL),(30806,1658,322,NULL),(30807,1641,322,NULL),(30808,1528,322,NULL),(30809,1480,322,NULL),(30810,1461,322,NULL),(30811,1423,322,NULL),(30812,1408,322,NULL),(30813,1400,322,NULL),(30814,1379,322,NULL),(30815,1368,322,NULL),(30816,1343,322,NULL),(30817,1267,322,NULL),(30818,1154,322,NULL),(30819,1137,322,NULL),(30820,1025,322,NULL),(30821,1004,322,NULL),(30822,983,322,NULL),(30823,977,322,NULL),(30824,974,322,NULL),(30825,509,322,NULL),(30826,944,322,NULL),(30827,942,322,NULL),(30828,916,322,NULL),(30829,904,322,NULL),(30830,881,322,NULL),(30831,875,322,NULL),(30832,804,322,NULL),(30833,802,322,NULL),(30834,704,322,NULL),(30835,771,322,NULL),(30836,746,322,NULL),(30837,713,322,NULL),(30838,643,322,NULL),(30839,617,322,NULL),(30840,567,322,NULL),(30841,560,322,NULL),(30842,551,322,NULL),(30843,523,322,NULL),(30844,520,322,NULL),(30845,500,322,NULL),(30846,455,322,NULL),(30847,441,322,NULL),(30848,438,322,NULL),(30849,413,322,NULL),(30850,410,322,NULL),(30851,407,322,NULL),(30852,392,322,NULL),(30853,389,322,NULL),(30854,387,322,NULL),(30855,374,322,NULL),(30856,367,322,NULL),(30857,344,322,NULL),(30858,338,322,NULL),(30859,303,322,NULL),(30860,290,322,NULL),(30861,273,322,NULL),(30862,268,322,NULL),(30863,258,322,NULL),(30864,242,322,NULL),(30865,231,322,NULL),(30866,219,322,NULL),(30867,210,322,NULL),(30868,209,322,NULL),(30869,207,322,NULL),(30870,205,322,NULL),(30871,202,322,NULL),(30872,200,322,NULL),(30873,191,322,NULL),(30874,190,322,NULL),(30875,187,322,NULL),(30876,169,322,NULL),(30877,165,322,NULL),(30878,153,322,NULL),(30879,151,322,NULL),(30880,136,322,NULL),(30881,122,322,NULL),(30882,121,322,NULL),(30883,119,322,NULL),(30884,118,322,NULL),(30885,101,322,NULL),(30886,100,322,NULL),(30887,83,322,NULL),(30888,75,322,NULL),(30889,73,322,NULL),(30890,70,322,NULL),(30891,69,322,NULL),(30892,66,322,NULL),(30893,58,322,NULL),(30894,53,322,NULL),(30895,35,322,NULL),(30896,33,322,NULL),(30897,28,322,NULL),(30898,26,322,NULL),(30899,22,322,NULL),(30900,21,322,NULL),(30901,20,322,NULL),(30902,14,322,NULL),(30903,13,322,NULL),(30904,11,322,NULL),(30905,9,322,NULL),(30906,7,322,NULL),(30907,6,322,NULL),(30908,4,322,NULL),(30909,3,322,NULL),(30910,2,322,NULL),(30911,1,322,NULL),(30912,1,323,NULL),(30913,303,327,NULL),(30914,3484,58,NULL),(30915,3629,58,NULL),(30916,3641,58,NULL),(30917,3574,58,NULL),(30918,3469,58,NULL),(30919,3620,58,NULL),(30920,3433,58,NULL),(30921,3914,58,NULL),(30922,3468,58,NULL),(30923,3450,58,NULL),(30924,3417,58,NULL),(30925,3750,58,NULL),(30926,3453,58,NULL),(30927,3621,58,NULL),(30928,3471,58,NULL),(30929,3425,58,NULL),(30930,3423,58,NULL),(30931,3871,58,NULL),(30932,3435,58,NULL),(30933,3446,58,NULL),(30934,3739,58,NULL),(30935,3504,58,NULL),(30936,3483,58,NULL),(30937,4028,58,NULL),(30938,3762,58,NULL),(30939,4649,58,NULL),(30940,3695,58,NULL),(30941,4032,58,NULL),(30942,4493,58,NULL),(30943,4767,58,NULL),(30944,4560,58,NULL),(30945,3833,58,NULL),(30946,4720,58,NULL),(30947,4074,58,NULL),(30948,4170,58,NULL),(30949,4423,58,NULL),(30950,3948,58,NULL),(30951,16585,58,NULL),(30952,16560,58,NULL),(30953,16574,58,NULL),(30954,16550,58,NULL),(30955,3411,58,NULL),(30956,3345,58,NULL),(30957,3285,58,NULL),(30958,3264,58,NULL),(30959,3190,58,NULL),(30960,3162,58,NULL),(30961,3110,58,NULL),(30962,2942,58,NULL),(30963,2894,58,NULL),(30964,2824,58,NULL),(30965,2798,58,NULL),(30966,2769,58,NULL),(30967,2574,58,NULL),(30968,2469,58,NULL),(30969,2461,58,NULL),(30970,2413,58,NULL),(30971,2235,58,NULL),(30972,2114,58,NULL),(30973,2037,58,NULL),(30974,2011,58,NULL),(30975,1929,58,NULL),(30976,1920,58,NULL),(30977,1863,58,NULL),(30978,1877,58,NULL),(30979,1876,58,NULL),(30980,1791,58,NULL),(30981,1678,58,NULL),(30982,1672,58,NULL),(30983,1512,58,NULL),(30984,1486,58,NULL),(30985,1480,58,NULL),(30986,1470,58,NULL),(30987,1461,58,NULL),(30988,1431,58,NULL),(30989,1365,58,NULL),(30990,1343,58,NULL),(30991,1281,58,NULL),(30992,1248,58,NULL),(30993,1221,58,NULL),(30994,1004,58,NULL),(30995,938,58,NULL),(30996,881,58,NULL),(30997,771,58,NULL),(30998,713,58,NULL),(30999,643,58,NULL),(31000,633,58,NULL),(31001,567,58,NULL),(31002,438,58,NULL),(31003,397,58,NULL),(31004,367,58,NULL),(31005,349,58,NULL),(31006,345,58,NULL),(31007,344,58,NULL),(31008,234,58,NULL),(31009,219,58,NULL),(31010,209,58,NULL),(31011,203,58,NULL),(31012,199,58,NULL),(31013,187,58,NULL),(31014,167,58,NULL),(31015,160,58,NULL),(31016,151,58,NULL),(31017,145,58,NULL),(31018,144,58,NULL),(31019,141,58,NULL),(31020,125,58,NULL),(31021,111,58,NULL),(31022,104,58,NULL),(31023,94,58,NULL),(31024,92,58,NULL),(31025,86,58,NULL),(31026,83,58,NULL),(31027,70,58,NULL),(31028,69,58,NULL),(31029,67,58,NULL),(31030,66,58,NULL),(31031,58,58,NULL),(31032,35,58,NULL),(31033,28,58,NULL),(31034,27,58,NULL),(31035,26,58,NULL),(31036,21,58,NULL),(31037,20,58,NULL),(31038,18,58,NULL),(31039,15,58,NULL),(31040,11,58,NULL),(31041,9,58,NULL),(31042,3,58,NULL),(31043,2,58,NULL),(31044,1,58,NULL),(31045,16579,326,NULL),(31046,16556,326,NULL),(31047,16570,326,NULL),(31048,16574,326,NULL),(31049,16550,326,NULL),(31050,3411,326,NULL),(31051,3407,326,NULL),(31052,3345,326,NULL),(31053,3360,326,NULL),(31054,3190,326,NULL),(31055,3194,326,NULL),(31056,3162,326,NULL),(31057,3184,326,NULL),(31058,3131,326,NULL),(31059,3110,326,NULL),(31060,2652,326,NULL),(31061,2595,326,NULL),(31062,2535,326,NULL),(31063,2529,326,NULL),(31064,2485,326,NULL),(31065,2461,326,NULL),(31066,2270,326,NULL),(31067,2176,326,NULL),(31068,2124,326,NULL),(31069,2089,326,NULL),(31070,1952,326,NULL),(31071,1929,326,NULL),(31072,1925,326,NULL),(31073,1832,326,NULL),(31074,1768,326,NULL),(31075,1732,326,NULL),(31076,1672,326,NULL),(31077,1572,326,NULL),(31078,1512,326,NULL),(31079,1523,326,NULL),(31080,1486,326,NULL),(31081,1480,326,NULL),(31082,1351,326,NULL),(31083,1342,326,NULL),(31084,1252,326,NULL),(31085,1207,326,NULL),(31086,1071,326,NULL),(31087,1051,326,NULL),(31088,977,326,NULL),(31089,912,326,NULL),(31090,905,326,NULL),(31091,867,326,NULL),(31092,796,326,NULL),(31093,766,326,NULL),(31094,724,326,NULL),(31095,693,326,NULL),(31096,643,326,NULL),(31097,605,326,NULL),(31098,525,326,NULL),(31099,442,326,NULL),(31100,412,326,NULL),(31101,392,326,NULL),(31102,383,326,NULL),(31103,345,326,NULL),(31104,344,326,NULL),(31105,342,326,NULL),(31106,334,326,NULL),(31107,326,326,NULL),(31108,283,326,NULL),(31109,274,326,NULL),(31110,268,326,NULL),(31111,258,326,NULL),(31112,242,326,NULL),(31113,240,326,NULL),(31114,231,326,NULL),(31115,219,326,NULL),(31116,217,326,NULL),(31117,205,326,NULL),(31118,202,326,NULL),(31119,191,326,NULL),(31120,190,326,NULL),(31121,189,326,NULL),(31122,169,326,NULL),(31123,167,326,NULL),(31124,164,326,NULL),(31125,162,326,NULL),(31126,154,326,NULL),(31127,153,326,NULL),(31128,151,326,NULL),(31129,136,326,NULL),(31130,125,326,NULL),(31131,121,326,NULL),(31132,88,326,NULL),(31133,75,326,NULL),(31134,70,326,NULL),(31135,66,326,NULL),(31136,58,326,NULL),(31137,35,326,NULL),(31138,33,326,NULL),(31139,28,326,NULL),(31140,27,326,NULL),(31141,26,326,NULL),(31142,20,326,NULL),(31143,13,326,NULL),(31144,9,326,NULL),(31145,7,326,NULL),(31146,3,326,NULL),(31147,1,326,NULL),(31148,3863,326,NULL),(31149,16634,328,NULL),(31150,16595,328,NULL),(31151,16585,328,NULL),(31152,16625,328,NULL),(31153,16640,328,NULL),(31154,16570,328,NULL),(31155,16574,328,NULL),(31156,16589,328,NULL),(31157,16550,328,NULL),(31158,3392,328,NULL),(31159,3396,328,NULL),(31160,3345,328,NULL),(31161,3375,328,NULL),(31162,3300,328,NULL),(31163,3285,328,NULL),(31164,3289,328,NULL),(31165,3286,328,NULL),(31166,3264,328,NULL),(31167,3190,328,NULL),(31168,3174,328,NULL),(31169,3160,328,NULL),(31170,3151,328,NULL),(31171,3105,328,NULL),(31172,3099,328,NULL),(31173,3066,328,NULL),(31174,3028,328,NULL),(31175,3042,328,NULL),(31176,2965,328,NULL),(31177,2942,328,NULL),(31178,2894,328,NULL),(31179,2873,328,NULL),(31180,2874,328,NULL),(31181,2824,328,NULL),(31182,2798,328,NULL),(31183,2748,328,NULL),(31184,2698,328,NULL),(31185,2656,328,NULL),(31186,2652,328,NULL),(31187,2574,328,NULL),(31188,2570,328,NULL),(31189,2549,328,NULL),(31190,2579,328,NULL),(31191,2537,328,NULL),(31192,2535,328,NULL),(31193,2529,328,NULL),(31194,2523,328,NULL),(31195,2485,328,NULL),(31196,2469,328,NULL),(31197,2460,328,NULL),(31198,2455,328,NULL),(31199,2427,328,NULL),(31200,2413,328,NULL),(31201,2342,328,NULL),(31202,2364,328,NULL),(31203,2349,328,NULL),(31204,2235,328,NULL),(31205,2180,328,NULL),(31206,2185,328,NULL),(31207,2161,328,NULL),(31208,2140,328,NULL),(31209,2106,328,NULL),(31210,2071,328,NULL),(31211,2037,328,NULL),(31212,2011,328,NULL),(31213,2000,328,NULL),(31214,1979,328,NULL),(31215,1991,328,NULL),(31216,1952,328,NULL),(31217,1929,328,NULL),(31218,1920,328,NULL),(31219,1898,328,NULL),(31220,1910,328,NULL),(31221,1863,328,NULL),(31222,1832,328,NULL),(31223,1822,328,NULL),(31224,1800,328,NULL),(31225,1812,328,NULL),(31226,1790,328,NULL),(31227,1768,328,NULL),(31228,1780,328,NULL),(31229,1752,328,NULL),(31230,1732,328,NULL),(31231,1672,328,NULL),(31232,1588,328,NULL),(31233,1518,328,NULL),(31234,1512,328,NULL),(31235,1524,328,NULL),(31236,1480,328,NULL),(31237,1470,328,NULL),(31238,1456,328,NULL),(31239,1423,328,NULL),(31240,1431,328,NULL),(31241,1352,328,NULL),(31242,1342,328,NULL),(31243,1295,328,NULL),(31244,1281,328,NULL),(31245,1726,328,NULL),(31246,1232,328,NULL),(31247,1208,328,NULL),(31248,1123,328,NULL),(31249,1094,328,NULL),(31250,1025,328,NULL),(31251,992,328,NULL),(31252,978,328,NULL),(31253,977,328,NULL),(31254,509,328,NULL),(31255,930,328,NULL),(31256,916,328,NULL),(31257,914,328,NULL),(31258,904,328,NULL),(31259,860,328,NULL),(31260,848,328,NULL),(31261,798,328,NULL),(31262,704,328,NULL),(31263,771,328,NULL),(31264,728,328,NULL),(31265,724,328,NULL),(31266,713,328,NULL),(31267,682,328,NULL),(31268,643,328,NULL),(31269,605,328,NULL),(31270,560,328,NULL),(31271,539,328,NULL),(31272,507,328,NULL),(31273,455,328,NULL),(31274,416,328,NULL),(31275,412,328,NULL),(31276,367,328,NULL),(31277,363,328,NULL),(31278,344,328,NULL),(31279,342,328,NULL),(31280,326,328,NULL),(31281,303,328,NULL),(31282,300,328,NULL),(31283,287,328,NULL),(31284,283,328,NULL),(31285,268,328,NULL),(31286,258,328,NULL),(31287,238,328,NULL),(31288,231,328,NULL),(31289,229,328,NULL),(31290,219,328,NULL),(31291,217,328,NULL),(31292,209,328,NULL),(31293,204,328,NULL),(31294,189,328,NULL),(31295,169,328,NULL),(31296,167,328,NULL),(31297,154,328,NULL),(31298,153,328,NULL),(31299,152,328,NULL),(31300,136,328,NULL),(31301,125,328,NULL),(31302,121,328,NULL),(31303,118,328,NULL),(31304,88,328,NULL),(31305,81,328,NULL),(31306,75,328,NULL),(31307,74,328,NULL),(31308,73,328,NULL),(31309,70,328,NULL),(31310,69,328,NULL),(31311,67,328,NULL),(31312,66,328,NULL),(31313,62,328,NULL),(31314,61,328,NULL),(31315,58,328,NULL),(31316,56,328,NULL),(31317,55,328,NULL),(31318,53,328,NULL),(31319,50,328,NULL),(31320,48,328,NULL),(31321,47,328,NULL),(31322,42,328,NULL),(31323,35,328,NULL),(31324,34,328,NULL),(31325,33,328,NULL),(31326,31,328,NULL),(31327,29,328,NULL),(31328,28,328,NULL),(31329,27,328,NULL),(31330,26,328,NULL),(31331,21,328,NULL),(31332,20,328,NULL),(31333,18,328,NULL),(31334,15,328,NULL),(31335,14,328,NULL),(31336,13,328,NULL),(31337,11,328,NULL),(31338,9,328,NULL),(31339,7,328,NULL),(31340,3,328,NULL),(31341,1,328,NULL),(31342,3484,328,NULL),(31343,3535,328,NULL),(31344,3584,328,NULL),(31345,3454,328,NULL),(31346,3469,328,NULL),(31347,3505,328,NULL),(31348,3525,328,NULL),(31349,3885,328,NULL),(31350,3693,328,NULL),(31351,4078,328,NULL),(31352,3559,328,NULL),(31353,16657,328,NULL),(31354,4231,328,NULL),(31355,4038,328,NULL),(31356,4372,328,NULL),(31357,4005,328,NULL),(31358,4455,328,NULL),(31359,3970,328,NULL),(31360,3785,328,NULL),(31361,3477,328,NULL),(31362,3429,328,NULL),(31363,3464,328,NULL),(31364,3463,328,NULL),(31365,3536,328,NULL),(31366,4317,328,NULL),(31367,3419,328,NULL),(31368,4176,328,NULL),(31369,3881,328,NULL),(31370,3611,328,NULL),(31371,3590,328,NULL),(31372,3797,328,NULL),(31373,4629,328,NULL),(31374,16739,328,NULL),(31375,4153,328,NULL),(31376,3875,328,NULL),(31377,3857,328,NULL),(31378,5417,328,NULL),(31379,4449,328,NULL),(31380,4475,328,NULL),(31381,4532,328,NULL),(31382,16991,328,NULL),(31383,6380,328,NULL),(31384,3471,328,NULL),(31385,3479,328,NULL),(31386,3416,328,NULL),(31387,3767,328,NULL),(31388,3713,328,NULL),(31389,4507,328,NULL),(31390,3793,328,NULL),(31391,4646,328,NULL),(31392,3813,328,NULL),(31393,4307,328,NULL),(31394,3988,328,NULL),(31395,4484,328,NULL),(31396,5464,328,NULL),(31397,4282,328,NULL),(31398,4755,328,NULL),(31399,3682,328,NULL),(31400,3554,328,NULL),(31401,3435,328,NULL),(31402,3498,328,NULL),(31403,4547,328,NULL),(31404,3846,328,NULL),(31405,3623,328,NULL),(31406,3751,328,NULL),(31407,4091,328,NULL),(31408,5123,328,NULL),(31409,3524,328,NULL),(31410,3489,328,NULL),(31411,3807,328,NULL),(31412,5262,328,NULL),(31413,3994,328,NULL),(31414,5293,328,NULL),(31415,3761,328,NULL),(31416,3446,328,NULL),(31417,3714,328,NULL),(31418,3820,328,NULL),(31419,4119,328,NULL),(31420,5615,328,NULL),(31421,5037,328,NULL),(31422,5327,328,NULL),(31423,3982,328,NULL),(31424,5125,328,NULL),(31425,5280,328,NULL),(31426,4213,328,NULL),(31427,3973,328,NULL),(31428,3459,328,NULL),(31429,4130,328,NULL),(31430,4466,328,NULL),(31431,3483,328,NULL),(31432,4044,328,NULL),(31433,4028,328,NULL),(31434,4139,328,NULL),(31435,4553,328,NULL),(31436,4655,328,NULL),(31437,4286,328,NULL),(31438,3669,328,NULL),(31439,4182,328,NULL),(31440,3595,328,NULL),(31441,4946,328,NULL),(31442,6210,328,NULL),(31443,5429,328,NULL),(31444,4926,328,NULL),(31445,4720,328,NULL),(31446,5017,328,NULL),(31447,4025,328,NULL),(31448,3482,328,NULL),(31449,3625,328,NULL),(31450,4750,328,NULL),(31451,3889,328,NULL),(31452,4865,328,NULL),(31453,5491,328,NULL),(31454,5767,328,NULL),(31455,4775,328,NULL),(31456,4172,328,NULL),(31457,4232,328,NULL),(31458,4269,328,NULL),(31459,4405,328,NULL),(31460,4302,328,NULL),(31461,3862,328,NULL),(31462,16938,328,NULL),(31463,16955,328,NULL),(31464,3443,328,NULL),(31465,3392,310,NULL),(31466,2962,310,NULL),(31467,2563,310,NULL),(31468,2444,310,NULL),(31469,2302,310,NULL),(31470,2179,310,NULL),(31471,2071,310,NULL),(31472,1920,310,NULL),(31473,1295,310,NULL),(31474,1128,310,NULL),(31475,1007,310,NULL),(31476,838,310,NULL),(31477,790,310,NULL),(31478,93,310,NULL),(31479,92,310,NULL),(31480,91,310,NULL),(31481,90,310,NULL),(31482,89,310,NULL),(31483,88,310,NULL),(31484,87,310,NULL),(31485,86,310,NULL),(31486,85,310,NULL),(31487,84,310,NULL),(31488,83,310,NULL),(31489,82,310,NULL),(31490,81,310,NULL),(31491,80,310,NULL),(31492,79,310,NULL),(31493,78,310,NULL),(31494,77,310,NULL),(31495,76,310,NULL),(31496,75,310,NULL),(31497,74,310,NULL),(31498,73,310,NULL),(31499,72,310,NULL),(31500,71,310,NULL),(31501,70,310,NULL),(31502,69,310,NULL),(31503,68,310,NULL),(31504,67,310,NULL),(31505,66,310,NULL),(31506,65,310,NULL),(31507,64,310,NULL),(31508,63,310,NULL),(31509,62,310,NULL),(31510,61,310,NULL),(31511,60,310,NULL),(31512,59,310,NULL),(31513,58,310,NULL),(31514,57,310,NULL),(31515,56,310,NULL),(31516,55,310,NULL),(31517,54,310,NULL),(31518,53,310,NULL),(31519,52,310,NULL),(31520,51,310,NULL),(31521,50,310,NULL),(31522,49,310,NULL),(31523,48,310,NULL),(31524,47,310,NULL),(31525,46,310,NULL),(31526,45,310,NULL),(31527,44,310,NULL),(31528,43,310,NULL),(31529,42,310,NULL),(31530,41,310,NULL),(31531,40,310,NULL),(31532,39,310,NULL),(31533,38,310,NULL),(31534,37,310,NULL),(31535,36,310,NULL),(31536,35,310,NULL),(31537,34,310,NULL),(31538,33,310,NULL),(31539,32,310,NULL),(31540,31,310,NULL),(31541,29,310,NULL),(31542,28,310,NULL),(31543,27,310,NULL),(31544,26,310,NULL),(31545,25,310,NULL),(31546,24,310,NULL),(31547,23,310,NULL),(31548,22,310,NULL),(31549,21,310,NULL),(31550,20,310,NULL),(31551,19,310,NULL),(31552,18,310,NULL),(31553,17,310,NULL),(31554,16,310,NULL),(31555,15,310,NULL),(31556,14,310,NULL),(31557,13,310,NULL),(31558,12,310,NULL),(31559,11,310,NULL),(31560,10,310,NULL),(31561,9,310,NULL),(31562,8,310,NULL),(31563,7,310,NULL),(31564,6,310,NULL),(31565,5,310,NULL),(31566,4,310,NULL),(31567,3,310,NULL),(31568,2,310,NULL),(31569,1,310,NULL),(31570,409,36,NULL),(31571,171,36,NULL),(31572,67,36,NULL),(31573,16625,333,NULL),(31574,16579,333,NULL),(31575,16560,333,NULL),(31576,16541,333,NULL),(31577,16556,333,NULL),(31578,16570,333,NULL),(31579,16574,333,NULL),(31580,16550,333,NULL),(31581,3411,333,NULL),(31582,3407,333,NULL),(31583,3360,333,NULL),(31584,2656,333,NULL),(31585,2652,333,NULL),(31586,2574,333,NULL),(31587,2595,333,NULL),(31588,2535,333,NULL),(31589,2506,333,NULL),(31590,2490,333,NULL),(31591,2485,333,NULL),(31592,2352,333,NULL),(31593,2220,333,NULL),(31594,2062,333,NULL),(31595,1929,333,NULL),(31596,1920,333,NULL),(31597,1859,333,NULL),(31598,1832,333,NULL),(31599,1768,333,NULL),(31600,1752,333,NULL),(31601,1725,333,NULL),(31602,1732,333,NULL),(31603,1688,333,NULL),(31604,1679,333,NULL),(31605,1672,333,NULL),(31606,1657,333,NULL),(31607,1572,333,NULL),(31608,1539,333,NULL),(31609,1512,333,NULL),(31610,1486,333,NULL),(31611,1480,333,NULL),(31612,1493,333,NULL),(31613,1470,333,NULL),(31614,1464,333,NULL),(31615,1456,333,NULL),(31616,1461,333,NULL),(31617,1423,333,NULL),(31618,1431,333,NULL),(31619,1351,333,NULL),(31620,1323,333,NULL),(31621,1343,333,NULL),(31622,1342,333,NULL),(31623,1304,333,NULL),(31624,1266,333,NULL),(31625,2215,333,NULL),(31626,1252,333,NULL),(31627,1207,333,NULL),(31628,1185,333,NULL),(31629,1071,333,NULL),(31630,1004,333,NULL),(31631,977,333,NULL),(31632,933,333,NULL),(31633,904,333,NULL),(31634,867,333,NULL),(31635,836,333,NULL),(31636,832,333,NULL),(31637,796,333,NULL),(31638,766,333,NULL),(31639,709,333,NULL),(31640,724,333,NULL),(31641,713,333,NULL),(31642,693,333,NULL),(31643,649,333,NULL),(31644,643,333,NULL),(31645,628,333,NULL),(31646,605,333,NULL),(31647,566,333,NULL),(31648,452,333,NULL),(31649,448,333,NULL),(31650,443,333,NULL),(31651,442,333,NULL),(31652,435,333,NULL),(31653,401,333,NULL),(31654,392,333,NULL),(31655,383,333,NULL),(31656,380,333,NULL),(31657,345,333,NULL),(31658,344,333,NULL),(31659,342,333,NULL),(31660,338,333,NULL),(31661,334,333,NULL),(31662,290,333,NULL),(31663,289,333,NULL),(31664,287,333,NULL),(31665,283,333,NULL),(31666,274,333,NULL),(31667,242,333,NULL),(31668,240,333,NULL),(31669,238,333,NULL),(31670,228,333,NULL),(31671,219,333,NULL),(31672,217,333,NULL),(31673,209,333,NULL),(31674,205,333,NULL),(31675,202,333,NULL),(31676,191,333,NULL),(31677,190,333,NULL),(31678,189,333,NULL),(31679,172,333,NULL),(31680,169,333,NULL),(31681,167,333,NULL),(31682,153,333,NULL),(31683,151,333,NULL),(31684,138,333,NULL),(31685,136,333,NULL),(31686,134,333,NULL),(31687,128,333,NULL),(31688,125,333,NULL),(31689,122,333,NULL),(31690,121,333,NULL),(31691,108,333,NULL),(31692,89,333,NULL),(31693,88,333,NULL),(31694,80,333,NULL),(31695,74,333,NULL),(31696,73,333,NULL),(31697,71,333,NULL),(31698,70,333,NULL),(31699,69,333,NULL),(31700,67,333,NULL),(31701,66,333,NULL),(31702,58,333,NULL),(31703,57,333,NULL),(31704,56,333,NULL),(31705,55,333,NULL),(31706,54,333,NULL),(31707,53,333,NULL),(31708,50,333,NULL),(31709,49,333,NULL),(31710,48,333,NULL),(31711,46,333,NULL),(31712,45,333,NULL),(31713,36,333,NULL),(31714,35,333,NULL),(31715,29,333,NULL),(31716,28,333,NULL),(31717,27,333,NULL),(31718,26,333,NULL),(31719,21,333,NULL),(31720,20,333,NULL),(31721,15,333,NULL),(31722,14,333,NULL),(31723,13,333,NULL),(31724,12,333,NULL),(31725,11,333,NULL),(31726,9,333,NULL),(31727,8,333,NULL),(31728,7,333,NULL),(31729,6,333,NULL),(31730,5,333,NULL),(31731,3,333,NULL),(31732,2,333,NULL),(31733,1,333,NULL),(31734,16634,216,NULL),(31735,16595,216,NULL),(31736,16585,216,NULL),(31737,16625,216,NULL),(31738,16640,216,NULL),(31739,16545,216,NULL),(31740,16574,216,NULL),(31741,3396,216,NULL),(31742,3345,216,NULL),(31743,3375,216,NULL),(31744,3300,216,NULL),(31745,3285,216,NULL),(31746,3289,216,NULL),(31747,3280,216,NULL),(31748,3264,216,NULL),(31749,3281,216,NULL),(31750,3190,216,NULL),(31751,3174,216,NULL),(31752,3162,216,NULL),(31753,3160,216,NULL),(31754,3151,216,NULL),(31755,3146,216,NULL),(31756,3110,216,NULL),(31757,3105,216,NULL),(31758,3066,216,NULL),(31759,3028,216,NULL),(31760,2965,216,NULL),(31761,2942,216,NULL),(31762,2894,216,NULL),(31763,2873,216,NULL),(31764,2874,216,NULL),(31765,2843,216,NULL),(31766,2733,216,NULL),(31767,2652,216,NULL),(31768,2574,216,NULL),(31769,2570,216,NULL),(31770,2579,216,NULL),(31771,2535,216,NULL),(31772,2529,216,NULL),(31773,2523,216,NULL),(31774,2520,216,NULL),(31775,2487,216,NULL),(31776,2485,216,NULL),(31777,2469,216,NULL),(31778,2460,216,NULL),(31779,2427,216,NULL),(31780,2413,216,NULL),(31781,2342,216,NULL),(31782,2364,216,NULL),(31783,2367,216,NULL),(31784,2349,216,NULL),(31785,2235,216,NULL),(31786,2206,216,NULL),(31787,2154,216,NULL),(31788,2161,216,NULL),(31789,2140,216,NULL),(31790,2119,216,NULL),(31791,2106,216,NULL),(31792,2089,216,NULL),(31793,2071,216,NULL),(31794,2037,216,NULL),(31795,2011,216,NULL),(31796,2000,216,NULL),(31797,2006,216,NULL),(31798,1979,216,NULL),(31799,1991,216,NULL),(31800,1929,216,NULL),(31801,1920,216,NULL),(31802,1898,216,NULL),(31803,1910,216,NULL),(31804,1863,216,NULL),(31805,1800,216,NULL),(31806,1790,216,NULL),(31807,1768,216,NULL),(31808,1768,216,NULL),(31809,1780,216,NULL),(31810,1780,216,NULL),(31811,1752,216,NULL),(31812,1732,216,NULL),(31813,1716,216,NULL),(31814,1678,216,NULL),(31815,1678,216,NULL),(31816,1672,216,NULL),(31817,1588,216,NULL),(31818,1588,216,NULL),(31819,1512,216,NULL),(31820,1480,216,NULL),(31821,1480,216,NULL),(31822,1470,216,NULL),(31823,1431,216,NULL),(31824,1431,216,NULL),(31825,1365,216,NULL),(31826,1352,216,NULL),(31827,1351,216,NULL),(31828,1351,216,NULL),(31829,1323,216,NULL),(31830,1342,216,NULL),(31831,1342,216,NULL),(31832,1281,216,NULL),(31833,1726,216,NULL),(31834,1221,216,NULL),(31835,1221,216,NULL),(31836,1208,216,NULL),(31837,1207,216,NULL),(31838,1207,216,NULL),(31839,1313,216,NULL),(31840,1123,216,NULL),(31841,1123,216,NULL),(31842,1109,216,NULL),(31843,1108,216,NULL),(31844,1108,216,NULL),(31845,1094,216,NULL),(31846,1079,216,NULL),(31847,1079,216,NULL),(31848,1079,216,NULL),(31849,1046,216,NULL),(31850,1041,216,NULL),(31851,1041,216,NULL),(31852,992,216,NULL),(31853,978,216,NULL),(31854,977,216,NULL),(31855,509,216,NULL),(31856,509,216,NULL),(31857,930,216,NULL),(31858,930,216,NULL),(31859,930,216,NULL),(31860,914,216,NULL),(31861,914,216,NULL),(31862,912,216,NULL),(31863,912,216,NULL),(31864,904,216,NULL),(31865,904,216,NULL),(31866,860,216,NULL),(31867,860,216,NULL),(31868,848,216,NULL),(31869,704,216,NULL),(31870,704,216,NULL),(31871,771,216,NULL),(31872,728,216,NULL),(31873,728,216,NULL),(31874,724,216,NULL),(31875,713,216,NULL),(31876,713,216,NULL),(31877,643,216,NULL),(31878,605,216,NULL),(31879,605,216,NULL),(31880,557,216,NULL),(31881,557,216,NULL),(31882,507,216,NULL),(31883,485,216,NULL),(31884,485,216,NULL),(31885,455,216,NULL),(31886,441,216,NULL),(31887,416,216,NULL),(31888,416,216,NULL),(31889,416,216,NULL),(31890,392,216,NULL),(31891,389,216,NULL),(31892,368,216,NULL),(31893,368,216,NULL),(31894,368,216,NULL),(31895,367,216,NULL),(31896,363,216,NULL),(31897,349,216,NULL),(31898,349,216,NULL),(31899,344,216,NULL),(31900,344,216,NULL),(31901,342,216,NULL),(31902,342,216,NULL),(31903,326,216,NULL),(31904,303,216,NULL),(31905,303,216,NULL),(31906,283,216,NULL),(31907,283,216,NULL),(31908,283,216,NULL),(31909,268,216,NULL),(31910,268,216,NULL),(31911,268,216,NULL),(31912,258,216,NULL),(31913,231,216,NULL),(31914,231,216,NULL),(31915,229,216,NULL),(31916,225,216,NULL),(31917,225,216,NULL),(31918,219,216,NULL),(31919,217,216,NULL),(31920,217,216,NULL),(31921,209,216,NULL),(31922,204,216,NULL),(31923,204,216,NULL),(31924,204,216,NULL),(31925,169,216,NULL),(31926,154,216,NULL),(31927,136,216,NULL),(31928,121,216,NULL),(31929,121,216,NULL),(31930,119,216,NULL),(31931,119,216,NULL),(31932,118,216,NULL),(31933,118,216,NULL),(31934,118,216,NULL),(31935,88,216,NULL),(31936,88,216,NULL),(31937,88,216,NULL),(31938,81,216,NULL),(31939,81,216,NULL),(31940,74,216,NULL),(31941,69,216,NULL),(31942,69,216,NULL),(31943,60,216,NULL),(31944,58,216,NULL),(31945,58,216,NULL),(31946,58,216,NULL),(31947,55,216,NULL),(31948,42,216,NULL),(31949,35,216,NULL),(31950,35,216,NULL),(31951,33,216,NULL),(31952,26,216,NULL),(31953,26,216,NULL),(31954,26,216,NULL),(31955,9,216,NULL),(31956,7,216,NULL),(31957,7,216,NULL),(31958,1,216,NULL),(31959,3744,216,NULL),(31960,3479,216,NULL),(31961,3767,216,NULL),(31962,4507,216,NULL),(31963,4073,216,NULL),(31964,3793,216,NULL),(31965,4646,216,NULL),(31966,3813,216,NULL),(31967,4307,216,NULL),(31968,4484,216,NULL),(31969,3682,216,NULL),(31970,3554,216,NULL),(31971,3608,216,NULL),(31972,3498,216,NULL),(31973,3846,216,NULL),(31974,3800,216,NULL),(31975,3455,216,NULL),(31976,3541,216,NULL),(31977,3761,216,NULL),(31978,3446,216,NULL),(31979,5664,216,NULL),(31980,5125,216,NULL),(31981,3483,216,NULL),(31982,5152,216,NULL),(31983,3830,216,NULL),(31984,4028,216,NULL),(31985,6210,216,NULL),(31986,5429,216,NULL),(31987,4720,216,NULL),(31988,5017,216,NULL),(31989,3482,216,NULL),(31990,5504,216,NULL),(31991,4750,216,NULL),(31992,3889,216,NULL),(31993,4865,216,NULL),(31994,5491,216,NULL),(31995,4775,216,NULL),(31996,4269,216,NULL),(31997,4302,216,NULL),(31998,16959,216,NULL),(31999,16938,216,NULL),(32000,3484,216,NULL),(32001,3584,216,NULL),(32002,3495,216,NULL),(32003,3505,216,NULL),(32004,3525,216,NULL),(32005,3421,216,NULL),(32006,3529,216,NULL),(32007,3422,216,NULL),(32008,3464,216,NULL),(32009,3417,216,NULL),(32010,3432,216,NULL),(32011,3696,216,NULL),(32012,4317,216,NULL),(32013,3419,216,NULL),(32014,3472,216,NULL),(32015,3590,216,NULL),(32016,4257,216,NULL),(32017,17015,216,NULL),(32018,4480,216,NULL),(32019,4153,216,NULL),(32020,4688,216,NULL),(32021,16991,216,NULL),(32022,3443,216,NULL),(32023,2540,225,NULL),(32024,1343,225,NULL),(32025,875,225,NULL),(32026,442,225,NULL),(32027,441,225,NULL),(32028,367,225,NULL),(32029,349,225,NULL),(32030,287,225,NULL),(32031,283,225,NULL),(32032,217,225,NULL),(32033,209,225,NULL),(32034,189,225,NULL),(32035,153,225,NULL),(32036,121,225,NULL),(32037,77,225,NULL),(32038,74,225,NULL),(32039,33,225,NULL),(32040,26,225,NULL),(32041,9,225,NULL),(32042,1,225,NULL),(32043,3505,41,NULL),(32044,3431,41,NULL),(32045,3711,41,NULL),(32046,3970,41,NULL),(32047,3452,41,NULL),(32048,3422,41,NULL),(32049,3456,41,NULL),(32050,3450,41,NULL),(32051,3417,41,NULL),(32052,3538,41,NULL),(32053,3522,41,NULL),(32054,3577,41,NULL),(32055,3528,41,NULL),(32056,3696,41,NULL),(32057,3419,41,NULL),(32058,3510,41,NULL),(32059,4397,41,NULL),(32060,4920,41,NULL),(32061,5474,41,NULL),(32062,3621,41,NULL),(32063,3611,41,NULL),(32064,3472,41,NULL),(32065,3685,41,NULL),(32066,3842,41,NULL),(32067,3590,41,NULL),(32068,3592,41,NULL),(32069,5256,41,NULL),(32070,5768,41,NULL),(32071,3964,41,NULL),(32072,4161,41,NULL),(32073,4331,41,NULL),(32074,3731,41,NULL),(32075,3476,41,NULL),(32076,3576,41,NULL),(32077,3479,41,NULL),(32078,3424,41,NULL),(32079,3712,41,NULL),(32080,3462,41,NULL),(32081,3518,41,NULL),(32082,4646,41,NULL),(32083,4089,41,NULL),(32084,4186,41,NULL),(32085,3435,41,NULL),(32086,3489,41,NULL),(32087,5472,41,NULL),(32088,3459,41,NULL),(32089,3483,41,NULL),(32090,3830,41,NULL),(32091,4028,41,NULL),(32092,3762,41,NULL),(32093,3993,41,NULL),(32094,4612,41,NULL),(32095,3695,41,NULL),(32096,4506,41,NULL),(32097,4032,41,NULL),(32098,4493,41,NULL),(32099,3833,41,NULL),(32100,3482,41,NULL),(32101,4074,41,NULL),(32102,4170,41,NULL),(32103,4423,41,NULL),(32104,4217,41,NULL),(32105,3948,41,NULL),(32106,4312,41,NULL),(32107,4383,41,NULL),(32108,16557,90,NULL),(32109,16556,90,NULL),(32110,16548,90,NULL),(32111,16589,90,NULL),(32112,3392,90,NULL),(32113,3378,90,NULL),(32114,3370,90,NULL),(32115,3377,90,NULL),(32116,3376,90,NULL),(32117,3345,90,NULL),(32118,3360,90,NULL),(32119,3375,90,NULL),(32120,3330,90,NULL),(32121,3349,90,NULL),(32122,3336,90,NULL),(32123,3300,90,NULL),(32124,3304,90,NULL),(32125,3361,90,NULL),(32126,3306,90,NULL),(32127,3280,90,NULL),(32128,3251,90,NULL),(32129,3250,90,NULL),(32130,3208,90,NULL),(32131,3190,90,NULL),(32132,3210,90,NULL),(32133,3211,90,NULL),(32134,3163,90,NULL),(32135,3151,90,NULL),(32136,3184,90,NULL),(32137,3131,90,NULL),(32138,3110,90,NULL),(32139,3105,90,NULL),(32140,3066,90,NULL),(32141,3043,90,NULL),(32142,3038,90,NULL),(32143,3042,90,NULL),(32144,3031,90,NULL),(32145,3011,90,NULL),(32146,3049,90,NULL),(32147,3005,90,NULL),(32148,2965,90,NULL),(32149,2953,90,NULL),(32150,2948,90,NULL),(32151,2938,90,NULL),(32152,2942,90,NULL),(32153,2914,90,NULL),(32154,2873,90,NULL),(32155,2874,90,NULL),(32156,2849,90,NULL),(32157,2818,90,NULL),(32158,2806,90,NULL),(32159,2807,90,NULL),(32160,2780,90,NULL),(32161,2778,90,NULL),(32162,2709,90,NULL),(32163,2710,90,NULL),(32164,2769,90,NULL),(32165,2698,90,NULL),(32166,2696,90,NULL),(32167,2684,90,NULL),(32168,2658,90,NULL),(32169,2707,90,NULL),(32170,2678,90,NULL),(32171,2610,90,NULL),(32172,2563,90,NULL),(32173,2661,90,NULL),(32174,2551,90,NULL),(32175,2641,90,NULL),(32176,2579,90,NULL),(32177,2583,90,NULL),(32178,2553,90,NULL),(32179,2540,90,NULL),(32180,2537,90,NULL),(32181,2530,90,NULL),(32182,2529,90,NULL),(32183,2523,90,NULL),(32184,2514,90,NULL),(32185,2516,90,NULL),(32186,2503,90,NULL),(32187,2501,90,NULL),(32188,2493,90,NULL),(32189,2491,90,NULL),(32190,2490,90,NULL),(32191,2485,90,NULL),(32192,2467,90,NULL),(32193,2465,90,NULL),(32194,2469,90,NULL),(32195,2463,90,NULL),(32196,2461,90,NULL),(32197,2454,90,NULL),(32198,2458,90,NULL),(32199,2455,90,NULL),(32200,2433,90,NULL),(32201,2416,90,NULL),(32202,2415,90,NULL),(32203,2413,90,NULL),(32204,2406,90,NULL),(32205,2397,90,NULL),(32206,2401,90,NULL),(32207,2379,90,NULL),(32208,2375,90,NULL),(32209,2351,90,NULL),(32210,2343,90,NULL),(32211,2235,90,NULL),(32212,2270,90,NULL),(32213,2275,90,NULL),(32214,2257,90,NULL),(32215,2220,90,NULL),(32216,2206,90,NULL),(32217,2176,90,NULL),(32218,2161,90,NULL),(32219,2140,90,NULL),(32220,2116,90,NULL),(32221,2064,90,NULL),(32222,2044,90,NULL),(32223,2033,90,NULL),(32224,2037,90,NULL),(32225,2017,90,NULL),(32226,2023,90,NULL),(32227,2022,90,NULL),(32228,1980,90,NULL),(32229,1963,90,NULL),(32230,1974,90,NULL),(32231,1930,90,NULL),(32232,1929,90,NULL),(32233,1942,90,NULL),(32234,1920,90,NULL),(32235,1899,90,NULL),(32236,1910,90,NULL),(32237,1909,90,NULL),(32238,1880,90,NULL),(32239,1894,90,NULL),(32240,1863,90,NULL),(32241,1800,90,NULL),(32242,1813,90,NULL),(32243,1812,90,NULL),(32244,1790,90,NULL),(32245,1769,90,NULL),(32246,1768,90,NULL),(32247,1780,90,NULL),(32248,1760,90,NULL),(32249,1765,90,NULL),(32250,1748,90,NULL),(32251,1732,90,NULL),(32252,1704,90,NULL),(32253,1689,90,NULL),(32254,1672,90,NULL),(32255,1684,90,NULL),(32256,1647,90,NULL),(32257,1671,90,NULL),(32258,1652,90,NULL),(32259,1593,90,NULL),(32260,1590,90,NULL),(32261,1551,90,NULL),(32262,1542,90,NULL),(32263,1545,90,NULL),(32264,1531,90,NULL),(32265,1512,90,NULL),(32266,1497,90,NULL),(32267,1470,90,NULL),(32268,1464,90,NULL),(32269,1476,90,NULL),(32270,1478,90,NULL),(32271,1455,90,NULL),(32272,1462,90,NULL),(32273,1444,90,NULL),(32274,1431,90,NULL),(32275,1408,90,NULL),(32276,1403,90,NULL),(32277,1415,90,NULL),(32278,1392,90,NULL),(32279,1400,90,NULL),(32280,1381,90,NULL),(32281,1352,90,NULL),(32282,1323,90,NULL),(32283,1310,90,NULL),(32284,1282,90,NULL),(32285,1277,90,NULL),(32286,1249,90,NULL),(32287,1235,90,NULL),(32288,1233,90,NULL),(32289,1221,90,NULL),(32290,1217,90,NULL),(32291,1207,90,NULL),(32292,1200,90,NULL),(32293,1405,90,NULL),(32294,1957,90,NULL),(32295,1331,90,NULL),(32296,1123,90,NULL),(32297,1109,90,NULL),(32298,1106,90,NULL),(32299,1094,90,NULL),(32300,1092,90,NULL),(32301,1079,90,NULL),(32302,1072,90,NULL),(32303,1071,90,NULL),(32304,1051,90,NULL),(32305,1043,90,NULL),(32306,1029,90,NULL),(32307,1028,90,NULL),(32308,1018,90,NULL),(32309,1012,90,NULL),(32310,980,90,NULL),(32311,978,90,NULL),(32312,977,90,NULL),(32313,509,90,NULL),(32314,962,90,NULL),(32315,951,90,NULL),(32316,930,90,NULL),(32317,921,90,NULL),(32318,918,90,NULL),(32319,916,90,NULL),(32320,912,90,NULL),(32321,896,90,NULL),(32322,884,90,NULL),(32323,875,90,NULL),(32324,873,90,NULL),(32325,860,90,NULL),(32326,848,90,NULL),(32327,846,90,NULL),(32328,834,90,NULL),(32329,641,90,NULL),(32330,827,90,NULL),(32331,805,90,NULL),(32332,798,90,NULL),(32333,796,90,NULL),(32334,704,90,NULL),(32335,773,90,NULL),(32336,753,90,NULL),(32337,739,90,NULL),(32338,719,90,NULL),(32339,692,90,NULL),(32340,670,90,NULL),(32341,632,90,NULL),(32342,624,90,NULL),(32343,567,90,NULL),(32344,561,90,NULL),(32345,507,90,NULL),(32346,502,90,NULL),(32347,501,90,NULL),(32348,476,90,NULL),(32349,461,90,NULL),(32350,455,90,NULL),(32351,451,90,NULL),(32352,441,90,NULL),(32353,440,90,NULL),(32354,438,90,NULL),(32355,416,90,NULL),(32356,415,90,NULL),(32357,414,90,NULL),(32358,410,90,NULL),(32359,401,90,NULL),(32360,400,90,NULL),(32361,392,90,NULL),(32362,389,90,NULL),(32363,386,90,NULL),(32364,383,90,NULL),(32365,380,90,NULL),(32366,378,90,NULL),(32367,374,90,NULL),(32368,373,90,NULL),(32369,367,90,NULL),(32370,350,90,NULL),(32371,349,90,NULL),(32372,347,90,NULL),(32373,345,90,NULL),(32374,344,90,NULL),(32375,342,90,NULL),(32376,338,90,NULL),(32377,326,90,NULL),(32378,303,90,NULL),(32379,301,90,NULL),(32380,300,90,NULL),(32381,299,90,NULL),(32382,295,90,NULL),(32383,292,90,NULL),(32384,290,90,NULL),(32385,283,90,NULL),(32386,278,90,NULL),(32387,274,90,NULL),(32388,268,90,NULL),(32389,263,90,NULL),(32390,258,90,NULL),(32391,242,90,NULL),(32392,241,90,NULL),(32393,239,90,NULL),(32394,238,90,NULL),(32395,231,90,NULL),(32396,228,90,NULL),(32397,227,90,NULL),(32398,220,90,NULL),(32399,219,90,NULL),(32400,217,90,NULL),(32401,215,90,NULL),(32402,209,90,NULL),(32403,206,90,NULL),(32404,205,90,NULL),(32405,204,90,NULL),(32406,203,90,NULL),(32407,202,90,NULL),(32408,201,90,NULL),(32409,200,90,NULL),(32410,191,90,NULL),(32411,190,90,NULL),(32412,189,90,NULL),(32413,179,90,NULL),(32414,172,90,NULL),(32415,169,90,NULL),(32416,168,90,NULL),(32417,167,90,NULL),(32418,164,90,NULL),(32419,162,90,NULL),(32420,160,90,NULL),(32421,153,90,NULL),(32422,151,90,NULL),(32423,149,90,NULL),(32424,148,90,NULL),(32425,147,90,NULL),(32426,137,90,NULL),(32427,136,90,NULL),(32428,135,90,NULL),(32429,134,90,NULL),(32430,128,90,NULL),(32431,125,90,NULL),(32432,122,90,NULL),(32433,121,90,NULL),(32434,120,90,NULL),(32435,118,90,NULL),(32436,108,90,NULL),(32437,104,90,NULL),(32438,100,90,NULL),(32439,97,90,NULL),(32440,93,90,NULL),(32441,88,90,NULL),(32442,83,90,NULL),(32443,81,90,NULL),(32444,80,90,NULL),(32445,79,90,NULL),(32446,77,90,NULL),(32447,76,90,NULL),(32448,75,90,NULL),(32449,74,90,NULL),(32450,70,90,NULL),(32451,69,90,NULL),(32452,68,90,NULL),(32453,67,90,NULL),(32454,66,90,NULL),(32455,58,90,NULL),(32456,56,90,NULL),(32457,55,90,NULL),(32458,53,90,NULL),(32459,51,90,NULL),(32460,50,90,NULL),(32461,49,90,NULL),(32462,48,90,NULL),(32463,47,90,NULL),(32464,46,90,NULL),(32465,44,90,NULL),(32466,43,90,NULL),(32467,42,90,NULL),(32468,41,90,NULL),(32469,39,90,NULL),(32470,38,90,NULL),(32471,35,90,NULL),(32472,34,90,NULL),(32473,33,90,NULL),(32474,32,90,NULL),(32475,30,90,NULL),(32476,29,90,NULL),(32477,28,90,NULL),(32478,27,90,NULL),(32479,26,90,NULL),(32480,24,90,NULL),(32481,23,90,NULL),(32482,22,90,NULL),(32483,21,90,NULL),(32484,20,90,NULL),(32485,19,90,NULL),(32486,17,90,NULL),(32487,15,90,NULL),(32488,14,90,NULL),(32489,13,90,NULL),(32490,12,90,NULL),(32491,11,90,NULL),(32492,10,90,NULL),(32493,9,90,NULL),(32494,7,90,NULL),(32495,6,90,NULL),(32496,4,90,NULL),(32497,3,90,NULL),(32498,2,90,NULL),(32499,1,90,NULL),(32500,3670,90,NULL),(32501,3652,90,NULL),(32502,3468,90,NULL),(32503,3473,90,NULL),(32504,4443,90,NULL),(32505,4210,90,NULL),(32506,4587,90,NULL),(32507,4582,90,NULL),(32508,4620,90,NULL),(32509,4588,90,NULL),(32510,3436,90,NULL),(32511,3531,90,NULL),(32512,3556,90,NULL),(32513,3585,90,NULL),(32514,3837,90,NULL),(32515,3992,90,NULL),(32516,10487,90,NULL),(32517,15085,90,NULL),(32518,3151,41,NULL),(32519,3105,41,NULL),(32520,3046,41,NULL),(32521,2653,41,NULL),(32522,2461,41,NULL),(32523,2149,41,NULL),(32524,1876,41,NULL),(32525,1508,41,NULL),(32526,1461,41,NULL),(32527,1423,41,NULL),(32528,1343,41,NULL),(32529,1290,41,NULL),(32530,1011,41,NULL),(32531,1004,41,NULL),(32532,978,41,NULL),(32533,977,41,NULL),(32534,509,41,NULL),(32535,881,41,NULL),(32536,876,41,NULL),(32537,875,41,NULL),(32538,832,41,NULL),(32539,796,41,NULL),(32540,704,41,NULL),(32541,713,41,NULL),(32542,643,41,NULL),(32543,567,41,NULL),(32544,560,41,NULL),(32545,540,41,NULL),(32546,1721,41,NULL),(32547,485,41,NULL),(32548,441,41,NULL),(32549,438,41,NULL),(32550,413,41,NULL),(32551,374,41,NULL),(32552,371,41,NULL),(32553,367,41,NULL),(32554,342,41,NULL),(32555,338,41,NULL),(32556,287,41,NULL),(32557,283,41,NULL),(32558,268,41,NULL),(32559,263,41,NULL),(32560,258,41,NULL),(32561,238,41,NULL),(32562,234,41,NULL),(32563,231,41,NULL),(32564,219,41,NULL),(32565,217,41,NULL),(32566,209,41,NULL),(32567,203,41,NULL),(32568,191,41,NULL),(32569,190,41,NULL),(32570,187,41,NULL),(32571,172,41,NULL),(32572,169,41,NULL),(32573,167,41,NULL),(32574,153,41,NULL),(32575,151,41,NULL),(32576,148,41,NULL),(32577,141,41,NULL),(32578,136,41,NULL),(32579,122,41,NULL),(32580,121,41,NULL),(32581,92,41,NULL),(32582,81,41,NULL),(32583,75,41,NULL),(32584,73,41,NULL),(32585,70,41,NULL),(32586,67,41,NULL),(32587,66,41,NULL),(32588,58,41,NULL),(32589,56,41,NULL),(32590,54,41,NULL),(32591,53,41,NULL),(32592,46,41,NULL),(32593,40,41,NULL),(32594,39,41,NULL),(32595,35,41,NULL),(32596,34,41,NULL),(32597,33,41,NULL),(32598,31,41,NULL),(32599,29,41,NULL),(32600,26,41,NULL),(32601,20,41,NULL),(32602,18,41,NULL),(32603,15,41,NULL),(32604,14,41,NULL),(32605,11,41,NULL),(32606,9,41,NULL),(32607,7,41,NULL),(32608,4,41,NULL),(32609,3,41,NULL),(32610,1,41,NULL),(32611,16620,150,NULL),(32612,16595,150,NULL),(32613,16560,150,NULL),(32614,16545,150,NULL),(32615,16574,150,NULL),(32616,16645,150,NULL),(32617,16589,150,NULL),(32618,16550,150,NULL),(32619,3411,150,NULL),(32620,3392,150,NULL),(32621,3394,150,NULL),(32622,3356,150,NULL),(32623,3349,150,NULL),(32624,3300,150,NULL),(32625,3285,150,NULL),(32626,3289,150,NULL),(32627,3190,150,NULL),(32628,3169,150,NULL),(32629,3151,150,NULL),(32630,3110,150,NULL),(32631,3105,150,NULL),(32632,3042,150,NULL),(32633,2965,150,NULL),(32634,2894,150,NULL),(32635,2874,150,NULL),(32636,2807,150,NULL),(32637,2780,150,NULL),(32638,2652,150,NULL),(32639,2563,150,NULL),(32640,2559,150,NULL),(32641,2661,150,NULL),(32642,2540,150,NULL),(32643,2529,150,NULL),(32644,2523,150,NULL),(32645,2503,150,NULL),(32646,2487,150,NULL),(32647,2433,150,NULL),(32648,2413,150,NULL),(32649,2396,150,NULL),(32650,2381,150,NULL),(32651,2379,150,NULL),(32652,2235,150,NULL),(32653,2270,150,NULL),(32654,2185,150,NULL),(32655,2176,150,NULL),(32656,2149,150,NULL),(32657,2161,150,NULL),(32658,2071,150,NULL),(32659,2011,150,NULL),(32660,2009,150,NULL),(32661,1930,150,NULL),(32662,1929,150,NULL),(32663,1863,150,NULL),(32664,1861,150,NULL),(32665,1800,150,NULL),(32666,1769,150,NULL),(32667,1768,150,NULL),(32668,1780,150,NULL),(32669,1752,150,NULL),(32670,1672,150,NULL),(32671,1658,150,NULL),(32672,1512,150,NULL),(32673,1480,150,NULL),(32674,1470,150,NULL),(32675,1456,150,NULL),(32676,1460,150,NULL),(32677,1422,150,NULL),(32678,1431,150,NULL),(32679,1408,150,NULL),(32680,1400,150,NULL),(32681,1358,150,NULL),(32682,1726,150,NULL),(32683,1208,150,NULL),(32684,1331,150,NULL),(32685,1143,150,NULL),(32686,1109,150,NULL),(32687,1094,150,NULL),(32688,1018,150,NULL),(32689,992,150,NULL),(32690,977,150,NULL),(32691,509,150,NULL),(32692,930,150,NULL),(32693,921,150,NULL),(32694,916,150,NULL),(32695,904,150,NULL),(32696,881,150,NULL),(32697,848,150,NULL),(32698,813,150,NULL),(32699,798,150,NULL),(32700,704,150,NULL),(32701,771,150,NULL),(32702,717,150,NULL),(32703,713,150,NULL),(32704,658,150,NULL),(32705,643,150,NULL),(32706,605,150,NULL),(32707,560,150,NULL),(32708,541,150,NULL),(32709,441,150,NULL),(32710,438,150,NULL),(32711,416,150,NULL),(32712,363,150,NULL),(32713,344,150,NULL),(32714,304,150,NULL),(32715,283,150,NULL),(32716,241,150,NULL),(32717,238,150,NULL),(32718,231,150,NULL),(32719,229,150,NULL),(32720,219,150,NULL),(32721,215,150,NULL),(32722,209,150,NULL),(32723,206,150,NULL),(32724,191,150,NULL),(32725,172,150,NULL),(32726,169,150,NULL),(32727,167,150,NULL),(32728,164,150,NULL),(32729,136,150,NULL),(32730,134,150,NULL),(32731,125,150,NULL),(32732,122,150,NULL),(32733,100,150,NULL),(32734,94,150,NULL),(32735,88,150,NULL),(32736,84,150,NULL),(32737,83,150,NULL),(32738,75,150,NULL),(32739,70,150,NULL),(32740,69,150,NULL),(32741,67,150,NULL),(32742,66,150,NULL),(32743,58,150,NULL),(32744,55,150,NULL),(32745,54,150,NULL),(32746,53,150,NULL),(32747,51,150,NULL),(32748,50,150,NULL),(32749,46,150,NULL),(32750,45,150,NULL),(32751,42,150,NULL),(32752,38,150,NULL),(32753,36,150,NULL),(32754,35,150,NULL),(32755,34,150,NULL),(32756,33,150,NULL),(32757,31,150,NULL),(32758,28,150,NULL),(32759,27,150,NULL),(32760,26,150,NULL),(32761,22,150,NULL),(32762,20,150,NULL),(32763,19,150,NULL),(32764,17,150,NULL),(32765,14,150,NULL),(32766,13,150,NULL),(32767,12,150,NULL),(32768,11,150,NULL),(32769,9,150,NULL),(32770,7,150,NULL),(32771,5,150,NULL),(32772,3,150,NULL),(32773,2,150,NULL),(32774,1,150,NULL),(32775,16610,54,NULL),(32776,16595,54,NULL),(32777,16570,54,NULL),(32778,16589,54,NULL),(32779,16550,54,NULL),(32780,3345,54,NULL),(32781,3300,54,NULL),(32782,3285,54,NULL),(32783,3289,54,NULL),(32784,3264,54,NULL),(32785,3232,54,NULL),(32786,3190,54,NULL),(32787,3223,54,NULL),(32788,3211,54,NULL),(32789,3174,54,NULL),(32790,3162,54,NULL),(32791,3169,54,NULL),(32792,3151,54,NULL),(32793,3110,54,NULL),(32794,3105,54,NULL),(32795,3066,54,NULL),(32796,3065,54,NULL),(32797,3033,54,NULL),(32798,3042,54,NULL),(32799,3005,54,NULL),(32800,2974,54,NULL),(32801,2942,54,NULL),(32802,2924,54,NULL),(32803,2894,54,NULL),(32804,2859,54,NULL),(32805,2824,54,NULL),(32806,2798,54,NULL),(32807,2698,54,NULL),(32808,2696,54,NULL),(32809,2685,54,NULL),(32810,2683,54,NULL),(32811,2657,54,NULL),(32812,2610,54,NULL),(32813,2574,54,NULL),(32814,2558,54,NULL),(32815,2661,54,NULL),(32816,2579,54,NULL),(32817,2535,54,NULL),(32818,2529,54,NULL),(32819,2523,54,NULL),(32820,2500,54,NULL),(32821,2490,54,NULL),(32822,2460,54,NULL),(32823,2425,54,NULL),(32824,2433,54,NULL),(32825,2429,54,NULL),(32826,2418,54,NULL),(32827,2342,54,NULL),(32828,2390,54,NULL),(32829,2379,54,NULL),(32830,2375,54,NULL),(32831,2367,54,NULL),(32832,2351,54,NULL),(32833,2290,54,NULL),(32834,2289,54,NULL),(32835,2239,54,NULL),(32836,2206,54,NULL),(32837,2108,54,NULL),(32838,2115,54,NULL),(32839,2114,54,NULL),(32840,2095,54,NULL),(32841,2063,54,NULL),(32842,2044,54,NULL),(32843,2053,54,NULL),(32844,2037,54,NULL),(32845,2017,54,NULL),(32846,2011,54,NULL),(32847,2000,54,NULL),(32848,1971,54,NULL),(32849,2006,54,NULL),(32850,1980,54,NULL),(32851,1929,54,NULL),(32852,1920,54,NULL),(32853,1863,54,NULL),(32854,1816,54,NULL),(32855,1800,54,NULL),(32856,1791,54,NULL),(32857,1790,54,NULL),(32858,1768,54,NULL),(32859,1780,54,NULL),(32860,1752,54,NULL),(32861,1748,54,NULL),(32862,1720,54,NULL),(32863,1732,54,NULL),(32864,1718,54,NULL),(32865,1679,54,NULL),(32866,1672,54,NULL),(32867,1684,54,NULL),(32868,1662,54,NULL),(32869,1668,54,NULL),(32870,1641,54,NULL),(32871,1653,54,NULL),(32872,1598,54,NULL),(32873,1588,54,NULL),(32874,1572,54,NULL),(32875,1557,54,NULL),(32876,1512,54,NULL),(32877,1524,54,NULL),(32878,1480,54,NULL),(32879,1492,54,NULL),(32880,1470,54,NULL),(32881,1464,54,NULL),(32882,1476,54,NULL),(32883,1475,54,NULL),(32884,1456,54,NULL),(32885,1422,54,NULL),(32886,1431,54,NULL),(32887,1408,54,NULL),(32888,1415,54,NULL),(32889,1389,54,NULL),(32890,1365,54,NULL),(32891,1352,54,NULL),(32892,1351,54,NULL),(32893,1337,54,NULL),(32894,1358,54,NULL),(32895,1323,54,NULL),(32896,1293,54,NULL),(32897,1282,54,NULL),(32898,1277,54,NULL),(32899,2304,54,NULL),(32900,2215,54,NULL),(32901,1221,54,NULL),(32902,1207,54,NULL),(32903,1944,54,NULL),(32904,1189,54,NULL),(32905,1329,54,NULL),(32906,1143,54,NULL),(32907,1137,54,NULL),(32908,1289,54,NULL),(32909,1108,54,NULL),(32910,1079,54,NULL),(32911,1047,54,NULL),(32912,1043,54,NULL),(32913,1025,54,NULL),(32914,1021,54,NULL),(32915,1004,54,NULL),(32916,997,54,NULL),(32917,977,54,NULL),(32918,509,54,NULL),(32919,950,54,NULL),(32920,931,54,NULL),(32921,912,54,NULL),(32922,905,54,NULL),(32923,901,54,NULL),(32924,877,54,NULL),(32925,876,54,NULL),(32926,875,54,NULL),(32927,860,54,NULL),(32928,844,54,NULL),(32929,841,54,NULL),(32930,832,54,NULL),(32931,797,54,NULL),(32932,790,54,NULL),(32933,704,54,NULL),(32934,771,54,NULL),(32935,746,54,NULL),(32936,739,54,NULL),(32937,735,54,NULL),(32938,733,54,NULL),(32939,682,54,NULL),(32940,643,54,NULL),(32941,567,54,NULL),(32942,557,54,NULL),(32943,547,54,NULL),(32944,518,54,NULL),(32945,516,54,NULL),(32946,503,54,NULL),(32947,496,54,NULL),(32948,485,54,NULL),(32949,476,54,NULL),(32950,455,54,NULL),(32951,451,54,NULL),(32952,448,54,NULL),(32953,441,54,NULL),(32954,414,54,NULL),(32955,412,54,NULL),(32956,402,54,NULL),(32957,394,54,NULL),(32958,392,54,NULL),(32959,383,54,NULL),(32960,374,54,NULL),(32961,367,54,NULL),(32962,350,54,NULL),(32963,349,54,NULL),(32964,347,54,NULL),(32965,345,54,NULL),(32966,344,54,NULL),(32967,338,54,NULL),(32968,322,54,NULL),(32969,300,54,NULL),(32970,283,54,NULL),(32971,278,54,NULL),(32972,273,54,NULL),(32973,268,54,NULL),(32974,260,54,NULL),(32975,242,54,NULL),(32976,240,54,NULL),(32977,238,54,NULL),(32978,234,54,NULL),(32979,231,54,NULL),(32980,228,54,NULL),(32981,219,54,NULL),(32982,217,54,NULL),(32983,216,54,NULL),(32984,215,54,NULL),(32985,213,54,NULL),(32986,209,54,NULL),(32987,206,54,NULL),(32988,202,54,NULL),(32989,200,54,NULL),(32990,198,54,NULL),(32991,191,54,NULL),(32992,190,54,NULL),(32993,169,54,NULL),(32994,167,54,NULL),(32995,153,54,NULL),(32996,152,54,NULL),(32997,151,54,NULL),(32998,148,54,NULL),(32999,136,54,NULL),(33000,134,54,NULL),(33001,131,54,NULL),(33002,130,54,NULL),(33003,128,54,NULL),(33004,125,54,NULL),(33005,123,54,NULL),(33006,122,54,NULL),(33007,121,54,NULL),(33008,120,54,NULL),(33009,119,54,NULL),(33010,118,54,NULL),(33011,100,54,NULL),(33012,94,54,NULL),(33013,93,54,NULL),(33014,90,54,NULL),(33015,88,54,NULL),(33016,81,54,NULL),(33017,78,54,NULL),(33018,77,54,NULL),(33019,75,54,NULL),(33020,74,54,NULL),(33021,73,54,NULL),(33022,72,54,NULL),(33023,70,54,NULL),(33024,69,54,NULL),(33025,67,54,NULL),(33026,66,54,NULL),(33027,64,54,NULL),(33028,63,54,NULL),(33029,62,54,NULL),(33030,60,54,NULL),(33031,58,54,NULL),(33032,56,54,NULL),(33033,55,54,NULL),(33034,53,54,NULL),(33035,52,54,NULL),(33036,51,54,NULL),(33037,50,54,NULL),(33038,49,54,NULL),(33039,48,54,NULL),(33040,47,54,NULL),(33041,46,54,NULL),(33042,45,54,NULL),(33043,43,54,NULL),(33044,42,54,NULL),(33045,41,54,NULL),(33046,40,54,NULL),(33047,39,54,NULL),(33048,36,54,NULL),(33049,35,54,NULL),(33050,34,54,NULL),(33051,33,54,NULL),(33052,31,54,NULL),(33053,28,54,NULL),(33054,27,54,NULL),(33055,26,54,NULL),(33056,22,54,NULL),(33057,20,54,NULL),(33058,17,54,NULL),(33059,15,54,NULL),(33060,14,54,NULL),(33061,13,54,NULL),(33062,12,54,NULL),(33063,11,54,NULL),(33064,9,54,NULL),(33065,8,54,NULL),(33066,7,54,NULL),(33067,5,54,NULL),(33068,4,54,NULL),(33069,3,54,NULL),(33070,1,54,NULL),(33071,3436,54,NULL),(33072,3556,54,NULL),(33073,3560,54,NULL),(33074,3486,54,NULL),(33075,3458,54,NULL),(33076,3418,54,NULL),(33077,3837,54,NULL),(33078,3507,54,NULL),(33079,3474,54,NULL),(33080,3481,54,NULL),(33081,3425,54,NULL),(33082,3647,54,NULL),(33083,3423,54,NULL),(33084,4646,54,NULL),(33085,4089,54,NULL),(33086,3730,54,NULL),(33087,4868,54,NULL),(33088,3877,54,NULL),(33089,3947,54,NULL),(33090,3650,54,NULL),(33091,3435,54,NULL),(33092,4903,54,NULL),(33093,3446,54,NULL),(33094,3739,54,NULL),(33095,5472,54,NULL),(33096,4103,54,NULL),(33097,3504,54,NULL),(33098,4028,54,NULL),(33099,3762,54,NULL),(33100,4934,54,NULL),(33101,4649,54,NULL),(33102,4612,54,NULL),(33103,3695,54,NULL),(33104,4032,54,NULL),(33105,4493,54,NULL),(33106,4767,54,NULL),(33107,4560,54,NULL),(33108,3833,54,NULL),(33109,4074,54,NULL),(33110,4941,54,NULL),(33111,4170,54,NULL),(33112,4423,54,NULL),(33113,4217,54,NULL),(33114,3948,54,NULL),(33115,4383,54,NULL),(33116,3431,54,NULL),(33117,3421,54,NULL),(33118,3914,54,NULL),(33119,3422,54,NULL),(33120,3801,54,NULL),(33121,3468,54,NULL),(33122,3450,54,NULL),(33123,3417,54,NULL),(33124,3750,54,NULL),(33125,3680,54,NULL),(33126,3573,54,NULL),(33127,4397,54,NULL),(33128,4920,54,NULL),(33129,3621,54,NULL),(33130,3472,54,NULL),(33131,4161,54,NULL),(33132,16560,55,NULL),(33133,16556,55,NULL),(33134,16570,55,NULL),(33135,16574,55,NULL),(33136,16589,55,NULL),(33137,16550,55,NULL),(33138,3360,55,NULL),(33139,3354,55,NULL),(33140,3191,55,NULL),(33141,3169,55,NULL),(33142,2765,55,NULL),(33143,2799,55,NULL),(33144,2730,55,NULL),(33145,2653,55,NULL),(33146,2537,55,NULL),(33147,2461,55,NULL),(33148,2460,55,NULL),(33149,2342,55,NULL),(33150,2379,55,NULL),(33151,2239,55,NULL),(33152,2108,55,NULL),(33153,2090,55,NULL),(33154,2024,55,NULL),(33155,1876,55,NULL),(33156,1768,55,NULL),(33157,1752,55,NULL),(33158,1658,55,NULL),(33159,1508,55,NULL),(33160,1461,55,NULL),(33161,1423,55,NULL),(33162,1343,55,NULL),(33163,1342,55,NULL),(33164,1290,55,NULL),(33165,1248,55,NULL),(33166,1079,55,NULL),(33167,1052,55,NULL),(33168,1048,55,NULL),(33169,1011,55,NULL),(33170,1004,55,NULL),(33171,978,55,NULL),(33172,977,55,NULL),(33173,974,55,NULL),(33174,904,55,NULL),(33175,881,55,NULL),(33176,876,55,NULL),(33177,875,55,NULL),(33178,796,55,NULL),(33179,704,55,NULL),(33180,713,55,NULL),(33181,672,55,NULL),(33182,658,55,NULL),(33183,645,55,NULL),(33184,643,55,NULL),(33185,633,55,NULL),(33186,567,55,NULL),(33187,523,55,NULL),(33188,481,55,NULL),(33189,475,55,NULL),(33190,441,55,NULL),(33191,438,55,NULL),(33192,424,55,NULL),(33193,413,55,NULL),(33194,410,55,NULL),(33195,389,55,NULL),(33196,374,55,NULL),(33197,371,55,NULL),(33198,367,55,NULL),(33199,338,55,NULL),(33200,326,55,NULL),(33201,287,55,NULL),(33202,283,55,NULL),(33203,278,55,NULL),(33204,268,55,NULL),(33205,263,55,NULL),(33206,258,55,NULL),(33207,231,55,NULL),(33208,219,55,NULL),(33209,217,55,NULL),(33210,209,55,NULL),(33211,191,55,NULL),(33212,190,55,NULL),(33213,189,55,NULL),(33214,187,55,NULL),(33215,179,55,NULL),(33216,165,55,NULL),(33217,162,55,NULL),(33218,153,55,NULL),(33219,151,55,NULL),(33220,148,55,NULL),(33221,141,55,NULL),(33222,136,55,NULL),(33223,125,55,NULL),(33224,121,55,NULL),(33225,83,55,NULL),(33226,81,55,NULL),(33227,75,55,NULL),(33228,74,55,NULL),(33229,70,55,NULL),(33230,69,55,NULL),(33231,67,55,NULL),(33232,66,55,NULL),(33233,58,55,NULL),(33234,55,55,NULL),(33235,54,55,NULL),(33236,50,55,NULL),(33237,49,55,NULL),(33238,48,55,NULL),(33239,45,55,NULL),(33240,35,55,NULL),(33241,34,55,NULL),(33242,33,55,NULL),(33243,29,55,NULL),(33244,28,55,NULL),(33245,27,55,NULL),(33246,26,55,NULL),(33247,24,55,NULL),(33248,20,55,NULL),(33249,19,55,NULL),(33250,16,55,NULL),(33251,15,55,NULL),(33252,14,55,NULL),(33253,13,55,NULL),(33254,11,55,NULL),(33255,9,55,NULL),(33256,7,55,NULL),(33257,5,55,NULL),(33258,4,55,NULL),(33259,3,55,NULL),(33260,1,55,NULL),(33261,1,346,NULL),(33262,3578,134,NULL),(33263,3700,134,NULL),(33264,4484,134,NULL),(33265,3469,134,NULL),(33266,3493,134,NULL),(33267,3444,134,NULL),(33268,3652,134,NULL),(33269,3417,134,NULL),(33270,4317,134,NULL),(33271,3621,134,NULL),(33272,4629,134,NULL),(33273,5443,134,NULL),(33274,5784,134,NULL),(33275,4105,134,NULL),(33276,4153,134,NULL),(33277,4235,134,NULL),(33278,3498,134,NULL),(33279,4902,134,NULL),(33280,5134,134,NULL),(33281,5429,134,NULL),(33282,4720,134,NULL),(33283,5017,134,NULL),(33284,4750,134,NULL),(33285,3889,134,NULL),(33286,4865,134,NULL),(33287,5512,134,NULL),(33288,4775,134,NULL),(33289,5505,134,NULL),(33290,3980,134,NULL),(33291,4172,134,NULL),(33292,4232,134,NULL),(33293,4269,134,NULL),(33294,4405,134,NULL),(33295,4302,134,NULL),(33296,4662,134,NULL),(33297,15329,134,NULL),(33298,16556,134,NULL),(33299,16545,134,NULL),(33300,16574,134,NULL),(33301,16535,134,NULL),(33302,16550,134,NULL),(33303,3392,134,NULL),(33304,3356,134,NULL),(33305,3340,134,NULL),(33306,3345,134,NULL),(33307,3285,134,NULL),(33308,3289,134,NULL),(33309,3248,134,NULL),(33310,3232,134,NULL),(33311,3190,134,NULL),(33312,3194,134,NULL),(33313,3151,134,NULL),(33314,3184,134,NULL),(33315,3131,134,NULL),(33316,3105,134,NULL),(33317,3099,134,NULL),(33318,3065,134,NULL),(33319,3042,134,NULL),(33320,2996,134,NULL),(33321,2965,134,NULL),(33322,2810,134,NULL),(33323,2778,134,NULL),(33324,2685,134,NULL),(33325,2652,134,NULL),(33326,2570,134,NULL),(33327,2559,134,NULL),(33328,2594,134,NULL),(33329,2579,134,NULL),(33330,2544,134,NULL),(33331,2529,134,NULL),(33332,2523,134,NULL),(33333,2460,134,NULL),(33334,2418,134,NULL),(33335,2413,134,NULL),(33336,2396,134,NULL),(33337,2379,134,NULL),(33338,2235,134,NULL),(33339,2206,134,NULL),(33340,2185,134,NULL),(33341,2176,134,NULL),(33342,2161,134,NULL),(33343,2000,134,NULL),(33344,1971,134,NULL),(33345,2006,134,NULL),(33346,1961,134,NULL),(33347,1893,134,NULL),(33348,1791,134,NULL),(33349,1790,134,NULL),(33350,1769,134,NULL),(33351,1768,134,NULL),(33352,1780,134,NULL),(33353,1748,134,NULL),(33354,1732,134,NULL),(33355,1658,134,NULL),(33356,1588,134,NULL),(33357,1572,134,NULL),(33358,1528,134,NULL),(33359,1524,134,NULL),(33360,1480,134,NULL),(33361,1456,134,NULL),(33362,1431,134,NULL),(33363,1408,134,NULL),(33364,1413,134,NULL),(33365,1400,134,NULL),(33366,1352,134,NULL),(33367,1358,134,NULL),(33368,1323,134,NULL),(33369,1319,134,NULL),(33370,1221,134,NULL),(33371,1208,134,NULL),(33372,1287,134,NULL),(33373,1109,134,NULL),(33374,1108,134,NULL),(33375,1094,134,NULL),(33376,1051,134,NULL),(33377,1042,134,NULL),(33378,1018,134,NULL),(33379,992,134,NULL),(33380,978,134,NULL),(33381,509,134,NULL),(33382,965,134,NULL),(33383,946,134,NULL),(33384,930,134,NULL),(33385,916,134,NULL),(33386,904,134,NULL),(33387,877,134,NULL),(33388,848,134,NULL),(33389,841,134,NULL),(33390,797,134,NULL),(33391,785,134,NULL),(33392,704,134,NULL),(33393,590,134,NULL),(33394,589,134,NULL),(33395,744,134,NULL),(33396,709,134,NULL),(33397,724,134,NULL),(33398,713,134,NULL),(33399,658,134,NULL),(33400,643,134,NULL),(33401,594,134,NULL),(33402,575,134,NULL),(33403,560,134,NULL),(33404,557,134,NULL),(33405,547,134,NULL),(33406,441,134,NULL),(33407,413,134,NULL),(33408,409,134,NULL),(33409,367,134,NULL),(33410,363,134,NULL),(33411,344,134,NULL),(33412,326,134,NULL),(33413,303,134,NULL),(33414,287,134,NULL),(33415,283,134,NULL),(33416,268,134,NULL),(33417,260,134,NULL),(33418,258,134,NULL),(33419,242,134,NULL),(33420,238,134,NULL),(33421,219,134,NULL),(33422,217,134,NULL),(33423,215,134,NULL),(33424,209,134,NULL),(33425,206,134,NULL),(33426,169,134,NULL),(33427,162,134,NULL),(33428,155,134,NULL),(33429,152,134,NULL),(33430,145,134,NULL),(33431,144,134,NULL),(33432,137,134,NULL),(33433,136,134,NULL),(33434,125,134,NULL),(33435,122,134,NULL),(33436,112,134,NULL),(33437,100,134,NULL),(33438,94,134,NULL),(33439,88,134,NULL),(33440,84,134,NULL),(33441,78,134,NULL),(33442,77,134,NULL),(33443,76,134,NULL),(33444,75,134,NULL),(33445,74,134,NULL),(33446,70,134,NULL),(33447,69,134,NULL),(33448,66,134,NULL),(33449,58,134,NULL),(33450,56,134,NULL),(33451,54,134,NULL),(33452,53,134,NULL),(33453,52,134,NULL),(33454,51,134,NULL),(33455,50,134,NULL),(33456,40,134,NULL),(33457,39,134,NULL),(33458,38,134,NULL),(33459,35,134,NULL),(33460,33,134,NULL),(33461,32,134,NULL),(33462,28,134,NULL),(33463,27,134,NULL),(33464,26,134,NULL),(33465,22,134,NULL),(33466,20,134,NULL),(33467,13,134,NULL),(33468,11,134,NULL),(33469,9,134,NULL),(33470,7,134,NULL),(33471,5,134,NULL),(33472,4,134,NULL),(33473,1,134,NULL),(33474,16634,345,NULL),(33475,16610,345,NULL),(33476,16595,345,NULL),(33477,16625,345,NULL),(33478,16579,345,NULL),(33479,16560,345,NULL),(33480,16541,345,NULL),(33481,16556,345,NULL),(33482,16570,345,NULL),(33483,16574,345,NULL),(33484,16589,345,NULL),(33485,16550,345,NULL),(33486,3411,345,NULL),(33487,3364,345,NULL),(33488,3356,345,NULL),(33489,3386,345,NULL),(33490,3360,345,NULL),(33491,3306,345,NULL),(33492,3191,345,NULL),(33493,3169,345,NULL),(33494,3108,345,NULL),(33495,2730,345,NULL),(33496,2537,345,NULL),(33497,2461,345,NULL),(33498,2379,345,NULL),(33499,2260,345,NULL),(33500,2033,345,NULL),(33501,1423,345,NULL),(33502,1371,345,NULL),(33503,1358,345,NULL),(33504,1343,345,NULL),(33505,1122,345,NULL),(33506,884,345,NULL),(33507,867,345,NULL),(33508,796,345,NULL),(33509,665,345,NULL),(33510,643,345,NULL),(33511,539,345,NULL),(33512,523,345,NULL),(33513,239,345,NULL),(33514,217,345,NULL),(33515,209,345,NULL),(33516,190,345,NULL),(33517,169,345,NULL),(33518,27,345,NULL),(33519,26,345,NULL),(33520,21,345,NULL),(33521,20,345,NULL),(33522,14,345,NULL),(33523,13,345,NULL),(33524,11,345,NULL),(33525,9,345,NULL),(33526,7,345,NULL),(33527,3,345,NULL),(33528,1,345,NULL),(33529,16560,329,NULL),(33530,16556,329,NULL),(33531,3411,329,NULL),(33532,3402,329,NULL),(33533,3407,329,NULL),(33534,3408,329,NULL),(33535,3345,329,NULL),(33536,2730,329,NULL),(33537,2578,329,NULL),(33538,2535,329,NULL),(33539,2485,329,NULL),(33540,2390,329,NULL),(33541,2335,329,NULL),(33542,2095,329,NULL),(33543,1768,329,NULL),(33544,1732,329,NULL),(33545,1679,329,NULL),(33546,1508,329,NULL),(33547,1456,329,NULL),(33548,1431,329,NULL),(33549,1323,329,NULL),(33550,1343,329,NULL),(33551,1342,329,NULL),(33552,2215,329,NULL),(33553,1207,329,NULL),(33554,1154,329,NULL),(33555,1137,329,NULL),(33556,1122,329,NULL),(33557,1103,329,NULL),(33558,1089,329,NULL),(33559,1078,329,NULL),(33560,1071,329,NULL),(33561,1051,329,NULL),(33562,977,329,NULL),(33563,976,329,NULL),(33564,509,329,NULL),(33565,961,329,NULL),(33566,933,329,NULL),(33567,922,329,NULL),(33568,917,329,NULL),(33569,905,329,NULL),(33570,896,329,NULL),(33571,867,329,NULL),(33572,832,329,NULL),(33573,824,329,NULL),(33574,796,329,NULL),(33575,704,329,NULL),(33576,771,329,NULL),(33577,762,329,NULL),(33578,747,329,NULL),(33579,744,329,NULL),(33580,709,329,NULL),(33581,728,329,NULL),(33582,724,329,NULL),(33583,693,329,NULL),(33584,674,329,NULL),(33585,657,329,NULL),(33586,645,329,NULL),(33587,643,329,NULL),(33588,605,329,NULL),(33589,557,329,NULL),(33590,521,329,NULL),(33591,520,329,NULL),(33592,496,329,NULL),(33593,476,329,NULL),(33594,461,329,NULL),(33595,443,329,NULL),(33596,434,329,NULL),(33597,412,329,NULL),(33598,405,329,NULL),(33599,392,329,NULL),(33600,374,329,NULL),(33601,367,329,NULL),(33602,345,329,NULL),(33603,344,329,NULL),(33604,342,329,NULL),(33605,338,329,NULL),(33606,334,329,NULL),(33607,328,329,NULL),(33608,326,329,NULL),(33609,283,329,NULL),(33610,274,329,NULL),(33611,268,329,NULL),(33612,258,329,NULL),(33613,242,329,NULL),(33614,238,329,NULL),(33615,231,329,NULL),(33616,217,329,NULL),(33617,209,329,NULL),(33618,202,329,NULL),(33619,201,329,NULL),(33620,191,329,NULL),(33621,190,329,NULL),(33622,189,329,NULL),(33623,172,329,NULL),(33624,171,329,NULL),(33625,169,329,NULL),(33626,167,329,NULL),(33627,153,329,NULL),(33628,151,329,NULL),(33629,145,329,NULL),(33630,144,329,NULL),(33631,136,329,NULL),(33632,125,329,NULL),(33633,122,329,NULL),(33634,121,329,NULL),(33635,100,329,NULL),(33636,94,329,NULL),(33637,88,329,NULL),(33638,83,329,NULL),(33639,80,329,NULL),(33640,74,329,NULL),(33641,70,329,NULL),(33642,69,329,NULL),(33643,66,329,NULL),(33644,58,329,NULL),(33645,55,329,NULL),(33646,50,329,NULL),(33647,48,329,NULL),(33648,35,329,NULL),(33649,33,329,NULL),(33650,28,329,NULL),(33651,27,329,NULL),(33652,26,329,NULL),(33653,21,329,NULL),(33654,20,329,NULL),(33655,17,329,NULL),(33656,15,329,NULL),(33657,14,329,NULL),(33658,13,329,NULL),(33659,12,329,NULL),(33660,9,329,NULL),(33661,6,329,NULL),(33662,4,329,NULL),(33663,3,329,NULL),(33664,2,329,NULL),(33665,1,329,NULL),(33666,16595,350,NULL),(33667,3274,350,NULL),(33668,3110,350,NULL),(33669,2806,350,NULL),(33670,2778,350,NULL),(33671,2769,350,NULL),(33672,2730,350,NULL),(33673,2563,350,NULL),(33674,2540,350,NULL),(33675,2537,350,NULL),(33676,2469,350,NULL),(33677,2461,350,NULL),(33678,2206,350,NULL),(33679,2071,350,NULL),(33680,2011,350,NULL),(33681,2006,350,NULL),(33682,1929,350,NULL),(33683,1838,350,NULL),(33684,1812,350,NULL),(33685,1590,350,NULL),(33686,1539,350,NULL),(33687,1512,350,NULL),(33688,1480,350,NULL),(33689,1461,350,NULL),(33690,1423,350,NULL),(33691,1431,350,NULL),(33692,1343,350,NULL),(33693,1295,350,NULL),(33694,1281,350,NULL),(33695,2215,350,NULL),(33696,1260,350,NULL),(33697,1299,350,NULL),(33698,1051,350,NULL),(33699,509,350,NULL),(33700,904,350,NULL),(33701,877,350,NULL),(33702,867,350,NULL),(33703,832,350,NULL),(33704,796,350,NULL),(33705,704,350,NULL),(33706,766,350,NULL),(33707,689,350,NULL),(33708,658,350,NULL),(33709,643,350,NULL),(33710,633,350,NULL),(33711,566,350,NULL),(33712,523,350,NULL),(33713,485,350,NULL),(33714,448,350,NULL),(33715,442,350,NULL),(33716,441,350,NULL),(33717,374,350,NULL),(33718,367,350,NULL),(33719,349,350,NULL),(33720,345,350,NULL),(33721,342,350,NULL),(33722,326,350,NULL),(33723,287,350,NULL),(33724,268,350,NULL),(33725,238,350,NULL),(33726,231,350,NULL),(33727,219,350,NULL),(33728,217,350,NULL),(33729,209,350,NULL),(33730,189,350,NULL),(33731,169,350,NULL),(33732,153,350,NULL),(33733,151,350,NULL),(33734,136,350,NULL),(33735,16595,204,NULL),(33736,121,350,NULL),(33737,3274,204,NULL),(33738,74,350,NULL),(33739,74,350,NULL),(33740,3110,204,NULL),(33741,2806,204,NULL),(33742,70,350,NULL),(33743,70,350,NULL),(33744,69,350,NULL),(33745,2778,204,NULL),(33746,2769,204,NULL),(33747,67,350,NULL),(33748,66,350,NULL),(33749,66,350,NULL),(33750,2730,204,NULL),(33751,58,350,NULL),(33752,2563,204,NULL),(33753,50,350,NULL),(33754,50,350,NULL),(33755,2540,204,NULL),(33756,43,350,NULL),(33757,43,350,NULL),(33758,2537,204,NULL),(33759,38,350,NULL),(33760,38,350,NULL),(33761,2469,204,NULL),(33762,35,350,NULL),(33763,2461,204,NULL),(33764,33,350,NULL),(33765,2206,204,NULL),(33766,29,350,NULL),(33767,2071,204,NULL),(33768,28,350,NULL),(33769,28,350,NULL),(33770,2011,204,NULL),(33771,26,350,NULL),(33772,20,350,NULL),(33773,2006,204,NULL),(33774,13,350,NULL),(33775,1929,204,NULL),(33776,11,350,NULL),(33777,1838,204,NULL),(33778,9,350,NULL),(33779,1812,204,NULL),(33780,1590,204,NULL),(33781,7,350,NULL),(33782,7,350,NULL),(33783,1539,204,NULL),(33784,1,350,NULL),(33785,1512,204,NULL),(33786,1,350,NULL),(33787,1480,204,NULL),(33788,1461,204,NULL),(33789,1423,204,NULL),(33790,1431,204,NULL),(33791,1343,204,NULL),(33792,1295,204,NULL),(33793,1281,204,NULL),(33794,2215,204,NULL),(33795,1260,204,NULL),(33796,1299,204,NULL),(33797,1051,204,NULL),(33798,509,204,NULL),(33799,904,204,NULL),(33800,877,204,NULL),(33801,867,204,NULL),(33802,832,204,NULL),(33803,796,204,NULL),(33804,704,204,NULL),(33805,766,204,NULL),(33806,689,204,NULL),(33807,658,204,NULL),(33808,643,204,NULL),(33809,633,204,NULL),(33810,566,204,NULL),(33811,523,204,NULL),(33812,485,204,NULL),(33813,448,204,NULL),(33814,442,204,NULL),(33815,441,204,NULL),(33816,374,204,NULL),(33817,367,204,NULL),(33818,349,204,NULL),(33819,345,204,NULL),(33820,342,204,NULL),(33821,326,204,NULL),(33822,287,204,NULL),(33823,268,204,NULL),(33824,238,204,NULL),(33825,231,204,NULL),(33826,219,204,NULL),(33827,217,204,NULL),(33828,209,204,NULL),(33829,189,204,NULL),(33830,169,204,NULL),(33831,153,204,NULL),(33832,151,204,NULL),(33833,136,204,NULL),(33834,121,204,NULL),(33835,74,204,NULL),(33836,70,204,NULL),(33837,69,204,NULL),(33838,67,204,NULL),(33839,66,204,NULL),(33840,58,204,NULL),(33841,50,204,NULL),(33842,43,204,NULL),(33843,38,204,NULL),(33844,35,204,NULL),(33845,33,204,NULL),(33846,29,204,NULL),(33847,28,204,NULL),(33848,26,204,NULL),(33849,20,204,NULL),(33850,13,204,NULL),(33851,11,204,NULL),(33852,9,204,NULL),(33853,7,204,NULL),(33854,1,204,NULL),(33855,16620,62,NULL),(33856,16585,62,NULL),(33857,16579,62,NULL),(33858,16574,62,NULL),(33859,16589,62,NULL),(33860,16550,62,NULL),(33861,3411,62,NULL),(33862,3407,62,NULL),(33863,3364,62,NULL),(33864,3412,62,NULL),(33865,3345,62,NULL),(33866,3360,62,NULL),(33867,3354,62,NULL),(33868,3349,62,NULL),(33869,3365,62,NULL),(33870,3361,62,NULL),(33871,3110,62,NULL),(33872,2799,62,NULL),(33873,2710,62,NULL),(33874,2540,62,NULL),(33875,2537,62,NULL),(33876,2461,62,NULL),(33877,2390,62,NULL),(33878,1967,62,NULL),(33879,1461,62,NULL),(33880,1346,62,NULL),(33881,1143,62,NULL),(33882,1108,62,NULL),(33883,1004,62,NULL),(33884,978,62,NULL),(33885,704,62,NULL),(33886,771,62,NULL),(33887,713,62,NULL),(33888,540,62,NULL),(33889,475,62,NULL),(33890,438,62,NULL),(33891,413,62,NULL),(33892,389,62,NULL),(33893,344,62,NULL),(33894,219,62,NULL),(33895,209,62,NULL),(33896,206,62,NULL),(33897,187,62,NULL),(33898,151,62,NULL),(33899,125,62,NULL),(33900,88,62,NULL),(33901,69,62,NULL),(33902,56,62,NULL),(33903,27,62,NULL),(33904,26,62,NULL),(33905,14,62,NULL),(33906,13,62,NULL),(33907,9,62,NULL),(33908,7,62,NULL),(33909,1,62,NULL),(33910,3469,62,NULL),(33911,3972,62,NULL),(33912,3904,62,NULL),(33913,4027,62,NULL),(33914,3468,62,NULL),(33915,3419,62,NULL),(33916,5474,62,NULL),(33917,4587,62,NULL),(33918,3442,62,NULL),(33919,3552,62,NULL),(33920,3749,62,NULL),(33921,16610,355,NULL),(33922,16595,355,NULL),(33923,16579,355,NULL),(33924,16556,355,NULL),(33925,16574,355,NULL),(33926,3411,355,NULL),(33927,3402,355,NULL),(33928,867,355,NULL),(33929,665,355,NULL),(33930,190,355,NULL),(33931,169,355,NULL),(33932,16570,352,NULL),(33933,3364,352,NULL),(33934,2965,352,NULL),(33935,2607,352,NULL),(33936,2535,352,NULL),(33937,2506,352,NULL),(33938,2490,352,NULL),(33939,2461,352,NULL),(33940,2390,352,NULL),(33941,2352,352,NULL),(33942,2130,352,NULL),(33943,2095,352,NULL),(33944,2062,352,NULL),(33945,1859,352,NULL),(33946,1832,352,NULL),(33947,1768,352,NULL),(33948,1748,352,NULL),(33949,1732,352,NULL),(33950,1679,352,NULL),(33951,1657,352,NULL),(33952,1636,352,NULL),(33953,1572,352,NULL),(33954,1512,352,NULL),(33955,1493,352,NULL),(33956,1456,352,NULL),(33957,1431,352,NULL),(33958,1323,352,NULL),(33959,1342,352,NULL),(33960,2215,352,NULL),(33961,1252,352,NULL),(33962,1207,352,NULL),(33963,1071,352,NULL),(33964,1004,352,NULL),(33965,977,352,NULL),(33966,933,352,NULL),(33967,867,352,NULL),(33968,832,352,NULL),(33969,796,352,NULL),(33970,700,352,NULL),(33971,709,352,NULL),(33972,735,352,NULL),(33973,724,352,NULL),(33974,693,352,NULL),(33975,665,352,NULL),(33976,649,352,NULL),(33977,643,352,NULL),(33978,605,352,NULL),(33979,566,352,NULL),(33980,541,352,NULL),(33981,525,352,NULL),(33982,452,352,NULL),(33983,450,352,NULL),(33984,443,352,NULL),(33985,435,352,NULL),(33986,412,352,NULL),(33987,401,352,NULL),(33988,394,352,NULL),(33989,392,352,NULL),(33990,380,352,NULL),(33991,345,352,NULL),(33992,344,352,NULL),(33993,342,352,NULL),(33994,338,352,NULL),(33995,334,352,NULL),(33996,328,352,NULL),(33997,283,352,NULL),(33998,274,352,NULL),(33999,240,352,NULL),(34000,238,352,NULL),(34001,206,352,NULL),(34002,191,352,NULL),(34003,190,352,NULL),(34004,189,352,NULL),(34005,172,352,NULL),(34006,171,352,NULL),(34007,169,352,NULL),(34008,167,352,NULL),(34009,153,352,NULL),(34010,151,352,NULL),(34011,135,352,NULL),(34012,134,352,NULL),(34013,125,352,NULL),(34014,123,352,NULL),(34015,122,352,NULL),(34016,121,352,NULL),(34017,104,352,NULL),(34018,88,352,NULL),(34019,80,352,NULL),(34020,76,352,NULL),(34021,70,352,NULL),(34022,69,352,NULL),(34023,68,352,NULL),(34024,67,352,NULL),(34025,66,352,NULL),(34026,62,352,NULL),(34027,58,352,NULL),(34028,55,352,NULL),(34029,50,352,NULL),(34030,45,352,NULL),(34031,42,352,NULL),(34032,36,352,NULL),(34033,35,352,NULL),(34034,30,352,NULL),(34035,29,352,NULL),(34036,28,352,NULL),(34037,27,352,NULL),(34038,26,352,NULL),(34039,21,352,NULL),(34040,20,352,NULL),(34041,15,352,NULL),(34042,14,352,NULL),(34043,13,352,NULL),(34044,12,352,NULL),(34045,11,352,NULL),(34046,9,352,NULL),(34047,7,352,NULL),(34048,6,352,NULL),(34049,3,352,NULL),(34050,2,352,NULL),(34051,1,352,NULL),(34052,3396,52,NULL),(34053,3345,52,NULL),(34054,3255,52,NULL),(34055,3254,52,NULL),(34056,3194,52,NULL),(34057,3110,52,NULL),(34058,3033,52,NULL),(34059,2965,52,NULL),(34060,2974,52,NULL),(34061,2894,52,NULL),(34062,2843,52,NULL),(34063,2799,52,NULL),(34064,2698,52,NULL),(34065,2678,52,NULL),(34066,2574,52,NULL),(34067,2595,52,NULL),(34068,2579,52,NULL),(34069,2582,52,NULL),(34070,2529,52,NULL),(34071,2523,52,NULL),(34072,2498,52,NULL),(34073,2460,52,NULL),(34074,2418,52,NULL),(34075,2396,52,NULL),(34076,2379,52,NULL),(34077,2239,52,NULL),(34078,2206,52,NULL),(34079,2149,52,NULL),(34080,2126,52,NULL),(34081,2125,52,NULL),(34082,2053,52,NULL),(34083,1929,52,NULL),(34084,1877,52,NULL),(34085,1800,52,NULL),(34086,1768,52,NULL),(34087,1780,52,NULL),(34088,1752,52,NULL),(34089,1598,52,NULL),(34090,1572,52,NULL),(34091,1518,52,NULL),(34092,1524,52,NULL),(34093,1461,52,NULL),(34094,1460,52,NULL),(34095,1431,52,NULL),(34096,1358,52,NULL),(34097,1207,52,NULL),(34098,1200,52,NULL),(34099,1550,52,NULL),(34100,1289,52,NULL),(34101,1025,52,NULL),(34102,1021,52,NULL),(34103,1004,52,NULL),(34104,509,52,NULL),(34105,931,52,NULL),(34106,881,52,NULL),(34107,819,52,NULL),(34108,790,52,NULL),(34109,771,52,NULL),(34110,713,52,NULL),(34111,647,52,NULL),(34112,485,52,NULL),(34113,412,52,NULL),(34114,409,52,NULL),(34115,394,52,NULL),(34116,392,52,NULL),(34117,383,52,NULL),(34118,374,52,NULL),(34119,344,52,NULL),(34120,342,52,NULL),(34121,338,52,NULL),(34122,326,52,NULL),(34123,300,52,NULL),(34124,287,52,NULL),(34125,260,52,NULL),(34126,242,52,NULL),(34127,238,52,NULL),(34128,237,52,NULL),(34129,217,52,NULL),(34130,209,52,NULL),(34131,191,52,NULL),(34132,167,52,NULL),(34133,151,52,NULL),(34134,137,52,NULL),(34135,136,52,NULL),(34136,122,52,NULL),(34137,121,52,NULL),(34138,88,52,NULL),(34139,78,52,NULL),(34140,70,52,NULL),(34141,69,52,NULL),(34142,66,52,NULL),(34143,64,52,NULL),(34144,63,52,NULL),(34145,62,52,NULL),(34146,42,52,NULL),(34147,41,52,NULL),(34148,35,52,NULL),(34149,34,52,NULL),(34150,27,52,NULL),(34151,26,52,NULL),(34152,14,52,NULL),(34153,13,52,NULL),(34154,11,52,NULL),(34155,9,52,NULL),(34156,5,52,NULL),(34157,3,52,NULL),(34158,1,52,NULL),(34159,1539,358,NULL),(34160,1480,358,NULL),(34161,867,358,NULL),(34162,832,358,NULL),(34163,704,358,NULL),(34164,766,358,NULL),(34165,658,358,NULL),(34166,566,358,NULL),(34167,448,358,NULL),(34168,442,358,NULL),(34169,441,358,NULL),(34170,287,358,NULL),(34171,217,358,NULL),(34172,209,358,NULL),(34173,121,358,NULL),(34174,74,358,NULL),(34175,35,358,NULL),(34176,26,358,NULL),(34177,9,358,NULL),(34178,1,358,NULL),(34179,2537,359,NULL),(34180,1838,359,NULL),(34181,1590,359,NULL),(34182,1539,359,NULL),(34183,1480,359,NULL),(34184,1423,359,NULL),(34185,1343,359,NULL),(34186,2215,359,NULL),(34187,1260,359,NULL),(34188,867,359,NULL),(34189,832,359,NULL),(34190,704,359,NULL),(34191,766,359,NULL),(34192,658,359,NULL),(34193,566,359,NULL),(34194,523,359,NULL),(34195,442,359,NULL),(34196,374,359,NULL),(34197,349,359,NULL),(34198,287,359,NULL),(34199,279,359,NULL),(34200,217,359,NULL),(34201,209,359,NULL),(34202,189,359,NULL),(34203,153,359,NULL),(34204,121,359,NULL),(34205,77,359,NULL),(34206,74,359,NULL),(34207,69,359,NULL),(34208,35,359,NULL),(34209,33,359,NULL),(34210,26,359,NULL),(34211,9,359,NULL),(34212,1,359,NULL),(34213,17184,360,NULL),(34214,1926,158,NULL),(34215,1905,158,NULL),(34216,623,158,NULL),(34217,3341,122,NULL),(34218,1920,122,NULL),(34219,459,122,NULL),(34220,409,122,NULL),(34221,389,122,NULL),(34222,344,122,NULL),(34223,44,122,NULL),(34224,15,122,NULL),(34225,219,122,NULL),(34226,108,122,NULL),(34227,16585,362,NULL),(34228,3340,362,NULL),(34229,3285,362,NULL),(34230,3289,362,NULL),(34231,3280,362,NULL),(34232,3190,362,NULL),(34233,3210,362,NULL),(34234,3146,362,NULL),(34235,3110,362,NULL),(34236,3099,362,NULL),(34237,2965,362,NULL),(34238,2974,362,NULL),(34239,2942,362,NULL),(34240,2894,362,NULL),(34241,2824,362,NULL),(34242,2798,362,NULL),(34243,2778,362,NULL),(34244,2769,362,NULL),(34245,2656,362,NULL),(34246,2652,362,NULL),(34247,2678,362,NULL),(34248,2574,362,NULL),(34249,2578,362,NULL),(34250,2553,362,NULL),(34251,2535,362,NULL),(34252,2529,362,NULL),(34253,2520,362,NULL),(34254,2506,362,NULL),(34255,2490,362,NULL),(34256,2390,362,NULL),(34257,2373,362,NULL),(34258,2235,362,NULL),(34259,2185,362,NULL),(34260,2114,362,NULL),(34261,2037,362,NULL),(34262,2011,362,NULL),(34263,2000,362,NULL),(34264,2000,362,NULL),(34265,2006,362,NULL),(34266,1979,362,NULL),(34267,1979,362,NULL),(34268,1967,362,NULL),(34269,1967,362,NULL),(34270,1945,362,NULL),(34271,1929,362,NULL),(34272,1929,362,NULL),(34273,1920,362,NULL),(34274,1920,362,NULL),(34275,1859,362,NULL),(34276,1859,362,NULL),(34277,1832,362,NULL),(34278,1832,362,NULL),(34279,1844,362,NULL),(34280,1844,362,NULL),(34281,1816,362,NULL),(34282,1816,362,NULL),(34283,1768,362,NULL),(34284,1732,362,NULL),(34285,1732,362,NULL),(34286,1678,362,NULL),(34287,1672,362,NULL),(34288,1684,362,NULL),(34289,1684,362,NULL),(34290,1662,362,NULL),(34291,1652,362,NULL),(34292,1652,362,NULL),(34293,1592,362,NULL),(34294,1592,362,NULL),(34295,1576,362,NULL),(34296,1572,362,NULL),(34297,1553,362,NULL),(34298,1556,362,NULL),(34299,1556,362,NULL),(34300,1539,362,NULL),(34301,1512,362,NULL),(34302,1512,362,NULL),(34303,1480,362,NULL),(34304,1491,362,NULL),(34305,1491,362,NULL),(34306,1470,362,NULL),(34307,1470,362,NULL),(34308,1464,362,NULL),(34309,1475,362,NULL),(34310,1475,362,NULL),(34311,1431,362,NULL),(34312,1365,362,NULL),(34313,1351,362,NULL),(34314,1346,362,NULL),(34315,1309,362,NULL),(34316,1304,362,NULL),(34317,1295,362,NULL),(34318,1252,362,NULL),(34319,1550,362,NULL),(34320,1935,362,NULL),(34321,1154,362,NULL),(34322,1313,362,NULL),(34323,1108,362,NULL),(34324,1071,362,NULL),(34325,989,362,NULL),(34326,977,362,NULL),(34327,961,362,NULL),(34328,961,362,NULL),(34329,867,362,NULL),(34330,867,362,NULL),(34331,832,362,NULL),(34332,832,362,NULL),(34333,796,362,NULL),(34334,796,362,NULL),(34335,704,362,NULL),(34336,704,362,NULL),(34337,771,362,NULL),(34338,771,362,NULL),(34339,766,362,NULL),(34340,766,362,NULL),(34341,709,362,NULL),(34342,709,362,NULL),(34343,728,362,NULL),(34344,728,362,NULL),(34345,643,362,NULL),(34346,643,362,NULL),(34347,628,362,NULL),(34348,628,362,NULL),(34349,605,362,NULL),(34350,605,362,NULL),(34351,575,362,NULL),(34352,566,362,NULL),(34353,566,362,NULL),(34354,557,362,NULL),(34355,485,362,NULL),(34356,443,362,NULL),(34357,443,362,NULL),(34358,442,362,NULL),(34359,442,362,NULL),(34360,441,362,NULL),(34361,441,362,NULL),(34362,434,362,NULL),(34363,434,362,NULL),(34364,412,362,NULL),(34365,412,362,NULL),(34366,392,362,NULL),(34367,392,362,NULL),(34368,349,362,NULL),(34369,349,362,NULL),(34370,345,362,NULL),(34371,345,362,NULL),(34372,344,362,NULL),(34373,344,362,NULL),(34374,334,362,NULL),(34375,334,362,NULL),(34376,287,362,NULL),(34377,287,362,NULL),(34378,283,362,NULL),(34379,283,362,NULL),(34380,279,362,NULL),(34381,268,362,NULL),(34382,260,362,NULL),(34383,258,362,NULL),(34384,238,362,NULL),(34385,217,362,NULL),(34386,191,362,NULL),(34387,190,362,NULL),(34388,189,362,NULL),(34389,189,362,NULL),(34390,171,362,NULL),(34391,171,362,NULL),(34392,169,362,NULL),(34393,169,362,NULL),(34394,168,362,NULL),(34395,168,362,NULL),(34396,153,362,NULL),(34397,153,362,NULL),(34398,151,362,NULL),(34399,151,362,NULL),(34400,137,362,NULL),(34401,137,362,NULL),(34402,136,362,NULL),(34403,125,362,NULL),(34404,121,362,NULL),(34405,108,362,NULL),(34406,88,362,NULL),(34407,70,362,NULL),(34408,67,362,NULL),(34409,66,362,NULL),(34410,66,362,NULL),(34411,58,362,NULL),(34412,50,362,NULL),(34413,50,362,NULL),(34414,41,362,NULL),(34415,35,362,NULL),(34416,35,362,NULL),(34417,34,362,NULL),(34418,34,362,NULL),(34419,33,362,NULL),(34420,33,362,NULL),(34421,28,362,NULL),(34422,27,362,NULL),(34423,26,362,NULL),(34424,9,362,NULL),(34425,7,362,NULL),(34426,4,362,NULL),(34427,4,362,NULL),(34428,1,362,NULL),(34429,16620,140,NULL),(34430,16616,140,NULL),(34431,16617,140,NULL),(34432,16621,140,NULL),(34433,16595,140,NULL),(34434,16560,140,NULL),(34435,16556,140,NULL),(34436,16570,140,NULL),(34437,16574,140,NULL),(34438,16550,140,NULL),(34439,3411,140,NULL),(34440,3392,140,NULL),(34441,3407,140,NULL),(34442,3393,140,NULL),(34443,3394,140,NULL),(34444,3396,140,NULL),(34445,3356,140,NULL),(34446,3340,140,NULL),(34447,3341,140,NULL),(34448,3345,140,NULL),(34449,3375,140,NULL),(34450,3350,140,NULL),(34451,3354,140,NULL),(34452,3349,140,NULL),(34453,3300,140,NULL),(34454,3334,140,NULL),(34455,3285,140,NULL),(34456,3289,140,NULL),(34457,3306,140,NULL),(34458,3280,140,NULL),(34459,3274,140,NULL),(34460,3272,140,NULL),(34461,3258,140,NULL),(34462,3295,140,NULL),(34463,3282,140,NULL),(34464,3232,140,NULL),(34465,3301,140,NULL),(34466,3208,140,NULL),(34467,3191,140,NULL),(34468,3194,140,NULL),(34469,3169,140,NULL),(34470,3146,140,NULL),(34471,3110,140,NULL),(34472,3108,140,NULL),(34473,3042,140,NULL),(34474,2999,140,NULL),(34475,2965,140,NULL),(34476,2962,140,NULL),(34477,2914,140,NULL),(34478,2873,140,NULL),(34479,2874,140,NULL),(34480,2818,140,NULL),(34481,2843,140,NULL),(34482,2824,140,NULL),(34483,2845,140,NULL),(34484,2780,140,NULL),(34485,2799,140,NULL),(34486,2698,140,NULL),(34487,2685,140,NULL),(34488,2616,140,NULL),(34489,2574,140,NULL),(34490,2570,140,NULL),(34491,2563,140,NULL),(34492,2560,140,NULL),(34493,2551,140,NULL),(34494,2594,140,NULL),(34495,2578,140,NULL),(34496,2579,140,NULL),(34497,2537,140,NULL),(34498,2530,140,NULL),(34499,2529,140,NULL),(34500,2523,140,NULL),(34501,2503,140,NULL),(34502,2487,140,NULL),(34503,2467,140,NULL),(34504,2460,140,NULL),(34505,2444,140,NULL),(34506,2419,140,NULL),(34507,2413,140,NULL),(34508,2401,140,NULL),(34509,2379,140,NULL),(34510,2367,140,NULL),(34511,2338,140,NULL),(34512,2302,140,NULL),(34513,2270,140,NULL),(34514,2220,140,NULL),(34515,2206,140,NULL),(34516,2169,140,NULL),(34517,2179,140,NULL),(34518,2176,140,NULL),(34519,2161,140,NULL),(34520,2140,140,NULL),(34521,2145,140,NULL),(34522,2144,140,NULL),(34523,2108,140,NULL),(34524,2106,140,NULL),(34525,2115,140,NULL),(34526,2089,140,NULL),(34527,2071,140,NULL),(34528,2033,140,NULL),(34529,2000,140,NULL),(34530,1979,140,NULL),(34531,1991,140,NULL),(34532,1976,140,NULL),(34533,1952,140,NULL),(34534,1945,140,NULL),(34535,1922,140,NULL),(34536,1920,140,NULL),(34537,1898,140,NULL),(34538,1863,140,NULL),(34539,1823,140,NULL),(34540,1822,140,NULL),(34541,1769,140,NULL),(34542,1768,140,NULL),(34543,1780,140,NULL),(34544,1749,140,NULL),(34545,1701,140,NULL),(34546,1684,140,NULL),(34547,1658,140,NULL),(34548,1534,140,NULL),(34549,1512,140,NULL),(34550,1524,140,NULL),(34551,1509,140,NULL),(34552,1492,140,NULL),(34553,1456,140,NULL),(34554,1431,140,NULL),(34555,1408,140,NULL),(34556,1399,140,NULL),(34557,1380,140,NULL),(34558,1352,140,NULL),(34559,1351,140,NULL),(34560,1337,140,NULL),(34561,1358,140,NULL),(34562,1323,140,NULL),(34563,1342,140,NULL),(34564,1295,140,NULL),(34565,2226,140,NULL),(34566,1217,140,NULL),(34567,1208,140,NULL),(34568,1200,140,NULL),(34569,1143,140,NULL),(34570,1128,140,NULL),(34571,1123,140,NULL),(34572,1109,140,NULL),(34573,1094,140,NULL),(34574,1092,140,NULL),(34575,1079,140,NULL),(34576,1071,140,NULL),(34577,1048,140,NULL),(34578,1028,140,NULL),(34579,1017,140,NULL),(34580,1007,140,NULL),(34581,930,140,NULL),(34582,921,140,NULL),(34583,916,140,NULL),(34584,904,140,NULL),(34585,889,140,NULL),(34586,881,140,NULL),(34587,873,140,NULL),(34588,865,140,NULL),(34589,848,140,NULL),(34590,838,140,NULL),(34591,798,140,NULL),(34592,796,140,NULL),(34593,790,140,NULL),(34594,781,140,NULL),(34595,704,140,NULL),(34596,771,140,NULL),(34597,763,140,NULL),(34598,724,140,NULL),(34599,713,140,NULL),(34600,658,140,NULL),(34601,647,140,NULL),(34602,643,140,NULL),(34603,628,140,NULL),(34604,605,140,NULL),(34605,561,140,NULL),(34606,560,140,NULL),(34607,557,140,NULL),(34608,516,140,NULL),(34609,455,140,NULL),(34610,453,140,NULL),(34611,441,140,NULL),(34612,416,140,NULL),(34613,415,140,NULL),(34614,412,140,NULL),(34615,409,140,NULL),(34616,380,140,NULL),(34617,368,140,NULL),(34618,363,140,NULL),(34619,349,140,NULL),(34620,334,140,NULL),(34621,300,140,NULL),(34622,274,140,NULL),(34623,268,140,NULL),(34624,258,140,NULL),(34625,242,140,NULL),(34626,239,140,NULL),(34627,238,140,NULL),(34628,231,140,NULL),(34629,219,140,NULL),(34630,217,140,NULL),(34631,215,140,NULL),(34632,209,140,NULL),(34633,206,140,NULL),(34634,204,140,NULL),(34635,202,140,NULL),(34636,191,140,NULL),(34637,190,140,NULL),(34638,189,140,NULL),(34639,179,140,NULL),(34640,172,140,NULL),(34641,171,140,NULL),(34642,169,140,NULL),(34643,168,140,NULL),(34644,154,140,NULL),(34645,153,140,NULL),(34646,152,140,NULL),(34647,151,140,NULL),(34648,136,140,NULL),(34649,135,140,NULL),(34650,134,140,NULL),(34651,122,140,NULL),(34652,121,140,NULL),(34653,88,140,NULL),(34654,82,140,NULL),(34655,81,140,NULL),(34656,80,140,NULL),(34657,75,140,NULL),(34658,70,140,NULL),(34659,69,140,NULL),(34660,67,140,NULL),(34661,66,140,NULL),(34662,58,140,NULL),(34663,56,140,NULL),(34664,55,140,NULL),(34665,53,140,NULL),(34666,51,140,NULL),(34667,50,140,NULL),(34668,45,140,NULL),(34669,42,140,NULL),(34670,38,140,NULL),(34671,35,140,NULL),(34672,33,140,NULL),(34673,29,140,NULL),(34674,27,140,NULL),(34675,26,140,NULL),(34676,20,140,NULL),(34677,14,140,NULL),(34678,13,140,NULL),(34679,12,140,NULL),(34680,11,140,NULL),(34681,9,140,NULL),(34682,7,140,NULL),(34683,5,140,NULL),(34684,4,140,NULL),(34685,3,140,NULL),(34686,2,140,NULL),(34687,1,140,NULL),(34688,16560,27,NULL),(34689,16556,27,NULL),(34690,16550,27,NULL),(34691,3407,27,NULL),(34692,3364,27,NULL),(34693,3412,27,NULL),(34694,3345,27,NULL),(34695,3360,27,NULL),(34696,3191,27,NULL),(34697,3146,27,NULL),(34698,3110,27,NULL),(34699,2996,27,NULL),(34700,2828,27,NULL),(34701,2824,27,NULL),(34702,2772,27,NULL),(34703,2769,27,NULL),(34704,2696,27,NULL),(34705,2706,27,NULL),(34706,2529,27,NULL),(34707,2483,27,NULL),(34708,2461,27,NULL),(34709,2460,27,NULL),(34710,2441,27,NULL),(34711,2379,27,NULL),(34712,2357,27,NULL),(34713,2089,27,NULL),(34714,1884,27,NULL),(34715,1910,27,NULL),(34716,1876,27,NULL),(34717,1752,27,NULL),(34718,1748,27,NULL),(34719,1572,27,NULL),(34720,1557,27,NULL),(34721,1539,27,NULL),(34722,1502,27,NULL),(34723,1450,27,NULL),(34724,1461,27,NULL),(34725,1460,27,NULL),(34726,1365,27,NULL),(34727,1343,27,NULL),(34728,1304,27,NULL),(34729,1362,27,NULL),(34730,1047,27,NULL),(34731,1046,27,NULL),(34732,1004,27,NULL),(34733,977,27,NULL),(34734,888,27,NULL),(34735,875,27,NULL),(34736,867,27,NULL),(34737,844,27,NULL),(34738,829,27,NULL),(34739,796,27,NULL),(34740,704,27,NULL),(34741,590,27,NULL),(34742,589,27,NULL),(34743,713,27,NULL),(34744,645,27,NULL),(34745,572,27,NULL),(34746,515,27,NULL),(34747,485,27,NULL),(34748,441,27,NULL),(34749,438,27,NULL),(34750,413,27,NULL),(34751,409,27,NULL),(34752,389,27,NULL),(34753,374,27,NULL),(34754,367,27,NULL),(34755,350,27,NULL),(34756,344,27,NULL),(34757,290,27,NULL),(34758,287,27,NULL),(34759,268,27,NULL),(34760,263,27,NULL),(34761,258,27,NULL),(34762,242,27,NULL),(34763,226,27,NULL),(34764,219,27,NULL),(34765,217,27,NULL),(34766,206,27,NULL),(34767,202,27,NULL),(34768,200,27,NULL),(34769,189,27,NULL),(34770,187,27,NULL),(34771,169,27,NULL),(34772,153,27,NULL),(34773,151,27,NULL),(34774,148,27,NULL),(34775,145,27,NULL),(34776,144,27,NULL),(34777,136,27,NULL),(34778,104,27,NULL),(34779,100,27,NULL),(34780,98,27,NULL),(34781,94,27,NULL),(34782,88,27,NULL),(34783,83,27,NULL),(34784,81,27,NULL),(34785,75,27,NULL),(34786,74,27,NULL),(34787,70,27,NULL),(34788,66,27,NULL),(34789,62,27,NULL),(34790,58,27,NULL),(34791,35,27,NULL),(34792,33,27,NULL),(34793,31,27,NULL),(34794,28,27,NULL),(34795,27,27,NULL),(34796,26,27,NULL),(34797,21,27,NULL),(34798,20,27,NULL),(34799,14,27,NULL),(34800,9,27,NULL),(34801,7,27,NULL),(34802,5,27,NULL),(34803,4,27,NULL),(34804,3,27,NULL),(34805,1,27,NULL),(34806,3629,27,NULL),(34807,3574,27,NULL),(34808,3419,27,NULL),(34809,5256,27,NULL),(34810,4587,27,NULL),(34811,3446,27,NULL),(34812,4032,27,NULL),(34813,3773,27,NULL),(34814,4646,27,NULL),(34815,16560,368,NULL),(34816,16556,368,NULL),(34817,16570,368,NULL),(34818,16574,368,NULL),(34819,3402,368,NULL),(34820,2260,368,NULL),(34821,1343,368,NULL),(34822,796,368,NULL),(34823,525,368,NULL),(34824,240,368,NULL),(34825,169,368,NULL),(34826,1,368,NULL),(34827,3342,28,NULL),(34828,790,28,NULL),(34829,3419,175,NULL),(34830,3425,175,NULL),(34831,3423,175,NULL),(34832,3343,175,NULL),(34833,3342,175,NULL),(34834,3341,175,NULL),(34835,2918,175,NULL),(34836,16595,370,NULL),(34837,2730,370,NULL),(34838,2537,370,NULL),(34839,1838,370,NULL),(34840,1423,370,NULL),(34841,1343,370,NULL),(34842,1260,370,NULL),(34843,867,370,NULL),(34844,832,370,NULL),(34845,704,370,NULL),(34846,766,370,NULL),(34847,684,370,NULL),(34848,658,370,NULL),(34849,566,370,NULL),(34850,441,370,NULL),(34851,374,370,NULL),(34852,287,370,NULL),(34853,279,370,NULL),(34854,217,370,NULL),(34855,209,370,NULL),(34856,189,370,NULL),(34857,153,370,NULL),(34858,121,370,NULL),(34859,74,370,NULL),(34860,69,370,NULL),(34861,35,370,NULL),(34862,33,370,NULL),(34863,26,370,NULL),(34864,1,370,NULL),(34865,16634,373,NULL),(34866,16595,373,NULL),(34867,16625,373,NULL),(34868,16560,373,NULL),(34869,16556,373,NULL),(34870,16545,373,NULL),(34871,16574,373,NULL),(34872,16550,373,NULL),(34873,3411,373,NULL),(34874,3392,373,NULL),(34875,3396,373,NULL),(34876,3345,373,NULL),(34877,3375,373,NULL),(34878,3300,373,NULL),(34879,3285,373,NULL),(34880,3289,373,NULL),(34881,3280,373,NULL),(34882,3286,373,NULL),(34883,3274,373,NULL),(34884,3281,373,NULL),(34885,3174,373,NULL),(34886,3160,373,NULL),(34887,3151,373,NULL),(34888,3105,373,NULL),(34889,3066,373,NULL),(34890,3042,373,NULL),(34891,2965,373,NULL),(34892,2873,373,NULL),(34893,2874,373,NULL),(34894,2748,373,NULL),(34895,2698,373,NULL),(34896,2570,373,NULL),(34897,2579,373,NULL),(34898,2529,373,NULL),(34899,2523,373,NULL),(34900,2487,373,NULL),(34901,2467,373,NULL),(34902,2460,373,NULL),(34903,2401,373,NULL),(34904,2342,373,NULL),(34905,2379,373,NULL),(34906,2375,373,NULL),(34907,2364,373,NULL),(34908,2367,373,NULL),(34909,2349,373,NULL),(34910,2176,373,NULL),(34911,2161,373,NULL),(34912,2140,373,NULL),(34913,2106,373,NULL),(34914,2033,373,NULL),(34915,2006,373,NULL),(34916,1980,373,NULL),(34917,1991,373,NULL),(34918,1898,373,NULL),(34919,1910,373,NULL),(34920,1863,373,NULL),(34921,1800,373,NULL),(34922,1790,373,NULL),(34923,1769,373,NULL),(34924,1768,373,NULL),(34925,1780,373,NULL),(34926,1752,373,NULL),(34927,1749,373,NULL),(34928,1732,373,NULL),(34929,1718,373,NULL),(34930,1524,373,NULL),(34931,1456,373,NULL),(34932,1431,373,NULL),(34933,1408,373,NULL),(34934,1415,373,NULL),(34935,1352,373,NULL),(34936,1343,373,NULL),(34937,1261,373,NULL),(34938,1726,373,NULL),(34939,1208,373,NULL),(34940,1123,373,NULL),(34941,1094,373,NULL),(34942,1092,373,NULL),(34943,1079,373,NULL),(34944,1071,373,NULL),(34945,1028,373,NULL),(34946,992,373,NULL),(34947,978,373,NULL),(34948,942,373,NULL),(34949,930,373,NULL),(34950,904,373,NULL),(34951,889,373,NULL),(34952,873,373,NULL),(34953,865,373,NULL),(34954,860,373,NULL),(34955,848,373,NULL),(34956,798,373,NULL),(34957,724,373,NULL),(34958,713,373,NULL),(34959,605,373,NULL),(34960,560,373,NULL),(34961,507,373,NULL),(34962,455,373,NULL),(34963,416,373,NULL),(34964,410,373,NULL),(34965,392,373,NULL),(34966,389,373,NULL),(34967,368,373,NULL),(34968,363,373,NULL),(34969,345,373,NULL),(34970,334,373,NULL),(34971,304,373,NULL),(34972,283,373,NULL),(34973,238,373,NULL),(34974,234,373,NULL),(34975,219,373,NULL),(34976,217,373,NULL),(34977,215,373,NULL),(34978,209,373,NULL),(34979,206,373,NULL),(34980,204,373,NULL),(34981,151,373,NULL),(34982,129,373,NULL),(34983,119,373,NULL),(34984,118,373,NULL),(34985,88,373,NULL),(34986,86,373,NULL),(34987,75,373,NULL),(34988,69,373,NULL),(34989,66,373,NULL),(34990,61,373,NULL),(34991,58,373,NULL),(34992,55,373,NULL),(34993,50,373,NULL),(34994,49,373,NULL),(34995,42,373,NULL),(34996,38,373,NULL),(34997,35,373,NULL),(34998,28,373,NULL),(34999,27,373,NULL),(35000,26,373,NULL),(35001,21,373,NULL),(35002,20,373,NULL),(35003,17,373,NULL),(35004,14,373,NULL),(35005,13,373,NULL),(35006,11,373,NULL),(35007,9,373,NULL),(35008,7,373,NULL),(35009,5,373,NULL),(35010,3,373,NULL),(35011,2,373,NULL),(35012,1,373,NULL),(35013,3471,373,NULL),(35014,3416,373,NULL),(35015,3425,373,NULL),(35016,3423,373,NULL),(35017,4507,373,NULL),(35018,4073,373,NULL),(35019,3793,373,NULL),(35020,4646,373,NULL),(35021,3813,373,NULL),(35022,4159,373,NULL),(35023,4307,373,NULL),(35024,4484,373,NULL),(35025,3484,373,NULL),(35026,3584,373,NULL),(35027,3454,373,NULL),(35028,3469,373,NULL),(35029,3495,373,NULL),(35030,3885,373,NULL),(35031,4078,373,NULL),(35032,3559,373,NULL),(35033,16657,373,NULL),(35034,4038,373,NULL),(35035,4005,373,NULL),(35036,3427,373,NULL),(35037,4317,373,NULL),(35038,3419,373,NULL),(35039,4629,373,NULL),(35040,4257,373,NULL),(35041,4153,373,NULL),(35042,3682,373,NULL),(35043,3554,373,NULL),(35044,3498,373,NULL),(35045,3846,373,NULL),(35046,4091,373,NULL),(35047,3807,373,NULL),(35048,5125,373,NULL),(35049,3973,373,NULL),(35050,4044,373,NULL),(35051,4028,373,NULL),(35052,4139,373,NULL),(35053,4720,373,NULL),(35054,5017,373,NULL),(35055,4025,373,NULL),(35056,4750,373,NULL),(35057,3889,373,NULL),(35058,4865,373,NULL),(35059,5491,373,NULL),(35060,4775,373,NULL),(35061,4269,373,NULL),(35062,4405,373,NULL),(35063,4302,373,NULL),(35064,10487,373,NULL),(35065,3734,53,NULL),(35066,3496,53,NULL),(35067,4376,53,NULL),(35068,3630,53,NULL),(35069,4026,53,NULL),(35070,3555,53,NULL),(35071,567,53,NULL),(35072,416,53,NULL),(35073,377,53,NULL),(35074,1550,175,NULL),(35075,300,175,NULL),(35076,3421,162,NULL),(35077,3419,162,NULL),(35078,3420,162,NULL),(35079,2094,162,NULL),(35080,13,162,NULL),(35081,4,162,NULL),(35082,2094,181,NULL),(35083,1550,181,NULL),(35084,16585,334,NULL),(35085,16545,334,NULL),(35086,16570,334,NULL),(35087,16550,334,NULL),(35088,3396,334,NULL),(35089,3300,334,NULL),(35090,3289,334,NULL),(35091,3280,334,NULL),(35092,3264,334,NULL),(35093,3232,334,NULL),(35094,3222,334,NULL),(35095,3190,334,NULL),(35096,3191,334,NULL),(35097,3194,334,NULL),(35098,3206,334,NULL),(35099,3227,334,NULL),(35100,3174,334,NULL),(35101,3151,334,NULL),(35102,3184,334,NULL),(35103,3110,334,NULL),(35104,3000,334,NULL),(35105,2965,334,NULL),(35106,2942,334,NULL),(35107,2894,334,NULL),(35108,2873,334,NULL),(35109,2824,334,NULL),(35110,2798,334,NULL),(35111,2769,334,NULL),(35112,2656,334,NULL),(35113,2652,334,NULL),(35114,2574,334,NULL),(35115,2563,334,NULL),(35116,2591,334,NULL),(35117,2595,334,NULL),(35118,2579,334,NULL),(35119,2554,334,NULL),(35120,2540,334,NULL),(35121,2545,334,NULL),(35122,2535,334,NULL),(35123,2529,334,NULL),(35124,2520,334,NULL),(35125,2485,334,NULL),(35126,2469,334,NULL),(35127,2460,334,NULL),(35128,2423,334,NULL),(35129,2427,334,NULL),(35130,2413,334,NULL),(35131,2391,334,NULL),(35132,2390,334,NULL),(35133,2379,334,NULL),(35134,2335,334,NULL),(35135,2300,334,NULL),(35136,2235,334,NULL),(35137,2260,334,NULL),(35138,2206,334,NULL),(35139,2180,334,NULL),(35140,2169,334,NULL),(35141,2154,334,NULL),(35142,2149,334,NULL),(35143,2161,334,NULL),(35144,2160,334,NULL),(35145,2119,334,NULL),(35146,2114,334,NULL),(35147,2095,334,NULL),(35148,2011,334,NULL),(35149,2000,334,NULL),(35150,1979,334,NULL),(35151,1991,334,NULL),(35152,1967,334,NULL),(35153,1952,334,NULL),(35154,1945,334,NULL),(35155,1929,334,NULL),(35156,1920,334,NULL),(35157,1837,334,NULL),(35158,1832,334,NULL),(35159,1823,334,NULL),(35160,1800,334,NULL),(35161,1790,334,NULL),(35162,1769,334,NULL),(35163,1768,334,NULL),(35164,1780,334,NULL),(35165,1752,334,NULL),(35166,1748,334,NULL),(35167,1732,334,NULL),(35168,1689,334,NULL),(35169,1688,334,NULL),(35170,1679,334,NULL),(35171,1678,334,NULL),(35172,1672,334,NULL),(35173,1684,334,NULL),(35174,1662,334,NULL),(35175,1657,334,NULL),(35176,1588,334,NULL),(35177,1561,334,NULL),(35178,1572,334,NULL),(35179,1539,334,NULL),(35180,1512,334,NULL),(35181,1524,334,NULL),(35182,1503,334,NULL),(35183,1486,334,NULL),(35184,1480,334,NULL),(35185,1493,334,NULL),(35186,1491,334,NULL),(35187,1470,334,NULL),(35188,1464,334,NULL),(35189,1456,334,NULL),(35190,1431,334,NULL),(35191,1389,334,NULL),(35192,1402,334,NULL),(35193,1365,334,NULL),(35194,1351,334,NULL),(35195,1346,334,NULL),(35196,1358,334,NULL),(35197,1323,334,NULL),(35198,1343,334,NULL),(35199,1342,334,NULL),(35200,1309,334,NULL),(35201,1304,334,NULL),(35202,1295,334,NULL),(35203,1281,334,NULL),(35204,1252,334,NULL),(35205,1227,334,NULL),(35206,1935,334,NULL),(35207,1108,334,NULL),(35208,1071,334,NULL),(35209,1025,334,NULL),(35210,1005,334,NULL),(35211,1004,334,NULL),(35212,977,334,NULL),(35213,976,334,NULL),(35214,961,334,NULL),(35215,933,334,NULL),(35216,922,334,NULL),(35217,905,334,NULL),(35218,877,334,NULL),(35219,875,334,NULL),(35220,867,334,NULL),(35221,832,334,NULL),(35222,796,334,NULL),(35223,704,334,NULL),(35224,771,334,NULL),(35225,766,334,NULL),(35226,747,334,NULL),(35227,709,334,NULL),(35228,728,334,NULL),(35229,724,334,NULL),(35230,713,334,NULL),(35231,693,334,NULL),(35232,643,334,NULL),(35233,628,334,NULL),(35234,605,334,NULL),(35235,566,334,NULL),(35236,560,334,NULL),(35237,557,334,NULL),(35238,551,334,NULL),(35239,485,334,NULL),(35240,455,334,NULL),(35241,448,334,NULL),(35242,443,334,NULL),(35243,442,334,NULL),(35244,441,334,NULL),(35245,412,334,NULL),(35246,392,334,NULL),(35247,374,334,NULL),(35248,371,334,NULL),(35249,367,334,NULL),(35250,350,334,NULL),(35251,349,334,NULL),(35252,345,334,NULL),(35253,344,334,NULL),(35254,342,334,NULL),(35255,338,334,NULL),(35256,334,334,NULL),(35257,326,334,NULL),(35258,303,334,NULL),(35259,292,334,NULL),(35260,287,334,NULL),(35261,283,334,NULL),(35262,268,334,NULL),(35263,260,334,NULL),(35264,258,334,NULL),(35265,238,334,NULL),(35266,231,334,NULL),(35267,229,334,NULL),(35268,219,334,NULL),(35269,217,334,NULL),(35270,209,334,NULL),(35271,206,334,NULL),(35272,202,334,NULL),(35273,189,334,NULL),(35274,172,334,NULL),(35275,169,334,NULL),(35276,168,334,NULL),(35277,167,334,NULL),(35278,162,334,NULL),(35279,154,334,NULL),(35280,153,334,NULL),(35281,151,334,NULL),(35282,137,334,NULL),(35283,136,334,NULL),(35284,125,334,NULL),(35285,121,334,NULL),(35286,88,334,NULL),(35287,83,334,NULL),(35288,81,334,NULL),(35289,80,334,NULL),(35290,78,334,NULL),(35291,75,334,NULL),(35292,74,334,NULL),(35293,73,334,NULL),(35294,70,334,NULL),(35295,69,334,NULL),(35296,67,334,NULL),(35297,66,334,NULL),(35298,58,334,NULL),(35299,55,334,NULL),(35300,50,334,NULL),(35301,48,334,NULL),(35302,43,334,NULL),(35303,42,334,NULL),(35304,41,334,NULL),(35305,38,334,NULL),(35306,35,334,NULL),(35307,34,334,NULL),(35308,33,334,NULL),(35309,28,334,NULL),(35310,27,334,NULL),(35311,26,334,NULL),(35312,11,334,NULL),(35313,9,334,NULL),(35314,8,334,NULL),(35315,7,334,NULL),(35316,4,334,NULL),(35317,1,334,NULL),(35318,3710,53,NULL),(35319,4120,53,NULL),(35320,3755,53,NULL),(35321,2099,53,NULL),(35322,712,53,NULL),(35323,221,53,NULL),(35324,85,53,NULL),(35325,84,53,NULL),(35326,38,53,NULL),(35327,3418,289,NULL),(35328,3424,289,NULL),(35329,3421,289,NULL),(35330,3422,289,NULL),(35331,3419,289,NULL),(35332,13,289,NULL),(35333,1,289,NULL),(35334,19,289,NULL),(35335,18,289,NULL),(35336,4507,53,NULL),(35337,3952,53,NULL),(35338,3790,53,NULL),(35339,3774,53,NULL),(35340,5148,53,NULL),(35341,3781,53,NULL),(35342,3607,53,NULL),(35343,1277,53,NULL),(35344,41,53,NULL),(35345,2099,117,NULL),(35346,1523,117,NULL),(35347,1143,117,NULL),(35348,905,117,NULL),(35349,41,117,NULL),(35350,21,117,NULL),(35351,3476,117,NULL),(35352,4868,117,NULL),(35353,5148,117,NULL),(35354,3455,117,NULL),(35355,3714,117,NULL),(35356,3557,117,NULL),(35357,3923,117,NULL),(35358,4801,117,NULL),(35359,3749,117,NULL),(35360,4830,53,NULL),(35361,4293,53,NULL),(35362,5111,53,NULL),(35363,4429,53,NULL),(35364,4673,53,NULL),(35365,4482,53,NULL),(35366,5369,140,NULL),(35367,3475,140,NULL),(35368,3457,140,NULL),(35369,3343,140,NULL),(35370,3337,140,NULL),(35371,3335,140,NULL),(35372,3342,140,NULL),(35373,2918,140,NULL),(35374,2900,140,NULL),(35375,2901,140,NULL),(35376,2094,140,NULL),(35377,1931,140,NULL),(35378,1550,140,NULL),(35379,2235,212,NULL),(35380,169,212,NULL);
/*!40000 ALTER TABLE `track_solved_problem` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_tags`
--

DROP TABLE IF EXISTS `track_tags`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_tags` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `tag` varchar(55) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=168 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_tags`
--

LOCK TABLES `track_tags` WRITE;
/*!40000 ALTER TABLE `track_tags` DISABLE KEYS */;
INSERT INTO `track_tags` VALUES (1,'Array'),(2,'String'),(3,'Hash Table'),(4,'Dynamic Programming'),(5,'Math'),(6,'Sorting'),(7,'Greedy'),(8,'Depth-First Search'),(9,'Database'),(10,'Binary Search'),(11,'Matrix'),(12,'Tree'),(13,'Breadth-First Search'),(14,'Bit Manipulation'),(15,'Two Pointers'),(16,'Prefix Sum'),(17,'Heap (Priority Queue)'),(18,'Binary Tree'),(19,'Simulation'),(20,'Stack'),(21,'Graph'),(22,'Counting'),(23,'Sliding Window'),(24,'Design'),(25,'Backtracking'),(26,'Enumeration'),(27,'Union Find'),(28,'Linked List'),(29,'Ordered Set'),(30,'Number Theory'),(31,'Monotonic Stack'),(32,'Segment Tree'),(33,'Trie'),(34,'Bitmask'),(35,'Divide and Conquer'),(36,'Combinatorics'),(37,'Queue'),(38,'Recursion'),(39,'Binary Indexed Tree'),(40,'Geometry'),(41,'Binary Search Tree'),(43,'Hash Function'),(44,'Memoization'),(45,'String Matching'),(46,'Topological Sort'),(47,'Shortest Path'),(48,'Rolling Hash'),(49,'Game Theory'),(50,'Interactive'),(51,'Data Stream'),(52,'Monotonic Queue'),(53,'Brainteaser'),(54,'Randomized'),(55,'Merge Sort'),(56,'Doubly-Linked List'),(57,'Counting Sort'),(58,'Iterator'),(59,'Concurrency'),(60,'Probability and Statistics'),(61,'Quickselect'),(62,'Suffix Array'),(63,'Bucket Sort'),(64,'Minimum Spanning Tree'),(65,'Line Sweep'),(66,'Shell'),(67,'Reservoir Sampling'),(68,'Strongly Connected Component'),(69,'Eulerian Circuit'),(70,'Radix Sort'),(71,'Rejection Sampling'),(72,'Biconnected Component'),(73,'Advanced Data Structure'),(74,'Algorithms'),(75,'alphabets'),(76,'anagram'),(77,'AVL-Tree'),(78,'Binary Representation'),(79,'Bit Magic'),(80,'circular linked list'),(82,'circular-linked-list'),(83,'Class'),(84,'Combinatorial'),(85,'constructive algo'),(86,'CPP'),(87,'CPP-Control-Flow'),(88,'cpp-operator'),(89,'cpp-pointers'),(90,'cpp-strings'),(92,'Data Type'),(93,'Date-Time'),(94,'Design-Pattern'),(95,'Disjoint Set'),(96,'Division'),(97,'factorial'),(98,'Factorization'),(99,'Fibonacci'),(100,'Functions'),(101,'implementation'),(102,'Java'),(103,'Java-BigInteger'),(104,'Java-Class and Object'),(105,'Java-Collections'),(106,'Java-Control-Flow'),(107,'Java-Operators'),(108,'Java-Strings'),(109,'Kadane'),(110,'LCS'),(111,'logical-thinking'),(112,'Machine Learning'),(113,'Map'),(114,'Misc'),(115,'Modular Arithmetic'),(116,'Numbers'),(117,'OOP'),(118,'Operators'),(119,'palindrome'),(120,'Pattern Searching'),(121,'pattern-printing'),(122,'permutation'),(123,'Pointers'),(124,'Practice-Problems'),(125,'Prime Number'),(126,'priority-queue'),(127,'Puzzles'),(128,'python'),(129,'python-conditionals'),(130,'python-dict'),(131,'python-loops'),(132,'python-set'),(133,'python-strings'),(134,'Quantifiers'),(135,'Regular Expression'),(136,'Reverse'),(137,'Searching'),(138,'series'),(139,'set'),(140,'sieve'),(141,'Sqrt Decomposition'),(142,'STL'),(143,'subset'),(144,'Traversal'),(145,'*special'),(146,'2-sat'),(147,'brute force'),(148,'chinese remainder theorem'),(149,'constructive algorithms'),(150,'data structures'),(151,'expression parsing'),(152,'fft'),(153,'flows'),(154,'games'),(155,'graph matchings'),(157,'meet-in-the-middle'),(158,'schedules'),(159,'string suffix structures'),(160,'ternary search'),(161,'python-operators'),(162,'python-io'),(163,'python-functions'),(164,'Deque'),(165,'python-list'),(166,'C'),(167,'Range Minimum Query');
/*!40000 ALTER TABLE `track_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `track_user_handle`
--

DROP TABLE IF EXISTS `track_user_handle`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8mb4 */;
CREATE TABLE `track_user_handle` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `user_handle` varchar(255) NOT NULL,
  `last_update` date DEFAULT NULL,
  `platform_id` bigint(20) NOT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `track_user_handle_platform_id_cf356000_fk_track_platform_id` (`platform_id`),
  KEY `track_user_handle_user_id_bb713079_fk_auth_user_id` (`user_id`),
  CONSTRAINT `track_user_handle_platform_id_cf356000_fk_track_platform_id` FOREIGN KEY (`platform_id`) REFERENCES `track_platform` (`id`),
  CONSTRAINT `track_user_handle_user_id_bb713079_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=971 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `track_user_handle`
--

LOCK TABLES `track_user_handle` WRITE;
/*!40000 ALTER TABLE `track_user_handle` DISABLE KEYS */;
INSERT INTO `track_user_handle` VALUES (8,'7Omor0g3IT','2025-03-28',1,8),(9,'pi7OIMZsZ8',NULL,1,5),(13,'velliyangiri07','2025-05-05',1,13),(14,'praveenkumar_266','2025-05-05',1,14),(15,'praveen_262000','2025-05-05',2,14),(16,'Raghav_0201','2025-05-05',1,15),(17,'praveenkumar_26','2025-05-05',3,14),(19,'raghavel6cav','2025-05-05',2,15),(21,'giriperiydk01','2025-05-05',2,13),(22,'nandana__d','2025-05-05',1,16),(23,'Pandiyan37','2025-05-05',1,17),(24,'nandana_nandy','2025-05-05',2,16),(25,'pandiyanp6u56','2025-05-05',2,17),(26,'velliyangiri','2025-05-05',3,13),(27,'pandiyanpalani37',NULL,3,17),(29,'vidhyapkjy','2025-05-05',2,18),(30,'vidhyask48','2025-05-05',1,18),(31,'vidhyask48','2025-05-05',3,18),(32,'lakshyaaaa_s','2025-05-05',1,19),(34,'lakshya13','2025-05-05',2,19),(35,'raju096','2025-05-05',1,20),(36,'lachulakshya524','2025-05-05',3,19),(37,'Raghav_0201',NULL,3,15),(38,'srajeshra2w31','2025-05-05',2,20),(40,'https://leetcode.com/u/Praveen1RAP/',NULL,1,22),(41,'nandana_d','2025-05-05',3,16),(43,'https://www.geeksforgeeks.org/user/ravipravh7fi/',NULL,2,22),(44,'kanishvijay2005','2025-05-05',1,24),(45,'naveenkumarraja45','2025-05-05',1,23),(46,'naveenkumz9sg','2025-05-05',2,23),(47,'kanishvifj8d','2025-05-05',2,24),(48,'Kanishkar_V','2025-05-05',3,24),(49,'naveenkumar_45','2025-05-05',3,23),(50,'mahendran930','2025-05-05',1,25),(51,'mahimahen93z6','2025-05-05',2,25),(52,'K_Mahendran','2025-05-05',3,25),(53,'Jeevanand63',NULL,1,12),(54,'jeevana9asr','2025-05-05',2,12),(55,'jeevanandv63','2025-05-05',3,12),(59,'mohanraqkrw','2025-05-05',2,39),(62,'mohanrajn004','2025-05-05',3,39),(64,'nareshkannasln','2025-05-05',1,40),(65,'22csqetw','2025-05-05',2,38),(66,'suhaina','2025-05-05',3,38),(67,'A_suhaina','2025-05-05',1,38),(68,'Mohan_raj1010','2025-05-05',1,39),(69,'22adpffa','2025-05-05',2,40),(70,'nareshkanna_',NULL,3,40),(72,'surya_v07','2025-05-05',1,30),(74,'madhushivani','2025-05-05',1,45),(75,'22cs7s7m','2025-05-05',2,45),(76,'madhu_shivani',NULL,3,45),(77,'monica154','2025-05-05',1,48),(78,'monicamurouif','2025-05-05',2,48),(79,'Surya_Prabha','2025-05-05',1,37),(80,'suryapraq1ec','2025-05-05',2,37),(81,'surya_v07','2025-05-05',2,30),(82,'Monica17','2025-05-05',3,48),(83,'Surya_Prabha','2025-05-05',3,37),(84,'surya._v07',NULL,3,30),(88,'Arikaran_r','2025-05-05',3,51),(90,'arikaran__r','2025-05-05',2,51),(91,'18AJAY','2025-05-05',1,49),(92,'ajaysurucj2',NULL,2,49),(93,'Sachin_KS_12','2025-05-15',1,53),(94,'arikaran__r','2025-05-05',1,51),(96,'ervishnucs','2025-05-06',1,55),(97,'ajay1808',NULL,3,49),(98,'miruthigavenkatesh',NULL,1,46),(99,'miruthive3kj7','2025-05-05',2,46),(101,'sachinkanaga143',NULL,3,53),(102,'22csj8m0','2025-05-05',2,60),(103,'Dharsh_29','2025-05-05',1,59),(104,'dharshinisarahnib','2025-05-05',2,59),(107,'anishas','2025-05-05',3,60),(108,'dharshini29',NULL,3,59),(109,'22itw5bo','2025-05-05',2,57),(110,'XWPD1QersV','2025-05-05',1,61),(111,'V1YRabyFAL','2025-05-05',1,60),(112,'lubith47xv','2025-05-05',2,61),(113,'Sowmiyat','2025-05-05',3,57),(114,'Lubitha_S22',NULL,3,61),(115,'22eca38','2025-05-05',1,64),(116,'Adithya_ksm','2025-05-05',1,63),(117,'aadhillo79','2025-05-05',2,64),(118,'adikmoumf','2025-05-05',2,63),(119,'Adithya_ksm','2025-05-05',3,63),(120,'HUSSAIN_08',NULL,3,64),(121,'SushmithaT','2025-05-05',1,65),(122,'sushmithath7sta','2025-05-05',2,65),(123,'Rrh7b8uKeD','2025-05-05',1,57),(124,'Sushmitha_T','2025-05-05',3,65),(125,'KMMWDdiplE','2025-05-05',1,68),(126,'Varsha_Kart','2025-05-05',1,71),(127,'23ecb27','2025-05-05',1,69),(128,'23mey3ey',NULL,2,68),(129,'varshakar8zvi','2025-05-05',2,71),(130,'23ecuuab',NULL,2,69),(131,'kalai9862','2025-05-05',1,74),(132,'guruprasad195','2025-05-05',1,73),(133,'iassundar779',NULL,3,68),(134,'Mp25wb8EVf',NULL,1,75),(135,'kalai8870',NULL,3,74),(136,'chaithanyarao','2025-05-05',1,76),(137,'gokula23k','2025-05-05',1,72),(138,'23ecb27',NULL,3,69),(139,'Gokul23k','2025-05-05',3,72),(140,'https://leetcode.com/u/Praveen_Kumar2005',NULL,1,78),(141,'22eea38','2025-05-05',1,70),(142,'varsha_kart',NULL,3,71),(143,'Jakase05','2025-05-05',1,77),(144,'22eef712',NULL,2,70),(146,'23csgshx','2025-05-06',2,73),(147,'Sunilakash2106','2025-05-05',1,79),(148,'raochait3t0c',NULL,2,76),(150,'22eea38',NULL,3,70),(151,'mehesh5551',NULL,1,81),(153,'arun0904',NULL,3,75),(154,'@23itmqks',NULL,2,79),(155,'jakaseelg74l',NULL,2,77),(156,'chaithanyarao',NULL,3,76),(157,'karthick2874862',NULL,3,80),(159,'Guruprasad195',NULL,3,73),(160,'gokularamiui8',NULL,2,72),(161,'karthick2i5ab','2025-05-05',2,80),(162,'reignsk8f2z',NULL,2,74),(163,'jakase1',NULL,3,77),(164,'mehesh555',NULL,3,81),(166,'Dharanisaravanakumar','2025-05-05',1,83),(167,'K_art_hick','2025-05-05',1,80),(168,'PSunilAkash',NULL,3,79),(169,'22itx962','2025-05-05',2,83),(170,'bharathwaj8282','2025-05-05',1,82),(171,'bharathwgl1y','2025-05-05',2,82),(172,'Kishore_86','2025-05-05',1,84),(174,'Barath_waj','2025-05-05',3,82),(176,'22itvw7d','2025-05-05',2,84),(178,'nivetha__20','2025-05-05',1,85),(179,'nivetha_s20','2025-05-05',3,85),(180,'nivethashvehh','2025-05-05',2,85),(181,'Sridharshini_K','2025-05-05',1,86),(182,'dharshinikb916',NULL,2,86),(183,'22eea49',NULL,3,86),(184,'22mex2na','2025-05-17',2,53),(185,'the_bav','2025-05-05',1,88),(186,'bhaviyamb3n9w','2025-05-05',2,88),(187,'bhaviyam','2025-05-05',3,88),(190,'Magi_gopi07','2025-05-05',1,89),(193,'magishagq5ju','2025-05-05',2,89),(196,'Devadev565','2025-05-05',1,94),(197,'devadev','2025-05-05',3,94),(198,'kavin_thangavel','2025-05-05',1,92),(199,'devadev565','2025-05-05',2,94),(200,'poojamithran','2025-05-05',1,32),(201,'22it5w7t','2025-05-05',2,92),(202,'poojamithewa8','2025-05-05',2,32),(203,'kavin4204','2025-05-05',3,92),(205,'suvethcj9z','2025-05-05',2,91),(206,'poojamithran','2025-05-05',3,32),(207,'suvetha_3',NULL,3,91),(208,'ssuvetha254','2025-05-05',1,91),(209,'saran_2013','2025-05-05',1,97),(210,'saran567894',NULL,3,97),(213,'santanm9yx','2025-05-05',2,97),(216,'muralidharan_1708','2025-05-05',1,21),(217,'muralidharan_1708','2025-05-05',3,21),(218,'muralidhagte5','2025-05-05',2,21),(219,'AadishmG','2025-05-05',1,95),(220,'rcmathavvsys','2025-05-05',2,100),(221,'aadispgzf',NULL,2,95),(222,'Aadish_M','2025-05-06',3,95),(223,'autt22ita57','2025-05-05',1,67),(224,'Mathavan_c96','2025-05-05',3,100),(225,'22itj23v',NULL,2,67),(226,'MathavanC','2025-05-05',1,100),(227,'meheshperit8i9',NULL,2,81),(230,'22ita58',NULL,3,67),(232,'sarathi4','2025-05-05',1,105),(233,'sarathiyp1p','2025-05-05',2,105),(234,'KruthickM','2025-05-05',1,104),(235,'vishnu1840','2025-05-05',1,101),(236,'sarathi4',NULL,3,105),(237,'vichu86al','2025-05-05',2,101),(238,'vishnu1840l',NULL,3,101),(239,'A_P_Dharanya','2025-05-05',1,106),(240,'23csth50',NULL,2,104),(241,'dharanykr56',NULL,2,106),(242,'Kruthick',NULL,3,104),(243,'VijayShankarM','2025-05-05',1,110),(244,'Hemanth_2015','2025-05-05',1,109),(246,'Hemanth_2005',NULL,3,109),(248,'22cs3kj2','2025-05-06',2,58),(251,'vijishank454v',NULL,2,110),(253,'hitoheman492y',NULL,2,109),(255,'22cswzco',NULL,2,113),(256,'sakthisabarinathan12','2025-05-05',1,114),(257,'Sakthi_12',NULL,3,114),(258,'sakthisabarinathan','2025-05-05',2,114),(259,'kavin4444','2025-05-05',1,115),(260,'DuraiGuruSaran','2025-05-05',1,116),(261,'kavinsany9fp',NULL,2,115),(262,'dgskgt2o','2025-05-05',2,116),(263,'Kavin_2003',NULL,3,115),(264,'duraigurusaran',NULL,3,116),(265,'Atchaya_18','2025-05-15',1,117),(266,'22ece77n','2025-05-15',2,117),(267,'Atchaya_333',NULL,3,117),(269,'suseendran_1234','2025-05-05',1,121),(270,'suseendran',NULL,3,121),(271,'Anusha_Smilee_09',NULL,3,119),(272,'suseekank6cs',NULL,2,121),(273,'praveensaravanan','2025-05-05',1,120),(274,'23csgoc7',NULL,2,120),(275,'22cske4o','2025-05-05',2,119),(278,'siva_insane','2025-05-05',1,123),(279,'https://leetcode.com/u/_SOUNDAR_/',NULL,1,125),(280,'https://codeforces.com/profile/soundar422',NULL,3,125),(281,'https://leetcode.com/u/krishh_777/',NULL,1,126),(282,'anushasmilee05','2025-05-05',1,119),(283,'ed1cCVoviI','2025-05-05',1,47),(284,'https://www.geeksforgeeks.org/user/soundaryss7/',NULL,2,125),(285,'siva012',NULL,3,123),(286,'22eca13','2025-05-05',1,130),(287,'gopinathshanmugavel','2025-05-05',1,34),(288,'padmavathypa42j5',NULL,2,130),(290,'https://www.geeksforgeeks.org/user/apsaikrkefm/?_gl=1*122xqb7*_up*MQ..*_gs*MQ..&gclid=Cj0KCQjww-HABhCGARIsALLO6Xwx0qFW2XaR21P1g2rZG1DFlfFWwwfanmMXm2_dwWdmUP5On_f65fEaAqM7EALw_wcB&gbraid=0AAAAAC9yBkArFc8ICWpbLdupJdtdStiuk',NULL,2,126),(291,'gopinathshjmmv','2025-05-05',2,34),(292,'Hari0805','2025-05-05',1,44),(293,'hariniesuap4x','2025-05-05',2,44),(294,'Gopinath_1','2025-05-05',3,34),(295,'Hari0808',NULL,3,44),(296,'Arunkumar2233','2025-05-05',1,128),(297,'AswinA067',NULL,3,130),(298,'sivapreft7p',NULL,2,123),(299,'birundha__012','2025-05-05',1,133),(300,'Arunkumar4455',NULL,3,128),(301,'Shreesha Radhakrishnan',NULL,1,136),(302,'birundhakaq7c3',NULL,2,133),(303,'harinivashajm45','2025-05-05',2,35),(304,'aKXZJbfDdy','2025-05-05',1,131),(305,'shreesharaddvn5','2025-05-06',2,136),(306,'shreesharadhakrishnan',NULL,3,136),(308,'magudeeshto8n','2025-05-05',2,131),(310,'dharshanba0o','2025-05-05',2,47),(311,'birundhakausalya475',NULL,3,133),(312,'EA1lIkwEM3','2025-05-05',1,35),(313,'magudeeshwaran',NULL,3,131),(314,'sashan6mj1','2025-05-05',2,135),(315,'qckUh0ubcs','2025-05-05',1,141),(317,'abishez4gs','2025-05-05',2,141),(318,'Hari_Nivas456','2025-05-05',3,35),(319,'arunkumaw6fd',NULL,2,128),(320,'Rubinraj','2025-05-05',1,138),(321,'sashanth','2025-05-05',1,135),(322,'Abishek123',NULL,3,141),(325,'HAKddLYLJz','2025-05-05',1,124),(326,'karthisanq1y7','2025-05-05',2,124),(328,'Rubinraj',NULL,3,138),(329,'sabari7s9qw','2025-05-05',2,137),(330,'Karthikeyan_2005','2025-05-05',3,124),(331,'rubinrajr7q86','2025-05-05',2,138),(332,'Sabari777','2025-05-05',3,137),(333,'dharshanad28306',NULL,3,47),(334,'mohanamahalingam','2025-05-05',1,143),(335,'mohanamahakcl5',NULL,2,143),(336,'chandrud_123','2025-05-05',1,142),(338,'sobikamohanasundaram','2025-05-05',1,147),(339,'22adubvv','2025-05-05',2,147),(340,'22ada52',NULL,3,147),(342,'https://leetcode.com/u/RAMYA_M13-4/',NULL,1,148),(344,'https://auth.geeksforgeeks.org/user/ramyamuruae9i/practice',NULL,2,148),(347,'kengathar','2025-05-06',1,144),(349,'kaviyakaviya','2025-05-05',1,145),(350,'dineshsurrya66','2025-05-18',2,140),(351,'Dinesh_Surrya','2025-05-18',3,140),(352,'ZyTkW0JhQV','2025-05-18',1,140),(353,'kaviyaveer9vep','2025-05-05',2,145),(354,'kengathar77',NULL,3,144),(355,'Nandanaraj','2025-05-05',1,129),(356,'sabari____2005','2025-05-05',1,137),(357,'mohanamahalingam07',NULL,3,143),(358,'22cscfsu',NULL,2,144),(359,'nandanapwz8','2025-05-05',2,129),(360,'nandanaraj511','2025-05-05',3,129),(361,'22cssoip',NULL,2,142),(362,'dharanyaxx.dhxrx14',NULL,3,106),(363,'Mano-M','2025-05-05',1,108),(364,'22csa10',NULL,3,142),(365,'manomarutharasu','2025-05-05',2,108),(366,'Poorvick','2025-05-05',1,139),(367,'Mano_M',NULL,3,108),(369,'Poorvick',NULL,3,139),(370,'MadhanM29','2025-05-05',1,151),(371,'poorvickpokv','2025-05-05',2,139),(374,'madhanmadit4u','2025-05-05',2,151),(375,'tharunikaa8l4q','2025-05-05',2,42),(376,'MadhanM29','2025-05-05',3,151),(378,'Karthikeyan494','2025-05-05',1,152),(379,'Dinesh123babu123','2025-05-05',1,153),(380,'https://leetcode.com/u/abinaya_2295/',NULL,1,154),(381,'https://www.geeksforgeeks.org/user/abinaya__2295/',NULL,2,154),(382,'https://www.codechef.com/users/abinaya_2295',NULL,3,154),(383,'karthikeyan523','2025-05-05',2,152),(385,'karthikeyan523','2025-05-05',3,152),(386,'dhanusridk2005','2025-05-05',1,156),(387,'dhanusridk2005','2025-05-05',3,156),(389,'dhanusrii3zo','2025-05-05',2,156),(390,'22csa56','2025-05-05',1,155),(391,'adhamsafir','2025-05-07',1,158),(392,'adhamsafir','2025-05-07',2,158),(393,'adhamsafir1','2025-05-07',3,158),(394,'Thiru1219',NULL,3,155),(395,'dharunkumar2005','2025-05-05',1,159),(396,'23ita13',NULL,3,159),(397,'22csbw03',NULL,2,155),(398,'dharunkumar2005',NULL,2,159),(399,'dineshbabu6869',NULL,2,153),(400,'dineshbabu6869',NULL,3,153),(401,'naseerahmeds','2025-05-09',1,28),(404,'_shanmu26','2025-05-12',3,162),(405,'Shanmu_11','2025-05-12',1,162),(406,'shaunmugqmqm','2025-05-12',2,162),(407,'22csa17','2025-05-05',1,163),(408,'22cstdcs',NULL,2,163),(409,'kalai7',NULL,3,163),(410,'Tharunikaa_M','2025-05-06',1,42),(411,'tharunikaamanokaran',NULL,3,42),(414,'piruthvin_1201','2025-05-11',1,175),(415,'23ecb38','2025-05-09',3,175),(416,'23ectuw0','2025-05-09',2,175),(417,'VimalrajS1411','2025-05-06',1,170),(419,'https://www.geeksforgeeks.org/user/mariyaishwarya/',NULL,2,178),(420,'https://leetcode.com/u/yPVYePj0JC/',NULL,1,182),(421,'https://codeforces.com/profile/mariyaishwarya',NULL,3,178),(422,'23eca24','2025-05-07',1,166),(423,'https://www.geeksforgeeks.org/user/varshinisri1711/',NULL,2,182),(425,'dharshanar','2025-05-06',1,189),(426,'rdharsh6z2',NULL,2,189),(427,'dharugczq','2025-05-06',2,203),(428,'https://codeforces.com/profile/varshinisri1711',NULL,3,182),(429,'dharshanar',NULL,3,189),(430,'dharsansbl0m',NULL,2,166),(431,'dharu5757','2025-05-06',3,203),(436,'23eca38','2025-05-06',1,217),(440,'psriharini','2025-05-06',1,205),(441,'23itme5s',NULL,2,205),(442,'dharani_0501','2025-05-06',1,203),(443,'2006visithra','2025-05-06',1,229),(444,'visithrarqo3t','2025-05-06',2,229),(445,'KRISHNA_K_00','2025-05-06',1,233),(446,'krishna-kanth143',NULL,2,233),(447,'SRIHARINIP',NULL,3,205),(448,'Hemapriya_2706','2025-05-06',1,234),(450,'krishnathalaks143',NULL,3,233),(451,'Athira09','2025-05-06',1,239),(452,'23csxmc5',NULL,2,230),(453,'csripriya226',NULL,3,230),(454,'Priya_2206',NULL,1,230),(456,'kanishka_20','2025-05-06',1,252),(457,'kanishkak6vvx',NULL,2,252),(458,'https://leetcode.com/profile/',NULL,1,251),(459,'kanishka_20',NULL,3,252),(460,'saleemullah192005',NULL,3,242),(462,'krishnakas7oy',NULL,2,251),(463,'saleemullerux',NULL,2,242),(465,'prathaban',NULL,1,245),(466,'https://leetcode.com/u/niroshini_04/',NULL,1,255),(468,'23csw0wp','2025-05-06',2,239),(469,'Sathana2603','2025-05-06',1,247),(470,'balasundari_s','2025-05-06',1,264),(471,'23CSA03',NULL,1,254),(472,'balasundarib2gpa',NULL,2,264),(473,'hemapriyqe0p','2025-05-06',2,234),(474,'23csym4c',NULL,2,247),(475,'abimani2zbey',NULL,2,254),(476,'balasundari_16',NULL,3,264),(477,'Hemapriya_Mani','2025-05-06',3,234),(478,'Athira06',NULL,3,239),(479,'Jeevi__06','2025-05-06',1,174),(480,'Saleemullah',NULL,1,242),(481,'mjeevitsll3',NULL,2,174),(482,'abimani21052006',NULL,3,254),(483,'jeevadharsan','2025-05-06',1,202),(486,'tgopalakrishnan','2025-05-06',1,168),(488,'Santhiya_s-47','2025-05-06',1,279),(490,'dharsanfw0p',NULL,2,202),(491,'https://leetcode.com/u/ECdpJ7BI3t',NULL,1,226),(492,'23itliyb',NULL,2,279),(493,'santhiya2504',NULL,3,279),(496,'https://www.geeksforgeeks.org/user/23csrf0c/',NULL,2,226),(497,'Nivas107','2025-05-12',1,181),(498,'23eca12','2025-05-06',1,282),(500,'nivas107',NULL,2,181),(501,'Hariprsath','2025-05-06',1,96),(502,'Nivas107',NULL,3,181),(503,'Jeevadharsan_M',NULL,3,202),(504,'2Pbo9FfFq0','2025-05-06',1,188),(506,'Jeevi_21',NULL,3,174),(508,'ArunPrakash_17','2025-05-06',1,260),(509,'23cse49g',NULL,2,260),(510,'Nithish_1718','2025-05-06',1,200),(511,'https://codeforces.com/register/afterRegistration?handle=23csa34',NULL,3,226),(512,'23ec32w6',NULL,2,282),(513,'nigeshsonaimuthu','2025-05-06',1,194),(517,'nithishby22',NULL,2,200),(518,'nigesh3012',NULL,2,194),(519,'Munishankar15','2025-05-06',1,183),(521,'nigeshSonaimuthu',NULL,3,194),(522,'Rajamuthukumarans','2025-05-06',1,187),(523,'dharunprasath1210','2025-05-06',1,173),(524,'23cs505u',NULL,2,183),(525,'yogeshwaran22_','2025-05-06',1,186),(526,'Velan15','2025-05-06',1,288),(527,'Agestin','2025-05-06',1,236),(528,'Srijasrija',NULL,1,258),(529,'dharunprabj0h',NULL,2,173),(530,'Munishankar',NULL,3,183),(531,'Shreyasuresh86','2025-05-06',1,276),(532,'rajamuthuku04ad',NULL,2,187),(533,'sdshreogvw',NULL,2,276),(534,'24lcsa02','2025-05-06',1,98),(535,'hariprasathhq5h',NULL,2,96),(536,'agesti5ob4',NULL,2,236),(537,'24lcsrdxi',NULL,2,98),(539,'Ramachandiran_3122',NULL,1,191),(540,'Rajamuthukumarans',NULL,3,187),(541,'Visithra_R',NULL,3,229),(542,'KAMALAKANNAN_SENTHIL2023','2025-05-06',1,36),(543,'Hariprasathjaganathan',NULL,3,96),(544,'KAMALAKANNAN_SENTHIL','2025-05-06',3,36),(545,'kgdineshka3vss',NULL,2,184),(546,'23csqsvt',NULL,2,218),(547,'dinesh_karthik_k','2025-05-06',1,184),(548,'24lcs9qvf',NULL,2,186),(549,'23csa16','2025-05-06',1,218),(550,'yeswanth366_','2025-05-06',1,180),(551,'23ita24','2025-05-06',2,36),(552,'sdshreya86',NULL,3,276),(553,'23csa16',NULL,3,218),(554,'DineshKarthikdk',NULL,3,184),(555,'Hari4825','2025-05-06',1,228),(556,'varsharaja','2025-05-06',1,278),(557,'dharsh08','2025-05-06',1,259),(558,'sridharzm5w',NULL,2,188),(559,'santhosh046','2025-05-06',1,246),(560,'llokeshku8a21',NULL,2,253),(561,'23csa17',NULL,3,260),(562,'@23cs7rdf',NULL,2,180),(563,'Yogeshwaransornam',NULL,3,186),(564,'05moke3m9u',NULL,2,212),(565,'ramachandta4r',NULL,2,191),(566,'23csb45',NULL,3,188),(567,'23csf1kh',NULL,2,228),(568,'23csb07',NULL,3,212),(569,'dharunprasath1210',NULL,3,173),(570,'thiru_9865','2025-05-07',1,122),(571,'24lcsta3g',NULL,2,246),(572,'nithish171819',NULL,3,200),(573,'23csa36','2025-05-06',1,215),(574,'Lokesh2005',NULL,3,253),(575,'vimal_2005','2025-05-06',1,190),(576,'Agestin',NULL,3,236),(577,'Thiru_x',NULL,3,122),(578,'23csz5ek',NULL,2,215),(579,'Divyanand_2006','2025-05-06',1,248),(580,'yeswanths',NULL,3,180),(581,'anandd1045',NULL,2,248),(582,'23cswbao',NULL,2,168),(583,'nthirh8ao',NULL,2,122),(584,'samuel02b','2025-05-06',1,244),(585,'Divyanand_cse',NULL,3,248),(586,'23csb38',NULL,2,244),(587,'vimal_01',NULL,3,190),(588,'iamajay19','2025-05-06',1,99),(589,'Samuel02b',NULL,3,244),(590,'santhosh046',NULL,3,246),(591,'iamajay19',NULL,2,99),(592,'iamajay19',NULL,3,99),(593,'Gopal_2005',NULL,3,168),(594,'Hari4825',NULL,3,228),(595,'23cs9o36',NULL,2,290),(596,'vimal_14',NULL,2,190),(597,'23csa62','2025-05-06',1,253),(598,'24litobth',NULL,2,219),(600,'yashila09','2025-05-06',1,290),(601,'24lita01',NULL,3,219),(603,'_faisal_rafi',NULL,3,215),(604,'23csa19','2025-05-06',1,221),(605,'Subbiah_7','2025-05-06',1,267),(606,'23cs0gs8',NULL,2,221),(607,'Balaji19',NULL,3,221),(608,'vetrivelan19','2025-05-06',1,224),(609,'lTBHxYIRt2','2025-05-06',1,219),(610,'Maruthu_20','2025-05-06',1,285),(611,'velan15cnsl',NULL,2,288),(612,'vetrivelan',NULL,2,224),(613,'23csb49',NULL,2,267),(614,'dharsana1ruz',NULL,2,259),(616,'23csb55',NULL,3,224),(617,'periya_maruthu_s',NULL,2,285),(618,'23csb48','2025-05-06',1,280),(619,'Muthu_11','2025-05-06',1,249),(620,'23csb20',NULL,3,285),(621,'23cs9fin',NULL,2,280),(622,'RithickRosh','2025-05-06',1,196),(623,'yash0910',NULL,3,290),(624,'23csb11',NULL,2,249),(625,'subbiahdurai',NULL,3,267),(626,'23CSA32','2025-05-06',1,220),(627,'dineshkarumdgg',NULL,2,220),(628,'Haribabu_04_m','2025-05-06',1,299),(629,'Muthu958585',NULL,3,249),(630,'DINESH3161',NULL,3,220),(631,'kavinkupwa1',NULL,2,293),(632,'23csb48',NULL,3,280),(633,'haribabwn4f','2025-05-06',2,299),(634,'kabilkumar_R','2025-05-06',1,301),(635,'Hari_Babu_04','2025-05-06',3,299),(636,'23csyto2',NULL,2,301),(637,'dhanush-1212','2025-05-06',1,296),(638,'rahman1211','2025-05-06',1,193),(639,'23cssmhz',NULL,2,296),(640,'23csa26',NULL,3,296),(641,'rahman1211',NULL,2,193),(642,'rithickpadmst7n',NULL,2,196),(643,'rahman1211',NULL,3,193),(644,'kabil-25',NULL,3,301),(646,'dharsana08',NULL,3,259),(647,'Sunitha_18','2025-05-06',1,283),(648,'sibichandarS','2025-05-06',1,199),(649,'23cs6prz',NULL,2,283),(651,'ASWIN_RAJ_PK',NULL,3,282),(652,'sunitha18',NULL,3,283),(653,'Andrews David',NULL,2,292),(654,'hemavarsy540','2025-05-06',2,278),(655,'sibichandarsha84',NULL,2,199),(656,'vinothraja','2025-05-06',1,50),(657,'vinothoffuu3v','2025-05-06',2,50),(658,'KavinKumar777ar',NULL,3,293),(659,'vinothofficial105',NULL,3,50),(660,'SHRIRAMN30','2025-05-06',1,305),(661,'krithick04',NULL,3,289),(662,'RithickRosh',NULL,3,196),(663,'Harini_2356','2025-05-06',1,209),(664,'07_nivetha_07',NULL,1,298),(665,'shriramaefp',NULL,2,305),(666,'krithick7683','2025-05-15',1,289),(667,'preetha_06','2025-05-06',1,257),(668,'Hemavarsha',NULL,3,278),(669,'nishanivetha07',NULL,3,298),(670,'shriram3011',NULL,3,305),(671,'kavinkumar_A_R','2025-05-06',1,293),(672,'https://leetcode.com/u/Harsha-ash19/',NULL,1,297),(673,'nishaniv3e72',NULL,2,298),(674,'harinimeqnha','2025-05-06',2,209),(675,'Sibichandar_S2005',NULL,3,199),(676,'https://leetcode.com/u/Kanyaka05/',NULL,1,176),(677,'Shriram_904286',NULL,1,237),(678,'SanjayKing31','2025-05-06',1,306),(679,'https://leetcode.com/u/ABISHEKUK/',NULL,1,171),(680,'23csb42',NULL,2,237),(681,'Shriram773',NULL,3,237),(682,'23csb46','2025-05-06',1,195),(683,'23cslo3l',NULL,2,195),(684,'thavasimaruthu','2025-05-06',1,307),(685,'Umakarthika','2025-05-06',1,308),(686,'23csb46',NULL,3,195),(687,'kingsanj61v6',NULL,2,306),(688,'umakarthikeyed',NULL,2,308),(689,'iamthava4tvf','2025-05-06',2,307),(690,'24lcsb02',NULL,3,308),(691,'https://www.geeksforgeeks.org/user/rharshavardh1vs0/',NULL,2,297),(692,'https://www.geeksforgeeks.org/user/abishekwbk9/',NULL,2,171),(693,'Sanjayking31',NULL,3,306),(694,'VISHAL061','2025-05-06',1,309),(695,'23csb40','2025-05-06',1,207),(696,'23csmzdz',NULL,2,207),(697,'vishalramacpb82','2025-05-06',2,309),(698,'23csb50','2025-05-06',1,223),(699,'23csb40',NULL,3,207),(700,'23csi6ih',NULL,2,223),(701,'FHVzJ7f7Il','2025-05-06',1,292),(702,'23csmp4e',NULL,2,176),(703,'https://leetcode.com/u/5sX9mLrJqY/',NULL,1,227),(704,'23csb01',NULL,3,214),(705,'23csb01','2025-05-06',1,214),(706,'Manieshakumar','2025-05-06',1,261),(707,'Poopash_prasath','2025-05-06',1,213),(708,'23csvfvq',NULL,2,214),(709,'23csb50',NULL,3,223),(710,'kumarman3w8t','2025-05-06',2,261),(711,'maniesha24',NULL,3,261),(713,'monija226','2025-05-06',1,302),(714,'thavasi8667',NULL,3,307),(715,'Vishal1005',NULL,3,309),(716,'https://codeforces.com/profile/Abishek_007',NULL,3,171),(717,'suganesh_0704','2025-05-06',1,210),(718,'23csifvb',NULL,2,210),(719,'https://leetcode.com/u/kZhJH5oyiF/',NULL,1,241),(720,'23csb51',NULL,3,210),(721,'https://codeforces.com/register/afterRegistration?handle=23csa37',NULL,3,227),(722,'23csb21',NULL,3,213),(723,'23cs6cwu',NULL,2,213),(725,'Vignesh24905','2025-05-06',1,311),(726,'https://codeforces.com/register/confirmation?handle=Kanyaka05',NULL,3,176),(727,'Avinaskumar','2025-05-06',1,313),(728,'vigneshfi2u',NULL,2,311),(729,'https://codeforces.com/profile/harsha_777',NULL,3,297),(730,'https://codeforces.com/register/afterRegistration?handle=23csb08',NULL,3,241),(731,'22csa36','2025-05-06',1,316),(732,'muthucsjl7',NULL,2,316),(733,'Ruthramoorthi-2216',NULL,1,315),(734,'23itbydm','2025-05-06',2,313),(735,'muthu76432',NULL,3,316),(736,'monijav9',NULL,2,302),(738,'https://www.geeksforgeeks.org/user/23cskimf/',NULL,2,241),(739,'https://www.geeksforgeeks.org/user/23cs00y5/',NULL,2,227),(740,'vignesh24905',NULL,3,311),(742,'Avinaskumar',NULL,3,313),(743,'https://leetcode.com/u/Ay9y7ioZTm/',NULL,1,266),(744,'Hemavasagam','2025-05-06',1,314),(745,'https://www.geeksforgeeks.org/user/23cs3lfw/',NULL,2,266),(746,'https://codeforces.com/register/afterRegistration?handle=23csa24',NULL,3,266),(747,'https://leetcode.com/u/mohanabharathi06/',NULL,1,284),(748,'https://leetcode.com/u/Mahalakshmi_kalaiyarasan/',NULL,1,127),(749,'Hemavasagam',NULL,3,314),(750,'22cspagp',NULL,2,127),(751,'23csqkqb',NULL,2,314),(752,'Harini_236',NULL,1,318),(753,'gryffindopzg7',NULL,2,318),(754,'mohanabhaunj8',NULL,2,284),(755,'Harini_23',NULL,3,318),(756,'guru_vishnu','2025-05-06',1,161),(757,'Guruvishnu27',NULL,3,161),(758,'guru_vishnu',NULL,2,161),(759,'https://codeforces.com/register/afterRegistration?handle=MahalakshmiKalaiyarasan',NULL,3,127),(760,'https://codeforces.com/register/afterRegistration?handle=Sowmiya_Selvakumar',NULL,3,319),(761,'https://www.geeksforgeeks.org/user/22ec4x3q/',NULL,2,319),(762,'Yogesh_The_Coder','2025-05-06',1,232),(763,'https://leetcode.com/u/SowmiyaSelvakumar/',NULL,1,319),(764,'http://geeksforgeeks.org/user/prakashamsricuzfb/',NULL,2,320),(765,'yogeshperu35n',NULL,2,232),(766,'https://leetcode.com/profile/',NULL,1,320),(767,'Yogeshhhh',NULL,3,232),(769,'72000','2025-05-06',1,317),(770,'23itkgoa',NULL,2,317),(771,'sudharsing',NULL,3,317),(772,'EFSlqgp3M6','2025-05-06',1,323),(774,'chandrumuin2r',NULL,2,323),(775,'Chan_08',NULL,3,323),(776,'bhavani_b08','2025-05-06',1,322),(777,'bhavani_b08','2025-05-06',2,322),(778,'https://codeforces.com/enter?back=%2Fregister%2FafterRegistration%3Fhandle%3Dmohanabharathia2',NULL,3,284),(779,'manikandan04',NULL,3,222),(780,'msr96e2da',NULL,2,222),(781,'bhavani_08',NULL,3,322),(782,'https://www.geeksforgeeks.org/user/23it8khq/',NULL,2,255),(783,'https://www.geeksforgeeks.org/user/23it8khq/',NULL,3,255),(786,'MFOoOOSIHl','2025-05-06',1,325),(787,'yadhuvara1ipy',NULL,2,325),(788,'yadhu08',NULL,3,325),(789,'Joyal_69','2025-05-06',1,327),(790,'Madhumitha_24',NULL,3,58),(791,'22cswjed',NULL,2,327),(792,'22csa16',NULL,3,327),(793,'https://leetcode.com/u/ZdzbHr4NnB/',NULL,1,240),(794,'https://www.geeksforgeeks.org/user/rubasrzi7h/',NULL,2,240),(797,'viswa200505',NULL,1,324),(798,'https://codeforces.com/register/afterRegistration?handle=rubasri.895',NULL,3,240),(799,'djvisdgdx',NULL,2,324),(800,'madhumitha2402','2025-05-06',1,58),(801,'viswa05',NULL,3,324),(802,'Kanika_Suresh17',NULL,3,326),(803,'DineshES',NULL,1,330),(804,'Keerthanag2005','2025-05-06',1,310),(805,'kanika17suresh','2025-05-06',1,326),(806,'23adwoow','2025-05-06',2,326),(807,'ggkeertym8h',NULL,2,310),(809,'abinaya_2295','2025-05-06',1,328),(810,'abinaya__2295','2025-05-06',2,328),(811,'jothiabi00',NULL,3,328),(812,'keerthana242',NULL,3,310),(813,'23ecc26','2025-05-06',1,333),(814,'23ecddq5',NULL,2,333),(815,'23ecc26',NULL,3,333),(816,'Deva_sri_57',NULL,1,331),(817,'devasri_57',NULL,2,331),(818,'devasri_57',NULL,3,331),(819,'deva9909','2025-05-06',1,216),(820,'iamdharsp2d0','2025-05-06',2,216),(821,'deva_saravanan',NULL,3,216),(822,'iswarya21','2025-05-06',1,225),(823,'ishuwarr3rhe',NULL,2,225),(824,'ishuwarrior506',NULL,3,225),(825,'Shamshekhar0','2025-05-06',1,90),(827,'https://leetcode.com/u/NnfXeER6Va/',NULL,1,337),(828,'22itw4w8','2025-05-06',2,41),(829,'https://www.geeksforgeeks.org/user/nivethakau4ju/',NULL,2,337),(830,'shamshekhar','2025-05-06',2,90),(831,'https://codeforces.com/register/afterRegistration?handle=Nivethakamaraj',NULL,3,337),(832,'shamshekhar','2025-05-06',3,90),(833,'atsthasneem',NULL,3,41),(834,'Thasneem_2004','2025-05-06',1,41),(835,'https://leetcode.com/u/uz7KKWIf1k/',NULL,1,341),(836,'https://www.geeksforgeeks.org/user/lavanya2006/',NULL,2,341),(837,'https://codeforces.com/profile/LavanyaRamachandran',NULL,3,341),(838,'prasath123','2025-05-06',1,150),(839,'sarubalasaru','2025-05-06',1,339),(840,'saruba786f',NULL,2,339),(841,'sarubala',NULL,3,339),(842,'kyuvaprasiax1',NULL,2,150),(843,'Yuva_123',NULL,3,150),(844,'Santhuru_V','2025-05-06',1,54),(845,'22ad0zcx','2025-05-06',2,54),(846,'Santhuru',NULL,3,54),(847,'22csa07','2025-05-06',1,149),(848,'aswinkiswouk',NULL,2,149),(849,'22csa07',NULL,3,149),(850,'23csa23','2025-05-06',1,342),(851,'23cs4h6w',NULL,2,342),(852,'23csa23',NULL,3,342),(853,'https://leetcode.com/u/krishnaveni2617/',NULL,1,344),(854,'https://www.geeksforgeeks.org/user/23ecdh5z/',NULL,2,344),(855,'https://codeforces.com/register/afterRegistration?handle=23ecb04',NULL,3,344),(856,'naotAgr089','2025-05-06',1,345),(857,'23ecyk24',NULL,2,345),(858,'Rajeshjr23','2025-05-06',1,346),(859,'23admde9',NULL,2,346),(860,'Rajesh_selva',NULL,3,346),(861,'Agilan_15','2025-05-06',1,134),(862,'agilanagnozl','2025-05-06',2,134),(863,'agilanagilan444','2025-05-06',3,134),(864,'sharo_fiya',NULL,3,345),(865,'https://leetcode.com/u/Mariya_Ishwarya/',NULL,1,178),(866,'tnzER8FtTP','2025-05-06',1,329),(867,'23csdk4x',NULL,2,329),(868,'https://codeforces.com/profile/Aniruthra',NULL,3,329),(869,'bbharani822',NULL,3,204),(870,'bbharanrtf',NULL,2,204),(871,'PgvxNRZQml','2025-05-06',1,204),(872,'https://leetcode.com/u/vishnuvarma_17/',NULL,1,349),(873,'23itmgri',NULL,2,349),(874,'Ram-DA','2025-05-06',1,350),(875,'varma_17',NULL,3,349),(876,'23adxcnt',NULL,2,350),(877,'rammeee',NULL,3,350),(878,'roopasree1607','2025-05-06',1,62),(879,'Roopa_Sree_1607','2025-05-06',3,62),(880,'roopasrzjfe','2025-05-06',2,62),(881,'savitha_2005','2025-05-06',1,353),(882,'23ecqjvu',NULL,2,353),(884,'savitha_2005',NULL,3,353),(885,'22csa13',NULL,1,354),(886,'22csa13',NULL,3,354),(887,'22csu31c',NULL,2,354),(888,'vXhnwUC2gm','2025-05-06',1,355),(889,'ammusurtcahg',NULL,2,355),(891,'suruthika_2005',NULL,3,355),(892,'23ecqnhw',NULL,2,352),(893,'Rithika_2006',NULL,3,352),(894,'Rithikashree_S','2025-05-06',1,352),(895,'srija025nx3',NULL,2,258),(896,'Cowsican','2025-05-06',1,358),(898,'KAMALESH3021','2025-05-06',1,52),(899,'srijaM',NULL,3,258),(900,'Saravanan_3627','2025-05-06',1,359),(902,'Cowsican',NULL,2,358),(903,'Cowsican',NULL,3,358),(905,'Anuja_kumaresan','2025-05-06',1,360),(906,'23itjg3n',NULL,2,359),(907,'saravanan_18',NULL,3,359),(908,'Anuja.k','2025-05-06',3,360),(909,'anujakumplej',NULL,2,360),(910,'https://codeforces.com/profile/RamyaMurugan',NULL,3,148),(911,'https://leetcode.com/u/23ita22/',NULL,1,357),(912,'https://www.geeksforgeeks.org/user/23ita22/',NULL,2,357),(914,'https://codeforces.com/register/afterRegistration?handle=23ita22',NULL,3,357),(916,'23csb03',NULL,1,235),(917,'23csht6i',NULL,2,235),(918,'23csb03',NULL,3,235),(919,'abiexx__','2025-05-07',1,362),(921,'23ita03',NULL,3,362),(922,'23it77cg',NULL,2,362),(923,'dharsansibi0110',NULL,3,166),(924,'23ita08','2025-05-07',1,364),(925,'23itscfs',NULL,2,364),(926,'23ita08',NULL,3,364),(927,'Mugesh_Anbazhagan','2025-05-08',1,27),(928,'mugesh_anbazhagan','2025-05-08',2,27),(929,'anbazhaganmugesh',NULL,3,27),(930,'MToAFqChzV',NULL,1,365),(931,'23ecbcvk',NULL,2,365),(932,'vivin_arul',NULL,3,365),(933,'https://leetcode.com/u/mohanabharathi06/',NULL,1,198),(934,'https://www.geeksforgeeks.org/user/mohanabhaunj8/',NULL,2,198),(935,'https://codeforces.com/profile/mohanabharathi25',NULL,3,198),(939,'https://leetcode.com/problemset/',NULL,1,367),(940,'https://www.geeksforgeeks.org/',NULL,2,367),(941,'https://codeforces.com/profile/23ecb32',NULL,3,367),(943,'23ec5nop',NULL,2,368),(944,'selva_1525',NULL,3,368),(945,'7FY0CmcUsx','2025-05-09',1,368),(946,'23ecw77c',NULL,2,369),(947,'Kasi_Nathan-3269','2025-05-10',1,369),(948,'Kasi_Nathan-3269',NULL,3,369),(949,'23ec6f45',NULL,2,370),(950,'gowri282006','2025-05-10',1,370),(951,'23eca41',NULL,3,370),(952,'Akshaya s',NULL,1,371),(953,'23ecypss',NULL,2,371),(954,'Akshaya_S',NULL,3,371),(955,'manikandan4',NULL,1,222),(957,'Dharshini_2_5','2025-05-10',1,373),(958,'dharshini010506','2025-05-10',2,373),(959,'Dharshini_17','2025-05-10',3,373),(960,'https://leetcode.com/u/Ezhilarasan0369/',NULL,1,372),(961,'https://www.geeksforgeeks.org/user/ezhilarasan0369/',NULL,2,372),(962,'https://codeforces.com/profile/ezhilarasan0369',NULL,3,372),(963,'Sudharsan452','2025-05-10',1,160),(964,'sudharsan452',NULL,2,160),(965,'Sudharsan452',NULL,3,160),(966,'krithif6i9','2025-05-15',2,289),(967,'mokeshwar05','2025-05-18',1,212),(968,'sanjay_1623','2025-05-13',1,334),(969,'23itvo5j',NULL,2,334),(970,'sanjay_2316',NULL,3,334);
/*!40000 ALTER TABLE `track_user_handle` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-05-30 11:51:00
